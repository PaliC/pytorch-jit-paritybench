#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_convolution_mean_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4.000000e+00> : tensor<64xf32, #blocked> loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<64> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<16> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<32> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<48> : tensor<64xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_0 : tensor<64xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_1 : tensor<64xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_1 : tensor<64xi32, #blocked> loc(#loc8)
    %8 = arith.muli %7, %cst_0 : tensor<64xi32, #blocked> loc(#loc9)
    %9 = arith.addi %6, %8 : tensor<64xi32, #blocked> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc11)
    %12 = tt.load %11, %5 : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc13)
    %14 = tt.load %13 : !tt.ptr<f32> loc(#loc14)
    %15 = tt.splat %14 : f32 -> tensor<64xf32, #blocked> loc(#loc15)
    %16 = arith.addi %6, %cst_1 : tensor<64xi32, #blocked> loc(#loc16)
    %17 = arith.addi %16, %8 : tensor<64xi32, #blocked> loc(#loc17)
    %18 = tt.addptr %10, %17 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc18)
    %19 = tt.load %18, %5 : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc19)
    %20 = tt.addptr %arg1, %c1_i32 : !tt.ptr<f32>, i32 loc(#loc20)
    %21 = tt.load %20 : !tt.ptr<f32> loc(#loc21)
    %22 = tt.splat %21 : f32 -> tensor<64xf32, #blocked> loc(#loc22)
    %23 = arith.addi %6, %cst_2 : tensor<64xi32, #blocked> loc(#loc23)
    %24 = arith.addi %23, %8 : tensor<64xi32, #blocked> loc(#loc24)
    %25 = tt.addptr %10, %24 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc25)
    %26 = tt.load %25, %5 : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc26)
    %27 = tt.addptr %arg1, %c2_i32 : !tt.ptr<f32>, i32 loc(#loc27)
    %28 = tt.load %27 : !tt.ptr<f32> loc(#loc28)
    %29 = tt.splat %28 : f32 -> tensor<64xf32, #blocked> loc(#loc29)
    %30 = arith.addi %6, %cst_3 : tensor<64xi32, #blocked> loc(#loc30)
    %31 = arith.addi %30, %8 : tensor<64xi32, #blocked> loc(#loc31)
    %32 = tt.addptr %10, %31 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc32)
    %33 = tt.load %32, %5 : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc33)
    %34 = tt.addptr %arg1, %c3_i32 : !tt.ptr<f32>, i32 loc(#loc34)
    %35 = tt.load %34 : !tt.ptr<f32> loc(#loc35)
    %36 = tt.splat %35 : f32 -> tensor<64xf32, #blocked> loc(#loc36)
    %37 = arith.addf %12, %15 : tensor<64xf32, #blocked> loc(#loc37)
    %38 = arith.addf %19, %22 : tensor<64xf32, #blocked> loc(#loc38)
    %39 = arith.addf %37, %38 : tensor<64xf32, #blocked> loc(#loc39)
    %40 = arith.addf %26, %29 : tensor<64xf32, #blocked> loc(#loc40)
    %41 = arith.addf %39, %40 : tensor<64xf32, #blocked> loc(#loc41)
    %42 = arith.addf %33, %36 : tensor<64xf32, #blocked> loc(#loc42)
    %43 = arith.addf %41, %42 : tensor<64xf32, #blocked> loc(#loc43)
    %44 = arith.divf %43, %cst : tensor<64xf32, #blocked> loc(#loc44)
    %45 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc45)
    %46 = tt.addptr %45, %4 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc45)
    tt.store %46, %44, %5 : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc46)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":21:28)
#loc3 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":21:33)
#loc4 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":22:36)
#loc5 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":22:23)
#loc6 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":23:21)
#loc7 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":24:19)
#loc8 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":25:19)
#loc9 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":27:38)
#loc10 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":27:35)
#loc11 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":27:30)
#loc12 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":27:43)
#loc13 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":28:30)
#loc14 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":28:19)
#loc15 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":29:33)
#loc16 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":30:35)
#loc17 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":30:40)
#loc18 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":30:30)
#loc19 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":30:48)
#loc20 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":31:30)
#loc21 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":31:19)
#loc22 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":32:33)
#loc23 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":33:35)
#loc24 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":33:40)
#loc25 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":33:30)
#loc26 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":33:48)
#loc27 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":34:31)
#loc28 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":34:20)
#loc29 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":35:35)
#loc30 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":36:36)
#loc31 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":36:41)
#loc32 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":36:31)
#loc33 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":36:49)
#loc34 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":37:31)
#loc35 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":37:20)
#loc36 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":38:35)
#loc37 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":39:18)
#loc38 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":40:18)
#loc39 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":41:18)
#loc40 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":42:19)
#loc41 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":43:19)
#loc42 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":44:20)
#loc43 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":45:20)
#loc44 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":47:20)
#loc45 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":48:25)
#loc46 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":48:37)
#loc47 = loc("inductor_cache/fi/cfimwserwqcxfgmrjecyixkczyqhpn2grntcz3xx6akqx5fjvisq.py":48:4)
