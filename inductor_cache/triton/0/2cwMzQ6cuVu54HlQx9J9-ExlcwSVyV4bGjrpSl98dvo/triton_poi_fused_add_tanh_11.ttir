#loc = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":19:0)
module {
  tt.func public @triton_poi_fused_add_tanh_11(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":19:0)) attributes {noinline = false} {
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst = arith.constant dense<65536> : tensor<1x1024xi32> loc(#loc1)
    %cst_0 = arith.constant dense<256> : tensor<1x1024xi32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<1024xi32> -> tensor<1x1024xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x1024xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x1024xi32> loc(#loc6)
    %6 = tt.get_program_id x : i32 loc(#loc7)
    %7 = arith.cmpi slt, %6, %c256_i32 : i32 loc(#loc8)
    %8 = arith.remsi %5, %cst_0 : tensor<1x1024xi32> loc(#loc9)
    %9 = arith.divsi %5, %cst_0 : tensor<1x1024xi32> loc(#loc10)
    %10 = arith.muli %5, %cst_0 : tensor<1x1024xi32> loc(#loc11)
    %11 = tt.splat %6 : i32 -> tensor<1x1024xi32> loc(#loc12)
    %12 = arith.addi %11, %10 : tensor<1x1024xi32> loc(#loc12)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc13)
    %14 = tt.addptr %13, %12 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc13)
    %15 = tt.splat %7 : i1 -> tensor<1x1024xi1> loc(#loc14)
    %16 = tt.load %14, %15 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>> loc(#loc14)
    %17 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc15)
    %18 = tt.addptr %17, %12 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc15)
    %19 = tt.load %18, %15 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>> loc(#loc16)
    %20 = arith.addf %16, %19 : tensor<1x1024xf32> loc(#loc17)
    %21 = tt.extern_elementwise %20 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<1x1024xf32>) -> tensor<1x1024xf32> loc(#loc18)
    %22 = arith.muli %6, %c256_i32 : i32 loc(#loc19)
    %23 = tt.splat %22 : i32 -> tensor<1x1024xi32> loc(#loc20)
    %24 = arith.addi %8, %23 : tensor<1x1024xi32> loc(#loc20)
    %25 = arith.muli %9, %cst : tensor<1x1024xi32> loc(#loc21)
    %26 = arith.addi %24, %25 : tensor<1x1024xi32> loc(#loc22)
    %27 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc23)
    %28 = tt.addptr %27, %26 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc23)
    tt.store %28, %21, %15 : tensor<1x1024x!tt.ptr<f32>> loc(#loc24)
    tt.return loc(#loc25)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":22:28)
#loc3 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":22:33)
#loc4 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":23:36)
#loc5 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":23:44)
#loc6 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":23:23)
#loc7 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":25:28)
#loc8 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":27:21)
#loc9 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":30:19)
#loc10 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":31:19)
#loc11 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":32:39)
#loc12 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":32:35)
#loc13 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":32:30)
#loc14 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":32:44)
#loc15 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":33:30)
#loc16 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":33:44)
#loc17 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":34:18)
#loc18 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":35:26)
#loc19 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":36:34)
#loc20 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":36:30)
#loc21 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":36:45)
#loc22 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":36:39)
#loc23 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":36:25)
#loc24 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":36:56)
#loc25 = loc("inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py":36:4)
