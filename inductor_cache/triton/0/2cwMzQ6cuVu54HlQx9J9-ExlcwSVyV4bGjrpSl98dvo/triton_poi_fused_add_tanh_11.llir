; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_tanh_11(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %7 = shl i32 %6, 10, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %9, 128, !dbg !12
  %11 = or disjoint i32 %9, 256, !dbg !12
  %12 = or disjoint i32 %9, 384, !dbg !12
  %13 = or disjoint i32 %9, 512, !dbg !12
  %14 = or disjoint i32 %9, 640, !dbg !12
  %15 = or disjoint i32 %9, 768, !dbg !12
  %16 = or disjoint i32 %9, 896, !dbg !12
  %17 = or disjoint i32 %7, %9, !dbg !13
  %18 = or disjoint i32 %7, %10, !dbg !13
  %19 = or disjoint i32 %7, %11, !dbg !13
  %20 = or disjoint i32 %7, %12, !dbg !13
  %21 = or disjoint i32 %7, %13, !dbg !13
  %22 = or disjoint i32 %7, %14, !dbg !13
  %23 = or disjoint i32 %7, %15, !dbg !13
  %24 = or disjoint i32 %7, %16, !dbg !13
  %25 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !14
  %26 = icmp slt i32 %25, 256, !dbg !15
  %27 = shl i32 %17, 8, !dbg !16
  %28 = shl i32 %18, 8, !dbg !16
  %29 = shl i32 %19, 8, !dbg !16
  %30 = shl i32 %20, 8, !dbg !16
  %31 = shl i32 %21, 8, !dbg !16
  %32 = shl i32 %22, 8, !dbg !16
  %33 = shl i32 %23, 8, !dbg !16
  %34 = shl i32 %24, 8, !dbg !16
  %35 = add i32 %27, %25, !dbg !17
  %36 = add i32 %28, %25, !dbg !17
  %37 = add i32 %29, %25, !dbg !17
  %38 = add i32 %30, %25, !dbg !17
  %39 = add i32 %31, %25, !dbg !17
  %40 = add i32 %32, %25, !dbg !17
  %41 = add i32 %33, %25, !dbg !17
  %42 = add i32 %34, %25, !dbg !17
  %43 = sext i32 %35 to i64, !dbg !18
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !18
  %45 = sext i32 %36 to i64, !dbg !18
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !18
  %47 = sext i32 %37 to i64, !dbg !18
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !18
  %49 = sext i32 %38 to i64, !dbg !18
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !18
  %51 = sext i32 %39 to i64, !dbg !18
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !18
  %53 = sext i32 %40 to i64, !dbg !18
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !18
  %55 = sext i32 %41 to i64, !dbg !18
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !18
  %57 = sext i32 %42 to i64, !dbg !18
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !18
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %26) #4, !dbg !19
  %60 = bitcast i32 %59 to float, !dbg !19
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %26) #4, !dbg !19
  %62 = bitcast i32 %61 to float, !dbg !19
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %26) #4, !dbg !19
  %64 = bitcast i32 %63 to float, !dbg !19
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %26) #4, !dbg !19
  %66 = bitcast i32 %65 to float, !dbg !19
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %26) #4, !dbg !19
  %68 = bitcast i32 %67 to float, !dbg !19
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 %26) #4, !dbg !19
  %70 = bitcast i32 %69 to float, !dbg !19
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %26) #4, !dbg !19
  %72 = bitcast i32 %71 to float, !dbg !19
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 %26) #4, !dbg !19
  %74 = bitcast i32 %73 to float, !dbg !19
  %75 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !20
  %76 = getelementptr float, ptr addrspace(1) %1, i64 %45, !dbg !20
  %77 = getelementptr float, ptr addrspace(1) %1, i64 %47, !dbg !20
  %78 = getelementptr float, ptr addrspace(1) %1, i64 %49, !dbg !20
  %79 = getelementptr float, ptr addrspace(1) %1, i64 %51, !dbg !20
  %80 = getelementptr float, ptr addrspace(1) %1, i64 %53, !dbg !20
  %81 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !20
  %82 = getelementptr float, ptr addrspace(1) %1, i64 %57, !dbg !20
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 %26) #4, !dbg !21
  %84 = bitcast i32 %83 to float, !dbg !21
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %76, i1 %26) #4, !dbg !21
  %86 = bitcast i32 %85 to float, !dbg !21
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %77, i1 %26) #4, !dbg !21
  %88 = bitcast i32 %87 to float, !dbg !21
  %89 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %78, i1 %26) #4, !dbg !21
  %90 = bitcast i32 %89 to float, !dbg !21
  %91 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %79, i1 %26) #4, !dbg !21
  %92 = bitcast i32 %91 to float, !dbg !21
  %93 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 %26) #4, !dbg !21
  %94 = bitcast i32 %93 to float, !dbg !21
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %81, i1 %26) #4, !dbg !21
  %96 = bitcast i32 %95 to float, !dbg !21
  %97 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %82, i1 %26) #4, !dbg !21
  %98 = bitcast i32 %97 to float, !dbg !21
  %99 = fadd float %60, %84, !dbg !22
  %100 = fadd float %62, %86, !dbg !22
  %101 = fadd float %64, %88, !dbg !22
  %102 = fadd float %66, %90, !dbg !22
  %103 = fadd float %68, %92, !dbg !22
  %104 = fadd float %70, %94, !dbg !22
  %105 = fadd float %72, %96, !dbg !22
  %106 = fadd float %74, %98, !dbg !22
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i = icmp eq i32 %107, 0, !dbg !23
  %108 = tail call float @llvm.nvvm.fabs.ftz.f(float %99) #4, !dbg !23
  %109 = tail call float @llvm.nvvm.fabs.f(float %99) #4, !dbg !23
  %.01.i = select i1 %.not.i, float %109, float %108, !dbg !23
  %110 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !23
  br i1 %110, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !23

__internal_fmad.exit1.i:                          ; preds = %5
  %111 = fmul float %.01.i, 0x4007154760000000, !dbg !23
  %112 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %111) #4, !dbg !23
  %113 = fadd float %112, 1.000000e+00, !dbg !23
  %114 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %113) #5, !dbg !23, !srcloc !24
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i = icmp eq i32 %115, 0, !dbg !23
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %114, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %117 = tail call float @llvm.nvvm.fma.rn.f(float %114, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %.03.i = select i1 %.not6.i, float %117, float %116, !dbg !23
  %118 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !23
  %s.0.i = select i1 %118, float 1.000000e+00, float %.03.i, !dbg !23
  %119 = bitcast float %s.0.i to i32, !dbg !23
  %120 = bitcast float %99 to i32, !dbg !23
  %121 = and i32 %120, -2147483648, !dbg !23
  %122 = or i32 %121, %119, !dbg !23
  %123 = bitcast i32 %122 to float, !dbg !23
  br label %__nv_tanhf.exit, !dbg !23

__internal_fmad.exit3.i:                          ; preds = %5
  %124 = fmul float %99, %99, !dbg !23
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i = icmp eq i32 %125, 0, !dbg !23
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %124, float 0xBFAAC795C0000000) #4, !dbg !23
  %127 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %124, float 0xBFAAC795C0000000) #4, !dbg !23
  %.06.i = select i1 %.not1.i, float %127, float %126, !dbg !23
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i = icmp eq i32 %128, 0, !dbg !23
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %124, float 0x3FC10B2820000000) #4, !dbg !23
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %124, float 0x3FC10B2820000000) #4, !dbg !23
  %.05.i = select i1 %.not2.i, float %130, float %129, !dbg !23
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i = icmp eq i32 %131, 0, !dbg !23
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %124, float 0xBFD5553DA0000000) #4, !dbg !23
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %124, float 0xBFD5553DA0000000) #4, !dbg !23
  %.0.i = select i1 %.not3.i, float %133, float %132, !dbg !23
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i = icmp eq i32 %134, 0, !dbg !23
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %124, float 0.000000e+00) #4, !dbg !23
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %124, float 0.000000e+00) #4, !dbg !23
  %.04.i = select i1 %.not4.i, float %136, float %135, !dbg !23
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i = icmp eq i32 %137, 0, !dbg !23
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %99, float %99) #4, !dbg !23
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %99, float %99) #4, !dbg !23
  %.02.i = select i1 %.not5.i, float %139, float %138, !dbg !23
  br label %__nv_tanhf.exit, !dbg !23

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %123, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !23
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i15 = icmp eq i32 %140, 0, !dbg !23
  %141 = tail call float @llvm.nvvm.fabs.ftz.f(float %100) #4, !dbg !23
  %142 = tail call float @llvm.nvvm.fabs.f(float %100) #4, !dbg !23
  %.01.i16 = select i1 %.not.i15, float %142, float %141, !dbg !23
  %143 = fcmp ult float %.01.i16, 0x3FE3333340000000, !dbg !23
  br i1 %143, label %__internal_fmad.exit3.i22, label %__internal_fmad.exit1.i17, !dbg !23

__internal_fmad.exit1.i17:                        ; preds = %__nv_tanhf.exit
  %144 = fmul float %.01.i16, 0x4007154760000000, !dbg !23
  %145 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %144) #4, !dbg !23
  %146 = fadd float %145, 1.000000e+00, !dbg !23
  %147 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %146) #5, !dbg !23, !srcloc !24
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i18 = icmp eq i32 %148, 0, !dbg !23
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %147, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %147, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %.03.i19 = select i1 %.not6.i18, float %150, float %149, !dbg !23
  %151 = fcmp oge float %.01.i16, 0x4022059680000000, !dbg !23
  %s.0.i20 = select i1 %151, float 1.000000e+00, float %.03.i19, !dbg !23
  %152 = bitcast float %s.0.i20 to i32, !dbg !23
  %153 = bitcast float %100 to i32, !dbg !23
  %154 = and i32 %153, -2147483648, !dbg !23
  %155 = or i32 %154, %152, !dbg !23
  %156 = bitcast i32 %155 to float, !dbg !23
  br label %__nv_tanhf.exit33, !dbg !23

__internal_fmad.exit3.i22:                        ; preds = %__nv_tanhf.exit
  %157 = fmul float %100, %100, !dbg !23
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i23 = icmp eq i32 %158, 0, !dbg !23
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %157, float 0xBFAAC795C0000000) #4, !dbg !23
  %160 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %157, float 0xBFAAC795C0000000) #4, !dbg !23
  %.06.i24 = select i1 %.not1.i23, float %160, float %159, !dbg !23
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i25 = icmp eq i32 %161, 0, !dbg !23
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i24, float %157, float 0x3FC10B2820000000) #4, !dbg !23
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i24, float %157, float 0x3FC10B2820000000) #4, !dbg !23
  %.05.i26 = select i1 %.not2.i25, float %163, float %162, !dbg !23
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i27 = icmp eq i32 %164, 0, !dbg !23
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i26, float %157, float 0xBFD5553DA0000000) #4, !dbg !23
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i26, float %157, float 0xBFD5553DA0000000) #4, !dbg !23
  %.0.i28 = select i1 %.not3.i27, float %166, float %165, !dbg !23
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i29 = icmp eq i32 %167, 0, !dbg !23
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i28, float %157, float 0.000000e+00) #4, !dbg !23
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i28, float %157, float 0.000000e+00) #4, !dbg !23
  %.04.i30 = select i1 %.not4.i29, float %169, float %168, !dbg !23
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i31 = icmp eq i32 %170, 0, !dbg !23
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i30, float %100, float %100) #4, !dbg !23
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i30, float %100, float %100) #4, !dbg !23
  %.02.i32 = select i1 %.not5.i31, float %172, float %171, !dbg !23
  br label %__nv_tanhf.exit33, !dbg !23

__nv_tanhf.exit33:                                ; preds = %__internal_fmad.exit1.i17, %__internal_fmad.exit3.i22
  %s.1.i21 = phi float [ %156, %__internal_fmad.exit1.i17 ], [ %.02.i32, %__internal_fmad.exit3.i22 ], !dbg !23
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i34 = icmp eq i32 %173, 0, !dbg !23
  %174 = tail call float @llvm.nvvm.fabs.ftz.f(float %101) #4, !dbg !23
  %175 = tail call float @llvm.nvvm.fabs.f(float %101) #4, !dbg !23
  %.01.i35 = select i1 %.not.i34, float %175, float %174, !dbg !23
  %176 = fcmp ult float %.01.i35, 0x3FE3333340000000, !dbg !23
  br i1 %176, label %__internal_fmad.exit3.i41, label %__internal_fmad.exit1.i36, !dbg !23

__internal_fmad.exit1.i36:                        ; preds = %__nv_tanhf.exit33
  %177 = fmul float %.01.i35, 0x4007154760000000, !dbg !23
  %178 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %177) #4, !dbg !23
  %179 = fadd float %178, 1.000000e+00, !dbg !23
  %180 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %179) #5, !dbg !23, !srcloc !24
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i37 = icmp eq i32 %181, 0, !dbg !23
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %180, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %180, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %.03.i38 = select i1 %.not6.i37, float %183, float %182, !dbg !23
  %184 = fcmp oge float %.01.i35, 0x4022059680000000, !dbg !23
  %s.0.i39 = select i1 %184, float 1.000000e+00, float %.03.i38, !dbg !23
  %185 = bitcast float %s.0.i39 to i32, !dbg !23
  %186 = bitcast float %101 to i32, !dbg !23
  %187 = and i32 %186, -2147483648, !dbg !23
  %188 = or i32 %187, %185, !dbg !23
  %189 = bitcast i32 %188 to float, !dbg !23
  br label %__nv_tanhf.exit52, !dbg !23

__internal_fmad.exit3.i41:                        ; preds = %__nv_tanhf.exit33
  %190 = fmul float %101, %101, !dbg !23
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i42 = icmp eq i32 %191, 0, !dbg !23
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %190, float 0xBFAAC795C0000000) #4, !dbg !23
  %193 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %190, float 0xBFAAC795C0000000) #4, !dbg !23
  %.06.i43 = select i1 %.not1.i42, float %193, float %192, !dbg !23
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i44 = icmp eq i32 %194, 0, !dbg !23
  %195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i43, float %190, float 0x3FC10B2820000000) #4, !dbg !23
  %196 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i43, float %190, float 0x3FC10B2820000000) #4, !dbg !23
  %.05.i45 = select i1 %.not2.i44, float %196, float %195, !dbg !23
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i46 = icmp eq i32 %197, 0, !dbg !23
  %198 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i45, float %190, float 0xBFD5553DA0000000) #4, !dbg !23
  %199 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i45, float %190, float 0xBFD5553DA0000000) #4, !dbg !23
  %.0.i47 = select i1 %.not3.i46, float %199, float %198, !dbg !23
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i48 = icmp eq i32 %200, 0, !dbg !23
  %201 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i47, float %190, float 0.000000e+00) #4, !dbg !23
  %202 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i47, float %190, float 0.000000e+00) #4, !dbg !23
  %.04.i49 = select i1 %.not4.i48, float %202, float %201, !dbg !23
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i50 = icmp eq i32 %203, 0, !dbg !23
  %204 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i49, float %101, float %101) #4, !dbg !23
  %205 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i49, float %101, float %101) #4, !dbg !23
  %.02.i51 = select i1 %.not5.i50, float %205, float %204, !dbg !23
  br label %__nv_tanhf.exit52, !dbg !23

__nv_tanhf.exit52:                                ; preds = %__internal_fmad.exit1.i36, %__internal_fmad.exit3.i41
  %s.1.i40 = phi float [ %189, %__internal_fmad.exit1.i36 ], [ %.02.i51, %__internal_fmad.exit3.i41 ], !dbg !23
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i53 = icmp eq i32 %206, 0, !dbg !23
  %207 = tail call float @llvm.nvvm.fabs.ftz.f(float %102) #4, !dbg !23
  %208 = tail call float @llvm.nvvm.fabs.f(float %102) #4, !dbg !23
  %.01.i54 = select i1 %.not.i53, float %208, float %207, !dbg !23
  %209 = fcmp ult float %.01.i54, 0x3FE3333340000000, !dbg !23
  br i1 %209, label %__internal_fmad.exit3.i60, label %__internal_fmad.exit1.i55, !dbg !23

__internal_fmad.exit1.i55:                        ; preds = %__nv_tanhf.exit52
  %210 = fmul float %.01.i54, 0x4007154760000000, !dbg !23
  %211 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %210) #4, !dbg !23
  %212 = fadd float %211, 1.000000e+00, !dbg !23
  %213 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %212) #5, !dbg !23, !srcloc !24
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i56 = icmp eq i32 %214, 0, !dbg !23
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %213, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %216 = tail call float @llvm.nvvm.fma.rn.f(float %213, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %.03.i57 = select i1 %.not6.i56, float %216, float %215, !dbg !23
  %217 = fcmp oge float %.01.i54, 0x4022059680000000, !dbg !23
  %s.0.i58 = select i1 %217, float 1.000000e+00, float %.03.i57, !dbg !23
  %218 = bitcast float %s.0.i58 to i32, !dbg !23
  %219 = bitcast float %102 to i32, !dbg !23
  %220 = and i32 %219, -2147483648, !dbg !23
  %221 = or i32 %220, %218, !dbg !23
  %222 = bitcast i32 %221 to float, !dbg !23
  br label %__nv_tanhf.exit71, !dbg !23

__internal_fmad.exit3.i60:                        ; preds = %__nv_tanhf.exit52
  %223 = fmul float %102, %102, !dbg !23
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i61 = icmp eq i32 %224, 0, !dbg !23
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %223, float 0xBFAAC795C0000000) #4, !dbg !23
  %226 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %223, float 0xBFAAC795C0000000) #4, !dbg !23
  %.06.i62 = select i1 %.not1.i61, float %226, float %225, !dbg !23
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i63 = icmp eq i32 %227, 0, !dbg !23
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i62, float %223, float 0x3FC10B2820000000) #4, !dbg !23
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i62, float %223, float 0x3FC10B2820000000) #4, !dbg !23
  %.05.i64 = select i1 %.not2.i63, float %229, float %228, !dbg !23
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i65 = icmp eq i32 %230, 0, !dbg !23
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i64, float %223, float 0xBFD5553DA0000000) #4, !dbg !23
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i64, float %223, float 0xBFD5553DA0000000) #4, !dbg !23
  %.0.i66 = select i1 %.not3.i65, float %232, float %231, !dbg !23
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i67 = icmp eq i32 %233, 0, !dbg !23
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i66, float %223, float 0.000000e+00) #4, !dbg !23
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i66, float %223, float 0.000000e+00) #4, !dbg !23
  %.04.i68 = select i1 %.not4.i67, float %235, float %234, !dbg !23
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i69 = icmp eq i32 %236, 0, !dbg !23
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i68, float %102, float %102) #4, !dbg !23
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i68, float %102, float %102) #4, !dbg !23
  %.02.i70 = select i1 %.not5.i69, float %238, float %237, !dbg !23
  br label %__nv_tanhf.exit71, !dbg !23

__nv_tanhf.exit71:                                ; preds = %__internal_fmad.exit1.i55, %__internal_fmad.exit3.i60
  %s.1.i59 = phi float [ %222, %__internal_fmad.exit1.i55 ], [ %.02.i70, %__internal_fmad.exit3.i60 ], !dbg !23
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i72 = icmp eq i32 %239, 0, !dbg !23
  %240 = tail call float @llvm.nvvm.fabs.ftz.f(float %103) #4, !dbg !23
  %241 = tail call float @llvm.nvvm.fabs.f(float %103) #4, !dbg !23
  %.01.i73 = select i1 %.not.i72, float %241, float %240, !dbg !23
  %242 = fcmp ult float %.01.i73, 0x3FE3333340000000, !dbg !23
  br i1 %242, label %__internal_fmad.exit3.i79, label %__internal_fmad.exit1.i74, !dbg !23

__internal_fmad.exit1.i74:                        ; preds = %__nv_tanhf.exit71
  %243 = fmul float %.01.i73, 0x4007154760000000, !dbg !23
  %244 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %243) #4, !dbg !23
  %245 = fadd float %244, 1.000000e+00, !dbg !23
  %246 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %245) #5, !dbg !23, !srcloc !24
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i75 = icmp eq i32 %247, 0, !dbg !23
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %246, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %246, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %.03.i76 = select i1 %.not6.i75, float %249, float %248, !dbg !23
  %250 = fcmp oge float %.01.i73, 0x4022059680000000, !dbg !23
  %s.0.i77 = select i1 %250, float 1.000000e+00, float %.03.i76, !dbg !23
  %251 = bitcast float %s.0.i77 to i32, !dbg !23
  %252 = bitcast float %103 to i32, !dbg !23
  %253 = and i32 %252, -2147483648, !dbg !23
  %254 = or i32 %253, %251, !dbg !23
  %255 = bitcast i32 %254 to float, !dbg !23
  br label %__nv_tanhf.exit90, !dbg !23

__internal_fmad.exit3.i79:                        ; preds = %__nv_tanhf.exit71
  %256 = fmul float %103, %103, !dbg !23
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i80 = icmp eq i32 %257, 0, !dbg !23
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %256, float 0xBFAAC795C0000000) #4, !dbg !23
  %259 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %256, float 0xBFAAC795C0000000) #4, !dbg !23
  %.06.i81 = select i1 %.not1.i80, float %259, float %258, !dbg !23
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i82 = icmp eq i32 %260, 0, !dbg !23
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i81, float %256, float 0x3FC10B2820000000) #4, !dbg !23
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i81, float %256, float 0x3FC10B2820000000) #4, !dbg !23
  %.05.i83 = select i1 %.not2.i82, float %262, float %261, !dbg !23
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i84 = icmp eq i32 %263, 0, !dbg !23
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i83, float %256, float 0xBFD5553DA0000000) #4, !dbg !23
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i83, float %256, float 0xBFD5553DA0000000) #4, !dbg !23
  %.0.i85 = select i1 %.not3.i84, float %265, float %264, !dbg !23
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i86 = icmp eq i32 %266, 0, !dbg !23
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i85, float %256, float 0.000000e+00) #4, !dbg !23
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i85, float %256, float 0.000000e+00) #4, !dbg !23
  %.04.i87 = select i1 %.not4.i86, float %268, float %267, !dbg !23
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i88 = icmp eq i32 %269, 0, !dbg !23
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i87, float %103, float %103) #4, !dbg !23
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i87, float %103, float %103) #4, !dbg !23
  %.02.i89 = select i1 %.not5.i88, float %271, float %270, !dbg !23
  br label %__nv_tanhf.exit90, !dbg !23

__nv_tanhf.exit90:                                ; preds = %__internal_fmad.exit1.i74, %__internal_fmad.exit3.i79
  %s.1.i78 = phi float [ %255, %__internal_fmad.exit1.i74 ], [ %.02.i89, %__internal_fmad.exit3.i79 ], !dbg !23
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i91 = icmp eq i32 %272, 0, !dbg !23
  %273 = tail call float @llvm.nvvm.fabs.ftz.f(float %104) #4, !dbg !23
  %274 = tail call float @llvm.nvvm.fabs.f(float %104) #4, !dbg !23
  %.01.i92 = select i1 %.not.i91, float %274, float %273, !dbg !23
  %275 = fcmp ult float %.01.i92, 0x3FE3333340000000, !dbg !23
  br i1 %275, label %__internal_fmad.exit3.i98, label %__internal_fmad.exit1.i93, !dbg !23

__internal_fmad.exit1.i93:                        ; preds = %__nv_tanhf.exit90
  %276 = fmul float %.01.i92, 0x4007154760000000, !dbg !23
  %277 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %276) #4, !dbg !23
  %278 = fadd float %277, 1.000000e+00, !dbg !23
  %279 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %278) #5, !dbg !23, !srcloc !24
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i94 = icmp eq i32 %280, 0, !dbg !23
  %281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %279, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %282 = tail call float @llvm.nvvm.fma.rn.f(float %279, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %.03.i95 = select i1 %.not6.i94, float %282, float %281, !dbg !23
  %283 = fcmp oge float %.01.i92, 0x4022059680000000, !dbg !23
  %s.0.i96 = select i1 %283, float 1.000000e+00, float %.03.i95, !dbg !23
  %284 = bitcast float %s.0.i96 to i32, !dbg !23
  %285 = bitcast float %104 to i32, !dbg !23
  %286 = and i32 %285, -2147483648, !dbg !23
  %287 = or i32 %286, %284, !dbg !23
  %288 = bitcast i32 %287 to float, !dbg !23
  br label %__nv_tanhf.exit109, !dbg !23

__internal_fmad.exit3.i98:                        ; preds = %__nv_tanhf.exit90
  %289 = fmul float %104, %104, !dbg !23
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i99 = icmp eq i32 %290, 0, !dbg !23
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %289, float 0xBFAAC795C0000000) #4, !dbg !23
  %292 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %289, float 0xBFAAC795C0000000) #4, !dbg !23
  %.06.i100 = select i1 %.not1.i99, float %292, float %291, !dbg !23
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i101 = icmp eq i32 %293, 0, !dbg !23
  %294 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i100, float %289, float 0x3FC10B2820000000) #4, !dbg !23
  %295 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i100, float %289, float 0x3FC10B2820000000) #4, !dbg !23
  %.05.i102 = select i1 %.not2.i101, float %295, float %294, !dbg !23
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i103 = icmp eq i32 %296, 0, !dbg !23
  %297 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i102, float %289, float 0xBFD5553DA0000000) #4, !dbg !23
  %298 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i102, float %289, float 0xBFD5553DA0000000) #4, !dbg !23
  %.0.i104 = select i1 %.not3.i103, float %298, float %297, !dbg !23
  %299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i105 = icmp eq i32 %299, 0, !dbg !23
  %300 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i104, float %289, float 0.000000e+00) #4, !dbg !23
  %301 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i104, float %289, float 0.000000e+00) #4, !dbg !23
  %.04.i106 = select i1 %.not4.i105, float %301, float %300, !dbg !23
  %302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i107 = icmp eq i32 %302, 0, !dbg !23
  %303 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i106, float %104, float %104) #4, !dbg !23
  %304 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i106, float %104, float %104) #4, !dbg !23
  %.02.i108 = select i1 %.not5.i107, float %304, float %303, !dbg !23
  br label %__nv_tanhf.exit109, !dbg !23

__nv_tanhf.exit109:                               ; preds = %__internal_fmad.exit1.i93, %__internal_fmad.exit3.i98
  %s.1.i97 = phi float [ %288, %__internal_fmad.exit1.i93 ], [ %.02.i108, %__internal_fmad.exit3.i98 ], !dbg !23
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i110 = icmp eq i32 %305, 0, !dbg !23
  %306 = tail call float @llvm.nvvm.fabs.ftz.f(float %105) #4, !dbg !23
  %307 = tail call float @llvm.nvvm.fabs.f(float %105) #4, !dbg !23
  %.01.i111 = select i1 %.not.i110, float %307, float %306, !dbg !23
  %308 = fcmp ult float %.01.i111, 0x3FE3333340000000, !dbg !23
  br i1 %308, label %__internal_fmad.exit3.i117, label %__internal_fmad.exit1.i112, !dbg !23

__internal_fmad.exit1.i112:                       ; preds = %__nv_tanhf.exit109
  %309 = fmul float %.01.i111, 0x4007154760000000, !dbg !23
  %310 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %309) #4, !dbg !23
  %311 = fadd float %310, 1.000000e+00, !dbg !23
  %312 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %311) #5, !dbg !23, !srcloc !24
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i113 = icmp eq i32 %313, 0, !dbg !23
  %314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %312, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %315 = tail call float @llvm.nvvm.fma.rn.f(float %312, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %.03.i114 = select i1 %.not6.i113, float %315, float %314, !dbg !23
  %316 = fcmp oge float %.01.i111, 0x4022059680000000, !dbg !23
  %s.0.i115 = select i1 %316, float 1.000000e+00, float %.03.i114, !dbg !23
  %317 = bitcast float %s.0.i115 to i32, !dbg !23
  %318 = bitcast float %105 to i32, !dbg !23
  %319 = and i32 %318, -2147483648, !dbg !23
  %320 = or i32 %319, %317, !dbg !23
  %321 = bitcast i32 %320 to float, !dbg !23
  br label %__nv_tanhf.exit128, !dbg !23

__internal_fmad.exit3.i117:                       ; preds = %__nv_tanhf.exit109
  %322 = fmul float %105, %105, !dbg !23
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i118 = icmp eq i32 %323, 0, !dbg !23
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %322, float 0xBFAAC795C0000000) #4, !dbg !23
  %325 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %322, float 0xBFAAC795C0000000) #4, !dbg !23
  %.06.i119 = select i1 %.not1.i118, float %325, float %324, !dbg !23
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i120 = icmp eq i32 %326, 0, !dbg !23
  %327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i119, float %322, float 0x3FC10B2820000000) #4, !dbg !23
  %328 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i119, float %322, float 0x3FC10B2820000000) #4, !dbg !23
  %.05.i121 = select i1 %.not2.i120, float %328, float %327, !dbg !23
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i122 = icmp eq i32 %329, 0, !dbg !23
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i121, float %322, float 0xBFD5553DA0000000) #4, !dbg !23
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i121, float %322, float 0xBFD5553DA0000000) #4, !dbg !23
  %.0.i123 = select i1 %.not3.i122, float %331, float %330, !dbg !23
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i124 = icmp eq i32 %332, 0, !dbg !23
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i123, float %322, float 0.000000e+00) #4, !dbg !23
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i123, float %322, float 0.000000e+00) #4, !dbg !23
  %.04.i125 = select i1 %.not4.i124, float %334, float %333, !dbg !23
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i126 = icmp eq i32 %335, 0, !dbg !23
  %336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i125, float %105, float %105) #4, !dbg !23
  %337 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i125, float %105, float %105) #4, !dbg !23
  %.02.i127 = select i1 %.not5.i126, float %337, float %336, !dbg !23
  br label %__nv_tanhf.exit128, !dbg !23

__nv_tanhf.exit128:                               ; preds = %__internal_fmad.exit1.i112, %__internal_fmad.exit3.i117
  %s.1.i116 = phi float [ %321, %__internal_fmad.exit1.i112 ], [ %.02.i127, %__internal_fmad.exit3.i117 ], !dbg !23
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i129 = icmp eq i32 %338, 0, !dbg !23
  %339 = tail call float @llvm.nvvm.fabs.ftz.f(float %106) #4, !dbg !23
  %340 = tail call float @llvm.nvvm.fabs.f(float %106) #4, !dbg !23
  %.01.i130 = select i1 %.not.i129, float %340, float %339, !dbg !23
  %341 = fcmp ult float %.01.i130, 0x3FE3333340000000, !dbg !23
  br i1 %341, label %__internal_fmad.exit3.i136, label %__internal_fmad.exit1.i131, !dbg !23

__internal_fmad.exit1.i131:                       ; preds = %__nv_tanhf.exit128
  %342 = fmul float %.01.i130, 0x4007154760000000, !dbg !23
  %343 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %342) #4, !dbg !23
  %344 = fadd float %343, 1.000000e+00, !dbg !23
  %345 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %344) #5, !dbg !23, !srcloc !24
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i132 = icmp eq i32 %346, 0, !dbg !23
  %347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %345, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %348 = tail call float @llvm.nvvm.fma.rn.f(float %345, float -2.000000e+00, float 1.000000e+00) #4, !dbg !23
  %.03.i133 = select i1 %.not6.i132, float %348, float %347, !dbg !23
  %349 = fcmp oge float %.01.i130, 0x4022059680000000, !dbg !23
  %s.0.i134 = select i1 %349, float 1.000000e+00, float %.03.i133, !dbg !23
  %350 = bitcast float %s.0.i134 to i32, !dbg !23
  %351 = bitcast float %106 to i32, !dbg !23
  %352 = and i32 %351, -2147483648, !dbg !23
  %353 = or i32 %352, %350, !dbg !23
  %354 = bitcast i32 %353 to float, !dbg !23
  br label %__nv_tanhf.exit147, !dbg !23

__internal_fmad.exit3.i136:                       ; preds = %__nv_tanhf.exit128
  %355 = fmul float %106, %106, !dbg !23
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i137 = icmp eq i32 %356, 0, !dbg !23
  %357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %355, float 0xBFAAC795C0000000) #4, !dbg !23
  %358 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %355, float 0xBFAAC795C0000000) #4, !dbg !23
  %.06.i138 = select i1 %.not1.i137, float %358, float %357, !dbg !23
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i139 = icmp eq i32 %359, 0, !dbg !23
  %360 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i138, float %355, float 0x3FC10B2820000000) #4, !dbg !23
  %361 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i138, float %355, float 0x3FC10B2820000000) #4, !dbg !23
  %.05.i140 = select i1 %.not2.i139, float %361, float %360, !dbg !23
  %362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i141 = icmp eq i32 %362, 0, !dbg !23
  %363 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i140, float %355, float 0xBFD5553DA0000000) #4, !dbg !23
  %364 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i140, float %355, float 0xBFD5553DA0000000) #4, !dbg !23
  %.0.i142 = select i1 %.not3.i141, float %364, float %363, !dbg !23
  %365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i143 = icmp eq i32 %365, 0, !dbg !23
  %366 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i142, float %355, float 0.000000e+00) #4, !dbg !23
  %367 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i142, float %355, float 0.000000e+00) #4, !dbg !23
  %.04.i144 = select i1 %.not4.i143, float %367, float %366, !dbg !23
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i145 = icmp eq i32 %368, 0, !dbg !23
  %369 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i144, float %106, float %106) #4, !dbg !23
  %370 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i144, float %106, float %106) #4, !dbg !23
  %.02.i146 = select i1 %.not5.i145, float %370, float %369, !dbg !23
  br label %__nv_tanhf.exit147, !dbg !23

__nv_tanhf.exit147:                               ; preds = %__internal_fmad.exit1.i131, %__internal_fmad.exit3.i136
  %s.1.i135 = phi float [ %354, %__internal_fmad.exit1.i131 ], [ %.02.i146, %__internal_fmad.exit3.i136 ], !dbg !23
  %371 = shl i32 %8, 2, !dbg !12
  %372 = and i32 %371, 508, !dbg !12
  %373 = or disjoint i32 %372, %7, !dbg !13
  %374 = or disjoint i32 %373, 512, !dbg !13
  %375 = sdiv i32 %374, 256, !dbg !25
  %.frozen = freeze i32 %373, !dbg !25
  %376 = sdiv i32 %.frozen, 256, !dbg !25
  %377 = mul i32 %376, 256, !dbg !26
  %.decomposed = sub i32 %.frozen, %377, !dbg !26
  %378 = shl i32 %25, 8, !dbg !27
  %379 = add i32 %.decomposed, %378, !dbg !28
  %380 = shl i32 %376, 16, !dbg !29
  %381 = shl i32 %375, 16, !dbg !29
  %382 = add i32 %379, %380, !dbg !30
  %383 = add i32 %379, %381, !dbg !30
  %384 = sext i32 %382 to i64, !dbg !31
  %385 = getelementptr float, ptr addrspace(1) %2, i64 %384, !dbg !31
  %386 = sext i32 %383 to i64, !dbg !31
  %387 = getelementptr float, ptr addrspace(1) %2, i64 %386, !dbg !31
  %388 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %9, !dbg !32
  %389 = bitcast float %s.1.i to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %388, <1 x i32> %389, i1 true) #4, !dbg !32
  %390 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %10, !dbg !32
  %391 = bitcast float %s.1.i21 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %390, <1 x i32> %391, i1 true) #4, !dbg !32
  %392 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %11, !dbg !32
  %393 = bitcast float %s.1.i40 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %392, <1 x i32> %393, i1 true) #4, !dbg !32
  %394 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %12, !dbg !32
  %395 = bitcast float %s.1.i59 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %394, <1 x i32> %395, i1 true) #4, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %396 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %372, !dbg !32
  %397 = load <4 x i32>, ptr addrspace(3) %396, align 16, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %398 = bitcast float %s.1.i78 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %388, <1 x i32> %398, i1 true) #4, !dbg !32
  %399 = bitcast float %s.1.i97 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %390, <1 x i32> %399, i1 true) #4, !dbg !32
  %400 = bitcast float %s.1.i116 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %392, <1 x i32> %400, i1 true) #4, !dbg !32
  %401 = bitcast float %s.1.i135 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %394, <1 x i32> %401, i1 true) #4, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %402 = load <4 x i32>, ptr addrspace(3) %396, align 16, !dbg !32
  %.extract = extractelement <4 x i32> %397, i64 0, !dbg !32
  %.extract8 = extractelement <4 x i32> %397, i64 1, !dbg !32
  %.extract9 = extractelement <4 x i32> %397, i64 2, !dbg !32
  %.extract10 = extractelement <4 x i32> %397, i64 3, !dbg !32
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract8, i32 %.extract9, i32 %.extract10, ptr addrspace(1) %385, i1 %26) #4, !dbg !32
  %.extract11 = extractelement <4 x i32> %402, i64 0, !dbg !32
  %.extract12 = extractelement <4 x i32> %402, i64 1, !dbg !32
  %.extract13 = extractelement <4 x i32> %402, i64 2, !dbg !32
  %.extract14 = extractelement <4 x i32> %402, i64 3, !dbg !32
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract11, i32 %.extract12, i32 %.extract13, i32 %.extract14, ptr addrspace(1) %387, i1 %26) #4, !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py", directory: "inductor_cache/jm")
!4 = !{ptr @triton_poi_fused_add_tanh_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_tanh_11, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_tanh_11", linkageName: "triton_poi_fused_add_tanh_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 28, scope: !7)
!15 = !DILocation(line: 27, column: 21, scope: !7)
!16 = !DILocation(line: 32, column: 39, scope: !7)
!17 = !DILocation(line: 32, column: 35, scope: !7)
!18 = !DILocation(line: 32, column: 30, scope: !7)
!19 = !DILocation(line: 32, column: 44, scope: !7)
!20 = !DILocation(line: 33, column: 30, scope: !7)
!21 = !DILocation(line: 33, column: 44, scope: !7)
!22 = !DILocation(line: 34, column: 18, scope: !7)
!23 = !DILocation(line: 35, column: 26, scope: !7)
!24 = !{i32 21046}
!25 = !DILocation(line: 31, column: 19, scope: !7)
!26 = !DILocation(line: 30, column: 19, scope: !7)
!27 = !DILocation(line: 36, column: 34, scope: !7)
!28 = !DILocation(line: 36, column: 30, scope: !7)
!29 = !DILocation(line: 36, column: 45, scope: !7)
!30 = !DILocation(line: 36, column: 39, scope: !7)
!31 = !DILocation(line: 36, column: 25, scope: !7)
!32 = !DILocation(line: 36, column: 56, scope: !7)
!33 = !DILocation(line: 36, column: 4, scope: !7)
