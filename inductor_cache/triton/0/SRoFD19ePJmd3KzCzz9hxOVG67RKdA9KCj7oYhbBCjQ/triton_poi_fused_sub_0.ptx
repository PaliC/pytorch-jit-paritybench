//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_sub_0  // -- Begin function triton_poi_fused_sub_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_sub_0
.visible .entry triton_poi_fused_sub_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_sub_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_sub_0_param_2,
	.param .u32 triton_poi_fused_sub_0_param_3,
	.param .u32 triton_poi_fused_sub_0_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<37>;
	.reg .f32 	%f<6>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_sub_0_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_sub_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:22:33
	shl.b32 	%r12, %r1, 8;
	ld.param.u64 	%rd7, [triton_poi_fused_sub_0_param_2];
	.loc	1 23 44                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:23:44
	mov.u32 	%r13, %tid.x;
	and.b32  	%r15, %r13, 127;
	shl.b32 	%r16, %r13, 1;
	and.b32  	%r17, %r16, 254;
	.loc	1 23 23                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:23:23
	or.b32  	%r18, %r12, %r15;
	or.b32  	%r19, %r12, %r17;
	.loc	1 25 28                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 27 21                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:27:21
	setp.lt.s32 	%p1, %r2, 16;
	.loc	1 31 19                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:31:19
	bfe.s32 	%r20, %r1, 23, 1;
	shr.u32 	%r21, %r20, 23;
	add.s32 	%r22, %r19, %r21;
	.loc	1 30 19                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:30:19
	and.b32  	%r23, %r22, -512;
	sub.s32 	%r24, %r19, %r23;
	.loc	1 32 30                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:32:30
	mul.wide.s32 	%rd8, %r2, 4;
	add.s64 	%rd1, %rd5, %rd8;
	.loc	1 32 35                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:32:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	.loc	1 23 23                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:23:23
	shl.b32 	%r25, %r18, 4;
	.loc	1 33 35                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:33:35
	add.s32 	%r26, %r25, %r2;
	add.s32 	%r27, %r26, 2048;
	.loc	1 33 30                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:33:30
	mul.wide.s32 	%rd9, %r26, 4;
	add.s64 	%rd2, %rd6, %rd9;
	mul.wide.s32 	%rd10, %r27, 4;
	add.s64 	%rd3, %rd6, %rd10;
	.loc	1 33 43                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:33:43
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	.loc	1 34 18                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:34:18
	sub.f32 	%f4, %f1, %f2;
	sub.f32 	%f5, %f1, %f3;
	.loc	1 35 34                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:35:34
	shl.b32 	%r28, %r2, 9;
	.loc	1 35 30                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:35:30
	add.s32 	%r29, %r24, %r28;
	.loc	1 35 44                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:35:44
	shl.b32 	%r30, %r22, 4;
	and.b32  	%r31, %r30, -8192;
	.loc	1 35 39                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:35:39
	add.s32 	%r32, %r29, %r31;
	.loc	1 35 25                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:35:25
	mul.wide.s32 	%rd11, %r32, 4;
	add.s64 	%rd4, %rd7, %rd11;
	.loc	1 35 55                         // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:35:55
	shl.b32 	%r33, %r15, 2;
	mov.u32 	%r34, global_smem;
	add.s32 	%r6, %r34, %r33;
	mov.b32 	%r7, %f4;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	add.s32 	%r8, %r6, 512;
	mov.b32 	%r9, %f5;
	// begin inline asm
	@%p4 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r35, %r17, 2;
	add.s32 	%r36, %r34, %r35;
	ld.shared.v2.u32 	{%r10, %r11}, [%r36];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd4 + 0 ], { %r10, %r11 };
	// end inline asm
	.loc	1 35 4                          // czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/zz/czz3kp3ztzll43mcs43gwaez7clhemo2m3ub7bhxijsw5rsq3d4p.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 122
.b8 51
.b8 107
.b8 112
.b8 51
.b8 122
.b8 116
.b8 122
.b8 108
.b8 108
.b8 52
.b8 51
.b8 109
.b8 99
.b8 115
.b8 52
.b8 51
.b8 103
.b8 119
.b8 97
.b8 101
.b8 122
.b8 55
.b8 99
.b8 108
.b8 104
.b8 101
.b8 109
.b8 111
.b8 50
.b8 109
.b8 51
.b8 117
.b8 98
.b8 55
.b8 98
.b8 104
.b8 120
.b8 105
.b8 106
.b8 115
.b8 119
.b8 53
.b8 114
.b8 115
.b8 113
.b8 51
.b8 100
.b8 52
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 122
.b8 0
	}
	.section	.debug_macinfo	{	}
