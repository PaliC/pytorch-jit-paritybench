//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<78>;
	.reg .b32 	%r<311>;
	.reg .f32 	%f<157>;
	.reg .b64 	%rd<42>;
	.loc	1 19 0                          // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_0];
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_1];
$L__tmp0:
	.loc	1 22 28                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:22:33
	shl.b32 	%r159, %r1, 7;
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_2];
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_3];
	.loc	1 23 44                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:23:44
	mov.u32 	%r160, %tid.x;
	shl.b32 	%r161, %r160, 2;
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_4];
	and.b32  	%r162, %r161, 28;
	ld.param.u64 	%rd26, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_5];
	and.b32  	%r163, %r161, 124;
	ld.param.u64 	%rd27, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_6];
	ld.param.u64 	%rd28, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_19_param_7];
	bfe.u32 	%r164, %r160, 3, 2;
	and.b32  	%r165, %r160, 32;
	shr.u32 	%r166, %r165, 3;
	and.b32  	%r167, %r160, 64;
	shr.u32 	%r168, %r167, 3;
	and.b32  	%r169, %r160, 128;
	shr.u32 	%r170, %r169, 3;
	or.b32  	%r171, %r166, %r164;
	or.b32  	%r172, %r171, %r168;
	or.b32  	%r173, %r172, %r170;
	.loc	1 23 23                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:23:23
	or.b32  	%r174, %r159, %r163;
	or.b32  	%r175, %r159, %r173;
	or.b32  	%r176, %r175, 32;
	or.b32  	%r177, %r175, 64;
	or.b32  	%r178, %r175, 96;
	.loc	1 24 21                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:24:21
	setp.lt.s32 	%p5, %r174, 128;
	setp.lt.s32 	%p53, %r175, 128;
	setp.lt.s32 	%p54, %r176, 128;
	setp.lt.s32 	%p55, %r177, 128;
	setp.lt.s32 	%p56, %r178, 128;
	.loc	1 25 28                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:25:33
	shl.b32 	%r179, %r2, 5;
	.loc	1 26 44                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:26:44
	or.b32  	%r180, %r165, %r169;
	or.b32  	%r181, %r180, %r167;
	shr.u32 	%r182, %r181, 5;
	.loc	1 26 23                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:26:23
	or.b32  	%r183, %r179, %r182;
	or.b32  	%r184, %r183, 8;
	or.b32  	%r185, %r183, 16;
	or.b32  	%r186, %r183, 24;
	or.b32  	%r187, %r179, %r162;
	.loc	1 27 21                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:27:21
	setp.lt.s32 	%p57, %r183, 64;
	setp.lt.s32 	%p58, %r184, 64;
	setp.lt.s32 	%p59, %r185, 64;
	setp.lt.s32 	%p60, %r186, 64;
	setp.lt.s32 	%p61, %r187, 64;
	.loc	1 30 19                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:30:19
	shr.s32 	%r189, %r174, 31;
	shr.u32 	%r190, %r189, 27;
	add.s32 	%r191, %r174, %r190;
	.loc	1 29 19                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:29:19
	and.b32  	%r192, %r191, -32;
	sub.s32 	%r193, %r174, %r192;
	.loc	1 30 19                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:30:19
	shr.s32 	%r195, %r175, 31;
	shr.u32 	%r196, %r195, 27;
	add.s32 	%r197, %r175, %r196;
	.loc	1 29 19                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:29:19
	and.b32  	%r198, %r197, 67108832;
	sub.s32 	%r199, %r175, %r198;
	.loc	1 30 19                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:30:19
	bfe.s32 	%r200, %r1, 24, 1;
	shr.u32 	%r201, %r200, 27;
	add.s32 	%r202, %r176, %r201;
	add.s32 	%r203, %r177, %r201;
	add.s32 	%r204, %r178, %r201;
	.loc	1 31 38                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:31:38
	shl.b32 	%r205, %r183, 5;
	shl.b32 	%r206, %r184, 5;
	shl.b32 	%r207, %r185, 5;
	shl.b32 	%r208, %r186, 5;
	.loc	1 31 48                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:31:48
	shl.b32 	%r209, %r191, 6;
	and.b32  	%r210, %r209, -2048;
	.loc	1 31 35                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:31:35
	add.s32 	%r211, %r210, %r193;
	.loc	1 31 43                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:31:43
	add.s32 	%r212, %r211, %r205;
	add.s32 	%r213, %r211, %r206;
	add.s32 	%r214, %r211, %r207;
	add.s32 	%r215, %r211, %r208;
	.loc	1 31 30                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:31:30
	mul.wide.s32 	%rd29, %r212, 4;
	add.s64 	%rd1, %rd21, %rd29;
	mul.wide.s32 	%rd30, %r213, 4;
	add.s64 	%rd2, %rd21, %rd30;
	mul.wide.s32 	%rd31, %r214, 4;
	add.s64 	%rd3, %rd21, %rd31;
	mul.wide.s32 	%rd32, %r215, 4;
	add.s64 	%rd4, %rd21, %rd32;
	.loc	1 31 61                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:31:61
	and.pred  	%p1, %p5, %p57;
	and.pred  	%p2, %p58, %p5;
	and.pred  	%p3, %p59, %p5;
	and.pred  	%p4, %p60, %p5;
	and.pred  	%p9, %p53, %p61;
	and.pred  	%p10, %p54, %p61;
	and.pred  	%p11, %p55, %p61;
	and.pred  	%p12, %p56, %p61;
	.loc	1 31 53                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:31:53
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 32 30                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:32:30
	mul.wide.s32 	%rd33, %r193, 4;
	add.s64 	%rd5, %rd22, %rd33;
	.loc	1 32 35                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:32:35
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 33 30                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:33:30
	add.s64 	%rd6, %rd23, %rd33;
	.loc	1 33 35                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:33:35
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r23;
	mov.b32 	%f2, %r24;
	mov.b32 	%f3, %r25;
	mov.b32 	%f4, %r26;
	.loc	1 34 31                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:34:31
	add.s64 	%rd7, %rd24, %rd33;
	.loc	1 34 36                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:34:36
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 35 31                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:35:31
	add.s64 	%rd8, %rd25, %rd33;
	.loc	1 35 36                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:35:36
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 36 38                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:36:38
	add.s32 	%r216, %r187, 4096;
	.loc	1 36 46                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:36:46
	shl.b32 	%r217, %r199, 6;
	.loc	1 36 56                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:36:56
	shl.b32 	%r218, %r197, 8;
	and.b32  	%r219, %r218, -8192;
	shl.b32 	%r220, %r202, 8;
	and.b32  	%r221, %r220, -8192;
	shl.b32 	%r222, %r203, 8;
	and.b32  	%r223, %r222, -8192;
	shl.b32 	%r224, %r204, 8;
	and.b32  	%r225, %r224, -8192;
	.loc	1 36 43                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:36:43
	add.s32 	%r226, %r219, %r217;
	.loc	1 36 51                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:36:51
	add.s32 	%r227, %r226, %r216;
	.loc	1 36 43                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:36:43
	add.s32 	%r228, %r221, %r217;
	.loc	1 36 51                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:36:51
	add.s32 	%r229, %r228, %r216;
	.loc	1 36 43                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:36:43
	add.s32 	%r230, %r223, %r217;
	.loc	1 36 51                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:36:51
	add.s32 	%r231, %r230, %r216;
	.loc	1 36 43                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:36:43
	add.s32 	%r232, %r225, %r217;
	.loc	1 36 51                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:36:51
	add.s32 	%r233, %r232, %r216;
	.loc	1 36 31                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:36:31
	mul.wide.s32 	%rd34, %r227, 4;
	add.s64 	%rd9, %rd26, %rd34;
	mul.wide.s32 	%rd35, %r229, 4;
	add.s64 	%rd10, %rd26, %rd35;
	mul.wide.s32 	%rd36, %r231, 4;
	add.s64 	%rd11, %rd26, %rd36;
	mul.wide.s32 	%rd37, %r233, 4;
	add.s64 	%rd12, %rd26, %rd37;
	.loc	1 36 61                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:36:61
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p9 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	@%p10 ld.global.L1::evict_last.v4.b32 { %r39, %r40, %r41, %r42 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r43, %r44, %r45, %r46 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	@%p12 ld.global.L1::evict_last.v4.b32 { %r47, %r48, %r49, %r50 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 39 18                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:39:18
	add.f32 	%f5, %f1, 0f3727C5AC;
	add.f32 	%f6, %f2, 0f3727C5AC;
	add.f32 	%f7, %f3, 0f3727C5AC;
	add.f32 	%f8, %f4, 0f3727C5AC;
	.loc	1 40 26                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:40:26
	sqrt.approx.ftz.f32 	%f9, %f5;
	sqrt.approx.ftz.f32 	%f10, %f6;
	sqrt.approx.ftz.f32 	%f11, %f7;
	sqrt.approx.ftz.f32 	%f12, %f8;
	.loc	1 36 61                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:36:61
	mov.b32 	%f13, %r50;
	mov.b32 	%f14, %r49;
	mov.b32 	%f15, %r48;
	mov.b32 	%f16, %r47;
	mov.b32 	%f17, %r46;
	mov.b32 	%f18, %r45;
	mov.b32 	%f19, %r44;
	mov.b32 	%f20, %r43;
	mov.b32 	%f21, %r42;
	mov.b32 	%f22, %r41;
	mov.b32 	%f23, %r40;
	mov.b32 	%f24, %r39;
	mov.b32 	%f25, %r38;
	mov.b32 	%f26, %r37;
	mov.b32 	%f27, %r36;
	mov.b32 	%f28, %r35;
	.loc	1 42 18                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:42:18
	mov.b32 	%r53, %f9;
	mov.b32 	%r52, 1065353216;
	// begin inline asm
	div.full.f32 %r51, %r52, %r53;
	// end inline asm
	mov.b32 	%f29, %r51;
	mov.b32 	%r56, %f10;
	// begin inline asm
	div.full.f32 %r54, %r52, %r56;
	// end inline asm
	mov.b32 	%f30, %r54;
	mov.b32 	%r59, %f11;
	// begin inline asm
	div.full.f32 %r57, %r52, %r59;
	// end inline asm
	mov.b32 	%f31, %r57;
	mov.b32 	%r62, %f12;
	// begin inline asm
	div.full.f32 %r60, %r52, %r62;
	// end inline asm
	mov.b32 	%f32, %r60;
	.loc	1 32 35                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:32:35
	mov.b32 	%f33, %r22;
	mov.b32 	%f34, %r21;
	mov.b32 	%f35, %r20;
	mov.b32 	%f36, %r19;
	.loc	1 31 53                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:31:53
	mov.b32 	%f37, %r18;
	mov.b32 	%f38, %r17;
	mov.b32 	%f39, %r16;
	mov.b32 	%f40, %r15;
	mov.b32 	%f41, %r14;
	mov.b32 	%f42, %r13;
	mov.b32 	%f43, %r12;
	mov.b32 	%f44, %r11;
	mov.b32 	%f45, %r10;
	mov.b32 	%f46, %r9;
	mov.b32 	%f47, %r8;
	mov.b32 	%f48, %r7;
	mov.b32 	%f49, %r6;
	mov.b32 	%f50, %r5;
	mov.b32 	%f51, %r4;
	mov.b32 	%f52, %r3;
	.loc	1 37 18                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:37:18
	sub.f32 	%f53, %f52, %f36;
	sub.f32 	%f54, %f51, %f35;
	sub.f32 	%f55, %f50, %f34;
	sub.f32 	%f56, %f49, %f33;
	sub.f32 	%f57, %f48, %f36;
	sub.f32 	%f58, %f47, %f35;
	sub.f32 	%f59, %f46, %f34;
	sub.f32 	%f60, %f45, %f33;
	sub.f32 	%f61, %f44, %f36;
	sub.f32 	%f62, %f43, %f35;
	sub.f32 	%f63, %f42, %f34;
	sub.f32 	%f64, %f41, %f33;
	sub.f32 	%f65, %f40, %f36;
	sub.f32 	%f66, %f39, %f35;
	sub.f32 	%f67, %f38, %f34;
	sub.f32 	%f68, %f37, %f33;
	.loc	1 35 36                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:35:36
	mov.b32 	%f69, %r34;
	mov.b32 	%f70, %r33;
	mov.b32 	%f71, %r32;
	mov.b32 	%f72, %r31;
	.loc	1 34 36                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:34:36
	mov.b32 	%f73, %r30;
	mov.b32 	%f74, %r29;
	mov.b32 	%f75, %r28;
	mov.b32 	%f76, %r27;
	.loc	1 45 19                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:45:19
	mul.f32 	%f77, %f68, %f32;
	mul.f32 	%f78, %f67, %f31;
	mul.f32 	%f79, %f66, %f30;
	mul.f32 	%f80, %f65, %f29;
	mul.f32 	%f81, %f64, %f32;
	mul.f32 	%f82, %f63, %f31;
	mul.f32 	%f83, %f62, %f30;
	mul.f32 	%f84, %f61, %f29;
	mul.f32 	%f85, %f60, %f32;
	mul.f32 	%f86, %f59, %f31;
	mul.f32 	%f87, %f58, %f30;
	mul.f32 	%f88, %f57, %f29;
	mul.f32 	%f89, %f56, %f32;
	mul.f32 	%f90, %f55, %f31;
	mul.f32 	%f91, %f54, %f30;
	mul.f32 	%f92, %f53, %f29;
	.loc	1 47 20                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:47:20
	fma.rn.f32 	%f93, %f92, %f76, %f72;
	fma.rn.f32 	%f94, %f91, %f75, %f71;
	fma.rn.f32 	%f95, %f90, %f74, %f70;
	fma.rn.f32 	%f96, %f89, %f73, %f69;
	fma.rn.f32 	%f97, %f88, %f76, %f72;
	fma.rn.f32 	%f98, %f87, %f75, %f71;
	fma.rn.f32 	%f99, %f86, %f74, %f70;
	fma.rn.f32 	%f100, %f85, %f73, %f69;
	fma.rn.f32 	%f101, %f84, %f76, %f72;
	fma.rn.f32 	%f102, %f83, %f75, %f71;
	fma.rn.f32 	%f103, %f82, %f74, %f70;
	fma.rn.f32 	%f104, %f81, %f73, %f69;
	fma.rn.f32 	%f105, %f80, %f76, %f72;
	fma.rn.f32 	%f106, %f79, %f75, %f71;
	fma.rn.f32 	%f107, %f78, %f74, %f70;
	fma.rn.f32 	%f108, %f77, %f73, %f69;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p62, %f108, 0f00000000;
	setp.lt.f32 	%p63, %f107, 0f00000000;
	setp.lt.f32 	%p64, %f106, 0f00000000;
	setp.lt.f32 	%p65, %f105, 0f00000000;
	setp.lt.f32 	%p66, %f104, 0f00000000;
	setp.lt.f32 	%p67, %f103, 0f00000000;
	setp.lt.f32 	%p68, %f102, 0f00000000;
	setp.lt.f32 	%p69, %f101, 0f00000000;
	setp.lt.f32 	%p70, %f100, 0f00000000;
	setp.lt.f32 	%p71, %f99, 0f00000000;
	setp.lt.f32 	%p72, %f98, 0f00000000;
	setp.lt.f32 	%p73, %f97, 0f00000000;
	setp.lt.f32 	%p74, %f96, 0f00000000;
	setp.lt.f32 	%p75, %f95, 0f00000000;
	setp.lt.f32 	%p76, %f94, 0f00000000;
	setp.lt.f32 	%p77, %f93, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f109, 0f00000000, %f93, %p77;
	selp.f32 	%f110, 0f00000000, %f94, %p76;
	selp.f32 	%f111, 0f00000000, %f95, %p75;
	selp.f32 	%f112, 0f00000000, %f96, %p74;
	selp.f32 	%f113, 0f00000000, %f97, %p73;
	selp.f32 	%f114, 0f00000000, %f98, %p72;
	selp.f32 	%f115, 0f00000000, %f99, %p71;
	selp.f32 	%f116, 0f00000000, %f100, %p70;
	selp.f32 	%f117, 0f00000000, %f101, %p69;
	selp.f32 	%f118, 0f00000000, %f102, %p68;
	selp.f32 	%f119, 0f00000000, %f103, %p67;
	selp.f32 	%f120, 0f00000000, %f104, %p66;
	selp.f32 	%f121, 0f00000000, %f105, %p65;
	selp.f32 	%f122, 0f00000000, %f106, %p64;
	selp.f32 	%f123, 0f00000000, %f107, %p63;
	selp.f32 	%f124, 0f00000000, %f108, %p62;
	shl.b32 	%r234, %r160, 7;
	and.b32  	%r235, %r234, 3968;
	or.b32  	%r236, %r182, %r235;
	and.b32  	%r237, %r161, 1020;
	shr.u32 	%r238, %r235, 3;
	mov.u32 	%r239, global_smem;
	add.s32 	%r240, %r239, %r238;
	shl.b32 	%r241, %r236, 2;
	add.s32 	%r63, %r240, %r241;
	mov.b32 	%r64, %f109;
	mov.pred 	%p13, -1;
	// begin inline asm
	@%p13 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	or.b32  	%r242, %r235, 32;
	shr.u32 	%r243, %r242, 3;
	add.s32 	%r244, %r239, %r243;
	add.s32 	%r245, %r244, %r241;
	add.s32 	%r65, %r245, 128;
	mov.b32 	%r66, %f110;
	// begin inline asm
	@%p13 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	or.b32  	%r246, %r235, 64;
	shr.u32 	%r247, %r246, 3;
	add.s32 	%r248, %r239, %r247;
	add.s32 	%r249, %r248, %r241;
	add.s32 	%r67, %r249, 256;
	mov.b32 	%r68, %f111;
	// begin inline asm
	@%p13 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	or.b32  	%r250, %r235, 96;
	shr.u32 	%r251, %r250, 3;
	add.s32 	%r252, %r239, %r251;
	add.s32 	%r253, %r252, %r241;
	add.s32 	%r69, %r253, 384;
	mov.b32 	%r70, %f112;
	// begin inline asm
	@%p13 st.shared.b32 [ %r69 + 0 ], %r70;
	// end inline asm
	add.s32 	%r71, %r63, 32;
	mov.b32 	%r72, %f113;
	// begin inline asm
	@%p13 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	add.s32 	%r73, %r245, 160;
	mov.b32 	%r74, %f114;
	// begin inline asm
	@%p13 st.shared.b32 [ %r73 + 0 ], %r74;
	// end inline asm
	add.s32 	%r75, %r249, 288;
	mov.b32 	%r76, %f115;
	// begin inline asm
	@%p13 st.shared.b32 [ %r75 + 0 ], %r76;
	// end inline asm
	add.s32 	%r77, %r253, 416;
	mov.b32 	%r78, %f116;
	// begin inline asm
	@%p13 st.shared.b32 [ %r77 + 0 ], %r78;
	// end inline asm
	add.s32 	%r79, %r63, 64;
	mov.b32 	%r80, %f117;
	// begin inline asm
	@%p13 st.shared.b32 [ %r79 + 0 ], %r80;
	// end inline asm
	add.s32 	%r81, %r245, 192;
	mov.b32 	%r82, %f118;
	// begin inline asm
	@%p13 st.shared.b32 [ %r81 + 0 ], %r82;
	// end inline asm
	add.s32 	%r83, %r249, 320;
	mov.b32 	%r84, %f119;
	// begin inline asm
	@%p13 st.shared.b32 [ %r83 + 0 ], %r84;
	// end inline asm
	add.s32 	%r85, %r253, 448;
	mov.b32 	%r86, %f120;
	// begin inline asm
	@%p13 st.shared.b32 [ %r85 + 0 ], %r86;
	// end inline asm
	add.s32 	%r87, %r63, 96;
	mov.b32 	%r88, %f121;
	// begin inline asm
	@%p13 st.shared.b32 [ %r87 + 0 ], %r88;
	// end inline asm
	add.s32 	%r89, %r245, 224;
	mov.b32 	%r90, %f122;
	// begin inline asm
	@%p13 st.shared.b32 [ %r89 + 0 ], %r90;
	// end inline asm
	add.s32 	%r91, %r249, 352;
	mov.b32 	%r92, %f123;
	// begin inline asm
	@%p13 st.shared.b32 [ %r91 + 0 ], %r92;
	// end inline asm
	add.s32 	%r93, %r253, 480;
	mov.b32 	%r94, %f124;
	// begin inline asm
	@%p13 st.shared.b32 [ %r93 + 0 ], %r94;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r254, %r160, 1;
	and.b32  	%r255, %r254, 124;
	add.s32 	%r256, %r239, %r255;
	shl.b32 	%r257, %r237, 2;
	add.s32 	%r258, %r256, %r257;
	ld.shared.f32 	%f125, [%r258];
	ld.shared.f32 	%f126, [%r258+4];
	ld.shared.f32 	%f127, [%r258+8];
	ld.shared.f32 	%f128, [%r258+12];
	or.b32  	%r259, %r237, 1024;
	shr.u32 	%r260, %r259, 3;
	and.b32  	%r261, %r260, 252;
	add.s32 	%r262, %r239, %r261;
	add.s32 	%r263, %r262, %r257;
	ld.shared.f32 	%f129, [%r263+4096];
	ld.shared.f32 	%f130, [%r263+4100];
	ld.shared.f32 	%f131, [%r263+4104];
	ld.shared.f32 	%f132, [%r263+4108];
	or.b32  	%r264, %r237, 2048;
	shr.u32 	%r265, %r264, 3;
	and.b32  	%r266, %r265, 380;
	add.s32 	%r267, %r239, %r266;
	add.s32 	%r268, %r267, %r257;
	ld.shared.f32 	%f133, [%r268+8192];
	ld.shared.f32 	%f134, [%r268+8196];
	ld.shared.f32 	%f135, [%r268+8200];
	ld.shared.f32 	%f136, [%r268+8204];
	or.b32  	%r269, %r237, 3072;
	shr.u32 	%r270, %r269, 3;
	and.b32  	%r271, %r270, 508;
	add.s32 	%r272, %r239, %r271;
	add.s32 	%r273, %r272, %r257;
	ld.shared.f32 	%f137, [%r273+12288];
	ld.shared.f32 	%f138, [%r273+12292];
	ld.shared.f32 	%f139, [%r273+12296];
	ld.shared.f32 	%f140, [%r273+12300];
$L__tmp2:
	.loc	1 50 20                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:50:20
	add.f32 	%f141, %f125, %f28;
	add.f32 	%f142, %f126, %f27;
	add.f32 	%f143, %f127, %f26;
	add.f32 	%f144, %f128, %f25;
	add.f32 	%f145, %f129, %f24;
	add.f32 	%f146, %f130, %f23;
	add.f32 	%f147, %f131, %f22;
	add.f32 	%f148, %f132, %f21;
	add.f32 	%f149, %f133, %f20;
	add.f32 	%f150, %f134, %f19;
	add.f32 	%f151, %f135, %f18;
	add.f32 	%f152, %f136, %f17;
	add.f32 	%f153, %f137, %f16;
	add.f32 	%f154, %f138, %f15;
	add.f32 	%f155, %f139, %f14;
	add.f32 	%f156, %f140, %f13;
	.loc	1 51 38                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:51:38
	add.s32 	%r274, %r226, %r187;
	add.s32 	%r275, %r228, %r187;
	add.s32 	%r276, %r230, %r187;
	add.s32 	%r277, %r232, %r187;
	.loc	1 51 25                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:51:25
	mul.wide.s32 	%rd38, %r274, 4;
	add.s64 	%rd13, %rd27, %rd38;
	mul.wide.s32 	%rd39, %r275, 4;
	add.s64 	%rd14, %rd27, %rd39;
	mul.wide.s32 	%rd40, %r276, 4;
	add.s64 	%rd15, %rd27, %rd40;
	mul.wide.s32 	%rd41, %r277, 4;
	add.s64 	%rd16, %rd27, %rd41;
	.loc	1 51 55                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:51:55
	mov.b32 	%r95, %f125;
	mov.b32 	%r96, %f126;
	mov.b32 	%r97, %f127;
	mov.b32 	%r98, %f128;
	// begin inline asm
	@%p9 st.global.v4.b32 [ %rd13 + 0 ], { %r95, %r96, %r97, %r98 };
	// end inline asm
	mov.b32 	%r99, %f129;
	mov.b32 	%r100, %f130;
	mov.b32 	%r101, %f131;
	mov.b32 	%r102, %f132;
	// begin inline asm
	@%p10 st.global.v4.b32 [ %rd14 + 0 ], { %r99, %r100, %r101, %r102 };
	// end inline asm
	mov.b32 	%r103, %f133;
	mov.b32 	%r104, %f134;
	mov.b32 	%r105, %f135;
	mov.b32 	%r106, %f136;
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd15 + 0 ], { %r103, %r104, %r105, %r106 };
	// end inline asm
	mov.b32 	%r107, %f137;
	mov.b32 	%r108, %f138;
	mov.b32 	%r109, %f139;
	mov.b32 	%r110, %f140;
	// begin inline asm
	@%p12 st.global.v4.b32 [ %rd16 + 0 ], { %r107, %r108, %r109, %r110 };
	// end inline asm
	.loc	1 52 25                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:52:25
	add.s64 	%rd17, %rd28, %rd29;
	add.s64 	%rd18, %rd28, %rd30;
	add.s64 	%rd19, %rd28, %rd31;
	add.s64 	%rd20, %rd28, %rd32;
	.loc	1 52 55                         // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:52:55
	bar.sync 	0;
	shl.b32 	%r278, %r160, 9;
	and.b32  	%r279, %r278, 3584;
	or.b32  	%r280, %r279, %r164;
	or.b32  	%r281, %r280, %r166;
	or.b32  	%r282, %r281, %r168;
	or.b32  	%r283, %r282, %r170;
	shr.u32 	%r284, %r279, 3;
	add.s32 	%r285, %r239, %r284;
	shl.b32 	%r286, %r283, 2;
	add.s32 	%r111, %r285, %r286;
	mov.b32 	%r112, %f141;
	// begin inline asm
	@%p13 st.shared.b32 [ %r111 + 0 ], %r112;
	// end inline asm
	or.b32  	%r287, %r279, 128;
	shr.u32 	%r288, %r287, 3;
	add.s32 	%r289, %r239, %r288;
	add.s32 	%r290, %r289, %r286;
	add.s32 	%r113, %r290, 512;
	mov.b32 	%r114, %f142;
	// begin inline asm
	@%p13 st.shared.b32 [ %r113 + 0 ], %r114;
	// end inline asm
	or.b32  	%r291, %r279, 256;
	shr.u32 	%r292, %r291, 3;
	add.s32 	%r293, %r239, %r292;
	add.s32 	%r294, %r293, %r286;
	add.s32 	%r115, %r294, 1024;
	mov.b32 	%r116, %f143;
	// begin inline asm
	@%p13 st.shared.b32 [ %r115 + 0 ], %r116;
	// end inline asm
	or.b32  	%r295, %r279, 384;
	shr.u32 	%r296, %r295, 3;
	add.s32 	%r297, %r239, %r296;
	add.s32 	%r298, %r297, %r286;
	add.s32 	%r117, %r298, 1536;
	mov.b32 	%r118, %f144;
	// begin inline asm
	@%p13 st.shared.b32 [ %r117 + 0 ], %r118;
	// end inline asm
	add.s32 	%r119, %r111, 128;
	mov.b32 	%r120, %f145;
	// begin inline asm
	@%p13 st.shared.b32 [ %r119 + 0 ], %r120;
	// end inline asm
	add.s32 	%r121, %r290, 640;
	mov.b32 	%r122, %f146;
	// begin inline asm
	@%p13 st.shared.b32 [ %r121 + 0 ], %r122;
	// end inline asm
	add.s32 	%r123, %r294, 1152;
	mov.b32 	%r124, %f147;
	// begin inline asm
	@%p13 st.shared.b32 [ %r123 + 0 ], %r124;
	// end inline asm
	add.s32 	%r125, %r298, 1664;
	mov.b32 	%r126, %f148;
	// begin inline asm
	@%p13 st.shared.b32 [ %r125 + 0 ], %r126;
	// end inline asm
	add.s32 	%r127, %r111, 256;
	mov.b32 	%r128, %f149;
	// begin inline asm
	@%p13 st.shared.b32 [ %r127 + 0 ], %r128;
	// end inline asm
	add.s32 	%r129, %r290, 768;
	mov.b32 	%r130, %f150;
	// begin inline asm
	@%p13 st.shared.b32 [ %r129 + 0 ], %r130;
	// end inline asm
	add.s32 	%r131, %r294, 1280;
	mov.b32 	%r132, %f151;
	// begin inline asm
	@%p13 st.shared.b32 [ %r131 + 0 ], %r132;
	// end inline asm
	add.s32 	%r133, %r298, 1792;
	mov.b32 	%r134, %f152;
	// begin inline asm
	@%p13 st.shared.b32 [ %r133 + 0 ], %r134;
	// end inline asm
	add.s32 	%r135, %r111, 384;
	mov.b32 	%r136, %f153;
	// begin inline asm
	@%p13 st.shared.b32 [ %r135 + 0 ], %r136;
	// end inline asm
	add.s32 	%r137, %r290, 896;
	mov.b32 	%r138, %f154;
	// begin inline asm
	@%p13 st.shared.b32 [ %r137 + 0 ], %r138;
	// end inline asm
	add.s32 	%r139, %r294, 1408;
	mov.b32 	%r140, %f155;
	// begin inline asm
	@%p13 st.shared.b32 [ %r139 + 0 ], %r140;
	// end inline asm
	add.s32 	%r141, %r298, 1920;
	mov.b32 	%r142, %f156;
	// begin inline asm
	@%p13 st.shared.b32 [ %r141 + 0 ], %r142;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r299, %r254, 112;
	add.s32 	%r300, %r239, %r299;
	add.s32 	%r301, %r300, %r257;
	and.b32  	%r302, %r260, 240;
	add.s32 	%r303, %r239, %r302;
	add.s32 	%r304, %r303, %r257;
	ld.shared.v4.u32 	{%r147, %r148, %r149, %r150}, [%r304+4096];
	and.b32  	%r305, %r265, 368;
	add.s32 	%r306, %r239, %r305;
	add.s32 	%r307, %r306, %r257;
	ld.shared.v4.u32 	{%r151, %r152, %r153, %r154}, [%r307+8192];
	and.b32  	%r308, %r270, 496;
	add.s32 	%r309, %r239, %r308;
	add.s32 	%r310, %r309, %r257;
	ld.shared.v4.u32 	{%r155, %r156, %r157, %r158}, [%r310+12288];
	ld.shared.v4.u32 	{%r143, %r144, %r145, %r146}, [%r301];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd17 + 0 ], { %r143, %r144, %r145, %r146 };
	// end inline asm
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd18 + 0 ], { %r147, %r148, %r149, %r150 };
	// end inline asm
	// begin inline asm
	@%p3 st.global.v4.b32 [ %rd19 + 0 ], { %r151, %r152, %r153, %r154 };
	// end inline asm
	// begin inline asm
	@%p4 st.global.v4.b32 [ %rd20 + 0 ], { %r155, %r156, %r157, %r158 };
	// end inline asm
	.loc	1 52 4                          // c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py:52:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/2j/c2jvtklidfdop4lmglhqpzu4wttl5dnv5klzd5hcdhnndpu3iynl.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 210                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 50
.b8 106
.b8 118
.b8 116
.b8 107
.b8 108
.b8 105
.b8 100
.b8 102
.b8 100
.b8 111
.b8 112
.b8 52
.b8 108
.b8 109
.b8 103
.b8 108
.b8 104
.b8 113
.b8 112
.b8 122
.b8 117
.b8 52
.b8 119
.b8 116
.b8 116
.b8 108
.b8 53
.b8 100
.b8 110
.b8 118
.b8 53
.b8 107
.b8 108
.b8 122
.b8 100
.b8 53
.b8 104
.b8 99
.b8 100
.b8 104
.b8 110
.b8 110
.b8 100
.b8 112
.b8 117
.b8 51
.b8 105
.b8 121
.b8 110
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 50
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x44 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 49
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa7:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
