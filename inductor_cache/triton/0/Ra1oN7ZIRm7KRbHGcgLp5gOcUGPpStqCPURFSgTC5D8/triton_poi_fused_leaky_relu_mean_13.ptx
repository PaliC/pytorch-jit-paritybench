//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_leaky_relu_mean_13 // -- Begin function triton_poi_fused_leaky_relu_mean_13
                                        // @triton_poi_fused_leaky_relu_mean_13
.visible .entry triton_poi_fused_leaky_relu_mean_13(
	.param .u64 .ptr .global .align 1 triton_poi_fused_leaky_relu_mean_13_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_leaky_relu_mean_13_param_1,
	.param .u32 triton_poi_fused_leaky_relu_mean_13_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<35>;
	.reg .f32 	%f<31>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_leaky_relu_mean_13_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_leaky_relu_mean_13_param_1];
$L__tmp0:
	.loc	1 21 28                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:21:33
	shl.b32 	%r18, %r1, 8;
	.loc	1 22 36                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:22:36
	mov.u32 	%r19, %tid.x;
	shl.b32 	%r20, %r19, 1;
	and.b32  	%r21, %r20, 254;
	.loc	1 22 23                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:22:23
	or.b32  	%r22, %r18, %r21;
	.loc	1 23 21                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:23:21
	setp.lt.s32 	%p1, %r22, 1024;
	.loc	1 25 19                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:25:19
	shr.s32 	%r24, %r22, 31;
	shr.u32 	%r25, %r24, 24;
	add.s32 	%r26, %r22, %r25;
	.loc	1 24 19                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:24:19
	and.b32  	%r27, %r26, -256;
	sub.s32 	%r28, %r22, %r27;
	.loc	1 27 40                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:27:40
	shl.b32 	%r29, %r26, 2;
	and.b32  	%r30, %r29, -1024;
	.loc	1 27 35                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:27:35
	add.s32 	%r31, %r30, %r28;
	.loc	1 27 30                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:27:30
	mul.wide.s32 	%rd8, %r31, 4;
	add.s64 	%rd1, %rd6, %rd8;
	.loc	1 27 45                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:27:45
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 28 41                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:28:41
	add.s32 	%r32, %r31, 256;
	.loc	1 28 30                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:28:30
	mul.wide.s32 	%rd9, %r32, 4;
	add.s64 	%rd2, %rd6, %rd9;
	.loc	1 28 51                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:28:51
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 29 42                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:29:42
	add.s32 	%r33, %r31, 512;
	.loc	1 29 31                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:29:31
	mul.wide.s32 	%rd10, %r33, 4;
	add.s64 	%rd3, %rd6, %rd10;
	.loc	1 29 52                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:29:52
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r6;
	mov.b32 	%f2, %r7;
	.loc	1 30 42                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:30:42
	add.s32 	%r34, %r31, 768;
	.loc	1 30 31                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:30:31
	mul.wide.s32 	%rd11, %r34, 4;
	add.s64 	%rd4, %rd6, %rd11;
	.loc	1 30 52                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:30:52
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r8;
	mov.b32 	%f4, %r9;
	.loc	1 27 45                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:27:45
	mov.b32 	%f5, %r2;
	mov.b32 	%f6, %r4;
	.loc	1 32 18                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:32:18
	setp.gt.f32 	%p6, %f6, 0f00000000;
	setp.gt.f32 	%p7, %f5, 0f00000000;
	.loc	1 34 18                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:34:18
	mul.f32 	%f7, %f6, 0f3DCCCCCD;
	mul.f32 	%f8, %f5, 0f3DCCCCCD;
	.loc	1 35 32                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:35:32
	selp.f32 	%f9, %f5, %f8, %p7;
	selp.f32 	%f10, %f6, %f7, %p6;
	.loc	1 27 45                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:27:45
	mov.b32 	%f11, %r3;
	mov.b32 	%f12, %r5;
	.loc	1 32 18                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:32:18
	setp.gt.f32 	%p8, %f12, 0f00000000;
	setp.gt.f32 	%p9, %f11, 0f00000000;
	.loc	1 34 18                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:34:18
	mul.f32 	%f13, %f12, 0f3DCCCCCD;
	mul.f32 	%f14, %f11, 0f3DCCCCCD;
	.loc	1 35 32                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:35:32
	selp.f32 	%f15, %f11, %f14, %p9;
	selp.f32 	%f16, %f12, %f13, %p8;
	.loc	1 39 19                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:39:19
	add.f32 	%f17, %f9, %f10;
	add.f32 	%f18, %f15, %f16;
	.loc	1 40 20                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:40:20
	setp.gt.f32 	%p10, %f1, 0f00000000;
	setp.gt.f32 	%p11, %f2, 0f00000000;
	.loc	1 41 20                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:41:20
	mul.f32 	%f19, %f1, 0f3DCCCCCD;
	mul.f32 	%f20, %f2, 0f3DCCCCCD;
	.loc	1 42 35                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:42:35
	selp.f32 	%f21, %f1, %f19, %p10;
	selp.f32 	%f22, %f2, %f20, %p11;
	.loc	1 43 20                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:43:20
	add.f32 	%f23, %f17, %f21;
	add.f32 	%f24, %f18, %f22;
	.loc	1 44 20                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:44:20
	setp.gt.f32 	%p12, %f3, 0f00000000;
	setp.gt.f32 	%p13, %f4, 0f00000000;
	.loc	1 45 20                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:45:20
	mul.f32 	%f25, %f3, 0f3DCCCCCD;
	mul.f32 	%f26, %f4, 0f3DCCCCCD;
	.loc	1 46 35                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:46:35
	selp.f32 	%f27, %f3, %f25, %p12;
	selp.f32 	%f28, %f4, %f26, %p13;
	.loc	1 47 20                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:47:20
	add.f32 	%f29, %f23, %f27;
	add.f32 	%f30, %f24, %f28;
	.loc	1 49 20                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:49:20
	mov.b32 	%r11, %f29;
	mov.b32 	%r12, 1082130432;
	// begin inline asm
	div.full.f32 %r16, %r11, %r12;
	// end inline asm
	mov.b32 	%r14, %f30;
	// begin inline asm
	div.full.f32 %r17, %r14, %r12;
	// end inline asm
	.loc	1 50 25                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:50:25
	mul.wide.s32 	%rd12, %r22, 4;
	add.s64 	%rd5, %rd7, %rd12;
	.loc	1 50 37                         // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:50:37
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd5 + 0 ], { %r16, %r17 };
	// end inline asm
	.loc	1 50 4                          // ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py:50:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/e4/ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 52
.b8 97
.b8 102
.b8 52
.b8 109
.b8 111
.b8 99
.b8 109
.b8 110
.b8 115
.b8 122
.b8 109
.b8 118
.b8 107
.b8 54
.b8 108
.b8 109
.b8 107
.b8 107
.b8 122
.b8 99
.b8 107
.b8 109
.b8 108
.b8 50
.b8 103
.b8 119
.b8 122
.b8 107
.b8 55
.b8 52
.b8 55
.b8 114
.b8 111
.b8 53
.b8 102
.b8 105
.b8 104
.b8 116
.b8 111
.b8 110
.b8 116
.b8 51
.b8 103
.b8 99
.b8 98
.b8 113
.b8 106
.b8 109
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 52
.b8 0
	}
	.section	.debug_macinfo	{	}
