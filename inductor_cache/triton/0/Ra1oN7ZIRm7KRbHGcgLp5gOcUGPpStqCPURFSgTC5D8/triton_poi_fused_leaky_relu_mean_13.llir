; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_leaky_relu_mean_13(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 1024, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 256, !dbg !15
  %12 = mul i32 %11, 256, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %13 = shl i32 %11, 10, !dbg !17
  %14 = add i32 %13, %.decomposed, !dbg !18
  %15 = sext i32 %14 to i64, !dbg !19
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !19
  %17 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %16, i1 %10) #1, !dbg !20
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !20
  %19 = extractvalue { i32, i32 } %17, 1, !dbg !20
  %20 = add i32 %14, 256, !dbg !21
  %21 = sext i32 %20 to i64, !dbg !22
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !22
  %23 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %22, i1 %10) #1, !dbg !23
  %24 = extractvalue { i32, i32 } %23, 0, !dbg !23
  %25 = extractvalue { i32, i32 } %23, 1, !dbg !23
  %26 = add i32 %14, 512, !dbg !24
  %27 = sext i32 %26 to i64, !dbg !25
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !25
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 %10) #1, !dbg !26
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !26
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !26
  %32 = bitcast i32 %30 to float, !dbg !26
  %33 = bitcast i32 %31 to float, !dbg !26
  %34 = add i32 %14, 768, !dbg !27
  %35 = sext i32 %34 to i64, !dbg !28
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !28
  %37 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %36, i1 %10) #1, !dbg !29
  %38 = extractvalue { i32, i32 } %37, 0, !dbg !29
  %39 = extractvalue { i32, i32 } %37, 1, !dbg !29
  %40 = bitcast i32 %38 to float, !dbg !29
  %41 = bitcast i32 %39 to float, !dbg !29
  %42 = insertelement <2 x i32> poison, i32 %18, i64 0, !dbg !20
  %43 = insertelement <2 x i32> %42, i32 %24, i64 1, !dbg !20
  %44 = bitcast <2 x i32> %43 to <2 x float>, !dbg !20
  %45 = fcmp ogt <2 x float> %44, zeroinitializer, !dbg !30
  %46 = fmul <2 x float> %44, splat (float 0x3FB99999A0000000), !dbg !31
  %47 = select <2 x i1> %45, <2 x float> %44, <2 x float> %46, !dbg !32
  %48 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !20
  %49 = insertelement <2 x i32> %48, i32 %25, i64 1, !dbg !20
  %50 = bitcast <2 x i32> %49 to <2 x float>, !dbg !20
  %51 = fcmp ogt <2 x float> %50, zeroinitializer, !dbg !30
  %52 = fmul <2 x float> %50, splat (float 0x3FB99999A0000000), !dbg !31
  %53 = select <2 x i1> %51, <2 x float> %50, <2 x float> %52, !dbg !32
  %shift = shufflevector <2 x float> %47, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !33
  %54 = fadd <2 x float> %47, %shift, !dbg !33
  %55 = extractelement <2 x float> %54, i64 0, !dbg !33
  %shift1 = shufflevector <2 x float> %53, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !33
  %56 = fadd <2 x float> %53, %shift1, !dbg !33
  %57 = extractelement <2 x float> %56, i64 0, !dbg !33
  %58 = fcmp ogt float %32, 0.000000e+00, !dbg !34
  %59 = fcmp ogt float %33, 0.000000e+00, !dbg !34
  %60 = fmul float %32, 0x3FB99999A0000000, !dbg !35
  %61 = fmul float %33, 0x3FB99999A0000000, !dbg !35
  %62 = select i1 %58, float %32, float %60, !dbg !36
  %63 = select i1 %59, float %33, float %61, !dbg !36
  %64 = fadd float %55, %62, !dbg !37
  %65 = fadd float %57, %63, !dbg !37
  %66 = fcmp ogt float %40, 0.000000e+00, !dbg !38
  %67 = fcmp ogt float %41, 0.000000e+00, !dbg !38
  %68 = fmul float %40, 0x3FB99999A0000000, !dbg !39
  %69 = fmul float %41, 0x3FB99999A0000000, !dbg !39
  %70 = select i1 %66, float %40, float %68, !dbg !40
  %71 = select i1 %67, float %41, float %69, !dbg !40
  %72 = fadd float %64, %70, !dbg !41
  %73 = fadd float %65, %71, !dbg !41
  %74 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %72, float 4.000000e+00) #1, !dbg !42
  %75 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %73, float 4.000000e+00) #1, !dbg !42
  %76 = sext i32 %9 to i64, !dbg !43
  %77 = getelementptr float, ptr addrspace(1) %1, i64 %76, !dbg !43
  %78 = bitcast float %74 to i32, !dbg !44
  %79 = bitcast float %75 to i32, !dbg !44
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %78, i32 %79, ptr addrspace(1) %77, i1 %10) #1, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ce4af4mocmnszmvk6lmkkzckml2gwzk747ro5fihtont3gcbqjmu.py", directory: "inductor_cache/e4")
!4 = !{ptr @triton_poi_fused_leaky_relu_mean_13, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_leaky_relu_mean_13, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_leaky_relu_mean_13", linkageName: "triton_poi_fused_leaky_relu_mean_13", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 40, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 45, scope: !7)
!21 = !DILocation(line: 28, column: 41, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 51, scope: !7)
!24 = !DILocation(line: 29, column: 42, scope: !7)
!25 = !DILocation(line: 29, column: 31, scope: !7)
!26 = !DILocation(line: 29, column: 52, scope: !7)
!27 = !DILocation(line: 30, column: 42, scope: !7)
!28 = !DILocation(line: 30, column: 31, scope: !7)
!29 = !DILocation(line: 30, column: 52, scope: !7)
!30 = !DILocation(line: 32, column: 18, scope: !7)
!31 = !DILocation(line: 34, column: 18, scope: !7)
!32 = !DILocation(line: 35, column: 32, scope: !7)
!33 = !DILocation(line: 39, column: 19, scope: !7)
!34 = !DILocation(line: 40, column: 20, scope: !7)
!35 = !DILocation(line: 41, column: 20, scope: !7)
!36 = !DILocation(line: 42, column: 35, scope: !7)
!37 = !DILocation(line: 43, column: 20, scope: !7)
!38 = !DILocation(line: 44, column: 20, scope: !7)
!39 = !DILocation(line: 45, column: 20, scope: !7)
!40 = !DILocation(line: 46, column: 35, scope: !7)
!41 = !DILocation(line: 47, column: 20, scope: !7)
!42 = !DILocation(line: 49, column: 20, scope: !7)
!43 = !DILocation(line: 50, column: 25, scope: !7)
!44 = !DILocation(line: 50, column: 37, scope: !7)
!45 = !DILocation(line: 50, column: 4, scope: !7)
