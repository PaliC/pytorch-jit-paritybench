//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_leaky_relu_7 // -- Begin function triton_poi_fused_leaky_relu_7
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_leaky_relu_7
.visible .entry triton_poi_fused_leaky_relu_7(
	.param .u64 .ptr .global .align 1 triton_poi_fused_leaky_relu_7_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_leaky_relu_7_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_leaky_relu_7_param_2,
	.param .u32 triton_poi_fused_leaky_relu_7_param_3,
	.param .u32 triton_poi_fused_leaky_relu_7_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<61>;
	.reg .f32 	%f<35>;
	.reg .b64 	%rd<22>;
	.loc	1 19 0                          // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused_leaky_relu_7_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused_leaky_relu_7_param_1];
$L__tmp0:
	.loc	1 22 28                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:22:33
	shl.b32 	%r29, %r1, 8;
	ld.param.u64 	%rd13, [triton_poi_fused_leaky_relu_7_param_2];
	.loc	1 23 44                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:23:44
	mov.u32 	%r30, %tid.x;
	and.b32  	%r31, %r30, 127;
	shl.b32 	%r32, %r30, 1;
	and.b32  	%r33, %r32, 254;
	.loc	1 23 23                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:23:23
	or.b32  	%r34, %r29, %r31;
	or.b32  	%r35, %r34, 128;
	or.b32  	%r36, %r29, %r33;
	.loc	1 24 21                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:24:21
	setp.lt.s32 	%p3, %r34, 256;
	setp.lt.s32 	%p4, %r35, 256;
	setp.lt.s32 	%p19, %r36, 256;
	.loc	1 25 28                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:25:33
	shl.b32 	%r37, %r2, 2;
	.loc	1 26 23                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:26:23
	or.b32  	%r38, %r37, 1;
	or.b32  	%r39, %r37, 2;
	or.b32  	%r40, %r37, 3;
	.loc	1 27 21                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:27:21
	setp.lt.s32 	%p20, %r37, 4;
	setp.lt.s32 	%p21, %r38, 4;
	setp.lt.s32 	%p22, %r39, 4;
	setp.lt.s32 	%p23, %r40, 4;
	.loc	1 30 19                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:30:19
	bfe.u32 	%r41, %r1, 23, 1;
	add.s32 	%r42, %r34, %r41;
	shr.s32 	%r43, %r42, 1;
	add.s32 	%r44, %r35, %r41;
	shr.s32 	%r45, %r44, 1;
	.loc	1 32 39                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:32:39
	add.s32 	%r46, %r34, %r2;
	shl.b32 	%r47, %r46, 2;
	add.s32 	%r48, %r35, %r2;
	shl.b32 	%r49, %r48, 2;
	.loc	1 32 34                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:32:34
	mul.wide.s32 	%rd14, %r47, 4;
	add.s64 	%rd1, %rd11, %rd14;
	mul.wide.s32 	%rd15, %r49, 4;
	add.s64 	%rd2, %rd11, %rd15;
	.loc	1 32 54                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:32:54
	and.pred  	%p1, %p20, %p3;
	and.pred  	%p2, %p20, %p4;
	and.pred  	%p13, %p20, %p19;
	and.pred  	%p14, %p19, %p21;
	and.pred  	%p15, %p19, %p22;
	and.pred  	%p16, %p19, %p23;
	.loc	1 32 46                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:32:46
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:33:30
	mul.wide.s32 	%rd16, %r43, 4;
	add.s64 	%rd3, %rd12, %rd16;
	mul.wide.s32 	%rd17, %r45, 4;
	add.s64 	%rd4, %rd12, %rd17;
	.loc	1 33 35                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:33:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r11 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r12 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 32 46                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:32:46
	mov.b32 	%f1, %r10;
	mov.b32 	%f2, %r9;
	mov.b32 	%f3, %r8;
	mov.b32 	%f4, %r7;
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r5;
	mov.b32 	%f7, %r4;
	mov.b32 	%f8, %r3;
	.loc	1 33 35                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:33:35
	mov.b32 	%f9, %r12;
	mov.b32 	%f10, %r11;
	.loc	1 34 18                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:34:18
	add.f32 	%f11, %f10, %f8;
	add.f32 	%f12, %f10, %f7;
	add.f32 	%f13, %f10, %f6;
	add.f32 	%f14, %f10, %f5;
	add.f32 	%f15, %f9, %f4;
	add.f32 	%f16, %f9, %f3;
	add.f32 	%f17, %f9, %f2;
	add.f32 	%f18, %f9, %f1;
	.loc	1 36 18                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:36:18
	setp.gt.f32 	%p24, %f18, 0f00000000;
	setp.gt.f32 	%p25, %f17, 0f00000000;
	setp.gt.f32 	%p26, %f16, 0f00000000;
	setp.gt.f32 	%p27, %f15, 0f00000000;
	setp.gt.f32 	%p28, %f14, 0f00000000;
	setp.gt.f32 	%p29, %f13, 0f00000000;
	setp.gt.f32 	%p30, %f12, 0f00000000;
	setp.gt.f32 	%p31, %f11, 0f00000000;
	.loc	1 38 18                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:38:18
	mul.f32 	%f19, %f11, 0f3E4CCCCD;
	mul.f32 	%f20, %f12, 0f3E4CCCCD;
	mul.f32 	%f21, %f13, 0f3E4CCCCD;
	mul.f32 	%f22, %f14, 0f3E4CCCCD;
	mul.f32 	%f23, %f15, 0f3E4CCCCD;
	mul.f32 	%f24, %f16, 0f3E4CCCCD;
	mul.f32 	%f25, %f17, 0f3E4CCCCD;
	mul.f32 	%f26, %f18, 0f3E4CCCCD;
	.loc	1 39 32                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:39:32
	selp.f32 	%f27, %f11, %f19, %p31;
	selp.f32 	%f28, %f12, %f20, %p30;
	selp.f32 	%f29, %f13, %f21, %p29;
	selp.f32 	%f30, %f14, %f22, %p28;
	selp.f32 	%f31, %f15, %f23, %p27;
	selp.f32 	%f32, %f16, %f24, %p26;
	selp.f32 	%f33, %f17, %f25, %p25;
	selp.f32 	%f34, %f18, %f26, %p24;
	.loc	1 40 32                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:40:32
	shl.b32 	%r50, %r2, 3;
	shl.b32 	%r51, %r38, 1;
	shl.b32 	%r52, %r39, 1;
	shl.b32 	%r53, %r40, 1;
	.loc	1 40 39                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:40:39
	shl.b32 	%r54, %r36, 2;
	.loc	1 40 37                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:40:37
	add.s32 	%r55, %r54, %r50;
	add.s32 	%r56, %r51, %r54;
	add.s32 	%r57, %r52, %r54;
	add.s32 	%r58, %r53, %r54;
	.loc	1 40 25                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:40:25
	cvt.s64.s32 	%rd18, %r55;
	add.s64 	%rd5, %rd13, %rd18;
	cvt.s64.s32 	%rd19, %r56;
	add.s64 	%rd6, %rd13, %rd19;
	cvt.s64.s32 	%rd20, %r57;
	add.s64 	%rd7, %rd13, %rd20;
	cvt.s64.s32 	%rd21, %r58;
	add.s64 	%rd8, %rd13, %rd21;
	.loc	1 40 50                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:40:50
	mov.u32 	%r59, global_smem;
	add.s32 	%r13, %r59, %r31;
	selp.u16 	%rs1, 1, 0, %p31;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b8 [ %r13 + 0 ], %rs1;
	// end inline asm
	add.s32 	%r14, %r13, 128;
	selp.u16 	%rs2, 1, 0, %p27;
	// begin inline asm
	@%p5 st.shared.b8 [ %r14 + 0 ], %rs2;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r60, %r59, %r33;
	ld.shared.u8 	%rs13, [%r60];
	and.b16  	%rs14, %rs13, 1;
	ld.shared.u8 	%rs15, [%r60+1];
	and.b16  	%rs16, %rs15, 1;
	bar.sync 	0;
	selp.u16 	%rs3, 1, 0, %p30;
	// begin inline asm
	@%p5 st.shared.b8 [ %r13 + 0 ], %rs3;
	// end inline asm
	selp.u16 	%rs4, 1, 0, %p26;
	// begin inline asm
	@%p5 st.shared.b8 [ %r14 + 0 ], %rs4;
	// end inline asm
	bar.sync 	0;
	ld.shared.u8 	%rs17, [%r60];
	and.b16  	%rs18, %rs17, 1;
	ld.shared.u8 	%rs19, [%r60+1];
	and.b16  	%rs20, %rs19, 1;
	bar.sync 	0;
	selp.u16 	%rs5, 1, 0, %p29;
	// begin inline asm
	@%p5 st.shared.b8 [ %r13 + 0 ], %rs5;
	// end inline asm
	selp.u16 	%rs6, 1, 0, %p25;
	// begin inline asm
	@%p5 st.shared.b8 [ %r14 + 0 ], %rs6;
	// end inline asm
	bar.sync 	0;
	ld.shared.u8 	%rs21, [%r60];
	and.b16  	%rs22, %rs21, 1;
	ld.shared.u8 	%rs23, [%r60+1];
	and.b16  	%rs24, %rs23, 1;
	bar.sync 	0;
	selp.u16 	%rs7, 1, 0, %p28;
	// begin inline asm
	@%p5 st.shared.b8 [ %r13 + 0 ], %rs7;
	// end inline asm
	selp.u16 	%rs8, 1, 0, %p24;
	// begin inline asm
	@%p5 st.shared.b8 [ %r14 + 0 ], %rs8;
	// end inline asm
	bar.sync 	0;
	ld.shared.u8 	%rs25, [%r60];
	and.b16  	%rs26, %rs25, 1;
	ld.shared.u8 	%rs27, [%r60+1];
	and.b16  	%rs28, %rs27, 1;
	shl.b16 	%rs29, %rs16, 8;
	or.b16  	%rs9, %rs14, %rs29;
	// begin inline asm
	@%p13 st.global.b16 [ %rd5 + 0 ], { %rs9 };
	// end inline asm
	shl.b16 	%rs30, %rs20, 8;
	or.b16  	%rs10, %rs18, %rs30;
	// begin inline asm
	@%p14 st.global.b16 [ %rd6 + 0 ], { %rs10 };
	// end inline asm
	shl.b16 	%rs31, %rs24, 8;
	or.b16  	%rs11, %rs22, %rs31;
	// begin inline asm
	@%p15 st.global.b16 [ %rd7 + 0 ], { %rs11 };
	// end inline asm
	shl.b16 	%rs32, %rs28, 8;
	or.b16  	%rs12, %rs26, %rs32;
	// begin inline asm
	@%p16 st.global.b16 [ %rd8 + 0 ], { %rs12 };
	// end inline asm
	.loc	1 41 4                          // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:41:4
	bar.sync 	0;
	.loc	1 42 46                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:42:46
	mov.b32 	%r21, %f27;
	mov.b32 	%r22, %f28;
	mov.b32 	%r23, %f29;
	mov.b32 	%r24, %f30;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r21, %r22, %r23, %r24 };
	// end inline asm
	mov.b32 	%r25, %f31;
	mov.b32 	%r26, %f32;
	mov.b32 	%r27, %f33;
	mov.b32 	%r28, %f34;
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd2 + 0 ], { %r25, %r26, %r27, %r28 };
	// end inline asm
	.loc	1 42 4                          // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:42:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fx/cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 120
.b8 51
.b8 102
.b8 106
.b8 52
.b8 109
.b8 97
.b8 104
.b8 110
.b8 104
.b8 54
.b8 117
.b8 99
.b8 111
.b8 103
.b8 115
.b8 55
.b8 103
.b8 106
.b8 117
.b8 118
.b8 102
.b8 51
.b8 53
.b8 51
.b8 109
.b8 110
.b8 122
.b8 54
.b8 102
.b8 101
.b8 116
.b8 105
.b8 98
.b8 107
.b8 114
.b8 106
.b8 117
.b8 111
.b8 55
.b8 101
.b8 98
.b8 97
.b8 111
.b8 50
.b8 104
.b8 101
.b8 116
.b8 117
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 120
.b8 0
	}
	.section	.debug_macinfo	{	}
