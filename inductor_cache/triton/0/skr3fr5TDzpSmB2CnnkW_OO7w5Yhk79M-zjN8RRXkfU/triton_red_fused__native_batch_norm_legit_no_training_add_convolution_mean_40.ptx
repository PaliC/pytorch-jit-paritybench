//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40 // -- Begin function triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40
.visible .entry triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40(
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_9,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_10,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_11
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<57>;
	.reg .b32 	%r<128>;
	.reg .f32 	%f<105>;
	.reg .b64 	%rd<49>;
	.loc	1 19 0                          // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd36, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_0];
	ld.param.u64 	%rd37, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_1];
$L__tmp0:
	.loc	1 22 28                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:24:21
	setp.lt.s32 	%p1, %r1, 128;
	ld.param.u64 	%rd38, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_2];
	.loc	1 27 19                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:27:19
	shr.s32 	%r95, %r1, 31;
	shr.u32 	%r96, %r95, 27;
	add.s32 	%r97, %r1, %r96;
	and.b32  	%r98, %r97, -32;
	sub.s32 	%r99, %r1, %r98;
	ld.param.u64 	%rd39, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_3];
	ld.param.u64 	%rd40, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_4];
	.loc	1 28 30                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:28:30
	mul.wide.s32 	%rd41, %r99, 4;
	add.s64 	%rd1, %rd39, %rd41;
	ld.param.u64 	%rd42, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_5];
	.loc	1 28 35                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:28:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd43, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_6];
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd44, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_7];
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd45, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_8];
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd46, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_40_param_9];
	.loc	1 29 30                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:29:30
	add.s64 	%rd5, %rd40, %rd41;
	.loc	1 29 35                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:29:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:30:30
	add.s64 	%rd9, %rd42, %rd41;
	.loc	1 30 35                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:30:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 31 30                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:31:30
	add.s64 	%rd13, %rd43, %rd41;
	.loc	1 31 35                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:31:35
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r17;
	.loc	1 32 31                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:32:31
	add.s64 	%rd17, %rd44, %rd41;
	.loc	1 32 36                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:32:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 33 31                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:33:31
	add.s64 	%rd21, %rd45, %rd41;
	.loc	1 33 36                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:33:36
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 45 23                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:45:23
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 46 31                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:46:31
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 39 48                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:39:48
	shl.b32 	%r100, %r1, 12;
	.loc	1 33 36                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:33:36
	mov.b32 	%f4, %r25;
	.loc	1 32 36                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:32:36
	mov.b32 	%f5, %r21;
	.loc	1 30 35                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:30:35
	mov.b32 	%f6, %r13;
	.loc	1 29 35                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:29:35
	mov.b32 	%f7, %r9;
	.loc	1 28 35                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:28:35
	mov.b32 	%f8, %r5;
	.loc	1 25 33                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:25:33
	mov.u32 	%r101, %tid.x;
	shl.b32 	%r102, %r101, 2;
	and.b32  	%r103, %r102, 2044;
	.loc	1 48 24                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:48:24
	mov.b32 	%r28, %f3;
	mov.b32 	%r27, 1065353216;
	// begin inline asm
	div.full.f32 %r26, %r27, %r28;
	// end inline asm
	mov.b32 	%f9, %r26;
	or.b32  	%r104, %r100, %r103;
	.loc	1 39 38                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:39:38
	mul.wide.s32 	%rd47, %r104, 4;
	add.s64 	%rd25, %rd36, %rd47;
	mov.b32 	%r33, 0;
	.loc	1 39 53                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:39:53
	// begin inline asm
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r29, %r30, %r31, %r32 }, [ %rd25 + 0 ];
	@!%p1 mov.u32 %r29, %r33;
	@!%p1 mov.u32 %r30, %r33;
	@!%p1 mov.u32 %r31, %r33;
	@!%p1 mov.u32 %r32, %r33;
	// end inline asm
	mov.b32 	%f10, %r29;
	mov.b32 	%f11, %r30;
	mov.b32 	%f12, %r31;
	mov.b32 	%f13, %r32;
	.loc	1 40 38                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:40:38
	add.s64 	%rd26, %rd37, %rd47;
	.loc	1 40 53                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:40:53
	// begin inline asm
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r37, %r38, %r39, %r40 }, [ %rd26 + 0 ];
	@!%p1 mov.u32 %r37, %r33;
	@!%p1 mov.u32 %r38, %r33;
	@!%p1 mov.u32 %r39, %r33;
	@!%p1 mov.u32 %r40, %r33;
	// end inline asm
	mov.b32 	%f14, %r37;
	mov.b32 	%f15, %r38;
	mov.b32 	%f16, %r39;
	mov.b32 	%f17, %r40;
	.loc	1 41 22                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:41:22
	add.f32 	%f18, %f8, %f10;
	add.f32 	%f19, %f8, %f11;
	add.f32 	%f20, %f8, %f12;
	add.f32 	%f21, %f8, %f13;
	.loc	1 42 22                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:42:22
	add.f32 	%f22, %f7, %f14;
	add.f32 	%f23, %f7, %f15;
	add.f32 	%f24, %f7, %f16;
	add.f32 	%f25, %f7, %f17;
	.loc	1 43 22                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:43:22
	sub.f32 	%f26, %f22, %f6;
	sub.f32 	%f27, %f23, %f6;
	sub.f32 	%f28, %f24, %f6;
	sub.f32 	%f29, %f25, %f6;
	.loc	1 51 23                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:51:23
	mul.f32 	%f30, %f9, %f26;
	mul.f32 	%f31, %f9, %f27;
	mul.f32 	%f32, %f9, %f28;
	mul.f32 	%f33, %f9, %f29;
	.loc	1 53 24                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:53:24
	fma.rn.f32 	%f34, %f30, %f5, %f4;
	fma.rn.f32 	%f35, %f31, %f5, %f4;
	fma.rn.f32 	%f36, %f32, %f5, %f4;
	fma.rn.f32 	%f37, %f33, %f5, %f4;
	.loc	1 54 23                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:54:23
	add.f32 	%f38, %f18, %f34;
	add.f32 	%f39, %f19, %f35;
	add.f32 	%f40, %f20, %f36;
	add.f32 	%f41, %f21, %f37;
	.loc	1 56 25                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:56:25
	add.f32 	%f42, %f38, 0f00000000;
	add.f32 	%f43, %f39, 0f00000000;
	add.f32 	%f44, %f40, 0f00000000;
	add.f32 	%f45, %f41, 0f00000000;
	.loc	1 58 53                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:58:53
	mov.b32 	%r45, %f18;
	mov.b32 	%r46, %f19;
	mov.b32 	%r47, %f20;
	mov.b32 	%r48, %f21;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd25 + 0 ], { %r45, %r46, %r47, %r48 };
	// end inline asm
	.loc	1 59 53                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:59:53
	mov.b32 	%r49, %f22;
	mov.b32 	%r50, %f23;
	mov.b32 	%r51, %f24;
	mov.b32 	%r52, %f25;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd26 + 0 ], { %r49, %r50, %r51, %r52 };
	// end inline asm
	.loc	1 60 29                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:60:29
	add.s64 	%rd29, %rd46, %rd47;
	.loc	1 60 51                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:60:51
	mov.b32 	%r53, %f38;
	mov.b32 	%r54, %f39;
	mov.b32 	%r55, %f40;
	mov.b32 	%r56, %f41;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd29 + 0 ], { %r53, %r54, %r55, %r56 };
	// end inline asm
	.loc	1 39 38                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:39:38
	add.s64 	%rd30, %rd25, 8192;
	.loc	1 39 53                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:39:53
	// begin inline asm
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r57, %r58, %r59, %r60 }, [ %rd30 + 0 ];
	@!%p1 mov.u32 %r57, %r33;
	@!%p1 mov.u32 %r58, %r33;
	@!%p1 mov.u32 %r59, %r33;
	@!%p1 mov.u32 %r60, %r33;
	// end inline asm
	mov.b32 	%f46, %r57;
	mov.b32 	%f47, %r58;
	mov.b32 	%f48, %r59;
	mov.b32 	%f49, %r60;
	.loc	1 40 38                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:40:38
	add.s64 	%rd31, %rd26, 8192;
	.loc	1 40 53                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:40:53
	// begin inline asm
	mov.u32 %r65, 0x0;
	mov.u32 %r66, 0x0;
	mov.u32 %r67, 0x0;
	mov.u32 %r68, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r65, %r66, %r67, %r68 }, [ %rd31 + 0 ];
	@!%p1 mov.u32 %r65, %r33;
	@!%p1 mov.u32 %r66, %r33;
	@!%p1 mov.u32 %r67, %r33;
	@!%p1 mov.u32 %r68, %r33;
	// end inline asm
	mov.b32 	%f50, %r65;
	mov.b32 	%f51, %r66;
	mov.b32 	%f52, %r67;
	mov.b32 	%f53, %r68;
	.loc	1 41 22                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:41:22
	add.f32 	%f54, %f8, %f46;
	add.f32 	%f55, %f8, %f47;
	add.f32 	%f56, %f8, %f48;
	add.f32 	%f57, %f8, %f49;
	.loc	1 42 22                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:42:22
	add.f32 	%f58, %f7, %f50;
	add.f32 	%f59, %f7, %f51;
	add.f32 	%f60, %f7, %f52;
	add.f32 	%f61, %f7, %f53;
	.loc	1 43 22                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:43:22
	sub.f32 	%f62, %f58, %f6;
	sub.f32 	%f63, %f59, %f6;
	sub.f32 	%f64, %f60, %f6;
	sub.f32 	%f65, %f61, %f6;
	.loc	1 51 23                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:51:23
	mul.f32 	%f66, %f9, %f62;
	mul.f32 	%f67, %f9, %f63;
	mul.f32 	%f68, %f9, %f64;
	mul.f32 	%f69, %f9, %f65;
	.loc	1 53 24                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:53:24
	fma.rn.f32 	%f70, %f66, %f5, %f4;
	fma.rn.f32 	%f71, %f67, %f5, %f4;
	fma.rn.f32 	%f72, %f68, %f5, %f4;
	fma.rn.f32 	%f73, %f69, %f5, %f4;
	.loc	1 54 23                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:54:23
	add.f32 	%f74, %f54, %f70;
	add.f32 	%f75, %f55, %f71;
	add.f32 	%f76, %f56, %f72;
	add.f32 	%f77, %f57, %f73;
	.loc	1 56 25                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:56:25
	add.f32 	%f78, %f42, %f74;
	add.f32 	%f79, %f43, %f75;
	add.f32 	%f80, %f44, %f76;
	add.f32 	%f81, %f45, %f77;
	.loc	1 58 53                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:58:53
	mov.b32 	%r73, %f54;
	mov.b32 	%r74, %f55;
	mov.b32 	%r75, %f56;
	mov.b32 	%r76, %f57;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd30 + 0 ], { %r73, %r74, %r75, %r76 };
	// end inline asm
	.loc	1 59 53                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:59:53
	mov.b32 	%r77, %f58;
	mov.b32 	%r78, %f59;
	mov.b32 	%r79, %f60;
	mov.b32 	%r80, %f61;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd31 + 0 ], { %r77, %r78, %r79, %r80 };
	// end inline asm
	.loc	1 60 29                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:60:29
	add.s64 	%rd34, %rd29, 8192;
	.loc	1 60 51                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:60:51
	mov.b32 	%r81, %f74;
	mov.b32 	%r82, %f75;
	mov.b32 	%r83, %f76;
	mov.b32 	%r84, %f77;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd34 + 0 ], { %r81, %r82, %r83, %r84 };
	// end inline asm
	.loc	1 25 33                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:25:33
	and.b32  	%r105, %r101, 31;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f78, %f79;
	add.f32 	%f83, %f80, %f82;
	add.f32 	%f84, %f81, %f83;
	selp.f32 	%f85, %f84, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f85;
	shfl.sync.bfly.b32	%r107, %r106, 16, 31, -1;
	mov.b32 	%f86, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f87, %f85, %f86;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r108, %f87;
	shfl.sync.bfly.b32	%r109, %r108, 8, 31, -1;
	mov.b32 	%f88, %r109;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f89, %f87, %f88;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r110, %f89;
	shfl.sync.bfly.b32	%r111, %r110, 4, 31, -1;
	mov.b32 	%f90, %r111;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f91, %f89, %f90;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r112, %f91;
	shfl.sync.bfly.b32	%r113, %r112, 2, 31, -1;
	mov.b32 	%f92, %r113;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f93, %f91, %f92;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r114, %f93;
	shfl.sync.bfly.b32	%r115, %r114, 1, 31, -1;
	mov.b32 	%f94, %r115;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f95, %f93, %f94;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p51, %r105, 0;
	shr.u32 	%r116, %r101, 3;
	and.b32  	%r117, %r116, 60;
	mov.u32 	%r118, global_smem;
	add.s32 	%r85, %r118, %r117;
	mov.b32 	%r86, %f95;
	// begin inline asm
	@%p51 st.shared.b32 [ %r85 + 0 ], %r86;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p52, %r101, 16;
	add.s32 	%r88, %r118, %r102;
	// begin inline asm
	@%p52 ld.shared.b32 %r87, [ %r88 + 0 ];
	// end inline asm
	mov.b32 	%f96, %r87;
	shfl.sync.bfly.b32	%r119, %r87, 8, 31, -1;
	mov.b32 	%f97, %r119;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f98, %f96, %f97;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r120, %f98;
	shfl.sync.bfly.b32	%r121, %r120, 4, 31, -1;
	mov.b32 	%f99, %r121;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f100, %f98, %f99;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r122, %f100;
	shfl.sync.bfly.b32	%r123, %r122, 2, 31, -1;
	mov.b32 	%f101, %r123;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f102, %f100, %f101;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r124, %f102;
	shfl.sync.bfly.b32	%r125, %r124, 1, 31, -1;
	mov.b32 	%f103, %r125;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f104, %f102, %f103;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r126, %r101, 15;
	setp.eq.s32 	%p55, %r126, 0;
	and.pred  	%p53, %p52, %p55;
	mov.b32 	%r90, %f104;
	// begin inline asm
	@%p53 st.shared.b32 [ %r88 + 0 ], %r90;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 63 20                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:63:20
	ld.shared.u32 	%r92, [global_smem];
	mov.b32 	%r93, 1166016512;
	// begin inline asm
	div.full.f32 %r94, %r92, %r93;
	// end inline asm
	.loc	1 64 4                          // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:64:4
	bar.sync 	0;
	.loc	1 65 28                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:65:28
	mul.wide.s32 	%rd48, %r1, 4;
	add.s64 	%rd35, %rd38, %rd48;
	.loc	1 65 40                         // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:65:40
	and.b32  	%r127, %r101, 511;
	setp.eq.s32 	%p56, %r127, 0;
	and.pred  	%p54, %p56, %p1;
	// begin inline asm
	@%p54 st.global.b32 [ %rd35 + 0 ], { %r94 };
	// end inline asm
	.loc	1 65 4                          // cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py:65:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vq/cvqdkx6agwdupgg7nua2zu3eideoi3rullzv4km3ndxevyn6atok.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 222                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 113
.b8 100
.b8 107
.b8 120
.b8 54
.b8 97
.b8 103
.b8 119
.b8 100
.b8 117
.b8 112
.b8 103
.b8 103
.b8 55
.b8 110
.b8 117
.b8 97
.b8 50
.b8 122
.b8 117
.b8 51
.b8 101
.b8 105
.b8 100
.b8 101
.b8 111
.b8 105
.b8 51
.b8 114
.b8 117
.b8 108
.b8 108
.b8 122
.b8 118
.b8 52
.b8 107
.b8 109
.b8 51
.b8 110
.b8 100
.b8 120
.b8 101
.b8 118
.b8 121
.b8 110
.b8 54
.b8 97
.b8 116
.b8 111
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 113
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x50 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 52
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb3:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 61                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
