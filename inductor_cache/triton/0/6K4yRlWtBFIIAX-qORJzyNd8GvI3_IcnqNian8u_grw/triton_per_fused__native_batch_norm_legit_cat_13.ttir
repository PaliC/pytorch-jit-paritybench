#loc = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":19:0)
#loc1 = loc(unknown)
#loc14 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":38:24)
#loc21 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":46:26)
#loc43 = loc(callsite(#loc1 at #loc14))
#loc46 = loc(callsite(#loc1 at #loc21))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_cat_13(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":19:0)) attributes {noinline = false} {
    %c32768_i32 = arith.constant 32768 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst = arith.constant dense<2.000000e-01> : tensor<1x64xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %5 = arith.remsi %0, %c256_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c256_i32 : i32 loc(#loc7)
    %7 = arith.muli %0, %c64_i32 : i32 loc(#loc8)
    %8 = tt.splat %7 : i32 -> tensor<1x64xi32> loc(#loc9)
    %9 = arith.addi %4, %8 : tensor<1x64xi32> loc(#loc9)
    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.addptr %10, %9 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc10)
    %12 = tt.splat %1 : i1 -> tensor<1x64xi1> loc(#loc11)
    %13 = tt.load %11, %12, %cst_2 : tensor<1x64x!tt.ptr<f32>> loc(#loc11)
    %14 = arith.select %12, %13, %cst_2 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc12)
    %15 = "tt.reduce"(%14) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc14)), %arg7: f32 loc(callsite(#loc1 at #loc14))):
      %44 = arith.addf %arg6, %arg7 : f32 loc(#loc47)
      tt.reduce.return %44 : f32 loc(#loc42)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc42)
    %16 = tt.expand_dims %15 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc16)
    %17 = arith.divf %16, %cst_1 : tensor<1x1xf32> loc(#loc17)
    %18 = tt.broadcast %17 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc18)
    %19 = arith.subf %13, %18 : tensor<1x64xf32> loc(#loc18)
    %20 = arith.mulf %19, %19 : tensor<1x64xf32> loc(#loc19)
    %21 = arith.select %12, %20, %cst_2 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc20)
    %22 = "tt.reduce"(%21) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc21)), %arg7: f32 loc(callsite(#loc1 at #loc21))):
      %44 = arith.addf %arg6, %arg7 : f32 loc(#loc48)
      tt.reduce.return %44 : f32 loc(#loc45)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc45)
    %23 = tt.expand_dims %22 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc22)
    %24 = arith.divf %23, %cst_1 : tensor<1x1xf32> loc(#loc23)
    %25 = arith.addf %24, %cst_0 : tensor<1x1xf32> loc(#loc24)
    %26 = tt.extern_elementwise %25 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc25)
    %27 = tt.broadcast %26 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc26)
    %28 = arith.mulf %19, %27 : tensor<1x64xf32> loc(#loc26)
    %29 = arith.cmpf ogt, %28, %cst_2 : tensor<1x64xf32> loc(#loc27)
    %30 = arith.mulf %28, %cst : tensor<1x64xf32> loc(#loc28)
    %31 = arith.select %29, %28, %30 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc29)
    gpu.barrier loc(#loc30)
    %32 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc31)
    %33 = tt.splat %32 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc31)
    tt.store %33, %26, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc32)
    %34 = arith.muli %5, %c64_i32 : i32 loc(#loc33)
    %35 = tt.splat %34 : i32 -> tensor<1x64xi32> loc(#loc34)
    %36 = arith.addi %4, %35 : tensor<1x64xi32> loc(#loc34)
    %37 = arith.muli %6, %c32768_i32 : i32 loc(#loc35)
    %38 = tt.splat %37 : i32 -> tensor<1x64xi32> loc(#loc36)
    %39 = arith.addi %36, %38 : tensor<1x64xi32> loc(#loc36)
    %40 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc37)
    %41 = tt.addptr %40, %39 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc37)
    tt.store %41, %31, %12 : tensor<1x64x!tt.ptr<f32>> loc(#loc38)
    %42 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc39)
    %43 = tt.splat %42 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc39)
    tt.store %43, %17, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc40)
    tt.return loc(#loc41)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":23:28)
#loc3 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":25:21)
#loc4 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":26:26)
#loc5 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":26:34)
#loc6 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":31:19)
#loc7 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":32:19)
#loc8 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":33:38)
#loc9 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":33:35)
#loc10 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":33:30)
#loc11 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":33:43)
#loc12 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":37:33)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc16 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":38:27)
#loc17 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":41:19)
#loc18 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":42:19)
#loc19 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":43:20)
#loc20 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":45:35)
#loc22 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":46:29)
#loc23 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":48:20)
#loc24 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":50:20)
#loc25 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":51:28)
#loc26 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":53:20)
#loc27 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":55:20)
#loc28 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":57:20)
#loc29 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":58:35)
#loc30 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":59:4)
#loc31 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":60:28)
#loc32 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":60:40)
#loc33 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":61:33)
#loc34 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":61:30)
#loc35 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":61:44)
#loc36 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":61:38)
#loc37 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":61:25)
#loc38 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":61:56)
#loc39 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":62:25)
#loc40 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":62:37)
#loc41 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":62:4)
#loc42 = loc(callsite(#loc13 at #loc14))
#loc44 = loc(callsite(#loc15 at #loc13))
#loc45 = loc(callsite(#loc13 at #loc21))
#loc47 = loc(callsite(#loc44 at #loc14))
#loc48 = loc(callsite(#loc44 at #loc21))
