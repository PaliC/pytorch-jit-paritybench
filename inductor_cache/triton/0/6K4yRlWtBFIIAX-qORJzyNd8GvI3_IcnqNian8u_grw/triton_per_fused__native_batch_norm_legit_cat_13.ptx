//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_cat_13 // -- Begin function triton_per_fused__native_batch_norm_legit_cat_13
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_cat_13
.visible .entry triton_per_fused__native_batch_norm_legit_cat_13(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_cat_13_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_cat_13_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_cat_13_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_cat_13_param_3,
	.param .u32 triton_per_fused__native_batch_norm_legit_cat_13_param_4,
	.param .u32 triton_per_fused__native_batch_norm_legit_cat_13_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<67>;
	.reg .f32 	%f<39>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd5, [triton_per_fused__native_batch_norm_legit_cat_13_param_0];
	ld.param.u64 	%rd6, [triton_per_fused__native_batch_norm_legit_cat_13_param_1];
$L__tmp0:
	.loc	1 23 28                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:25:21
	setp.lt.s32 	%p1, %r1, 1024;
	ld.param.u64 	%rd7, [triton_per_fused__native_batch_norm_legit_cat_13_param_2];
	ld.param.u64 	%rd8, [triton_per_fused__native_batch_norm_legit_cat_13_param_3];
	.loc	1 26 34                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:26:34
	mov.u32 	%r25, %tid.x;
	and.b32  	%r26, %r25, 31;
	and.b32  	%r27, %r25, 63;
	.loc	1 33 38                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:33:38
	shl.b32 	%r28, %r1, 6;
	.loc	1 33 35                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:33:35
	or.b32  	%r29, %r28, %r27;
	.loc	1 33 30                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:33:30
	mul.wide.s32 	%rd9, %r29, 4;
	add.s64 	%rd1, %rd6, %rd9;
	mov.b32 	%r3, 0;
	.loc	1 33 43                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:33:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 37 33                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:37:33
	selp.f32 	%f2, %f1, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f2;
	shfl.sync.bfly.b32	%r31, %r30, 16, 31, -1;
	mov.b32 	%f3, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f4, %f2, %f3;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f4;
	shfl.sync.bfly.b32	%r33, %r32, 8, 31, -1;
	mov.b32 	%f5, %r33;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f4, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f6;
	shfl.sync.bfly.b32	%r35, %r34, 4, 31, -1;
	mov.b32 	%f7, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f6, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f8;
	shfl.sync.bfly.b32	%r37, %r36, 2, 31, -1;
	mov.b32 	%f9, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f10;
	shfl.sync.bfly.b32	%r39, %r38, 1, 31, -1;
	mov.b32 	%f11, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p3, %r26, 0;
	shr.u32 	%r40, %r25, 3;
	and.b32  	%r41, %r40, 4;
	mov.u32 	%r42, global_smem;
	add.s32 	%r4, %r42, %r41;
	mov.b32 	%r5, %f12;
	// begin inline asm
	@%p3 st.shared.b32 [ %r4 + 0 ], %r5;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p4, %r25, 2;
	shl.b32 	%r43, %r25, 2;
	add.s32 	%r7, %r42, %r43;
	// begin inline asm
	@%p4 ld.shared.b32 %r6, [ %r7 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r6;
	shfl.sync.bfly.b32	%r44, %r6, 1, 31, -1;
	mov.b32 	%f14, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r45, %r25, 1;
	setp.eq.b32 	%p12, %r45, 1;
	not.pred 	%p13, %p12;
	and.pred  	%p5, %p4, %p13;
	mov.b32 	%r9, %f15;
	// begin inline asm
	@%p5 st.shared.b32 [ %r7 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 41 19                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:41:19
	ld.shared.u32 	%r11, [global_smem];
	mov.b32 	%r12, 1115684864;
	// begin inline asm
	div.full.f32 %r24, %r11, %r12;
	// end inline asm
	mov.b32 	%f16, %r24;
	.loc	1 42 19                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:42:19
	sub.f32 	%f17, %f1, %f16;
	.loc	1 43 20                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:43:20
	mul.f32 	%f18, %f17, %f17;
	.loc	1 45 35                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:45:35
	selp.f32 	%f19, %f18, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r46, %f19;
	shfl.sync.bfly.b32	%r47, %r46, 16, 31, -1;
	mov.b32 	%f20, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f21;
	shfl.sync.bfly.b32	%r49, %r48, 8, 31, -1;
	mov.b32 	%f22, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f23;
	shfl.sync.bfly.b32	%r51, %r50, 4, 31, -1;
	mov.b32 	%f24, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f25;
	shfl.sync.bfly.b32	%r53, %r52, 2, 31, -1;
	mov.b32 	%f26, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f27;
	shfl.sync.bfly.b32	%r55, %r54, 1, 31, -1;
	mov.b32 	%f28, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r14, %f29;
	// begin inline asm
	@%p3 st.shared.b32 [ %r4 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p4 ld.shared.b32 %r15, [ %r7 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r15;
	shfl.sync.bfly.b32	%r56, %r15, 1, 31, -1;
	mov.b32 	%f31, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r18, %f32;
	// begin inline asm
	@%p5 st.shared.b32 [ %r7 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 48 20                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:48:20
	ld.shared.u32 	%r20, [global_smem];
	// begin inline asm
	div.full.f32 %r19, %r20, %r12;
	// end inline asm
	mov.b32 	%f33, %r19;
	.loc	1 50 20                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:50:20
	add.f32 	%f34, %f33, 0f3727C5AC;
	.loc	1 51 28                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:51:28
	rsqrt.approx.ftz.f32 	%f35, %f34;
	.loc	1 32 19                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:32:19
	shr.s32 	%r57, %r1, 31;
	shr.u32 	%r58, %r57, 24;
	add.s32 	%r59, %r1, %r58;
	.loc	1 31 19                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:31:19
	and.b32  	%r60, %r59, 67108608;
	sub.s32 	%r61, %r1, %r60;
	.loc	1 53 20                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:53:20
	mul.f32 	%f36, %f17, %f35;
	.loc	1 55 20                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:55:20
	setp.gt.f32 	%p14, %f36, 0f00000000;
	.loc	1 57 20                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:57:20
	mul.f32 	%f37, %f36, 0f3E4CCCCD;
	.loc	1 58 35                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:58:35
	selp.f32 	%f38, %f36, %f37, %p14;
	.loc	1 59 4                          // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:59:4
	bar.sync 	0;
	.loc	1 60 28                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:60:28
	mul.wide.s32 	%rd10, %r1, 4;
	add.s64 	%rd2, %rd5, %rd10;
	.loc	1 60 40                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:60:40
	setp.eq.s32 	%p15, %r27, 0;
	mov.b32 	%r22, %f35;
	and.pred  	%p9, %p15, %p1;
	// begin inline asm
	@%p9 st.global.b32 [ %rd2 + 0 ], { %r22 };
	// end inline asm
	.loc	1 61 33                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:61:33
	shl.b32 	%r62, %r61, 6;
	.loc	1 61 30                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:61:30
	or.b32  	%r63, %r62, %r27;
	.loc	1 61 44                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:61:44
	shl.b32 	%r64, %r59, 7;
	and.b32  	%r65, %r64, -32768;
	.loc	1 61 38                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:61:38
	add.s32 	%r66, %r63, %r65;
	.loc	1 61 25                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:61:25
	mul.wide.s32 	%rd11, %r66, 4;
	add.s64 	%rd3, %rd8, %rd11;
	.loc	1 61 56                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:61:56
	mov.b32 	%r23, %f38;
	// begin inline asm
	@%p1 st.global.b32 [ %rd3 + 0 ], { %r23 };
	// end inline asm
	.loc	1 62 25                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:62:25
	add.s64 	%rd4, %rd7, %rd10;
	.loc	1 62 37                         // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:62:37
	// begin inline asm
	@%p9 st.global.b32 [ %rd4 + 0 ], { %r24 };
	// end inline asm
	.loc	1 62 4                          // cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py:62:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 217                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 51
.b8 51
.b8 98
.b8 108
.b8 118
.b8 111
.b8 107
.b8 120
.b8 51
.b8 116
.b8 112
.b8 111
.b8 103
.b8 122
.b8 109
.b8 116
.b8 52
.b8 102
.b8 51
.b8 118
.b8 106
.b8 108
.b8 119
.b8 105
.b8 118
.b8 54
.b8 122
.b8 116
.b8 102
.b8 105
.b8 98
.b8 114
.b8 99
.b8 104
.b8 121
.b8 53
.b8 100
.b8 114
.b8 104
.b8 51
.b8 122
.b8 120
.b8 51
.b8 107
.b8 50
.b8 122
.b8 106
.b8 52
.b8 118
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x33 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 49
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x96:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xab:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 46                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
