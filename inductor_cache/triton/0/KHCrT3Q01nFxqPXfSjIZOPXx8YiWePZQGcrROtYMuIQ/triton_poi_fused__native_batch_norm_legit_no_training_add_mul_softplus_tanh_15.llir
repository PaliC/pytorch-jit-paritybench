; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_15(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %10 = shl i32 %9, 9, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 1, !dbg !12
  %13 = and i32 %12, 510, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = srem i32 %14, 64, !dbg !14
  %16 = sext i32 %14 to i64, !dbg !15
  %17 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !15
  %18 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %17, i1 true) #3, !dbg !16
  %19 = extractvalue { i32, i32 } %18, 0, !dbg !16
  %20 = extractvalue { i32, i32 } %18, 1, !dbg !16
  %21 = bitcast i32 %19 to float, !dbg !16
  %22 = bitcast i32 %20 to float, !dbg !16
  %23 = sext i32 %15 to i64, !dbg !17
  %24 = getelementptr float, ptr addrspace(1) %2, i64 %23, !dbg !17
  %25 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %24, i1 true) #3, !dbg !18
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !18
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !18
  %28 = bitcast i32 %26 to float, !dbg !18
  %29 = bitcast i32 %27 to float, !dbg !18
  %30 = getelementptr float, ptr addrspace(1) %3, i64 %23, !dbg !19
  %31 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %30, i1 true) #3, !dbg !20
  %32 = extractvalue { i32, i32 } %31, 0, !dbg !20
  %33 = extractvalue { i32, i32 } %31, 1, !dbg !20
  %34 = bitcast i32 %32 to float, !dbg !20
  %35 = bitcast i32 %33 to float, !dbg !20
  %36 = getelementptr float, ptr addrspace(1) %4, i64 %23, !dbg !21
  %37 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %36, i1 true) #3, !dbg !22
  %38 = extractvalue { i32, i32 } %37, 0, !dbg !22
  %39 = extractvalue { i32, i32 } %37, 1, !dbg !22
  %40 = bitcast i32 %38 to float, !dbg !22
  %41 = bitcast i32 %39 to float, !dbg !22
  %42 = getelementptr float, ptr addrspace(1) %5, i64 %23, !dbg !23
  %43 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %42, i1 true) #3, !dbg !24
  %44 = extractvalue { i32, i32 } %43, 0, !dbg !24
  %45 = extractvalue { i32, i32 } %43, 1, !dbg !24
  %46 = bitcast i32 %44 to float, !dbg !24
  %47 = bitcast i32 %45 to float, !dbg !24
  %48 = getelementptr float, ptr addrspace(1) %6, i64 %16, !dbg !25
  %49 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %48, i1 true) #3, !dbg !26
  %50 = fsub float %21, %28, !dbg !27
  %51 = fsub float %22, %29, !dbg !27
  %52 = fadd float %34, 0x3EE4F8B580000000, !dbg !28
  %53 = fadd float %35, 0x3EE4F8B580000000, !dbg !28
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i = icmp eq i32 %54, 0, !dbg !29
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !29
  %.not1.i = icmp eq i32 %55, 0, !dbg !29
  br i1 %.not.i, label %61, label %56, !dbg !29

56:                                               ; preds = %8
  br i1 %.not1.i, label %59, label %57, !dbg !29

57:                                               ; preds = %56
  %58 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %52) #3, !dbg !29
  br label %__nv_sqrtf.exit, !dbg !29

59:                                               ; preds = %56
  %60 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %52) #3, !dbg !29
  br label %__nv_sqrtf.exit, !dbg !29

61:                                               ; preds = %8
  br i1 %.not1.i, label %64, label %62, !dbg !29

62:                                               ; preds = %61
  %63 = tail call float @llvm.nvvm.sqrt.rn.f(float %52) #3, !dbg !29
  br label %__nv_sqrtf.exit, !dbg !29

64:                                               ; preds = %61
  %65 = tail call float @llvm.nvvm.sqrt.approx.f(float %52) #3, !dbg !29
  br label %__nv_sqrtf.exit, !dbg !29

__nv_sqrtf.exit:                                  ; preds = %57, %59, %62, %64
  %.0.i = phi float [ %58, %57 ], [ %60, %59 ], [ %63, %62 ], [ %65, %64 ], !dbg !29
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i1 = icmp eq i32 %66, 0, !dbg !29
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !29
  %.not1.i4 = icmp eq i32 %67, 0, !dbg !29
  br i1 %.not.i1, label %73, label %68, !dbg !29

68:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %71, label %69, !dbg !29

69:                                               ; preds = %68
  %70 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %53) #3, !dbg !29
  br label %__nv_sqrtf.exit5, !dbg !29

71:                                               ; preds = %68
  %72 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %53) #3, !dbg !29
  br label %__nv_sqrtf.exit5, !dbg !29

73:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %76, label %74, !dbg !29

74:                                               ; preds = %73
  %75 = tail call float @llvm.nvvm.sqrt.rn.f(float %53) #3, !dbg !29
  br label %__nv_sqrtf.exit5, !dbg !29

76:                                               ; preds = %73
  %77 = tail call float @llvm.nvvm.sqrt.approx.f(float %53) #3, !dbg !29
  br label %__nv_sqrtf.exit5, !dbg !29

__nv_sqrtf.exit5:                                 ; preds = %69, %71, %74, %76
  %.0.i3 = phi float [ %70, %69 ], [ %72, %71 ], [ %75, %74 ], [ %77, %76 ], !dbg !29
  %78 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !30
  %79 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !30
  %80 = fmul float %50, %78, !dbg !31
  %81 = fmul float %51, %79, !dbg !31
  %82 = fmul float %80, %40, !dbg !32
  %83 = fmul float %81, %41, !dbg !32
  %84 = fadd float %82, %46, !dbg !33
  %85 = fadd float %83, %47, !dbg !33
  %86 = fcmp ogt float %84, 2.000000e+01, !dbg !34
  %87 = fcmp ogt float %85, 2.000000e+01, !dbg !34
  %88 = fmul float %84, 0x3FF7154760000000, !dbg !35
  %89 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %88) #3, !dbg !35
  %90 = fmul float %85, 0x3FF7154760000000, !dbg !35
  %91 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %90) #3, !dbg !35
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i29 = icmp eq i32 %92, 0, !dbg !36
  %93 = tail call float @llvm.nvvm.add.rz.ftz.f(float %89, float 1.000000e+00) #3, !dbg !36
  %94 = tail call float @llvm.nvvm.add.rz.f(float %89, float 1.000000e+00) #3, !dbg !36
  %.01.i30 = select i1 %.not.i29, float %94, float %93, !dbg !36
  %95 = bitcast float %.01.i30 to i32, !dbg !36
  %96 = add i32 %95, -1061158912, !dbg !36
  %97 = and i32 %96, -8388608, !dbg !36
  %98 = bitcast float %89 to i32, !dbg !36
  %99 = sub i32 %98, %97, !dbg !36
  %100 = bitcast i32 %99 to float, !dbg !36
  %101 = sub i32 1082130432, %97, !dbg !36
  %102 = bitcast i32 %101 to float, !dbg !36
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not14.i = icmp eq i32 %103, 0, !dbg !36
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %102, float -1.000000e+00) #3, !dbg !36
  %105 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %102, float -1.000000e+00) #3, !dbg !36
  %.09.i = select i1 %.not14.i, float %105, float %104, !dbg !36
  %106 = fadd float %.09.i, %100, !dbg !36
  %107 = sitofp i32 %97 to float, !dbg !36
  %108 = fmul float %107, 0x3E80000000000000, !dbg !36
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not15.i = icmp eq i32 %109, 0, !dbg !36
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %106, float 0x3FBB000240000000) #3, !dbg !36
  %111 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %106, float 0x3FBB000240000000) #3, !dbg !36
  %.012.i = select i1 %.not15.i, float %111, float %110, !dbg !36
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not16.i = icmp eq i32 %112, 0, !dbg !36
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %106, float 0xBFC0EF1C00000000) #3, !dbg !36
  %114 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %106, float 0xBFC0EF1C00000000) #3, !dbg !36
  %.010.i = select i1 %.not16.i, float %114, float %113, !dbg !36
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not17.i = icmp eq i32 %115, 0, !dbg !36
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %106, float 0x3FC28C8EA0000000) #3, !dbg !36
  %117 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %106, float 0x3FC28C8EA0000000) #3, !dbg !36
  %.06.i31 = select i1 %.not17.i, float %117, float %116, !dbg !36
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not18.i = icmp eq i32 %118, 0, !dbg !36
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i31, float %106, float 0xBFC54D1BA0000000) #3, !dbg !36
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i31, float %106, float 0xBFC54D1BA0000000) #3, !dbg !36
  %.02.i32 = select i1 %.not18.i, float %120, float %119, !dbg !36
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not19.i = icmp eq i32 %121, 0, !dbg !36
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i32, float %106, float 0x3FC995F3C0000000) #3, !dbg !36
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i32, float %106, float 0x3FC995F3C0000000) #3, !dbg !36
  %.0.i33 = select i1 %.not19.i, float %123, float %122, !dbg !36
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not20.i = icmp eq i32 %124, 0, !dbg !36
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %106, float 0xBFD0000840000000) #3, !dbg !36
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %106, float 0xBFD0000840000000) #3, !dbg !36
  %.011.i = select i1 %.not20.i, float %126, float %125, !dbg !36
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not21.i = icmp eq i32 %127, 0, !dbg !36
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %106, float 0x3FD5555CC0000000) #3, !dbg !36
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %106, float 0x3FD5555CC0000000) #3, !dbg !36
  %.08.i = select i1 %.not21.i, float %129, float %128, !dbg !36
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not22.i = icmp eq i32 %130, 0, !dbg !36
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %106, float -5.000000e-01) #3, !dbg !36
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %106, float -5.000000e-01) #3, !dbg !36
  %.07.i = select i1 %.not22.i, float %132, float %131, !dbg !36
  %133 = fmul float %106, %.07.i, !dbg !36
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not23.i = icmp eq i32 %134, 0, !dbg !36
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %133, float %106, float %106) #3, !dbg !36
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %133, float %106, float %106) #3, !dbg !36
  %.05.i34 = select i1 %.not23.i, float %136, float %135, !dbg !36
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not24.i = icmp eq i32 %137, 0, !dbg !36
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %108, float 0x3FE62E4300000000, float %.05.i34) #3, !dbg !36
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %108, float 0x3FE62E4300000000, float %.05.i34) #3, !dbg !36
  %.04.i35 = select i1 %.not24.i, float %139, float %138, !dbg !36
  %140 = icmp ugt i32 %98, 2139095039, !dbg !36
  br i1 %140, label %141, label %__nv_log1pf.exit, !dbg !36

141:                                              ; preds = %__nv_sqrtf.exit5
  %142 = icmp sgt i32 %98, -1082130432, !dbg !36
  br i1 %142, label %__nv_fmaf_rn.exit.i, label %146, !dbg !36

__nv_fmaf_rn.exit.i:                              ; preds = %141
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not25.i = icmp eq i32 %143, 0, !dbg !36
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %89, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !36
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %89, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !36
  %.03.i36 = select i1 %.not25.i, float %145, float %144, !dbg !36
  br label %146, !dbg !36

146:                                              ; preds = %__nv_fmaf_rn.exit.i, %141
  %r.0.i = phi float [ %.03.i36, %__nv_fmaf_rn.exit.i ], [ %.04.i35, %141 ], !dbg !36
  %147 = fcmp oeq float %89, 0.000000e+00, !dbg !36
  %r.1.i = select i1 %147, float -0.000000e+00, float %r.0.i, !dbg !36
  br label %__nv_log1pf.exit, !dbg !36

__nv_log1pf.exit:                                 ; preds = %__nv_sqrtf.exit5, %146
  %r.2.i = phi float [ %r.1.i, %146 ], [ %.04.i35, %__nv_sqrtf.exit5 ], !dbg !36
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i37 = icmp eq i32 %148, 0, !dbg !36
  %149 = tail call float @llvm.nvvm.add.rz.ftz.f(float %91, float 1.000000e+00) #3, !dbg !36
  %150 = tail call float @llvm.nvvm.add.rz.f(float %91, float 1.000000e+00) #3, !dbg !36
  %.01.i38 = select i1 %.not.i37, float %150, float %149, !dbg !36
  %151 = bitcast float %.01.i38 to i32, !dbg !36
  %152 = add i32 %151, -1061158912, !dbg !36
  %153 = and i32 %152, -8388608, !dbg !36
  %154 = bitcast float %91 to i32, !dbg !36
  %155 = sub i32 %154, %153, !dbg !36
  %156 = bitcast i32 %155 to float, !dbg !36
  %157 = sub i32 1082130432, %153, !dbg !36
  %158 = bitcast i32 %157 to float, !dbg !36
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not14.i39 = icmp eq i32 %159, 0, !dbg !36
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %158, float -1.000000e+00) #3, !dbg !36
  %161 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %158, float -1.000000e+00) #3, !dbg !36
  %.09.i40 = select i1 %.not14.i39, float %161, float %160, !dbg !36
  %162 = fadd float %.09.i40, %156, !dbg !36
  %163 = sitofp i32 %153 to float, !dbg !36
  %164 = fmul float %163, 0x3E80000000000000, !dbg !36
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not15.i41 = icmp eq i32 %165, 0, !dbg !36
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %162, float 0x3FBB000240000000) #3, !dbg !36
  %167 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %162, float 0x3FBB000240000000) #3, !dbg !36
  %.012.i42 = select i1 %.not15.i41, float %167, float %166, !dbg !36
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not16.i43 = icmp eq i32 %168, 0, !dbg !36
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i42, float %162, float 0xBFC0EF1C00000000) #3, !dbg !36
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i42, float %162, float 0xBFC0EF1C00000000) #3, !dbg !36
  %.010.i44 = select i1 %.not16.i43, float %170, float %169, !dbg !36
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not17.i45 = icmp eq i32 %171, 0, !dbg !36
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i44, float %162, float 0x3FC28C8EA0000000) #3, !dbg !36
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i44, float %162, float 0x3FC28C8EA0000000) #3, !dbg !36
  %.06.i46 = select i1 %.not17.i45, float %173, float %172, !dbg !36
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not18.i47 = icmp eq i32 %174, 0, !dbg !36
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i46, float %162, float 0xBFC54D1BA0000000) #3, !dbg !36
  %176 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i46, float %162, float 0xBFC54D1BA0000000) #3, !dbg !36
  %.02.i48 = select i1 %.not18.i47, float %176, float %175, !dbg !36
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not19.i49 = icmp eq i32 %177, 0, !dbg !36
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i48, float %162, float 0x3FC995F3C0000000) #3, !dbg !36
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i48, float %162, float 0x3FC995F3C0000000) #3, !dbg !36
  %.0.i50 = select i1 %.not19.i49, float %179, float %178, !dbg !36
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not20.i51 = icmp eq i32 %180, 0, !dbg !36
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i50, float %162, float 0xBFD0000840000000) #3, !dbg !36
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i50, float %162, float 0xBFD0000840000000) #3, !dbg !36
  %.011.i52 = select i1 %.not20.i51, float %182, float %181, !dbg !36
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not21.i53 = icmp eq i32 %183, 0, !dbg !36
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i52, float %162, float 0x3FD5555CC0000000) #3, !dbg !36
  %185 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i52, float %162, float 0x3FD5555CC0000000) #3, !dbg !36
  %.08.i54 = select i1 %.not21.i53, float %185, float %184, !dbg !36
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not22.i55 = icmp eq i32 %186, 0, !dbg !36
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i54, float %162, float -5.000000e-01) #3, !dbg !36
  %188 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i54, float %162, float -5.000000e-01) #3, !dbg !36
  %.07.i56 = select i1 %.not22.i55, float %188, float %187, !dbg !36
  %189 = fmul float %162, %.07.i56, !dbg !36
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not23.i57 = icmp eq i32 %190, 0, !dbg !36
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %189, float %162, float %162) #3, !dbg !36
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %189, float %162, float %162) #3, !dbg !36
  %.05.i58 = select i1 %.not23.i57, float %192, float %191, !dbg !36
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not24.i59 = icmp eq i32 %193, 0, !dbg !36
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %164, float 0x3FE62E4300000000, float %.05.i58) #3, !dbg !36
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %164, float 0x3FE62E4300000000, float %.05.i58) #3, !dbg !36
  %.04.i60 = select i1 %.not24.i59, float %195, float %194, !dbg !36
  %196 = icmp ugt i32 %154, 2139095039, !dbg !36
  br i1 %196, label %197, label %__nv_log1pf.exit67, !dbg !36

197:                                              ; preds = %__nv_log1pf.exit
  %198 = icmp sgt i32 %154, -1082130432, !dbg !36
  br i1 %198, label %__nv_fmaf_rn.exit.i64, label %202, !dbg !36

__nv_fmaf_rn.exit.i64:                            ; preds = %197
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not25.i65 = icmp eq i32 %199, 0, !dbg !36
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %91, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !36
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %91, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !36
  %.03.i66 = select i1 %.not25.i65, float %201, float %200, !dbg !36
  br label %202, !dbg !36

202:                                              ; preds = %__nv_fmaf_rn.exit.i64, %197
  %r.0.i62 = phi float [ %.03.i66, %__nv_fmaf_rn.exit.i64 ], [ %.04.i60, %197 ], !dbg !36
  %203 = fcmp oeq float %91, 0.000000e+00, !dbg !36
  %r.1.i63 = select i1 %203, float -0.000000e+00, float %r.0.i62, !dbg !36
  br label %__nv_log1pf.exit67, !dbg !36

__nv_log1pf.exit67:                               ; preds = %__nv_log1pf.exit, %202
  %r.2.i61 = phi float [ %r.1.i63, %202 ], [ %.04.i60, %__nv_log1pf.exit ], !dbg !36
  %204 = select i1 %86, float %84, float %r.2.i, !dbg !37
  %205 = select i1 %87, float %85, float %r.2.i61, !dbg !37
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i6 = icmp eq i32 %206, 0, !dbg !38
  %207 = tail call float @llvm.nvvm.fabs.ftz.f(float %204) #3, !dbg !38
  %208 = tail call float @llvm.nvvm.fabs.f(float %204) #3, !dbg !38
  %.01.i = select i1 %.not.i6, float %208, float %207, !dbg !38
  %209 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !38
  br i1 %209, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !38

__internal_fmad.exit1.i:                          ; preds = %__nv_log1pf.exit67
  %210 = fmul float %.01.i, 0x4007154760000000, !dbg !38
  %211 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %210) #3, !dbg !38
  %212 = fadd float %211, 1.000000e+00, !dbg !38
  %213 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %212) #4, !dbg !38, !srcloc !39
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not6.i = icmp eq i32 %214, 0, !dbg !38
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %213, float -2.000000e+00, float 1.000000e+00) #3, !dbg !38
  %216 = tail call float @llvm.nvvm.fma.rn.f(float %213, float -2.000000e+00, float 1.000000e+00) #3, !dbg !38
  %.03.i = select i1 %.not6.i, float %216, float %215, !dbg !38
  %217 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !38
  %s.0.i = select i1 %217, float 1.000000e+00, float %.03.i, !dbg !38
  %218 = bitcast float %s.0.i to i32, !dbg !38
  %219 = bitcast float %204 to i32, !dbg !38
  %220 = and i32 %219, -2147483648, !dbg !38
  %221 = or i32 %220, %218, !dbg !38
  %222 = bitcast i32 %221 to float, !dbg !38
  br label %__nv_tanhf.exit, !dbg !38

__internal_fmad.exit3.i:                          ; preds = %__nv_log1pf.exit67
  %223 = fmul float %204, %204, !dbg !38
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not1.i7 = icmp eq i32 %224, 0, !dbg !38
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %223, float 0xBFAAC795C0000000) #3, !dbg !38
  %226 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %223, float 0xBFAAC795C0000000) #3, !dbg !38
  %.06.i = select i1 %.not1.i7, float %226, float %225, !dbg !38
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not2.i8 = icmp eq i32 %227, 0, !dbg !38
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %223, float 0x3FC10B2820000000) #3, !dbg !38
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %223, float 0x3FC10B2820000000) #3, !dbg !38
  %.05.i = select i1 %.not2.i8, float %229, float %228, !dbg !38
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not3.i = icmp eq i32 %230, 0, !dbg !38
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %223, float 0xBFD5553DA0000000) #3, !dbg !38
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %223, float 0xBFD5553DA0000000) #3, !dbg !38
  %.0.i9 = select i1 %.not3.i, float %232, float %231, !dbg !38
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not4.i = icmp eq i32 %233, 0, !dbg !38
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i9, float %223, float 0.000000e+00) #3, !dbg !38
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i9, float %223, float 0.000000e+00) #3, !dbg !38
  %.04.i = select i1 %.not4.i, float %235, float %234, !dbg !38
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not5.i = icmp eq i32 %236, 0, !dbg !38
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %204, float %204) #3, !dbg !38
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %204, float %204) #3, !dbg !38
  %.02.i = select i1 %.not5.i, float %238, float %237, !dbg !38
  br label %__nv_tanhf.exit, !dbg !38

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %222, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !38
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i10 = icmp eq i32 %239, 0, !dbg !38
  %240 = tail call float @llvm.nvvm.fabs.ftz.f(float %205) #3, !dbg !38
  %241 = tail call float @llvm.nvvm.fabs.f(float %205) #3, !dbg !38
  %.01.i11 = select i1 %.not.i10, float %241, float %240, !dbg !38
  %242 = fcmp ult float %.01.i11, 0x3FE3333340000000, !dbg !38
  br i1 %242, label %__internal_fmad.exit3.i17, label %__internal_fmad.exit1.i12, !dbg !38

__internal_fmad.exit1.i12:                        ; preds = %__nv_tanhf.exit
  %243 = fmul float %.01.i11, 0x4007154760000000, !dbg !38
  %244 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %243) #3, !dbg !38
  %245 = fadd float %244, 1.000000e+00, !dbg !38
  %246 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %245) #4, !dbg !38, !srcloc !39
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not6.i13 = icmp eq i32 %247, 0, !dbg !38
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %246, float -2.000000e+00, float 1.000000e+00) #3, !dbg !38
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %246, float -2.000000e+00, float 1.000000e+00) #3, !dbg !38
  %.03.i14 = select i1 %.not6.i13, float %249, float %248, !dbg !38
  %250 = fcmp oge float %.01.i11, 0x4022059680000000, !dbg !38
  %s.0.i15 = select i1 %250, float 1.000000e+00, float %.03.i14, !dbg !38
  %251 = bitcast float %s.0.i15 to i32, !dbg !38
  %252 = bitcast float %205 to i32, !dbg !38
  %253 = and i32 %252, -2147483648, !dbg !38
  %254 = or i32 %253, %251, !dbg !38
  %255 = bitcast i32 %254 to float, !dbg !38
  br label %__nv_tanhf.exit28, !dbg !38

__internal_fmad.exit3.i17:                        ; preds = %__nv_tanhf.exit
  %256 = fmul float %205, %205, !dbg !38
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not1.i18 = icmp eq i32 %257, 0, !dbg !38
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %256, float 0xBFAAC795C0000000) #3, !dbg !38
  %259 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %256, float 0xBFAAC795C0000000) #3, !dbg !38
  %.06.i19 = select i1 %.not1.i18, float %259, float %258, !dbg !38
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not2.i20 = icmp eq i32 %260, 0, !dbg !38
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i19, float %256, float 0x3FC10B2820000000) #3, !dbg !38
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i19, float %256, float 0x3FC10B2820000000) #3, !dbg !38
  %.05.i21 = select i1 %.not2.i20, float %262, float %261, !dbg !38
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not3.i22 = icmp eq i32 %263, 0, !dbg !38
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i21, float %256, float 0xBFD5553DA0000000) #3, !dbg !38
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i21, float %256, float 0xBFD5553DA0000000) #3, !dbg !38
  %.0.i23 = select i1 %.not3.i22, float %265, float %264, !dbg !38
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not4.i24 = icmp eq i32 %266, 0, !dbg !38
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i23, float %256, float 0.000000e+00) #3, !dbg !38
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i23, float %256, float 0.000000e+00) #3, !dbg !38
  %.04.i25 = select i1 %.not4.i24, float %268, float %267, !dbg !38
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not5.i26 = icmp eq i32 %269, 0, !dbg !38
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i25, float %205, float %205) #3, !dbg !38
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i25, float %205, float %205) #3, !dbg !38
  %.02.i27 = select i1 %.not5.i26, float %271, float %270, !dbg !38
  br label %__nv_tanhf.exit28, !dbg !38

__nv_tanhf.exit28:                                ; preds = %__internal_fmad.exit1.i12, %__internal_fmad.exit3.i17
  %s.1.i16 = phi float [ %255, %__internal_fmad.exit1.i12 ], [ %.02.i27, %__internal_fmad.exit3.i17 ], !dbg !38
  %272 = extractvalue { i32, i32 } %49, 1, !dbg !26
  %273 = bitcast i32 %272 to float, !dbg !26
  %274 = extractvalue { i32, i32 } %49, 0, !dbg !26
  %275 = bitcast i32 %274 to float, !dbg !26
  %276 = fmul float %84, %s.1.i, !dbg !40
  %277 = fmul float %85, %s.1.i16, !dbg !40
  %278 = fadd float %276, %275, !dbg !41
  %279 = fadd float %277, %273, !dbg !41
  %280 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !42
  %281 = bitcast float %278 to i32, !dbg !43
  %282 = bitcast float %279 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %281, i32 %282, ptr addrspace(1) %280, i1 true) #3, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cl4pzb4tx3mkqdqsq2twkobvmv3zrp7dugjewdnj3lbiex7cofmh.py", directory: "inductor_cache/l4")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_15, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_15, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_15", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_15", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 26, column: 30, scope: !7)
!16 = !DILocation(line: 26, column: 35, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 31, scope: !7)
!22 = !DILocation(line: 29, column: 36, scope: !7)
!23 = !DILocation(line: 30, column: 31, scope: !7)
!24 = !DILocation(line: 30, column: 36, scope: !7)
!25 = !DILocation(line: 31, column: 31, scope: !7)
!26 = !DILocation(line: 31, column: 36, scope: !7)
!27 = !DILocation(line: 32, column: 18, scope: !7)
!28 = !DILocation(line: 34, column: 18, scope: !7)
!29 = !DILocation(line: 35, column: 26, scope: !7)
!30 = !DILocation(line: 37, column: 18, scope: !7)
!31 = !DILocation(line: 40, column: 19, scope: !7)
!32 = !DILocation(line: 41, column: 20, scope: !7)
!33 = !DILocation(line: 42, column: 20, scope: !7)
!34 = !DILocation(line: 44, column: 20, scope: !7)
!35 = !DILocation(line: 45, column: 24, scope: !7)
!36 = !DILocation(line: 46, column: 28, scope: !7)
!37 = !DILocation(line: 47, column: 35, scope: !7)
!38 = !DILocation(line: 48, column: 27, scope: !7)
!39 = !{i32 21046}
!40 = !DILocation(line: 49, column: 20, scope: !7)
!41 = !DILocation(line: 50, column: 20, scope: !7)
!42 = !DILocation(line: 51, column: 28, scope: !7)
!43 = !DILocation(line: 51, column: 40, scope: !7)
!44 = !DILocation(line: 51, column: 4, scope: !7)
