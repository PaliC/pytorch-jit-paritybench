//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_leaky_relu_mean_21 // -- Begin function triton_red_fused_leaky_relu_mean_21
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_leaky_relu_mean_21
.visible .entry triton_red_fused_leaky_relu_mean_21(
	.param .u64 .ptr .global .align 1 triton_red_fused_leaky_relu_mean_21_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_leaky_relu_mean_21_param_1,
	.param .u32 triton_red_fused_leaky_relu_mean_21_param_2,
	.param .u32 triton_red_fused_leaky_relu_mean_21_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<106>;
	.reg .b32 	%r<225>;
	.reg .f32 	%f<59>;
	.reg .b64 	%rd<43>;
	.loc	1 19 0                          // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_red_fused_leaky_relu_mean_21_param_1];
	ld.param.u64 	%rd3, [triton_red_fused_leaky_relu_mean_21_param_0];
$L__tmp0:
	.loc	1 22 28                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:22:28
	// begin inline asm
	mov.u32 %r10, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:22:33
	shl.b32 	%r1, %r10, 6;
	.loc	1 23 44                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r11, %r2, 2;
	and.b32  	%r3, %r11, 60;
	.loc	1 23 23                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:23:23
	or.b32  	%r12, %r1, %r3;
	.loc	1 24 21                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:24:21
	setp.gt.s32 	%p1, %r12, 1023;
	.loc	1 25 33                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:25:33
	bfe.u32 	%r4, %r2, 4, 3;
	.loc	1 27 19                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:27:19
	bfe.s32 	%r13, %r10, 25, 1;
	shr.u32 	%r14, %r13, 25;
	add.s32 	%r15, %r12, %r14;
	shr.u32 	%r16, %r15, 7;
	mul.lo.s32 	%r5, %r16, 16256;
	mov.pred 	%p82, -1;
	@%p1 bra 	$L__BB0_3;
// %bb.1:                               // %.split.us.preheader
	.loc	1 30 36                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:30:36
	shl.b32 	%r162, %r4, 7;
	add.s32 	%r163, %r5, %r162;
	add.s32 	%r164, %r163, %r1;
	add.s32 	%r224, %r164, %r3;
	mov.f32 	%f55, 0f00000000;
	mov.u64 	%rd42, -8;
	mov.f32 	%f56, %f55;
	mov.f32 	%f57, %f55;
	mov.f32 	%f58, %f55;
$L__BB0_2:                              // %.split.us
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd39, %r224, 4;
	add.s64 	%rd38, %rd3, %rd39;
	mov.b32 	%r169, 0;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r165, 0x0;
	mov.u32 %r166, 0x0;
	mov.u32 %r167, 0x0;
	mov.u32 %r168, 0x0;
	@%p82 ld.global.L1::evict_first.v4.b32 { %r165, %r166, %r167, %r168 }, [ %rd38 + 0 ];
	@!%p82 mov.u32 %r165, %r169;
	@!%p82 mov.u32 %r166, %r169;
	@!%p82 mov.u32 %r167, %r169;
	@!%p82 mov.u32 %r168, %r169;
	// end inline asm
	mov.b32 	%f21, %r165;
	mov.b32 	%f22, %r166;
	mov.b32 	%f23, %r167;
	mov.b32 	%f24, %r168;
	.loc	1 36 22                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:36:22
	setp.gt.f32 	%p87, %f24, 0f00000000;
	setp.gt.f32 	%p88, %f23, 0f00000000;
	setp.gt.f32 	%p89, %f22, 0f00000000;
	setp.gt.f32 	%p90, %f21, 0f00000000;
	.loc	1 38 22                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:38:22
	mul.f32 	%f25, %f24, 0f3DCCCCCD;
	mul.f32 	%f26, %f23, 0f3DCCCCCD;
	mul.f32 	%f27, %f22, 0f3DCCCCCD;
	mul.f32 	%f28, %f21, 0f3DCCCCCD;
	.loc	1 39 36                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:39:36
	selp.f32 	%f29, %f21, %f28, %p90;
	selp.f32 	%f30, %f22, %f27, %p89;
	selp.f32 	%f31, %f23, %f26, %p88;
	selp.f32 	%f32, %f24, %f25, %p87;
	.loc	1 41 23                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:41:23
	add.f32 	%f58, %f58, %f32;
	add.f32 	%f57, %f57, %f31;
	add.f32 	%f56, %f56, %f30;
	add.f32 	%f55, %f55, %f29;
	.loc	1 30 36                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:30:36
	add.s64 	%rd42, %rd42, 8;
	add.s32 	%r224, %r224, 1024;
	setp.lt.u64 	%p91, %rd42, 120;
	@%p91 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_4;
$L__BB0_3:                              // %.split
	.loc	1 0 36                          // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:0:36
	add.s32 	%r6, %r5, %r12;
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	shl.b32 	%r145, %r4, 7;
	add.s32 	%r146, %r6, %r145;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd21, %r146, 4;
	add.s64 	%rd5, %rd3, %rd21;
	mov.b32 	%r21, 0;
	mov.pred 	%p2, 0;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd5 + 0 ];
	@!%p2 mov.u32 %r17, %r21;
	@!%p2 mov.u32 %r18, %r21;
	@!%p2 mov.u32 %r19, %r21;
	@!%p2 mov.u32 %r20, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r147, %r146, 1024;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd22, %r147, 4;
	add.s64 	%rd6, %rd3, %rd22;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd6 + 0 ];
	@!%p2 mov.u32 %r25, %r21;
	@!%p2 mov.u32 %r26, %r21;
	@!%p2 mov.u32 %r27, %r21;
	@!%p2 mov.u32 %r28, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r148, %r146, 2048;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd23, %r148, 4;
	add.s64 	%rd7, %rd3, %rd23;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r33, %r34, %r35, %r36 }, [ %rd7 + 0 ];
	@!%p2 mov.u32 %r33, %r21;
	@!%p2 mov.u32 %r34, %r21;
	@!%p2 mov.u32 %r35, %r21;
	@!%p2 mov.u32 %r36, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r149, %r146, 3072;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd24, %r149, 4;
	add.s64 	%rd8, %rd3, %rd24;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r41, %r42, %r43, %r44 }, [ %rd8 + 0 ];
	@!%p2 mov.u32 %r41, %r21;
	@!%p2 mov.u32 %r42, %r21;
	@!%p2 mov.u32 %r43, %r21;
	@!%p2 mov.u32 %r44, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r150, %r146, 4096;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd25, %r150, 4;
	add.s64 	%rd9, %rd3, %rd25;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r49, %r50, %r51, %r52 }, [ %rd9 + 0 ];
	@!%p2 mov.u32 %r49, %r21;
	@!%p2 mov.u32 %r50, %r21;
	@!%p2 mov.u32 %r51, %r21;
	@!%p2 mov.u32 %r52, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r151, %r146, 5120;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd26, %r151, 4;
	add.s64 	%rd10, %rd3, %rd26;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r57, %r58, %r59, %r60 }, [ %rd10 + 0 ];
	@!%p2 mov.u32 %r57, %r21;
	@!%p2 mov.u32 %r58, %r21;
	@!%p2 mov.u32 %r59, %r21;
	@!%p2 mov.u32 %r60, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r152, %r146, 6144;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd27, %r152, 4;
	add.s64 	%rd11, %rd3, %rd27;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r65, 0x0;
	mov.u32 %r66, 0x0;
	mov.u32 %r67, 0x0;
	mov.u32 %r68, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r65, %r66, %r67, %r68 }, [ %rd11 + 0 ];
	@!%p2 mov.u32 %r65, %r21;
	@!%p2 mov.u32 %r66, %r21;
	@!%p2 mov.u32 %r67, %r21;
	@!%p2 mov.u32 %r68, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r153, %r146, 7168;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd28, %r153, 4;
	add.s64 	%rd12, %rd3, %rd28;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r73, 0x0;
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r73, %r74, %r75, %r76 }, [ %rd12 + 0 ];
	@!%p2 mov.u32 %r73, %r21;
	@!%p2 mov.u32 %r74, %r21;
	@!%p2 mov.u32 %r75, %r21;
	@!%p2 mov.u32 %r76, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r154, %r146, 8192;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd29, %r154, 4;
	add.s64 	%rd13, %rd3, %rd29;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r81, 0x0;
	mov.u32 %r82, 0x0;
	mov.u32 %r83, 0x0;
	mov.u32 %r84, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r81, %r82, %r83, %r84 }, [ %rd13 + 0 ];
	@!%p2 mov.u32 %r81, %r21;
	@!%p2 mov.u32 %r82, %r21;
	@!%p2 mov.u32 %r83, %r21;
	@!%p2 mov.u32 %r84, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r155, %r146, 9216;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd30, %r155, 4;
	add.s64 	%rd14, %rd3, %rd30;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r89, 0x0;
	mov.u32 %r90, 0x0;
	mov.u32 %r91, 0x0;
	mov.u32 %r92, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r89, %r90, %r91, %r92 }, [ %rd14 + 0 ];
	@!%p2 mov.u32 %r89, %r21;
	@!%p2 mov.u32 %r90, %r21;
	@!%p2 mov.u32 %r91, %r21;
	@!%p2 mov.u32 %r92, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r156, %r146, 10240;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd31, %r156, 4;
	add.s64 	%rd15, %rd3, %rd31;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r97, 0x0;
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r97, %r98, %r99, %r100 }, [ %rd15 + 0 ];
	@!%p2 mov.u32 %r97, %r21;
	@!%p2 mov.u32 %r98, %r21;
	@!%p2 mov.u32 %r99, %r21;
	@!%p2 mov.u32 %r100, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r157, %r146, 11264;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd32, %r157, 4;
	add.s64 	%rd16, %rd3, %rd32;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r105, 0x0;
	mov.u32 %r106, 0x0;
	mov.u32 %r107, 0x0;
	mov.u32 %r108, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r105, %r106, %r107, %r108 }, [ %rd16 + 0 ];
	@!%p2 mov.u32 %r105, %r21;
	@!%p2 mov.u32 %r106, %r21;
	@!%p2 mov.u32 %r107, %r21;
	@!%p2 mov.u32 %r108, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r158, %r146, 12288;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd33, %r158, 4;
	add.s64 	%rd17, %rd3, %rd33;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r113, 0x0;
	mov.u32 %r114, 0x0;
	mov.u32 %r115, 0x0;
	mov.u32 %r116, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r113, %r114, %r115, %r116 }, [ %rd17 + 0 ];
	@!%p2 mov.u32 %r113, %r21;
	@!%p2 mov.u32 %r114, %r21;
	@!%p2 mov.u32 %r115, %r21;
	@!%p2 mov.u32 %r116, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r159, %r146, 13312;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd34, %r159, 4;
	add.s64 	%rd18, %rd3, %rd34;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r121, 0x0;
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r121, %r122, %r123, %r124 }, [ %rd18 + 0 ];
	@!%p2 mov.u32 %r121, %r21;
	@!%p2 mov.u32 %r122, %r21;
	@!%p2 mov.u32 %r123, %r21;
	@!%p2 mov.u32 %r124, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r160, %r146, 14336;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd35, %r160, 4;
	add.s64 	%rd19, %rd3, %rd35;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r129, 0x0;
	mov.u32 %r130, 0x0;
	mov.u32 %r131, 0x0;
	mov.u32 %r132, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r129, %r130, %r131, %r132 }, [ %rd19 + 0 ];
	@!%p2 mov.u32 %r129, %r21;
	@!%p2 mov.u32 %r130, %r21;
	@!%p2 mov.u32 %r131, %r21;
	@!%p2 mov.u32 %r132, %r21;
	// end inline asm
	.loc	1 34 48                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:48
	add.s32 	%r161, %r146, 15360;
	.loc	1 34 34                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:34
	mul.wide.s32 	%rd36, %r161, 4;
	add.s64 	%rd20, %rd3, %rd36;
	.loc	1 34 59                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:34:59
	// begin inline asm
	mov.u32 %r137, 0x0;
	mov.u32 %r138, 0x0;
	mov.u32 %r139, 0x0;
	mov.u32 %r140, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r137, %r138, %r139, %r140 }, [ %rd20 + 0 ];
	@!%p2 mov.u32 %r137, %r21;
	@!%p2 mov.u32 %r138, %r21;
	@!%p2 mov.u32 %r139, %r21;
	@!%p2 mov.u32 %r140, %r21;
	// end inline asm
	mov.f32 	%f55, 0f00000000;
	mov.f32 	%f56, %f55;
	mov.f32 	%f57, %f55;
	mov.f32 	%f58, %f55;
$L__BB0_4:                              // %.split2.us
	.loc	1 23 44                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:23:44
	and.b32  	%r195, %r2, 63;
	.loc	1 23 23                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:23:23
	or.b32  	%r196, %r1, %r195;
	.loc	1 24 21                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:24:21
	setp.lt.s32 	%p102, %r196, 1024;
	.loc	1 23 44                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:23:44
	and.b32  	%r197, %r2, 16;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r198, %f55;
	shfl.sync.bfly.b32	%r199, %r198, 16, 31, -1;
	mov.b32 	%f33, %r199;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f55, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r200, %f56;
	shfl.sync.bfly.b32	%r201, %r200, 16, 31, -1;
	mov.b32 	%f35, %r201;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f56, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r202, %f57;
	shfl.sync.bfly.b32	%r203, %r202, 16, 31, -1;
	mov.b32 	%f37, %r203;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f57, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r204, %f58;
	shfl.sync.bfly.b32	%r205, %r204, 16, 31, -1;
	mov.b32 	%f39, %r205;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f58, %f39;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p92, %r197, 0;
	bfe.u32 	%r206, %r2, 5, 2;
	shl.b32 	%r207, %r3, 2;
	or.b32  	%r208, %r207, %r206;
	shl.b32 	%r209, %r208, 2;
	mov.u32 	%r210, global_smem;
	add.s32 	%r173, %r210, %r209;
	mov.b32 	%r174, %f34;
	// begin inline asm
	@%p92 st.shared.b32 [ %r173 + 0 ], %r174;
	// end inline asm
	add.s32 	%r175, %r173, 16;
	mov.b32 	%r176, %f36;
	// begin inline asm
	@%p92 st.shared.b32 [ %r175 + 0 ], %r176;
	// end inline asm
	add.s32 	%r177, %r173, 32;
	mov.b32 	%r178, %f38;
	// begin inline asm
	@%p92 st.shared.b32 [ %r177 + 0 ], %r178;
	// end inline asm
	add.s32 	%r179, %r173, 48;
	mov.b32 	%r180, %f40;
	// begin inline asm
	@%p92 st.shared.b32 [ %r179 + 0 ], %r180;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p96, %r2, 256;
	add.s32 	%r182, %r210, %r11;
	// begin inline asm
	@%p96 ld.shared.b32 %r181, [ %r182 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r181;
	shfl.sync.bfly.b32	%r212, %r181, 2, 31, -1;
	mov.b32 	%f42, %r212;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r213, %f43;
	shfl.sync.bfly.b32	%r214, %r213, 1, 31, -1;
	mov.b32 	%f44, %r214;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r215, %r2, 3;
	setp.eq.s32 	%p103, %r215, 0;
	and.pred  	%p97, %p96, %p103;
	mov.b32 	%r184, %f45;
	// begin inline asm
	@%p97 st.shared.b32 [ %r182 + 0 ], %r184;
	// end inline asm
	add.s32 	%r186, %r182, 512;
	// begin inline asm
	@%p96 ld.shared.b32 %r185, [ %r186 + 0 ];
	// end inline asm
	mov.b32 	%f46, %r185;
	shfl.sync.bfly.b32	%r216, %r185, 2, 31, -1;
	mov.b32 	%f47, %r216;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r217, %f48;
	shfl.sync.bfly.b32	%r218, %r217, 1, 31, -1;
	mov.b32 	%f49, %r218;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r188, %f50;
	// begin inline asm
	@%p97 st.shared.b32 [ %r186 + 0 ], %r188;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r219, %r3, 4;
	add.s32 	%r220, %r210, %r219;
	ld.shared.u32 	%r190, [%r220];
	ld.shared.u32 	%r191, [%r220+16];
	ld.shared.u32 	%r192, [%r220+32];
	ld.shared.u32 	%r193, [%r220+48];
$L__tmp2:
	.loc	1 43 28                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:43:28
	bar.sync 	0;
	add.s32 	%r189, %r210, %r207;
	// begin inline asm
	@%p82 st.shared.v4.b32 [ %r189 + 0 ], { %r190, %r191, %r192, %r193 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r221, %r195, 2;
	add.s32 	%r222, %r210, %r221;
	ld.shared.u32 	%r194, [%r222];
	.loc	1 44 25                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:44:25
	mul.wide.s32 	%rd41, %r196, 4;
	add.s64 	%rd40, %rd4, %rd41;
	.loc	1 44 36                         // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:44:36
	and.b32  	%r223, %r2, 64;
	setp.eq.s32 	%p104, %r223, 0;
	and.pred  	%p101, %p104, %p102;
	// begin inline asm
	@%p101 st.global.b32 [ %rd40 + 0 ], { %r194 };
	// end inline asm
	.loc	1 44 4                          // cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py:44:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/yk/cykjomhiammh2cvh2sm5ccht63wsd75o742ad6mz7xbp5hxbl5v3.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 180                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xad DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 107
.b8 106
.b8 111
.b8 109
.b8 104
.b8 105
.b8 97
.b8 109
.b8 109
.b8 104
.b8 50
.b8 99
.b8 118
.b8 104
.b8 50
.b8 115
.b8 109
.b8 53
.b8 99
.b8 99
.b8 104
.b8 116
.b8 54
.b8 51
.b8 119
.b8 115
.b8 100
.b8 55
.b8 53
.b8 111
.b8 55
.b8 52
.b8 50
.b8 97
.b8 100
.b8 54
.b8 109
.b8 122
.b8 55
.b8 120
.b8 98
.b8 112
.b8 53
.b8 104
.b8 120
.b8 98
.b8 108
.b8 53
.b8 118
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 108
.b8 101
.b8 97
.b8 107
.b8 121
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 50
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
