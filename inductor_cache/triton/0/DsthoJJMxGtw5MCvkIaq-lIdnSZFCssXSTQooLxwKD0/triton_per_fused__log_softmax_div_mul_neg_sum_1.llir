; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__log_softmax_div_mul_neg_sum_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = shl i32 %5, 2, !dbg !10
  %7 = and i32 %6, 252, !dbg !10
  %8 = zext nneg i32 %7 to i64, !dbg !11
  %9 = getelementptr float, ptr addrspace(1) %1, i64 %8, !dbg !11
  %10 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %9, i1 true) #4, !dbg !12
  %11 = getelementptr float, ptr addrspace(1) %2, i64 %8, !dbg !13
  %12 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %11, i1 true) #4, !dbg !14
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #4, !dbg !15
  %14 = bitcast i32 %13 to float, !dbg !15
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #4, !dbg !15
  %16 = bitcast i32 %15 to float, !dbg !15
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #4, !dbg !15
  %18 = bitcast i32 %17 to float, !dbg !15
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #4, !dbg !15
  %20 = bitcast i32 %19 to float, !dbg !15
  %21 = or disjoint i32 %7, 1, !dbg !16
  %22 = zext nneg i32 %21 to i64, !dbg !17
  %23 = getelementptr float, ptr addrspace(1) %2, i64 %22, !dbg !17
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #4, !dbg !18
  %25 = bitcast i32 %24 to float, !dbg !18
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #4, !dbg !18
  %27 = bitcast i32 %26 to float, !dbg !18
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #4, !dbg !18
  %29 = bitcast i32 %28 to float, !dbg !18
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #4, !dbg !18
  %31 = bitcast i32 %30 to float, !dbg !18
  %32 = or disjoint i32 %7, 2, !dbg !19
  %33 = zext nneg i32 %32 to i64, !dbg !20
  %34 = getelementptr float, ptr addrspace(1) %2, i64 %33, !dbg !20
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #4, !dbg !21
  %36 = bitcast i32 %35 to float, !dbg !21
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #4, !dbg !21
  %38 = bitcast i32 %37 to float, !dbg !21
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #4, !dbg !21
  %40 = bitcast i32 %39 to float, !dbg !21
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #4, !dbg !21
  %42 = bitcast i32 %41 to float, !dbg !21
  %43 = or disjoint i32 %7, 3, !dbg !22
  %44 = zext nneg i32 %43 to i64, !dbg !23
  %45 = getelementptr float, ptr addrspace(1) %2, i64 %44, !dbg !23
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #4, !dbg !24
  %47 = bitcast i32 %46 to float, !dbg !24
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #4, !dbg !24
  %49 = bitcast i32 %48 to float, !dbg !24
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #4, !dbg !24
  %51 = bitcast i32 %50 to float, !dbg !24
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #4, !dbg !24
  %53 = bitcast i32 %52 to float, !dbg !24
  %54 = fmul float %14, 0x3FF7154760000000, !dbg !25
  %55 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %54) #4, !dbg !25
  %56 = fmul float %16, 0x3FF7154760000000, !dbg !25
  %57 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %56) #4, !dbg !25
  %58 = fmul float %18, 0x3FF7154760000000, !dbg !25
  %59 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %58) #4, !dbg !25
  %60 = fmul float %20, 0x3FF7154760000000, !dbg !25
  %61 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %60) #4, !dbg !25
  %62 = fmul float %25, 0x3FF7154760000000, !dbg !26
  %63 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %62) #4, !dbg !26
  %64 = fmul float %27, 0x3FF7154760000000, !dbg !26
  %65 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %64) #4, !dbg !26
  %66 = fmul float %29, 0x3FF7154760000000, !dbg !26
  %67 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %66) #4, !dbg !26
  %68 = fmul float %31, 0x3FF7154760000000, !dbg !26
  %69 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %68) #4, !dbg !26
  %70 = fadd float %55, %63, !dbg !27
  %71 = fadd float %57, %65, !dbg !27
  %72 = fadd float %59, %67, !dbg !27
  %73 = fadd float %61, %69, !dbg !27
  %74 = fmul float %36, 0x3FF7154760000000, !dbg !28
  %75 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %74) #4, !dbg !28
  %76 = fmul float %38, 0x3FF7154760000000, !dbg !28
  %77 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %76) #4, !dbg !28
  %78 = fmul float %40, 0x3FF7154760000000, !dbg !28
  %79 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %78) #4, !dbg !28
  %80 = fmul float %42, 0x3FF7154760000000, !dbg !28
  %81 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %80) #4, !dbg !28
  %82 = fadd float %70, %75, !dbg !29
  %83 = fadd float %71, %77, !dbg !29
  %84 = fadd float %72, %79, !dbg !29
  %85 = fadd float %73, %81, !dbg !29
  %86 = fmul float %47, 0x3FF7154760000000, !dbg !30
  %87 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %86) #4, !dbg !30
  %88 = fmul float %49, 0x3FF7154760000000, !dbg !30
  %89 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %88) #4, !dbg !30
  %90 = fmul float %51, 0x3FF7154760000000, !dbg !30
  %91 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %90) #4, !dbg !30
  %92 = fmul float %53, 0x3FF7154760000000, !dbg !30
  %93 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %92) #4, !dbg !30
  %94 = fadd float %82, %87, !dbg !31
  %95 = fadd float %83, %89, !dbg !31
  %96 = fadd float %84, %91, !dbg !31
  %97 = fadd float %85, %93, !dbg !31
  %98 = fcmp olt float %94, 0x3810000000000000, !dbg !32
  %99 = fmul float %94, 0x4160000000000000, !dbg !32
  %.02.i = select i1 %98, float %99, float %94, !dbg !32
  %i.i.0.i = select i1 %98, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %100 = bitcast float %.02.i to i32, !dbg !32
  %101 = add i32 %100, -1059760811, !dbg !32
  %102 = and i32 %101, -8388608, !dbg !32
  %103 = sub i32 %100, %102, !dbg !32
  %104 = bitcast i32 %103 to float, !dbg !32
  %105 = sitofp i32 %102 to float, !dbg !32
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i = icmp eq i32 %106, 0, !dbg !32
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %105, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !32
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %105, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !32
  %.08.i = select i1 %.not.i, float %108, float %107, !dbg !32
  %109 = fadd float %104, -1.000000e+00, !dbg !32
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i = icmp eq i32 %110, 0, !dbg !32
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %109, float 0x3FC2073EC0000000) #4, !dbg !32
  %112 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %109, float 0x3FC2073EC0000000) #4, !dbg !32
  %.010.i = select i1 %.not1.i, float %112, float %111, !dbg !32
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i = icmp eq i32 %113, 0, !dbg !32
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %109, float 0xBFBF19B980000000) #4, !dbg !32
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %109, float 0xBFBF19B980000000) #4, !dbg !32
  %.011.i = select i1 %.not2.i, float %115, float %114, !dbg !32
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i = icmp eq i32 %116, 0, !dbg !32
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %109, float 0x3FC1E52AA0000000) #4, !dbg !32
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %109, float 0x3FC1E52AA0000000) #4, !dbg !32
  %.012.i = select i1 %.not3.i, float %118, float %117, !dbg !32
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i = icmp eq i32 %119, 0, !dbg !32
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %109, float 0xBFC55B1720000000) #4, !dbg !32
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %109, float 0xBFC55B1720000000) #4, !dbg !32
  %.09.i = select i1 %.not4.i, float %121, float %120, !dbg !32
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i = icmp eq i32 %122, 0, !dbg !32
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %109, float 0x3FC99DA160000000) #4, !dbg !32
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %109, float 0x3FC99DA160000000) #4, !dbg !32
  %.05.i = select i1 %.not5.i, float %124, float %123, !dbg !32
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i = icmp eq i32 %125, 0, !dbg !32
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %109, float 0xBFCFFFE440000000) #4, !dbg !32
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %109, float 0xBFCFFFE440000000) #4, !dbg !32
  %.01.i = select i1 %.not6.i, float %127, float %126, !dbg !32
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i = icmp eq i32 %128, 0, !dbg !32
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %109, float 0x3FD5554F00000000) #4, !dbg !32
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %109, float 0x3FD5554F00000000) #4, !dbg !32
  %.0.i = select i1 %.not7.i, float %130, float %129, !dbg !32
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i = icmp eq i32 %131, 0, !dbg !32
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %109, float -5.000000e-01) #4, !dbg !32
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %109, float -5.000000e-01) #4, !dbg !32
  %.07.i = select i1 %.not8.i, float %133, float %132, !dbg !32
  %134 = fmul float %109, %.07.i, !dbg !32
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not9.i = icmp eq i32 %135, 0, !dbg !32
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %134, float %109, float %109) #4, !dbg !32
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %134, float %109, float %109) #4, !dbg !32
  %.06.i = select i1 %.not9.i, float %137, float %136, !dbg !32
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not10.i = icmp eq i32 %138, 0, !dbg !32
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !32
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !32
  %.04.i = select i1 %.not10.i, float %140, float %139, !dbg !32
  %141 = icmp ugt i32 %100, 2139095039, !dbg !32
  br i1 %141, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !32

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not11.i = icmp eq i32 %142, 0, !dbg !32
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %.03.i = select i1 %.not11.i, float %144, float %143, !dbg !32
  br label %__nv_logf.exit, !dbg !32

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !32
  %145 = fcmp olt float %95, 0x3810000000000000, !dbg !32
  %146 = fmul float %95, 0x4160000000000000, !dbg !32
  %.02.i1 = select i1 %145, float %146, float %95, !dbg !32
  %i.i.0.i2 = select i1 %145, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %147 = bitcast float %.02.i1 to i32, !dbg !32
  %148 = add i32 %147, -1059760811, !dbg !32
  %149 = and i32 %148, -8388608, !dbg !32
  %150 = sub i32 %147, %149, !dbg !32
  %151 = bitcast i32 %150 to float, !dbg !32
  %152 = sitofp i32 %149 to float, !dbg !32
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i3 = icmp eq i32 %153, 0, !dbg !32
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %152, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !32
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %152, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !32
  %.08.i4 = select i1 %.not.i3, float %155, float %154, !dbg !32
  %156 = fadd float %151, -1.000000e+00, !dbg !32
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i5 = icmp eq i32 %157, 0, !dbg !32
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %156, float 0x3FC2073EC0000000) #4, !dbg !32
  %159 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %156, float 0x3FC2073EC0000000) #4, !dbg !32
  %.010.i6 = select i1 %.not1.i5, float %159, float %158, !dbg !32
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i7 = icmp eq i32 %160, 0, !dbg !32
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %156, float 0xBFBF19B980000000) #4, !dbg !32
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %156, float 0xBFBF19B980000000) #4, !dbg !32
  %.011.i8 = select i1 %.not2.i7, float %162, float %161, !dbg !32
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i9 = icmp eq i32 %163, 0, !dbg !32
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %156, float 0x3FC1E52AA0000000) #4, !dbg !32
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %156, float 0x3FC1E52AA0000000) #4, !dbg !32
  %.012.i10 = select i1 %.not3.i9, float %165, float %164, !dbg !32
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i11 = icmp eq i32 %166, 0, !dbg !32
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %156, float 0xBFC55B1720000000) #4, !dbg !32
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %156, float 0xBFC55B1720000000) #4, !dbg !32
  %.09.i12 = select i1 %.not4.i11, float %168, float %167, !dbg !32
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i13 = icmp eq i32 %169, 0, !dbg !32
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %156, float 0x3FC99DA160000000) #4, !dbg !32
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %156, float 0x3FC99DA160000000) #4, !dbg !32
  %.05.i14 = select i1 %.not5.i13, float %171, float %170, !dbg !32
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i15 = icmp eq i32 %172, 0, !dbg !32
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %156, float 0xBFCFFFE440000000) #4, !dbg !32
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %156, float 0xBFCFFFE440000000) #4, !dbg !32
  %.01.i16 = select i1 %.not6.i15, float %174, float %173, !dbg !32
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i17 = icmp eq i32 %175, 0, !dbg !32
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %156, float 0x3FD5554F00000000) #4, !dbg !32
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %156, float 0x3FD5554F00000000) #4, !dbg !32
  %.0.i18 = select i1 %.not7.i17, float %177, float %176, !dbg !32
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i19 = icmp eq i32 %178, 0, !dbg !32
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %156, float -5.000000e-01) #4, !dbg !32
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %156, float -5.000000e-01) #4, !dbg !32
  %.07.i20 = select i1 %.not8.i19, float %180, float %179, !dbg !32
  %181 = fmul float %156, %.07.i20, !dbg !32
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not9.i21 = icmp eq i32 %182, 0, !dbg !32
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %181, float %156, float %156) #4, !dbg !32
  %184 = tail call float @llvm.nvvm.fma.rn.f(float %181, float %156, float %156) #4, !dbg !32
  %.06.i22 = select i1 %.not9.i21, float %184, float %183, !dbg !32
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not10.i23 = icmp eq i32 %185, 0, !dbg !32
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !32
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !32
  %.04.i24 = select i1 %.not10.i23, float %187, float %186, !dbg !32
  %188 = icmp ugt i32 %147, 2139095039, !dbg !32
  br i1 %188, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !32

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not11.i28 = icmp eq i32 %189, 0, !dbg !32
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %191 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %.03.i29 = select i1 %.not11.i28, float %191, float %190, !dbg !32
  br label %__nv_logf.exit30, !dbg !32

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !32
  %192 = fcmp olt float %96, 0x3810000000000000, !dbg !32
  %193 = fmul float %96, 0x4160000000000000, !dbg !32
  %.02.i31 = select i1 %192, float %193, float %96, !dbg !32
  %i.i.0.i32 = select i1 %192, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %194 = bitcast float %.02.i31 to i32, !dbg !32
  %195 = add i32 %194, -1059760811, !dbg !32
  %196 = and i32 %195, -8388608, !dbg !32
  %197 = sub i32 %194, %196, !dbg !32
  %198 = bitcast i32 %197 to float, !dbg !32
  %199 = sitofp i32 %196 to float, !dbg !32
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i33 = icmp eq i32 %200, 0, !dbg !32
  %201 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %199, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !32
  %202 = tail call float @llvm.nvvm.fma.rn.f(float %199, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !32
  %.08.i34 = select i1 %.not.i33, float %202, float %201, !dbg !32
  %203 = fadd float %198, -1.000000e+00, !dbg !32
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i35 = icmp eq i32 %204, 0, !dbg !32
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %203, float 0x3FC2073EC0000000) #4, !dbg !32
  %206 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %203, float 0x3FC2073EC0000000) #4, !dbg !32
  %.010.i36 = select i1 %.not1.i35, float %206, float %205, !dbg !32
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i37 = icmp eq i32 %207, 0, !dbg !32
  %208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %203, float 0xBFBF19B980000000) #4, !dbg !32
  %209 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %203, float 0xBFBF19B980000000) #4, !dbg !32
  %.011.i38 = select i1 %.not2.i37, float %209, float %208, !dbg !32
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i39 = icmp eq i32 %210, 0, !dbg !32
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %203, float 0x3FC1E52AA0000000) #4, !dbg !32
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %203, float 0x3FC1E52AA0000000) #4, !dbg !32
  %.012.i40 = select i1 %.not3.i39, float %212, float %211, !dbg !32
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i41 = icmp eq i32 %213, 0, !dbg !32
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %203, float 0xBFC55B1720000000) #4, !dbg !32
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %203, float 0xBFC55B1720000000) #4, !dbg !32
  %.09.i42 = select i1 %.not4.i41, float %215, float %214, !dbg !32
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i43 = icmp eq i32 %216, 0, !dbg !32
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %203, float 0x3FC99DA160000000) #4, !dbg !32
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %203, float 0x3FC99DA160000000) #4, !dbg !32
  %.05.i44 = select i1 %.not5.i43, float %218, float %217, !dbg !32
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i45 = icmp eq i32 %219, 0, !dbg !32
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %203, float 0xBFCFFFE440000000) #4, !dbg !32
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %203, float 0xBFCFFFE440000000) #4, !dbg !32
  %.01.i46 = select i1 %.not6.i45, float %221, float %220, !dbg !32
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i47 = icmp eq i32 %222, 0, !dbg !32
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %203, float 0x3FD5554F00000000) #4, !dbg !32
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %203, float 0x3FD5554F00000000) #4, !dbg !32
  %.0.i48 = select i1 %.not7.i47, float %224, float %223, !dbg !32
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i49 = icmp eq i32 %225, 0, !dbg !32
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %203, float -5.000000e-01) #4, !dbg !32
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %203, float -5.000000e-01) #4, !dbg !32
  %.07.i50 = select i1 %.not8.i49, float %227, float %226, !dbg !32
  %228 = fmul float %203, %.07.i50, !dbg !32
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not9.i51 = icmp eq i32 %229, 0, !dbg !32
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %228, float %203, float %203) #4, !dbg !32
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %228, float %203, float %203) #4, !dbg !32
  %.06.i52 = select i1 %.not9.i51, float %231, float %230, !dbg !32
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not10.i53 = icmp eq i32 %232, 0, !dbg !32
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !32
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !32
  %.04.i54 = select i1 %.not10.i53, float %234, float %233, !dbg !32
  %235 = icmp ugt i32 %194, 2139095039, !dbg !32
  br i1 %235, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !32

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not11.i58 = icmp eq i32 %236, 0, !dbg !32
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %.03.i59 = select i1 %.not11.i58, float %238, float %237, !dbg !32
  br label %__nv_logf.exit60, !dbg !32

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !32
  %239 = fcmp olt float %97, 0x3810000000000000, !dbg !32
  %240 = fmul float %97, 0x4160000000000000, !dbg !32
  %.02.i61 = select i1 %239, float %240, float %97, !dbg !32
  %i.i.0.i62 = select i1 %239, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %241 = bitcast float %.02.i61 to i32, !dbg !32
  %242 = add i32 %241, -1059760811, !dbg !32
  %243 = and i32 %242, -8388608, !dbg !32
  %244 = sub i32 %241, %243, !dbg !32
  %245 = bitcast i32 %244 to float, !dbg !32
  %246 = sitofp i32 %243 to float, !dbg !32
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i63 = icmp eq i32 %247, 0, !dbg !32
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %246, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !32
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %246, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !32
  %.08.i64 = select i1 %.not.i63, float %249, float %248, !dbg !32
  %250 = fadd float %245, -1.000000e+00, !dbg !32
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i65 = icmp eq i32 %251, 0, !dbg !32
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %250, float 0x3FC2073EC0000000) #4, !dbg !32
  %253 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %250, float 0x3FC2073EC0000000) #4, !dbg !32
  %.010.i66 = select i1 %.not1.i65, float %253, float %252, !dbg !32
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i67 = icmp eq i32 %254, 0, !dbg !32
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %250, float 0xBFBF19B980000000) #4, !dbg !32
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %250, float 0xBFBF19B980000000) #4, !dbg !32
  %.011.i68 = select i1 %.not2.i67, float %256, float %255, !dbg !32
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i69 = icmp eq i32 %257, 0, !dbg !32
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %250, float 0x3FC1E52AA0000000) #4, !dbg !32
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %250, float 0x3FC1E52AA0000000) #4, !dbg !32
  %.012.i70 = select i1 %.not3.i69, float %259, float %258, !dbg !32
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i71 = icmp eq i32 %260, 0, !dbg !32
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %250, float 0xBFC55B1720000000) #4, !dbg !32
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %250, float 0xBFC55B1720000000) #4, !dbg !32
  %.09.i72 = select i1 %.not4.i71, float %262, float %261, !dbg !32
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i73 = icmp eq i32 %263, 0, !dbg !32
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %250, float 0x3FC99DA160000000) #4, !dbg !32
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %250, float 0x3FC99DA160000000) #4, !dbg !32
  %.05.i74 = select i1 %.not5.i73, float %265, float %264, !dbg !32
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i75 = icmp eq i32 %266, 0, !dbg !32
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %250, float 0xBFCFFFE440000000) #4, !dbg !32
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %250, float 0xBFCFFFE440000000) #4, !dbg !32
  %.01.i76 = select i1 %.not6.i75, float %268, float %267, !dbg !32
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i77 = icmp eq i32 %269, 0, !dbg !32
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %250, float 0x3FD5554F00000000) #4, !dbg !32
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %250, float 0x3FD5554F00000000) #4, !dbg !32
  %.0.i78 = select i1 %.not7.i77, float %271, float %270, !dbg !32
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i79 = icmp eq i32 %272, 0, !dbg !32
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %250, float -5.000000e-01) #4, !dbg !32
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %250, float -5.000000e-01) #4, !dbg !32
  %.07.i80 = select i1 %.not8.i79, float %274, float %273, !dbg !32
  %275 = fmul float %250, %.07.i80, !dbg !32
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not9.i81 = icmp eq i32 %276, 0, !dbg !32
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %275, float %250, float %250) #4, !dbg !32
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %275, float %250, float %250) #4, !dbg !32
  %.06.i82 = select i1 %.not9.i81, float %278, float %277, !dbg !32
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not10.i83 = icmp eq i32 %279, 0, !dbg !32
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !32
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !32
  %.04.i84 = select i1 %.not10.i83, float %281, float %280, !dbg !32
  %282 = icmp ugt i32 %241, 2139095039, !dbg !32
  br i1 %282, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !32

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not11.i88 = icmp eq i32 %283, 0, !dbg !32
  %284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %285 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %.03.i89 = select i1 %.not11.i88, float %285, float %284, !dbg !32
  br label %__nv_logf.exit90, !dbg !32

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !32
  %286 = insertelement <2 x float> poison, float %.02.i31, i64 0, !dbg !32
  %287 = insertelement <2 x float> %286, float %.02.i61, i64 1, !dbg !32
  %288 = fcmp oeq <2 x float> %287, zeroinitializer, !dbg !32
  %289 = insertelement <2 x float> poison, float %.02.i, i64 0, !dbg !32
  %290 = insertelement <2 x float> %289, float %.02.i1, i64 1, !dbg !32
  %291 = fcmp oeq <2 x float> %290, zeroinitializer, !dbg !32
  %292 = extractvalue { i32, i32, i32, i32 } %10, 3, !dbg !12
  %293 = extractvalue { i32, i32, i32, i32 } %10, 2, !dbg !12
  %294 = extractvalue { i32, i32, i32, i32 } %10, 1, !dbg !12
  %295 = extractvalue { i32, i32, i32, i32 } %10, 0, !dbg !12
  %296 = extractvalue { i32, i32, i32, i32 } %12, 3, !dbg !14
  %297 = extractvalue { i32, i32, i32, i32 } %12, 2, !dbg !14
  %298 = extractvalue { i32, i32, i32, i32 } %12, 1, !dbg !14
  %299 = extractvalue { i32, i32, i32, i32 } %12, 0, !dbg !14
  %300 = lshr i32 %5, 5, !dbg !10
  %301 = and i32 %5, 31, !dbg !10
  %302 = insertelement <2 x float> poison, float %r.i.0.i, i64 0, !dbg !32
  %303 = insertelement <2 x float> %302, float %r.i.0.i25, i64 1, !dbg !32
  %304 = select <2 x i1> %291, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %303, !dbg !32
  %305 = insertelement <2 x i32> poison, i32 %295, i64 0, !dbg !12
  %306 = insertelement <2 x i32> %305, i32 %294, i64 1, !dbg !12
  %307 = bitcast <2 x i32> %306 to <2 x float>, !dbg !12
  %308 = fsub <2 x float> zeroinitializer, %307, !dbg !33
  %309 = insertelement <2 x i32> poison, i32 %299, i64 0, !dbg !14
  %310 = insertelement <2 x i32> %309, i32 %298, i64 1, !dbg !14
  %311 = bitcast <2 x i32> %310 to <2 x float>, !dbg !14
  %312 = fsub <2 x float> %311, %304, !dbg !34
  %313 = fmul <2 x float> %308, %312, !dbg !35
  %314 = insertelement <2 x i32> poison, i32 %293, i64 0, !dbg !12
  %315 = insertelement <2 x i32> %314, i32 %292, i64 1, !dbg !12
  %316 = bitcast <2 x i32> %315 to <2 x float>, !dbg !12
  %317 = fsub <2 x float> zeroinitializer, %316, !dbg !33
  %318 = insertelement <2 x i32> poison, i32 %297, i64 0, !dbg !14
  %319 = insertelement <2 x i32> %318, i32 %296, i64 1, !dbg !14
  %320 = bitcast <2 x i32> %319 to <2 x float>, !dbg !14
  %321 = insertelement <2 x float> poison, float %r.i.0.i55, i64 0, !dbg !32
  %322 = insertelement <2 x float> %321, float %r.i.0.i85, i64 1, !dbg !32
  %323 = select <2 x i1> %288, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %322, !dbg !32
  %324 = fsub <2 x float> %320, %323, !dbg !34
  %325 = fmul <2 x float> %317, %324, !dbg !35
  %shift = shufflevector <2 x float> %313, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !36
  %326 = fadd <2 x float> %313, %shift, !dbg !36
  %327 = fadd <2 x float> %326, %325, !dbg !36
  %shift91 = shufflevector <2 x float> %325, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !36
  %328 = fadd <2 x float> %327, %shift91, !dbg !36
  %329 = extractelement <2 x float> %328, i64 0, !dbg !36
  %330 = bitcast float %329 to i32, !dbg !41
  %331 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %330, i32 16, i32 31), !dbg !41
  %332 = bitcast i32 %331 to float, !dbg !41
  %333 = fadd float %329, %332, !dbg !36
  %334 = bitcast float %333 to i32, !dbg !41
  %335 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %334, i32 8, i32 31), !dbg !41
  %336 = bitcast i32 %335 to float, !dbg !41
  %337 = fadd float %333, %336, !dbg !36
  %338 = bitcast float %337 to i32, !dbg !41
  %339 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %338, i32 4, i32 31), !dbg !41
  %340 = bitcast i32 %339 to float, !dbg !41
  %341 = fadd float %337, %340, !dbg !36
  %342 = bitcast float %341 to i32, !dbg !41
  %343 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %342, i32 2, i32 31), !dbg !41
  %344 = bitcast i32 %343 to float, !dbg !41
  %345 = fadd float %341, %344, !dbg !36
  %346 = bitcast float %345 to i32, !dbg !41
  %347 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %346, i32 1, i32 31), !dbg !41
  %348 = bitcast i32 %347 to float, !dbg !41
  %349 = fadd float %345, %348, !dbg !36
  %350 = icmp eq i32 %301, 0, !dbg !41
  %351 = and i32 %300, 1, !dbg !41
  %352 = zext nneg i32 %351 to i64, !dbg !41
  %353 = getelementptr float, ptr addrspace(3) @global_smem, i64 %352, !dbg !41
  %354 = bitcast float %349 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %353, <1 x i32> %354, i1 %350) #4, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %355 = icmp slt i32 %5, 2, !dbg !41
  %356 = sext i32 %5 to i64, !dbg !41
  %357 = getelementptr float, ptr addrspace(3) @global_smem, i64 %356, !dbg !41
  %358 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %357, i1 %355) #4, !dbg !41
  %359 = bitcast i32 %358 to float, !dbg !41
  %360 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %358, i32 1, i32 31), !dbg !41
  %361 = bitcast i32 %360 to float, !dbg !41
  %362 = fadd float %359, %361, !dbg !36
  %363 = and i32 %5, 1, !dbg !41
  %364 = icmp eq i32 %363, 0, !dbg !41
  %365 = and i1 %355, %364, !dbg !41
  %366 = bitcast float %362 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %357, <1 x i32> %366, i1 %365) #4, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %367 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !41
  %368 = fadd float %367, 0.000000e+00, !dbg !42
  %369 = fmul float %368, 2.500000e-01, !dbg !46
  tail call void @llvm.nvvm.barrier0(), !dbg !47
  %urem = and i32 %5, 63, !dbg !48
  %370 = icmp eq i32 %urem, 0, !dbg !48
  %371 = bitcast float %369 to i32, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %371, ptr addrspace(1) %0, i1 %370) #4, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csmywfg55q2vesu3s5ifh7bvcsdy5fappjhs4utgrdywpemkpcgz.py", directory: "inductor_cache/sm")
!4 = !{ptr @triton_per_fused__log_softmax_div_mul_neg_sum_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__log_softmax_div_mul_neg_sum_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__log_softmax_div_mul_neg_sum_1", linkageName: "triton_per_fused__log_softmax_div_mul_neg_sum_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 32, column: 30, scope: !7)
!12 = !DILocation(line: 32, column: 35, scope: !7)
!13 = !DILocation(line: 33, column: 30, scope: !7)
!14 = !DILocation(line: 33, column: 35, scope: !7)
!15 = !DILocation(line: 34, column: 37, scope: !7)
!16 = !DILocation(line: 35, column: 34, scope: !7)
!17 = !DILocation(line: 35, column: 30, scope: !7)
!18 = !DILocation(line: 35, column: 41, scope: !7)
!19 = !DILocation(line: 36, column: 34, scope: !7)
!20 = !DILocation(line: 36, column: 30, scope: !7)
!21 = !DILocation(line: 36, column: 41, scope: !7)
!22 = !DILocation(line: 37, column: 35, scope: !7)
!23 = !DILocation(line: 37, column: 31, scope: !7)
!24 = !DILocation(line: 37, column: 42, scope: !7)
!25 = !DILocation(line: 39, column: 23, scope: !7)
!26 = !DILocation(line: 40, column: 23, scope: !7)
!27 = !DILocation(line: 41, column: 18, scope: !7)
!28 = !DILocation(line: 42, column: 23, scope: !7)
!29 = !DILocation(line: 43, column: 19, scope: !7)
!30 = !DILocation(line: 44, column: 24, scope: !7)
!31 = !DILocation(line: 45, column: 20, scope: !7)
!32 = !DILocation(line: 46, column: 24, scope: !7)
!33 = !DILocation(line: 38, column: 12, scope: !7)
!34 = !DILocation(line: 47, column: 19, scope: !7)
!35 = !DILocation(line: 48, column: 19, scope: !7)
!36 = !DILocation(line: 256, column: 15, scope: !37, inlinedAt: !40)
!37 = distinct !DILexicalBlockFile(scope: !39, file: !38, discriminator: 0)
!38 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!39 = distinct !DILexicalBlockFile(scope: !7, file: !38, discriminator: 0)
!40 = !DILocation(line: 50, column: 59, scope: !7)
!41 = !DILocation(line: 267, column: 36, scope: !39, inlinedAt: !40)
!42 = !DILocation(line: 73, column: 15, scope: !43, inlinedAt: !45)
!43 = distinct !DILexicalBlockFile(scope: !7, file: !44, discriminator: 0)
!44 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!45 = !DILocation(line: 50, column: 45, scope: !7)
!46 = !DILocation(line: 52, column: 20, scope: !7)
!47 = !DILocation(line: 53, column: 4, scope: !7)
!48 = !DILocation(line: 54, column: 63, scope: !7)
!49 = !DILocation(line: 54, column: 4, scope: !7)
