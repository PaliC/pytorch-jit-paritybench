; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused_cat_49(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %11 = shl i32 %10, 7, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = and i32 %12, 127, !dbg !12
  %14 = or disjoint i32 %11, %13, !dbg !13
  %15 = icmp slt i32 %14, 26624, !dbg !14
  %.frozen = freeze i32 %14, !dbg !15
  %16 = sdiv i32 %.frozen, 416, !dbg !15
  %17 = mul i32 %16, 416, !dbg !16
  %.decomposed = sub i32 %.frozen, %17, !dbg !16
  %18 = srem i32 %16, 16, !dbg !17
  %19 = sdiv i32 %14, 6656, !dbg !18
  %20 = icmp slt i32 %.decomposed, 208, !dbg !19
  %21 = shl nsw i32 %.decomposed, 4, !dbg !20
  %22 = add nsw i32 %18, %21, !dbg !21
  %23 = mul nsw i32 %19, 3328, !dbg !22
  %24 = add nsw i32 %22, %23, !dbg !23
  %25 = sext i32 %24 to i64, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !24
  %27 = and i1 %15, %20, !dbg !25
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %27, i32 0, i1 %27) #3, !dbg !26
  %29 = add nsw i32 %.decomposed, -208, !dbg !27
  %30 = icmp ult i32 %29, 104, !dbg !27
  %31 = mul nsw i32 %16, 104, !dbg !28
  %32 = add nsw i32 %31, %29, !dbg !29
  %33 = sext i32 %32 to i64, !dbg !30
  %34 = getelementptr float, ptr addrspace(1) %1, i64 %33, !dbg !30
  %35 = and i1 %15, %30, !dbg !31
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %34, i1 %35, i32 0, i1 %35) #3, !dbg !32
  %37 = sext i32 %29 to i64, !dbg !33
  %38 = getelementptr float, ptr addrspace(1) %2, i64 %37, !dbg !33
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %35, i32 0, i1 %35) #3, !dbg !34
  %40 = getelementptr float, ptr addrspace(1) %3, i64 %37, !dbg !35
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %35, i32 0, i1 %35) #3, !dbg !36
  %42 = bitcast i32 %41 to float, !dbg !36
  %43 = fadd float %42, 0x3EE4F8B580000000, !dbg !37
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i = icmp eq i32 %44, 0, !dbg !38
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !38
  %.not1.i = icmp eq i32 %45, 0, !dbg !38
  br i1 %.not.i, label %51, label %46, !dbg !38

46:                                               ; preds = %9
  br i1 %.not1.i, label %49, label %47, !dbg !38

47:                                               ; preds = %46
  %48 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %43) #3, !dbg !38
  br label %__nv_sqrtf.exit, !dbg !38

49:                                               ; preds = %46
  %50 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %43) #3, !dbg !38
  br label %__nv_sqrtf.exit, !dbg !38

51:                                               ; preds = %9
  br i1 %.not1.i, label %54, label %52, !dbg !38

52:                                               ; preds = %51
  %53 = tail call float @llvm.nvvm.sqrt.rn.f(float %43) #3, !dbg !38
  br label %__nv_sqrtf.exit, !dbg !38

54:                                               ; preds = %51
  %55 = tail call float @llvm.nvvm.sqrt.approx.f(float %43) #3, !dbg !38
  br label %__nv_sqrtf.exit, !dbg !38

__nv_sqrtf.exit:                                  ; preds = %47, %49, %52, %54
  %.0.i = phi float [ %48, %47 ], [ %50, %49 ], [ %53, %52 ], [ %55, %54 ], !dbg !38
  %56 = bitcast i32 %36 to float, !dbg !32
  %57 = bitcast i32 %39 to float, !dbg !34
  %58 = fsub float %56, %57, !dbg !39
  %59 = icmp slt i32 %.decomposed, 312, !dbg !40
  %60 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !41
  %61 = fmul float %58, %60, !dbg !42
  %62 = getelementptr float, ptr addrspace(1) %4, i64 %37, !dbg !43
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %35, i32 0, i1 %35) #3, !dbg !44
  %64 = bitcast i32 %63 to float, !dbg !44
  %65 = fmul float %61, %64, !dbg !45
  %66 = getelementptr float, ptr addrspace(1) %5, i64 %37, !dbg !46
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %66, i1 %35, i32 0, i1 %35) #3, !dbg !47
  %68 = bitcast i32 %67 to float, !dbg !47
  %69 = fadd float %65, %68, !dbg !48
  %70 = fcmp olt float %69, 0.000000e+00, !dbg !49
  %71 = select i1 %70, float 0.000000e+00, float %69, !dbg !53
  %72 = icmp sgt i32 %.decomposed, 311, !dbg !54
  %73 = mul nsw i32 %19, 6656, !dbg !55
  %74 = add i32 %22, %73, !dbg !56
  %75 = sext i32 %74 to i64, !dbg !57
  %76 = getelementptr float, ptr addrspace(1) %6, i64 %75, !dbg !57
  %77 = and i1 %15, %72, !dbg !58
  %78 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %76, i1 %77, i32 0, i1 %77) #3, !dbg !59
  %79 = sext i32 %14 to i64, !dbg !60
  %80 = getelementptr float, ptr addrspace(1) %7, i64 %79, !dbg !60
  %81 = bitcast float %71 to i32, !dbg !61
  %82 = select i1 %30, i32 %81, i32 0, !dbg !62
  %83 = select i1 %20, i32 %28, i32 %82, !dbg !63
  %84 = select i1 %59, i32 %83, i32 %78, !dbg !64
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %84, ptr addrspace(1) %80, i1 %15) #3, !dbg !61
  ret void, !dbg !65
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py", directory: "inductor_cache/nu")
!4 = !{ptr @triton_poi_fused_cat_49, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_49, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_49", linkageName: "triton_poi_fused_cat_49", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 28, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 38, column: 18, scope: !7)
!20 = !DILocation(line: 40, column: 40, scope: !7)
!21 = !DILocation(line: 40, column: 36, scope: !7)
!22 = !DILocation(line: 40, column: 51, scope: !7)
!23 = !DILocation(line: 40, column: 46, scope: !7)
!24 = !DILocation(line: 40, column: 31, scope: !7)
!25 = !DILocation(line: 40, column: 64, scope: !7)
!26 = !DILocation(line: 40, column: 56, scope: !7)
!27 = !DILocation(line: 44, column: 20, scope: !7)
!28 = !DILocation(line: 45, column: 35, scope: !7)
!29 = !DILocation(line: 45, column: 41, scope: !7)
!30 = !DILocation(line: 45, column: 31, scope: !7)
!31 = !DILocation(line: 45, column: 66, scope: !7)
!32 = !DILocation(line: 45, column: 58, scope: !7)
!33 = !DILocation(line: 46, column: 31, scope: !7)
!34 = !DILocation(line: 46, column: 47, scope: !7)
!35 = !DILocation(line: 48, column: 31, scope: !7)
!36 = !DILocation(line: 48, column: 47, scope: !7)
!37 = !DILocation(line: 50, column: 20, scope: !7)
!38 = !DILocation(line: 51, column: 27, scope: !7)
!39 = !DILocation(line: 47, column: 20, scope: !7)
!40 = !DILocation(line: 33, column: 18, scope: !7)
!41 = !DILocation(line: 53, column: 20, scope: !7)
!42 = !DILocation(line: 56, column: 20, scope: !7)
!43 = !DILocation(line: 57, column: 31, scope: !7)
!44 = !DILocation(line: 57, column: 47, scope: !7)
!45 = !DILocation(line: 58, column: 20, scope: !7)
!46 = !DILocation(line: 59, column: 31, scope: !7)
!47 = !DILocation(line: 59, column: 47, scope: !7)
!48 = !DILocation(line: 60, column: 20, scope: !7)
!49 = !DILocation(line: 118, column: 15, scope: !50, inlinedAt: !52)
!50 = distinct !DILexicalBlockFile(scope: !7, file: !51, discriminator: 0)
!51 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!52 = !DILocation(line: 62, column: 42, scope: !7)
!53 = !DILocation(line: 121, column: 29, scope: !50, inlinedAt: !52)
!54 = !DILocation(line: 68, column: 20, scope: !7)
!55 = !DILocation(line: 71, column: 67, scope: !7)
!56 = !DILocation(line: 71, column: 62, scope: !7)
!57 = !DILocation(line: 71, column: 31, scope: !7)
!58 = !DILocation(line: 71, column: 80, scope: !7)
!59 = !DILocation(line: 71, column: 72, scope: !7)
!60 = !DILocation(line: 73, column: 25, scope: !7)
!61 = !DILocation(line: 73, column: 37, scope: !7)
!62 = !DILocation(line: 64, column: 35, scope: !7)
!63 = !DILocation(line: 65, column: 34, scope: !7)
!64 = !DILocation(line: 0, scope: !7)
!65 = !DILocation(line: 73, column: 4, scope: !7)
