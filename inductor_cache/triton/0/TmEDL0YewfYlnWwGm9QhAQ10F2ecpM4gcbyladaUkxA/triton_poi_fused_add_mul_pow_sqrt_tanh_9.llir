; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_mul_pow_sqrt_tanh_9(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %7 = shl i32 %6, 6, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 2, !dbg !12
  %10 = and i32 %9, 31, !dbg !12
  %11 = shl i32 %8, 2, !dbg !12
  %12 = and i32 %11, 12, !dbg !12
  %13 = or disjoint i32 %7, %10, !dbg !13
  %14 = or disjoint i32 %13, 32, !dbg !13
  %15 = icmp slt i32 %13, 64, !dbg !14
  %16 = icmp slt i32 %14, 64, !dbg !14
  %17 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !15
  %18 = shl i32 %17, 4, !dbg !16
  %19 = or disjoint i32 %18, %12, !dbg !17
  %20 = icmp slt i32 %19, 6144, !dbg !18
  %21 = mul i32 %13, 6144, !dbg !19
  %22 = mul i32 %14, 6144, !dbg !19
  %23 = add i32 %19, %21, !dbg !20
  %24 = add i32 %19, %22, !dbg !20
  %25 = sext i32 %23 to i64, !dbg !21
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !21
  %27 = sext i32 %24 to i64, !dbg !21
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !21
  %29 = and i1 %15, %20, !dbg !22
  %30 = and i1 %16, %20, !dbg !22
  %31 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %26, i1 %29) #4, !dbg !23
  %32 = extractvalue { i32, i32, i32, i32 } %31, 0, !dbg !23
  %33 = extractvalue { i32, i32, i32, i32 } %31, 1, !dbg !23
  %34 = extractvalue { i32, i32, i32, i32 } %31, 2, !dbg !23
  %35 = extractvalue { i32, i32, i32, i32 } %31, 3, !dbg !23
  %36 = bitcast i32 %32 to float, !dbg !23
  %37 = bitcast i32 %33 to float, !dbg !23
  %38 = bitcast i32 %34 to float, !dbg !23
  %39 = bitcast i32 %35 to float, !dbg !23
  %40 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %28, i1 %30) #4, !dbg !23
  %41 = extractvalue { i32, i32, i32, i32 } %40, 0, !dbg !23
  %42 = extractvalue { i32, i32, i32, i32 } %40, 1, !dbg !23
  %43 = extractvalue { i32, i32, i32, i32 } %40, 2, !dbg !23
  %44 = extractvalue { i32, i32, i32, i32 } %40, 3, !dbg !23
  %45 = bitcast i32 %41 to float, !dbg !23
  %46 = bitcast i32 %42 to float, !dbg !23
  %47 = bitcast i32 %43 to float, !dbg !23
  %48 = bitcast i32 %44 to float, !dbg !23
  %49 = fmul float %36, %36, !dbg !24
  %50 = fmul float %37, %37, !dbg !24
  %51 = fmul float %38, %38, !dbg !24
  %52 = fmul float %39, %39, !dbg !24
  %53 = fmul float %45, %45, !dbg !24
  %54 = fmul float %46, %46, !dbg !24
  %55 = fmul float %47, %47, !dbg !24
  %56 = fmul float %48, %48, !dbg !24
  %57 = fmul float %49, %36, !dbg !25
  %58 = fmul float %50, %37, !dbg !25
  %59 = fmul float %51, %38, !dbg !25
  %60 = fmul float %52, %39, !dbg !25
  %61 = fmul float %53, %45, !dbg !25
  %62 = fmul float %54, %46, !dbg !25
  %63 = fmul float %55, %47, !dbg !25
  %64 = fmul float %56, %48, !dbg !25
  %65 = fmul float %57, 0x3FA6E4E260000000, !dbg !26
  %66 = fmul float %58, 0x3FA6E4E260000000, !dbg !26
  %67 = fmul float %59, 0x3FA6E4E260000000, !dbg !26
  %68 = fmul float %60, 0x3FA6E4E260000000, !dbg !26
  %69 = fmul float %61, 0x3FA6E4E260000000, !dbg !26
  %70 = fmul float %62, 0x3FA6E4E260000000, !dbg !26
  %71 = fmul float %63, 0x3FA6E4E260000000, !dbg !26
  %72 = fmul float %64, 0x3FA6E4E260000000, !dbg !26
  %73 = fadd float %65, %36, !dbg !27
  %74 = fadd float %66, %37, !dbg !27
  %75 = fadd float %67, %38, !dbg !27
  %76 = fadd float %68, %39, !dbg !27
  %77 = fadd float %69, %45, !dbg !27
  %78 = fadd float %70, %46, !dbg !27
  %79 = fadd float %71, %47, !dbg !27
  %80 = fadd float %72, %48, !dbg !27
  %81 = fmul float %73, 0x3FE9884540000000, !dbg !28
  %82 = fmul float %74, 0x3FE9884540000000, !dbg !28
  %83 = fmul float %75, 0x3FE9884540000000, !dbg !28
  %84 = fmul float %76, 0x3FE9884540000000, !dbg !28
  %85 = fmul float %77, 0x3FE9884540000000, !dbg !28
  %86 = fmul float %78, 0x3FE9884540000000, !dbg !28
  %87 = fmul float %79, 0x3FE9884540000000, !dbg !28
  %88 = fmul float %80, 0x3FE9884540000000, !dbg !28
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i = icmp eq i32 %89, 0, !dbg !29
  %90 = tail call float @llvm.nvvm.fabs.ftz.f(float %81) #4, !dbg !29
  %91 = tail call float @llvm.nvvm.fabs.f(float %81) #4, !dbg !29
  %.01.i = select i1 %.not.i, float %91, float %90, !dbg !29
  %92 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !29
  br i1 %92, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !29

__internal_fmad.exit1.i:                          ; preds = %5
  %93 = fmul float %.01.i, 0x4007154760000000, !dbg !29
  %94 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %93) #4, !dbg !29
  %95 = fadd float %94, 1.000000e+00, !dbg !29
  %96 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %95) #5, !dbg !29, !srcloc !30
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i = icmp eq i32 %97, 0, !dbg !29
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %96, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %96, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i = select i1 %.not6.i, float %99, float %98, !dbg !29
  %100 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !29
  %s.0.i = select i1 %100, float 1.000000e+00, float %.03.i, !dbg !29
  %101 = bitcast float %s.0.i to i32, !dbg !29
  %102 = bitcast float %81 to i32, !dbg !29
  %103 = and i32 %102, -2147483648, !dbg !29
  %104 = or i32 %103, %101, !dbg !29
  %105 = bitcast i32 %104 to float, !dbg !29
  br label %__nv_tanhf.exit, !dbg !29

__internal_fmad.exit3.i:                          ; preds = %5
  %106 = fmul float %81, %81, !dbg !29
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i = icmp eq i32 %107, 0, !dbg !29
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %106, float 0xBFAAC795C0000000) #4, !dbg !29
  %109 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %106, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i = select i1 %.not1.i, float %109, float %108, !dbg !29
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i = icmp eq i32 %110, 0, !dbg !29
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %106, float 0x3FC10B2820000000) #4, !dbg !29
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %106, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i = select i1 %.not2.i, float %112, float %111, !dbg !29
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i = icmp eq i32 %113, 0, !dbg !29
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %106, float 0xBFD5553DA0000000) #4, !dbg !29
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %106, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i = select i1 %.not3.i, float %115, float %114, !dbg !29
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i = icmp eq i32 %116, 0, !dbg !29
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %106, float 0.000000e+00) #4, !dbg !29
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %106, float 0.000000e+00) #4, !dbg !29
  %.04.i = select i1 %.not4.i, float %118, float %117, !dbg !29
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i = icmp eq i32 %119, 0, !dbg !29
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %81, float %81) #4, !dbg !29
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %81, float %81) #4, !dbg !29
  %.02.i = select i1 %.not5.i, float %121, float %120, !dbg !29
  br label %__nv_tanhf.exit, !dbg !29

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %105, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !29
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i17 = icmp eq i32 %122, 0, !dbg !29
  %123 = tail call float @llvm.nvvm.fabs.ftz.f(float %82) #4, !dbg !29
  %124 = tail call float @llvm.nvvm.fabs.f(float %82) #4, !dbg !29
  %.01.i18 = select i1 %.not.i17, float %124, float %123, !dbg !29
  %125 = fcmp ult float %.01.i18, 0x3FE3333340000000, !dbg !29
  br i1 %125, label %__internal_fmad.exit3.i24, label %__internal_fmad.exit1.i19, !dbg !29

__internal_fmad.exit1.i19:                        ; preds = %__nv_tanhf.exit
  %126 = fmul float %.01.i18, 0x4007154760000000, !dbg !29
  %127 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %126) #4, !dbg !29
  %128 = fadd float %127, 1.000000e+00, !dbg !29
  %129 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %128) #5, !dbg !29, !srcloc !30
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i20 = icmp eq i32 %130, 0, !dbg !29
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %129, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %129, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i21 = select i1 %.not6.i20, float %132, float %131, !dbg !29
  %133 = fcmp oge float %.01.i18, 0x4022059680000000, !dbg !29
  %s.0.i22 = select i1 %133, float 1.000000e+00, float %.03.i21, !dbg !29
  %134 = bitcast float %s.0.i22 to i32, !dbg !29
  %135 = bitcast float %82 to i32, !dbg !29
  %136 = and i32 %135, -2147483648, !dbg !29
  %137 = or i32 %136, %134, !dbg !29
  %138 = bitcast i32 %137 to float, !dbg !29
  br label %__nv_tanhf.exit35, !dbg !29

__internal_fmad.exit3.i24:                        ; preds = %__nv_tanhf.exit
  %139 = fmul float %82, %82, !dbg !29
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i25 = icmp eq i32 %140, 0, !dbg !29
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %139, float 0xBFAAC795C0000000) #4, !dbg !29
  %142 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %139, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i26 = select i1 %.not1.i25, float %142, float %141, !dbg !29
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i27 = icmp eq i32 %143, 0, !dbg !29
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i26, float %139, float 0x3FC10B2820000000) #4, !dbg !29
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i26, float %139, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i28 = select i1 %.not2.i27, float %145, float %144, !dbg !29
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i29 = icmp eq i32 %146, 0, !dbg !29
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i28, float %139, float 0xBFD5553DA0000000) #4, !dbg !29
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i28, float %139, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i30 = select i1 %.not3.i29, float %148, float %147, !dbg !29
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i31 = icmp eq i32 %149, 0, !dbg !29
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i30, float %139, float 0.000000e+00) #4, !dbg !29
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i30, float %139, float 0.000000e+00) #4, !dbg !29
  %.04.i32 = select i1 %.not4.i31, float %151, float %150, !dbg !29
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i33 = icmp eq i32 %152, 0, !dbg !29
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i32, float %82, float %82) #4, !dbg !29
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i32, float %82, float %82) #4, !dbg !29
  %.02.i34 = select i1 %.not5.i33, float %154, float %153, !dbg !29
  br label %__nv_tanhf.exit35, !dbg !29

__nv_tanhf.exit35:                                ; preds = %__internal_fmad.exit1.i19, %__internal_fmad.exit3.i24
  %s.1.i23 = phi float [ %138, %__internal_fmad.exit1.i19 ], [ %.02.i34, %__internal_fmad.exit3.i24 ], !dbg !29
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i36 = icmp eq i32 %155, 0, !dbg !29
  %156 = tail call float @llvm.nvvm.fabs.ftz.f(float %83) #4, !dbg !29
  %157 = tail call float @llvm.nvvm.fabs.f(float %83) #4, !dbg !29
  %.01.i37 = select i1 %.not.i36, float %157, float %156, !dbg !29
  %158 = fcmp ult float %.01.i37, 0x3FE3333340000000, !dbg !29
  br i1 %158, label %__internal_fmad.exit3.i43, label %__internal_fmad.exit1.i38, !dbg !29

__internal_fmad.exit1.i38:                        ; preds = %__nv_tanhf.exit35
  %159 = fmul float %.01.i37, 0x4007154760000000, !dbg !29
  %160 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %159) #4, !dbg !29
  %161 = fadd float %160, 1.000000e+00, !dbg !29
  %162 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %161) #5, !dbg !29, !srcloc !30
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i39 = icmp eq i32 %163, 0, !dbg !29
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %162, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %162, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i40 = select i1 %.not6.i39, float %165, float %164, !dbg !29
  %166 = fcmp oge float %.01.i37, 0x4022059680000000, !dbg !29
  %s.0.i41 = select i1 %166, float 1.000000e+00, float %.03.i40, !dbg !29
  %167 = bitcast float %s.0.i41 to i32, !dbg !29
  %168 = bitcast float %83 to i32, !dbg !29
  %169 = and i32 %168, -2147483648, !dbg !29
  %170 = or i32 %169, %167, !dbg !29
  %171 = bitcast i32 %170 to float, !dbg !29
  br label %__nv_tanhf.exit54, !dbg !29

__internal_fmad.exit3.i43:                        ; preds = %__nv_tanhf.exit35
  %172 = fmul float %83, %83, !dbg !29
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i44 = icmp eq i32 %173, 0, !dbg !29
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %172, float 0xBFAAC795C0000000) #4, !dbg !29
  %175 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %172, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i45 = select i1 %.not1.i44, float %175, float %174, !dbg !29
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i46 = icmp eq i32 %176, 0, !dbg !29
  %177 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i45, float %172, float 0x3FC10B2820000000) #4, !dbg !29
  %178 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i45, float %172, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i47 = select i1 %.not2.i46, float %178, float %177, !dbg !29
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i48 = icmp eq i32 %179, 0, !dbg !29
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i47, float %172, float 0xBFD5553DA0000000) #4, !dbg !29
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i47, float %172, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i49 = select i1 %.not3.i48, float %181, float %180, !dbg !29
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i50 = icmp eq i32 %182, 0, !dbg !29
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i49, float %172, float 0.000000e+00) #4, !dbg !29
  %184 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i49, float %172, float 0.000000e+00) #4, !dbg !29
  %.04.i51 = select i1 %.not4.i50, float %184, float %183, !dbg !29
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i52 = icmp eq i32 %185, 0, !dbg !29
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i51, float %83, float %83) #4, !dbg !29
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i51, float %83, float %83) #4, !dbg !29
  %.02.i53 = select i1 %.not5.i52, float %187, float %186, !dbg !29
  br label %__nv_tanhf.exit54, !dbg !29

__nv_tanhf.exit54:                                ; preds = %__internal_fmad.exit1.i38, %__internal_fmad.exit3.i43
  %s.1.i42 = phi float [ %171, %__internal_fmad.exit1.i38 ], [ %.02.i53, %__internal_fmad.exit3.i43 ], !dbg !29
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i55 = icmp eq i32 %188, 0, !dbg !29
  %189 = tail call float @llvm.nvvm.fabs.ftz.f(float %84) #4, !dbg !29
  %190 = tail call float @llvm.nvvm.fabs.f(float %84) #4, !dbg !29
  %.01.i56 = select i1 %.not.i55, float %190, float %189, !dbg !29
  %191 = fcmp ult float %.01.i56, 0x3FE3333340000000, !dbg !29
  br i1 %191, label %__internal_fmad.exit3.i62, label %__internal_fmad.exit1.i57, !dbg !29

__internal_fmad.exit1.i57:                        ; preds = %__nv_tanhf.exit54
  %192 = fmul float %.01.i56, 0x4007154760000000, !dbg !29
  %193 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %192) #4, !dbg !29
  %194 = fadd float %193, 1.000000e+00, !dbg !29
  %195 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %194) #5, !dbg !29, !srcloc !30
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i58 = icmp eq i32 %196, 0, !dbg !29
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %195, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %195, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i59 = select i1 %.not6.i58, float %198, float %197, !dbg !29
  %199 = fcmp oge float %.01.i56, 0x4022059680000000, !dbg !29
  %s.0.i60 = select i1 %199, float 1.000000e+00, float %.03.i59, !dbg !29
  %200 = bitcast float %s.0.i60 to i32, !dbg !29
  %201 = bitcast float %84 to i32, !dbg !29
  %202 = and i32 %201, -2147483648, !dbg !29
  %203 = or i32 %202, %200, !dbg !29
  %204 = bitcast i32 %203 to float, !dbg !29
  br label %__nv_tanhf.exit73, !dbg !29

__internal_fmad.exit3.i62:                        ; preds = %__nv_tanhf.exit54
  %205 = fmul float %84, %84, !dbg !29
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i63 = icmp eq i32 %206, 0, !dbg !29
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %205, float 0xBFAAC795C0000000) #4, !dbg !29
  %208 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %205, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i64 = select i1 %.not1.i63, float %208, float %207, !dbg !29
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i65 = icmp eq i32 %209, 0, !dbg !29
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i64, float %205, float 0x3FC10B2820000000) #4, !dbg !29
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i64, float %205, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i66 = select i1 %.not2.i65, float %211, float %210, !dbg !29
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i67 = icmp eq i32 %212, 0, !dbg !29
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i66, float %205, float 0xBFD5553DA0000000) #4, !dbg !29
  %214 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i66, float %205, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i68 = select i1 %.not3.i67, float %214, float %213, !dbg !29
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i69 = icmp eq i32 %215, 0, !dbg !29
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i68, float %205, float 0.000000e+00) #4, !dbg !29
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i68, float %205, float 0.000000e+00) #4, !dbg !29
  %.04.i70 = select i1 %.not4.i69, float %217, float %216, !dbg !29
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i71 = icmp eq i32 %218, 0, !dbg !29
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i70, float %84, float %84) #4, !dbg !29
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i70, float %84, float %84) #4, !dbg !29
  %.02.i72 = select i1 %.not5.i71, float %220, float %219, !dbg !29
  br label %__nv_tanhf.exit73, !dbg !29

__nv_tanhf.exit73:                                ; preds = %__internal_fmad.exit1.i57, %__internal_fmad.exit3.i62
  %s.1.i61 = phi float [ %204, %__internal_fmad.exit1.i57 ], [ %.02.i72, %__internal_fmad.exit3.i62 ], !dbg !29
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i74 = icmp eq i32 %221, 0, !dbg !29
  %222 = tail call float @llvm.nvvm.fabs.ftz.f(float %85) #4, !dbg !29
  %223 = tail call float @llvm.nvvm.fabs.f(float %85) #4, !dbg !29
  %.01.i75 = select i1 %.not.i74, float %223, float %222, !dbg !29
  %224 = fcmp ult float %.01.i75, 0x3FE3333340000000, !dbg !29
  br i1 %224, label %__internal_fmad.exit3.i81, label %__internal_fmad.exit1.i76, !dbg !29

__internal_fmad.exit1.i76:                        ; preds = %__nv_tanhf.exit73
  %225 = fmul float %.01.i75, 0x4007154760000000, !dbg !29
  %226 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %225) #4, !dbg !29
  %227 = fadd float %226, 1.000000e+00, !dbg !29
  %228 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %227) #5, !dbg !29, !srcloc !30
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i77 = icmp eq i32 %229, 0, !dbg !29
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %228, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %228, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i78 = select i1 %.not6.i77, float %231, float %230, !dbg !29
  %232 = fcmp oge float %.01.i75, 0x4022059680000000, !dbg !29
  %s.0.i79 = select i1 %232, float 1.000000e+00, float %.03.i78, !dbg !29
  %233 = bitcast float %s.0.i79 to i32, !dbg !29
  %234 = bitcast float %85 to i32, !dbg !29
  %235 = and i32 %234, -2147483648, !dbg !29
  %236 = or i32 %235, %233, !dbg !29
  %237 = bitcast i32 %236 to float, !dbg !29
  br label %__nv_tanhf.exit92, !dbg !29

__internal_fmad.exit3.i81:                        ; preds = %__nv_tanhf.exit73
  %238 = fmul float %85, %85, !dbg !29
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i82 = icmp eq i32 %239, 0, !dbg !29
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %238, float 0xBFAAC795C0000000) #4, !dbg !29
  %241 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %238, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i83 = select i1 %.not1.i82, float %241, float %240, !dbg !29
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i84 = icmp eq i32 %242, 0, !dbg !29
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i83, float %238, float 0x3FC10B2820000000) #4, !dbg !29
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i83, float %238, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i85 = select i1 %.not2.i84, float %244, float %243, !dbg !29
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i86 = icmp eq i32 %245, 0, !dbg !29
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i85, float %238, float 0xBFD5553DA0000000) #4, !dbg !29
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i85, float %238, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i87 = select i1 %.not3.i86, float %247, float %246, !dbg !29
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i88 = icmp eq i32 %248, 0, !dbg !29
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i87, float %238, float 0.000000e+00) #4, !dbg !29
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i87, float %238, float 0.000000e+00) #4, !dbg !29
  %.04.i89 = select i1 %.not4.i88, float %250, float %249, !dbg !29
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i90 = icmp eq i32 %251, 0, !dbg !29
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i89, float %85, float %85) #4, !dbg !29
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i89, float %85, float %85) #4, !dbg !29
  %.02.i91 = select i1 %.not5.i90, float %253, float %252, !dbg !29
  br label %__nv_tanhf.exit92, !dbg !29

__nv_tanhf.exit92:                                ; preds = %__internal_fmad.exit1.i76, %__internal_fmad.exit3.i81
  %s.1.i80 = phi float [ %237, %__internal_fmad.exit1.i76 ], [ %.02.i91, %__internal_fmad.exit3.i81 ], !dbg !29
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i93 = icmp eq i32 %254, 0, !dbg !29
  %255 = tail call float @llvm.nvvm.fabs.ftz.f(float %86) #4, !dbg !29
  %256 = tail call float @llvm.nvvm.fabs.f(float %86) #4, !dbg !29
  %.01.i94 = select i1 %.not.i93, float %256, float %255, !dbg !29
  %257 = fcmp ult float %.01.i94, 0x3FE3333340000000, !dbg !29
  br i1 %257, label %__internal_fmad.exit3.i100, label %__internal_fmad.exit1.i95, !dbg !29

__internal_fmad.exit1.i95:                        ; preds = %__nv_tanhf.exit92
  %258 = fmul float %.01.i94, 0x4007154760000000, !dbg !29
  %259 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %258) #4, !dbg !29
  %260 = fadd float %259, 1.000000e+00, !dbg !29
  %261 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %260) #5, !dbg !29, !srcloc !30
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i96 = icmp eq i32 %262, 0, !dbg !29
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %261, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %261, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i97 = select i1 %.not6.i96, float %264, float %263, !dbg !29
  %265 = fcmp oge float %.01.i94, 0x4022059680000000, !dbg !29
  %s.0.i98 = select i1 %265, float 1.000000e+00, float %.03.i97, !dbg !29
  %266 = bitcast float %s.0.i98 to i32, !dbg !29
  %267 = bitcast float %86 to i32, !dbg !29
  %268 = and i32 %267, -2147483648, !dbg !29
  %269 = or i32 %268, %266, !dbg !29
  %270 = bitcast i32 %269 to float, !dbg !29
  br label %__nv_tanhf.exit111, !dbg !29

__internal_fmad.exit3.i100:                       ; preds = %__nv_tanhf.exit92
  %271 = fmul float %86, %86, !dbg !29
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i101 = icmp eq i32 %272, 0, !dbg !29
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %271, float 0xBFAAC795C0000000) #4, !dbg !29
  %274 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %271, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i102 = select i1 %.not1.i101, float %274, float %273, !dbg !29
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i103 = icmp eq i32 %275, 0, !dbg !29
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i102, float %271, float 0x3FC10B2820000000) #4, !dbg !29
  %277 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i102, float %271, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i104 = select i1 %.not2.i103, float %277, float %276, !dbg !29
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i105 = icmp eq i32 %278, 0, !dbg !29
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i104, float %271, float 0xBFD5553DA0000000) #4, !dbg !29
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i104, float %271, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i106 = select i1 %.not3.i105, float %280, float %279, !dbg !29
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i107 = icmp eq i32 %281, 0, !dbg !29
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i106, float %271, float 0.000000e+00) #4, !dbg !29
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i106, float %271, float 0.000000e+00) #4, !dbg !29
  %.04.i108 = select i1 %.not4.i107, float %283, float %282, !dbg !29
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i109 = icmp eq i32 %284, 0, !dbg !29
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i108, float %86, float %86) #4, !dbg !29
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i108, float %86, float %86) #4, !dbg !29
  %.02.i110 = select i1 %.not5.i109, float %286, float %285, !dbg !29
  br label %__nv_tanhf.exit111, !dbg !29

__nv_tanhf.exit111:                               ; preds = %__internal_fmad.exit1.i95, %__internal_fmad.exit3.i100
  %s.1.i99 = phi float [ %270, %__internal_fmad.exit1.i95 ], [ %.02.i110, %__internal_fmad.exit3.i100 ], !dbg !29
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i112 = icmp eq i32 %287, 0, !dbg !29
  %288 = tail call float @llvm.nvvm.fabs.ftz.f(float %87) #4, !dbg !29
  %289 = tail call float @llvm.nvvm.fabs.f(float %87) #4, !dbg !29
  %.01.i113 = select i1 %.not.i112, float %289, float %288, !dbg !29
  %290 = fcmp ult float %.01.i113, 0x3FE3333340000000, !dbg !29
  br i1 %290, label %__internal_fmad.exit3.i119, label %__internal_fmad.exit1.i114, !dbg !29

__internal_fmad.exit1.i114:                       ; preds = %__nv_tanhf.exit111
  %291 = fmul float %.01.i113, 0x4007154760000000, !dbg !29
  %292 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %291) #4, !dbg !29
  %293 = fadd float %292, 1.000000e+00, !dbg !29
  %294 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %293) #5, !dbg !29, !srcloc !30
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i115 = icmp eq i32 %295, 0, !dbg !29
  %296 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %294, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %294, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i116 = select i1 %.not6.i115, float %297, float %296, !dbg !29
  %298 = fcmp oge float %.01.i113, 0x4022059680000000, !dbg !29
  %s.0.i117 = select i1 %298, float 1.000000e+00, float %.03.i116, !dbg !29
  %299 = bitcast float %s.0.i117 to i32, !dbg !29
  %300 = bitcast float %87 to i32, !dbg !29
  %301 = and i32 %300, -2147483648, !dbg !29
  %302 = or i32 %301, %299, !dbg !29
  %303 = bitcast i32 %302 to float, !dbg !29
  br label %__nv_tanhf.exit130, !dbg !29

__internal_fmad.exit3.i119:                       ; preds = %__nv_tanhf.exit111
  %304 = fmul float %87, %87, !dbg !29
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i120 = icmp eq i32 %305, 0, !dbg !29
  %306 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %304, float 0xBFAAC795C0000000) #4, !dbg !29
  %307 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %304, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i121 = select i1 %.not1.i120, float %307, float %306, !dbg !29
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i122 = icmp eq i32 %308, 0, !dbg !29
  %309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i121, float %304, float 0x3FC10B2820000000) #4, !dbg !29
  %310 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i121, float %304, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i123 = select i1 %.not2.i122, float %310, float %309, !dbg !29
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i124 = icmp eq i32 %311, 0, !dbg !29
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i123, float %304, float 0xBFD5553DA0000000) #4, !dbg !29
  %313 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i123, float %304, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i125 = select i1 %.not3.i124, float %313, float %312, !dbg !29
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i126 = icmp eq i32 %314, 0, !dbg !29
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i125, float %304, float 0.000000e+00) #4, !dbg !29
  %316 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i125, float %304, float 0.000000e+00) #4, !dbg !29
  %.04.i127 = select i1 %.not4.i126, float %316, float %315, !dbg !29
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i128 = icmp eq i32 %317, 0, !dbg !29
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i127, float %87, float %87) #4, !dbg !29
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i127, float %87, float %87) #4, !dbg !29
  %.02.i129 = select i1 %.not5.i128, float %319, float %318, !dbg !29
  br label %__nv_tanhf.exit130, !dbg !29

__nv_tanhf.exit130:                               ; preds = %__internal_fmad.exit1.i114, %__internal_fmad.exit3.i119
  %s.1.i118 = phi float [ %303, %__internal_fmad.exit1.i114 ], [ %.02.i129, %__internal_fmad.exit3.i119 ], !dbg !29
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i131 = icmp eq i32 %320, 0, !dbg !29
  %321 = tail call float @llvm.nvvm.fabs.ftz.f(float %88) #4, !dbg !29
  %322 = tail call float @llvm.nvvm.fabs.f(float %88) #4, !dbg !29
  %.01.i132 = select i1 %.not.i131, float %322, float %321, !dbg !29
  %323 = fcmp ult float %.01.i132, 0x3FE3333340000000, !dbg !29
  br i1 %323, label %__internal_fmad.exit3.i138, label %__internal_fmad.exit1.i133, !dbg !29

__internal_fmad.exit1.i133:                       ; preds = %__nv_tanhf.exit130
  %324 = fmul float %.01.i132, 0x4007154760000000, !dbg !29
  %325 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %324) #4, !dbg !29
  %326 = fadd float %325, 1.000000e+00, !dbg !29
  %327 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %326) #5, !dbg !29, !srcloc !30
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i134 = icmp eq i32 %328, 0, !dbg !29
  %329 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %327, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %330 = tail call float @llvm.nvvm.fma.rn.f(float %327, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i135 = select i1 %.not6.i134, float %330, float %329, !dbg !29
  %331 = fcmp oge float %.01.i132, 0x4022059680000000, !dbg !29
  %s.0.i136 = select i1 %331, float 1.000000e+00, float %.03.i135, !dbg !29
  %332 = bitcast float %s.0.i136 to i32, !dbg !29
  %333 = bitcast float %88 to i32, !dbg !29
  %334 = and i32 %333, -2147483648, !dbg !29
  %335 = or i32 %334, %332, !dbg !29
  %336 = bitcast i32 %335 to float, !dbg !29
  br label %__nv_tanhf.exit149, !dbg !29

__internal_fmad.exit3.i138:                       ; preds = %__nv_tanhf.exit130
  %337 = fmul float %88, %88, !dbg !29
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i139 = icmp eq i32 %338, 0, !dbg !29
  %339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %337, float 0xBFAAC795C0000000) #4, !dbg !29
  %340 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %337, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i140 = select i1 %.not1.i139, float %340, float %339, !dbg !29
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i141 = icmp eq i32 %341, 0, !dbg !29
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i140, float %337, float 0x3FC10B2820000000) #4, !dbg !29
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i140, float %337, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i142 = select i1 %.not2.i141, float %343, float %342, !dbg !29
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i143 = icmp eq i32 %344, 0, !dbg !29
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i142, float %337, float 0xBFD5553DA0000000) #4, !dbg !29
  %346 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i142, float %337, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i144 = select i1 %.not3.i143, float %346, float %345, !dbg !29
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i145 = icmp eq i32 %347, 0, !dbg !29
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i144, float %337, float 0.000000e+00) #4, !dbg !29
  %349 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i144, float %337, float 0.000000e+00) #4, !dbg !29
  %.04.i146 = select i1 %.not4.i145, float %349, float %348, !dbg !29
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i147 = icmp eq i32 %350, 0, !dbg !29
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i146, float %88, float %88) #4, !dbg !29
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i146, float %88, float %88) #4, !dbg !29
  %.02.i148 = select i1 %.not5.i147, float %352, float %351, !dbg !29
  br label %__nv_tanhf.exit149, !dbg !29

__nv_tanhf.exit149:                               ; preds = %__internal_fmad.exit1.i133, %__internal_fmad.exit3.i138
  %s.1.i137 = phi float [ %336, %__internal_fmad.exit1.i133 ], [ %.02.i148, %__internal_fmad.exit3.i138 ], !dbg !29
  %353 = lshr i32 %8, 4, !dbg !31
  %354 = and i32 %353, 7, !dbg !31
  %355 = or disjoint i32 %354, %18, !dbg !17
  %356 = or disjoint i32 %355, 8, !dbg !17
  %357 = icmp slt i32 %356, 6144, !dbg !18
  %358 = and i32 %11, 60, !dbg !12
  %359 = or disjoint i32 %7, %358, !dbg !13
  %360 = icmp slt i32 %359, 64, !dbg !14
  %361 = and i1 %360, %357, !dbg !22
  %362 = icmp slt i32 %355, 6144, !dbg !18
  %363 = and i1 %360, %362, !dbg !22
  %.frozen = freeze i32 %359, !dbg !32
  %364 = sdiv i32 %.frozen, 16, !dbg !32
  %365 = mul i32 %364, 16, !dbg !33
  %.decomposed = sub i32 %.frozen, %365, !dbg !33
  %366 = fmul float %36, 5.000000e-01, !dbg !34
  %367 = fmul float %37, 5.000000e-01, !dbg !34
  %368 = fmul float %38, 5.000000e-01, !dbg !34
  %369 = fmul float %39, 5.000000e-01, !dbg !34
  %370 = fmul float %45, 5.000000e-01, !dbg !34
  %371 = fmul float %46, 5.000000e-01, !dbg !34
  %372 = fmul float %47, 5.000000e-01, !dbg !34
  %373 = fmul float %48, 5.000000e-01, !dbg !34
  %374 = fadd float %s.1.i, 1.000000e+00, !dbg !35
  %375 = fadd float %s.1.i23, 1.000000e+00, !dbg !35
  %376 = fadd float %s.1.i42, 1.000000e+00, !dbg !35
  %377 = fadd float %s.1.i61, 1.000000e+00, !dbg !35
  %378 = fadd float %s.1.i80, 1.000000e+00, !dbg !35
  %379 = fadd float %s.1.i99, 1.000000e+00, !dbg !35
  %380 = fadd float %s.1.i118, 1.000000e+00, !dbg !35
  %381 = fadd float %s.1.i137, 1.000000e+00, !dbg !35
  %382 = fmul float %366, %374, !dbg !36
  %383 = fmul float %367, %375, !dbg !36
  %384 = fmul float %368, %376, !dbg !36
  %385 = fmul float %369, %377, !dbg !36
  %386 = fmul float %370, %378, !dbg !36
  %387 = fmul float %371, %379, !dbg !36
  %388 = fmul float %372, %380, !dbg !36
  %389 = fmul float %373, %381, !dbg !36
  %390 = shl i32 %355, 4, !dbg !37
  %391 = shl i32 %356, 4, !dbg !37
  %392 = mul i32 %364, 98304, !dbg !38
  %393 = add i32 %392, %.decomposed, !dbg !39
  %394 = add i32 %393, %390, !dbg !40
  %395 = add i32 %393, %391, !dbg !40
  %396 = sext i32 %394 to i64, !dbg !41
  %397 = getelementptr float, ptr addrspace(1) %1, i64 %396, !dbg !41
  %398 = sext i32 %395 to i64, !dbg !41
  %399 = getelementptr float, ptr addrspace(1) %1, i64 %398, !dbg !41
  %400 = shl i32 %8, 8, !dbg !42
  %401 = and i32 %400, 768, !dbg !42
  %402 = or disjoint i32 %401, %10, !dbg !42
  %403 = and i32 %11, 508, !dbg !42
  %404 = lshr exact i32 %401, 2, !dbg !42
  %405 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %404, !dbg !42
  %406 = getelementptr float, ptr addrspace(3) %405, i32 %402, !dbg !42
  %407 = bitcast float %s.1.i to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %406, <1 x i32> %407, i1 true) #4, !dbg !42
  %408 = or disjoint i32 %402, 64, !dbg !42
  %409 = lshr i32 %408, 4, !dbg !42
  %410 = and i32 %409, 52, !dbg !42
  %411 = getelementptr float, ptr addrspace(3) @global_smem, i32 %410, !dbg !42
  %412 = getelementptr float, ptr addrspace(3) %411, i32 %408, !dbg !42
  %413 = bitcast float %s.1.i23 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %412, <1 x i32> %413, i1 true) #4, !dbg !42
  %414 = or disjoint i32 %402, 128, !dbg !42
  %415 = lshr i32 %414, 4, !dbg !42
  %416 = and i32 %415, 56, !dbg !42
  %417 = getelementptr float, ptr addrspace(3) @global_smem, i32 %416, !dbg !42
  %418 = getelementptr float, ptr addrspace(3) %417, i32 %414, !dbg !42
  %419 = bitcast float %s.1.i42 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %418, <1 x i32> %419, i1 true) #4, !dbg !42
  %420 = or disjoint i32 %402, 192, !dbg !42
  %421 = lshr i32 %420, 4, !dbg !42
  %422 = and i32 %421, 60, !dbg !42
  %423 = getelementptr float, ptr addrspace(3) @global_smem, i32 %422, !dbg !42
  %424 = getelementptr float, ptr addrspace(3) %423, i32 %420, !dbg !42
  %425 = bitcast float %s.1.i61 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %424, <1 x i32> %425, i1 true) #4, !dbg !42
  %426 = or disjoint i32 %402, 32, !dbg !42
  %427 = getelementptr float, ptr addrspace(3) %405, i32 %426, !dbg !42
  %428 = bitcast float %s.1.i80 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %427, <1 x i32> %428, i1 true) #4, !dbg !42
  %429 = or disjoint i32 %402, 96, !dbg !42
  %430 = lshr i32 %429, 4, !dbg !42
  %431 = and i32 %430, 52, !dbg !42
  %432 = getelementptr float, ptr addrspace(3) @global_smem, i32 %431, !dbg !42
  %433 = getelementptr float, ptr addrspace(3) %432, i32 %429, !dbg !42
  %434 = bitcast float %s.1.i99 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %433, <1 x i32> %434, i1 true) #4, !dbg !42
  %435 = or disjoint i32 %402, 160, !dbg !42
  %436 = lshr i32 %435, 4, !dbg !42
  %437 = and i32 %436, 56, !dbg !42
  %438 = getelementptr float, ptr addrspace(3) @global_smem, i32 %437, !dbg !42
  %439 = getelementptr float, ptr addrspace(3) %438, i32 %435, !dbg !42
  %440 = bitcast float %s.1.i118 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %439, <1 x i32> %440, i1 true) #4, !dbg !42
  %441 = or disjoint i32 %402, 224, !dbg !42
  %442 = lshr i32 %441, 4, !dbg !42
  %443 = and i32 %442, 60, !dbg !42
  %444 = getelementptr float, ptr addrspace(3) @global_smem, i32 %443, !dbg !42
  %445 = getelementptr float, ptr addrspace(3) %444, i32 %441, !dbg !42
  %446 = bitcast float %s.1.i137 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %445, <1 x i32> %446, i1 true) #4, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %447 = lshr i32 %11, 4, !dbg !42
  %448 = and i32 %447, 28, !dbg !42
  %449 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %448, !dbg !42
  %450 = getelementptr inbounds float, ptr addrspace(3) %449, i32 %403, !dbg !42
  %451 = or disjoint i32 %403, 512, !dbg !42
  %452 = lshr i32 %451, 4, !dbg !42
  %453 = and i32 %452, 60, !dbg !42
  %454 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %453, !dbg !42
  %455 = getelementptr inbounds float, ptr addrspace(3) %454, i32 %451, !dbg !42
  %456 = load <4 x i32>, ptr addrspace(3) %455, align 16, !dbg !42
  %.extract = load i32, ptr addrspace(3) %450, align 16, !dbg !42
  %457 = getelementptr inbounds i8, ptr addrspace(3) %450, i32 4, !dbg !42
  %.extract10 = load i32, ptr addrspace(3) %457, align 4, !dbg !42
  %458 = getelementptr inbounds i8, ptr addrspace(3) %450, i32 8, !dbg !42
  %.extract11 = load i32, ptr addrspace(3) %458, align 8, !dbg !42
  %459 = getelementptr inbounds i8, ptr addrspace(3) %450, i32 12, !dbg !42
  %.extract12 = load i32, ptr addrspace(3) %459, align 4, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract10, i32 %.extract11, i32 %.extract12, ptr addrspace(1) %397, i1 %363) #4, !dbg !42
  %.extract13 = extractelement <4 x i32> %456, i64 0, !dbg !42
  %.extract14 = extractelement <4 x i32> %456, i64 1, !dbg !42
  %.extract15 = extractelement <4 x i32> %456, i64 2, !dbg !42
  %.extract16 = extractelement <4 x i32> %456, i64 3, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract13, i32 %.extract14, i32 %.extract15, i32 %.extract16, ptr addrspace(1) %399, i1 %361) #4, !dbg !42
  %460 = getelementptr float, ptr addrspace(1) %2, i64 %25, !dbg !43
  %461 = getelementptr float, ptr addrspace(1) %2, i64 %27, !dbg !43
  %462 = bitcast float %382 to i32, !dbg !44
  %463 = bitcast float %383 to i32, !dbg !44
  %464 = bitcast float %384 to i32, !dbg !44
  %465 = bitcast float %385 to i32, !dbg !44
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %462, i32 %463, i32 %464, i32 %465, ptr addrspace(1) %460, i1 %29) #4, !dbg !44
  %466 = bitcast float %386 to i32, !dbg !44
  %467 = bitcast float %387 to i32, !dbg !44
  %468 = bitcast float %388 to i32, !dbg !44
  %469 = bitcast float %389 to i32, !dbg !44
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %466, i32 %467, i32 %468, i32 %469, ptr addrspace(1) %461, i1 %30) #4, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmo7ewbf3ilidoxct7ojptiysuxbkee2ym6mwqyp5tkdo74l6j7k.py", directory: "inductor_cache/mo")
!4 = !{ptr @triton_poi_fused_add_mul_pow_sqrt_tanh_9, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_pow_sqrt_tanh_9, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_pow_sqrt_tanh_9", linkageName: "triton_poi_fused_add_mul_pow_sqrt_tanh_9", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 32, column: 40, scope: !7)
!20 = !DILocation(line: 32, column: 35, scope: !7)
!21 = !DILocation(line: 32, column: 30, scope: !7)
!22 = !DILocation(line: 32, column: 53, scope: !7)
!23 = !DILocation(line: 32, column: 45, scope: !7)
!24 = !DILocation(line: 33, column: 18, scope: !7)
!25 = !DILocation(line: 34, column: 18, scope: !7)
!26 = !DILocation(line: 36, column: 18, scope: !7)
!27 = !DILocation(line: 37, column: 18, scope: !7)
!28 = !DILocation(line: 39, column: 18, scope: !7)
!29 = !DILocation(line: 40, column: 26, scope: !7)
!30 = !{i32 21046}
!31 = !DILocation(line: 26, column: 44, scope: !7)
!32 = !DILocation(line: 31, column: 19, scope: !7)
!33 = !DILocation(line: 30, column: 19, scope: !7)
!34 = !DILocation(line: 42, column: 19, scope: !7)
!35 = !DILocation(line: 44, column: 19, scope: !7)
!36 = !DILocation(line: 45, column: 20, scope: !7)
!37 = !DILocation(line: 46, column: 33, scope: !7)
!38 = !DILocation(line: 46, column: 44, scope: !7)
!39 = !DILocation(line: 46, column: 30, scope: !7)
!40 = !DILocation(line: 46, column: 38, scope: !7)
!41 = !DILocation(line: 46, column: 25, scope: !7)
!42 = !DILocation(line: 46, column: 55, scope: !7)
!43 = !DILocation(line: 47, column: 25, scope: !7)
!44 = !DILocation(line: 47, column: 47, scope: !7)
!45 = !DILocation(line: 47, column: 4, scope: !7)
