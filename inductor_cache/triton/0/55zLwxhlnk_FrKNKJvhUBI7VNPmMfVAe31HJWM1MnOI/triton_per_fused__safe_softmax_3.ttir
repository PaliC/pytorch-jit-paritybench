#loc = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":34:37)
#loc26 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":39:25)
#loc35 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":47:38)
#loc44 = loc(callsite(#loc1 at #loc16))
#loc50 = loc(callsite(#loc1 at #loc26))
#loc53 = loc(callsite(#loc1 at #loc35))
module {
  tt.func public @triton_per_fused__safe_softmax_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":19:0), %arg1: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<32x16xi64> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<32x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<32x16xi32> loc(#loc1)
    %cst_2 = arith.constant dense<0xFF800000> : tensor<32x16xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<32x16xf32> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<32x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<256> : tensor<32x1xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<32x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_5 : tensor<32x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc9)
    %9 = arith.muli %5, %cst_4 : tensor<32x1xi32> loc(#loc10)
    %10 = tt.broadcast %8 : tensor<1x16xi32> -> tensor<32x16xi32> loc(#loc11)
    %11 = tt.broadcast %9 : tensor<32x1xi32> -> tensor<32x16xi32> loc(#loc11)
    %12 = arith.addi %10, %11 : tensor<32x16xi32> loc(#loc11)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x16x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %13, %12 : tensor<32x16x!tt.ptr<f32>>, tensor<32x16xi32> loc(#loc12)
    %15 = tt.broadcast %6 : tensor<32x1xi1> -> tensor<32x16xi1> loc(#loc13)
    %16 = tt.load %14, %15, %cst_3 : tensor<32x16x!tt.ptr<f32>> loc(#loc13)
    %17 = arith.select %15, %16, %cst_2 : tensor<32x16xi1>, tensor<32x16xf32> loc(#loc14)
    %18 = "tt.reduce"(%17) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc16)), %arg4: f32 loc(callsite(#loc1 at #loc16))):
      %40 = arith.cmpf ogt, %arg3, %arg4 : f32 loc(#loc55)
      %41 = arith.cmpf une, %arg3, %arg3 : f32 loc(#loc56)
      %42 = arith.ori %40, %41 : i1 loc(#loc57)
      %43 = arith.select %42, %arg3, %arg4 : f32 loc(#loc58)
      tt.reduce.return %43 : f32 loc(#loc43)
    }) : (tensor<32x16xf32>) -> tensor<32xf32> loc(#loc43)
    %19 = tt.expand_dims %18 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc21)
    %20 = tt.broadcast %19 : tensor<32x1xf32> -> tensor<32x16xf32> loc(#loc22)
    %21 = arith.subf %16, %20 : tensor<32x16xf32> loc(#loc22)
    %22 = math.exp %21 : tensor<32x16xf32> loc(#loc23)
    %23 = arith.select %15, %22, %cst_3 : tensor<32x16xi1>, tensor<32x16xf32> loc(#loc24)
    %24 = "tt.reduce"(%23) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc26)), %arg4: f32 loc(callsite(#loc1 at #loc26))):
      %40 = arith.addf %arg3, %arg4 : f32 loc(#loc59)
      tt.reduce.return %40 : f32 loc(#loc49)
    }) : (tensor<32x16xf32>) -> tensor<32xf32> loc(#loc49)
    %25 = tt.expand_dims %24 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc28)
    %26 = arith.cmpf oeq, %16, %cst_2 : tensor<32x16xf32> loc(#loc29)
    %27 = arith.extui %26 : tensor<32x16xi1> to tensor<32x16xi32> loc(#loc30)
    %28 = arith.cmpi eq, %27, %cst_1 : tensor<32x16xi32> loc(#loc30)
    %29 = arith.extui %28 : tensor<32x16xi1> to tensor<32x16xi64> loc(#loc31)
    %30 = arith.cmpi ne, %29, %cst : tensor<32x16xi64> loc(#loc32)
    %31 = arith.extui %30 : tensor<32x16xi1> to tensor<32x16xi32> loc(#loc33)
    %32 = arith.select %15, %31, %cst_1 : tensor<32x16xi1>, tensor<32x16xi32> loc(#loc33)
    %33 = "tt.reduce"(%32) <{axis = 1 : i32}> ({
    ^bb0(%arg3: i32 loc(callsite(#loc1 at #loc35)), %arg4: i32 loc(callsite(#loc1 at #loc35))):
      %40 = arith.ori %arg3, %arg4 : i32 loc(#loc60)
      tt.reduce.return %40 : i32 loc(#loc52)
    }) : (tensor<32x16xi32>) -> tensor<32xi32> loc(#loc52)
    %34 = tt.expand_dims %33 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc37)
    %35 = arith.cmpi eq, %34, %cst_0 : tensor<32x1xi32> loc(#loc38)
    %36 = tt.broadcast %25 : tensor<32x1xf32> -> tensor<32x16xf32> loc(#loc39)
    %37 = arith.divf %22, %36 : tensor<32x16xf32> loc(#loc39)
    %38 = tt.broadcast %35 : tensor<32x1xi1> -> tensor<32x16xi1> loc(#loc40)
    %39 = arith.select %38, %cst_3, %37 : tensor<32x16xi1>, tensor<32x16xf32> loc(#loc40)
    tt.store %14, %39, %15 : tensor<32x16x!tt.ptr<f32>> loc(#loc41)
    tt.return loc(#loc42)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":23:28)
#loc3 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":23:33)
#loc4 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":24:36)
#loc5 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":24:44)
#loc6 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":24:23)
#loc7 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":25:21)
#loc8 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":26:26)
#loc9 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":26:34)
#loc10 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":31:42)
#loc11 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":31:39)
#loc12 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":31:34)
#loc13 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":31:47)
#loc14 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":33:33)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc21 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":34:40)
#loc22 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":35:18)
#loc23 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":36:23)
#loc24 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":38:33)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc28 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":39:28)
#loc29 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":41:20)
#loc30 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":42:21)
#loc31 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":43:21)
#loc32 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":44:22)
#loc33 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":46:35)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":232:29)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":227:15)
#loc37 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":47:41)
#loc38 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":48:21)
#loc39 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":49:19)
#loc40 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":51:35)
#loc41 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":52:48)
#loc42 = loc("inductor_cache/4v/c4vuc7wa46amuu4dvt45eeos44z7bc6b6n7apnghpv5hcgse7utj.py":52:4)
#loc43 = loc(callsite(#loc15 at #loc16))
#loc45 = loc(callsite(#loc17 at #loc15))
#loc46 = loc(callsite(#loc18 at #loc15))
#loc47 = loc(callsite(#loc19 at #loc15))
#loc48 = loc(callsite(#loc20 at #loc15))
#loc49 = loc(callsite(#loc25 at #loc26))
#loc51 = loc(callsite(#loc27 at #loc25))
#loc52 = loc(callsite(#loc34 at #loc35))
#loc54 = loc(callsite(#loc36 at #loc34))
#loc55 = loc(callsite(#loc45 at #loc16))
#loc56 = loc(callsite(#loc46 at #loc16))
#loc57 = loc(callsite(#loc47 at #loc16))
#loc58 = loc(callsite(#loc48 at #loc16))
#loc59 = loc(callsite(#loc51 at #loc26))
#loc60 = loc(callsite(#loc54 at #loc35))
