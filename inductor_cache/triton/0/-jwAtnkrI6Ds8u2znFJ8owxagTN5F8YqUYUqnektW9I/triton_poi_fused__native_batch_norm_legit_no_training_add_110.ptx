//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_110 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_110
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_110
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_110(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<26>;
	.reg .f32 	%f<15>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd8, [triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_1];
$L__tmp0:
	.loc	1 21 28                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:21:33
	shl.b32 	%r13, %r1, 7;
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_2];
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_3];
	.loc	1 22 36                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:22:36
	mov.u32 	%r14, %tid.x;
	and.b32  	%r15, %r14, 127;
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_4];
	.loc	1 22 23                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:22:23
	or.b32  	%r16, %r13, %r15;
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_5];
	.loc	1 23 21                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:23:21
	setp.lt.s32 	%p1, %r16, 2960;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_add_110_param_6];
	.loc	1 26 19                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:26:19
	mul.hi.s32 	%r18, %r16, -1323314247;
	mad.lo.s32 	%r19, %r16, 1, %r18;
	shr.u32 	%r20, %r19, 31;
	shr.s32 	%r21, %r19, 7;
	add.s32 	%r22, %r21, %r20;
	.loc	1 25 19                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:25:19
	mul.lo.s32 	%r23, %r22, 185;
	sub.s32 	%r24, %r16, %r23;
	.loc	1 27 30                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:27:30
	mul.wide.s32 	%rd15, %r16, 4;
	add.s64 	%rd1, %rd9, %rd15;
	.loc	1 27 35                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:27:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 28 30                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:28:30
	mul.wide.s32 	%rd16, %r24, 4;
	add.s64 	%rd2, %rd10, %rd16;
	.loc	1 28 35                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:28:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 29 30                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:29:30
	add.s64 	%rd3, %rd11, %rd16;
	.loc	1 29 35                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:29:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r4;
	.loc	1 30 31                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:30:31
	add.s64 	%rd4, %rd12, %rd16;
	.loc	1 30 36                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:30:36
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 31 31                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:31:31
	add.s64 	%rd5, %rd13, %rd16;
	.loc	1 31 36                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:31:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 18                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:34:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 35 26                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:35:26
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 27 35                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:27:35
	mov.b32 	%f4, %r2;
	.loc	1 28 35                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:28:35
	mov.b32 	%f5, %r3;
	.loc	1 32 18                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:32:18
	sub.f32 	%f6, %f4, %f5;
	.loc	1 31 36                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:31:36
	mov.b32 	%f7, %r6;
	.loc	1 30 36                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:30:36
	mov.b32 	%f8, %r5;
	.loc	1 37 18                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:37:18
	mov.b32 	%r9, %f3;
	mov.b32 	%r8, 1065353216;
	// begin inline asm
	div.full.f32 %r7, %r8, %r9;
	// end inline asm
	mov.b32 	%f9, %r7;
	.loc	1 40 19                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:40:19
	mul.f32 	%f10, %f6, %f9;
	.loc	1 42 20                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:42:20
	fma.rn.f32 	%f11, %f10, %f8, %f7;
	.loc	1 45 20                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:45:20
	setp.lt.s32 	%p9, %r24, 174;
	.loc	1 46 36                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:46:36
	mad.lo.s32 	%r25, %r22, 174, %r24;
	.loc	1 46 31                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:46:31
	mul.wide.s32 	%rd17, %r25, 4;
	add.s64 	%rd6, %rd14, %rd17;
	.loc	1 46 53                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:46:53
	and.pred  	%p6, %p1, %p9;
	mov.b32 	%r11, 0;
	.loc	1 46 45                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:46:45
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p6 ld.global.b32 { %r10 }, [ %rd6 + 0 ];
	@!%p6 mov.u32 %r10, %r11;
	// end inline asm
	mov.b32 	%f12, %r10;
	.loc	1 47 20                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:47:20
	add.f32 	%f13, %f11, %f12;
	.loc	1 0 0                           // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:0:0
	selp.f32 	%f14, %f13, %f11, %p9;
	.loc	1 51 28                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:51:28
	add.s64 	%rd7, %rd8, %rd15;
	.loc	1 51 40                         // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:51:40
	mov.b32 	%r12, %f14;
	// begin inline asm
	@%p1 st.global.b32 [ %rd7 + 0 ], { %r12 };
	// end inline asm
	.loc	1 51 4                          // c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py:51:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6x/c6xjgbnpjw34b7hws2uloww3sismoz6mmxxmvlt5wm3dvzt2dwm2.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 120
.b8 106
.b8 103
.b8 98
.b8 110
.b8 112
.b8 106
.b8 119
.b8 51
.b8 52
.b8 98
.b8 55
.b8 104
.b8 119
.b8 115
.b8 50
.b8 117
.b8 108
.b8 111
.b8 119
.b8 119
.b8 51
.b8 115
.b8 105
.b8 115
.b8 109
.b8 111
.b8 122
.b8 54
.b8 109
.b8 109
.b8 120
.b8 120
.b8 109
.b8 118
.b8 108
.b8 116
.b8 53
.b8 119
.b8 109
.b8 51
.b8 100
.b8 118
.b8 122
.b8 116
.b8 50
.b8 100
.b8 119
.b8 109
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 120
.b8 0
	}
	.section	.debug_macinfo	{	}
