//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_add_mul_sub_sum_32 // -- Begin function triton_red_fused_add_mul_sub_sum_32
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_add_mul_sub_sum_32
.visible .entry triton_red_fused_add_mul_sub_sum_32(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_sub_sum_32_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_sub_sum_32_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_sub_sum_32_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_sub_sum_32_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_sub_sum_32_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_sub_sum_32_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_sub_sum_32_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_sub_sum_32_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_sub_sum_32_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_sub_sum_32_param_9,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_sub_sum_32_param_10,
	.param .u32 triton_red_fused_add_mul_sub_sum_32_param_11,
	.param .u32 triton_red_fused_add_mul_sub_sum_32_param_12
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<65>;
	.reg .b32 	%r<151>;
	.reg .f32 	%f<180>;
	.reg .b64 	%rd<53>;
	.loc	1 19 0                          // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:19:0

// %bb.0:
	ld.param.u64 	%rd30, [triton_red_fused_add_mul_sub_sum_32_param_10];
	ld.param.u64 	%rd29, [triton_red_fused_add_mul_sub_sum_32_param_9];
	ld.param.u64 	%rd28, [triton_red_fused_add_mul_sub_sum_32_param_8];
	ld.param.u64 	%rd51, [triton_red_fused_add_mul_sub_sum_32_param_7];
	ld.param.u64 	%rd50, [triton_red_fused_add_mul_sub_sum_32_param_6];
	ld.param.u64 	%rd49, [triton_red_fused_add_mul_sub_sum_32_param_5];
	ld.param.u64 	%rd48, [triton_red_fused_add_mul_sub_sum_32_param_4];
	ld.param.u64 	%rd47, [triton_red_fused_add_mul_sub_sum_32_param_3];
	ld.param.u64 	%rd46, [triton_red_fused_add_mul_sub_sum_32_param_2];
	ld.param.u64 	%rd45, [triton_red_fused_add_mul_sub_sum_32_param_1];
	ld.param.u64 	%rd44, [triton_red_fused_add_mul_sub_sum_32_param_0];
$L__tmp0:
	.loc	1 22 28                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:22:28
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:24:21
	setp.lt.s32 	%p9, %r3, 32;
	.loc	1 25 33                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:25:33
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r4, %r2, 2;
	and.b32  	%r5, %r4, 2044;
	.loc	1 34 44                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:34:44
	shl.b32 	%r6, %r3, 13;
	.loc	1 30 36                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:30:36
	or.b32  	%r7, %r6, %r5;
	mul.wide.s32 	%rd1, %r7, 4;
	mov.f32 	%f168, 0f00000000;
	mov.u64 	%rd52, -2048;
	mov.b32 	%r12, 0;
	mov.f32 	%f169, %f168;
	mov.f32 	%f170, %f168;
	mov.f32 	%f171, %f168;
	mov.f32 	%f172, %f168;
	mov.f32 	%f173, %f168;
	mov.f32 	%f174, %f168;
	mov.f32 	%f175, %f168;
	mov.f32 	%f176, %f168;
	mov.f32 	%f177, %f168;
	mov.f32 	%f178, %f168;
	mov.f32 	%f179, %f168;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 34 49                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:34:49
	add.s64 	%rd32, %rd44, %rd1;
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p9 ld.global.L1::evict_first.v4.b32 { %r8, %r9, %r10, %r11 }, [ %rd32 + 0 ];
	@!%p9 mov.u32 %r8, %r12;
	@!%p9 mov.u32 %r9, %r12;
	@!%p9 mov.u32 %r10, %r12;
	@!%p9 mov.u32 %r11, %r12;
	// end inline asm
	.loc	1 35 49                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:35:49
	add.s64 	%rd33, %rd45, %rd1;
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p9 ld.global.L1::evict_first.v4.b32 { %r16, %r17, %r18, %r19 }, [ %rd33 + 0 ];
	@!%p9 mov.u32 %r16, %r12;
	@!%p9 mov.u32 %r17, %r12;
	@!%p9 mov.u32 %r18, %r12;
	@!%p9 mov.u32 %r19, %r12;
	// end inline asm
	.loc	1 36 49                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:36:49
	add.s64 	%rd34, %rd46, %rd1;
	// begin inline asm
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p9 ld.global.L1::evict_first.v4.b32 { %r24, %r25, %r26, %r27 }, [ %rd34 + 0 ];
	@!%p9 mov.u32 %r24, %r12;
	@!%p9 mov.u32 %r25, %r12;
	@!%p9 mov.u32 %r26, %r12;
	@!%p9 mov.u32 %r27, %r12;
	// end inline asm
	.loc	1 37 49                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:37:49
	add.s64 	%rd35, %rd47, %rd1;
	// begin inline asm
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	@%p9 ld.global.L1::evict_first.v4.b32 { %r32, %r33, %r34, %r35 }, [ %rd35 + 0 ];
	@!%p9 mov.u32 %r32, %r12;
	@!%p9 mov.u32 %r33, %r12;
	@!%p9 mov.u32 %r34, %r12;
	@!%p9 mov.u32 %r35, %r12;
	// end inline asm
	.loc	1 38 50                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:38:50
	add.s64 	%rd36, %rd48, %rd1;
	// begin inline asm
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	@%p9 ld.global.L1::evict_first.v4.b32 { %r40, %r41, %r42, %r43 }, [ %rd36 + 0 ];
	@!%p9 mov.u32 %r40, %r12;
	@!%p9 mov.u32 %r41, %r12;
	@!%p9 mov.u32 %r42, %r12;
	@!%p9 mov.u32 %r43, %r12;
	// end inline asm
	.loc	1 39 50                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:39:50
	add.s64 	%rd37, %rd49, %rd1;
	// begin inline asm
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	@%p9 ld.global.L1::evict_first.v4.b32 { %r48, %r49, %r50, %r51 }, [ %rd37 + 0 ];
	@!%p9 mov.u32 %r48, %r12;
	@!%p9 mov.u32 %r49, %r12;
	@!%p9 mov.u32 %r50, %r12;
	@!%p9 mov.u32 %r51, %r12;
	// end inline asm
	.loc	1 40 50                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:40:50
	add.s64 	%rd38, %rd50, %rd1;
	// begin inline asm
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	@%p9 ld.global.L1::evict_first.v4.b32 { %r56, %r57, %r58, %r59 }, [ %rd38 + 0 ];
	@!%p9 mov.u32 %r56, %r12;
	@!%p9 mov.u32 %r57, %r12;
	@!%p9 mov.u32 %r58, %r12;
	@!%p9 mov.u32 %r59, %r12;
	// end inline asm
	.loc	1 41 50                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:41:50
	add.s64 	%rd39, %rd51, %rd1;
	// begin inline asm
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	mov.u32 %r66, 0x0;
	mov.u32 %r67, 0x0;
	@%p9 ld.global.L1::evict_first.v4.b32 { %r64, %r65, %r66, %r67 }, [ %rd39 + 0 ];
	@!%p9 mov.u32 %r64, %r12;
	@!%p9 mov.u32 %r65, %r12;
	@!%p9 mov.u32 %r66, %r12;
	@!%p9 mov.u32 %r67, %r12;
	// end inline asm
	.loc	1 38 50                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:38:50
	mov.b32 	%f34, %r40;
	mov.b32 	%f35, %r8;
	mov.b32 	%f36, %r41;
	mov.b32 	%f37, %r9;
	mov.b32 	%f38, %r42;
	mov.b32 	%f39, %r10;
	mov.b32 	%f40, %r43;
	mov.b32 	%f41, %r11;
	.loc	1 39 50                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:39:50
	mov.b32 	%f42, %r48;
	mov.b32 	%f43, %r16;
	mov.b32 	%f44, %r49;
	mov.b32 	%f45, %r17;
	mov.b32 	%f46, %r50;
	mov.b32 	%f47, %r18;
	mov.b32 	%f48, %r51;
	mov.b32 	%f49, %r19;
	.loc	1 40 50                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:40:50
	mov.b32 	%f50, %r27;
	mov.b32 	%f51, %r59;
	mov.b32 	%f52, %r26;
	mov.b32 	%f53, %r58;
	mov.b32 	%f54, %r25;
	mov.b32 	%f55, %r57;
	mov.b32 	%f56, %r24;
	mov.b32 	%f57, %r56;
	.loc	1 41 50                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:41:50
	mov.b32 	%f58, %r64;
	mov.b32 	%f59, %r32;
	mov.b32 	%f60, %r65;
	mov.b32 	%f61, %r33;
	mov.b32 	%f62, %r66;
	mov.b32 	%f63, %r34;
	mov.b32 	%f64, %r67;
	mov.b32 	%f65, %r35;
	.loc	1 51 24                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:51:24
	fma.rn.f32 	%f66, %f49, 0fBB800000, %f41;
	fma.rn.f32 	%f67, %f48, 0fBB800000, %f40;
	fma.rn.f32 	%f68, %f47, 0fBB800000, %f39;
	fma.rn.f32 	%f69, %f46, 0fBB800000, %f38;
	fma.rn.f32 	%f70, %f45, 0fBB800000, %f37;
	fma.rn.f32 	%f71, %f44, 0fBB800000, %f36;
	fma.rn.f32 	%f72, %f43, 0fBB800000, %f35;
	fma.rn.f32 	%f73, %f42, 0fBB800000, %f34;
	.loc	1 53 24                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:53:24
	fma.rn.f32 	%f74, %f57, 0fBB800000, %f73;
	fma.rn.f32 	%f75, %f56, 0fBB800000, %f72;
	fma.rn.f32 	%f76, %f55, 0fBB800000, %f71;
	fma.rn.f32 	%f77, %f54, 0fBB800000, %f70;
	fma.rn.f32 	%f78, %f53, 0fBB800000, %f69;
	fma.rn.f32 	%f79, %f52, 0fBB800000, %f68;
	fma.rn.f32 	%f80, %f51, 0fBB800000, %f67;
	fma.rn.f32 	%f81, %f50, 0fBB800000, %f66;
	.loc	1 55 24                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:55:24
	fma.rn.f32 	%f82, %f65, 0f37800000, %f81;
	fma.rn.f32 	%f83, %f64, 0f37800000, %f80;
	fma.rn.f32 	%f84, %f63, 0f37800000, %f79;
	fma.rn.f32 	%f85, %f62, 0f37800000, %f78;
	fma.rn.f32 	%f86, %f61, 0f37800000, %f77;
	fma.rn.f32 	%f87, %f60, 0f37800000, %f76;
	fma.rn.f32 	%f88, %f59, 0f37800000, %f75;
	fma.rn.f32 	%f89, %f58, 0f37800000, %f74;
	.loc	1 58 25                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:58:25
	fma.rn.f32 	%f90, %f88, %f89, %f168;
	fma.rn.f32 	%f91, %f86, %f87, %f169;
	fma.rn.f32 	%f92, %f84, %f85, %f170;
	fma.rn.f32 	%f93, %f82, %f83, %f171;
	.loc	1 59 48                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:59:48
	selp.f32 	%f168, %f90, %f168, %p9;
	selp.f32 	%f169, %f91, %f169, %p9;
	selp.f32 	%f170, %f92, %f170, %p9;
	selp.f32 	%f171, %f93, %f171, %p9;
	.loc	1 66 25                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:66:25
	fma.rn.f32 	%f94, %f89, %f89, %f172;
	fma.rn.f32 	%f95, %f87, %f87, %f173;
	fma.rn.f32 	%f96, %f85, %f85, %f174;
	fma.rn.f32 	%f97, %f83, %f83, %f175;
	fma.rn.f32 	%f98, %f88, %f88, %f176;
	fma.rn.f32 	%f99, %f86, %f86, %f177;
	fma.rn.f32 	%f100, %f84, %f84, %f178;
	fma.rn.f32 	%f101, %f82, %f82, %f179;
	.loc	1 67 48                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:67:48
	selp.f32 	%f179, %f101, %f179, %p9;
	selp.f32 	%f178, %f100, %f178, %p9;
	selp.f32 	%f177, %f99, %f177, %p9;
	selp.f32 	%f176, %f98, %f176, %p9;
	selp.f32 	%f175, %f97, %f175, %p9;
	selp.f32 	%f174, %f96, %f174, %p9;
	selp.f32 	%f173, %f95, %f173, %p9;
	selp.f32 	%f172, %f94, %f172, %p9;
	.loc	1 30 36                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:30:36
	add.s64 	%rd52, %rd52, 2048;
	add.s64 	%rd51, %rd51, 8192;
	add.s64 	%rd50, %rd50, 8192;
	add.s64 	%rd49, %rd49, 8192;
	add.s64 	%rd48, %rd48, 8192;
	add.s64 	%rd47, %rd47, 8192;
	add.s64 	%rd46, %rd46, 8192;
	add.s64 	%rd45, %rd45, 8192;
	add.s64 	%rd44, %rd44, 8192;
	setp.lt.u64 	%p49, %rd52, 6144;
	@%p49 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 25 33                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:25:33
	and.b32  	%r93, %r2, 31;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f102, %f168, %f169;
	add.f32 	%f103, %f170, %f102;
	add.f32 	%f104, %f171, %f103;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f104;
	shfl.sync.bfly.b32	%r95, %r94, 16, 31, -1;
	mov.b32 	%f105, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f106, %f104, %f105;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f106;
	shfl.sync.bfly.b32	%r97, %r96, 8, 31, -1;
	mov.b32 	%f107, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f108, %f106, %f107;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f108;
	shfl.sync.bfly.b32	%r99, %r98, 4, 31, -1;
	mov.b32 	%f109, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f110, %f108, %f109;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f110;
	shfl.sync.bfly.b32	%r101, %r100, 2, 31, -1;
	mov.b32 	%f111, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f112, %f110, %f111;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f112;
	shfl.sync.bfly.b32	%r103, %r102, 1, 31, -1;
	mov.b32 	%f113, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f114, %f112, %f113;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p50, %r93, 0;
	shr.u32 	%r104, %r2, 3;
	and.b32  	%r105, %r104, 60;
	mov.u32 	%r106, global_smem;
	add.s32 	%r72, %r106, %r105;
	mov.b32 	%r73, %f114;
	// begin inline asm
	@%p50 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p51, %r2, 16;
	add.s32 	%r75, %r106, %r4;
	// begin inline asm
	@%p51 ld.shared.b32 %r74, [ %r75 + 0 ];
	// end inline asm
	mov.b32 	%f115, %r74;
	shfl.sync.bfly.b32	%r108, %r74, 8, 31, -1;
	mov.b32 	%f116, %r108;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f117, %f115, %f116;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r109, %f117;
	shfl.sync.bfly.b32	%r110, %r109, 4, 31, -1;
	mov.b32 	%f118, %r110;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f119, %f117, %f118;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r111, %f119;
	shfl.sync.bfly.b32	%r112, %r111, 2, 31, -1;
	mov.b32 	%f120, %r112;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f121, %f119, %f120;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r113, %f121;
	shfl.sync.bfly.b32	%r114, %r113, 1, 31, -1;
	mov.b32 	%f122, %r114;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f123, %f121, %f122;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r115, %r2, 15;
	setp.eq.s32 	%p63, %r115, 0;
	and.pred  	%p52, %p51, %p63;
	mov.b32 	%r77, %f123;
	// begin inline asm
	@%p52 st.shared.b32 [ %r75 + 0 ], %r77;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r90, [global_smem];
$L__tmp2:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f124, %f176, %f177;
	add.f32 	%f125, %f178, %f124;
	add.f32 	%f126, %f179, %f125;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r116, %f126;
	shfl.sync.bfly.b32	%r117, %r116, 16, 31, -1;
	mov.b32 	%f127, %r117;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f128, %f126, %f127;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r118, %f128;
	shfl.sync.bfly.b32	%r119, %r118, 8, 31, -1;
	mov.b32 	%f129, %r119;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f130, %f128, %f129;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r120, %f130;
	shfl.sync.bfly.b32	%r121, %r120, 4, 31, -1;
	mov.b32 	%f131, %r121;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f132, %f130, %f131;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r122, %f132;
	shfl.sync.bfly.b32	%r123, %r122, 2, 31, -1;
	mov.b32 	%f133, %r123;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f134, %f132, %f133;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r124, %f134;
	shfl.sync.bfly.b32	%r125, %r124, 1, 31, -1;
	mov.b32 	%f135, %r125;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f136, %f134, %f135;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f136;
	// begin inline asm
	@%p50 st.shared.b32 [ %r72 + 0 ], %r79;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p51 ld.shared.b32 %r80, [ %r75 + 0 ];
	// end inline asm
	mov.b32 	%f137, %r80;
	shfl.sync.bfly.b32	%r126, %r80, 8, 31, -1;
	mov.b32 	%f138, %r126;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f139, %f137, %f138;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r127, %f139;
	shfl.sync.bfly.b32	%r128, %r127, 4, 31, -1;
	mov.b32 	%f140, %r128;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f141, %f139, %f140;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r129, %f141;
	shfl.sync.bfly.b32	%r130, %r129, 2, 31, -1;
	mov.b32 	%f142, %r130;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f143, %f141, %f142;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r131, %f143;
	shfl.sync.bfly.b32	%r132, %r131, 1, 31, -1;
	mov.b32 	%f144, %r132;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f145, %f143, %f144;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f145;
	// begin inline asm
	@%p52 st.shared.b32 [ %r75 + 0 ], %r83;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r91, [global_smem];
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f146, %f172, %f173;
	add.f32 	%f147, %f174, %f146;
	add.f32 	%f148, %f175, %f147;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r133, %f148;
	shfl.sync.bfly.b32	%r134, %r133, 16, 31, -1;
	mov.b32 	%f149, %r134;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f150, %f148, %f149;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r135, %f150;
	shfl.sync.bfly.b32	%r136, %r135, 8, 31, -1;
	mov.b32 	%f151, %r136;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f152, %f150, %f151;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r137, %f152;
	shfl.sync.bfly.b32	%r138, %r137, 4, 31, -1;
	mov.b32 	%f153, %r138;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f154, %f152, %f153;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r139, %f154;
	shfl.sync.bfly.b32	%r140, %r139, 2, 31, -1;
	mov.b32 	%f155, %r140;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f156, %f154, %f155;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r141, %f156;
	shfl.sync.bfly.b32	%r142, %r141, 1, 31, -1;
	mov.b32 	%f157, %r142;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f158, %f156, %f157;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f158;
	// begin inline asm
	@%p50 st.shared.b32 [ %r72 + 0 ], %r85;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p51 ld.shared.b32 %r86, [ %r75 + 0 ];
	// end inline asm
	mov.b32 	%f159, %r86;
	shfl.sync.bfly.b32	%r143, %r86, 8, 31, -1;
	mov.b32 	%f160, %r143;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f161, %f159, %f160;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r144, %f161;
	shfl.sync.bfly.b32	%r145, %r144, 4, 31, -1;
	mov.b32 	%f162, %r145;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f163, %f161, %f162;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r146, %f163;
	shfl.sync.bfly.b32	%r147, %r146, 2, 31, -1;
	mov.b32 	%f164, %r147;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f165, %f163, %f164;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r148, %f165;
	shfl.sync.bfly.b32	%r149, %r148, 1, 31, -1;
	mov.b32 	%f166, %r149;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f167, %f165, %f166;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f167;
	// begin inline asm
	@%p52 st.shared.b32 [ %r75 + 0 ], %r89;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r92, [global_smem];
$L__tmp4:
	.loc	1 71 25                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:71:25
	mul.wide.s32 	%rd43, %r3, 4;
	add.s64 	%rd40, %rd28, %rd43;
	.loc	1 71 37                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:71:37
	and.b32  	%r150, %r2, 511;
	setp.eq.s32 	%p64, %r150, 0;
	and.pred  	%p59, %p64, %p9;
	// begin inline asm
	@%p59 st.global.b32 [ %rd40 + 0 ], { %r90 };
	// end inline asm
	.loc	1 72 25                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:72:25
	add.s64 	%rd41, %rd29, %rd43;
	.loc	1 72 37                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:72:37
	// begin inline asm
	@%p59 st.global.b32 [ %rd41 + 0 ], { %r91 };
	// end inline asm
	.loc	1 73 25                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:73:25
	add.s64 	%rd42, %rd30, %rd43;
	.loc	1 73 37                         // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:73:37
	// begin inline asm
	@%p59 st.global.b32 [ %rd42 + 0 ], { %r92 };
	// end inline asm
	.loc	1 73 4                          // cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py:73:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ez/cezmhvk5s7xoyhie6dxetwtwoe7cjgjsxcwb2w6er46rg6nvod7x.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 228                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdd DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 122
.b8 109
.b8 104
.b8 118
.b8 107
.b8 53
.b8 115
.b8 55
.b8 120
.b8 111
.b8 121
.b8 104
.b8 105
.b8 101
.b8 54
.b8 100
.b8 120
.b8 101
.b8 116
.b8 119
.b8 116
.b8 119
.b8 111
.b8 101
.b8 55
.b8 99
.b8 106
.b8 103
.b8 106
.b8 115
.b8 120
.b8 99
.b8 119
.b8 98
.b8 50
.b8 119
.b8 54
.b8 101
.b8 114
.b8 52
.b8 54
.b8 114
.b8 103
.b8 54
.b8 110
.b8 118
.b8 111
.b8 100
.b8 55
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 122
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 51
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 68                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 69                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xce:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 70                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
