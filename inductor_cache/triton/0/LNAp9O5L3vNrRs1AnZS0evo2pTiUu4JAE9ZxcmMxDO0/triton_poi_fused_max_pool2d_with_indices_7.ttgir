#blocked = #triton_gpu.blocked<{sizePerThread = [8], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_7(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<0xFF800000> : tensor<1024xf32, #blocked> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<139392> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<139392> : tensor<1024xi32, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<1056> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<33> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<32> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<34848> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<2> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<-1> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<0> : tensor<1024xi64, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<64> : tensor<1024xi64, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<-2080> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<64> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<4096> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<131072> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_18 = arith.constant dense<-2048> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_19 = arith.constant dense<-32> : tensor<1024xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked1> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)
    %5 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked1> loc(#loc5)
    %6 = arith.addi %4, %2 : tensor<1024xi32, #blocked> loc(#loc5)
    %7 = arith.addi %5, %3 : tensor<1024xi32, #blocked1> loc(#loc5)
    %8 = arith.cmpi slt, %6, %cst_4 : tensor<1024xi32, #blocked> loc(#loc6)
    %9 = arith.cmpi slt, %7, %cst_5 : tensor<1024xi32, #blocked1> loc(#loc6)
    %10 = arith.divsi %6, %cst_6 : tensor<1024xi32, #blocked> loc(#loc7)
    %11 = arith.remsi %10, %cst_7 : tensor<1024xi32, #blocked> loc(#loc8)
    %12 = arith.divsi %6, %cst_8 : tensor<1024xi32, #blocked> loc(#loc9)
    %13 = arith.remsi %12, %cst_7 : tensor<1024xi32, #blocked> loc(#loc10)
    %14 = arith.remsi %6, %cst_8 : tensor<1024xi32, #blocked> loc(#loc11)
    %15 = arith.divsi %6, %cst_9 : tensor<1024xi32, #blocked> loc(#loc12)
    %16 = arith.muli %11, %cst_10 : tensor<1024xi32, #blocked> loc(#loc13)
    %17 = arith.addi %16, %cst_11 : tensor<1024xi32, #blocked> loc(#loc14)
    %18 = arith.extsi %17 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc15)
    %19 = arith.cmpi sge, %18, %cst_12 : tensor<1024xi64, #blocked> loc(#loc15)
    %20 = arith.cmpi slt, %18, %cst_13 : tensor<1024xi64, #blocked> loc(#loc16)
    %21 = arith.andi %19, %20 : tensor<1024xi1, #blocked> loc(#loc17)
    %22 = arith.muli %13, %cst_10 : tensor<1024xi32, #blocked> loc(#loc18)
    %23 = arith.addi %22, %cst_11 : tensor<1024xi32, #blocked> loc(#loc19)
    %24 = arith.extsi %23 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc20)
    %25 = arith.cmpi sge, %24, %cst_12 : tensor<1024xi64, #blocked> loc(#loc20)
    %26 = arith.cmpi slt, %24, %cst_13 : tensor<1024xi64, #blocked> loc(#loc21)
    %27 = arith.andi %25, %26 : tensor<1024xi1, #blocked> loc(#loc22)
    %28 = arith.andi %21, %27 : tensor<1024xi1, #blocked> loc(#loc23)
    %29 = arith.addi %14, %cst_14 : tensor<1024xi32, #blocked> loc(#loc24)
    %30 = arith.muli %13, %cst_15 : tensor<1024xi32, #blocked> loc(#loc25)
    %31 = arith.addi %29, %30 : tensor<1024xi32, #blocked> loc(#loc26)
    %32 = arith.muli %11, %cst_16 : tensor<1024xi32, #blocked> loc(#loc27)
    %33 = arith.addi %31, %32 : tensor<1024xi32, #blocked> loc(#loc28)
    %34 = arith.muli %15, %cst_17 : tensor<1024xi32, #blocked> loc(#loc29)
    %35 = arith.addi %33, %34 : tensor<1024xi32, #blocked> loc(#loc30)
    %36 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc31)
    %37 = tt.addptr %36, %35 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc31)
    %38 = arith.andi %28, %8 : tensor<1024xi1, #blocked> loc(#loc32)
    %39 = tt.load %37, %38, %cst_3 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc33)
    %40 = arith.extsi %22 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc34)
    %41 = arith.cmpi sge, %40, %cst_12 : tensor<1024xi64, #blocked> loc(#loc34)
    %42 = arith.cmpi slt, %40, %cst_13 : tensor<1024xi64, #blocked> loc(#loc35)
    %43 = arith.andi %41, %42 : tensor<1024xi1, #blocked> loc(#loc36)
    %44 = arith.andi %21, %43 : tensor<1024xi1, #blocked> loc(#loc37)
    %45 = arith.addi %14, %cst_18 : tensor<1024xi32, #blocked> loc(#loc38)
    %46 = arith.addi %45, %30 : tensor<1024xi32, #blocked> loc(#loc39)
    %47 = arith.addi %46, %32 : tensor<1024xi32, #blocked> loc(#loc40)
    %48 = arith.addi %47, %34 : tensor<1024xi32, #blocked> loc(#loc41)
    %49 = tt.addptr %36, %48 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc42)
    %50 = arith.andi %44, %8 : tensor<1024xi1, #blocked> loc(#loc43)
    %51 = tt.load %49, %50, %cst_3 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc44)
    %52 = arith.cmpf ogt, %51, %39 : tensor<1024xf32, #blocked> loc(#loc78)
    %53 = arith.cmpf une, %51, %51 : tensor<1024xf32, #blocked> loc(#loc79)
    %54 = arith.ori %52, %53 : tensor<1024xi1, #blocked> loc(#loc80)
    %55 = arith.select %54, %51, %39 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc81)
    %56 = arith.extsi %16 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc50)
    %57 = arith.cmpi sge, %56, %cst_12 : tensor<1024xi64, #blocked> loc(#loc50)
    %58 = arith.cmpi slt, %56, %cst_13 : tensor<1024xi64, #blocked> loc(#loc51)
    %59 = arith.andi %57, %58 : tensor<1024xi1, #blocked> loc(#loc52)
    %60 = arith.andi %59, %27 : tensor<1024xi1, #blocked> loc(#loc53)
    %61 = arith.addi %14, %cst_19 : tensor<1024xi32, #blocked> loc(#loc54)
    %62 = arith.addi %61, %30 : tensor<1024xi32, #blocked> loc(#loc55)
    %63 = arith.addi %62, %32 : tensor<1024xi32, #blocked> loc(#loc56)
    %64 = arith.addi %63, %34 : tensor<1024xi32, #blocked> loc(#loc57)
    %65 = tt.addptr %36, %64 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc58)
    %66 = arith.andi %60, %8 : tensor<1024xi1, #blocked> loc(#loc59)
    %67 = tt.load %65, %66, %cst_3 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc60)
    %68 = arith.cmpf ogt, %67, %55 : tensor<1024xf32, #blocked> loc(#loc82)
    %69 = arith.cmpf une, %67, %67 : tensor<1024xf32, #blocked> loc(#loc83)
    %70 = arith.ori %68, %69 : tensor<1024xi1, #blocked> loc(#loc84)
    %71 = arith.select %70, %67, %55 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc85)
    %72 = arith.andi %59, %43 : tensor<1024xi1, #blocked> loc(#loc62)
    %73 = arith.addi %14, %30 : tensor<1024xi32, #blocked> loc(#loc63)
    %74 = arith.addi %73, %32 : tensor<1024xi32, #blocked> loc(#loc64)
    %75 = arith.addi %74, %34 : tensor<1024xi32, #blocked> loc(#loc65)
    %76 = tt.addptr %36, %75 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc66)
    %77 = arith.andi %72, %8 : tensor<1024xi1, #blocked> loc(#loc67)
    %78 = tt.load %76, %77, %cst_3 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc68)
    %79 = arith.cmpf ogt, %78, %71 : tensor<1024xf32, #blocked> loc(#loc86)
    %80 = arith.cmpf une, %78, %78 : tensor<1024xf32, #blocked> loc(#loc87)
    %81 = arith.ori %79, %80 : tensor<1024xi1, #blocked> loc(#loc88)
    %82 = arith.select %81, %78, %71 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc89)
    %83 = arith.select %52, %cst, %cst_0 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc70)
    %84 = arith.select %68, %cst_1, %83 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc71)
    %85 = arith.select %79, %cst_2, %84 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc72)
    %86 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc73)
    %87 = tt.addptr %86, %7 : tensor<1024x!tt.ptr<f32>, #blocked1>, tensor<1024xi32, #blocked1> loc(#loc73)
    %88 = triton_gpu.convert_layout %82 : tensor<1024xf32, #blocked> -> tensor<1024xf32, #blocked1> loc(#loc74)
    tt.store %87, %88, %9 : tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc74)
    %89 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc75)
    %90 = tt.addptr %89, %6 : tensor<1024x!tt.ptr<i8>, #blocked>, tensor<1024xi32, #blocked> loc(#loc75)
    tt.store %90, %85, %8 : tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc76)
    tt.return loc(#loc77)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":21:28)
#loc3 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":21:33)
#loc4 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":22:36)
#loc5 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":22:23)
#loc6 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":23:21)
#loc7 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":24:21)
#loc8 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":24:29)
#loc9 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":25:21)
#loc10 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":25:27)
#loc11 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":26:19)
#loc12 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":27:19)
#loc13 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":29:20)
#loc14 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":29:18)
#loc15 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":31:19)
#loc16 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":33:18)
#loc17 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":34:18)
#loc18 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":35:20)
#loc19 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":35:18)
#loc20 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":36:19)
#loc21 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":37:18)
#loc22 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":38:18)
#loc23 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":39:19)
#loc24 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":40:41)
#loc25 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":40:49)
#loc26 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":40:46)
#loc27 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":40:59)
#loc28 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":40:54)
#loc29 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":40:71)
#loc30 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":40:64)
#loc31 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":40:31)
#loc32 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":40:84)
#loc33 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":40:76)
#loc34 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":42:21)
#loc35 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":43:20)
#loc36 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":44:20)
#loc37 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":45:19)
#loc38 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":46:41)
#loc39 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":46:46)
#loc40 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":46:54)
#loc41 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":46:64)
#loc42 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":46:31)
#loc43 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":46:84)
#loc44 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":46:76)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc46 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":47:42)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc50 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":49:21)
#loc51 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":50:20)
#loc52 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":51:20)
#loc53 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":52:20)
#loc54 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":53:39)
#loc55 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":53:44)
#loc56 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":53:52)
#loc57 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":53:62)
#loc58 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":53:31)
#loc59 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":53:82)
#loc60 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":53:74)
#loc61 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":54:42)
#loc62 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":55:20)
#loc63 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":56:36)
#loc64 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":56:44)
#loc65 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":56:54)
#loc66 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":56:31)
#loc67 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":56:74)
#loc68 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":56:66)
#loc69 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":57:42)
#loc70 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":61:35)
#loc71 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":64:35)
#loc72 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":67:35)
#loc73 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":68:25)
#loc74 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":68:37)
#loc75 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":69:25)
#loc76 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":69:37)
#loc77 = loc("inductor_cache/ih/cihvo7z2n4srl7imj5vnoxbrimhuohwsur5px2jm4tvpi73oh32d.py":69:4)
#loc78 = loc(callsite(#loc45 at #loc46))
#loc79 = loc(callsite(#loc47 at #loc46))
#loc80 = loc(callsite(#loc48 at #loc46))
#loc81 = loc(callsite(#loc49 at #loc46))
#loc82 = loc(callsite(#loc45 at #loc61))
#loc83 = loc(callsite(#loc47 at #loc61))
#loc84 = loc(callsite(#loc48 at #loc61))
#loc85 = loc(callsite(#loc49 at #loc61))
#loc86 = loc(callsite(#loc45 at #loc69))
#loc87 = loc(callsite(#loc47 at #loc69))
#loc88 = loc(callsite(#loc48 at #loc69))
#loc89 = loc(callsite(#loc49 at #loc69))
