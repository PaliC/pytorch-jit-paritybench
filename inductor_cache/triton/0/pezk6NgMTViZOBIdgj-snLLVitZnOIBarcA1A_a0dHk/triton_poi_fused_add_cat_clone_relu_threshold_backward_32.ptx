//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_cat_clone_relu_threshold_backward_32 // -- Begin function triton_poi_fused_add_cat_clone_relu_threshold_backward_32
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_add_cat_clone_relu_threshold_backward_32
.visible .entry triton_poi_fused_add_cat_clone_relu_threshold_backward_32(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_10,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_11,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_12,
	.param .u32 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_13,
	.param .u32 triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_14
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<53>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<150>;
	.reg .f32 	%f<57>;
	.reg .b64 	%rd<37>;
	.loc	1 19 0                          // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd14, [triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_1];
$L__tmp0:
	.loc	1 22 28                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:22:33
	shl.b32 	%r67, %r1, 2;
	ld.param.u64 	%rd16, [triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_2];
	ld.param.u64 	%rd17, [triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_3];
	.loc	1 23 44                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:23:44
	mov.u32 	%r68, %tid.x;
	ld.param.u64 	%rd18, [triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_4];
	bfe.u32 	%r69, %r68, 5, 2;
	ld.param.u64 	%rd19, [triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_5];
	and.b32  	%r70, %r68, 1;
	ld.param.u64 	%rd20, [triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_6];
	shl.b32 	%r71, %r70, 1;
	ld.param.u64 	%rd21, [triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_7];
	.loc	1 23 23                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:23:23
	or.b32  	%r72, %r69, %r67;
	ld.param.u64 	%rd22, [triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_8];
	or.b32  	%r73, %r67, %r71;
	ld.param.u64 	%rd23, [triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_9];
	.loc	1 24 21                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:24:21
	setp.lt.s32 	%p38, %r72, 512;
	ld.param.u64 	%rd24, [triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_10];
	setp.lt.s32 	%p39, %r73, 512;
	ld.param.u64 	%rd25, [triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_11];
	ld.param.u64 	%rd26, [triton_poi_fused_add_cat_clone_relu_threshold_backward_32_param_12];
	.loc	1 25 28                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:25:33
	shl.b32 	%r74, %r2, 6;
	.loc	1 26 44                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:26:44
	shl.b32 	%r75, %r68, 1;
	and.b32  	%r76, %r75, 62;
	shr.u32 	%r77, %r68, 1;
	bfe.u32 	%r78, %r68, 1, 4;
	and.b32  	%r79, %r77, 16;
	and.b32  	%r80, %r77, 32;
	.loc	1 26 23                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:26:23
	or.b32  	%r81, %r74, %r76;
	.loc	1 26 44                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:26:44
	or.b32  	%r82, %r79, %r78;
	or.b32  	%r83, %r82, %r80;
	.loc	1 26 23                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:26:23
	or.b32  	%r84, %r83, %r74;
	.loc	1 27 21                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:27:21
	setp.lt.s32 	%p40, %r81, 64;
	setp.lt.s32 	%p41, %r84, 64;
	.loc	1 30 19                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:30:19
	shr.s32 	%r86, %r73, 31;
	shr.u32 	%r87, %r86, 25;
	add.s32 	%r88, %r73, %r87;
	shr.s32 	%r89, %r88, 7;
	.loc	1 28 19                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:28:19
	and.b32  	%r90, %r88, -128;
	sub.s32 	%r91, %r73, %r90;
	.loc	1 34 40                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:34:40
	shl.b32 	%r92, %r72, 6;
	.loc	1 34 37                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:34:37
	add.s32 	%r93, %r81, %r92;
	.loc	1 34 32                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:34:32
	mul.wide.s32 	%rd27, %r93, 4;
	add.s64 	%rd1, %rd24, %rd27;
	.loc	1 34 53                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:34:53
	and.pred  	%p1, %p38, %p40;
	.loc	1 34 45                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:34:45
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	shl.b32 	%r94, %r68, 3;
	and.b32  	%r95, %r94, 248;
	or.b32  	%r96, %r69, %r95;
	mov.u32 	%r97, global_smem;
	shl.b32 	%r98, %r96, 2;
	shl.b32 	%r99, %r95, 1;
	add.s32 	%r100, %r97, %r99;
	add.s32 	%r5, %r100, %r98;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	add.s32 	%r7, %r5, 24;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r101, %r68, 126;
	shl.b32 	%r102, %r101, 2;
	add.s32 	%r103, %r97, %r102;
	and.b32  	%r104, %r94, 1016;
	add.s32 	%r105, %r103, %r104;
	ld.shared.v2.f32 	{%f1, %f2}, [%r105];
	.loc	1 39 18                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:39:18
	setp.lt.s32 	%p42, %r91, 64;
	.loc	1 40 33                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:40:33
	shl.b32 	%r106, %r84, 6;
	.loc	1 40 43                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:40:43
	shl.b32 	%r107, %r89, 12;
	.loc	1 40 38                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:40:38
	add.s32 	%r108, %r106, %r107;
	.loc	1 40 49                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:40:49
	add.s32 	%r109, %r108, %r91;
	.loc	1 40 30                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:40:30
	mul.wide.s32 	%rd28, %r109, 4;
	add.s64 	%rd2, %rd14, %rd28;
	.loc	1 40 62                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:40:62
	and.pred  	%p43, %p42, %p41;
	.loc	1 40 70                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:40:70
	and.pred  	%p4, %p39, %p43;
	mov.b32 	%r11, 0;
	.loc	1 40 55                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:40:55
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd2 + 0 ];
	@!%p4 mov.u32 %r9, %r11;
	@!%p4 mov.u32 %r10, %r11;
	// end inline asm
	.loc	1 41 30                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:41:30
	mul.wide.s32 	%rd29, %r91, 4;
	add.s64 	%rd3, %rd15, %rd29;
	.loc	1 41 70                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:41:70
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r13, %r14 }, [ %rd3 + 0 ];
	@!%p4 mov.u32 %r13, %r11;
	@!%p4 mov.u32 %r14, %r11;
	// end inline asm
	.loc	1 43 30                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:43:30
	add.s64 	%rd4, %rd16, %rd29;
	.loc	1 43 70                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:43:70
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r17, %r18 }, [ %rd4 + 0 ];
	@!%p4 mov.u32 %r17, %r11;
	@!%p4 mov.u32 %r18, %r11;
	// end inline asm
	mov.b32 	%f3, %r17;
	mov.b32 	%f4, %r18;
	.loc	1 45 19                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:45:19
	add.f32 	%f5, %f3, 0f3727C5AC;
	add.f32 	%f6, %f4, 0f3727C5AC;
	.loc	1 46 27                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:46:27
	sqrt.approx.ftz.f32 	%f7, %f5;
	sqrt.approx.ftz.f32 	%f8, %f6;
	.loc	1 48 20                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:48:20
	mov.b32 	%r23, %f7;
	mov.b32 	%r22, 1065353216;
	// begin inline asm
	div.full.f32 %r21, %r22, %r23;
	// end inline asm
	mov.b32 	%f9, %r21;
	mov.b32 	%r26, %f8;
	// begin inline asm
	div.full.f32 %r24, %r22, %r26;
	// end inline asm
	mov.b32 	%f10, %r24;
	.loc	1 52 31                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:52:31
	add.s64 	%rd5, %rd17, %rd29;
	.loc	1 52 71                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:52:71
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r27, %r28 }, [ %rd5 + 0 ];
	@!%p4 mov.u32 %r27, %r11;
	@!%p4 mov.u32 %r28, %r11;
	// end inline asm
	.loc	1 54 31                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:54:31
	add.s64 	%rd6, %rd18, %rd29;
	.loc	1 54 71                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:54:71
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r31, %r32 }, [ %rd6 + 0 ];
	@!%p4 mov.u32 %r31, %r11;
	@!%p4 mov.u32 %r32, %r11;
	// end inline asm
	.loc	1 60 20                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:60:20
	setp.gt.s32 	%p44, %r91, 63;
	.loc	1 63 50                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:63:50
	add.s32 	%r110, %r109, -64;
	.loc	1 63 31                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:63:31
	mul.wide.s32 	%rd30, %r110, 4;
	add.s64 	%rd7, %rd19, %rd30;
	.loc	1 34 53                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:34:53
	and.pred  	%p37, %p39, %p41;
	.loc	1 63 80                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:63:80
	and.pred  	%p20, %p37, %p44;
	.loc	1 63 64                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:63:64
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	@%p20 ld.global.L1::evict_last.v2.b32 { %r35, %r36 }, [ %rd7 + 0 ];
	@!%p20 mov.u32 %r35, %r11;
	@!%p20 mov.u32 %r36, %r11;
	// end inline asm
	.loc	1 64 31                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:64:31
	add.s64 	%rd31, %rd20, %rd29;
	add.s64 	%rd8, %rd31, -256;
	.loc	1 64 79                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:64:79
	// begin inline asm
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	@%p20 ld.global.L1::evict_last.v2.b32 { %r39, %r40 }, [ %rd8 + 0 ];
	@!%p20 mov.u32 %r39, %r11;
	@!%p20 mov.u32 %r40, %r11;
	// end inline asm
	.loc	1 66 31                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:66:31
	add.s64 	%rd32, %rd21, %rd29;
	add.s64 	%rd9, %rd32, -256;
	.loc	1 66 79                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:66:79
	// begin inline asm
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	@%p20 ld.global.L1::evict_last.v2.b32 { %r43, %r44 }, [ %rd9 + 0 ];
	@!%p20 mov.u32 %r43, %r11;
	@!%p20 mov.u32 %r44, %r11;
	// end inline asm
	mov.b32 	%f11, %r43;
	mov.b32 	%f12, %r44;
	.loc	1 68 20                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:68:20
	add.f32 	%f13, %f11, 0f3727C5AC;
	add.f32 	%f14, %f12, 0f3727C5AC;
	.loc	1 69 27                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:69:27
	sqrt.approx.ftz.f32 	%f15, %f13;
	sqrt.approx.ftz.f32 	%f16, %f14;
	.loc	1 63 64                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:63:64
	mov.b32 	%f17, %r35;
	mov.b32 	%f18, %r36;
	.loc	1 64 79                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:64:79
	mov.b32 	%f19, %r39;
	mov.b32 	%f20, %r40;
	.loc	1 65 20                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:65:20
	sub.f32 	%f21, %f18, %f20;
	sub.f32 	%f22, %f17, %f19;
	.loc	1 40 55                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:40:55
	mov.b32 	%f23, %r9;
	mov.b32 	%f24, %r10;
	.loc	1 41 70                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:41:70
	mov.b32 	%f25, %r13;
	mov.b32 	%f26, %r14;
	.loc	1 42 18                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:42:18
	sub.f32 	%f27, %f24, %f26;
	sub.f32 	%f28, %f23, %f25;
	.loc	1 33 21                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:33:21
	shr.s32 	%r112, %r72, 31;
	shr.u32 	%r113, %r112, 26;
	add.s32 	%r114, %r72, %r113;
	shr.s32 	%r115, %r114, 6;
	.loc	1 33 27                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:33:27
	shr.u32 	%r116, %r114, 31;
	add.s32 	%r117, %r115, %r116;
	and.b32  	%r118, %r117, 67108862;
	sub.s32 	%r119, %r115, %r118;
	.loc	1 32 19                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:32:19
	and.b32  	%r120, %r114, 33554368;
	sub.s32 	%r121, %r72, %r120;
	.loc	1 30 19                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:30:19
	bfe.s32 	%r122, %r1, 29, 1;
	shr.u32 	%r123, %r122, 25;
	add.s32 	%r124, %r72, %r123;
	.loc	1 71 20                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:71:20
	mov.b32 	%r49, %f15;
	// begin inline asm
	div.full.f32 %r47, %r22, %r49;
	// end inline asm
	mov.b32 	%f29, %r47;
	mov.b32 	%r52, %f16;
	// begin inline asm
	div.full.f32 %r50, %r22, %r52;
	// end inline asm
	mov.b32 	%f30, %r50;
	.loc	1 75 31                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:75:31
	add.s64 	%rd33, %rd22, %rd29;
	add.s64 	%rd10, %rd33, -256;
	.loc	1 75 79                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:75:79
	// begin inline asm
	mov.u32 %r53, 0x0;
	mov.u32 %r54, 0x0;
	@%p20 ld.global.L1::evict_last.v2.b32 { %r53, %r54 }, [ %rd10 + 0 ];
	@!%p20 mov.u32 %r53, %r11;
	@!%p20 mov.u32 %r54, %r11;
	// end inline asm
	.loc	1 77 31                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:77:31
	add.s64 	%rd34, %rd23, %rd29;
	add.s64 	%rd11, %rd34, -256;
	.loc	1 77 79                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:77:79
	// begin inline asm
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	@%p20 ld.global.L1::evict_last.v2.b32 { %r57, %r58 }, [ %rd11 + 0 ];
	@!%p20 mov.u32 %r57, %r11;
	@!%p20 mov.u32 %r58, %r11;
	// end inline asm
	.loc	1 89 33                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:89:33
	shl.b32 	%r125, %r119, 6;
	.loc	1 89 42                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:89:42
	shl.b32 	%r126, %r121, 7;
	.loc	1 89 52                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:89:52
	shl.b32 	%r127, %r124, 6;
	and.b32  	%r128, %r127, -8192;
	shl.b32 	%r129, %r89, 13;
	.loc	1 89 30                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:89:30
	add.s32 	%r130, %r126, %r81;
	.loc	1 89 38                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:89:38
	add.s32 	%r131, %r130, %r128;
	.loc	1 89 47                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:89:47
	add.s32 	%r132, %r131, %r125;
	.loc	1 89 25                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:89:25
	mul.wide.s32 	%rd35, %r132, 4;
	add.s64 	%rd12, %rd25, %rd35;
	.loc	1 89 64                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:89:64
	bar.sync 	0;
	shl.b32 	%r133, %r70, 7;
	or.b32  	%r134, %r133, %r78;
	or.b32  	%r135, %r134, %r79;
	or.b32  	%r136, %r135, %r80;
	shl.b32 	%r137, %r70, 3;
	add.s32 	%r138, %r97, %r137;
	shl.b32 	%r139, %r136, 2;
	add.s32 	%r61, %r138, %r139;
	shr.u32 	%r140, %r133, 4;
	add.s32 	%r141, %r97, %r140;
	add.s32 	%r142, %r141, %r139;
	add.s32 	%r63, %r142, 260;
	shr.u32 	%r143, %r68, 3;
	and.b32  	%r144, %r143, 12;
	add.s32 	%r145, %r97, %r144;
	add.s32 	%r146, %r145, %r104;
	.loc	1 90 34                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:90:34
	shl.b32 	%r147, %r84, 7;
	.loc	1 90 30                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:90:30
	add.s32 	%r148, %r147, %r91;
	.loc	1 90 39                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:90:39
	add.s32 	%r149, %r148, %r129;
	.loc	1 90 25                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:90:25
	cvt.s64.s32 	%rd36, %r149;
	add.s64 	%rd13, %rd26, %rd36;
	.loc	1 51 19                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:51:19
	mul.f32 	%f31, %f28, %f9;
	mul.f32 	%f32, %f27, %f10;
	.loc	1 52 71                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:52:71
	mov.b32 	%f33, %r27;
	mov.b32 	%f34, %r28;
	.loc	1 54 71                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:54:71
	mov.b32 	%f35, %r31;
	mov.b32 	%f36, %r32;
	.loc	1 55 20                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:55:20
	fma.rn.f32 	%f37, %f32, %f34, %f36;
	fma.rn.f32 	%f38, %f31, %f33, %f35;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p45, %f38, 0f00000000;
	setp.lt.f32 	%p46, %f37, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f39, 0f00000000, %f37, %p46;
	selp.f32 	%f40, 0f00000000, %f38, %p45;
$L__tmp2:
	.loc	1 74 20                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:74:20
	mul.f32 	%f41, %f22, %f29;
	mul.f32 	%f42, %f21, %f30;
	.loc	1 75 79                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:75:79
	mov.b32 	%f43, %r53;
	mov.b32 	%f44, %r54;
	.loc	1 77 79                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:77:79
	mov.b32 	%f45, %r57;
	mov.b32 	%f46, %r58;
	.loc	1 78 20                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:78:20
	fma.rn.f32 	%f47, %f42, %f44, %f46;
	fma.rn.f32 	%f48, %f41, %f43, %f45;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p47, %f48, 0f00000000;
	setp.lt.f32 	%p48, %f47, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f49, 0f00000000, %f47, %p48;
	selp.f32 	%f50, 0f00000000, %f48, %p47;
$L__tmp4:
	.loc	1 0 0                           // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:0:0
	selp.f32 	%f51, %f40, %f50, %p42;
	selp.f32 	%f52, %f39, %f49, %p42;
	.loc	1 84 20                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:84:20
	add.f32 	%f53, %f2, %f52;
	add.f32 	%f54, %f1, %f51;
$L__tmp5:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p49, %f54, 0f00000000;
	setp.lt.f32 	%p50, %f53, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f55, 0f00000000, %f53, %p50;
	mov.b32 	%r64, %f55;
	selp.f32 	%f56, 0f00000000, %f54, %p49;
$L__tmp6:
	.loc	1 88 21                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:88:21
	setp.le.f32 	%p51, %f55, 0f00000000;
	setp.le.f32 	%p52, %f56, 0f00000000;
$L__tmp7:
	.loc	2 121 29                        // triton_helpers.py:121:29
	mov.b32 	%r62, %f56;
$L__tmp8:
	.loc	1 89 64                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:89:64
	// begin inline asm
	@%p2 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	// begin inline asm
	@%p2 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r65, [%r146];
	ld.shared.u32 	%r66, [%r146+4];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd12 + 0 ], { %r65, %r66 };
	// end inline asm
	.loc	1 90 56                         // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:90:56
	selp.u16 	%rs2, 1, 0, %p52;
	selp.u16 	%rs3, 1, 0, %p51;
	shl.b16 	%rs4, %rs3, 8;
	or.b16  	%rs1, %rs2, %rs4;
	// begin inline asm
	@%p37 st.global.b16 [ %rd13 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 90 4                          // cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py:90:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/cl/cclf6fdsfcrwu3ednodpbznmvyyu6wqyv2prfe7bbqfdrpfnb64y.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 250                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 108
.b8 102
.b8 54
.b8 102
.b8 100
.b8 115
.b8 102
.b8 99
.b8 114
.b8 119
.b8 117
.b8 51
.b8 101
.b8 100
.b8 110
.b8 111
.b8 100
.b8 112
.b8 98
.b8 122
.b8 110
.b8 109
.b8 118
.b8 121
.b8 121
.b8 117
.b8 54
.b8 119
.b8 113
.b8 121
.b8 118
.b8 50
.b8 112
.b8 114
.b8 102
.b8 101
.b8 55
.b8 98
.b8 98
.b8 113
.b8 102
.b8 100
.b8 114
.b8 112
.b8 102
.b8 110
.b8 98
.b8 54
.b8 52
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 99
.b8 108
.b8 111
.b8 110
.b8 101
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 51
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9f:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 57                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 80                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 86                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
