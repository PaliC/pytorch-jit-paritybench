//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<70>;
	.reg .b16 	%rs<45>;
	.reg .b32 	%r<250>;
	.reg .f32 	%f<109>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_1];
$L__tmp0:
	.loc	1 22 28                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:22:33
	shl.b32 	%r123, %r1, 10;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_2];
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_3];
	.loc	1 23 44                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:23:44
	mov.u32 	%r124, %tid.x;
	shl.b32 	%r125, %r124, 4;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_4];
	and.b32  	%r126, %r125, 1008;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_5];
	shl.b32 	%r127, %r124, 2;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_30_param_6];
	and.b32  	%r128, %r127, 1020;
	.loc	1 23 23                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:23:23
	or.b32  	%r129, %r123, %r126;
	or.b32  	%r130, %r129, 4;
	or.b32  	%r131, %r129, 8;
	or.b32  	%r132, %r129, 12;
	or.b32  	%r133, %r123, %r128;
	.loc	1 25 28                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:25:33
	shl.b32 	%r134, %r2, 2;
	.loc	1 26 44                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:26:44
	bfe.u32 	%r135, %r124, 6, 2;
	.loc	1 26 23                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:26:23
	or.b32  	%r136, %r134, %r135;
	.loc	1 27 21                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:27:21
	setp.lt.s32 	%p1, %r136, 4;
	.loc	1 30 19                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:30:19
	mul.hi.s32 	%r138, %r129, 1717986919;
	shr.u32 	%r139, %r138, 31;
	shr.s32 	%r140, %r138, 9;
	add.s32 	%r141, %r140, %r139;
	.loc	1 29 19                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:29:19
	mul.lo.s32 	%r142, %r141, 1280;
	sub.s32 	%r143, %r129, %r142;
	mul.hi.s32 	%r144, %r130, 1717986919;
	shr.u32 	%r145, %r144, 31;
	shr.s32 	%r146, %r144, 9;
	add.s32 	%r147, %r146, %r145;
	mul.lo.s32 	%r148, %r147, 1280;
	sub.s32 	%r149, %r130, %r148;
	mul.hi.s32 	%r150, %r131, 1717986919;
	shr.u32 	%r151, %r150, 31;
	shr.s32 	%r152, %r150, 9;
	add.s32 	%r153, %r152, %r151;
	mul.lo.s32 	%r154, %r153, 1280;
	sub.s32 	%r155, %r131, %r154;
	mul.hi.s32 	%r156, %r132, 1717986919;
	shr.u32 	%r157, %r156, 31;
	shr.s32 	%r158, %r156, 9;
	add.s32 	%r159, %r158, %r157;
	mul.lo.s32 	%r160, %r159, 1280;
	sub.s32 	%r161, %r132, %r160;
	mul.hi.s32 	%r162, %r133, 1717986919;
	shr.u32 	%r163, %r162, 31;
	shr.s32 	%r164, %r162, 9;
	add.s32 	%r165, %r164, %r163;
	mul.lo.s32 	%r166, %r165, 1280;
	sub.s32 	%r167, %r133, %r166;
	.loc	1 32 40                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:32:40
	mul.lo.s32 	%r168, %r136, 1280;
	.loc	1 32 35                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:32:35
	mad.lo.s32 	%r169, %r141, 5120, %r168;
	.loc	1 32 45                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:32:45
	add.s32 	%r170, %r169, %r143;
	add.s32 	%r171, %r169, %r149;
	add.s32 	%r172, %r169, %r155;
	add.s32 	%r173, %r169, %r161;
	.loc	1 32 30                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:32:30
	cvt.s64.s32 	%rd21, %r170;
	mul.wide.s32 	%rd22, %r170, 4;
	add.s64 	%rd1, %rd14, %rd22;
	mul.wide.s32 	%rd23, %r171, 4;
	add.s64 	%rd2, %rd14, %rd23;
	mul.wide.s32 	%rd24, %r172, 4;
	add.s64 	%rd3, %rd14, %rd24;
	mul.wide.s32 	%rd25, %r173, 4;
	add.s64 	%rd4, %rd14, %rd25;
	.loc	1 32 55                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:32:55
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r21, %r22, %r23 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd4 + 0 ];
	// end inline asm
	and.b32  	%r174, %r125, 4080;
	shr.u32 	%r175, %r124, 2;
	and.b32  	%r176, %r175, 48;
	add.s32 	%r177, %r176, %r174;
	shl.b32 	%r178, %r177, 2;
	mov.u32 	%r179, global_smem;
	add.s32 	%r19, %r179, %r178;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r19 + 0 ], { %r20, %r21, %r22, %r23 };
	// end inline asm
	add.s32 	%r24, %r19, 16;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r24 + 0 ], { %r25, %r26, %r27, %r28 };
	// end inline asm
	add.s32 	%r29, %r19, 32;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r29 + 0 ], { %r30, %r31, %r32, %r33 };
	// end inline asm
	add.s32 	%r34, %r19, 48;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r34 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r180, %r128, 2;
	add.s32 	%r181, %r179, %r180;
	ld.shared.v4.f32 	{%f1, %f2, %f3, %f4}, [%r181];
	ld.shared.v4.f32 	{%f5, %f6, %f7, %f8}, [%r181+4160];
	ld.shared.v4.f32 	{%f9, %f10, %f11, %f12}, [%r181+8320];
	ld.shared.v4.f32 	{%f13, %f14, %f15, %f16}, [%r181+12480];
	.loc	1 33 30                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:33:30
	mul.wide.s32 	%rd26, %r167, 4;
	add.s64 	%rd5, %rd15, %rd26;
	.loc	1 33 35                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:33:35
	// begin inline asm
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r39, %r40, %r41, %r42 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 30                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:34:30
	add.s64 	%rd6, %rd16, %rd26;
	.loc	1 34 35                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:34:35
	// begin inline asm
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r43, %r44, %r45, %r46 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r43;
	mov.b32 	%f18, %r44;
	mov.b32 	%f19, %r45;
	mov.b32 	%f20, %r46;
	.loc	1 35 31                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:35:31
	add.s64 	%rd7, %rd17, %rd26;
	.loc	1 35 36                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:35:36
	// begin inline asm
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r47, %r48, %r49, %r50 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 31                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:36:31
	add.s64 	%rd8, %rd18, %rd26;
	.loc	1 36 36                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:36:36
	// begin inline asm
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	mov.u32 %r54, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r51, %r52, %r53, %r54 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 39 18                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:39:18
	add.f32 	%f21, %f17, 0f3727C5AC;
	add.f32 	%f22, %f18, 0f3727C5AC;
	add.f32 	%f23, %f19, 0f3727C5AC;
	add.f32 	%f24, %f20, 0f3727C5AC;
	.loc	1 40 26                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:40:26
	sqrt.approx.ftz.f32 	%f25, %f21;
	sqrt.approx.ftz.f32 	%f26, %f22;
	sqrt.approx.ftz.f32 	%f27, %f23;
	sqrt.approx.ftz.f32 	%f28, %f24;
	.loc	1 27 21                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:27:21
	setp.lt.s32 	%p29, %r134, 4;
	.loc	1 23 44                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:23:44
	and.b32  	%r182, %r124, 255;
	.loc	1 23 23                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:23:23
	or.b32  	%r183, %r123, %r182;
	.loc	1 42 18                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:42:18
	mov.b32 	%r57, %f25;
	mov.b32 	%r56, 1065353216;
	// begin inline asm
	div.full.f32 %r55, %r56, %r57;
	// end inline asm
	mov.b32 	%f29, %r55;
	mov.b32 	%r60, %f26;
	// begin inline asm
	div.full.f32 %r58, %r56, %r60;
	// end inline asm
	mov.b32 	%f30, %r58;
	mov.b32 	%r63, %f27;
	// begin inline asm
	div.full.f32 %r61, %r56, %r63;
	// end inline asm
	mov.b32 	%f31, %r61;
	mov.b32 	%r66, %f28;
	// begin inline asm
	div.full.f32 %r64, %r56, %r66;
	// end inline asm
	mov.b32 	%f32, %r64;
	.loc	1 33 35                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:33:35
	mov.b32 	%f33, %r42;
	mov.b32 	%f34, %r40;
	mov.b32 	%f35, %r41;
	mov.b32 	%f36, %r39;
	.loc	1 37 18                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:37:18
	sub.f32 	%f37, %f1, %f36;
	sub.f32 	%f38, %f5, %f36;
	sub.f32 	%f39, %f9, %f36;
	sub.f32 	%f40, %f13, %f36;
	sub.f32 	%f41, %f15, %f35;
	sub.f32 	%f42, %f2, %f34;
	sub.f32 	%f43, %f6, %f34;
	sub.f32 	%f44, %f10, %f34;
	sub.f32 	%f45, %f16, %f33;
	sub.f32 	%f46, %f14, %f34;
	sub.f32 	%f47, %f3, %f35;
	sub.f32 	%f48, %f4, %f33;
	sub.f32 	%f49, %f7, %f35;
	sub.f32 	%f50, %f8, %f33;
	sub.f32 	%f51, %f11, %f35;
	sub.f32 	%f52, %f12, %f33;
	.loc	1 36 36                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:36:36
	mov.b32 	%f53, %r54;
	mov.b32 	%f54, %r52;
	mov.b32 	%f55, %r53;
	mov.b32 	%f56, %r51;
	.loc	1 35 36                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:35:36
	mov.b32 	%f57, %r50;
	mov.b32 	%f58, %r48;
	mov.b32 	%f59, %r49;
	mov.b32 	%f60, %r47;
	.loc	1 45 19                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:45:19
	mul.f32 	%f61, %f52, %f32;
	mul.f32 	%f62, %f51, %f31;
	mul.f32 	%f63, %f50, %f32;
	mul.f32 	%f64, %f49, %f31;
	mul.f32 	%f65, %f48, %f32;
	mul.f32 	%f66, %f47, %f31;
	mul.f32 	%f67, %f46, %f30;
	mul.f32 	%f68, %f45, %f32;
	mul.f32 	%f69, %f44, %f30;
	mul.f32 	%f70, %f43, %f30;
	mul.f32 	%f71, %f42, %f30;
	mul.f32 	%f72, %f41, %f31;
	mul.f32 	%f73, %f40, %f29;
	mul.f32 	%f74, %f39, %f29;
	mul.f32 	%f75, %f38, %f29;
	mul.f32 	%f76, %f37, %f29;
	.loc	1 47 20                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:47:20
	fma.rn.f32 	%f77, %f76, %f60, %f56;
	fma.rn.f32 	%f78, %f75, %f60, %f56;
	fma.rn.f32 	%f79, %f74, %f60, %f56;
	fma.rn.f32 	%f80, %f73, %f60, %f56;
	fma.rn.f32 	%f81, %f72, %f59, %f55;
	fma.rn.f32 	%f82, %f71, %f58, %f54;
	fma.rn.f32 	%f83, %f70, %f58, %f54;
	fma.rn.f32 	%f84, %f69, %f58, %f54;
	fma.rn.f32 	%f85, %f68, %f57, %f53;
	fma.rn.f32 	%f86, %f67, %f58, %f54;
	fma.rn.f32 	%f87, %f66, %f59, %f55;
	fma.rn.f32 	%f88, %f65, %f57, %f53;
	fma.rn.f32 	%f89, %f64, %f59, %f55;
	fma.rn.f32 	%f90, %f63, %f57, %f53;
	fma.rn.f32 	%f91, %f62, %f59, %f55;
	fma.rn.f32 	%f92, %f61, %f57, %f53;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p38, %f92, 0f00000000;
	setp.lt.f32 	%p39, %f91, 0f00000000;
	setp.lt.f32 	%p40, %f90, 0f00000000;
	setp.lt.f32 	%p41, %f89, 0f00000000;
	setp.lt.f32 	%p42, %f88, 0f00000000;
	setp.lt.f32 	%p43, %f87, 0f00000000;
	setp.lt.f32 	%p44, %f86, 0f00000000;
	setp.lt.f32 	%p45, %f85, 0f00000000;
	setp.lt.f32 	%p46, %f84, 0f00000000;
	setp.lt.f32 	%p47, %f83, 0f00000000;
	setp.lt.f32 	%p48, %f82, 0f00000000;
	setp.lt.f32 	%p49, %f81, 0f00000000;
	setp.lt.f32 	%p50, %f80, 0f00000000;
	setp.lt.f32 	%p51, %f79, 0f00000000;
	setp.lt.f32 	%p52, %f78, 0f00000000;
	setp.lt.f32 	%p53, %f77, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f93, 0f00000000, %f77, %p53;
	selp.f32 	%f94, 0f00000000, %f78, %p52;
	selp.f32 	%f95, 0f00000000, %f79, %p51;
	selp.f32 	%f96, 0f00000000, %f80, %p50;
	selp.f32 	%f97, 0f00000000, %f81, %p49;
	selp.f32 	%f98, 0f00000000, %f82, %p48;
	selp.f32 	%f99, 0f00000000, %f83, %p47;
	selp.f32 	%f100, 0f00000000, %f84, %p46;
	selp.f32 	%f101, 0f00000000, %f85, %p45;
	selp.f32 	%f102, 0f00000000, %f86, %p44;
	selp.f32 	%f103, 0f00000000, %f87, %p43;
	selp.f32 	%f104, 0f00000000, %f88, %p42;
	selp.f32 	%f105, 0f00000000, %f89, %p41;
	selp.f32 	%f106, 0f00000000, %f90, %p40;
	selp.f32 	%f107, 0f00000000, %f91, %p39;
	selp.f32 	%f108, 0f00000000, %f92, %p38;
$L__tmp2:
	.loc	1 51 21                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:51:21
	setp.le.f32 	%p54, %f108, 0f00000000;
	selp.u16 	%rs17, 1, 0, %p54;
	setp.le.f32 	%p55, %f107, 0f00000000;
	selp.u16 	%rs18, -1, 0, %p55;
	shl.b16 	%rs19, %rs18, 1;
	or.b16  	%rs20, %rs17, %rs19;
	setp.le.f32 	%p56, %f106, 0f00000000;
	selp.u16 	%rs21, 1, 0, %p56;
	setp.le.f32 	%p57, %f105, 0f00000000;
	selp.u16 	%rs22, -1, 0, %p57;
	shl.b16 	%rs23, %rs22, 1;
	or.b16  	%rs24, %rs21, %rs23;
	setp.le.f32 	%p58, %f104, 0f00000000;
	selp.u16 	%rs25, 1, 0, %p58;
	setp.le.f32 	%p59, %f103, 0f00000000;
	selp.u16 	%rs26, -1, 0, %p59;
	shl.b16 	%rs27, %rs26, 1;
	or.b16  	%rs28, %rs25, %rs27;
	setp.le.f32 	%p60, %f102, 0f00000000;
	selp.u16 	%rs14, 1, 0, %p60;
	setp.le.f32 	%p61, %f101, 0f00000000;
	setp.le.f32 	%p62, %f100, 0f00000000;
	selp.u16 	%rs10, 1, 0, %p62;
	setp.le.f32 	%p63, %f99, 0f00000000;
	selp.u16 	%rs6, 1, 0, %p63;
	setp.le.f32 	%p64, %f98, 0f00000000;
	selp.u16 	%rs2, 1, 0, %p64;
	setp.le.f32 	%p65, %f97, 0f00000000;
	setp.le.f32 	%p66, %f96, 0f00000000;
	setp.le.f32 	%p67, %f95, 0f00000000;
	setp.le.f32 	%p68, %f94, 0f00000000;
	setp.le.f32 	%p69, %f93, 0f00000000;
	.loc	1 52 30                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:52:30
	add.s32 	%r184, %r183, %r2;
	shl.b32 	%r185, %r184, 2;
	add.s32 	%r186, %r185, 1024;
	add.s32 	%r187, %r185, 2048;
	add.s32 	%r188, %r185, 3072;
	.loc	1 52 25                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:52:25
	mul.wide.s32 	%rd27, %r185, 4;
	add.s64 	%rd9, %rd19, %rd27;
	mul.wide.s32 	%rd28, %r186, 4;
	add.s64 	%rd10, %rd19, %rd28;
	mul.wide.s32 	%rd29, %r187, 4;
	add.s64 	%rd11, %rd19, %rd29;
	mul.wide.s32 	%rd30, %r188, 4;
	add.s64 	%rd12, %rd19, %rd30;
	.loc	1 52 44                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:52:44
	bar.sync 	0;
	add.s32 	%r189, %r179, %r174;
	shl.b32 	%r190, %r174, 2;
	add.s32 	%r67, %r189, %r190;
	mov.b32 	%r68, %f93;
	// begin inline asm
	@%p5 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	add.s32 	%r69, %r67, 20;
	mov.b32 	%r70, %f98;
	// begin inline asm
	@%p5 st.shared.b32 [ %r69 + 0 ], %r70;
	// end inline asm
	add.s32 	%r71, %r67, 40;
	mov.b32 	%r72, %f103;
	// begin inline asm
	@%p5 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	add.s32 	%r73, %r67, 60;
	mov.b32 	%r74, %f104;
	// begin inline asm
	@%p5 st.shared.b32 [ %r73 + 0 ], %r74;
	// end inline asm
	add.s32 	%r75, %r67, 4;
	mov.b32 	%r76, %f94;
	// begin inline asm
	@%p5 st.shared.b32 [ %r75 + 0 ], %r76;
	// end inline asm
	add.s32 	%r77, %r67, 24;
	mov.b32 	%r78, %f99;
	// begin inline asm
	@%p5 st.shared.b32 [ %r77 + 0 ], %r78;
	// end inline asm
	add.s32 	%r79, %r67, 44;
	mov.b32 	%r80, %f105;
	// begin inline asm
	@%p5 st.shared.b32 [ %r79 + 0 ], %r80;
	// end inline asm
	add.s32 	%r81, %r67, 64;
	mov.b32 	%r82, %f106;
	// begin inline asm
	@%p5 st.shared.b32 [ %r81 + 0 ], %r82;
	// end inline asm
	add.s32 	%r83, %r67, 8;
	mov.b32 	%r84, %f95;
	// begin inline asm
	@%p5 st.shared.b32 [ %r83 + 0 ], %r84;
	// end inline asm
	add.s32 	%r85, %r67, 28;
	mov.b32 	%r86, %f100;
	// begin inline asm
	@%p5 st.shared.b32 [ %r85 + 0 ], %r86;
	// end inline asm
	add.s32 	%r87, %r67, 48;
	mov.b32 	%r88, %f107;
	// begin inline asm
	@%p5 st.shared.b32 [ %r87 + 0 ], %r88;
	// end inline asm
	add.s32 	%r89, %r67, 68;
	mov.b32 	%r90, %f108;
	// begin inline asm
	@%p5 st.shared.b32 [ %r89 + 0 ], %r90;
	// end inline asm
	add.s32 	%r91, %r67, 12;
	mov.b32 	%r92, %f96;
	// begin inline asm
	@%p5 st.shared.b32 [ %r91 + 0 ], %r92;
	// end inline asm
	add.s32 	%r93, %r67, 32;
	mov.b32 	%r94, %f102;
	// begin inline asm
	@%p5 st.shared.b32 [ %r93 + 0 ], %r94;
	// end inline asm
	add.s32 	%r95, %r67, 52;
	mov.b32 	%r96, %f97;
	// begin inline asm
	@%p5 st.shared.b32 [ %r95 + 0 ], %r96;
	// end inline asm
	add.s32 	%r97, %r67, 72;
	mov.b32 	%r98, %f101;
	// begin inline asm
	@%p5 st.shared.b32 [ %r97 + 0 ], %r98;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r115, %r179, %r128;
	add.s32 	%r191, %r115, %r180;
	ld.shared.u32 	%r99, [%r191];
	ld.shared.u32 	%r100, [%r191+4];
	ld.shared.u32 	%r101, [%r191+8];
	ld.shared.u32 	%r102, [%r191+12];
	ld.shared.u32 	%r103, [%r191+5120];
	add.s32 	%r192, %r181, %r128;
	ld.shared.u32 	%r104, [%r192+5124];
	ld.shared.u32 	%r105, [%r192+5128];
	ld.shared.u32 	%r106, [%r192+5132];
	ld.shared.u32 	%r107, [%r191+10240];
	ld.shared.u32 	%r108, [%r192+10244];
	ld.shared.u32 	%r109, [%r192+10248];
	ld.shared.u32 	%r110, [%r192+10252];
	ld.shared.u32 	%r111, [%r191+15360];
	ld.shared.u32 	%r112, [%r192+15364];
	ld.shared.u32 	%r113, [%r192+15368];
	ld.shared.u32 	%r114, [%r192+15372];
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd9 + 0 ], { %r99, %r100, %r101, %r102 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd10 + 0 ], { %r103, %r104, %r105, %r106 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd11 + 0 ], { %r107, %r108, %r109, %r110 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd12 + 0 ], { %r111, %r112, %r113, %r114 };
	// end inline asm
	.loc	1 53 25                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:53:25
	add.s64 	%rd13, %rd20, %rd21;
	.loc	1 53 57                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:53:57
	bar.sync 	0;
	selp.u16 	%rs1, 1, 0, %p69;
	selp.u16 	%rs3, 1, 0, %p59;
	selp.u16 	%rs5, 1, 0, %p68;
	selp.u16 	%rs7, 1, 0, %p57;
	selp.u16 	%rs9, 1, 0, %p67;
	selp.u16 	%rs11, 1, 0, %p55;
	selp.u16 	%rs13, 1, 0, %p66;
	selp.u16 	%rs15, 1, 0, %p65;
	and.b16  	%rs4, %rs28, 1;
	// begin inline asm
	@%p5 st.shared.v4.b8 [ %r115 + 0 ], { %rs1, %rs2, %rs3, %rs4 };
	// end inline asm
	add.s32 	%r116, %r115, 1040;
	and.b16  	%rs8, %rs24, 1;
	// begin inline asm
	@%p5 st.shared.v4.b8 [ %r116 + 0 ], { %rs5, %rs6, %rs7, %rs8 };
	// end inline asm
	add.s32 	%r117, %r115, 2080;
	and.b16  	%rs12, %rs20, 1;
	// begin inline asm
	@%p5 st.shared.v4.b8 [ %r117 + 0 ], { %rs9, %rs10, %rs11, %rs12 };
	// end inline asm
	add.s32 	%r118, %r115, 3120;
	.loc	1 51 21                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:51:21
	selp.u16 	%rs16, 1, 0, %p61;
	.loc	1 53 57                         // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:53:57
	// begin inline asm
	@%p5 st.shared.v4.b8 [ %r118 + 0 ], { %rs13, %rs14, %rs15, %rs16 };
	// end inline asm
	bar.sync 	0;
	add.s32 	%r193, %r189, %r176;
	ld.shared.v4.u32 	{%r194, %r195, %r196, %r197}, [%r193];
	bfe.u32 	%r202, %r194, 0, 8;
	bfe.u32 	%r203, %r194, 16, 8;
	cvt.u16.u32 	%rs29, %r203;
	bfe.u32 	%r204, %r194, 8, 8;
	cvt.u16.u32 	%rs30, %r204;
	mov.b32 	%r205, {%rs30, %rs29};
	and.b32  	%r206, %r205, 65537;
	bfe.u32 	%r207, %r195, 0, 8;
	bfe.u32 	%r208, %r195, 16, 8;
	cvt.u16.u32 	%rs31, %r208;
	bfe.u32 	%r209, %r195, 8, 8;
	cvt.u16.u32 	%rs32, %r209;
	mov.b32 	%r210, {%rs32, %rs31};
	and.b32  	%r211, %r210, 65537;
	bfe.u32 	%r212, %r196, 0, 8;
	bfe.u32 	%r213, %r196, 16, 8;
	cvt.u16.u32 	%rs33, %r213;
	bfe.u32 	%r214, %r196, 8, 8;
	cvt.u16.u32 	%rs34, %r214;
	mov.b32 	%r215, {%rs34, %rs33};
	and.b32  	%r216, %r215, 65537;
	bfe.u32 	%r217, %r197, 0, 8;
	bfe.u32 	%r218, %r197, 16, 8;
	cvt.u16.u32 	%rs35, %r218;
	bfe.u32 	%r219, %r197, 8, 8;
	cvt.u16.u32 	%rs36, %r219;
	mov.b32 	%r220, {%rs36, %rs35};
	and.b32  	%r221, %r220, 65537;
	mov.b32 	{%rs37, %rs38}, %r206;
	cvt.u32.u16 	%r222, %rs38;
	bfe.u32 	%r223, %r194, 24, 1;
	prmt.b32 	%r224, %r222, %r223, 0x3340U;
	cvt.u32.u16 	%r225, %rs37;
	and.b32  	%r226, %r202, 1;
	prmt.b32 	%r227, %r226, %r225, 0x3340U;
	prmt.b32 	%r228, %r227, %r224, 0x5410U;
	mov.b32 	{%rs39, %rs40}, %r211;
	cvt.u32.u16 	%r229, %rs40;
	bfe.u32 	%r230, %r195, 24, 1;
	prmt.b32 	%r231, %r229, %r230, 0x3340U;
	cvt.u32.u16 	%r232, %rs39;
	and.b32  	%r233, %r207, 1;
	prmt.b32 	%r234, %r233, %r232, 0x3340U;
	prmt.b32 	%r235, %r234, %r231, 0x5410U;
	mov.b32 	{%rs41, %rs42}, %r216;
	cvt.u32.u16 	%r236, %rs42;
	bfe.u32 	%r237, %r196, 24, 1;
	prmt.b32 	%r238, %r236, %r237, 0x3340U;
	cvt.u32.u16 	%r239, %rs41;
	and.b32  	%r240, %r212, 1;
	prmt.b32 	%r241, %r240, %r239, 0x3340U;
	prmt.b32 	%r242, %r241, %r238, 0x5410U;
	mov.b32 	{%rs43, %rs44}, %r221;
	cvt.u32.u16 	%r243, %rs44;
	bfe.u32 	%r244, %r197, 24, 1;
	prmt.b32 	%r245, %r243, %r244, 0x3340U;
	cvt.u32.u16 	%r246, %rs43;
	and.b32  	%r247, %r217, 1;
	prmt.b32 	%r248, %r247, %r246, 0x3340U;
	prmt.b32 	%r249, %r248, %r245, 0x5410U;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd13 + 0 ], { %r228, %r235, %r242, %r249 };
	// end inline asm
	.loc	1 53 4                          // ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py:53:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/e4/ce4hl6k742n2fqtrumgutnt75am5ug26k62iscguhngvtywccusa.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 225                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xda DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 52
.b8 104
.b8 108
.b8 54
.b8 107
.b8 55
.b8 52
.b8 50
.b8 110
.b8 50
.b8 102
.b8 113
.b8 116
.b8 114
.b8 117
.b8 109
.b8 103
.b8 117
.b8 116
.b8 110
.b8 116
.b8 55
.b8 53
.b8 97
.b8 109
.b8 53
.b8 117
.b8 103
.b8 50
.b8 54
.b8 107
.b8 54
.b8 50
.b8 105
.b8 115
.b8 99
.b8 103
.b8 117
.b8 104
.b8 110
.b8 103
.b8 118
.b8 116
.b8 121
.b8 119
.b8 99
.b8 99
.b8 117
.b8 115
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x53 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 51
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb6:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xcb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
