//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_hardtanh_backward_1 // -- Begin function triton_poi_fused_cat_hardtanh_backward_1
                                        // @triton_poi_fused_cat_hardtanh_backward_1
.visible .entry triton_poi_fused_cat_hardtanh_backward_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_hardtanh_backward_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_hardtanh_backward_1_param_1,
	.param .u32 triton_poi_fused_cat_hardtanh_backward_1_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b32 	%r<53>;
	.reg .f32 	%f<18>;
	.reg .b64 	%rd<15>;
	.loc	1 19 0                          // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_cat_hardtanh_backward_1_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused_cat_hardtanh_backward_1_param_1];
$L__tmp0:
	.loc	1 21 28                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:21:33
	shl.b32 	%r19, %r1, 9;
	.loc	1 22 36                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:22:36
	mov.u32 	%r20, %tid.x;
	shl.b32 	%r21, %r20, 2;
	and.b32  	%r22, %r21, 508;
	.loc	1 22 23                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:22:23
	or.b32  	%r23, %r19, %r22;
	.loc	1 24 21                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:24:21
	shr.s32 	%r25, %r23, 31;
	shr.u32 	%r26, %r25, 24;
	add.s32 	%r27, %r23, %r26;
	shr.s32 	%r28, %r27, 8;
	.loc	1 24 28                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:24:28
	mul.hi.s32 	%r29, %r28, 715827883;
	shr.u32 	%r30, %r29, 31;
	shr.u32 	%r31, %r29, 3;
	add.s32 	%r32, %r31, %r30;
	mul.lo.s32 	%r33, %r32, 48;
	sub.s32 	%r34, %r28, %r33;
	.loc	1 25 19                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:25:19
	and.b32  	%r35, %r27, -256;
	sub.s32 	%r36, %r23, %r35;
	.loc	1 26 19                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:26:19
	mul.hi.s32 	%r37, %r23, 715827883;
	shr.u32 	%r38, %r37, 31;
	shr.s32 	%r39, %r37, 11;
	add.s32 	%r40, %r39, %r38;
	.loc	1 32 18                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:32:18
	setp.lt.s32 	%p1, %r34, 24;
	.loc	1 33 35                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:33:35
	mul.lo.s32 	%r41, %r40, 12288;
	sub.s32 	%r42, %r23, %r41;
	.loc	1 33 51                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:33:51
	mul.lo.s32 	%r43, %r40, 6144;
	.loc	1 33 46                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:33:46
	add.s32 	%r44, %r43, %r42;
	.loc	1 33 30                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:33:30
	mul.wide.s32 	%rd6, %r44, 4;
	add.s64 	%rd1, %rd4, %rd6;
	mov.b32 	%r6, 0;
	.loc	1 33 56                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:33:56
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 34 19                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:34:19
	setp.gt.s32 	%p6, %r34, 23;
	.loc	1 37 40                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:37:40
	shl.b32 	%r45, %r34, 8;
	.loc	1 37 30                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:37:30
	cvt.s64.s32 	%rd7, %r45;
	cvt.s64.s32 	%rd8, %r43;
	cvt.s64.s32 	%rd9, %r36;
	add.s64 	%rd10, %rd9, %rd8;
	add.s64 	%rd11, %rd10, %rd7;
	shl.b64 	%rd12, %rd11, 2;
	add.s64 	%rd13, %rd4, %rd12;
	add.s64 	%rd2, %rd13, -24576;
	.loc	1 37 64                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:37:64
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	.loc	1 47 25                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:47:25
	cvt.s64.s32 	%rd14, %r23;
	add.s64 	%rd3, %rd5, %rd14;
	.loc	1 33 56                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:33:56
	mov.b32 	%f1, %r5;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r3;
	mov.b32 	%f4, %r2;
	.loc	1 37 64                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:37:64
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	mov.f32 	%f9, 0f00000000;
	.loc	1 38 13                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:38:13
	sub.f32 	%f10, %f9, %f8;
	sub.f32 	%f11, %f9, %f7;
	sub.f32 	%f12, %f9, %f6;
	sub.f32 	%f13, %f9, %f5;
	.loc	1 41 33                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:41:33
	selp.f32 	%f14, %f4, %f13, %p1;
	selp.f32 	%f15, %f3, %f12, %p1;
	selp.f32 	%f16, %f2, %f11, %p1;
	selp.f32 	%f17, %f1, %f10, %p1;
	.loc	1 43 21                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:43:21
	setp.le.f32 	%p12, %f17, 0f00000000;
	setp.le.f32 	%p13, %f16, 0f00000000;
	setp.le.f32 	%p14, %f15, 0f00000000;
	setp.le.f32 	%p15, %f14, 0f00000000;
	.loc	1 45 21                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:45:21
	setp.ge.f32 	%p16, %f17, 0f40C00000;
	setp.ge.f32 	%p17, %f16, 0f40C00000;
	setp.ge.f32 	%p18, %f15, 0f40C00000;
	setp.ge.f32 	%p19, %f14, 0f40C00000;
	.loc	1 46 20                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:46:20
	or.pred  	%p20, %p15, %p19;
	or.pred  	%p21, %p14, %p18;
	or.pred  	%p22, %p13, %p17;
	or.pred  	%p23, %p12, %p16;
	.loc	1 47 37                         // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:47:37
	selp.u32 	%r46, 1, 0, %p23;
	selp.u32 	%r47, 1, 0, %p22;
	prmt.b32 	%r48, %r47, %r46, 0x3340U;
	selp.u32 	%r49, 1, 0, %p21;
	selp.u32 	%r50, 1, 0, %p20;
	prmt.b32 	%r51, %r50, %r49, 0x3340U;
	prmt.b32 	%r52, %r51, %r48, 0x5410U;
	mov.pred 	%p11, -1;
	// begin inline asm
	@%p11 st.global.b32 [ %rd3 + 0 ], { %r52 };
	// end inline asm
	.loc	1 47 4                          // cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py:47:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/wp/cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 112
.b8 54
.b8 97
.b8 116
.b8 119
.b8 120
.b8 52
.b8 98
.b8 51
.b8 101
.b8 50
.b8 119
.b8 100
.b8 107
.b8 119
.b8 113
.b8 117
.b8 113
.b8 121
.b8 55
.b8 53
.b8 51
.b8 103
.b8 117
.b8 99
.b8 102
.b8 115
.b8 120
.b8 97
.b8 55
.b8 108
.b8 120
.b8 120
.b8 109
.b8 113
.b8 120
.b8 114
.b8 53
.b8 55
.b8 107
.b8 117
.b8 116
.b8 113
.b8 50
.b8 121
.b8 55
.b8 99
.b8 106
.b8 118
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 112
.b8 0
	}
	.section	.debug_macinfo	{	}
