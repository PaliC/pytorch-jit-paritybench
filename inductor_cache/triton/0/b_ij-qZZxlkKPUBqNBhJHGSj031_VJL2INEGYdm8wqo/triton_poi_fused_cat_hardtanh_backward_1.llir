; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_hardtanh_backward_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %.frozen = freeze i32 %9, !dbg !14
  %10 = sdiv i32 %.frozen, 256, !dbg !14
  %11 = srem i32 %10, 48, !dbg !15
  %12 = mul i32 %10, 256, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %.frozen1 = freeze i32 %9, !dbg !17
  %13 = sdiv i32 %.frozen1, 12288, !dbg !17
  %14 = icmp slt i32 %11, 24, !dbg !18
  %15 = mul i32 %13, 12288, !dbg !19
  %srem.decomposed = sub i32 %.frozen1, %15, !dbg !19
  %16 = mul nsw i32 %13, 6144, !dbg !20
  %17 = add nsw i32 %16, %srem.decomposed, !dbg !21
  %18 = sext i32 %17 to i64, !dbg !22
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !22
  %20 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %19, i1 %14, i32 0, i1 %14, i32 0, i1 %14, i32 0, i1 %14, i32 0, i1 %14) #1, !dbg !23
  %21 = extractvalue { i32, i32, i32, i32 } %20, 0, !dbg !23
  %22 = extractvalue { i32, i32, i32, i32 } %20, 1, !dbg !23
  %23 = extractvalue { i32, i32, i32, i32 } %20, 2, !dbg !23
  %24 = extractvalue { i32, i32, i32, i32 } %20, 3, !dbg !23
  %25 = icmp sgt i32 %11, 23, !dbg !24
  %26 = shl nsw i32 %11, 8, !dbg !25
  %27 = add nsw i32 %.decomposed, -6144, !dbg !25
  %28 = add nsw i32 %27, %16, !dbg !26
  %29 = add nsw i32 %28, %26, !dbg !27
  %30 = sext i32 %29 to i64, !dbg !28
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !28
  %32 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %31, i1 %25, i32 0, i1 %25, i32 0, i1 %25, i32 0, i1 %25, i32 0, i1 %25) #1, !dbg !29
  %33 = extractvalue { i32, i32, i32, i32 } %32, 0, !dbg !29
  %34 = extractvalue { i32, i32, i32, i32 } %32, 1, !dbg !29
  %35 = extractvalue { i32, i32, i32, i32 } %32, 2, !dbg !29
  %36 = extractvalue { i32, i32, i32, i32 } %32, 3, !dbg !29
  %37 = sext i32 %9 to i64, !dbg !30
  %38 = getelementptr i1, ptr addrspace(1) %1, i64 %37, !dbg !30
  %39 = insertelement <4 x i32> poison, i32 %21, i64 0, !dbg !23
  %40 = insertelement <4 x i32> %39, i32 %22, i64 1, !dbg !23
  %41 = insertelement <4 x i32> %40, i32 %23, i64 2, !dbg !23
  %42 = insertelement <4 x i32> %41, i32 %24, i64 3, !dbg !23
  %43 = bitcast <4 x i32> %42 to <4 x float>, !dbg !23
  %44 = insertelement <4 x i32> poison, i32 %33, i64 0, !dbg !29
  %45 = insertelement <4 x i32> %44, i32 %34, i64 1, !dbg !29
  %46 = insertelement <4 x i32> %45, i32 %35, i64 2, !dbg !29
  %47 = insertelement <4 x i32> %46, i32 %36, i64 3, !dbg !29
  %48 = bitcast <4 x i32> %47 to <4 x float>, !dbg !29
  %49 = fsub <4 x float> zeroinitializer, %48, !dbg !31
  %50 = insertelement <4 x i1> poison, i1 %14, i64 0, !dbg !32
  %51 = shufflevector <4 x i1> %50, <4 x i1> poison, <4 x i32> zeroinitializer, !dbg !32
  %52 = select <4 x i1> %51, <4 x float> %43, <4 x float> %49, !dbg !32
  %53 = fcmp ole <4 x float> %52, zeroinitializer, !dbg !33
  %54 = fcmp oge <4 x float> %52, splat (float 6.000000e+00), !dbg !34
  %55 = or <4 x i1> %53, %54, !dbg !35
  %56 = zext <4 x i1> %55 to <4 x i8>, !dbg !36
  %57 = bitcast <4 x i8> %56 to i32, !dbg !36
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %57, ptr addrspace(1) %38, i1 true) #1, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cwp6atwx4b3e2wdkwquqy753gucfsxa7lxxmqxr57kutq2y7cjvk.py", directory: "inductor_cache/wp")
!4 = !{ptr @triton_poi_fused_cat_hardtanh_backward_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_hardtanh_backward_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_hardtanh_backward_1", linkageName: "triton_poi_fused_cat_hardtanh_backward_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 32, column: 18, scope: !7)
!19 = !DILocation(line: 33, column: 35, scope: !7)
!20 = !DILocation(line: 33, column: 51, scope: !7)
!21 = !DILocation(line: 33, column: 46, scope: !7)
!22 = !DILocation(line: 33, column: 30, scope: !7)
!23 = !DILocation(line: 33, column: 56, scope: !7)
!24 = !DILocation(line: 34, column: 19, scope: !7)
!25 = !DILocation(line: 37, column: 40, scope: !7)
!26 = !DILocation(line: 37, column: 35, scope: !7)
!27 = !DILocation(line: 37, column: 54, scope: !7)
!28 = !DILocation(line: 37, column: 30, scope: !7)
!29 = !DILocation(line: 37, column: 64, scope: !7)
!30 = !DILocation(line: 47, column: 25, scope: !7)
!31 = !DILocation(line: 38, column: 13, scope: !7)
!32 = !DILocation(line: 41, column: 33, scope: !7)
!33 = !DILocation(line: 43, column: 21, scope: !7)
!34 = !DILocation(line: 45, column: 21, scope: !7)
!35 = !DILocation(line: 46, column: 20, scope: !7)
!36 = !DILocation(line: 47, column: 37, scope: !7)
!37 = !DILocation(line: 47, column: 4, scope: !7)
