; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mul_native_group_norm_sigmoid_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %10 = shl i32 %9, 9, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 1, !dbg !12
  %13 = and i32 %12, 510, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = sdiv i32 %14, 4096, !dbg !14
  %16 = srem i32 %15, 128, !dbg !15
  %17 = sext i32 %14 to i64, !dbg !16
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !16
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %18, i1 true) #1, !dbg !17
  %20 = extractvalue { i32, i32 } %19, 0, !dbg !17
  %21 = extractvalue { i32, i32 } %19, 1, !dbg !17
  %22 = bitcast i32 %20 to float, !dbg !17
  %23 = bitcast i32 %21 to float, !dbg !17
  %24 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !18
  %25 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %24, i1 true) #1, !dbg !19
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !19
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !19
  %28 = bitcast i32 %26 to float, !dbg !19
  %29 = bitcast i32 %27 to float, !dbg !19
  %30 = sdiv i32 %14, 16384, !dbg !20
  %31 = sext i32 %30 to i64, !dbg !21
  %32 = getelementptr float, ptr addrspace(1) %3, i64 %31, !dbg !21
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 true) #1, !dbg !22
  %34 = bitcast i32 %33 to float, !dbg !22
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 true) #1, !dbg !22
  %36 = bitcast i32 %35 to float, !dbg !22
  %37 = getelementptr float, ptr addrspace(1) %4, i64 %31, !dbg !23
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 true) #1, !dbg !24
  %39 = bitcast i32 %38 to float, !dbg !24
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 true) #1, !dbg !24
  %41 = bitcast i32 %40 to float, !dbg !24
  %42 = sext i32 %16 to i64, !dbg !25
  %43 = getelementptr float, ptr addrspace(1) %5, i64 %42, !dbg !25
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 true) #1, !dbg !26
  %45 = bitcast i32 %44 to float, !dbg !26
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 true) #1, !dbg !26
  %47 = bitcast i32 %46 to float, !dbg !26
  %48 = getelementptr float, ptr addrspace(1) %6, i64 %42, !dbg !27
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 true) #1, !dbg !28
  %50 = bitcast i32 %49 to float, !dbg !28
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 true) #1, !dbg !28
  %52 = bitcast i32 %51 to float, !dbg !28
  %53 = fadd float %22, %28, !dbg !29
  %54 = fadd float %23, %29, !dbg !29
  %55 = fsub float %53, %34, !dbg !30
  %56 = fsub float %54, %36, !dbg !30
  %57 = fmul float %55, %39, !dbg !31
  %58 = fmul float %56, %41, !dbg !31
  %59 = fmul float %57, %45, !dbg !32
  %60 = fmul float %58, %47, !dbg !32
  %61 = fadd float %59, %50, !dbg !33
  %62 = fadd float %60, %52, !dbg !33
  %63 = fsub float 0.000000e+00, %61, !dbg !34
  %64 = fsub float 0.000000e+00, %62, !dbg !34
  %65 = fmul float %63, 0x3FF7154760000000, !dbg !38
  %66 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %65) #1, !dbg !38
  %67 = fmul float %64, 0x3FF7154760000000, !dbg !38
  %68 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %67) #1, !dbg !38
  %69 = fadd float %66, 1.000000e+00, !dbg !39
  %70 = fadd float %68, 1.000000e+00, !dbg !39
  %71 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %69) #1, !dbg !40
  %72 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %70) #1, !dbg !40
  %73 = fmul float %61, %71, !dbg !41
  %74 = fmul float %62, %72, !dbg !41
  %75 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !42
  %76 = bitcast float %73 to i32, !dbg !43
  %77 = bitcast float %74 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %76, i32 %77, ptr addrspace(1) %75, i1 true) #1, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cxof25pgxy3ucfwfjqoouu47ifehbfkssadnzw66kqeac7xuqp7n.py", directory: "inductor_cache/xo")
!4 = !{ptr @triton_poi_fused_mul_native_group_norm_sigmoid_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mul_native_group_norm_sigmoid_4, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mul_native_group_norm_sigmoid_4", linkageName: "triton_poi_fused_mul_native_group_norm_sigmoid_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 26, column: 29, scope: !7)
!16 = !DILocation(line: 27, column: 30, scope: !7)
!17 = !DILocation(line: 27, column: 35, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 29, column: 36, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 40, scope: !7)
!23 = !DILocation(line: 30, column: 30, scope: !7)
!24 = !DILocation(line: 30, column: 40, scope: !7)
!25 = !DILocation(line: 31, column: 30, scope: !7)
!26 = !DILocation(line: 31, column: 35, scope: !7)
!27 = !DILocation(line: 32, column: 30, scope: !7)
!28 = !DILocation(line: 32, column: 35, scope: !7)
!29 = !DILocation(line: 33, column: 18, scope: !7)
!30 = !DILocation(line: 34, column: 18, scope: !7)
!31 = !DILocation(line: 35, column: 18, scope: !7)
!32 = !DILocation(line: 36, column: 18, scope: !7)
!33 = !DILocation(line: 37, column: 19, scope: !7)
!34 = !DILocation(line: 47, column: 30, scope: !35, inlinedAt: !37)
!35 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!36 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!37 = !DILocation(line: 38, column: 23, scope: !7)
!38 = !DILocation(line: 47, column: 29, scope: !35, inlinedAt: !37)
!39 = !DILocation(line: 47, column: 20, scope: !35, inlinedAt: !37)
!40 = !DILocation(line: 47, column: 16, scope: !35, inlinedAt: !37)
!41 = !DILocation(line: 39, column: 20, scope: !7)
!42 = !DILocation(line: 40, column: 28, scope: !7)
!43 = !DILocation(line: 40, column: 40, scope: !7)
!44 = !DILocation(line: 40, column: 4, scope: !7)
