; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_cat_div_native_group_norm_relu_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %11 = shl i32 %10, 9, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = shl i32 %12, 1, !dbg !12
  %14 = and i32 %13, 510, !dbg !12
  %15 = or disjoint i32 %11, %14, !dbg !13
  %16 = sdiv i32 %15, 4096, !dbg !14
  %17 = srem i32 %16, 256, !dbg !15
  %.frozen = freeze i32 %15, !dbg !16
  %18 = sdiv i32 %.frozen, 1048576, !dbg !16
  %19 = mul i32 %18, 1048576, !dbg !17
  %.decomposed = sub i32 %.frozen, %19, !dbg !17
  %20 = sext i32 %15 to i64, !dbg !18
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !18
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !19
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !19
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !19
  %25 = bitcast i32 %23 to float, !dbg !19
  %26 = bitcast i32 %24 to float, !dbg !19
  %27 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !20
  %28 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !21
  %29 = extractvalue { i32, i32 } %28, 0, !dbg !21
  %30 = extractvalue { i32, i32 } %28, 1, !dbg !21
  %31 = bitcast i32 %29 to float, !dbg !21
  %32 = bitcast i32 %30 to float, !dbg !21
  %33 = sdiv i32 %15, 131072, !dbg !22
  %34 = sext i32 %33 to i64, !dbg !23
  %35 = getelementptr float, ptr addrspace(1) %2, i64 %34, !dbg !23
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #1, !dbg !24
  %37 = bitcast i32 %36 to float, !dbg !24
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #1, !dbg !24
  %39 = bitcast i32 %38 to float, !dbg !24
  %40 = getelementptr float, ptr addrspace(1) %3, i64 %34, !dbg !25
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #1, !dbg !26
  %42 = bitcast i32 %41 to float, !dbg !26
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #1, !dbg !26
  %44 = bitcast i32 %43 to float, !dbg !26
  %45 = sext i32 %17 to i64, !dbg !27
  %46 = getelementptr float, ptr addrspace(1) %4, i64 %45, !dbg !27
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #1, !dbg !28
  %48 = bitcast i32 %47 to float, !dbg !28
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #1, !dbg !28
  %50 = bitcast i32 %49 to float, !dbg !28
  %51 = getelementptr float, ptr addrspace(1) %5, i64 %45, !dbg !29
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 true) #1, !dbg !30
  %53 = bitcast i32 %52 to float, !dbg !30
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 true) #1, !dbg !30
  %55 = bitcast i32 %54 to float, !dbg !30
  %56 = fsub float %31, %37, !dbg !31
  %57 = fsub float %32, %39, !dbg !31
  %58 = fmul float %56, %42, !dbg !32
  %59 = fmul float %57, %44, !dbg !32
  %60 = fmul float %58, %48, !dbg !33
  %61 = fmul float %59, %50, !dbg !33
  %62 = fadd float %60, %53, !dbg !34
  %63 = fadd float %61, %55, !dbg !34
  %64 = fcmp olt float %62, 0.000000e+00, !dbg !35
  %65 = fcmp olt float %63, 0.000000e+00, !dbg !35
  %66 = select i1 %64, float 0.000000e+00, float %62, !dbg !39
  %67 = select i1 %65, float 0.000000e+00, float %63, !dbg !39
  %68 = fadd float %66, %25, !dbg !40
  %69 = fadd float %67, %26, !dbg !40
  %70 = fmul float %68, 0x3FE6A17E60000000, !dbg !41
  %71 = fmul float %69, 0x3FE6A17E60000000, !dbg !41
  %72 = getelementptr float, ptr addrspace(1) %6, i64 %20, !dbg !42
  %73 = bitcast float %70 to i32, !dbg !43
  %74 = bitcast float %71 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %73, i32 %74, ptr addrspace(1) %72, i1 true) #1, !dbg !43
  %75 = shl i32 %18, 21, !dbg !44
  %76 = add i32 %75, %.decomposed, !dbg !45
  %77 = sext i32 %76 to i64, !dbg !46
  %78 = getelementptr float, ptr addrspace(1) %7, i64 %77, !dbg !46
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %73, i32 %74, ptr addrspace(1) %78, i1 true) #1, !dbg !47
  ret void, !dbg !48
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "camgc5wjv32d7sepvqzqz4maynmvt2jf62ac6ngqpofxg2g353jd.py", directory: "inductor_cache/am")
!4 = !{ptr @triton_poi_fused_add_cat_div_native_group_norm_relu_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_cat_div_native_group_norm_relu_3, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_cat_div_native_group_norm_relu_3", linkageName: "triton_poi_fused_add_cat_div_native_group_norm_relu_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 26, column: 29, scope: !7)
!16 = !DILocation(line: 27, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 19, scope: !7)
!18 = !DILocation(line: 29, column: 30, scope: !7)
!19 = !DILocation(line: 29, column: 35, scope: !7)
!20 = !DILocation(line: 30, column: 30, scope: !7)
!21 = !DILocation(line: 30, column: 35, scope: !7)
!22 = !DILocation(line: 31, column: 36, scope: !7)
!23 = !DILocation(line: 31, column: 30, scope: !7)
!24 = !DILocation(line: 31, column: 41, scope: !7)
!25 = !DILocation(line: 32, column: 30, scope: !7)
!26 = !DILocation(line: 32, column: 41, scope: !7)
!27 = !DILocation(line: 33, column: 30, scope: !7)
!28 = !DILocation(line: 33, column: 35, scope: !7)
!29 = !DILocation(line: 34, column: 30, scope: !7)
!30 = !DILocation(line: 34, column: 35, scope: !7)
!31 = !DILocation(line: 35, column: 18, scope: !7)
!32 = !DILocation(line: 36, column: 18, scope: !7)
!33 = !DILocation(line: 37, column: 18, scope: !7)
!34 = !DILocation(line: 38, column: 18, scope: !7)
!35 = !DILocation(line: 118, column: 15, scope: !36, inlinedAt: !38)
!36 = distinct !DILexicalBlockFile(scope: !7, file: !37, discriminator: 0)
!37 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!38 = !DILocation(line: 40, column: 42, scope: !7)
!39 = !DILocation(line: 121, column: 29, scope: !36, inlinedAt: !38)
!40 = !DILocation(line: 41, column: 19, scope: !7)
!41 = !DILocation(line: 43, column: 20, scope: !7)
!42 = !DILocation(line: 44, column: 25, scope: !7)
!43 = !DILocation(line: 44, column: 37, scope: !7)
!44 = !DILocation(line: 45, column: 38, scope: !7)
!45 = !DILocation(line: 45, column: 30, scope: !7)
!46 = !DILocation(line: 45, column: 25, scope: !7)
!47 = !DILocation(line: 45, column: 50, scope: !7)
!48 = !DILocation(line: 45, column: 4, scope: !7)
