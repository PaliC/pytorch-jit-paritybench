#loc = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":19:0)
module {
  tt.func public @triton_poi_fused_leaky_relu_mean_relu_13(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.00999999977> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<3072> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<2048> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<4096> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<1024> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_5 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_5 : tensor<256xi32> loc(#loc7)
    %7 = arith.muli %6, %cst_4 : tensor<256xi32> loc(#loc8)
    %8 = arith.addi %5, %7 : tensor<256xi32> loc(#loc9)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc10)
    %10 = tt.addptr %9, %8 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc10)
    %11 = tt.load %10 : tensor<256x!tt.ptr<f32>> loc(#loc11)
    %12 = arith.addi %5, %cst_5 : tensor<256xi32> loc(#loc12)
    %13 = arith.addi %12, %7 : tensor<256xi32> loc(#loc13)
    %14 = tt.addptr %9, %13 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc14)
    %15 = tt.load %14 : tensor<256x!tt.ptr<f32>> loc(#loc15)
    %16 = arith.addi %5, %cst_3 : tensor<256xi32> loc(#loc16)
    %17 = arith.addi %16, %7 : tensor<256xi32> loc(#loc17)
    %18 = tt.addptr %9, %17 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc18)
    %19 = tt.load %18 : tensor<256x!tt.ptr<f32>> loc(#loc19)
    %20 = arith.addi %5, %cst_2 : tensor<256xi32> loc(#loc20)
    %21 = arith.addi %20, %7 : tensor<256xi32> loc(#loc21)
    %22 = tt.addptr %9, %21 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc22)
    %23 = tt.load %22 : tensor<256x!tt.ptr<f32>> loc(#loc23)
    %24 = arith.cmpf ogt, %11, %cst_1 : tensor<256xf32> loc(#loc24)
    %25 = arith.mulf %11, %cst_0 : tensor<256xf32> loc(#loc25)
    %26 = arith.select %24, %11, %25 : tensor<256xi1>, tensor<256xf32> loc(#loc26)
    %27 = arith.cmpf ogt, %cst_1, %26 : tensor<256xf32> loc(#loc61)
    %28 = arith.select %27, %cst_1, %26 : tensor<256xi1>, tensor<256xf32> loc(#loc62)
    %29 = arith.cmpf ogt, %cst_1, %28 : tensor<256xf32> loc(#loc63)
    %30 = arith.select %29, %cst_1, %28 : tensor<256xi1>, tensor<256xf32> loc(#loc64)
    %31 = arith.cmpf ogt, %cst_1, %30 : tensor<256xf32> loc(#loc65)
    %32 = arith.select %31, %cst_1, %30 : tensor<256xi1>, tensor<256xf32> loc(#loc66)
    %33 = arith.cmpf ogt, %cst_1, %32 : tensor<256xf32> loc(#loc67)
    %34 = arith.select %33, %cst_1, %32 : tensor<256xi1>, tensor<256xf32> loc(#loc68)
    %35 = arith.cmpf ogt, %15, %cst_1 : tensor<256xf32> loc(#loc33)
    %36 = arith.mulf %15, %cst_0 : tensor<256xf32> loc(#loc34)
    %37 = arith.select %35, %15, %36 : tensor<256xi1>, tensor<256xf32> loc(#loc35)
    %38 = arith.cmpf ogt, %cst_1, %37 : tensor<256xf32> loc(#loc69)
    %39 = arith.select %38, %cst_1, %37 : tensor<256xi1>, tensor<256xf32> loc(#loc70)
    %40 = arith.cmpf ogt, %cst_1, %39 : tensor<256xf32> loc(#loc71)
    %41 = arith.select %40, %cst_1, %39 : tensor<256xi1>, tensor<256xf32> loc(#loc72)
    %42 = arith.cmpf ogt, %cst_1, %41 : tensor<256xf32> loc(#loc73)
    %43 = arith.select %42, %cst_1, %41 : tensor<256xi1>, tensor<256xf32> loc(#loc74)
    %44 = arith.cmpf ogt, %cst_1, %43 : tensor<256xf32> loc(#loc75)
    %45 = arith.select %44, %cst_1, %43 : tensor<256xi1>, tensor<256xf32> loc(#loc76)
    %46 = arith.addf %34, %45 : tensor<256xf32> loc(#loc40)
    %47 = arith.cmpf ogt, %19, %cst_1 : tensor<256xf32> loc(#loc41)
    %48 = arith.mulf %19, %cst_0 : tensor<256xf32> loc(#loc42)
    %49 = arith.select %47, %19, %48 : tensor<256xi1>, tensor<256xf32> loc(#loc43)
    %50 = arith.cmpf ogt, %cst_1, %49 : tensor<256xf32> loc(#loc77)
    %51 = arith.select %50, %cst_1, %49 : tensor<256xi1>, tensor<256xf32> loc(#loc78)
    %52 = arith.cmpf ogt, %cst_1, %51 : tensor<256xf32> loc(#loc79)
    %53 = arith.select %52, %cst_1, %51 : tensor<256xi1>, tensor<256xf32> loc(#loc80)
    %54 = arith.cmpf ogt, %cst_1, %53 : tensor<256xf32> loc(#loc81)
    %55 = arith.select %54, %cst_1, %53 : tensor<256xi1>, tensor<256xf32> loc(#loc82)
    %56 = arith.cmpf ogt, %cst_1, %55 : tensor<256xf32> loc(#loc83)
    %57 = arith.select %56, %cst_1, %55 : tensor<256xi1>, tensor<256xf32> loc(#loc84)
    %58 = arith.addf %46, %57 : tensor<256xf32> loc(#loc48)
    %59 = arith.cmpf ogt, %23, %cst_1 : tensor<256xf32> loc(#loc49)
    %60 = arith.mulf %23, %cst_0 : tensor<256xf32> loc(#loc50)
    %61 = arith.select %59, %23, %60 : tensor<256xi1>, tensor<256xf32> loc(#loc51)
    %62 = arith.cmpf ogt, %cst_1, %61 : tensor<256xf32> loc(#loc85)
    %63 = arith.select %62, %cst_1, %61 : tensor<256xi1>, tensor<256xf32> loc(#loc86)
    %64 = arith.cmpf ogt, %cst_1, %63 : tensor<256xf32> loc(#loc87)
    %65 = arith.select %64, %cst_1, %63 : tensor<256xi1>, tensor<256xf32> loc(#loc88)
    %66 = arith.cmpf ogt, %cst_1, %65 : tensor<256xf32> loc(#loc89)
    %67 = arith.select %66, %cst_1, %65 : tensor<256xi1>, tensor<256xf32> loc(#loc90)
    %68 = arith.cmpf ogt, %cst_1, %67 : tensor<256xf32> loc(#loc91)
    %69 = arith.select %68, %cst_1, %67 : tensor<256xi1>, tensor<256xf32> loc(#loc92)
    %70 = arith.addf %58, %69 : tensor<256xf32> loc(#loc56)
    %71 = arith.divf %70, %cst : tensor<256xf32> loc(#loc57)
    %72 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc58)
    %73 = tt.addptr %72, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc58)
    tt.store %73, %71 : tensor<256x!tt.ptr<f32>> loc(#loc59)
    tt.return loc(#loc60)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":21:28)
#loc3 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":21:33)
#loc4 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":22:36)
#loc5 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":22:23)
#loc6 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":24:19)
#loc7 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":25:19)
#loc8 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":27:40)
#loc9 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":27:35)
#loc10 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":27:30)
#loc11 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":27:45)
#loc12 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":28:38)
#loc13 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":28:43)
#loc14 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":28:31)
#loc15 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":28:53)
#loc16 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":29:38)
#loc17 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":29:43)
#loc18 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":29:31)
#loc19 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":29:53)
#loc20 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":30:38)
#loc21 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":30:43)
#loc22 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":30:31)
#loc23 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":30:53)
#loc24 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":32:18)
#loc25 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":34:18)
#loc26 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":35:32)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc28 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":37:40)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc30 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":38:40)
#loc31 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":39:40)
#loc32 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":40:41)
#loc33 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":41:20)
#loc34 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":42:20)
#loc35 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":43:35)
#loc36 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":44:41)
#loc37 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":45:41)
#loc38 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":46:41)
#loc39 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":47:41)
#loc40 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":48:20)
#loc41 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":49:20)
#loc42 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":50:20)
#loc43 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":51:35)
#loc44 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":52:41)
#loc45 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":53:41)
#loc46 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":54:41)
#loc47 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":55:41)
#loc48 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":56:20)
#loc49 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":57:20)
#loc50 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":58:20)
#loc51 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":59:35)
#loc52 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":60:41)
#loc53 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":61:41)
#loc54 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":62:41)
#loc55 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":63:41)
#loc56 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":64:20)
#loc57 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":66:20)
#loc58 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":67:25)
#loc59 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":67:37)
#loc60 = loc("inductor_cache/do/cdorzmcnyoypctbdj2qyzqc55cwnum64ltsignsly6llsyqqymie.py":67:4)
#loc61 = loc(callsite(#loc27 at #loc28))
#loc62 = loc(callsite(#loc29 at #loc28))
#loc63 = loc(callsite(#loc27 at #loc30))
#loc64 = loc(callsite(#loc29 at #loc30))
#loc65 = loc(callsite(#loc27 at #loc31))
#loc66 = loc(callsite(#loc29 at #loc31))
#loc67 = loc(callsite(#loc27 at #loc32))
#loc68 = loc(callsite(#loc29 at #loc32))
#loc69 = loc(callsite(#loc27 at #loc36))
#loc70 = loc(callsite(#loc29 at #loc36))
#loc71 = loc(callsite(#loc27 at #loc37))
#loc72 = loc(callsite(#loc29 at #loc37))
#loc73 = loc(callsite(#loc27 at #loc38))
#loc74 = loc(callsite(#loc29 at #loc38))
#loc75 = loc(callsite(#loc27 at #loc39))
#loc76 = loc(callsite(#loc29 at #loc39))
#loc77 = loc(callsite(#loc27 at #loc44))
#loc78 = loc(callsite(#loc29 at #loc44))
#loc79 = loc(callsite(#loc27 at #loc45))
#loc80 = loc(callsite(#loc29 at #loc45))
#loc81 = loc(callsite(#loc27 at #loc46))
#loc82 = loc(callsite(#loc29 at #loc46))
#loc83 = loc(callsite(#loc27 at #loc47))
#loc84 = loc(callsite(#loc29 at #loc47))
#loc85 = loc(callsite(#loc27 at #loc52))
#loc86 = loc(callsite(#loc29 at #loc52))
#loc87 = loc(callsite(#loc27 at #loc53))
#loc88 = loc(callsite(#loc29 at #loc53))
#loc89 = loc(callsite(#loc27 at #loc54))
#loc90 = loc(callsite(#loc29 at #loc54))
#loc91 = loc(callsite(#loc27 at #loc55))
#loc92 = loc(callsite(#loc29 at #loc55))
