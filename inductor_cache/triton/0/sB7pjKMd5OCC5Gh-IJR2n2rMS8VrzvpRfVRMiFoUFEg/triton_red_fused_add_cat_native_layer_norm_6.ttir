#loc = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0)
#loc1 = loc(unknown)
#loc43 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":62:44)
#loc81 = loc(callsite(#loc1 at #loc43))
module {
  tt.func public @triton_red_fused_add_cat_native_layer_norm_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg10: i32 loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0)) attributes {noinline = false} {
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c-1_i32 = arith.constant -1 : i32 loc(#loc1)
    %c12288_i32 = arith.constant 12288 : i32 loc(#loc1)
    %c1_i64 = arith.constant 1 : i64 loc(#loc1)
    %c768_i32 = arith.constant 768 : i32 loc(#loc1)
    %c17_i32 = arith.constant 17 : i32 loc(#loc1)
    %c68_i32 = arith.constant 68 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x1024xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<7.680000e+02> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<1x1024xi32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<1x1024xf32> loc(#loc1)
    %cst_5 = arith.constant dense<768> : tensor<1x1024xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c68_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<1024xi32> -> tensor<1x1024xi32> loc(#loc5)
    %5 = arith.remsi %0, %c17_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c17_i32 : i32 loc(#loc7)
    %7 = arith.cmpi slt, %4, %cst_5 : tensor<1x1024xi32> loc(#loc8)
    %8 = arith.muli %5, %c768_i32 : i32 loc(#loc9)
    %9 = tt.splat %8 : i32 -> tensor<1x1024xi32> loc(#loc10)
    %10 = arith.addi %4, %9 : tensor<1x1024xi32> loc(#loc10)
    %11 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.addptr %11, %10 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc11)
    %13 = tt.splat %1 : i1 -> tensor<1x1024xi1> loc(#loc12)
    %14 = arith.andi %7, %13 : tensor<1x1024xi1> loc(#loc12)
    %15 = tt.load %12, %14, %cst_4 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>> loc(#loc13)
    %16 = arith.extsi %5 : i32 to i64 loc(#loc14)
    %17 = arith.cmpi slt, %16, %c1_i64 : i64 loc(#loc14)
    %18 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.addptr %18, %4 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc15)
    %20 = tt.splat %17 : i1 -> tensor<1x1024xi1> loc(#loc16)
    %21 = arith.andi %7, %20 : tensor<1x1024xi1> loc(#loc16)
    %22 = arith.andi %21, %13 : tensor<1x1024xi1> loc(#loc17)
    %23 = tt.load %19, %22, %cst_4 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>> loc(#loc18)
    %24 = arith.cmpi sge, %16, %c1_i64 : i64 loc(#loc19)
    %25 = arith.muli %4, %cst_3 : tensor<1x1024xi32> loc(#loc20)
    %26 = arith.muli %6, %c12288_i32 : i32 loc(#loc21)
    %27 = tt.splat %26 : i32 -> tensor<1x1024xi32> loc(#loc22)
    %28 = arith.addi %25, %27 : tensor<1x1024xi32> loc(#loc22)
    %29 = arith.addi %5, %c-1_i32 : i32 loc(#loc23)
    %30 = arith.remsi %29, %c16_i32 : i32 loc(#loc24)
    %31 = tt.splat %30 : i32 -> tensor<1x1024xi32> loc(#loc25)
    %32 = arith.addi %28, %31 : tensor<1x1024xi32> loc(#loc25)
    %33 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc26)
    %34 = tt.addptr %33, %32 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc26)
    %35 = tt.splat %24 : i1 -> tensor<1x1024xi1> loc(#loc27)
    %36 = arith.andi %7, %35 : tensor<1x1024xi1> loc(#loc27)
    %37 = arith.andi %36, %13 : tensor<1x1024xi1> loc(#loc28)
    %38 = tt.load %34, %37, %cst_4 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>> loc(#loc29)
    %39 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc30)
    %40 = tt.addptr %39, %4 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc30)
    %41 = tt.load %40, %37, %cst_4 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>> loc(#loc31)
    %42 = arith.addf %38, %41 : tensor<1x1024xf32> loc(#loc32)
    %43 = arith.select %35, %42, %cst_4 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc33)
    %44 = arith.select %20, %23, %43 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc34)
    %45 = arith.addf %44, %15 : tensor<1x1024xf32> loc(#loc35)
    %46 = arith.select %14, %45, %cst_4 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc36)
    %47 = arith.select %14, %cst_0, %cst_4 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc37)
    %48 = arith.muli %0, %c768_i32 : i32 loc(#loc38)
    %49 = tt.splat %48 : i32 -> tensor<1x1024xi32> loc(#loc39)
    %50 = arith.addi %4, %49 : tensor<1x1024xi32> loc(#loc39)
    %51 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc40)
    %52 = tt.addptr %51, %50 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc40)
    tt.store %52, %44, %14 : tensor<1x1024x!tt.ptr<f32>> loc(#loc41)
    %53:3 = "tt.reduce"(%46, %cst_4, %47) <{axis = 1 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc43)), %arg13: f32 loc(callsite(#loc1 at #loc43)), %arg14: f32 loc(callsite(#loc1 at #loc43)), %arg15: f32 loc(callsite(#loc1 at #loc43)), %arg16: f32 loc(callsite(#loc1 at #loc43)), %arg17: f32 loc(callsite(#loc1 at #loc43))):
      %80 = arith.subf %arg15, %arg12 : f32 loc(#loc94)
      %81 = arith.addf %arg14, %arg17 : f32 loc(#loc95)
      %82 = arith.cmpf oeq, %81, %cst : f32 loc(#loc96)
      %83 = arith.divf %arg17, %81 : f32 loc(#loc97)
      %84 = arith.select %82, %cst, %83 : f32 loc(#loc98)
      %85 = arith.mulf %80, %84 : f32 loc(#loc99)
      %86 = arith.addf %arg12, %85 : f32 loc(#loc100)
      %87 = arith.addf %arg13, %arg16 : f32 loc(#loc101)
      %88 = arith.mulf %80, %80 : f32 loc(#loc102)
      %89 = arith.mulf %88, %arg14 : f32 loc(#loc103)
      %90 = arith.mulf %89, %84 : f32 loc(#loc104)
      %91 = arith.addf %87, %90 : f32 loc(#loc105)
      tt.reduce.return %86, %91, %81 : f32, f32, f32 loc(#loc80)
    }) : (tensor<1x1024xf32>, tensor<1x1024xf32>, tensor<1x1024xf32>) -> (tensor<1xf32>, tensor<1xf32>, tensor<1xf32>) loc(#loc80)
    %54 = tt.expand_dims %53#0 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc56)
    %55 = tt.expand_dims %53#1 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc57)
    %56 = tt.addptr %arg8, %0 : !tt.ptr<f32>, i32 loc(#loc58)
    %57 = tt.splat %56 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc58)
    tt.store %57, %54, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc59)
    %58 = arith.divf %55, %cst_2 : tensor<1x1xf32> loc(#loc60)
    %59 = arith.addf %58, %cst_1 : tensor<1x1xf32> loc(#loc61)
    %60 = tt.extern_elementwise %59 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc62)
    gpu.barrier loc(#loc63)
    %61 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc64)
    %62 = tt.splat %61 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc64)
    tt.store %62, %60, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc65)
    %63 = tt.load %52, %14, %cst_4 evictionPolicy = evict_first : tensor<1x1024x!tt.ptr<f32>> loc(#loc66)
    %64 = tt.load %12, %14, %cst_4 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>> loc(#loc67)
    %65 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc68)
    %66 = tt.addptr %65, %4 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc68)
    %67 = tt.load %66, %7, %cst_4 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>> loc(#loc69)
    %68 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc70)
    %69 = tt.addptr %68, %4 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc70)
    %70 = tt.load %69, %7, %cst_4 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>> loc(#loc71)
    %71 = arith.addf %63, %64 : tensor<1x1024xf32> loc(#loc72)
    %72 = tt.broadcast %54 : tensor<1x1xf32> -> tensor<1x1024xf32> loc(#loc73)
    %73 = arith.subf %71, %72 : tensor<1x1024xf32> loc(#loc73)
    %74 = tt.broadcast %60 : tensor<1x1xf32> -> tensor<1x1024xf32> loc(#loc74)
    %75 = arith.mulf %73, %74 : tensor<1x1024xf32> loc(#loc74)
    %76 = arith.mulf %75, %67 : tensor<1x1024xf32> loc(#loc75)
    %77 = arith.addf %76, %70 : tensor<1x1024xf32> loc(#loc76)
    %78 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc77)
    %79 = tt.addptr %78, %50 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc77)
    tt.store %79, %77, %14 : tensor<1x1024x!tt.ptr<f32>> loc(#loc78)
    tt.return loc(#loc79)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":22:28)
#loc3 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":24:21)
#loc4 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":25:25)
#loc5 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":25:33)
#loc6 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":26:19)
#loc7 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":27:19)
#loc8 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":34:25)
#loc9 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:44)
#loc10 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:40)
#loc11 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:35)
#loc12 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:57)
#loc13 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:49)
#loc14 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":41:22)
#loc15 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":42:34)
#loc16 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":42:82)
#loc17 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":42:89)
#loc18 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":42:74)
#loc19 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":43:23)
#loc20 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:37)
#loc21 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:48)
#loc22 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:42)
#loc23 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:63)
#loc24 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:69)
#loc25 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:55)
#loc26 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:34)
#loc27 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:84)
#loc28 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:91)
#loc29 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:76)
#loc30 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":47:35)
#loc31 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":47:75)
#loc32 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":48:23)
#loc33 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":50:38)
#loc34 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":51:37)
#loc35 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":52:24)
#loc36 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":57:62)
#loc37 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":59:66)
#loc38 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":60:38)
#loc39 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":60:34)
#loc40 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":60:29)
#loc41 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":60:50)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc56 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":64:22)
#loc57 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":65:22)
#loc58 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":67:25)
#loc59 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":67:37)
#loc60 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":69:20)
#loc61 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":71:20)
#loc62 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":72:28)
#loc63 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":73:4)
#loc64 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":74:28)
#loc65 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":74:40)
#loc66 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":79:50)
#loc67 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":80:49)
#loc68 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":81:35)
#loc69 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":81:40)
#loc70 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":82:35)
#loc71 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":82:40)
#loc72 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":83:24)
#loc73 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":84:24)
#loc74 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":85:24)
#loc75 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":86:24)
#loc76 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":87:24)
#loc77 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":88:29)
#loc78 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":88:50)
#loc79 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":75:4)
#loc80 = loc(callsite(#loc42 at #loc43))
#loc82 = loc(callsite(#loc44 at #loc42))
#loc83 = loc(callsite(#loc45 at #loc42))
#loc84 = loc(callsite(#loc46 at #loc42))
#loc85 = loc(callsite(#loc47 at #loc42))
#loc86 = loc(callsite(#loc48 at #loc42))
#loc87 = loc(callsite(#loc49 at #loc42))
#loc88 = loc(callsite(#loc50 at #loc42))
#loc89 = loc(callsite(#loc51 at #loc42))
#loc90 = loc(callsite(#loc52 at #loc42))
#loc91 = loc(callsite(#loc53 at #loc42))
#loc92 = loc(callsite(#loc54 at #loc42))
#loc93 = loc(callsite(#loc55 at #loc42))
#loc94 = loc(callsite(#loc82 at #loc43))
#loc95 = loc(callsite(#loc83 at #loc43))
#loc96 = loc(callsite(#loc84 at #loc43))
#loc97 = loc(callsite(#loc85 at #loc43))
#loc98 = loc(callsite(#loc86 at #loc43))
#loc99 = loc(callsite(#loc87 at #loc43))
#loc100 = loc(callsite(#loc88 at #loc43))
#loc101 = loc(callsite(#loc89 at #loc43))
#loc102 = loc(callsite(#loc90 at #loc43))
#loc103 = loc(callsite(#loc91 at #loc43))
#loc104 = loc(callsite(#loc92 at #loc43))
#loc105 = loc(callsite(#loc93 at #loc43))
