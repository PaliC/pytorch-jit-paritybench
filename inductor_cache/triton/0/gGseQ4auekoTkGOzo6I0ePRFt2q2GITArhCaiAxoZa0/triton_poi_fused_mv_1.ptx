//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_mv_1   // -- Begin function triton_poi_fused_mv_1
                                        // @triton_poi_fused_mv_1
.visible .entry triton_poi_fused_mv_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_1_param_2,
	.param .u32 triton_poi_fused_mv_1_param_3
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<33>;
	.reg .f32 	%f<21>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_mv_1_param_0];
	ld.param.u64 	%rd2, [triton_poi_fused_mv_1_param_1];
$L__tmp0:
	.loc	1 21 28                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:21:33
	shl.b32 	%r16, %r1, 6;
	ld.param.u64 	%rd11, [triton_poi_fused_mv_1_param_2];
	.loc	1 22 36                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:22:36
	mov.u32 	%r17, %tid.x;
	shl.b32 	%r18, %r17, 1;
	and.b32  	%r19, %r18, 62;
	.loc	1 22 23                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:22:23
	or.b32  	%r20, %r16, %r19;
	.loc	1 23 21                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:23:21
	setp.lt.s32 	%p1, %r20, 64;
	.loc	1 25 40                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:25:40
	shr.s32 	%r22, %r20, 31;
	shr.u32 	%r23, %r22, 30;
	add.s32 	%r24, %r20, %r23;
	.loc	1 25 34                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:25:34
	shl.b32 	%r25, %r24, 2;
	and.b32  	%r26, %r25, -16;
	.loc	1 25 52                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:25:52
	and.b32  	%r27, %r24, -4;
	sub.s32 	%r28, %r20, %r27;
	.loc	1 25 47                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:25:47
	add.s32 	%r29, %r26, %r28;
	.loc	1 25 30                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:25:30
	mul.wide.s32 	%rd12, %r29, 4;
	add.s64 	%rd1, %rd10, %rd12;
	.loc	1 25 58                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:25:58
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.pred 	%p2, -1;
	.loc	1 26 19                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:26:19
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p2 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	.loc	1 28 51                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:28:51
	add.s32 	%r30, %r29, 4;
	.loc	1 28 30                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:28:30
	mul.wide.s32 	%rd13, %r30, 4;
	add.s64 	%rd3, %rd10, %rd13;
	.loc	1 28 62                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:28:62
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.v2.b32 { %r5, %r6 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r5;
	mov.b32 	%f5, %r6;
	.loc	1 29 30                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:29:30
	add.s64 	%rd4, %rd2, 4;
	.loc	1 29 19                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:29:19
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p2 ld.global.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r7;
	.loc	1 31 51                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:31:51
	add.s32 	%r31, %r29, 8;
	.loc	1 31 30                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:31:30
	mul.wide.s32 	%rd14, %r31, 4;
	add.s64 	%rd5, %rd10, %rd14;
	.loc	1 31 62                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:31:62
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r8, %r9 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r9;
	.loc	1 32 31                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:32:31
	add.s64 	%rd6, %rd2, 8;
	.loc	1 32 20                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:32:20
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p2 ld.global.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	.loc	1 34 53                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:34:53
	add.s32 	%r32, %r29, 12;
	.loc	1 34 31                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:34:31
	mul.wide.s32 	%rd15, %r32, 4;
	add.s64 	%rd7, %rd10, %rd15;
	.loc	1 34 64                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:34:64
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p1 ld.global.v2.b32 { %r11, %r12 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r11;
	mov.b32 	%f11, %r12;
	.loc	1 35 31                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:35:31
	add.s64 	%rd8, %rd2, 12;
	.loc	1 35 20                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:35:20
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p2 ld.global.b32 { %r13 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r13;
	.loc	1 38 18                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:38:18
	mul.f32 	%f13, %f4, %f6;
	mul.f32 	%f14, %f5, %f6;
	.loc	1 39 18                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:39:18
	fma.rn.f32 	%f15, %f1, %f3, %f13;
	fma.rn.f32 	%f16, %f2, %f3, %f14;
	.loc	1 41 19                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:41:19
	fma.rn.f32 	%f17, %f7, %f9, %f15;
	fma.rn.f32 	%f18, %f8, %f9, %f16;
	.loc	1 43 20                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:43:20
	fma.rn.f32 	%f19, %f10, %f12, %f17;
	fma.rn.f32 	%f20, %f11, %f12, %f18;
	.loc	1 44 25                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:44:25
	mul.wide.s32 	%rd16, %r20, 4;
	add.s64 	%rd9, %rd11, %rd16;
	.loc	1 44 37                         // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:44:37
	mov.b32 	%r14, %f19;
	mov.b32 	%r15, %f20;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd9 + 0 ], { %r14, %r15 };
	// end inline asm
	.loc	1 44 4                          // cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py:44:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/yj/cyjbriyh2rhmjq6haov4l3lzd4mgcqx5qsydifpvojdexhkskd4h.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 106
.b8 98
.b8 114
.b8 105
.b8 121
.b8 104
.b8 50
.b8 114
.b8 104
.b8 109
.b8 106
.b8 113
.b8 54
.b8 104
.b8 97
.b8 111
.b8 118
.b8 52
.b8 108
.b8 51
.b8 108
.b8 122
.b8 100
.b8 52
.b8 109
.b8 103
.b8 99
.b8 113
.b8 120
.b8 53
.b8 113
.b8 115
.b8 121
.b8 100
.b8 105
.b8 102
.b8 112
.b8 118
.b8 111
.b8 106
.b8 100
.b8 101
.b8 120
.b8 104
.b8 107
.b8 115
.b8 107
.b8 100
.b8 52
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 106
.b8 0
	}
	.section	.debug_macinfo	{	}
