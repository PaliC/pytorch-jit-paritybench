#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_native_group_norm_relu_24(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1024xf32, #blocked> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<4096> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<256> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<1048576> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<32> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<2097152> : tensor<1024xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<1024xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_0 : tensor<1024xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_1 : tensor<1024xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_2 : tensor<1024xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %4, %cst_2 : tensor<1024xi32, #blocked> loc(#loc9)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc10)
    %10 = tt.addptr %9, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc10)
    %11 = tt.load %10 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc11)
    %12 = arith.divsi %5, %cst_3 : tensor<1024xi32, #blocked> loc(#loc12)
    %13 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = tt.addptr %13, %12 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc13)
    %15 = tt.load %14 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc14)
    %16 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = tt.addptr %16, %12 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc15)
    %18 = tt.load %17 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc16)
    %19 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc17)
    %20 = tt.addptr %19, %6 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc17)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc18)
    %22 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc19)
    %23 = tt.addptr %22, %6 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc19)
    %24 = tt.load %23 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc20)
    %25 = arith.subf %11, %15 : tensor<1024xf32, #blocked> loc(#loc21)
    %26 = arith.mulf %25, %18 : tensor<1024xf32, #blocked> loc(#loc22)
    %27 = arith.mulf %26, %21 : tensor<1024xf32, #blocked> loc(#loc23)
    %28 = arith.addf %27, %24 : tensor<1024xf32, #blocked> loc(#loc24)
    %29 = arith.cmpf ogt, %cst, %28 : tensor<1024xf32, #blocked> loc(#loc33)
    %30 = arith.select %29, %cst, %28 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc34)
    %31 = arith.muli %7, %cst_4 : tensor<1024xi32, #blocked> loc(#loc28)
    %32 = arith.addi %8, %31 : tensor<1024xi32, #blocked> loc(#loc29)
    %33 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc30)
    %34 = tt.addptr %33, %32 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc30)
    tt.store %34, %30 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc31)
    tt.return loc(#loc32)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":21:28)
#loc3 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":21:33)
#loc4 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":22:36)
#loc5 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":22:23)
#loc6 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":25:19)
#loc7 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":26:29)
#loc8 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":27:19)
#loc9 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":28:19)
#loc10 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":29:30)
#loc11 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":29:35)
#loc12 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":30:36)
#loc13 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":30:30)
#loc14 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":30:41)
#loc15 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":31:30)
#loc16 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":31:41)
#loc17 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":32:30)
#loc18 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":32:35)
#loc19 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":33:30)
#loc20 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":33:35)
#loc21 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":34:18)
#loc22 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":35:18)
#loc23 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":36:18)
#loc24 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":37:18)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc26 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":39:41)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc28 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":40:38)
#loc29 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":40:30)
#loc30 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":40:25)
#loc31 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":40:50)
#loc32 = loc("inductor_cache/ls/clsh2rpdn4icw4xidldoffqn6jpf3332hspvhiuo63jfv4vr5xwh.py":40:4)
#loc33 = loc(callsite(#loc25 at #loc26))
#loc34 = loc(callsite(#loc27 at #loc26))
