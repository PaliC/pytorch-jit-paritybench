//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mean_13 // -- Begin function triton_per_fused_mean_13
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mean_13
.visible .entry triton_per_fused_mean_13(
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_13_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_13_param_1,
	.param .u32 triton_per_fused_mean_13_param_2,
	.param .u32 triton_per_fused_mean_13_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<89>;
	.reg .f32 	%f<40>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_per_fused_mean_13_param_0];
	ld.param.u64 	%rd5, [triton_per_fused_mean_13_param_1];
$L__tmp0:
	.loc	1 23 28                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:23:33
	shl.b32 	%r39, %r1, 5;
	.loc	1 24 44                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:24:44
	mov.u32 	%r40, %tid.x;
	and.b32  	%r41, %r40, 24;
	shl.b32 	%r42, %r40, 2;
	and.b32  	%r43, %r42, 28;
	and.b32  	%r44, %r40, 31;
	.loc	1 24 23                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:24:23
	or.b32  	%r45, %r39, %r43;
	or.b32  	%r46, %r39, %r44;
	.loc	1 25 21                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:25:21
	setp.lt.s32 	%p1, %r45, 912;
	setp.lt.s32 	%p19, %r46, 912;
	.loc	1 26 34                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:26:34
	bfe.u32 	%r47, %r40, 3, 5;
	.loc	1 31 19                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:31:19
	mul.hi.s32 	%r49, %r45, -1883757585;
	mad.lo.s32 	%r50, %r45, 1, %r49;
	shr.u32 	%r51, %r50, 31;
	shr.s32 	%r52, %r50, 7;
	add.s32 	%r53, %r52, %r51;
	.loc	1 30 19                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:30:19
	mul.lo.s32 	%r54, %r53, 228;
	sub.s32 	%r55, %r45, %r54;
	.loc	1 33 35                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:33:35
	mad.lo.s32 	%r56, %r47, 228, %r55;
	.loc	1 33 44                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:33:44
	mad.lo.s32 	%r57, %r53, 14592, %r56;
	add.s32 	%r58, %r57, 7296;
	.loc	1 33 30                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:33:30
	mul.wide.s32 	%rd6, %r57, 4;
	add.s64 	%rd1, %rd5, %rd6;
	mul.wide.s32 	%rd7, %r58, 4;
	add.s64 	%rd2, %rd5, %rd7;
	mov.b32 	%r6, 0;
	.loc	1 33 55                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:33:55
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f1, %f5;
	selp.f32 	%f10, %f9, 0f00000000, %p1;
	add.f32 	%f11, %f2, %f6;
	selp.f32 	%f12, %f11, 0f00000000, %p1;
	add.f32 	%f13, %f3, %f7;
	selp.f32 	%f14, %f13, 0f00000000, %p1;
	add.f32 	%f15, %f4, %f8;
	selp.f32 	%f16, %f15, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f10;
	shfl.sync.bfly.b32	%r60, %r59, 16, 31, -1;
	mov.b32 	%f17, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f10, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f18;
	shfl.sync.bfly.b32	%r62, %r61, 8, 31, -1;
	mov.b32 	%f19, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f12;
	shfl.sync.bfly.b32	%r64, %r63, 16, 31, -1;
	mov.b32 	%f21, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f12, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f22;
	shfl.sync.bfly.b32	%r66, %r65, 8, 31, -1;
	mov.b32 	%f23, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f14;
	shfl.sync.bfly.b32	%r68, %r67, 16, 31, -1;
	mov.b32 	%f25, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f14, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f26;
	shfl.sync.bfly.b32	%r70, %r69, 8, 31, -1;
	mov.b32 	%f27, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f16;
	shfl.sync.bfly.b32	%r72, %r71, 16, 31, -1;
	mov.b32 	%f29, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f16, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f30;
	shfl.sync.bfly.b32	%r74, %r73, 8, 31, -1;
	mov.b32 	%f31, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p11, %r41, 0;
	bfe.u32 	%r75, %r40, 5, 3;
	shl.b32 	%r76, %r75, 2;
	shl.b32 	%r77, %r43, 5;
	or.b32  	%r78, %r77, %r76;
	mov.u32 	%r79, global_smem;
	add.s32 	%r18, %r79, %r78;
	mov.b32 	%r19, %f20;
	// begin inline asm
	@%p11 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r18, 32;
	mov.b32 	%r21, %f24;
	// begin inline asm
	@%p11 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	add.s32 	%r22, %r18, 64;
	mov.b32 	%r23, %f28;
	// begin inline asm
	@%p11 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	add.s32 	%r24, %r18, 96;
	mov.b32 	%r25, %f32;
	// begin inline asm
	@%p11 st.shared.b32 [ %r24 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p15, %r40, 256;
	add.s32 	%r27, %r79, %r42;
	// begin inline asm
	@%p15 ld.shared.b32 %r26, [ %r27 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r26;
	shfl.sync.bfly.b32	%r80, %r26, 4, 31, -1;
	mov.b32 	%f34, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f35;
	shfl.sync.bfly.b32	%r82, %r81, 2, 31, -1;
	mov.b32 	%f36, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f37;
	shfl.sync.bfly.b32	%r84, %r83, 1, 31, -1;
	mov.b32 	%f38, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r85, %r40, 7;
	setp.eq.s32 	%p20, %r85, 0;
	and.pred  	%p16, %p15, %p20;
	mov.b32 	%r29, %f39;
	// begin inline asm
	@%p16 st.shared.b32 [ %r27 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r86, %r79, %r77;
	ld.shared.u32 	%r31, [%r86];
	ld.shared.u32 	%r32, [%r86+32];
	ld.shared.u32 	%r33, [%r86+64];
	ld.shared.u32 	%r34, [%r86+96];
$L__tmp2:
	.loc	1 38 18                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:38:18
	bar.sync 	0;
	mad.lo.s32 	%r30, %r43, -28, %r86;
	mov.pred 	%p17, -1;
	// begin inline asm
	@%p17 st.shared.v4.b32 [ %r30 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r87, %r44, 2;
	add.s32 	%r88, %r79, %r87;
	ld.shared.u32 	%r36, [%r88];
	mov.b32 	%r37, 1115684864;
	// begin inline asm
	div.full.f32 %r38, %r36, %r37;
	// end inline asm
	.loc	1 39 4                          // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:39:4
	bar.sync 	0;
	.loc	1 40 28                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:40:28
	mul.wide.s32 	%rd8, %r46, 4;
	add.s64 	%rd3, %rd4, %rd8;
	.loc	1 40 39                         // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:40:39
	setp.eq.s32 	%p21, %r75, 0;
	and.pred  	%p18, %p21, %p19;
	// begin inline asm
	@%p18 st.global.b32 [ %rd3 + 0 ], { %r38 };
	// end inline asm
	.loc	1 40 4                          // cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py:40:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qx/cqxpssjx2v37ztmuqprgblwveg5us7ratrlaaxufywepwoftguct.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 169                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 120
.b8 112
.b8 115
.b8 115
.b8 106
.b8 120
.b8 50
.b8 118
.b8 51
.b8 55
.b8 122
.b8 116
.b8 109
.b8 117
.b8 113
.b8 112
.b8 114
.b8 103
.b8 98
.b8 108
.b8 119
.b8 118
.b8 101
.b8 103
.b8 53
.b8 117
.b8 115
.b8 55
.b8 114
.b8 97
.b8 116
.b8 114
.b8 108
.b8 97
.b8 97
.b8 120
.b8 117
.b8 102
.b8 121
.b8 119
.b8 101
.b8 112
.b8 119
.b8 111
.b8 102
.b8 116
.b8 103
.b8 117
.b8 99
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 49
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x93:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
