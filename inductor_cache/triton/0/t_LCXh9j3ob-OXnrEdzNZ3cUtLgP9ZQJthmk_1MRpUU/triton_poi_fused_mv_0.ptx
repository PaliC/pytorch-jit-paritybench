//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_mv_0   // -- Begin function triton_poi_fused_mv_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_mv_0
.visible .entry triton_poi_fused_mv_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_0_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_0_param_4,
	.param .u32 triton_poi_fused_mv_0_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<61>;
	.reg .f32 	%f<134>;
	.reg .b64 	%rd<30>;
	.loc	1 19 0                          // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_poi_fused_mv_0_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused_mv_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:21:28
	// begin inline asm
	mov.u32 %r4, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:21:33
	shl.b32 	%r17, %r4, 8;
	ld.param.u64 	%rd6, [triton_poi_fused_mv_0_param_2];
	ld.param.u64 	%rd7, [triton_poi_fused_mv_0_param_3];
	.loc	1 22 36                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:22:36
	mov.u32 	%r18, %tid.x;
	shl.b32 	%r19, %r18, 1;
	and.b32  	%r20, %r19, 254;
	.loc	1 22 23                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:22:23
	or.b32  	%r1, %r17, %r20;
	or.b32  	%r21, %r1, 1;
	.loc	1 23 21                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:23:21
	setp.lt.s32 	%p1, %r1, 256;
	.loc	1 26 39                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:26:39
	shr.s32 	%r23, %r1, 31;
	shr.u32 	%r24, %r23, 30;
	add.s32 	%r25, %r1, %r24;
	shr.s32 	%r26, %r25, 2;
	.loc	1 25 39                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:25:39
	and.b32  	%r27, %r25, 2147483644;
	sub.s32 	%r28, %r1, %r27;
	bfe.s32 	%r29, %r4, 23, 1;
	shr.u32 	%r30, %r29, 30;
	add.s32 	%r31, %r21, %r30;
	and.b32  	%r32, %r31, 2147483644;
	sub.s32 	%r33, %r21, %r32;
	.loc	1 25 34                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:25:34
	shl.b32 	%r34, %r28, 1;
	shl.b32 	%r35, %r33, 1;
	.loc	1 25 54                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:25:54
	shr.u32 	%r36, %r29, 28;
	add.s32 	%r37, %r1, %r36;
	shr.s32 	%r38, %r37, 4;
	.loc	1 25 48                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:25:48
	shl.b32 	%r39, %r38, 3;
	.loc	1 25 45                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:25:45
	add.s32 	%r40, %r34, %r39;
	add.s32 	%r41, %r39, %r35;
	.loc	1 25 30                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:25:30
	mul.wide.s32 	%rd16, %r40, 4;
	add.s64 	%rd2, %rd14, %rd16;
	mul.wide.s32 	%rd17, %r41, 4;
	add.s64 	%rd3, %rd14, %rd17;
	.loc	1 25 60                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:25:60
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r6;
	.loc	1 26 33                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:26:33
	shl.b32 	%r42, %r26, 1;
	.loc	1 26 30                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:26:30
	mul.wide.s32 	%rd18, %r42, 4;
	add.s64 	%rd4, %rd15, %rd18;
	.loc	1 26 44                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:26:44
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r7;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r8;
	mov.pred 	%p5, -1;
	.loc	1 27 19                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:27:19
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p5 ld.global.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r9;
	.loc	1 29 19                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:29:19
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p5 ld.global.b32 { %r10 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 31 31                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:31:31
	cvt.s64.s32 	%rd19, %r39;
	cvt.s64.s32 	%rd20, %r34;
	add.s64 	%rd21, %rd20, %rd19;
	shl.b64 	%rd22, %rd21, 2;
	add.s64 	%rd23, %rd14, %rd22;
	add.s64 	%rd8, %rd23, 4;
	cvt.s64.s32 	%rd24, %r35;
	add.s64 	%rd25, %rd24, %rd19;
	shl.b64 	%rd26, %rd25, 2;
	add.s64 	%rd27, %rd14, %rd26;
	add.s64 	%rd9, %rd27, 4;
	.loc	1 31 65                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:31:65
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 32 31                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:32:31
	add.s64 	%rd10, %rd4, 4;
	.loc	1 32 49                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:32:49
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 33 31                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:33:31
	add.s64 	%rd12, %rd6, 4;
	.loc	1 33 20                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:33:20
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p5 ld.global.b32 { %r15 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:35:31
	add.s64 	%rd13, %rd7, 4;
	.loc	1 35 20                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:35:20
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p5 ld.global.b32 { %r16 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 37 18                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:37:18
	add.f32 	%f31, %f26, %f28;
	add.f32 	%f32, %f27, %f29;
	.loc	1 38 18                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:38:18
	add.f32 	%f6, %f31, %f30;
	add.f32 	%f7, %f32, %f30;
	.loc	1 39 26                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:39:26
	abs.ftz.f32 	%f8, %f6;
	setp.ltu.f32 	%p13, %f8, 0f3F19999A;
	mov.f32 	%f113, 0f3F800000;
	mov.f32 	%f114, 0fC0000000;
	mov.f32 	%f125, 0fBD563CAE;
	mov.f32 	%f126, 0f3C80F082;
	mov.f32 	%f127, 0f3E085941;
	mov.f32 	%f128, 0fBEAAA9ED;
	mov.f32 	%f129, 0f00000000;
	@%p13 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f41, %f6, %f6;
	fma.rn.ftz.f32 	%f44, %f126, %f41, %f125;
	fma.rn.ftz.f32 	%f46, %f44, %f41, %f127;
	fma.rn.ftz.f32 	%f48, %f46, %f41, %f128;
	fma.rn.ftz.f32 	%f50, %f48, %f41, %f129;
	fma.rn.ftz.f32 	%f130, %f50, %f6, %f6;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	mul.f32 	%f35, %f8, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f36, %f35;
	add.f32 	%f34, %f36, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f33,%f34;
	// end inline asm
	fma.rn.ftz.f32 	%f39, %f33, %f114, %f113;
	setp.ge.f32 	%p14, %f8, 0f41102CB4;
	selp.f32 	%f40, 0f3F800000, %f39, %p14;
	mov.b32 	%r43, %f40;
	mov.b32 	%r44, %f6;
	and.b32  	%r45, %r44, -2147483648;
	or.b32  	%r46, %r45, %r43;
	mov.b32 	%f130, %r46;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 0 0                           // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:0:0
	mov.b32 	%f1, %r11;
	mov.b32 	%f2, %r12;
	mov.b32 	%f3, %r13;
	mov.b32 	%f4, %r14;
	mov.b32 	%f5, %r15;
	.loc	1 39 26                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:39:26
	abs.ftz.f32 	%f12, %f7;
	setp.ltu.f32 	%p15, %f12, 0f3F19999A;
	@%p15 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;
$L__BB0_5:                              // %__internal_fmad.exit3.i8
	mul.f32 	%f59, %f7, %f7;
	fma.rn.ftz.f32 	%f62, %f126, %f59, %f125;
	fma.rn.ftz.f32 	%f64, %f62, %f59, %f127;
	fma.rn.ftz.f32 	%f66, %f64, %f59, %f128;
	fma.rn.ftz.f32 	%f68, %f66, %f59, %f129;
	fma.rn.ftz.f32 	%f131, %f68, %f7, %f7;
	bra.uni 	$L__BB0_6;
$L__BB0_4:                              // %__internal_fmad.exit1.i3
	mul.f32 	%f53, %f12, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f54, %f53;
	add.f32 	%f52, %f54, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f51,%f52;
	// end inline asm
	fma.rn.ftz.f32 	%f57, %f51, %f114, %f113;
	setp.ge.f32 	%p16, %f12, 0f41102CB4;
	selp.f32 	%f58, 0f3F800000, %f57, %p16;
	mov.b32 	%r47, %f58;
	mov.b32 	%r48, %f7;
	and.b32  	%r49, %r48, -2147483648;
	or.b32  	%r50, %r49, %r47;
	mov.b32 	%f131, %r50;
$L__BB0_6:                              // %__nv_tanhf.exit19
	.loc	1 41 20                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:41:20
	add.f32 	%f69, %f1, %f3;
	add.f32 	%f70, %f2, %f4;
	.loc	1 42 20                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:42:20
	add.f32 	%f16, %f69, %f5;
	add.f32 	%f17, %f70, %f5;
	.loc	1 43 27                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:43:27
	abs.ftz.f32 	%f18, %f16;
	setp.ltu.f32 	%p17, %f18, 0f3F19999A;
	@%p17 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %__internal_fmad.exit3.i27
	mul.f32 	%f79, %f16, %f16;
	fma.rn.ftz.f32 	%f82, %f126, %f79, %f125;
	fma.rn.ftz.f32 	%f84, %f82, %f79, %f127;
	fma.rn.ftz.f32 	%f86, %f84, %f79, %f128;
	fma.rn.ftz.f32 	%f88, %f86, %f79, %f129;
	fma.rn.ftz.f32 	%f132, %f88, %f16, %f16;
	bra.uni 	$L__BB0_9;
$L__BB0_7:                              // %__internal_fmad.exit1.i22
	mul.f32 	%f73, %f18, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f74, %f73;
	add.f32 	%f72, %f74, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f71,%f72;
	// end inline asm
	fma.rn.ftz.f32 	%f77, %f71, %f114, %f113;
	setp.ge.f32 	%p18, %f18, 0f41102CB4;
	selp.f32 	%f78, 0f3F800000, %f77, %p18;
	mov.b32 	%r51, %f78;
	mov.b32 	%r52, %f16;
	and.b32  	%r53, %r52, -2147483648;
	or.b32  	%r54, %r53, %r51;
	mov.b32 	%f132, %r54;
$L__BB0_9:                              // %__nv_tanhf.exit38
	.loc	1 0 27                          // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:0:27
	ld.param.u64 	%rd1, [triton_poi_fused_mv_0_param_4];
	.loc	1 43 27                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:43:27
	abs.ftz.f32 	%f22, %f17;
	setp.ltu.f32 	%p19, %f22, 0f3F19999A;
	@%p19 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %__internal_fmad.exit3.i46
	mul.f32 	%f97, %f17, %f17;
	fma.rn.ftz.f32 	%f100, %f126, %f97, %f125;
	fma.rn.ftz.f32 	%f102, %f100, %f97, %f127;
	fma.rn.ftz.f32 	%f104, %f102, %f97, %f128;
	fma.rn.ftz.f32 	%f106, %f104, %f97, %f129;
	fma.rn.ftz.f32 	%f133, %f106, %f17, %f17;
	bra.uni 	$L__BB0_12;
$L__BB0_10:                             // %__internal_fmad.exit1.i41
	mul.f32 	%f91, %f22, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f92, %f91;
	add.f32 	%f90, %f92, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f89,%f90;
	// end inline asm
	fma.rn.ftz.f32 	%f95, %f89, %f114, %f113;
	setp.ge.f32 	%p20, %f22, 0f41102CB4;
	selp.f32 	%f96, 0f3F800000, %f95, %p20;
	mov.b32 	%r55, %f96;
	mov.b32 	%r56, %f17;
	and.b32  	%r57, %r56, -2147483648;
	or.b32  	%r58, %r57, %r55;
	mov.b32 	%f133, %r58;
$L__BB0_12:                             // %__nv_tanhf.exit57
	.loc	1 29 19                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:29:19
	mov.b32 	%f107, %r10;
	.loc	1 35 20                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:35:20
	mov.b32 	%f108, %r16;
	.loc	1 44 20                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:44:20
	mul.f32 	%f109, %f132, %f108;
	mul.f32 	%f110, %f133, %f108;
	.loc	1 45 19                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:45:19
	fma.rn.f32 	%f111, %f130, %f107, %f109;
	fma.rn.f32 	%f112, %f131, %f107, %f110;
	.loc	1 46 25                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:46:25
	mul.wide.s32 	%rd29, %r1, 4;
	add.s64 	%rd28, %rd1, %rd29;
	.loc	1 46 37                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:46:37
	mov.b32 	%r59, %f111;
	mov.b32 	%r60, %f112;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd28 + 0 ], { %r59, %r60 };
	// end inline asm
	.loc	1 46 4                          // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:46:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/wf/cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 102
.b8 109
.b8 114
.b8 113
.b8 107
.b8 97
.b8 109
.b8 52
.b8 98
.b8 108
.b8 118
.b8 109
.b8 121
.b8 108
.b8 109
.b8 101
.b8 51
.b8 108
.b8 52
.b8 117
.b8 55
.b8 55
.b8 101
.b8 116
.b8 114
.b8 112
.b8 117
.b8 114
.b8 114
.b8 116
.b8 112
.b8 98
.b8 112
.b8 50
.b8 101
.b8 117
.b8 121
.b8 119
.b8 116
.b8 122
.b8 55
.b8 98
.b8 118
.b8 119
.b8 103
.b8 103
.b8 100
.b8 114
.b8 118
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 102
.b8 0
	}
	.section	.debug_macinfo	{	}
