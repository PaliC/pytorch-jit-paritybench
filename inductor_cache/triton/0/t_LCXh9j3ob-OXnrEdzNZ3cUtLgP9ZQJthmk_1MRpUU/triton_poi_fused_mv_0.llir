; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_mv_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = icmp slt i32 %12, 256, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %15 = sdiv i32 %.frozen, 4, !dbg !15
  %16 = mul i32 %15, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %16, !dbg !16
  %17 = srem i32 %13, 4, !dbg !16
  %18 = shl nsw i32 %.decomposed, 1, !dbg !17
  %19 = shl nsw i32 %17, 1, !dbg !17
  %20 = sdiv i32 %12, 16, !dbg !18
  %21 = shl nsw i32 %20, 3, !dbg !19
  %22 = add nsw i32 %18, %21, !dbg !20
  %23 = add nsw i32 %21, %19, !dbg !20
  %24 = sext i32 %22 to i64, !dbg !21
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !21
  %26 = sext i32 %23 to i64, !dbg !21
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !21
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %14) #3, !dbg !22
  %29 = bitcast i32 %28 to float, !dbg !22
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %14) #3, !dbg !22
  %31 = bitcast i32 %30 to float, !dbg !22
  %32 = shl nsw i32 %15, 1, !dbg !23
  %33 = sext i32 %32 to i64, !dbg !24
  %34 = getelementptr float, ptr addrspace(1) %1, i64 %33, !dbg !24
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %14) #3, !dbg !25
  %36 = bitcast i32 %35 to float, !dbg !25
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %14) #3, !dbg !25
  %38 = bitcast i32 %37 to float, !dbg !25
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #3, !dbg !26
  %40 = bitcast i32 %39 to float, !dbg !26
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #3, !dbg !27
  %42 = or disjoint i32 %18, 1, !dbg !28
  %43 = or disjoint i32 %19, 1, !dbg !28
  %44 = add nsw i32 %42, %21, !dbg !29
  %45 = add nsw i32 %43, %21, !dbg !29
  %46 = sext i32 %44 to i64, !dbg !30
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !30
  %48 = sext i32 %45 to i64, !dbg !30
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !30
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 %14) #3, !dbg !31
  %51 = bitcast i32 %50 to float, !dbg !31
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %14) #3, !dbg !31
  %53 = bitcast i32 %52 to float, !dbg !31
  %54 = or disjoint i32 %32, 1, !dbg !32
  %55 = sext i32 %54 to i64, !dbg !33
  %56 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !33
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %14) #3, !dbg !34
  %58 = bitcast i32 %57 to float, !dbg !34
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %14) #3, !dbg !34
  %60 = bitcast i32 %59 to float, !dbg !34
  %61 = getelementptr i8, ptr addrspace(1) %2, i64 4, !dbg !35
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 true) #3, !dbg !36
  %63 = bitcast i32 %62 to float, !dbg !36
  %64 = getelementptr i8, ptr addrspace(1) %3, i64 4, !dbg !37
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 true) #3, !dbg !38
  %66 = fadd float %29, %36, !dbg !39
  %67 = fadd float %31, %38, !dbg !39
  %68 = fadd float %66, %40, !dbg !40
  %69 = fadd float %67, %40, !dbg !40
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not.i = icmp eq i32 %70, 0, !dbg !41
  %71 = tail call float @llvm.nvvm.fabs.ftz.f(float %68) #3, !dbg !41
  %72 = tail call float @llvm.nvvm.fabs.f(float %68) #3, !dbg !41
  %.01.i = select i1 %.not.i, float %72, float %71, !dbg !41
  %73 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !41
  br i1 %73, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !41

__internal_fmad.exit1.i:                          ; preds = %6
  %74 = fmul float %.01.i, 0x4007154760000000, !dbg !41
  %75 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %74) #3, !dbg !41
  %76 = fadd float %75, 1.000000e+00, !dbg !41
  %77 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %76) #4, !dbg !41, !srcloc !42
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not6.i = icmp eq i32 %78, 0, !dbg !41
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %77, float -2.000000e+00, float 1.000000e+00) #3, !dbg !41
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %77, float -2.000000e+00, float 1.000000e+00) #3, !dbg !41
  %.03.i = select i1 %.not6.i, float %80, float %79, !dbg !41
  %81 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !41
  %s.0.i = select i1 %81, float 1.000000e+00, float %.03.i, !dbg !41
  %82 = bitcast float %s.0.i to i32, !dbg !41
  %83 = bitcast float %68 to i32, !dbg !41
  %84 = and i32 %83, -2147483648, !dbg !41
  %85 = or i32 %84, %82, !dbg !41
  %86 = bitcast i32 %85 to float, !dbg !41
  br label %__nv_tanhf.exit, !dbg !41

__internal_fmad.exit3.i:                          ; preds = %6
  %87 = fmul float %68, %68, !dbg !41
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not1.i = icmp eq i32 %88, 0, !dbg !41
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %87, float 0xBFAAC795C0000000) #3, !dbg !41
  %90 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %87, float 0xBFAAC795C0000000) #3, !dbg !41
  %.06.i = select i1 %.not1.i, float %90, float %89, !dbg !41
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not2.i = icmp eq i32 %91, 0, !dbg !41
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %87, float 0x3FC10B2820000000) #3, !dbg !41
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %87, float 0x3FC10B2820000000) #3, !dbg !41
  %.05.i = select i1 %.not2.i, float %93, float %92, !dbg !41
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not3.i = icmp eq i32 %94, 0, !dbg !41
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %87, float 0xBFD5553DA0000000) #3, !dbg !41
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %87, float 0xBFD5553DA0000000) #3, !dbg !41
  %.0.i = select i1 %.not3.i, float %96, float %95, !dbg !41
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not4.i = icmp eq i32 %97, 0, !dbg !41
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %87, float 0.000000e+00) #3, !dbg !41
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %87, float 0.000000e+00) #3, !dbg !41
  %.04.i = select i1 %.not4.i, float %99, float %98, !dbg !41
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not5.i = icmp eq i32 %100, 0, !dbg !41
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %68, float %68) #3, !dbg !41
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %68, float %68) #3, !dbg !41
  %.02.i = select i1 %.not5.i, float %102, float %101, !dbg !41
  br label %__nv_tanhf.exit, !dbg !41

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %86, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !41
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not.i1 = icmp eq i32 %103, 0, !dbg !41
  %104 = tail call float @llvm.nvvm.fabs.ftz.f(float %69) #3, !dbg !41
  %105 = tail call float @llvm.nvvm.fabs.f(float %69) #3, !dbg !41
  %.01.i2 = select i1 %.not.i1, float %105, float %104, !dbg !41
  %106 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !41
  br i1 %106, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !41

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %107 = fmul float %.01.i2, 0x4007154760000000, !dbg !41
  %108 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %107) #3, !dbg !41
  %109 = fadd float %108, 1.000000e+00, !dbg !41
  %110 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %109) #4, !dbg !41, !srcloc !42
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not6.i4 = icmp eq i32 %111, 0, !dbg !41
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %110, float -2.000000e+00, float 1.000000e+00) #3, !dbg !41
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %110, float -2.000000e+00, float 1.000000e+00) #3, !dbg !41
  %.03.i5 = select i1 %.not6.i4, float %113, float %112, !dbg !41
  %114 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !41
  %s.0.i6 = select i1 %114, float 1.000000e+00, float %.03.i5, !dbg !41
  %115 = bitcast float %s.0.i6 to i32, !dbg !41
  %116 = bitcast float %69 to i32, !dbg !41
  %117 = and i32 %116, -2147483648, !dbg !41
  %118 = or i32 %117, %115, !dbg !41
  %119 = bitcast i32 %118 to float, !dbg !41
  br label %__nv_tanhf.exit19, !dbg !41

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %120 = fmul float %69, %69, !dbg !41
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not1.i9 = icmp eq i32 %121, 0, !dbg !41
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %120, float 0xBFAAC795C0000000) #3, !dbg !41
  %123 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %120, float 0xBFAAC795C0000000) #3, !dbg !41
  %.06.i10 = select i1 %.not1.i9, float %123, float %122, !dbg !41
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not2.i11 = icmp eq i32 %124, 0, !dbg !41
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %120, float 0x3FC10B2820000000) #3, !dbg !41
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %120, float 0x3FC10B2820000000) #3, !dbg !41
  %.05.i12 = select i1 %.not2.i11, float %126, float %125, !dbg !41
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not3.i13 = icmp eq i32 %127, 0, !dbg !41
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %120, float 0xBFD5553DA0000000) #3, !dbg !41
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %120, float 0xBFD5553DA0000000) #3, !dbg !41
  %.0.i14 = select i1 %.not3.i13, float %129, float %128, !dbg !41
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not4.i15 = icmp eq i32 %130, 0, !dbg !41
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %120, float 0.000000e+00) #3, !dbg !41
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %120, float 0.000000e+00) #3, !dbg !41
  %.04.i16 = select i1 %.not4.i15, float %132, float %131, !dbg !41
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not5.i17 = icmp eq i32 %133, 0, !dbg !41
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %69, float %69) #3, !dbg !41
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %69, float %69) #3, !dbg !41
  %.02.i18 = select i1 %.not5.i17, float %135, float %134, !dbg !41
  br label %__nv_tanhf.exit19, !dbg !41

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %119, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !41
  %136 = fadd float %51, %58, !dbg !43
  %137 = fadd float %53, %60, !dbg !43
  %138 = fadd float %136, %63, !dbg !44
  %139 = fadd float %137, %63, !dbg !44
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not.i20 = icmp eq i32 %140, 0, !dbg !45
  %141 = tail call float @llvm.nvvm.fabs.ftz.f(float %138) #3, !dbg !45
  %142 = tail call float @llvm.nvvm.fabs.f(float %138) #3, !dbg !45
  %.01.i21 = select i1 %.not.i20, float %142, float %141, !dbg !45
  %143 = fcmp ult float %.01.i21, 0x3FE3333340000000, !dbg !45
  br i1 %143, label %__internal_fmad.exit3.i27, label %__internal_fmad.exit1.i22, !dbg !45

__internal_fmad.exit1.i22:                        ; preds = %__nv_tanhf.exit19
  %144 = fmul float %.01.i21, 0x4007154760000000, !dbg !45
  %145 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %144) #3, !dbg !45
  %146 = fadd float %145, 1.000000e+00, !dbg !45
  %147 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %146) #4, !dbg !45, !srcloc !42
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not6.i23 = icmp eq i32 %148, 0, !dbg !45
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %147, float -2.000000e+00, float 1.000000e+00) #3, !dbg !45
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %147, float -2.000000e+00, float 1.000000e+00) #3, !dbg !45
  %.03.i24 = select i1 %.not6.i23, float %150, float %149, !dbg !45
  %151 = fcmp oge float %.01.i21, 0x4022059680000000, !dbg !45
  %s.0.i25 = select i1 %151, float 1.000000e+00, float %.03.i24, !dbg !45
  %152 = bitcast float %s.0.i25 to i32, !dbg !45
  %153 = bitcast float %138 to i32, !dbg !45
  %154 = and i32 %153, -2147483648, !dbg !45
  %155 = or i32 %154, %152, !dbg !45
  %156 = bitcast i32 %155 to float, !dbg !45
  br label %__nv_tanhf.exit38, !dbg !45

__internal_fmad.exit3.i27:                        ; preds = %__nv_tanhf.exit19
  %157 = fmul float %138, %138, !dbg !45
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not1.i28 = icmp eq i32 %158, 0, !dbg !45
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %157, float 0xBFAAC795C0000000) #3, !dbg !45
  %160 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %157, float 0xBFAAC795C0000000) #3, !dbg !45
  %.06.i29 = select i1 %.not1.i28, float %160, float %159, !dbg !45
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not2.i30 = icmp eq i32 %161, 0, !dbg !45
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i29, float %157, float 0x3FC10B2820000000) #3, !dbg !45
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i29, float %157, float 0x3FC10B2820000000) #3, !dbg !45
  %.05.i31 = select i1 %.not2.i30, float %163, float %162, !dbg !45
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not3.i32 = icmp eq i32 %164, 0, !dbg !45
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i31, float %157, float 0xBFD5553DA0000000) #3, !dbg !45
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i31, float %157, float 0xBFD5553DA0000000) #3, !dbg !45
  %.0.i33 = select i1 %.not3.i32, float %166, float %165, !dbg !45
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not4.i34 = icmp eq i32 %167, 0, !dbg !45
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %157, float 0.000000e+00) #3, !dbg !45
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %157, float 0.000000e+00) #3, !dbg !45
  %.04.i35 = select i1 %.not4.i34, float %169, float %168, !dbg !45
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not5.i36 = icmp eq i32 %170, 0, !dbg !45
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %138, float %138) #3, !dbg !45
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %138, float %138) #3, !dbg !45
  %.02.i37 = select i1 %.not5.i36, float %172, float %171, !dbg !45
  br label %__nv_tanhf.exit38, !dbg !45

__nv_tanhf.exit38:                                ; preds = %__internal_fmad.exit1.i22, %__internal_fmad.exit3.i27
  %s.1.i26 = phi float [ %156, %__internal_fmad.exit1.i22 ], [ %.02.i37, %__internal_fmad.exit3.i27 ], !dbg !45
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not.i39 = icmp eq i32 %173, 0, !dbg !45
  %174 = tail call float @llvm.nvvm.fabs.ftz.f(float %139) #3, !dbg !45
  %175 = tail call float @llvm.nvvm.fabs.f(float %139) #3, !dbg !45
  %.01.i40 = select i1 %.not.i39, float %175, float %174, !dbg !45
  %176 = fcmp ult float %.01.i40, 0x3FE3333340000000, !dbg !45
  br i1 %176, label %__internal_fmad.exit3.i46, label %__internal_fmad.exit1.i41, !dbg !45

__internal_fmad.exit1.i41:                        ; preds = %__nv_tanhf.exit38
  %177 = fmul float %.01.i40, 0x4007154760000000, !dbg !45
  %178 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %177) #3, !dbg !45
  %179 = fadd float %178, 1.000000e+00, !dbg !45
  %180 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %179) #4, !dbg !45, !srcloc !42
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not6.i42 = icmp eq i32 %181, 0, !dbg !45
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %180, float -2.000000e+00, float 1.000000e+00) #3, !dbg !45
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %180, float -2.000000e+00, float 1.000000e+00) #3, !dbg !45
  %.03.i43 = select i1 %.not6.i42, float %183, float %182, !dbg !45
  %184 = fcmp oge float %.01.i40, 0x4022059680000000, !dbg !45
  %s.0.i44 = select i1 %184, float 1.000000e+00, float %.03.i43, !dbg !45
  %185 = bitcast float %s.0.i44 to i32, !dbg !45
  %186 = bitcast float %139 to i32, !dbg !45
  %187 = and i32 %186, -2147483648, !dbg !45
  %188 = or i32 %187, %185, !dbg !45
  %189 = bitcast i32 %188 to float, !dbg !45
  br label %__nv_tanhf.exit57, !dbg !45

__internal_fmad.exit3.i46:                        ; preds = %__nv_tanhf.exit38
  %190 = fmul float %139, %139, !dbg !45
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not1.i47 = icmp eq i32 %191, 0, !dbg !45
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %190, float 0xBFAAC795C0000000) #3, !dbg !45
  %193 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %190, float 0xBFAAC795C0000000) #3, !dbg !45
  %.06.i48 = select i1 %.not1.i47, float %193, float %192, !dbg !45
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not2.i49 = icmp eq i32 %194, 0, !dbg !45
  %195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i48, float %190, float 0x3FC10B2820000000) #3, !dbg !45
  %196 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i48, float %190, float 0x3FC10B2820000000) #3, !dbg !45
  %.05.i50 = select i1 %.not2.i49, float %196, float %195, !dbg !45
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not3.i51 = icmp eq i32 %197, 0, !dbg !45
  %198 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %190, float 0xBFD5553DA0000000) #3, !dbg !45
  %199 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %190, float 0xBFD5553DA0000000) #3, !dbg !45
  %.0.i52 = select i1 %.not3.i51, float %199, float %198, !dbg !45
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not4.i53 = icmp eq i32 %200, 0, !dbg !45
  %201 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i52, float %190, float 0.000000e+00) #3, !dbg !45
  %202 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i52, float %190, float 0.000000e+00) #3, !dbg !45
  %.04.i54 = select i1 %.not4.i53, float %202, float %201, !dbg !45
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not5.i55 = icmp eq i32 %203, 0, !dbg !45
  %204 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %139, float %139) #3, !dbg !45
  %205 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %139, float %139) #3, !dbg !45
  %.02.i56 = select i1 %.not5.i55, float %205, float %204, !dbg !45
  br label %__nv_tanhf.exit57, !dbg !45

__nv_tanhf.exit57:                                ; preds = %__internal_fmad.exit1.i41, %__internal_fmad.exit3.i46
  %s.1.i45 = phi float [ %189, %__internal_fmad.exit1.i41 ], [ %.02.i56, %__internal_fmad.exit3.i46 ], !dbg !45
  %206 = bitcast i32 %41 to float, !dbg !27
  %207 = fmul float %s.1.i7, %206, !dbg !46
  %208 = fmul float %s.1.i, %206, !dbg !46
  %209 = bitcast i32 %65 to float, !dbg !38
  %210 = fmul float %s.1.i26, %209, !dbg !47
  %211 = fmul float %s.1.i45, %209, !dbg !47
  %212 = fadd float %208, %210, !dbg !48
  %213 = fadd float %207, %211, !dbg !48
  %214 = sext i32 %12 to i64, !dbg !49
  %215 = getelementptr float, ptr addrspace(1) %4, i64 %214, !dbg !49
  %216 = bitcast float %212 to i32, !dbg !50
  %217 = bitcast float %213 to i32, !dbg !50
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %216, i32 %217, ptr addrspace(1) %215, i1 %14) #3, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py", directory: "inductor_cache/wf")
!4 = !{ptr @triton_poi_fused_mv_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mv_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mv_0", linkageName: "triton_poi_fused_mv_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 39, scope: !7)
!16 = !DILocation(line: 25, column: 39, scope: !7)
!17 = !DILocation(line: 25, column: 34, scope: !7)
!18 = !DILocation(line: 25, column: 54, scope: !7)
!19 = !DILocation(line: 25, column: 48, scope: !7)
!20 = !DILocation(line: 25, column: 45, scope: !7)
!21 = !DILocation(line: 25, column: 30, scope: !7)
!22 = !DILocation(line: 25, column: 60, scope: !7)
!23 = !DILocation(line: 26, column: 33, scope: !7)
!24 = !DILocation(line: 26, column: 30, scope: !7)
!25 = !DILocation(line: 26, column: 44, scope: !7)
!26 = !DILocation(line: 27, column: 19, scope: !7)
!27 = !DILocation(line: 29, column: 19, scope: !7)
!28 = !DILocation(line: 31, column: 35, scope: !7)
!29 = !DILocation(line: 31, column: 50, scope: !7)
!30 = !DILocation(line: 31, column: 31, scope: !7)
!31 = !DILocation(line: 31, column: 65, scope: !7)
!32 = !DILocation(line: 32, column: 35, scope: !7)
!33 = !DILocation(line: 32, column: 31, scope: !7)
!34 = !DILocation(line: 32, column: 49, scope: !7)
!35 = !DILocation(line: 33, column: 31, scope: !7)
!36 = !DILocation(line: 33, column: 20, scope: !7)
!37 = !DILocation(line: 35, column: 31, scope: !7)
!38 = !DILocation(line: 35, column: 20, scope: !7)
!39 = !DILocation(line: 37, column: 18, scope: !7)
!40 = !DILocation(line: 38, column: 18, scope: !7)
!41 = !DILocation(line: 39, column: 26, scope: !7)
!42 = !{i32 21046}
!43 = !DILocation(line: 41, column: 20, scope: !7)
!44 = !DILocation(line: 42, column: 20, scope: !7)
!45 = !DILocation(line: 43, column: 27, scope: !7)
!46 = !DILocation(line: 40, column: 18, scope: !7)
!47 = !DILocation(line: 44, column: 20, scope: !7)
!48 = !DILocation(line: 45, column: 19, scope: !7)
!49 = !DILocation(line: 46, column: 25, scope: !7)
!50 = !DILocation(line: 46, column: 37, scope: !7)
!51 = !DILocation(line: 46, column: 4, scope: !7)
