#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_cat_12(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1024xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<16> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1536> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<24576> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<512> : tensor<1024xi64, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<8192> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<-1024> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<-512> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<1024> : tensor<1024xi64, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<1024xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_0 : tensor<1024xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_1 : tensor<1024xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %4, %cst_0 : tensor<1024xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_2 : tensor<1024xi32, #blocked> loc(#loc9)
    %9 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc10)
    %10 = tt.load %9 : !tt.ptr<f32> loc(#loc11)
    %11 = tt.splat %10 : f32 -> tensor<1024xf32, #blocked> loc(#loc12)
    %12 = tt.addptr %arg3, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc13)
    %13 = tt.load %12 : !tt.ptr<f32> loc(#loc14)
    %14 = tt.splat %13 : f32 -> tensor<1024xf32, #blocked> loc(#loc15)
    %15 = arith.extsi %6 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc16)
    %16 = arith.cmpi slt, %15, %cst_3 : tensor<1024xi64, #blocked> loc(#loc16)
    %17 = arith.muli %6, %cst_0 : tensor<1024xi32, #blocked> loc(#loc17)
    %18 = arith.addi %7, %17 : tensor<1024xi32, #blocked> loc(#loc18)
    %19 = arith.muli %8, %cst_4 : tensor<1024xi32, #blocked> loc(#loc19)
    %20 = arith.addi %18, %19 : tensor<1024xi32, #blocked> loc(#loc20)
    %21 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc21)
    %22 = tt.addptr %21, %20 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc21)
    %23 = tt.load %22, %16, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc22)
    %24 = arith.cmpi sge, %15, %cst_3 : tensor<1024xi64, #blocked> loc(#loc23)
    %25 = arith.cmpi slt, %15, %cst_7 : tensor<1024xi64, #blocked> loc(#loc24)
    %26 = arith.andi %24, %25 : tensor<1024xi1, #blocked> loc(#loc25)
    %27 = arith.addi %6, %cst_6 : tensor<1024xi32, #blocked> loc(#loc26)
    %28 = arith.muli %27, %cst_0 : tensor<1024xi32, #blocked> loc(#loc27)
    %29 = arith.addi %7, %28 : tensor<1024xi32, #blocked> loc(#loc28)
    %30 = arith.addi %29, %19 : tensor<1024xi32, #blocked> loc(#loc29)
    %31 = tt.addptr %21, %30 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc30)
    %32 = tt.load %31, %26, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc31)
    %33 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc32)
    %34 = tt.addptr %33, %30 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc32)
    %35 = tt.load %34, %26, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc33)
    %36 = arith.mulf %11, %35 : tensor<1024xf32, #blocked> loc(#loc34)
    %37 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc35)
    %38 = tt.addptr %37, %30 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc35)
    %39 = tt.load %38, %26, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc36)
    %40 = arith.mulf %14, %39 : tensor<1024xf32, #blocked> loc(#loc37)
    %41 = arith.addf %36, %40 : tensor<1024xf32, #blocked> loc(#loc38)
    %42 = arith.mulf %32, %41 : tensor<1024xf32, #blocked> loc(#loc39)
    %43 = arith.cmpi sge, %15, %cst_7 : tensor<1024xi64, #blocked> loc(#loc40)
    %44 = arith.addi %6, %cst_5 : tensor<1024xi32, #blocked> loc(#loc41)
    %45 = arith.muli %44, %cst_0 : tensor<1024xi32, #blocked> loc(#loc42)
    %46 = arith.addi %7, %45 : tensor<1024xi32, #blocked> loc(#loc43)
    %47 = arith.addi %46, %19 : tensor<1024xi32, #blocked> loc(#loc44)
    %48 = tt.addptr %33, %47 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc45)
    %49 = tt.load %48, %43, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc46)
    %50 = arith.mulf %11, %49 : tensor<1024xf32, #blocked> loc(#loc47)
    %51 = tt.addptr %37, %47 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc48)
    %52 = tt.load %51, %43, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc49)
    %53 = arith.mulf %14, %52 : tensor<1024xf32, #blocked> loc(#loc50)
    %54 = arith.addf %50, %53 : tensor<1024xf32, #blocked> loc(#loc51)
    %55 = arith.select %43, %54, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc52)
    %56 = arith.select %26, %42, %55 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc59)
    %57 = arith.select %16, %23, %56 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc55)
    %58 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc56)
    %59 = tt.addptr %58, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc56)
    tt.store %59, %57 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc57)
    tt.return loc(#loc58)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":21:28)
#loc3 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":21:33)
#loc4 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":22:36)
#loc5 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":22:23)
#loc6 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":24:21)
#loc7 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":24:27)
#loc8 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":25:19)
#loc9 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":26:19)
#loc10 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":28:31)
#loc11 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":28:20)
#loc12 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":29:35)
#loc13 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":30:31)
#loc14 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":30:20)
#loc15 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":31:35)
#loc16 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":40:18)
#loc17 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":41:39)
#loc18 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":41:35)
#loc19 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":41:50)
#loc20 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":41:45)
#loc21 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":41:30)
#loc22 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":41:55)
#loc23 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":42:19)
#loc24 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":44:18)
#loc25 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":45:18)
#loc26 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":46:49)
#loc27 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":46:40)
#loc28 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":46:36)
#loc29 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":46:55)
#loc30 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":46:31)
#loc31 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":46:65)
#loc32 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":47:31)
#loc33 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":47:65)
#loc34 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":48:20)
#loc35 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":49:31)
#loc36 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":49:65)
#loc37 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":50:20)
#loc38 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":51:20)
#loc39 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":52:20)
#loc40 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":55:20)
#loc41 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":58:50)
#loc42 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":58:40)
#loc43 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":58:36)
#loc44 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":58:56)
#loc45 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":58:31)
#loc46 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":58:66)
#loc47 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":59:20)
#loc48 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":60:31)
#loc49 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":60:66)
#loc50 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":61:20)
#loc51 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":62:20)
#loc52 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":64:35)
#loc53 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":65:34)
#loc54 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":54:34)
#loc55 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":66:33)
#loc56 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":67:25)
#loc57 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":67:37)
#loc58 = loc("inductor_cache/5e/c5eko4gy2xzjknw3snhjp5vyexe2eebjgpcarz5mlus7jf4njllu.py":67:4)
#loc59 = loc(fused[#loc53, #loc54])
