//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_mul_pow_rsqrt_sum_2 // -- Begin function triton_per_fused_add_mul_pow_rsqrt_sum_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_mul_pow_rsqrt_sum_2
.visible .entry triton_per_fused_add_mul_pow_rsqrt_sum_2(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mul_pow_rsqrt_sum_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mul_pow_rsqrt_sum_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mul_pow_rsqrt_sum_2_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mul_pow_rsqrt_sum_2_param_3,
	.param .u32 triton_per_fused_add_mul_pow_rsqrt_sum_2_param_4,
	.param .u32 triton_per_fused_add_mul_pow_rsqrt_sum_2_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<132>;
	.reg .f32 	%f<42>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd8, [triton_per_fused_add_mul_pow_rsqrt_sum_2_param_0];
	ld.param.u64 	%rd9, [triton_per_fused_add_mul_pow_rsqrt_sum_2_param_1];
$L__tmp0:
	.loc	1 23 28                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:23:33
	shl.b32 	%r45, %r1, 3;
	ld.param.u64 	%rd10, [triton_per_fused_add_mul_pow_rsqrt_sum_2_param_2];
	ld.param.u64 	%rd11, [triton_per_fused_add_mul_pow_rsqrt_sum_2_param_3];
	.loc	1 24 44                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:24:44
	mov.u32 	%r46, %tid.x;
	and.b32  	%r47, %r46, 31;
	bfe.u32 	%r48, %r46, 4, 3;
	and.b32  	%r49, %r46, 7;
	.loc	1 24 23                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:24:23
	or.b32  	%r50, %r45, %r48;
	or.b32  	%r51, %r45, %r49;
	.loc	1 25 21                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:25:21
	setp.lt.s32 	%p6, %r51, 16;
	setp.lt.s32 	%p1, %r50, 16;
	.loc	1 26 34                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:26:34
	shl.b32 	%r52, %r46, 2;
	and.b32  	%r53, %r52, 60;
	.loc	1 30 19                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:30:19
	bfe.s32 	%r54, %r1, 28, 1;
	.loc	1 32 19                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:32:19
	shr.u32 	%r55, %r54, 30;
	.loc	1 30 19                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:30:19
	add.s32 	%r56, %r50, %r55;
	and.b32  	%r57, %r56, 67108860;
	sub.s32 	%r58, %r50, %r57;
	.loc	1 32 19                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:32:19
	add.s32 	%r59, %r51, %r55;
	.loc	1 34 38                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:34:38
	shl.b32 	%r60, %r58, 6;
	.loc	1 34 35                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:34:35
	or.b32  	%r61, %r60, %r53;
	.loc	1 34 30                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:34:30
	mul.wide.s32 	%rd12, %r61, 4;
	add.s64 	%rd1, %rd9, %rd12;
	mov.b32 	%r6, 0;
	.loc	1 34 43                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:34:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 35 37                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:35:37
	and.b32  	%r62, %r59, -4;
	.loc	1 35 30                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:35:30
	mul.wide.s32 	%rd13, %r62, 4;
	add.s64 	%rd2, %rd10, %rd13;
	add.s64 	%rd3, %rd2, 4;
	add.s64 	%rd4, %rd2, 8;
	add.s64 	%rd5, %rd2, 12;
	.loc	1 35 42                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:35:42
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r10 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r12 }, [ %rd3 + 0 ];
	@!%p6 mov.u32 %r12, %r6;
	// end inline asm
	mov.b32 	%f6, %r12;
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r14 }, [ %rd4 + 0 ];
	@!%p6 mov.u32 %r14, %r6;
	// end inline asm
	mov.b32 	%f7, %r14;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r16 }, [ %rd5 + 0 ];
	@!%p6 mov.u32 %r16, %r6;
	// end inline asm
	mov.b32 	%f8, %r16;
	.loc	1 37 18                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:37:18
	mul.f32 	%f9, %f1, 0f3E000000;
	mul.f32 	%f10, %f2, 0f3E000000;
	mul.f32 	%f11, %f3, 0f3E000000;
	mul.f32 	%f12, %f4, 0f3E000000;
	shl.b32 	%r63, %r46, 5;
	and.b32  	%r64, %r63, 480;
	or.b32  	%r65, %r64, %r48;
	and.b32  	%r66, %r46, 127;
	shr.u32 	%r67, %r64, 1;
	mov.u32 	%r68, global_smem;
	add.s32 	%r69, %r68, %r67;
	shl.b32 	%r70, %r65, 2;
	add.s32 	%r18, %r69, %r70;
	mov.b32 	%r19, %f9;
	mov.pred 	%p14, -1;
	// begin inline asm
	@%p14 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	or.b32  	%r71, %r64, 8;
	shr.u32 	%r72, %r71, 1;
	add.s32 	%r73, %r68, %r72;
	add.s32 	%r74, %r73, %r70;
	add.s32 	%r20, %r74, 32;
	mov.b32 	%r21, %f10;
	// begin inline asm
	@%p14 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	or.b32  	%r75, %r64, 16;
	shr.u32 	%r76, %r75, 1;
	add.s32 	%r77, %r68, %r76;
	add.s32 	%r78, %r77, %r70;
	add.s32 	%r22, %r78, 64;
	mov.b32 	%r23, %f11;
	// begin inline asm
	@%p14 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	or.b32  	%r79, %r64, 24;
	shr.u32 	%r80, %r79, 1;
	add.s32 	%r81, %r68, %r80;
	add.s32 	%r82, %r81, %r70;
	add.s32 	%r24, %r82, 96;
	mov.b32 	%r25, %f12;
	// begin inline asm
	@%p14 st.shared.b32 [ %r24 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r83, %r46, 1;
	and.b32  	%r84, %r83, 60;
	add.s32 	%r85, %r68, %r84;
	shl.b32 	%r86, %r66, 2;
	add.s32 	%r87, %r85, %r86;
	ld.shared.f32 	%f13, [%r87];
	or.b32  	%r88, %r66, 128;
	shr.u32 	%r89, %r88, 1;
	and.b32  	%r90, %r89, 124;
	add.s32 	%r91, %r68, %r90;
	add.s32 	%r92, %r91, %r86;
	ld.shared.f32 	%f14, [%r92+512];
	or.b32  	%r93, %r66, 256;
	shr.u32 	%r94, %r93, 1;
	and.b32  	%r95, %r94, 188;
	add.s32 	%r96, %r68, %r95;
	add.s32 	%r97, %r96, %r86;
	ld.shared.f32 	%f15, [%r97+1024];
	or.b32  	%r98, %r66, 384;
	shr.u32 	%r99, %r98, 1;
	and.b32  	%r100, %r99, 252;
	add.s32 	%r101, %r68, %r100;
	add.s32 	%r102, %r101, %r86;
	ld.shared.f32 	%f16, [%r102+1536];
	.loc	1 38 18                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:38:18
	mul.f32 	%f17, %f13, %f5;
	mul.f32 	%f18, %f14, %f6;
	mul.f32 	%f19, %f15, %f7;
	mul.f32 	%f20, %f16, %f8;
	.loc	1 39 18                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:39:18
	mul.f32 	%f21, %f18, %f18;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f22, %f17, %f17, %f21;
	fma.rn.f32 	%f23, %f19, %f19, %f22;
	fma.rn.f32 	%f24, %f20, %f20, %f23;
	selp.f32 	%f25, %f24, 0f00000000, %p6;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r103, %f25;
	shfl.sync.bfly.b32	%r104, %r103, 16, 31, -1;
	mov.b32 	%f26, %r104;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r105, %f27;
	shfl.sync.bfly.b32	%r106, %r105, 8, 31, -1;
	mov.b32 	%f28, %r106;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	setp.lt.u32 	%p18, %r47, 8;
	shl.b32 	%r107, %r49, 4;
$L__tmp2:
	.loc	1 26 34                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:26:34
	shr.u32 	%r108, %r46, 3;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r109, %r108, 12;
	or.b32  	%r110, %r107, %r109;
	add.s32 	%r26, %r68, %r110;
	mov.b32 	%r27, %f29;
	// begin inline asm
	@%p18 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p19, %r46, 32;
	add.s32 	%r29, %r68, %r52;
	// begin inline asm
	@%p19 ld.shared.b32 %r28, [ %r29 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r28;
	shfl.sync.bfly.b32	%r111, %r28, 2, 31, -1;
	mov.b32 	%f31, %r111;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r112, %f32;
	shfl.sync.bfly.b32	%r113, %r112, 1, 31, -1;
	mov.b32 	%f33, %r113;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r114, %r46, 3;
	setp.eq.s32 	%p27, %r114, 0;
	and.pred  	%p20, %p19, %p27;
	mov.b32 	%r31, %f34;
	// begin inline asm
	@%p20 st.shared.b32 [ %r29 + 0 ], %r31;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r115, %r68, %r107;
	ld.shared.f32 	%f35, [%r115];
$L__tmp4:
	.loc	1 44 19                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:44:19
	add.f32 	%f36, %f35, 0f322BCC77;
	.loc	1 45 28                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:45:28
	rsqrt.approx.ftz.f32 	%f37, %f36;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	bfe.u32 	%r116, %r46, 3, 2;
$L__tmp6:
	.loc	1 46 19                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:46:19
	mul.f32 	%f38, %f17, %f37;
	mul.f32 	%f39, %f18, %f37;
	mul.f32 	%f40, %f19, %f37;
	mul.f32 	%f41, %f20, %f37;
	.loc	1 47 4                          // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:47:4
	bar.sync 	0;
	.loc	1 48 28                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:48:28
	mul.wide.s32 	%rd14, %r51, 4;
	add.s64 	%rd6, %rd8, %rd14;
	.loc	1 48 40                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:48:40
	or.b32  	%r117, %r109, %r116;
	setp.eq.s32 	%p28, %r117, 0;
	mov.b32 	%r32, %f37;
	and.pred  	%p21, %p28, %p6;
	// begin inline asm
	@%p21 st.global.b32 [ %rd6 + 0 ], { %r32 };
	// end inline asm
	.loc	1 49 33                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:49:33
	shl.b32 	%r118, %r50, 6;
	.loc	1 49 30                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:49:30
	or.b32  	%r119, %r118, %r53;
	.loc	1 49 25                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:49:25
	mul.wide.s32 	%rd15, %r119, 4;
	add.s64 	%rd7, %rd11, %rd15;
	.loc	1 49 45                         // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:49:45
	shl.b32 	%r120, %r46, 6;
	and.b32  	%r121, %r120, 448;
	bfe.u32 	%r122, %r46, 3, 4;
	or.b32  	%r123, %r122, %r121;
	shr.u32 	%r124, %r121, 2;
	add.s32 	%r125, %r68, %r124;
	shl.b32 	%r126, %r123, 2;
	add.s32 	%r33, %r125, %r126;
	mov.b32 	%r34, %f38;
	// begin inline asm
	@%p14 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r33, 64;
	mov.b32 	%r36, %f39;
	// begin inline asm
	@%p14 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r33, 128;
	mov.b32 	%r38, %f40;
	// begin inline asm
	@%p14 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r33, 192;
	mov.b32 	%r40, %f41;
	// begin inline asm
	@%p14 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r127, %r46, 112;
	add.s32 	%r128, %r68, %r127;
	shl.b32 	%r129, %r46, 4;
	and.b32  	%r130, %r129, 2032;
	add.s32 	%r131, %r128, %r130;
	ld.shared.v4.u32 	{%r41, %r42, %r43, %r44}, [%r131];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd7 + 0 ], { %r41, %r42, %r43, %r44 };
	// end inline asm
	.loc	1 49 4                          // cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py:49:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qq/cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 185                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 113
.b8 99
.b8 122
.b8 50
.b8 105
.b8 100
.b8 52
.b8 108
.b8 105
.b8 108
.b8 112
.b8 98
.b8 117
.b8 116
.b8 113
.b8 100
.b8 115
.b8 54
.b8 111
.b8 122
.b8 112
.b8 98
.b8 107
.b8 122
.b8 110
.b8 117
.b8 116
.b8 100
.b8 51
.b8 50
.b8 102
.b8 54
.b8 121
.b8 101
.b8 50
.b8 112
.b8 107
.b8 51
.b8 55
.b8 107
.b8 100
.b8 107
.b8 100
.b8 121
.b8 52
.b8 51
.b8 112
.b8 54
.b8 115
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 113
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
