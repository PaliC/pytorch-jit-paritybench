; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_clamp_pow_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %12 = sext i32 %10 to i64, !dbg !15
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !15
  %14 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %13, i1 %11) #4, !dbg !16
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !16
  %16 = extractvalue { i32, i32 } %14, 1, !dbg !16
  %17 = bitcast i32 %15 to float, !dbg !16
  %18 = bitcast i32 %16 to float, !dbg !16
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #4, !dbg !17
  %20 = bitcast i32 %19 to float, !dbg !17
  %21 = fcmp ogt float %17, 0x3EB0C6F7A0000000, !dbg !18
  %22 = fcmp ogt float %18, 0x3EB0C6F7A0000000, !dbg !18
  %23 = fcmp uno float %17, 0.000000e+00, !dbg !22
  %24 = fcmp uno float %18, 0.000000e+00, !dbg !22
  %25 = or i1 %21, %23, !dbg !23
  %26 = or i1 %22, %24, !dbg !23
  %27 = select i1 %25, float %17, float 0x3EB0C6F7A0000000, !dbg !24
  %28 = select i1 %26, float %18, float 0x3EB0C6F7A0000000, !dbg !24
  %29 = fmul float %20, 5.000000e-01, !dbg !25
  %30 = tail call float @llvm.nvvm.trunc.f(float %29) #4, !dbg !25
  %31 = fmul float %30, 2.000000e+00, !dbg !25
  %32 = fsub float %20, %31, !dbg !25
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i = icmp eq i32 %33, 0, !dbg !25
  %34 = tail call float @llvm.nvvm.fabs.ftz.f(float %32) #4, !dbg !25
  %35 = tail call float @llvm.nvvm.fabs.f(float %32) #4, !dbg !25
  %.08.i = select i1 %.not.i, float %35, float %34, !dbg !25
  %36 = fcmp oeq float %.08.i, 1.000000e+00, !dbg !25
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not12.i = icmp eq i32 %37, 0, !dbg !25
  %38 = tail call float @llvm.nvvm.fabs.ftz.f(float %27) #4, !dbg !25
  %39 = tail call float @llvm.nvvm.fabs.f(float %27) #4, !dbg !25
  %.09.i = select i1 %.not12.i, float %39, float %38, !dbg !25
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not13.i = icmp eq i32 %40, 0, !dbg !25
  %41 = fcmp olt float %.09.i, 0x3810000000000000, !dbg !25
  %42 = fmul float %.09.i, 0x4170000000000000, !dbg !25
  %43 = select i1 %.not13.i, i1 %41, i1 false, !dbg !25
  %.116.i = select i1 %43, float %42, float %.09.i, !dbg !25
  %expo.i.i.1.i = select i1 %43, float -1.510000e+02, float -1.270000e+02, !dbg !25
  %44 = bitcast float %.116.i to i32, !dbg !25
  %45 = and i32 %44, 8388607, !dbg !25
  %46 = or disjoint i32 %45, 1065353216, !dbg !25
  %47 = bitcast i32 %46 to float, !dbg !25
  %48 = lshr i32 %44, 23, !dbg !25
  %49 = uitofp nneg i32 %48 to float, !dbg !25
  %50 = fadd float %expo.i.i.1.i, %49, !dbg !25
  %51 = fcmp ogt float %47, 0x3FF6A09E60000000, !dbg !25
  %52 = fmul float %47, 5.000000e-01, !dbg !25
  %53 = fadd float %50, 1.000000e+00, !dbg !25
  %expo.i.i.2.i = select i1 %51, float %53, float %50, !dbg !25
  %m.i.i.0.i = select i1 %51, float %52, float %47, !dbg !25
  %54 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !25
  %55 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !25
  %56 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %55) #5, !dbg !25, !srcloc !26
  %57 = fmul float %54, 2.000000e+00, !dbg !25
  %58 = fmul float %56, %57, !dbg !25
  %59 = fmul float %58, %58, !dbg !25
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not14.i = icmp eq i32 %60, 0, !dbg !25
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %59, float 0x3F8995EC60000000) #4, !dbg !25
  %62 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %59, float 0x3F8995EC60000000) #4, !dbg !25
  %.020.i = select i1 %.not14.i, float %62, float %61, !dbg !25
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not15.i = icmp eq i32 %63, 0, !dbg !25
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %59, float 0x3FB55557A0000000) #4, !dbg !25
  %65 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %59, float 0x3FB55557A0000000) #4, !dbg !25
  %.021.i = select i1 %.not15.i, float %65, float %64, !dbg !25
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not16.i = icmp eq i32 %66, 0, !dbg !25
  %67 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %59) #4, !dbg !25
  %68 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %59) #4, !dbg !25
  %.022.i = select i1 %.not16.i, float %68, float %67, !dbg !25
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not17.i = icmp eq i32 %69, 0, !dbg !25
  %70 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %58) #4, !dbg !25
  %71 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %58) #4, !dbg !25
  %.024.i = select i1 %.not17.i, float %71, float %70, !dbg !25
  %72 = fsub float %54, %58, !dbg !25
  %73 = fmul float %72, 2.000000e+00, !dbg !25
  %74 = fneg float %58, !dbg !25
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not18.i = icmp eq i32 %75, 0, !dbg !25
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %74, float %54, float %73) #4, !dbg !25
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %74, float %54, float %73) #4, !dbg !25
  %.025.i = select i1 %.not18.i, float %77, float %76, !dbg !25
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not19.i = icmp eq i32 %78, 0, !dbg !25
  %79 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %56, float %.025.i) #4, !dbg !25
  %80 = tail call float @llvm.nvvm.mul.rn.f(float %56, float %.025.i) #4, !dbg !25
  %.026.i = select i1 %.not19.i, float %80, float %79, !dbg !25
  %81 = fadd float %58, %.024.i, !dbg !25
  %82 = fsub float %58, %81, !dbg !25
  %83 = fadd float %.024.i, %82, !dbg !25
  %84 = fadd float %.026.i, %83, !dbg !25
  %85 = fadd float %81, %84, !dbg !25
  %86 = fsub float %81, %85, !dbg !25
  %87 = fadd float %84, %86, !dbg !25
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not20.i = icmp eq i32 %88, 0, !dbg !25
  %89 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !25
  %90 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !25
  %.019.i = select i1 %.not20.i, float %90, float %89, !dbg !25
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not21.i = icmp eq i32 %91, 0, !dbg !25
  %92 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !25
  %93 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !25
  %.018.i = select i1 %.not21.i, float %93, float %92, !dbg !25
  %94 = fadd float %.019.i, %85, !dbg !25
  %95 = fsub float %.019.i, %94, !dbg !25
  %96 = fadd float %85, %95, !dbg !25
  %97 = fadd float %87, %96, !dbg !25
  %98 = fadd float %.018.i, %97, !dbg !25
  %99 = fadd float %94, %98, !dbg !25
  %100 = fsub float %94, %99, !dbg !25
  %101 = fadd float %98, %100, !dbg !25
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not22.i = icmp eq i32 %102, 0, !dbg !25
  %103 = tail call float @llvm.nvvm.fabs.ftz.f(float %20) #4, !dbg !25
  %104 = tail call float @llvm.nvvm.fabs.f(float %20) #4, !dbg !25
  %.027.i = select i1 %.not22.i, float %104, float %103, !dbg !25
  %105 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !25
  %106 = fmul float %20, 0x3F20000000000000, !dbg !25
  %.013.i = select i1 %105, float %106, float %20, !dbg !25
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not23.i = icmp eq i32 %107, 0, !dbg !25
  %108 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i, float %99) #4, !dbg !25
  %109 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i, float %99) #4, !dbg !25
  %.028.i = select i1 %.not23.i, float %109, float %108, !dbg !25
  %110 = fneg float %.028.i, !dbg !25
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not24.i = icmp eq i32 %111, 0, !dbg !25
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %99, float %110) #4, !dbg !25
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %99, float %110) #4, !dbg !25
  %.029.i = select i1 %.not24.i, float %113, float %112, !dbg !25
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not25.i = icmp eq i32 %114, 0, !dbg !25
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %101, float %.029.i) #4, !dbg !25
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %101, float %.029.i) #4, !dbg !25
  %.030.i = select i1 %.not25.i, float %116, float %115, !dbg !25
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not26.i = icmp eq i32 %117, 0, !dbg !25
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %99, float %.030.i) #4, !dbg !25
  %119 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %99, float %.030.i) #4, !dbg !25
  %.031.i = select i1 %.not26.i, float %119, float %118, !dbg !25
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not27.i = icmp eq i32 %120, 0, !dbg !25
  %121 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #4, !dbg !25
  %122 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #4, !dbg !25
  %.032.i = select i1 %.not27.i, float %122, float %121, !dbg !25
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %125 = bitcast float %.032.i to i32, !dbg !25
  %126 = icmp eq i32 %125, 1118925336, !dbg !25
  %prod.i.145.0.i = select i1 %126, float 0x40562E42E0000000, float %.032.i, !dbg !25
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not30.i = icmp eq i32 %127, 0, !dbg !25
  %128 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !25
  %129 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !25
  %.017.i = select i1 %.not30.i, float %129, float %128, !dbg !25
  %130 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #4, !dbg !25
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not31.i = icmp eq i32 %131, 0, !dbg !25
  %132 = tail call float @llvm.nvvm.fabs.ftz.f(float %130) #4, !dbg !25
  %133 = tail call float @llvm.nvvm.fabs.f(float %130) #4, !dbg !25
  %.023.i = select i1 %.not31.i, float %133, float %132, !dbg !25
  %134 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !25
  %135 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %130), !dbg !25
  %j.i.i.0.i = select i1 %134, float %135, float %130, !dbg !25
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not32.i = icmp eq i32 %136, 0, !dbg !25
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !25
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !25
  %.035.i = select i1 %.not32.i, float %138, float %137, !dbg !25
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not33.i = icmp eq i32 %139, 0, !dbg !25
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !25
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !25
  %.036.i = select i1 %.not33.i, float %141, float %140, !dbg !25
  %142 = fmul float %.036.i, 0x3FF7154760000000, !dbg !25
  %143 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !25
  %144 = bitcast float %143 to i32, !dbg !25
  %145 = shl i32 %144, 23, !dbg !25
  %146 = bitcast i32 %145 to float, !dbg !25
  %147 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %142) #4, !dbg !25
  %148 = fmul float %147, %146, !dbg !25
  %149 = fcmp une float %148, 0x7FF0000000000000, !dbg !25
  br i1 %149, label %__internal_fmad.exit.i.i, label %__internal_accurate_powf.exit.i, !dbg !25

__internal_fmad.exit.i.i:                         ; preds = %4
  %.not29.i = icmp eq i32 %124, 0, !dbg !25
  %.not28.i = icmp eq i32 %123, 0, !dbg !25
  %150 = fneg float %.032.i, !dbg !25
  %151 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %150) #4, !dbg !25
  %152 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %150) #4, !dbg !25
  %.033.i = select i1 %.not28.i, float %151, float %152, !dbg !25
  %153 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #4, !dbg !25
  %154 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #4, !dbg !25
  %.034.i = select i1 %.not29.i, float %153, float %154, !dbg !25
  %155 = fadd float %.034.i, 0x3EE0000000000000, !dbg !25
  %prod.i.044.0.i = select i1 %126, float %155, float %.034.i, !dbg !25
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not34.i = icmp eq i32 %156, 0, !dbg !25
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float %prod.i.044.0.i, float %148) #4, !dbg !25
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %148, float %prod.i.044.0.i, float %148) #4, !dbg !25
  %.014.i = select i1 %.not34.i, float %158, float %157, !dbg !25
  br label %__internal_accurate_powf.exit.i, !dbg !25

__internal_accurate_powf.exit.i:                  ; preds = %__internal_fmad.exit.i.i, %4
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %4 ], !dbg !25
  %159 = fcmp olt float %27, 0.000000e+00, !dbg !25
  %or.cond.i = select i1 %159, i1 %36, i1 false, !dbg !25
  %160 = fcmp oeq float %27, 0.000000e+00, !dbg !25
  br i1 %160, label %161, label %167, !dbg !25

161:                                              ; preds = %__internal_accurate_powf.exit.i
  %162 = fadd float %27, %27, !dbg !25
  %163 = bitcast float %162 to i32, !dbg !25
  %ti.i11.0.i = select i1 %36, i32 %163, i32 0, !dbg !25
  %164 = fcmp olt float %20, 0.000000e+00, !dbg !25
  %165 = or i32 %ti.i11.0.i, 2139095040, !dbg !25
  %ti.i11.1.i = select i1 %164, i32 %165, i32 %ti.i11.0.i, !dbg !25
  %166 = bitcast i32 %ti.i11.1.i to float, !dbg !25
  br label %__internal_powf_corner_cases.exit.i, !dbg !25

167:                                              ; preds = %__internal_accurate_powf.exit.i
  %168 = fneg float %t.i.0.i, !dbg !25
  %.010.i = select i1 %or.cond.i, float %168, float %t.i.0.i, !dbg !25
  %169 = tail call float @llvm.nvvm.trunc.f(float %20) #4, !dbg !25
  %170 = fcmp une float %169, %20, !dbg !25
  %or.cond2.i = select i1 %159, i1 %170, i1 false, !dbg !25
  %.111.i = select i1 %or.cond2.i, float 0x7FFFFFFFE0000000, float %.010.i, !dbg !25
  br label %__internal_powf_corner_cases.exit.i, !dbg !25

__internal_powf_corner_cases.exit.i:              ; preds = %167, %161
  %.212.i = phi float [ %166, %161 ], [ %.111.i, %167 ], !dbg !25
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not35.i = icmp eq i32 %171, 0, !dbg !25
  %.01.i = select i1 %.not35.i, float %39, float %38, !dbg !25
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not36.i = icmp eq i32 %172, 0, !dbg !25
  %.02.i = select i1 %.not36.i, float %104, float %103, !dbg !25
  %173 = fadd float %.01.i, %.02.i, !dbg !25
  %174 = bitcast float %173 to i32, !dbg !25
  %175 = icmp sgt i32 %174, 2139095039, !dbg !25
  br i1 %175, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !25

__nv_isnanf.exit.i.i:                             ; preds = %__internal_powf_corner_cases.exit.i
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not37.i = icmp eq i32 %176, 0, !dbg !25
  %.06.i = select i1 %.not37.i, float %39, float %38, !dbg !25
  %177 = fcmp uno float %.06.i, 0.000000e+00, !dbg !25
  br i1 %177, label %180, label %__nv_isnanf.exit11.i.i, !dbg !25

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not38.i = icmp eq i32 %178, 0, !dbg !25
  %.07.i = select i1 %.not38.i, float %104, float %103, !dbg !25
  %179 = fcmp uno float %.07.i, 0.000000e+00, !dbg !25
  br i1 %179, label %180, label %__nv_isinff.exit8.i.i, !dbg !25

180:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %181 = fadd float %27, %20, !dbg !25
  br label %__nv_powf.exit, !dbg !25

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not39.i = icmp eq i32 %182, 0, !dbg !25
  %.05.i = select i1 %.not39.i, float %104, float %103, !dbg !25
  %183 = fcmp oeq float %.05.i, 0x7FF0000000000000, !dbg !25
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not41.i = icmp eq i32 %184, 0, !dbg !25
  %.04.i = select i1 %.not41.i, float %39, float %38, !dbg !25
  br i1 %183, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !25

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %185 = fcmp ogt float %.04.i, 1.000000e+00, !dbg !25
  %ti.i.0.i = select i1 %185, i32 2139095040, i32 0, !dbg !25
  %186 = fcmp olt float %20, 0.000000e+00, !dbg !25
  %187 = xor i32 %ti.i.0.i, 2139095040, !dbg !25
  %ti.i.1.i = select i1 %186, i32 %187, i32 %ti.i.0.i, !dbg !25
  %188 = fcmp oeq float %27, -1.000000e+00, !dbg !25
  %189 = bitcast i32 %ti.i.1.i to float, !dbg !25
  %190 = select i1 %188, float 1.000000e+00, float %189, !dbg !25
  br label %__nv_powf.exit, !dbg !25

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %191 = fcmp oeq float %.04.i, 0x7FF0000000000000, !dbg !25
  br i1 %191, label %192, label %__nv_powf.exit, !dbg !25

192:                                              ; preds = %__nv_isinff.exit.i.i
  %193 = fcmp oge float %20, 0.000000e+00, !dbg !25
  %ti.i.3.i = select i1 %193, i32 2139095040, i32 0, !dbg !25
  %194 = or disjoint i32 %ti.i.3.i, -2147483648, !dbg !25
  %ti.i.4.i = select i1 %or.cond.i, i32 %194, i32 %ti.i.3.i, !dbg !25
  %195 = bitcast i32 %ti.i.4.i to float, !dbg !25
  br label %__nv_powf.exit, !dbg !25

__nv_powf.exit:                                   ; preds = %__internal_powf_corner_cases.exit.i, %180, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %192
  %.3.i = phi float [ %.212.i, %__internal_powf_corner_cases.exit.i ], [ %181, %180 ], [ %190, %__nv_fabsf.exit5.i.i ], [ %195, %192 ], [ %.212.i, %__nv_isinff.exit.i.i ], !dbg !25
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i1 = icmp eq i32 %196, 0, !dbg !25
  %.08.i2 = select i1 %.not.i1, float %35, float %34, !dbg !25
  %197 = fcmp oeq float %.08.i2, 1.000000e+00, !dbg !25
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not12.i3 = icmp eq i32 %198, 0, !dbg !25
  %199 = tail call float @llvm.nvvm.fabs.ftz.f(float %28) #4, !dbg !25
  %200 = tail call float @llvm.nvvm.fabs.f(float %28) #4, !dbg !25
  %.09.i4 = select i1 %.not12.i3, float %200, float %199, !dbg !25
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not13.i5 = icmp eq i32 %201, 0, !dbg !25
  %202 = fcmp olt float %.09.i4, 0x3810000000000000, !dbg !25
  %203 = fmul float %.09.i4, 0x4170000000000000, !dbg !25
  %204 = select i1 %.not13.i5, i1 %202, i1 false, !dbg !25
  %.116.i8 = select i1 %204, float %203, float %.09.i4, !dbg !25
  %expo.i.i.1.i9 = select i1 %204, float -1.510000e+02, float -1.270000e+02, !dbg !25
  %205 = bitcast float %.116.i8 to i32, !dbg !25
  %206 = and i32 %205, 8388607, !dbg !25
  %207 = or disjoint i32 %206, 1065353216, !dbg !25
  %208 = bitcast i32 %207 to float, !dbg !25
  %209 = lshr i32 %205, 23, !dbg !25
  %210 = uitofp nneg i32 %209 to float, !dbg !25
  %211 = fadd float %expo.i.i.1.i9, %210, !dbg !25
  %212 = fcmp ogt float %208, 0x3FF6A09E60000000, !dbg !25
  %213 = fmul float %208, 5.000000e-01, !dbg !25
  %214 = fadd float %211, 1.000000e+00, !dbg !25
  %expo.i.i.2.i10 = select i1 %212, float %214, float %211, !dbg !25
  %m.i.i.0.i11 = select i1 %212, float %213, float %208, !dbg !25
  %215 = fadd float %m.i.i.0.i11, -1.000000e+00, !dbg !25
  %216 = fadd float %m.i.i.0.i11, 1.000000e+00, !dbg !25
  %217 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %216) #5, !dbg !25, !srcloc !26
  %218 = fmul float %215, 2.000000e+00, !dbg !25
  %219 = fmul float %217, %218, !dbg !25
  %220 = fmul float %219, %219, !dbg !25
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not14.i12 = icmp eq i32 %221, 0, !dbg !25
  %222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %220, float 0x3F8995EC60000000) #4, !dbg !25
  %223 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %220, float 0x3F8995EC60000000) #4, !dbg !25
  %.020.i13 = select i1 %.not14.i12, float %223, float %222, !dbg !25
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not15.i14 = icmp eq i32 %224, 0, !dbg !25
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i13, float %220, float 0x3FB55557A0000000) #4, !dbg !25
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i13, float %220, float 0x3FB55557A0000000) #4, !dbg !25
  %.021.i15 = select i1 %.not15.i14, float %226, float %225, !dbg !25
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not16.i16 = icmp eq i32 %227, 0, !dbg !25
  %228 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i15, float %220) #4, !dbg !25
  %229 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i15, float %220) #4, !dbg !25
  %.022.i17 = select i1 %.not16.i16, float %229, float %228, !dbg !25
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not17.i18 = icmp eq i32 %230, 0, !dbg !25
  %231 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i17, float %219) #4, !dbg !25
  %232 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i17, float %219) #4, !dbg !25
  %.024.i19 = select i1 %.not17.i18, float %232, float %231, !dbg !25
  %233 = fsub float %215, %219, !dbg !25
  %234 = fmul float %233, 2.000000e+00, !dbg !25
  %235 = fneg float %219, !dbg !25
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not18.i20 = icmp eq i32 %236, 0, !dbg !25
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %235, float %215, float %234) #4, !dbg !25
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %235, float %215, float %234) #4, !dbg !25
  %.025.i21 = select i1 %.not18.i20, float %238, float %237, !dbg !25
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not19.i22 = icmp eq i32 %239, 0, !dbg !25
  %240 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %217, float %.025.i21) #4, !dbg !25
  %241 = tail call float @llvm.nvvm.mul.rn.f(float %217, float %.025.i21) #4, !dbg !25
  %.026.i23 = select i1 %.not19.i22, float %241, float %240, !dbg !25
  %242 = fadd float %219, %.024.i19, !dbg !25
  %243 = fsub float %219, %242, !dbg !25
  %244 = fadd float %.024.i19, %243, !dbg !25
  %245 = fadd float %.026.i23, %244, !dbg !25
  %246 = fadd float %242, %245, !dbg !25
  %247 = fsub float %242, %246, !dbg !25
  %248 = fadd float %245, %247, !dbg !25
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not20.i24 = icmp eq i32 %249, 0, !dbg !25
  %250 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i10, float 0x3FE62E4000000000) #4, !dbg !25
  %251 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i10, float 0x3FE62E4000000000) #4, !dbg !25
  %.019.i25 = select i1 %.not20.i24, float %251, float %250, !dbg !25
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not21.i26 = icmp eq i32 %252, 0, !dbg !25
  %253 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i10, float 0x3EB7F7D1C0000000) #4, !dbg !25
  %254 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i10, float 0x3EB7F7D1C0000000) #4, !dbg !25
  %.018.i27 = select i1 %.not21.i26, float %254, float %253, !dbg !25
  %255 = fadd float %.019.i25, %246, !dbg !25
  %256 = fsub float %.019.i25, %255, !dbg !25
  %257 = fadd float %246, %256, !dbg !25
  %258 = fadd float %248, %257, !dbg !25
  %259 = fadd float %.018.i27, %258, !dbg !25
  %260 = fadd float %255, %259, !dbg !25
  %261 = fsub float %255, %260, !dbg !25
  %262 = fadd float %259, %261, !dbg !25
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not22.i28 = icmp eq i32 %263, 0, !dbg !25
  %.027.i29 = select i1 %.not22.i28, float %104, float %103, !dbg !25
  %264 = fcmp ogt float %.027.i29, 0x46FED09BE0000000, !dbg !25
  %.013.i30 = select i1 %264, float %106, float %20, !dbg !25
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not23.i31 = icmp eq i32 %265, 0, !dbg !25
  %266 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i30, float %260) #4, !dbg !25
  %267 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i30, float %260) #4, !dbg !25
  %.028.i32 = select i1 %.not23.i31, float %267, float %266, !dbg !25
  %268 = fneg float %.028.i32, !dbg !25
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not24.i33 = icmp eq i32 %269, 0, !dbg !25
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i30, float %260, float %268) #4, !dbg !25
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i30, float %260, float %268) #4, !dbg !25
  %.029.i34 = select i1 %.not24.i33, float %271, float %270, !dbg !25
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not25.i35 = icmp eq i32 %272, 0, !dbg !25
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i30, float %262, float %.029.i34) #4, !dbg !25
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i30, float %262, float %.029.i34) #4, !dbg !25
  %.030.i36 = select i1 %.not25.i35, float %274, float %273, !dbg !25
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not26.i37 = icmp eq i32 %275, 0, !dbg !25
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %260, float %.030.i36) #4, !dbg !25
  %277 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %260, float %.030.i36) #4, !dbg !25
  %.031.i38 = select i1 %.not26.i37, float %277, float %276, !dbg !25
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not27.i39 = icmp eq i32 %278, 0, !dbg !25
  %279 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i32, float %.031.i38) #4, !dbg !25
  %280 = tail call float @llvm.nvvm.add.rn.f(float %.028.i32, float %.031.i38) #4, !dbg !25
  %.032.i40 = select i1 %.not27.i39, float %280, float %279, !dbg !25
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %283 = bitcast float %.032.i40 to i32, !dbg !25
  %284 = icmp eq i32 %283, 1118925336, !dbg !25
  %prod.i.145.0.i46 = select i1 %284, float 0x40562E42E0000000, float %.032.i40, !dbg !25
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not30.i47 = icmp eq i32 %285, 0, !dbg !25
  %286 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i46, float 0x3FF7154760000000) #4, !dbg !25
  %287 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i46, float 0x3FF7154760000000) #4, !dbg !25
  %.017.i48 = select i1 %.not30.i47, float %287, float %286, !dbg !25
  %288 = tail call float @llvm.nvvm.trunc.f(float %.017.i48) #4, !dbg !25
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not31.i49 = icmp eq i32 %289, 0, !dbg !25
  %290 = tail call float @llvm.nvvm.fabs.ftz.f(float %288) #4, !dbg !25
  %291 = tail call float @llvm.nvvm.fabs.f(float %288) #4, !dbg !25
  %.023.i50 = select i1 %.not31.i49, float %291, float %290, !dbg !25
  %292 = fcmp ogt float %.023.i50, 1.260000e+02, !dbg !25
  %293 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %288), !dbg !25
  %j.i.i.0.i51 = select i1 %292, float %293, float %288, !dbg !25
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not32.i52 = icmp eq i32 %294, 0, !dbg !25
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i51, float 0xBFE62E4300000000, float %prod.i.145.0.i46) #4, !dbg !25
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i51, float 0xBFE62E4300000000, float %prod.i.145.0.i46) #4, !dbg !25
  %.035.i53 = select i1 %.not32.i52, float %296, float %295, !dbg !25
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not33.i54 = icmp eq i32 %297, 0, !dbg !25
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i51, float 0x3E205C6100000000, float %.035.i53) #4, !dbg !25
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i51, float 0x3E205C6100000000, float %.035.i53) #4, !dbg !25
  %.036.i55 = select i1 %.not33.i54, float %299, float %298, !dbg !25
  %300 = fmul float %.036.i55, 0x3FF7154760000000, !dbg !25
  %301 = fadd float %j.i.i.0.i51, 0x4168000FE0000000, !dbg !25
  %302 = bitcast float %301 to i32, !dbg !25
  %303 = shl i32 %302, 23, !dbg !25
  %304 = bitcast i32 %303 to float, !dbg !25
  %305 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %300) #4, !dbg !25
  %306 = fmul float %305, %304, !dbg !25
  %307 = fcmp une float %306, 0x7FF0000000000000, !dbg !25
  br i1 %307, label %__internal_fmad.exit.i.i92, label %__internal_accurate_powf.exit.i56, !dbg !25

__internal_fmad.exit.i.i92:                       ; preds = %__nv_powf.exit
  %.not29.i43 = icmp eq i32 %282, 0, !dbg !25
  %.not28.i41 = icmp eq i32 %281, 0, !dbg !25
  %308 = fneg float %.032.i40, !dbg !25
  %309 = tail call float @llvm.nvvm.add.rn.f(float %.028.i32, float %308) #4, !dbg !25
  %310 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i32, float %308) #4, !dbg !25
  %.033.i42 = select i1 %.not28.i41, float %309, float %310, !dbg !25
  %311 = tail call float @llvm.nvvm.add.rn.f(float %.033.i42, float %.031.i38) #4, !dbg !25
  %312 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i42, float %.031.i38) #4, !dbg !25
  %.034.i44 = select i1 %.not29.i43, float %311, float %312, !dbg !25
  %313 = fadd float %.034.i44, 0x3EE0000000000000, !dbg !25
  %prod.i.044.0.i45 = select i1 %284, float %313, float %.034.i44, !dbg !25
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not34.i93 = icmp eq i32 %314, 0, !dbg !25
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %306, float %prod.i.044.0.i45, float %306) #4, !dbg !25
  %316 = tail call float @llvm.nvvm.fma.rn.f(float %306, float %prod.i.044.0.i45, float %306) #4, !dbg !25
  %.014.i94 = select i1 %.not34.i93, float %316, float %315, !dbg !25
  br label %__internal_accurate_powf.exit.i56, !dbg !25

__internal_accurate_powf.exit.i56:                ; preds = %__internal_fmad.exit.i.i92, %__nv_powf.exit
  %t.i.0.i57 = phi float [ %.014.i94, %__internal_fmad.exit.i.i92 ], [ 0x7FF0000000000000, %__nv_powf.exit ], !dbg !25
  %317 = fcmp olt float %28, 0.000000e+00, !dbg !25
  %or.cond.i58 = select i1 %317, i1 %197, i1 false, !dbg !25
  %318 = fcmp oeq float %28, 0.000000e+00, !dbg !25
  br i1 %318, label %319, label %325, !dbg !25

319:                                              ; preds = %__internal_accurate_powf.exit.i56
  %320 = fadd float %28, %28, !dbg !25
  %321 = bitcast float %320 to i32, !dbg !25
  %ti.i11.0.i90 = select i1 %197, i32 %321, i32 0, !dbg !25
  %322 = fcmp olt float %20, 0.000000e+00, !dbg !25
  %323 = or i32 %ti.i11.0.i90, 2139095040, !dbg !25
  %ti.i11.1.i91 = select i1 %322, i32 %323, i32 %ti.i11.0.i90, !dbg !25
  %324 = bitcast i32 %ti.i11.1.i91 to float, !dbg !25
  br label %__internal_powf_corner_cases.exit.i62, !dbg !25

325:                                              ; preds = %__internal_accurate_powf.exit.i56
  %326 = fneg float %t.i.0.i57, !dbg !25
  %.010.i59 = select i1 %or.cond.i58, float %326, float %t.i.0.i57, !dbg !25
  %327 = tail call float @llvm.nvvm.trunc.f(float %20) #4, !dbg !25
  %328 = fcmp une float %327, %20, !dbg !25
  %or.cond2.i60 = select i1 %317, i1 %328, i1 false, !dbg !25
  %.111.i61 = select i1 %or.cond2.i60, float 0x7FFFFFFFE0000000, float %.010.i59, !dbg !25
  br label %__internal_powf_corner_cases.exit.i62, !dbg !25

__internal_powf_corner_cases.exit.i62:            ; preds = %325, %319
  %.212.i63 = phi float [ %324, %319 ], [ %.111.i61, %325 ], !dbg !25
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not35.i64 = icmp eq i32 %329, 0, !dbg !25
  %.01.i65 = select i1 %.not35.i64, float %200, float %199, !dbg !25
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not36.i66 = icmp eq i32 %330, 0, !dbg !25
  %.02.i67 = select i1 %.not36.i66, float %104, float %103, !dbg !25
  %331 = fadd float %.01.i65, %.02.i67, !dbg !25
  %332 = bitcast float %331 to i32, !dbg !25
  %333 = icmp sgt i32 %332, 2139095039, !dbg !25
  br i1 %333, label %__nv_isnanf.exit.i.i71, label %__nv_powf.exit95, !dbg !25

__nv_isnanf.exit.i.i71:                           ; preds = %__internal_powf_corner_cases.exit.i62
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not37.i72 = icmp eq i32 %334, 0, !dbg !25
  %.06.i73 = select i1 %.not37.i72, float %200, float %199, !dbg !25
  %335 = fcmp uno float %.06.i73, 0.000000e+00, !dbg !25
  br i1 %335, label %338, label %__nv_isnanf.exit11.i.i74, !dbg !25

__nv_isnanf.exit11.i.i74:                         ; preds = %__nv_isnanf.exit.i.i71
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not38.i75 = icmp eq i32 %336, 0, !dbg !25
  %.07.i76 = select i1 %.not38.i75, float %104, float %103, !dbg !25
  %337 = fcmp uno float %.07.i76, 0.000000e+00, !dbg !25
  br i1 %337, label %338, label %__nv_isinff.exit8.i.i77, !dbg !25

338:                                              ; preds = %__nv_isnanf.exit11.i.i74, %__nv_isnanf.exit.i.i71
  %339 = fadd float %28, %20, !dbg !25
  br label %__nv_powf.exit95, !dbg !25

__nv_isinff.exit8.i.i77:                          ; preds = %__nv_isnanf.exit11.i.i74
  %340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not39.i78 = icmp eq i32 %340, 0, !dbg !25
  %.05.i79 = select i1 %.not39.i78, float %104, float %103, !dbg !25
  %341 = fcmp oeq float %.05.i79, 0x7FF0000000000000, !dbg !25
  %342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not41.i86 = icmp eq i32 %342, 0, !dbg !25
  %.04.i87 = select i1 %.not41.i86, float %200, float %199, !dbg !25
  br i1 %341, label %__nv_fabsf.exit5.i.i85, label %__nv_isinff.exit.i.i80, !dbg !25

__nv_fabsf.exit5.i.i85:                           ; preds = %__nv_isinff.exit8.i.i77
  %343 = fcmp ogt float %.04.i87, 1.000000e+00, !dbg !25
  %ti.i.0.i88 = select i1 %343, i32 2139095040, i32 0, !dbg !25
  %344 = fcmp olt float %20, 0.000000e+00, !dbg !25
  %345 = xor i32 %ti.i.0.i88, 2139095040, !dbg !25
  %ti.i.1.i89 = select i1 %344, i32 %345, i32 %ti.i.0.i88, !dbg !25
  %346 = fcmp oeq float %28, -1.000000e+00, !dbg !25
  %347 = bitcast i32 %ti.i.1.i89 to float, !dbg !25
  %348 = select i1 %346, float 1.000000e+00, float %347, !dbg !25
  br label %__nv_powf.exit95, !dbg !25

__nv_isinff.exit.i.i80:                           ; preds = %__nv_isinff.exit8.i.i77
  %349 = fcmp oeq float %.04.i87, 0x7FF0000000000000, !dbg !25
  br i1 %349, label %350, label %__nv_powf.exit95, !dbg !25

350:                                              ; preds = %__nv_isinff.exit.i.i80
  %351 = fcmp oge float %20, 0.000000e+00, !dbg !25
  %ti.i.3.i83 = select i1 %351, i32 2139095040, i32 0, !dbg !25
  %352 = or disjoint i32 %ti.i.3.i83, -2147483648, !dbg !25
  %ti.i.4.i84 = select i1 %or.cond.i58, i32 %352, i32 %ti.i.3.i83, !dbg !25
  %353 = bitcast i32 %ti.i.4.i84 to float, !dbg !25
  br label %__nv_powf.exit95, !dbg !25

__nv_powf.exit95:                                 ; preds = %__internal_powf_corner_cases.exit.i62, %338, %__nv_fabsf.exit5.i.i85, %__nv_isinff.exit.i.i80, %350
  %.3.i68 = phi float [ %.212.i63, %__internal_powf_corner_cases.exit.i62 ], [ %339, %338 ], [ %348, %__nv_fabsf.exit5.i.i85 ], [ %353, %350 ], [ %.212.i63, %__nv_isinff.exit.i.i80 ], !dbg !25
  %354 = fcmp oeq float %27, 1.000000e+00, !dbg !25
  %355 = fcmp oeq float %20, 0.000000e+00, !dbg !25
  %or.cond4.i = select i1 %354, i1 true, i1 %355, !dbg !25
  %356 = fcmp oeq float %28, 1.000000e+00, !dbg !25
  %or.cond4.i69 = select i1 %356, i1 true, i1 %355, !dbg !25
  %357 = getelementptr float, ptr addrspace(1) %2, i64 %12, !dbg !27
  %358 = bitcast float %.3.i to i32, !dbg !28
  %359 = select i1 %or.cond4.i, i32 1065353216, i32 %358, !dbg !25
  %360 = bitcast float %.3.i68 to i32, !dbg !28
  %361 = select i1 %or.cond4.i69, i32 1065353216, i32 %360, !dbg !25
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %359, i32 %361, ptr addrspace(1) %357, i1 %11) #4, !dbg !28
  ret void, !dbg !29
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py", directory: "inductor_cache/er")
!4 = !{ptr @triton_poi_fused_clamp_pow_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clamp_pow_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clamp_pow_0", linkageName: "triton_poi_fused_clamp_pow_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 118, column: 15, scope: !19, inlinedAt: !21)
!19 = distinct !DILexicalBlockFile(scope: !7, file: !20, discriminator: 0)
!20 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!21 = !DILocation(line: 29, column: 40, scope: !7)
!22 = !DILocation(line: 120, column: 21, scope: !19, inlinedAt: !21)
!23 = !DILocation(line: 120, column: 16, scope: !19, inlinedAt: !21)
!24 = !DILocation(line: 121, column: 29, scope: !19, inlinedAt: !21)
!25 = !DILocation(line: 30, column: 31, scope: !7)
!26 = !{i32 21046}
!27 = !DILocation(line: 31, column: 25, scope: !7)
!28 = !DILocation(line: 31, column: 36, scope: !7)
!29 = !DILocation(line: 31, column: 4, scope: !7)
