//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clamp_pow_0 // -- Begin function triton_poi_fused_clamp_pow_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_clamp_pow_0
.visible .entry triton_poi_fused_clamp_pow_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clamp_pow_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clamp_pow_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clamp_pow_0_param_2,
	.param .u32 triton_poi_fused_clamp_pow_0_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<56>;
	.reg .b32 	%r<53>;
	.reg .f32 	%f<209>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_clamp_pow_0_param_0];
	ld.param.u64 	%rd4, [triton_poi_fused_clamp_pow_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:21:28
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:21:33
	shl.b32 	%r7, %r3, 8;
	.loc	1 22 36                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:22:36
	mov.u32 	%r8, %tid.x;
	shl.b32 	%r9, %r8, 1;
	and.b32  	%r10, %r9, 254;
	.loc	1 22 23                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:22:23
	or.b32  	%r11, %r7, %r10;
	.loc	1 23 21                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:23:21
	setp.lt.s32 	%p3, %r11, 256;
	.loc	1 25 30                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:25:30
	mul.wide.s32 	%rd6, %r11, 4;
	add.s64 	%rd3, %rd5, %rd6;
	.loc	1 25 35                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:25:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p3 ld.global.v2.b32 { %r4, %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f38, %r4;
	mov.b32 	%f39, %r5;
	mov.pred 	%p4, -1;
	.loc	1 26 19                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:26:19
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p4 ld.global.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r6;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p5, %f38, 0f358637BD;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p7, %f38, %f38;
	setp.nan.f32 	%p8, %f39, %f39;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f40, %f38, 0f358637BD, %p7;
	selp.f32 	%f2, %f38, %f40, %p5;
$L__tmp2:
	.loc	1 30 31                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:30:31
	mul.f32 	%f42, %f1, 0f3F000000;
	cvt.rzi.f32.f32 	%f43, %f42;
	fma.rn.f32 	%f44, %f43, 0fC0000000, %f1;
	abs.ftz.f32 	%f4, %f44;
	abs.ftz.f32 	%f5, %f2;
	mov.b32 	%r12, %f5;
	and.b32  	%r13, %r12, 8388607;
	or.b32  	%r14, %r13, 1065353216;
	mov.b32 	%f45, %r14;
	shr.u32 	%r15, %r12, 23;
	cvt.rn.f32.u32 	%f46, %r15;
	add.f32 	%f47, %f46, 0fC2FE0000;
	setp.gt.f32 	%p9, %f45, 0f3FB504F3;
	mul.f32 	%f48, %f45, 0f3F000000;
	add.f32 	%f49, %f47, 0f3F800000;
	selp.f32 	%f50, %f49, %f47, %p9;
	selp.f32 	%f51, %f48, %f45, %p9;
	add.f32 	%f52, %f51, 0fBF800000;
	add.f32 	%f36, %f51, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f35,%f36;
	// end inline asm
	add.f32 	%f53, %f52, %f52;
	mul.f32 	%f54, %f35, %f53;
	mul.f32 	%f55, %f54, %f54;
	mov.f32 	%f56, 0f3C4CAF63;
	mov.f32 	%f57, 0f3B18F0FE;
	fma.rn.ftz.f32 	%f58, %f57, %f55, %f56;
	mov.f32 	%f59, 0f3DAAAABD;
	fma.rn.ftz.f32 	%f60, %f58, %f55, %f59;
	mul.rn.ftz.f32 	%f61, %f60, %f55;
	mul.rn.ftz.f32 	%f62, %f61, %f54;
	neg.f32 	%f63, %f35;
	fma.rn.f32 	%f64, %f63, %f53, %f52;
	add.f32 	%f65, %f64, %f64;
	neg.f32 	%f66, %f54;
	fma.rn.ftz.f32 	%f67, %f66, %f52, %f65;
	mul.rn.ftz.f32 	%f68, %f35, %f67;
	fma.rn.f32 	%f69, %f35, %f53, %f62;
	neg.f32 	%f70, %f69;
	fma.rn.f32 	%f71, %f35, %f53, %f70;
	add.f32 	%f72, %f62, %f71;
	add.f32 	%f73, %f68, %f72;
	add.f32 	%f74, %f69, %f73;
	sub.f32 	%f75, %f69, %f74;
	add.f32 	%f76, %f73, %f75;
	mov.f32 	%f77, 0f3F317200;
	mul.rn.ftz.f32 	%f78, %f50, %f77;
	mov.f32 	%f79, 0f35BFBE8E;
	mul.rn.ftz.f32 	%f80, %f50, %f79;
	add.f32 	%f81, %f78, %f74;
	sub.f32 	%f82, %f78, %f81;
	add.f32 	%f83, %f74, %f82;
	add.f32 	%f84, %f76, %f83;
	add.f32 	%f85, %f80, %f84;
	add.f32 	%f86, %f81, %f85;
	sub.f32 	%f87, %f81, %f86;
	add.f32 	%f88, %f85, %f87;
	abs.ftz.f32 	%f6, %f1;
	setp.gt.f32 	%p10, %f6, 0f77F684DF;
	mul.f32 	%f89, %f1, 0f39000000;
	selp.f32 	%f7, %f89, %f1, %p10;
	mul.rn.ftz.f32 	%f8, %f7, %f86;
	neg.f32 	%f90, %f8;
	fma.rn.ftz.f32 	%f91, %f7, %f86, %f90;
	fma.rn.ftz.f32 	%f92, %f7, %f88, %f91;
	mov.f32 	%f93, 0f00000000;
	fma.rn.ftz.f32 	%f9, %f93, %f86, %f92;
	add.rn.ftz.f32 	%f10, %f8, %f9;
	mov.b32 	%r1, %f10;
	setp.eq.s32 	%p11, %r1, 1118925336;
	selp.f32 	%f94, 0f42B17217, %f10, %p11;
	mov.f32 	%f95, 0f3FB8AA3B;
	mul.rn.ftz.f32 	%f96, %f94, %f95;
	cvt.rzi.f32.f32 	%f97, %f96;
	abs.ftz.f32 	%f98, %f97;
	setp.gt.f32 	%p12, %f98, 0f42FC0000;
	mov.f32 	%f99, 0f42FC0000;
	copysign.f32 	%f100, %f97, %f99;
	selp.f32 	%f101, %f100, %f97, %p12;
	mov.f32 	%f102, 0fBF317218;
	fma.rn.ftz.f32 	%f103, %f101, %f102, %f94;
	mov.f32 	%f104, 0f3102E308;
	fma.rn.ftz.f32 	%f105, %f101, %f104, %f103;
	mul.f32 	%f106, %f105, 0f3FB8AA3B;
	add.f32 	%f107, %f101, 0f4B40007F;
	mov.b32 	%r16, %f107;
	shl.b32 	%r17, %r16, 23;
	mov.b32 	%f108, %r17;
	ex2.approx.ftz.f32 	%f109, %f106;
	mul.f32 	%f11, %f109, %f108;
	setp.eq.f32 	%p13, %f11, 0f7F800000;
	mov.f32 	%f203, 0f7F800000;
	@%p13 bra 	$L__BB0_2;
// %bb.1:                               // %__internal_fmad.exit.i.i
	neg.f32 	%f110, %f10;
	add.rn.ftz.f32 	%f111, %f8, %f110;
	add.rn.ftz.f32 	%f112, %f111, %f9;
	add.f32 	%f113, %f112, 0f37000000;
	selp.f32 	%f114, %f113, %f112, %p11;
	fma.rn.ftz.f32 	%f203, %f11, %f114, %f11;
$L__BB0_2:                              // %__internal_accurate_powf.exit.i
	.loc	1 0 0                           // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:0:0
	setp.gt.f32 	%p6, %f39, 0f358637BD;
	selp.f32 	%f41, %f39, 0f358637BD, %p8;
	.loc	1 30 31                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:30:31
	setp.eq.f32 	%p15, %f4, 0f3F800000;
	setp.lt.f32 	%p16, %f2, 0f00000000;
	and.pred  	%p1, %p16, %p15;
	setp.neu.f32 	%p17, %f2, 0f00000000;
	@%p17 bra 	$L__BB0_4;
// %bb.3:
	add.f32 	%f120, %f2, %f2;
	mov.b32 	%r18, %f120;
	selp.b32 	%r19, %r18, 0, %p15;
	setp.lt.f32 	%p21, %f1, 0f00000000;
	or.b32  	%r20, %r19, 2139095040;
	selp.b32 	%r21, %r20, %r19, %p21;
	mov.b32 	%f205, %r21;
	bra.uni 	$L__BB0_5;
$L__BB0_4:
	neg.f32 	%f115, %f203;
	selp.f32 	%f116, %f115, %f203, %p1;
	cvt.rzi.f32.f32 	%f117, %f1;
	setp.neu.f32 	%p19, %f117, %f1;
	selp.f32 	%f119, 0f7FFFFFFF, %f116, %p19;
	selp.f32 	%f205, %f119, %f116, %p16;
$L__BB0_5:                              // %__internal_powf_corner_cases.exit.i
	.loc	1 0 0                           // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:0:0
	selp.f32 	%f3, %f39, %f41, %p6;
	.loc	1 30 31                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:30:31
	add.f32 	%f121, %f5, %f6;
	mov.b32 	%r22, %f121;
	setp.lt.s32 	%p22, %r22, 2139095040;
	@%p22 bra 	$L__BB0_13;
// %bb.6:                               // %__nv_isnanf.exit.i.i
	setp.nan.f32 	%p23, %f5, %f5;
	@%p23 bra 	$L__BB0_8;
// %bb.7:                               // %__nv_isnanf.exit11.i.i
	setp.num.f32 	%p24, %f6, %f6;
	@%p24 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_8;
$L__BB0_9:                              // %__nv_isinff.exit8.i.i
	setp.neu.f32 	%p25, %f6, 0f7F800000;
	@%p25 bra 	$L__BB0_11;
// %bb.10:                              // %__nv_fabsf.exit5.i.i
	setp.gt.f32 	%p28, %f5, 0f3F800000;
	selp.b32 	%r26, 2139095040, 0, %p28;
	setp.lt.f32 	%p29, %f1, 0f00000000;
	xor.b32  	%r27, %r26, 2139095040;
	selp.b32 	%r28, %r27, %r26, %p29;
	setp.eq.f32 	%p30, %f2, 0fBF800000;
	mov.b32 	%f122, %r28;
	selp.f32 	%f205, 0f3F800000, %f122, %p30;
	bra.uni 	$L__BB0_13;
$L__BB0_11:                             // %__nv_isinff.exit.i.i
	setp.neu.f32 	%p26, %f5, 0f7F800000;
	@%p26 bra 	$L__BB0_13;
// %bb.12:
	.loc	1 0 31                          // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:0:31
	setp.ge.f32 	%p27, %f1, 0f00000000;
	selp.b32 	%r23, 2139095040, 0, %p27;
	or.b32  	%r24, %r23, -2147483648;
	selp.b32 	%r25, %r24, %r23, %p1;
	mov.b32 	%f205, %r25;
$L__BB0_13:                             // %__nv_powf.exit
	.loc	1 30 31                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:30:31
	abs.ftz.f32 	%f21, %f3;
	mov.b32 	%r29, %f21;
	and.b32  	%r30, %r29, 8388607;
	or.b32  	%r31, %r30, 1065353216;
	mov.b32 	%f126, %r31;
	shr.u32 	%r32, %r29, 23;
	cvt.rn.f32.u32 	%f127, %r32;
	add.f32 	%f128, %f127, 0fC2FE0000;
	setp.gt.f32 	%p31, %f126, 0f3FB504F3;
	mul.f32 	%f129, %f126, 0f3F000000;
	add.f32 	%f130, %f128, 0f3F800000;
	selp.f32 	%f131, %f130, %f128, %p31;
	selp.f32 	%f132, %f129, %f126, %p31;
	add.f32 	%f133, %f132, 0fBF800000;
	add.f32 	%f124, %f132, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f123,%f124;
	// end inline asm
	add.f32 	%f134, %f133, %f133;
	mul.f32 	%f135, %f123, %f134;
	mul.f32 	%f136, %f135, %f135;
	fma.rn.ftz.f32 	%f139, %f57, %f136, %f56;
	fma.rn.ftz.f32 	%f141, %f139, %f136, %f59;
	mul.rn.ftz.f32 	%f142, %f141, %f136;
	mul.rn.ftz.f32 	%f143, %f142, %f135;
	neg.f32 	%f144, %f123;
	fma.rn.f32 	%f145, %f144, %f134, %f133;
	add.f32 	%f146, %f145, %f145;
	neg.f32 	%f147, %f135;
	fma.rn.ftz.f32 	%f148, %f147, %f133, %f146;
	mul.rn.ftz.f32 	%f149, %f123, %f148;
	fma.rn.f32 	%f150, %f123, %f134, %f143;
	neg.f32 	%f151, %f150;
	fma.rn.f32 	%f152, %f123, %f134, %f151;
	add.f32 	%f153, %f143, %f152;
	add.f32 	%f154, %f149, %f153;
	add.f32 	%f155, %f150, %f154;
	sub.f32 	%f156, %f150, %f155;
	add.f32 	%f157, %f154, %f156;
	mul.rn.ftz.f32 	%f159, %f131, %f77;
	mul.rn.ftz.f32 	%f161, %f131, %f79;
	add.f32 	%f162, %f159, %f155;
	sub.f32 	%f163, %f159, %f162;
	add.f32 	%f164, %f155, %f163;
	add.f32 	%f165, %f157, %f164;
	add.f32 	%f166, %f161, %f165;
	add.f32 	%f167, %f162, %f166;
	sub.f32 	%f168, %f162, %f167;
	add.f32 	%f169, %f166, %f168;
	mul.rn.ftz.f32 	%f22, %f7, %f167;
	neg.f32 	%f170, %f22;
	fma.rn.ftz.f32 	%f171, %f7, %f167, %f170;
	fma.rn.ftz.f32 	%f172, %f7, %f169, %f171;
	fma.rn.ftz.f32 	%f23, %f93, %f167, %f172;
	add.rn.ftz.f32 	%f24, %f22, %f23;
	mov.b32 	%r2, %f24;
	setp.eq.s32 	%p32, %r2, 1118925336;
	selp.f32 	%f174, 0f42B17217, %f24, %p32;
	mul.rn.ftz.f32 	%f176, %f174, %f95;
	cvt.rzi.f32.f32 	%f177, %f176;
	abs.ftz.f32 	%f178, %f177;
	setp.gt.f32 	%p33, %f178, 0f42FC0000;
	copysign.f32 	%f180, %f177, %f99;
	selp.f32 	%f181, %f180, %f177, %p33;
	fma.rn.ftz.f32 	%f183, %f181, %f102, %f174;
	fma.rn.ftz.f32 	%f185, %f181, %f104, %f183;
	mul.f32 	%f186, %f185, 0f3FB8AA3B;
	add.f32 	%f187, %f181, 0f4B40007F;
	mov.b32 	%r33, %f187;
	shl.b32 	%r34, %r33, 23;
	mov.b32 	%f188, %r34;
	ex2.approx.ftz.f32 	%f189, %f186;
	mul.f32 	%f25, %f189, %f188;
	setp.eq.f32 	%p34, %f25, 0f7F800000;
	mov.f32 	%f206, 0f7F800000;
	@%p34 bra 	$L__BB0_15;
// %bb.14:                              // %__internal_fmad.exit.i.i92
	neg.f32 	%f190, %f24;
	add.rn.ftz.f32 	%f191, %f22, %f190;
	add.rn.ftz.f32 	%f192, %f191, %f23;
	add.f32 	%f193, %f192, 0f37000000;
	selp.f32 	%f194, %f193, %f192, %p32;
	fma.rn.ftz.f32 	%f206, %f25, %f194, %f25;
$L__BB0_15:                             // %__internal_accurate_powf.exit.i56
	setp.lt.f32 	%p37, %f3, 0f00000000;
	and.pred  	%p2, %p37, %p15;
	setp.neu.f32 	%p38, %f3, 0f00000000;
	@%p38 bra 	$L__BB0_17;
// %bb.16:
	add.f32 	%f200, %f3, %f3;
	mov.b32 	%r35, %f200;
	selp.b32 	%r36, %r35, 0, %p15;
	setp.lt.f32 	%p42, %f1, 0f00000000;
	or.b32  	%r37, %r36, 2139095040;
	selp.b32 	%r38, %r37, %r36, %p42;
	mov.b32 	%f208, %r38;
	bra.uni 	$L__BB0_18;
$L__BB0_17:
	neg.f32 	%f195, %f206;
	selp.f32 	%f196, %f195, %f206, %p2;
	cvt.rzi.f32.f32 	%f197, %f1;
	setp.neu.f32 	%p40, %f197, %f1;
	selp.f32 	%f199, 0f7FFFFFFF, %f196, %p40;
	selp.f32 	%f208, %f199, %f196, %p37;
$L__BB0_18:                             // %__internal_powf_corner_cases.exit.i62
	.loc	1 0 31                          // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:0:31
	ld.param.u64 	%rd2, [triton_poi_fused_clamp_pow_0_param_2];
	cvt.s64.s32 	%rd1, %r11;
	.loc	1 30 31                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:30:31
	add.f32 	%f201, %f21, %f6;
	mov.b32 	%r39, %f201;
	setp.lt.s32 	%p43, %r39, 2139095040;
	@%p43 bra 	$L__BB0_26;
// %bb.19:                              // %__nv_isnanf.exit.i.i71
	setp.nan.f32 	%p44, %f21, %f21;
	@%p44 bra 	$L__BB0_21;
// %bb.20:                              // %__nv_isnanf.exit11.i.i74
	setp.num.f32 	%p45, %f6, %f6;
	@%p45 bra 	$L__BB0_22;
	bra.uni 	$L__BB0_21;
$L__BB0_22:                             // %__nv_isinff.exit8.i.i77
	setp.neu.f32 	%p46, %f6, 0f7F800000;
	@%p46 bra 	$L__BB0_24;
// %bb.23:                              // %__nv_fabsf.exit5.i.i85
	setp.gt.f32 	%p49, %f21, 0f3F800000;
	selp.b32 	%r43, 2139095040, 0, %p49;
	setp.lt.f32 	%p50, %f1, 0f00000000;
	xor.b32  	%r44, %r43, 2139095040;
	selp.b32 	%r45, %r44, %r43, %p50;
	setp.eq.f32 	%p51, %f3, 0fBF800000;
	mov.b32 	%f202, %r45;
	selp.f32 	%f208, 0f3F800000, %f202, %p51;
	bra.uni 	$L__BB0_26;
$L__BB0_24:                             // %__nv_isinff.exit.i.i80
	setp.neu.f32 	%p47, %f21, 0f7F800000;
	@%p47 bra 	$L__BB0_26;
// %bb.25:
	.loc	1 0 31                          // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:0:31
	setp.ge.f32 	%p48, %f1, 0f00000000;
	selp.b32 	%r40, 2139095040, 0, %p48;
	or.b32  	%r41, %r40, -2147483648;
	selp.b32 	%r42, %r41, %r40, %p2;
	mov.b32 	%f208, %r42;
$L__BB0_26:                             // %__nv_powf.exit95
	cvt.u32.u64 	%r48, %rd1;
	.loc	1 23 21                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:23:21
	setp.lt.s32 	%p52, %r48, 256;
	.loc	1 30 31                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:30:31
	setp.eq.f32 	%p53, %f2, 0f3F800000;
	setp.eq.f32 	%p54, %f1, 0f00000000;
	setp.eq.f32 	%p55, %f3, 0f3F800000;
	.loc	1 31 25                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:31:25
	shl.b64 	%rd8, %rd1, 2;
	add.s64 	%rd7, %rd2, %rd8;
	.loc	1 31 36                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:31:36
	mov.b32 	%r49, %f205;
	.loc	1 30 31                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:30:31
	selp.b32 	%r50, 1065353216, %r49, %p54;
	selp.b32 	%r46, 1065353216, %r50, %p53;
	.loc	1 31 36                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:31:36
	mov.b32 	%r51, %f208;
	.loc	1 30 31                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:30:31
	selp.b32 	%r52, 1065353216, %r51, %p54;
	selp.b32 	%r47, 1065353216, %r52, %p55;
	.loc	1 31 36                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:31:36
	// begin inline asm
	@%p52 st.global.v2.b32 [ %rd7 + 0 ], { %r46, %r47 };
	// end inline asm
	.loc	1 31 4                          // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:31:4
	ret;
$L__BB0_8:
	.loc	1 30 31                         // cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py:30:31
	add.f32 	%f205, %f2, %f1;
	bra.uni 	$L__BB0_13;
$L__BB0_21:
	add.f32 	%f208, %f3, %f1;
	bra.uni 	$L__BB0_26;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/er/cersfale5hur3ox4zhtzu4r43q3enfwybury6syqms7drbxaviac.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 173                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 114
.b8 115
.b8 102
.b8 97
.b8 108
.b8 101
.b8 53
.b8 104
.b8 117
.b8 114
.b8 51
.b8 111
.b8 120
.b8 52
.b8 122
.b8 104
.b8 116
.b8 122
.b8 117
.b8 52
.b8 114
.b8 52
.b8 51
.b8 113
.b8 51
.b8 101
.b8 110
.b8 102
.b8 119
.b8 121
.b8 98
.b8 117
.b8 114
.b8 121
.b8 54
.b8 115
.b8 121
.b8 113
.b8 109
.b8 115
.b8 55
.b8 100
.b8 114
.b8 98
.b8 120
.b8 97
.b8 118
.b8 105
.b8 97
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 108
.b8 97
.b8 109
.b8 112
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x82:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x97:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 29                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
