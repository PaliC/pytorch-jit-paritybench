//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2 // -- Begin function triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2
.visible .entry triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2(
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_2,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_3,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_4
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<38>;
	.reg .b32 	%r<188>;
	.reg .f32 	%f<56>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_0];
	ld.param.u64 	%rd7, [triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:22:33
	shl.b32 	%r87, %r1, 4;
	ld.param.u64 	%rd8, [triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_2];
	.loc	1 23 44                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:23:44
	mov.u32 	%r88, %tid.x;
	and.b32  	%r90, %r88, 31;
	shl.b32 	%r91, %r88, 2;
	and.b32  	%r92, %r91, 12;
	bfe.u32 	%r93, %r88, 6, 3;
	or.b32  	%r94, %r93, 8;
	and.b32  	%r95, %r88, 15;
	.loc	1 23 23                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:23:23
	or.b32  	%r96, %r87, %r92;
	or.b32  	%r97, %r87, %r93;
	or.b32  	%r98, %r87, %r94;
	or.b32  	%r99, %r87, %r95;
	.loc	1 25 33                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:25:33
	and.b32  	%r100, %r91, 252;
	shr.u32 	%r101, %r88, 2;
	.loc	1 27 19                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:27:19
	bfe.s32 	%r102, %r1, 27, 1;
	shr.u32 	%r103, %r102, 20;
	add.s32 	%r104, %r96, %r103;
	.loc	1 26 19                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:26:19
	and.b32  	%r105, %r104, -4096;
	sub.s32 	%r106, %r96, %r105;
	.loc	1 27 19                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:27:19
	add.s32 	%r107, %r97, %r103;
	shr.s32 	%r108, %r107, 12;
	add.s32 	%r109, %r98, %r103;
	shr.s32 	%r110, %r109, 12;
	.loc	1 34 44                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:44
	shl.b32 	%r111, %r88, 10;
	and.b32  	%r112, %r111, 520192;
	.loc	1 34 57                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:57
	shl.b32 	%r113, %r104, 8;
	and.b32  	%r114, %r113, -1048576;
	.loc	1 34 39                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:39
	add.s32 	%r115, %r114, %r106;
	.loc	1 34 49                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:49
	add.s32 	%r116, %r115, %r112;
	add.s32 	%r117, %r116, 524288;
	.loc	1 34 34                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:34
	mul.wide.s32 	%rd9, %r116, 4;
	add.s64 	%rd1, %rd6, %rd9;
	mul.wide.s32 	%rd10, %r117, 4;
	add.s64 	%rd2, %rd6, %rd10;
	mov.b32 	%r6, 0;
	mov.pred 	%p1, -1;
	.loc	1 34 62                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:62
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r19, %r21, %r23, %r25 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r21, %r6;
	@!%p1 mov.u32 %r23, %r6;
	@!%p1 mov.u32 %r25, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r27, %r29, %r31, %r33 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r27, %r6;
	@!%p1 mov.u32 %r29, %r6;
	@!%p1 mov.u32 %r31, %r6;
	@!%p1 mov.u32 %r33, %r6;
	// end inline asm
	and.b32  	%r118, %r111, 3072;
	bfe.u32 	%r119, %r88, 2, 7;
	or.b32  	%r120, %r118, %r119;
	and.b32  	%r121, %r91, 2044;
	shr.u32 	%r122, %r118, 4;
	mov.u32 	%r123, global_smem;
	add.s32 	%r124, %r123, %r122;
	shl.b32 	%r125, %r120, 2;
	add.s32 	%r18, %r124, %r125;
	// begin inline asm
	@%p1 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	or.b32  	%r126, %r118, 256;
	shr.u32 	%r127, %r126, 4;
	add.s32 	%r128, %r123, %r127;
	add.s32 	%r129, %r128, %r125;
	add.s32 	%r20, %r129, 1024;
	// begin inline asm
	@%p1 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	or.b32  	%r130, %r118, 512;
	shr.u32 	%r131, %r130, 4;
	add.s32 	%r132, %r123, %r131;
	add.s32 	%r133, %r132, %r125;
	add.s32 	%r22, %r133, 2048;
	// begin inline asm
	@%p1 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	or.b32  	%r134, %r118, 768;
	shr.u32 	%r135, %r134, 4;
	add.s32 	%r136, %r123, %r135;
	add.s32 	%r137, %r136, %r125;
	add.s32 	%r24, %r137, 3072;
	// begin inline asm
	@%p1 st.shared.b32 [ %r24 + 0 ], %r25;
	// end inline asm
	add.s32 	%r26, %r18, 512;
	// begin inline asm
	@%p1 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	add.s32 	%r28, %r129, 1536;
	// begin inline asm
	@%p1 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	add.s32 	%r30, %r133, 2560;
	// begin inline asm
	@%p1 st.shared.b32 [ %r30 + 0 ], %r31;
	// end inline asm
	add.s32 	%r32, %r137, 3584;
	// begin inline asm
	@%p1 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r138, %r101, 112;
	add.s32 	%r139, %r123, %r138;
	shl.b32 	%r140, %r121, 2;
	add.s32 	%r141, %r139, %r140;
	or.b32  	%r142, %r121, 2048;
	shr.u32 	%r143, %r142, 4;
	and.b32  	%r144, %r143, 240;
	add.s32 	%r145, %r123, %r144;
	add.s32 	%r146, %r145, %r140;
	.loc	1 35 43                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:35:43
	shl.b32 	%r147, %r108, 8;
	shl.b32 	%r148, %r110, 8;
	.loc	1 35 39                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:35:39
	or.b32  	%r149, %r147, %r100;
	or.b32  	%r150, %r148, %r100;
	.loc	1 35 34                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:35:34
	mul.wide.s32 	%rd11, %r149, 4;
	add.s64 	%rd3, %rd7, %rd11;
	mul.wide.s32 	%rd12, %r150, 4;
	add.s64 	%rd4, %rd7, %rd12;
	.loc	1 34 62                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:62
	ld.shared.v4.f32 	{%f1, %f2, %f3, %f4}, [%r141];
	ld.shared.v4.f32 	{%f5, %f6, %f7, %f8}, [%r146+8192];
	.loc	1 35 48                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:35:48
	// begin inline asm
	mov.u32 %r51, 0x0;
	mov.u32 %r54, 0x0;
	mov.u32 %r57, 0x0;
	mov.u32 %r60, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r51, %r54, %r57, %r60 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r51, %r6;
	@!%p1 mov.u32 %r54, %r6;
	@!%p1 mov.u32 %r57, %r6;
	@!%p1 mov.u32 %r60, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r63, 0x0;
	mov.u32 %r66, 0x0;
	mov.u32 %r69, 0x0;
	mov.u32 %r72, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r63, %r66, %r69, %r72 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r63, %r6;
	@!%p1 mov.u32 %r66, %r6;
	@!%p1 mov.u32 %r69, %r6;
	@!%p1 mov.u32 %r72, %r6;
	// end inline asm
	mov.b32 	%r52, 1166016512;
	.loc	1 37 22                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:37:22
	// begin inline asm
	div.full.f32 %r50, %r51, %r52;
	// end inline asm
	mov.b32 	%f9, %r50;
	// begin inline asm
	div.full.f32 %r53, %r54, %r52;
	// end inline asm
	mov.b32 	%f10, %r53;
	// begin inline asm
	div.full.f32 %r56, %r57, %r52;
	// end inline asm
	mov.b32 	%f11, %r56;
	// begin inline asm
	div.full.f32 %r59, %r60, %r52;
	// end inline asm
	mov.b32 	%f12, %r59;
	// begin inline asm
	div.full.f32 %r62, %r63, %r52;
	// end inline asm
	mov.b32 	%f13, %r62;
	// begin inline asm
	div.full.f32 %r65, %r66, %r52;
	// end inline asm
	mov.b32 	%f14, %r65;
	// begin inline asm
	div.full.f32 %r68, %r69, %r52;
	// end inline asm
	mov.b32 	%f15, %r68;
	// begin inline asm
	div.full.f32 %r71, %r72, %r52;
	// end inline asm
	mov.b32 	%f16, %r71;
	.loc	1 38 22                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:38:22
	sub.f32 	%f17, %f1, %f9;
	sub.f32 	%f18, %f2, %f10;
	sub.f32 	%f19, %f4, %f12;
	sub.f32 	%f20, %f3, %f11;
	sub.f32 	%f21, %f5, %f13;
	sub.f32 	%f22, %f6, %f14;
	sub.f32 	%f23, %f8, %f16;
	sub.f32 	%f24, %f7, %f15;
	.loc	1 39 22                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:39:22
	mul.f32 	%f25, %f18, %f18;
	mul.f32 	%f26, %f22, %f22;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f27, %f17, %f17, %f25;
	fma.rn.f32 	%f28, %f20, %f20, %f27;
	fma.rn.f32 	%f29, %f19, %f19, %f28;
	fma.rn.f32 	%f30, %f21, %f21, %f26;
	fma.rn.f32 	%f31, %f24, %f24, %f30;
	fma.rn.f32 	%f32, %f23, %f23, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r151, %f29;
	shfl.sync.bfly.b32	%r152, %r151, 16, 31, -1;
	mov.b32 	%f33, %r152;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f29, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r153, %f34;
	shfl.sync.bfly.b32	%r154, %r153, 8, 31, -1;
	mov.b32 	%f35, %r154;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r155, %f36;
	shfl.sync.bfly.b32	%r156, %r155, 4, 31, -1;
	mov.b32 	%f37, %r156;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r157, %f38;
	shfl.sync.bfly.b32	%r158, %r157, 2, 31, -1;
	mov.b32 	%f39, %r158;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r159, %f40;
	shfl.sync.bfly.b32	%r160, %r159, 1, 31, -1;
	mov.b32 	%f41, %r160;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r161, %f32;
	shfl.sync.bfly.b32	%r162, %r161, 16, 31, -1;
	mov.b32 	%f43, %r162;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f32, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r163, %f44;
	shfl.sync.bfly.b32	%r164, %r163, 8, 31, -1;
	mov.b32 	%f45, %r164;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r165, %f46;
	shfl.sync.bfly.b32	%r166, %r165, 4, 31, -1;
	mov.b32 	%f47, %r166;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r167, %f48;
	shfl.sync.bfly.b32	%r168, %r167, 2, 31, -1;
	mov.b32 	%f49, %r168;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r169, %f50;
	shfl.sync.bfly.b32	%r170, %r169, 1, 31, -1;
	mov.b32 	%f51, %r170;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p29, %r90, 0;
	shr.u32 	%r171, %r88, 3;
	and.b32  	%r172, %r171, 4;
	shl.b32 	%r173, %r93, 3;
	or.b32  	%r174, %r173, %r172;
	add.s32 	%r74, %r123, %r174;
	mov.b32 	%r75, %f42;
	// begin inline asm
	@%p29 st.shared.b32 [ %r74 + 0 ], %r75;
	// end inline asm
	shl.b32 	%r175, %r94, 3;
	or.b32  	%r176, %r175, %r172;
	add.s32 	%r76, %r123, %r176;
	mov.b32 	%r77, %f52;
	// begin inline asm
	@%p29 st.shared.b32 [ %r76 + 0 ], %r77;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p31, %r88, 32;
	add.s32 	%r79, %r123, %r91;
	// begin inline asm
	@%p31 ld.shared.b32 %r78, [ %r79 + 0 ];
	// end inline asm
	mov.b32 	%f53, %r78;
	shfl.sync.bfly.b32	%r177, %r78, 1, 31, -1;
	mov.b32 	%f54, %r177;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r178, %r88, 1;
	setp.eq.b32 	%p36, %r178, 1;
	not.pred 	%p37, %p36;
	and.pred  	%p32, %p31, %p37;
	mov.b32 	%r81, %f55;
	// begin inline asm
	@%p32 st.shared.b32 [ %r79 + 0 ], %r81;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r179, %r123, %r173;
	ld.shared.u32 	%r83, [%r179];
	add.s32 	%r180, %r123, %r175;
	ld.shared.u32 	%r85, [%r180];
$L__tmp2:
	.loc	1 43 28                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:43:28
	bar.sync 	0;
	shl.b32 	%r181, %r93, 2;
	sub.s32 	%r82, %r179, %r181;
	// begin inline asm
	@%p1 st.shared.b32 [ %r82 + 0 ], %r83;
	// end inline asm
	add.s32 	%r84, %r82, 32;
	// begin inline asm
	@%p1 st.shared.b32 [ %r84 + 0 ], %r85;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r182, %r95, 2;
	add.s32 	%r183, %r123, %r182;
	ld.shared.u32 	%r86, [%r183];
	.loc	1 44 25                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:44:25
	mul.wide.s32 	%rd13, %r99, 4;
	add.s64 	%rd5, %rd8, %rd13;
	.loc	1 44 36                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:44:36
	bfe.u32 	%r184, %r88, 4, 1;
	.loc	1 34 62                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:62
	shr.u32 	%r185, %r88, 4;
	.loc	1 44 36                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:44:36
	and.b32  	%r186, %r185, 30;
	or.b32  	%r187, %r186, %r184;
	setp.eq.s32 	%p35, %r187, 0;
	// begin inline asm
	@%p35 st.global.b32 [ %rd5 + 0 ], { %r86 };
	// end inline asm
	.loc	1 44 4                          // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:44:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/y5/cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 233                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 53
.b8 105
.b8 99
.b8 108
.b8 106
.b8 109
.b8 51
.b8 115
.b8 102
.b8 121
.b8 98
.b8 104
.b8 51
.b8 121
.b8 115
.b8 112
.b8 107
.b8 116
.b8 113
.b8 53
.b8 110
.b8 110
.b8 101
.b8 103
.b8 117
.b8 108
.b8 111
.b8 109
.b8 110
.b8 52
.b8 108
.b8 100
.b8 108
.b8 111
.b8 116
.b8 111
.b8 116
.b8 122
.b8 99
.b8 120
.b8 117
.b8 119
.b8 107
.b8 112
.b8 112
.b8 109
.b8 99
.b8 113
.b8 97
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 53
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x5b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 108
.b8 105
.b8 110
.b8 97
.b8 108
.b8 103
.b8 95
.b8 118
.b8 101
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xbe:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xd3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
