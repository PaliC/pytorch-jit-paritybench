//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__to_copy_convolution_view_1 // -- Begin function triton_poi_fused__to_copy_convolution_view_1
                                        // @triton_poi_fused__to_copy_convolution_view_1
.visible .entry triton_poi_fused__to_copy_convolution_view_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused__to_copy_convolution_view_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__to_copy_convolution_view_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__to_copy_convolution_view_1_param_2,
	.param .u32 triton_poi_fused__to_copy_convolution_view_1_param_3,
	.param .u32 triton_poi_fused__to_copy_convolution_view_1_param_4
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<23>;
	.reg .f32 	%f<3>;
	.reg .b64 	%rd<14>;
	.reg .f64 	%fd<3>;
	.loc	1 19 0                          // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused__to_copy_convolution_view_1_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused__to_copy_convolution_view_1_param_1];
$L__tmp0:
	.loc	1 22 28                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:22:33
	shl.b32 	%r5, %r1, 2;
	ld.param.u64 	%rd9, [triton_poi_fused__to_copy_convolution_view_1_param_2];
	.loc	1 23 44                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:23:44
	mov.u32 	%r6, %tid.x;
	bfe.u32 	%r7, %r6, 2, 2;
	and.b32  	%r8, %r6, 3;
	.loc	1 23 23                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:23:23
	or.b32  	%r9, %r5, %r7;
	or.b32  	%r10, %r5, %r8;
	.loc	1 25 28                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:25:33
	shl.b32 	%r11, %r2, 2;
	.loc	1 26 23                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:26:23
	or.b32  	%r12, %r11, %r8;
	or.b32  	%r13, %r11, %r7;
	.loc	1 30 37                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:30:37
	shl.b32 	%r14, %r12, 2;
	shl.b32 	%r15, %r13, 2;
	.loc	1 30 35                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:30:35
	add.s32 	%r16, %r14, %r9;
	add.s32 	%r17, %r15, %r10;
	.loc	1 30 30                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:30:30
	mul.wide.s32 	%rd10, %r16, 8;
	add.s64 	%rd2, %rd7, %rd10;
	mul.wide.s32 	%rd11, %r17, 8;
	add.s64 	%rd4, %rd7, %rd11;
	.loc	1 30 50                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:30:50
	max.s32 	%r18, %r9, %r12;
	setp.lt.s32 	%p1, %r18, 4;
	max.s32 	%r19, %r10, %r13;
	setp.lt.s32 	%p2, %r19, 4;
	.loc	1 30 42                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:30:42
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b64 	%fd1, %rd1;
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p2 ld.global.b64 { %rd3 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b64 	%fd2, %rd3;
	.loc	1 31 19                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:31:19
	cvt.rn.f32.f64 	%f1, %fd1;
	cvt.rn.f32.f64 	%f2, %fd2;
	.loc	1 32 25                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:32:25
	mul.wide.s32 	%rd12, %r17, 4;
	add.s64 	%rd5, %rd8, %rd12;
	.loc	1 32 43                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:32:43
	and.b32  	%r20, %r6, 16;
	setp.eq.s32 	%p5, %r20, 0;
	mov.b32 	%r3, %f2;
	and.pred  	%p3, %p5, %p2;
	// begin inline asm
	@%p3 st.global.b32 [ %rd5 + 0 ], { %r3 };
	// end inline asm
	.loc	1 33 32                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:33:32
	shl.b32 	%r21, %r9, 2;
	.loc	1 33 30                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:33:30
	add.s32 	%r22, %r12, %r21;
	.loc	1 33 25                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:33:25
	mul.wide.s32 	%rd13, %r22, 4;
	add.s64 	%rd6, %rd9, %rd13;
	.loc	1 33 43                         // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:33:43
	mov.b32 	%r4, %f1;
	and.pred  	%p4, %p5, %p1;
	// begin inline asm
	@%p4 st.global.b32 [ %rd6 + 0 ], { %r4 };
	// end inline asm
	.loc	1 33 4                          // c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py:33:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/46/c46ucsziacdxm6xkl2v54xui26xejri2hifrlzpv7qrfvphzupck.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 54
.b8 117
.b8 99
.b8 115
.b8 122
.b8 105
.b8 97
.b8 99
.b8 100
.b8 120
.b8 109
.b8 54
.b8 120
.b8 107
.b8 108
.b8 50
.b8 118
.b8 53
.b8 52
.b8 120
.b8 117
.b8 105
.b8 50
.b8 54
.b8 120
.b8 101
.b8 106
.b8 114
.b8 105
.b8 50
.b8 104
.b8 105
.b8 102
.b8 114
.b8 108
.b8 122
.b8 112
.b8 118
.b8 55
.b8 113
.b8 114
.b8 102
.b8 118
.b8 112
.b8 104
.b8 122
.b8 117
.b8 112
.b8 99
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 52
.b8 54
.b8 0
	}
	.section	.debug_macinfo	{	}
