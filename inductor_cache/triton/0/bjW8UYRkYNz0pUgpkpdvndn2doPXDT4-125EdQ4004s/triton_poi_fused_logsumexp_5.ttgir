#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_logsumexp_5(%arg0: !tt.ptr<f64> {tt.divisibility = 16 : i32} loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":19:0), %arg1: !tt.ptr<f64> {tt.divisibility = 16 : i32} loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f64 loc(#loc1)
    %cst_0 = arith.constant 0x7FF0000000000000 : f64 loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %0 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f64>, i32 loc(#loc2)
    %1 = tt.load %0 : !tt.ptr<f64> loc(#loc3)
    %2 = tt.addptr %arg0, %c1_i32 : !tt.ptr<f64>, i32 loc(#loc4)
    %3 = tt.load %2 : !tt.ptr<f64> loc(#loc5)
    %4 = tt.addptr %arg0, %c2_i32 : !tt.ptr<f64>, i32 loc(#loc6)
    %5 = tt.load %4 : !tt.ptr<f64> loc(#loc7)
    %6 = tt.addptr %arg0, %c3_i32 : !tt.ptr<f64>, i32 loc(#loc8)
    %7 = tt.load %6 : !tt.ptr<f64> loc(#loc9)
    %8 = arith.cmpf ogt, %1, %3 : f64 loc(#loc36)
    %9 = arith.cmpf une, %1, %1 : f64 loc(#loc37)
    %10 = arith.ori %8, %9 : i1 loc(#loc38)
    %11 = arith.select %10, %1, %3 : f64 loc(#loc39)
    %12 = arith.cmpf ogt, %11, %5 : f64 loc(#loc40)
    %13 = arith.cmpf une, %11, %11 : f64 loc(#loc41)
    %14 = arith.ori %12, %13 : i1 loc(#loc42)
    %15 = arith.select %14, %11, %5 : f64 loc(#loc43)
    %16 = arith.cmpf ogt, %15, %7 : f64 loc(#loc44)
    %17 = arith.cmpf une, %15, %15 : f64 loc(#loc45)
    %18 = arith.ori %16, %17 : i1 loc(#loc46)
    %19 = arith.select %18, %15, %7 : f64 loc(#loc47)
    %20 = math.absf %19 : f64 loc(#loc17)
    %21 = arith.cmpf oeq, %20, %cst_0 : f64 loc(#loc18)
    %22 = arith.select %21, %cst, %19 : f64 loc(#loc19)
    %23 = arith.subf %1, %22 : f64 loc(#loc20)
    %24 = tt.extern_elementwise %23 {libname = "", libpath = "", pure = true, symbol = "__nv_exp"} : (f64) -> f64 loc(#loc21)
    %25 = arith.subf %3, %22 : f64 loc(#loc22)
    %26 = tt.extern_elementwise %25 {libname = "", libpath = "", pure = true, symbol = "__nv_exp"} : (f64) -> f64 loc(#loc23)
    %27 = arith.addf %24, %26 : f64 loc(#loc24)
    %28 = arith.subf %5, %22 : f64 loc(#loc25)
    %29 = tt.extern_elementwise %28 {libname = "", libpath = "", pure = true, symbol = "__nv_exp"} : (f64) -> f64 loc(#loc26)
    %30 = arith.addf %27, %29 : f64 loc(#loc27)
    %31 = arith.subf %7, %22 : f64 loc(#loc28)
    %32 = tt.extern_elementwise %31 {libname = "", libpath = "", pure = true, symbol = "__nv_exp"} : (f64) -> f64 loc(#loc29)
    %33 = arith.addf %30, %32 : f64 loc(#loc30)
    %34 = tt.extern_elementwise %33 {libname = "", libpath = "", pure = true, symbol = "__nv_log"} : (f64) -> f64 loc(#loc31)
    %35 = arith.addf %34, %22 : f64 loc(#loc32)
    %36 = tt.splat %35 : f64 -> tensor<1xf64, #blocked> loc(#loc32)
    %37 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f64>, i32 loc(#loc33)
    %38 = tt.splat %37 : !tt.ptr<f64> -> tensor<1x!tt.ptr<f64>, #blocked> loc(#loc33)
    tt.store %38, %36 : tensor<1x!tt.ptr<f64>, #blocked> loc(#loc34)
    tt.return loc(#loc35)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":24:30)
#loc3 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":24:19)
#loc4 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":26:30)
#loc5 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":26:19)
#loc6 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":28:30)
#loc7 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":28:19)
#loc8 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":30:30)
#loc9 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":30:19)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc11 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":32:40)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc15 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":33:40)
#loc16 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":34:41)
#loc17 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":35:24)
#loc18 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":37:21)
#loc19 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":39:35)
#loc20 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":40:19)
#loc21 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":41:26)
#loc22 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":42:19)
#loc23 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":43:26)
#loc24 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":44:20)
#loc25 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":45:19)
#loc26 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":46:26)
#loc27 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":47:20)
#loc28 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":48:19)
#loc29 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":49:26)
#loc30 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":50:20)
#loc31 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":51:26)
#loc32 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":52:20)
#loc33 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":53:25)
#loc34 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":53:65)
#loc35 = loc("inductor_cache/y4/cy4r77bepx4czusl3tehhb6il3xr36xqndgdoeghckx2ksnxe4lw.py":53:4)
#loc36 = loc(callsite(#loc10 at #loc11))
#loc37 = loc(callsite(#loc12 at #loc11))
#loc38 = loc(callsite(#loc13 at #loc11))
#loc39 = loc(callsite(#loc14 at #loc11))
#loc40 = loc(callsite(#loc10 at #loc15))
#loc41 = loc(callsite(#loc12 at #loc15))
#loc42 = loc(callsite(#loc13 at #loc15))
#loc43 = loc(callsite(#loc14 at #loc15))
#loc44 = loc(callsite(#loc10 at #loc16))
#loc45 = loc(callsite(#loc12 at #loc16))
#loc46 = loc(callsite(#loc13 at #loc16))
#loc47 = loc(callsite(#loc14 at #loc16))
