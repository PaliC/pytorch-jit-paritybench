#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_add_cat_7(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<256> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<16384> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4096> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<-52> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<-40> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<52> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<-28> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<40> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<3072> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<-16> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<28> : tensor<512xi64, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_0 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_1 : tensor<512xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %4, %cst_0 : tensor<512xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_2 : tensor<512xi32, #blocked> loc(#loc9)
    %9 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc10)
    %10 = tt.addptr %9, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc10)
    %11 = tt.load %10 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc11)
    %12 = arith.extsi %6 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc12)
    %13 = arith.cmpi slt, %12, %cst_3 : tensor<512xi64, #blocked> loc(#loc12)
    %14 = arith.muli %6, %cst_0 : tensor<512xi32, #blocked> loc(#loc13)
    %15 = arith.addi %7, %14 : tensor<512xi32, #blocked> loc(#loc14)
    %16 = arith.muli %8, %cst_4 : tensor<512xi32, #blocked> loc(#loc15)
    %17 = arith.addi %15, %16 : tensor<512xi32, #blocked> loc(#loc16)
    %18 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc17)
    %19 = tt.addptr %18, %17 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc17)
    %20 = tt.load %19, %13, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc18)
    %21 = arith.cmpi sge, %12, %cst_3 : tensor<512xi64, #blocked> loc(#loc19)
    %22 = arith.cmpi slt, %12, %cst_12 : tensor<512xi64, #blocked> loc(#loc20)
    %23 = arith.andi %21, %22 : tensor<512xi1, #blocked> loc(#loc21)
    %24 = arith.addi %6, %cst_11 : tensor<512xi32, #blocked> loc(#loc22)
    %25 = arith.muli %24, %cst_0 : tensor<512xi32, #blocked> loc(#loc23)
    %26 = arith.addi %7, %25 : tensor<512xi32, #blocked> loc(#loc24)
    %27 = arith.muli %8, %cst_10 : tensor<512xi32, #blocked> loc(#loc25)
    %28 = arith.addi %26, %27 : tensor<512xi32, #blocked> loc(#loc26)
    %29 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc27)
    %30 = tt.addptr %29, %28 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc27)
    %31 = tt.load %30, %23, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc28)
    %32 = arith.cmpi sge, %12, %cst_12 : tensor<512xi64, #blocked> loc(#loc29)
    %33 = arith.cmpi slt, %12, %cst_9 : tensor<512xi64, #blocked> loc(#loc30)
    %34 = arith.andi %32, %33 : tensor<512xi1, #blocked> loc(#loc31)
    %35 = arith.addi %6, %cst_8 : tensor<512xi32, #blocked> loc(#loc32)
    %36 = arith.muli %35, %cst_0 : tensor<512xi32, #blocked> loc(#loc33)
    %37 = arith.addi %7, %36 : tensor<512xi32, #blocked> loc(#loc34)
    %38 = arith.addi %37, %27 : tensor<512xi32, #blocked> loc(#loc35)
    %39 = tt.addptr %29, %38 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc36)
    %40 = tt.load %39, %34, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc37)
    %41 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc38)
    %42 = tt.addptr %41, %38 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc38)
    %43 = tt.load %42, %34, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc39)
    %44 = arith.addf %40, %43 : tensor<512xf32, #blocked> loc(#loc40)
    %45 = arith.cmpi sge, %12, %cst_9 : tensor<512xi64, #blocked> loc(#loc41)
    %46 = arith.cmpi slt, %12, %cst_7 : tensor<512xi64, #blocked> loc(#loc42)
    %47 = arith.andi %45, %46 : tensor<512xi1, #blocked> loc(#loc43)
    %48 = arith.addi %6, %cst_6 : tensor<512xi32, #blocked> loc(#loc44)
    %49 = arith.muli %48, %cst_0 : tensor<512xi32, #blocked> loc(#loc45)
    %50 = arith.addi %7, %49 : tensor<512xi32, #blocked> loc(#loc46)
    %51 = arith.addi %50, %27 : tensor<512xi32, #blocked> loc(#loc47)
    %52 = tt.addptr %29, %51 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc48)
    %53 = tt.load %52, %47, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc49)
    %54 = tt.addptr %41, %51 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc50)
    %55 = tt.load %54, %47, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc51)
    %56 = arith.addf %53, %55 : tensor<512xf32, #blocked> loc(#loc52)
    %57 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc53)
    %58 = tt.addptr %57, %51 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc53)
    %59 = tt.load %58, %47, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc54)
    %60 = arith.addf %56, %59 : tensor<512xf32, #blocked> loc(#loc55)
    %61 = arith.cmpi sge, %12, %cst_7 : tensor<512xi64, #blocked> loc(#loc56)
    %62 = arith.addi %6, %cst_5 : tensor<512xi32, #blocked> loc(#loc57)
    %63 = arith.muli %62, %cst_0 : tensor<512xi32, #blocked> loc(#loc58)
    %64 = arith.addi %7, %63 : tensor<512xi32, #blocked> loc(#loc59)
    %65 = arith.addi %64, %27 : tensor<512xi32, #blocked> loc(#loc60)
    %66 = tt.addptr %29, %65 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc61)
    %67 = tt.load %66, %61, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc62)
    %68 = tt.addptr %41, %65 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc63)
    %69 = tt.load %68, %61, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc64)
    %70 = arith.addf %67, %69 : tensor<512xf32, #blocked> loc(#loc65)
    %71 = tt.addptr %57, %65 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc66)
    %72 = tt.load %71, %61, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc67)
    %73 = arith.addf %70, %72 : tensor<512xf32, #blocked> loc(#loc68)
    %74 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc69)
    %75 = tt.addptr %74, %65 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc69)
    %76 = tt.load %75, %61, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc70)
    %77 = arith.addf %73, %76 : tensor<512xf32, #blocked> loc(#loc71)
    %78 = arith.select %61, %77, %cst : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc72)
    %79 = arith.select %47, %60, %78 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc83)
    %80 = arith.select %34, %44, %79 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc84)
    %81 = arith.select %23, %31, %80 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc77)
    %82 = arith.select %13, %20, %81 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc78)
    %83 = arith.addf %11, %82 : tensor<512xf32, #blocked> loc(#loc79)
    %84 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc80)
    %85 = tt.addptr %84, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc80)
    tt.store %85, %83 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc81)
    tt.return loc(#loc82)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":21:28)
#loc3 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":21:33)
#loc4 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":22:36)
#loc5 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":22:23)
#loc6 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":24:21)
#loc7 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":24:28)
#loc8 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":25:19)
#loc9 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":26:19)
#loc10 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":28:31)
#loc11 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":28:36)
#loc12 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":33:18)
#loc13 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":34:40)
#loc14 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":34:35)
#loc15 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":34:51)
#loc16 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":34:46)
#loc17 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":34:30)
#loc18 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":34:56)
#loc19 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":35:19)
#loc20 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":37:18)
#loc21 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":38:18)
#loc22 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":39:49)
#loc23 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":39:41)
#loc24 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":39:36)
#loc25 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":39:60)
#loc26 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":39:55)
#loc27 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":39:31)
#loc28 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":39:65)
#loc29 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":40:20)
#loc30 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":42:19)
#loc31 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":43:20)
#loc32 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":44:49)
#loc33 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":44:41)
#loc34 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":44:36)
#loc35 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":44:55)
#loc36 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":44:31)
#loc37 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":44:65)
#loc38 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":45:31)
#loc39 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":45:65)
#loc40 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":46:20)
#loc41 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":49:20)
#loc42 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":51:19)
#loc43 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":52:20)
#loc44 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":53:49)
#loc45 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":53:41)
#loc46 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":53:36)
#loc47 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":53:55)
#loc48 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":53:31)
#loc49 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":53:65)
#loc50 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":54:31)
#loc51 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":54:65)
#loc52 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":55:20)
#loc53 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":56:31)
#loc54 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":56:65)
#loc55 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":57:20)
#loc56 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":60:20)
#loc57 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":63:49)
#loc58 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":63:41)
#loc59 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":63:36)
#loc60 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":63:55)
#loc61 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":63:31)
#loc62 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":63:65)
#loc63 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":64:31)
#loc64 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":64:65)
#loc65 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":65:20)
#loc66 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":66:31)
#loc67 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":66:65)
#loc68 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":67:20)
#loc69 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":68:31)
#loc70 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":68:65)
#loc71 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":69:20)
#loc72 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":71:35)
#loc73 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":72:35)
#loc74 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":59:35)
#loc75 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":73:35)
#loc76 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":48:35)
#loc77 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":74:34)
#loc78 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":75:33)
#loc79 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":76:20)
#loc80 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":77:28)
#loc81 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":77:40)
#loc82 = loc("inductor_cache/cu/ccun4wqrgvrdp7z7jven75tvlkvwwdcqyos6bgcbgmofqpguzdip.py":77:4)
#loc83 = loc(fused[#loc73, #loc74])
#loc84 = loc(fused[#loc75, #loc76])
