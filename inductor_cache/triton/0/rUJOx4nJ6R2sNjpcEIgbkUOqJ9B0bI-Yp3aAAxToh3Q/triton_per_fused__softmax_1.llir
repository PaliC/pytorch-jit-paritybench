; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__softmax_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %7 = icmp slt i32 %6, 32, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %.frozen = freeze i32 %6, !dbg !13
  %9 = sdiv i32 %.frozen, 8, !dbg !13
  %10 = mul i32 %9, 8, !dbg !14
  %.decomposed = sub i32 %.frozen, %10, !dbg !14
  %11 = shl i32 %8, 3, !dbg !15
  %12 = and i32 %11, 56, !dbg !15
  %13 = add nsw i32 %.decomposed, %12, !dbg !16
  %14 = shl i32 %9, 6, !dbg !17
  %15 = add i32 %13, %14, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %7, i32 0, i1 %7) #2, !dbg !20
  %19 = bitcast i32 %18 to float, !dbg !20
  %20 = select i1 %7, float %19, float 0xFFF0000000000000, !dbg !21
  %21 = bitcast float %20 to i32, !dbg !22
  %22 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %21, i32 4, i32 31), !dbg !22
  %23 = bitcast i32 %22 to float, !dbg !22
  %24 = fcmp ogt float %20, %23, !dbg !26
  %25 = fcmp uno float %20, 0.000000e+00, !dbg !28
  %26 = or i1 %24, %25, !dbg !29
  %27 = select i1 %26, float %20, float %23, !dbg !30
  %28 = bitcast float %27 to i32, !dbg !22
  %29 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %28, i32 2, i32 31), !dbg !22
  %30 = bitcast i32 %29 to float, !dbg !22
  %31 = fcmp ogt float %27, %30, !dbg !26
  %32 = fcmp uno float %27, 0.000000e+00, !dbg !28
  %33 = or i1 %31, %32, !dbg !29
  %34 = select i1 %33, float %27, float %30, !dbg !30
  %35 = bitcast float %34 to i32, !dbg !22
  %36 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %35, i32 1, i32 31), !dbg !22
  %37 = bitcast i32 %36 to float, !dbg !22
  %38 = fcmp ogt float %34, %37, !dbg !26
  %39 = fcmp uno float %34, 0.000000e+00, !dbg !28
  %40 = or i1 %38, %39, !dbg !29
  %41 = select i1 %40, float %34, float %37, !dbg !30
  %42 = fsub float %19, %41, !dbg !31
  %43 = fmul float %42, 0x3FF7154760000000, !dbg !32
  %44 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %43) #2, !dbg !32
  %45 = select i1 %7, float %44, float 0.000000e+00, !dbg !33
  %46 = bitcast float %45 to i32, !dbg !34
  %47 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %46, i32 4, i32 31), !dbg !34
  %48 = bitcast i32 %47 to float, !dbg !34
  %49 = fadd float %45, %48, !dbg !38
  %50 = bitcast float %49 to i32, !dbg !34
  %51 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %50, i32 2, i32 31), !dbg !34
  %52 = bitcast i32 %51 to float, !dbg !34
  %53 = fadd float %49, %52, !dbg !38
  %54 = bitcast float %53 to i32, !dbg !34
  %55 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %54, i32 1, i32 31), !dbg !34
  %56 = bitcast i32 %55 to float, !dbg !34
  %57 = fadd float %53, %56, !dbg !38
  %58 = sext i32 %6 to i64, !dbg !40
  %59 = getelementptr float, ptr addrspace(1) %1, i64 %58, !dbg !40
  %60 = and i32 %8, 63, !dbg !41
  %61 = icmp eq i32 %60, 0, !dbg !41
  %62 = bitcast float %41 to i32, !dbg !41
  %63 = and i1 %61, %7, !dbg !41
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %62, ptr addrspace(1) %59, i1 %63) #2, !dbg !41
  %64 = getelementptr float, ptr addrspace(1) %2, i64 %58, !dbg !42
  %65 = bitcast float %57 to i32, !dbg !43
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %65, ptr addrspace(1) %64, i1 %63) #2, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py", directory: "inductor_cache/a3")
!4 = !{ptr @triton_per_fused__softmax_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_1", linkageName: "triton_per_fused__softmax_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 19, scope: !7)
!14 = !DILocation(line: 30, column: 19, scope: !7)
!15 = !DILocation(line: 33, column: 37, scope: !7)
!16 = !DILocation(line: 33, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 45, scope: !7)
!18 = !DILocation(line: 33, column: 42, scope: !7)
!19 = !DILocation(line: 33, column: 30, scope: !7)
!20 = !DILocation(line: 33, column: 50, scope: !7)
!21 = !DILocation(line: 35, column: 33, scope: !7)
!22 = !DILocation(line: 131, column: 29, scope: !23, inlinedAt: !25)
!23 = distinct !DILexicalBlockFile(scope: !7, file: !24, discriminator: 0)
!24 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!25 = !DILocation(line: 36, column: 37, scope: !7)
!26 = !DILocation(line: 118, column: 15, scope: !27, inlinedAt: !25)
!27 = distinct !DILexicalBlockFile(scope: !23, file: !24, discriminator: 0)
!28 = !DILocation(line: 120, column: 21, scope: !27, inlinedAt: !25)
!29 = !DILocation(line: 120, column: 16, scope: !27, inlinedAt: !25)
!30 = !DILocation(line: 121, column: 29, scope: !27, inlinedAt: !25)
!31 = !DILocation(line: 37, column: 18, scope: !7)
!32 = !DILocation(line: 38, column: 23, scope: !7)
!33 = !DILocation(line: 40, column: 33, scope: !7)
!34 = !DILocation(line: 267, column: 36, scope: !35, inlinedAt: !37)
!35 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!36 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!37 = !DILocation(line: 41, column: 25, scope: !7)
!38 = !DILocation(line: 256, column: 15, scope: !39, inlinedAt: !37)
!39 = distinct !DILexicalBlockFile(scope: !35, file: !36, discriminator: 0)
!40 = !DILocation(line: 42, column: 25, scope: !7)
!41 = !DILocation(line: 42, column: 36, scope: !7)
!42 = !DILocation(line: 43, column: 25, scope: !7)
!43 = !DILocation(line: 43, column: 37, scope: !7)
!44 = !DILocation(line: 43, column: 4, scope: !7)
