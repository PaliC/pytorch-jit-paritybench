; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_max_pool2d_with_indices_relu_sgn_sub_21(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 9, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 510, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = srem i32 %11, 256, !dbg !14
  %13 = sext i32 %11 to i64, !dbg !15
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !15
  %15 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %14, i1 true) #1, !dbg !16
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16
  %17 = extractvalue { i32, i32 } %15, 1, !dbg !16
  %18 = bitcast i32 %16 to float, !dbg !16
  %19 = bitcast i32 %17 to float, !dbg !16
  %20 = sext i32 %12 to i64, !dbg !17
  %21 = getelementptr float, ptr addrspace(1) %2, i64 %20, !dbg !17
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !18
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !18
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !18
  %25 = bitcast i32 %23 to float, !dbg !18
  %26 = bitcast i32 %24 to float, !dbg !18
  %27 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !19
  %28 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !20
  %29 = extractvalue { i32, i32 } %28, 0, !dbg !20
  %30 = extractvalue { i32, i32 } %28, 1, !dbg !20
  %31 = bitcast i32 %29 to float, !dbg !20
  %32 = bitcast i32 %30 to float, !dbg !20
  %33 = fadd float %18, %25, !dbg !21
  %34 = fadd float %19, %26, !dbg !21
  %35 = fcmp olt float %33, 0.000000e+00, !dbg !22
  %36 = fcmp olt float %34, 0.000000e+00, !dbg !22
  %37 = select i1 %35, float 0.000000e+00, float %33, !dbg !26
  %38 = select i1 %36, float 0.000000e+00, float %34, !dbg !26
  %39 = fadd float %25, %31, !dbg !27
  %40 = fadd float %26, %32, !dbg !27
  %41 = fcmp olt float %39, 0.000000e+00, !dbg !28
  %42 = fcmp olt float %40, 0.000000e+00, !dbg !28
  %43 = select i1 %41, float 0.000000e+00, float %39, !dbg !30
  %44 = select i1 %42, float 0.000000e+00, float %40, !dbg !30
  %45 = fsub float %43, %37, !dbg !31
  %46 = fsub float %44, %38, !dbg !31
  %47 = fcmp ogt float %45, 0.000000e+00, !dbg !32
  %48 = fcmp ogt float %46, 0.000000e+00, !dbg !32
  %49 = zext i1 %47 to i8, !dbg !33
  %50 = zext i1 %48 to i8, !dbg !33
  %51 = fcmp olt float %45, 0.000000e+00, !dbg !34
  %52 = fcmp olt float %46, 0.000000e+00, !dbg !34
  %.neg = sext i1 %51 to i8, !dbg !35
  %.neg1 = sext i1 %52 to i8, !dbg !35
  %53 = add nsw i8 %.neg, %49, !dbg !36
  %54 = add nsw i8 %.neg1, %50, !dbg !36
  %55 = sitofp i8 %53 to float, !dbg !37
  %56 = sitofp i8 %54 to float, !dbg !37
  %57 = bitcast float %37 to i32, !dbg !38
  %58 = bitcast float %38 to i32, !dbg !38
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %57, i32 %58, ptr addrspace(1) %14, i1 true) #1, !dbg !38
  %59 = bitcast float %43 to i32, !dbg !39
  %60 = bitcast float %44 to i32, !dbg !39
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %59, i32 %60, ptr addrspace(1) %27, i1 true) #1, !dbg !39
  %61 = getelementptr float, ptr addrspace(1) %3, i64 %13, !dbg !40
  %62 = bitcast float %55 to i32, !dbg !41
  %63 = bitcast float %56 to i32, !dbg !41
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %62, i32 %63, ptr addrspace(1) %61, i1 true) #1, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4aau3ejauar22bbxsq2fvyh7wx6bt4rc52fg7wyt3rfuv4in7oj.py", directory: "inductor_cache/4a")
!4 = !{ptr @triton_poi_fused_convolution_max_pool2d_with_indices_relu_sgn_sub_21, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_max_pool2d_with_indices_relu_sgn_sub_21, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_max_pool2d_with_indices_relu_sgn_sub_21", linkageName: "triton_poi_fused_convolution_max_pool2d_with_indices_relu_sgn_sub_21", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 26, column: 39, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 34, scope: !7)
!20 = !DILocation(line: 28, column: 39, scope: !7)
!21 = !DILocation(line: 29, column: 18, scope: !7)
!22 = !DILocation(line: 118, column: 15, scope: !23, inlinedAt: !25)
!23 = distinct !DILexicalBlockFile(scope: !7, file: !24, discriminator: 0)
!24 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!25 = !DILocation(line: 31, column: 40, scope: !7)
!26 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !25)
!27 = !DILocation(line: 32, column: 18, scope: !7)
!28 = !DILocation(line: 118, column: 15, scope: !23, inlinedAt: !29)
!29 = !DILocation(line: 33, column: 40, scope: !7)
!30 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !29)
!31 = !DILocation(line: 34, column: 18, scope: !7)
!32 = !DILocation(line: 35, column: 18, scope: !7)
!33 = !DILocation(line: 36, column: 20, scope: !7)
!34 = !DILocation(line: 37, column: 19, scope: !7)
!35 = !DILocation(line: 38, column: 21, scope: !7)
!36 = !DILocation(line: 39, column: 20, scope: !7)
!37 = !DILocation(line: 40, column: 21, scope: !7)
!38 = !DILocation(line: 41, column: 39, scope: !7)
!39 = !DILocation(line: 42, column: 39, scope: !7)
!40 = !DILocation(line: 43, column: 25, scope: !7)
!41 = !DILocation(line: 43, column: 37, scope: !7)
!42 = !DILocation(line: 43, column: 4, scope: !7)
