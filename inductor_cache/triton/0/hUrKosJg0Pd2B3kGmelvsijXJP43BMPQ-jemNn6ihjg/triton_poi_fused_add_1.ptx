//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_1  // -- Begin function triton_poi_fused_add_1
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_1
.visible .entry triton_poi_fused_add_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_1_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_1_param_3,
	.param .u32 triton_poi_fused_add_1_param_4,
	.param .u32 triton_poi_fused_add_1_param_5
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<52>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_add_1_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_add_1_param_1];
$L__tmp0:
	.loc	1 22 28                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:22:33
	shl.b32 	%r9, %r1, 4;
	ld.param.u64 	%rd7, [triton_poi_fused_add_1_param_2];
	ld.param.u64 	%rd8, [triton_poi_fused_add_1_param_3];
	.loc	1 23 44                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:23:44
	mov.u32 	%r10, %tid.x;
	bfe.u32 	%r11, %r10, 1, 4;
	and.b32  	%r12, %r10, 1;
	and.b32  	%r13, %r10, 15;
	.loc	1 23 23                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:23:23
	or.b32  	%r14, %r9, %r11;
	or.b32  	%r15, %r9, %r13;
	.loc	1 24 21                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:24:21
	setp.lt.s32 	%p6, %r14, 16;
	setp.lt.s32 	%p2, %r15, 16;
	.loc	1 25 28                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:25:33
	shl.b32 	%r16, %r2, 1;
	.loc	1 26 44                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:26:44
	bfe.u32 	%r17, %r10, 4, 1;
	.loc	1 26 23                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:26:23
	or.b32  	%r18, %r16, %r12;
	or.b32  	%r19, %r16, %r17;
	.loc	1 27 21                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:27:21
	setp.lt.s32 	%p7, %r18, 4;
	setp.lt.s32 	%p8, %r19, 4;
	.loc	1 30 19                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:30:19
	shr.s32 	%r21, %r15, 31;
	shr.u32 	%r22, %r21, 30;
	add.s32 	%r23, %r15, %r22;
	.loc	1 29 19                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:29:19
	and.b32  	%r24, %r23, -4;
	sub.s32 	%r25, %r15, %r24;
	.loc	1 30 19                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:30:19
	bfe.s32 	%r26, %r1, 27, 1;
	shr.u32 	%r27, %r26, 30;
	add.s32 	%r28, %r14, %r27;
	.loc	1 32 37                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:32:37
	shl.b32 	%r29, %r19, 2;
	.loc	1 32 35                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:32:35
	add.s32 	%r30, %r29, %r25;
	.loc	1 32 45                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:32:45
	shl.b32 	%r31, %r28, 2;
	and.b32  	%r32, %r31, -16;
	shl.b32 	%r33, %r23, 2;
	and.b32  	%r34, %r33, -16;
	.loc	1 32 42                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:32:42
	add.s32 	%r35, %r30, %r34;
	.loc	1 32 30                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:32:30
	mul.wide.s32 	%rd9, %r35, 4;
	add.s64 	%rd1, %rd5, %rd9;
	.loc	1 32 58                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:32:58
	and.pred  	%p3, %p6, %p7;
	and.pred  	%p1, %p2, %p8;
	.loc	1 32 50                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:32:50
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	.loc	1 33 30                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:33:30
	mul.wide.s32 	%rd10, %r25, 4;
	add.s64 	%rd2, %rd6, %rd10;
	.loc	1 33 35                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:33:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 34 35                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:34:35
	add.s32 	%r36, %r18, %r32;
	.loc	1 34 40                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:34:40
	add.s32 	%r37, %r36, 12;
	.loc	1 34 30                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:34:30
	mul.wide.s32 	%rd11, %r37, 4;
	add.s64 	%rd3, %rd7, %rd11;
	.loc	1 34 48                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:34:48
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	.loc	1 35 18                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:35:18
	add.f32 	%f4, %f1, %f2;
	shl.b32 	%r38, %r10, 1;
	and.b32  	%r39, %r38, 30;
	or.b32  	%r40, %r39, %r17;
	and.b32  	%r41, %r10, 31;
	shl.b32 	%r42, %r39, 1;
	mov.u32 	%r43, global_smem;
	add.s32 	%r44, %r43, %r42;
	shl.b32 	%r45, %r40, 2;
	add.s32 	%r6, %r44, %r45;
	mov.b32 	%r7, %f4;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r46, %r38, 60;
	add.s32 	%r47, %r43, %r46;
	shl.b32 	%r48, %r41, 2;
	add.s32 	%r49, %r47, %r48;
	ld.shared.f32 	%f5, [%r49];
	.loc	1 36 18                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:36:18
	add.f32 	%f6, %f5, %f3;
	.loc	1 37 32                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:37:32
	shl.b32 	%r50, %r14, 2;
	.loc	1 37 30                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:37:30
	add.s32 	%r51, %r18, %r50;
	.loc	1 37 25                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:37:25
	mul.wide.s32 	%rd12, %r51, 4;
	add.s64 	%rd4, %rd8, %rd12;
	.loc	1 37 43                         // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:37:43
	mov.b32 	%r8, %f6;
	// begin inline asm
	@%p3 st.global.b32 [ %rd4 + 0 ], { %r8 };
	// end inline asm
	.loc	1 37 4                          // ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py:37:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/cq/ccquucfr6p6otokpppdjhsfh3i6f5ij3gi6cq3kirwxnsxx5ykt5.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 113
.b8 117
.b8 117
.b8 99
.b8 102
.b8 114
.b8 54
.b8 112
.b8 54
.b8 111
.b8 116
.b8 111
.b8 107
.b8 112
.b8 112
.b8 112
.b8 100
.b8 106
.b8 104
.b8 115
.b8 102
.b8 104
.b8 51
.b8 105
.b8 54
.b8 102
.b8 53
.b8 105
.b8 106
.b8 51
.b8 103
.b8 105
.b8 54
.b8 99
.b8 113
.b8 51
.b8 107
.b8 105
.b8 114
.b8 119
.b8 120
.b8 110
.b8 115
.b8 120
.b8 120
.b8 53
.b8 121
.b8 107
.b8 116
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 113
.b8 0
	}
	.section	.debug_macinfo	{	}
