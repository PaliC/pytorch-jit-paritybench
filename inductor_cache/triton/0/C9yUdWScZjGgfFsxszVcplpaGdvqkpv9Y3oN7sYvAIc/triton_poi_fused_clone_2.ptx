//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_2 // -- Begin function triton_poi_fused_clone_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_clone_2
.visible .entry triton_poi_fused_clone_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_2_param_2,
	.param .u32 triton_poi_fused_clone_2_param_3,
	.param .u32 triton_poi_fused_clone_2_param_4
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<42>;
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<10>;
	.loc	1 19 0                          // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_clone_2_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused_clone_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:22:33
	shl.b32 	%r8, %r1, 3;
	ld.param.u64 	%rd6, [triton_poi_fused_clone_2_param_2];
	.loc	1 23 44                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:23:44
	mov.u32 	%r9, %tid.x;
	bfe.u32 	%r10, %r9, 2, 3;
	and.b32  	%r11, %r9, 3;
	and.b32  	%r12, %r9, 7;
	.loc	1 23 23                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:23:23
	or.b32  	%r13, %r8, %r10;
	or.b32  	%r14, %r8, %r12;
	.loc	1 24 21                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:24:21
	setp.lt.s32 	%p5, %r13, 16;
	setp.lt.s32 	%p2, %r14, 16;
	.loc	1 25 28                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:25:33
	shl.b32 	%r15, %r2, 2;
	.loc	1 26 44                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:26:44
	bfe.u32 	%r16, %r9, 3, 2;
	.loc	1 26 23                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:26:23
	or.b32  	%r17, %r15, %r11;
	or.b32  	%r18, %r15, %r16;
	.loc	1 27 21                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:27:21
	setp.lt.s32 	%p6, %r17, 4;
	setp.lt.s32 	%p7, %r18, 4;
	.loc	1 30 19                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:30:19
	shr.s32 	%r20, %r14, 31;
	shr.u32 	%r21, %r20, 30;
	add.s32 	%r22, %r14, %r21;
	shr.s32 	%r23, %r22, 2;
	.loc	1 29 19                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:29:19
	and.b32  	%r24, %r22, -4;
	sub.s32 	%r25, %r14, %r24;
	.loc	1 32 34                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:32:34
	add.s32 	%r26, %r25, 8;
	.loc	1 32 39                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:32:39
	mad.lo.s32 	%r27, %r18, 12, %r26;
	.loc	1 32 47                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:32:47
	mad.lo.s32 	%r28, %r23, 48, %r27;
	.loc	1 32 30                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:32:30
	mul.wide.s32 	%rd7, %r28, 4;
	add.s64 	%rd1, %rd4, %rd7;
	.loc	1 32 63                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:32:63
	and.pred  	%p4, %p5, %p6;
	and.pred  	%p1, %p2, %p7;
	.loc	1 32 55                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:32:55
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	.loc	1 33 30                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:33:30
	mul.wide.u32 	%rd8, %r26, 4;
	add.s64 	%rd2, %rd5, %rd8;
	.loc	1 33 39                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:33:39
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 34 18                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:34:18
	add.f32 	%f3, %f1, %f2;
	.loc	1 35 32                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:35:32
	shl.b32 	%r29, %r13, 2;
	.loc	1 35 30                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:35:30
	add.s32 	%r30, %r17, %r29;
	.loc	1 35 25                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:35:25
	mul.wide.s32 	%rd9, %r30, 4;
	add.s64 	%rd3, %rd6, %rd9;
	.loc	1 35 43                         // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:35:43
	shl.b32 	%r31, %r9, 2;
	and.b32  	%r32, %r31, 28;
	or.b32  	%r33, %r32, %r16;
	and.b32  	%r34, %r9, 31;
	mov.u32 	%r35, global_smem;
	add.s32 	%r36, %r35, %r32;
	shl.b32 	%r37, %r33, 2;
	add.s32 	%r5, %r36, %r37;
	mov.b32 	%r6, %f3;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r38, %r9, 28;
	add.s32 	%r39, %r35, %r38;
	shl.b32 	%r40, %r34, 2;
	add.s32 	%r41, %r39, %r40;
	ld.shared.u32 	%r7, [%r41];
	// begin inline asm
	@%p4 st.global.b32 [ %rd3 + 0 ], { %r7 };
	// end inline asm
	.loc	1 35 4                          // cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bf/cbf6xxdrnh7lus4ztrsj5oltzupiakti6ub5a6brv366pgcirnuu.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 102
.b8 54
.b8 120
.b8 120
.b8 100
.b8 114
.b8 110
.b8 104
.b8 55
.b8 108
.b8 117
.b8 115
.b8 52
.b8 122
.b8 116
.b8 114
.b8 115
.b8 106
.b8 53
.b8 111
.b8 108
.b8 116
.b8 122
.b8 117
.b8 112
.b8 105
.b8 97
.b8 107
.b8 116
.b8 105
.b8 54
.b8 117
.b8 98
.b8 53
.b8 97
.b8 54
.b8 98
.b8 114
.b8 118
.b8 51
.b8 54
.b8 54
.b8 112
.b8 103
.b8 99
.b8 105
.b8 114
.b8 110
.b8 117
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 102
.b8 0
	}
	.section	.debug_macinfo	{	}
