; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_convolution_elu_14(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 7, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 127, !dbg !12
  %11 = or disjoint i32 %8, %10, !dbg !13
  %.frozen = freeze i32 %11, !dbg !14
  %12 = sdiv i32 %.frozen, 1024, !dbg !14
  %13 = mul i32 %12, 1024, !dbg !15
  %.decomposed = sub i32 %.frozen, %13, !dbg !15
  %14 = sext i32 %11 to i64, !dbg !16
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !16
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 true) #3, !dbg !17
  %17 = sext i32 %.decomposed to i64, !dbg !18
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !18
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 true) #3, !dbg !19
  %20 = getelementptr float, ptr addrspace(1) %2, i64 %14, !dbg !20
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #3, !dbg !21
  %22 = mul i32 %12, 1536, !dbg !22
  %23 = add i32 %22, %.decomposed, !dbg !23
  %24 = sext i32 %23 to i64, !dbg !24
  %25 = getelementptr float, ptr addrspace(1) %3, i64 %24, !dbg !24
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #3, !dbg !25
  %27 = insertelement <2 x i32> poison, i32 %16, i64 0, !dbg !17
  %28 = insertelement <2 x i32> %27, i32 %21, i64 1, !dbg !17
  %29 = bitcast <2 x i32> %28 to <2 x float>, !dbg !17
  %30 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !19
  %31 = insertelement <2 x i32> %30, i32 %26, i64 1, !dbg !19
  %32 = bitcast <2 x i32> %31 to <2 x float>, !dbg !19
  %33 = fadd <2 x float> %29, %32, !dbg !26
  %shift = shufflevector <2 x float> %33, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %34 = fadd <2 x float> %33, %shift, !dbg !27
  %35 = extractelement <2 x float> %34, i64 0, !dbg !27
  %36 = fmul float %35, 0x3FF7154760000000, !dbg !28
  %37 = tail call float @llvm.nvvm.round.f(float %36) #3, !dbg !28
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i = icmp eq i32 %38, 0, !dbg !28
  %39 = tail call float @llvm.nvvm.fabs.ftz.f(float %35) #3, !dbg !28
  %40 = tail call float @llvm.nvvm.fabs.f(float %35) #3, !dbg !28
  %.03.i = select i1 %.not.i, float %40, float %39, !dbg !28
  %41 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !28
  %t.0.i = select i1 %41, float 0.000000e+00, float %37, !dbg !28
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %44 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !28
  %j.0.i = select i1 %44, float 1.270000e+02, float %t.0.i, !dbg !28
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not8.i = icmp eq i32 %50, 0, !dbg !28
  br i1 %.not8.i, label %53, label %51, !dbg !28

51:                                               ; preds = %6
  %52 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !28
  br label %__nv_expm1f.exit, !dbg !28

53:                                               ; preds = %6
  %54 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !28
  br label %__nv_expm1f.exit, !dbg !28

__nv_expm1f.exit:                                 ; preds = %51, %53
  %.0.i = phi float [ %52, %51 ], [ %54, %53 ], !dbg !28
  %55 = fcmp ogt float %35, 0.000000e+00, !dbg !29
  %.not7.i = icmp eq i32 %49, 0, !dbg !28
  %.not6.i = icmp eq i32 %48, 0, !dbg !28
  %.not5.i = icmp eq i32 %47, 0, !dbg !28
  %.not4.i = icmp eq i32 %46, 0, !dbg !28
  %.not3.i = icmp eq i32 %45, 0, !dbg !28
  %.not2.i = icmp eq i32 %43, 0, !dbg !28
  %56 = fneg float %t.0.i, !dbg !28
  %.not1.i = icmp eq i32 %42, 0, !dbg !28
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %56, float 0x3FE62E4000000000, float %35) #3, !dbg !28
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %56, float 0x3FE62E4000000000, float %35) #3, !dbg !28
  %.04.i = select i1 %.not1.i, float %57, float %58, !dbg !28
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %56, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !28
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %56, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !28
  %.05.i = select i1 %.not2.i, float %59, float %60, !dbg !28
  %61 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !28
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !28
  %.07.i = select i1 %.not3.i, float %61, float %62, !dbg !28
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !28
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !28
  %.08.i = select i1 %.not4.i, float %63, float %64, !dbg !28
  %65 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !28
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !28
  %.09.i = select i1 %.not5.i, float %65, float %66, !dbg !28
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !28
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !28
  %.06.i = select i1 %.not6.i, float %67, float %68, !dbg !28
  %69 = fmul float %.05.i, %.06.i, !dbg !28
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %69, float %.05.i, float %.05.i) #3, !dbg !28
  %71 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %69, float %.05.i, float %.05.i) #3, !dbg !28
  %.01.i = select i1 %.not7.i, float %70, float %71, !dbg !28
  %72 = fadd float %.0.i, -1.000000e+00, !dbg !28
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not9.i = icmp eq i32 %73, 0, !dbg !28
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i, float %72) #3, !dbg !28
  %75 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i, float %72) #3, !dbg !28
  %.02.i = select i1 %.not9.i, float %75, float %74, !dbg !28
  %76 = fadd float %.02.i, %.02.i, !dbg !28
  %u.0.i = select i1 %44, float %76, float %.02.i, !dbg !28
  %77 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !28
  %u.1.i = select i1 %77, float 0x7FF0000000000000, float %u.0.i, !dbg !28
  %78 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !28
  %u.2.i = select i1 %78, float -1.000000e+00, float %u.1.i, !dbg !28
  %79 = fcmp oeq float %35, 0.000000e+00, !dbg !28
  %80 = fadd float %35, %35, !dbg !28
  %u.3.i = select i1 %79, float %80, float %u.2.i, !dbg !28
  %81 = select i1 %55, float %35, float %u.3.i, !dbg !30
  %82 = bitcast float %35 to i32, !dbg !31
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %82, ptr addrspace(1) %15, i1 true) #3, !dbg !31
  %83 = getelementptr float, ptr addrspace(1) %4, i64 %14, !dbg !32
  %84 = bitcast float %81 to i32, !dbg !33
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %84, ptr addrspace(1) %83, i1 true) #3, !dbg !33
  ret void, !dbg !34
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7iv5sw5xahoq4o62ekfqleyhcr3cwmnjyg6fb37kcnopnlbxlp3.py", directory: "inductor_cache/7i")
!4 = !{ptr @triton_poi_fused_add_convolution_elu_14, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_convolution_elu_14, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_convolution_elu_14", linkageName: "triton_poi_fused_add_convolution_elu_14", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 26, column: 19, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 34, scope: !7)
!17 = !DILocation(line: 27, column: 39, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 40, scope: !7)
!23 = !DILocation(line: 30, column: 35, scope: !7)
!24 = !DILocation(line: 30, column: 30, scope: !7)
!25 = !DILocation(line: 30, column: 45, scope: !7)
!26 = !DILocation(line: 31, column: 18, scope: !7)
!27 = !DILocation(line: 33, column: 18, scope: !7)
!28 = !DILocation(line: 38, column: 28, scope: !7)
!29 = !DILocation(line: 35, column: 18, scope: !7)
!30 = !DILocation(line: 40, column: 34, scope: !7)
!31 = !DILocation(line: 41, column: 39, scope: !7)
!32 = !DILocation(line: 42, column: 25, scope: !7)
!33 = !DILocation(line: 42, column: 37, scope: !7)
!34 = !DILocation(line: 42, column: 4, scope: !7)
