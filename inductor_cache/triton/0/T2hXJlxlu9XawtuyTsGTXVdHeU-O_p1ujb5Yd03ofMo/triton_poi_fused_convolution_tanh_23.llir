; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_convolution_tanh_23(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 10, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 512, !dbg !13
  %11 = sdiv i32 %9, 1048576, !dbg !14
  %12 = sdiv i32 %10, 1048576, !dbg !14
  %.lhs.trunc = trunc nsw i32 %11 to i16, !dbg !15
  %13 = srem i16 %.lhs.trunc, 4, !dbg !15
  %.lhs.trunc134 = trunc nsw i32 %12 to i16, !dbg !15
  %14 = srem i16 %.lhs.trunc134, 4, !dbg !15
  %15 = sext i32 %9 to i64, !dbg !16
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !16
  %17 = sext i32 %10 to i64, !dbg !16
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !16
  %19 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %16, i1 true) #3, !dbg !17
  %20 = extractvalue { i32, i32, i32, i32 } %19, 0, !dbg !17
  %21 = extractvalue { i32, i32, i32, i32 } %19, 1, !dbg !17
  %22 = extractvalue { i32, i32, i32, i32 } %19, 2, !dbg !17
  %23 = extractvalue { i32, i32, i32, i32 } %19, 3, !dbg !17
  %24 = bitcast i32 %20 to float, !dbg !17
  %25 = bitcast i32 %21 to float, !dbg !17
  %26 = bitcast i32 %22 to float, !dbg !17
  %27 = bitcast i32 %23 to float, !dbg !17
  %28 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %18, i1 true) #3, !dbg !17
  %29 = extractvalue { i32, i32, i32, i32 } %28, 0, !dbg !17
  %30 = extractvalue { i32, i32, i32, i32 } %28, 1, !dbg !17
  %31 = extractvalue { i32, i32, i32, i32 } %28, 2, !dbg !17
  %32 = extractvalue { i32, i32, i32, i32 } %28, 3, !dbg !17
  %33 = bitcast i32 %29 to float, !dbg !17
  %34 = bitcast i32 %30 to float, !dbg !17
  %35 = bitcast i32 %31 to float, !dbg !17
  %36 = bitcast i32 %32 to float, !dbg !17
  %37 = sext i16 %13 to i64, !dbg !18
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !18
  %39 = sext i16 %14 to i64, !dbg !18
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !18
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #3, !dbg !19
  %42 = bitcast i32 %41 to float, !dbg !19
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #3, !dbg !19
  %44 = bitcast i32 %43 to float, !dbg !19
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #3, !dbg !19
  %46 = bitcast i32 %45 to float, !dbg !19
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #3, !dbg !19
  %48 = bitcast i32 %47 to float, !dbg !19
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #3, !dbg !19
  %50 = bitcast i32 %49 to float, !dbg !19
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #3, !dbg !19
  %52 = bitcast i32 %51 to float, !dbg !19
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #3, !dbg !19
  %54 = bitcast i32 %53 to float, !dbg !19
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #3, !dbg !19
  %56 = bitcast i32 %55 to float, !dbg !19
  %57 = fadd float %24, %42, !dbg !20
  %58 = fadd float %25, %44, !dbg !20
  %59 = fadd float %26, %46, !dbg !20
  %60 = fadd float %27, %48, !dbg !20
  %61 = fadd float %33, %50, !dbg !20
  %62 = fadd float %34, %52, !dbg !20
  %63 = fadd float %35, %54, !dbg !20
  %64 = fadd float %36, %56, !dbg !20
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i = icmp eq i32 %65, 0, !dbg !21
  %66 = tail call float @llvm.nvvm.fabs.ftz.f(float %57) #3, !dbg !21
  %67 = tail call float @llvm.nvvm.fabs.f(float %57) #3, !dbg !21
  %.01.i = select i1 %.not.i, float %67, float %66, !dbg !21
  %68 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !21
  br i1 %68, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !21

__internal_fmad.exit1.i:                          ; preds = %3
  %69 = fmul float %.01.i, 0x4007154760000000, !dbg !21
  %70 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %69) #3, !dbg !21
  %71 = fadd float %70, 1.000000e+00, !dbg !21
  %72 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %71) #4, !dbg !21, !srcloc !22
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i = icmp eq i32 %73, 0, !dbg !21
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %72, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %75 = tail call float @llvm.nvvm.fma.rn.f(float %72, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i = select i1 %.not6.i, float %75, float %74, !dbg !21
  %76 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !21
  %s.0.i = select i1 %76, float 1.000000e+00, float %.03.i, !dbg !21
  %77 = bitcast float %s.0.i to i32, !dbg !21
  %78 = bitcast float %57 to i32, !dbg !21
  %79 = and i32 %78, -2147483648, !dbg !21
  %80 = or i32 %79, %77, !dbg !21
  br label %__nv_tanhf.exit, !dbg !21

__internal_fmad.exit3.i:                          ; preds = %3
  %81 = fmul float %57, %57, !dbg !21
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i = icmp eq i32 %82, 0, !dbg !21
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %81, float 0xBFAAC795C0000000) #3, !dbg !21
  %84 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %81, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i = select i1 %.not1.i, float %84, float %83, !dbg !21
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i = icmp eq i32 %85, 0, !dbg !21
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %81, float 0x3FC10B2820000000) #3, !dbg !21
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %81, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i = select i1 %.not2.i, float %87, float %86, !dbg !21
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i = icmp eq i32 %88, 0, !dbg !21
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %81, float 0xBFD5553DA0000000) #3, !dbg !21
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %81, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i = select i1 %.not3.i, float %90, float %89, !dbg !21
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i = icmp eq i32 %91, 0, !dbg !21
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %81, float 0.000000e+00) #3, !dbg !21
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %81, float 0.000000e+00) #3, !dbg !21
  %.04.i = select i1 %.not4.i, float %93, float %92, !dbg !21
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i = icmp eq i32 %94, 0, !dbg !21
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %57, float %57) #3, !dbg !21
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %57, float %57) #3, !dbg !21
  %.02.i = select i1 %.not5.i, float %96, float %95, !dbg !21
  %97 = bitcast float %.02.i to i32, !dbg !23
  br label %__nv_tanhf.exit, !dbg !21

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi i32 [ %80, %__internal_fmad.exit1.i ], [ %97, %__internal_fmad.exit3.i ], !dbg !21
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i1 = icmp eq i32 %98, 0, !dbg !21
  %99 = tail call float @llvm.nvvm.fabs.ftz.f(float %58) #3, !dbg !21
  %100 = tail call float @llvm.nvvm.fabs.f(float %58) #3, !dbg !21
  %.01.i2 = select i1 %.not.i1, float %100, float %99, !dbg !21
  %101 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !21
  br i1 %101, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !21

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %102 = fmul float %.01.i2, 0x4007154760000000, !dbg !21
  %103 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %102) #3, !dbg !21
  %104 = fadd float %103, 1.000000e+00, !dbg !21
  %105 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %104) #4, !dbg !21, !srcloc !22
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i4 = icmp eq i32 %106, 0, !dbg !21
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %105, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %105, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i5 = select i1 %.not6.i4, float %108, float %107, !dbg !21
  %109 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !21
  %s.0.i6 = select i1 %109, float 1.000000e+00, float %.03.i5, !dbg !21
  %110 = bitcast float %s.0.i6 to i32, !dbg !21
  %111 = bitcast float %58 to i32, !dbg !21
  %112 = and i32 %111, -2147483648, !dbg !21
  %113 = or i32 %112, %110, !dbg !21
  br label %__nv_tanhf.exit19, !dbg !21

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %114 = fmul float %58, %58, !dbg !21
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i9 = icmp eq i32 %115, 0, !dbg !21
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %114, float 0xBFAAC795C0000000) #3, !dbg !21
  %117 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %114, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i10 = select i1 %.not1.i9, float %117, float %116, !dbg !21
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i11 = icmp eq i32 %118, 0, !dbg !21
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %114, float 0x3FC10B2820000000) #3, !dbg !21
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %114, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i12 = select i1 %.not2.i11, float %120, float %119, !dbg !21
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i13 = icmp eq i32 %121, 0, !dbg !21
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %114, float 0xBFD5553DA0000000) #3, !dbg !21
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %114, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i14 = select i1 %.not3.i13, float %123, float %122, !dbg !21
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i15 = icmp eq i32 %124, 0, !dbg !21
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %114, float 0.000000e+00) #3, !dbg !21
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %114, float 0.000000e+00) #3, !dbg !21
  %.04.i16 = select i1 %.not4.i15, float %126, float %125, !dbg !21
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i17 = icmp eq i32 %127, 0, !dbg !21
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %58, float %58) #3, !dbg !21
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %58, float %58) #3, !dbg !21
  %.02.i18 = select i1 %.not5.i17, float %129, float %128, !dbg !21
  %130 = bitcast float %.02.i18 to i32, !dbg !23
  br label %__nv_tanhf.exit19, !dbg !21

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi i32 [ %113, %__internal_fmad.exit1.i3 ], [ %130, %__internal_fmad.exit3.i8 ], !dbg !21
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i20 = icmp eq i32 %131, 0, !dbg !21
  %132 = tail call float @llvm.nvvm.fabs.ftz.f(float %59) #3, !dbg !21
  %133 = tail call float @llvm.nvvm.fabs.f(float %59) #3, !dbg !21
  %.01.i21 = select i1 %.not.i20, float %133, float %132, !dbg !21
  %134 = fcmp ult float %.01.i21, 0x3FE3333340000000, !dbg !21
  br i1 %134, label %__internal_fmad.exit3.i27, label %__internal_fmad.exit1.i22, !dbg !21

__internal_fmad.exit1.i22:                        ; preds = %__nv_tanhf.exit19
  %135 = fmul float %.01.i21, 0x4007154760000000, !dbg !21
  %136 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %135) #3, !dbg !21
  %137 = fadd float %136, 1.000000e+00, !dbg !21
  %138 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %137) #4, !dbg !21, !srcloc !22
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i23 = icmp eq i32 %139, 0, !dbg !21
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %138, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %138, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i24 = select i1 %.not6.i23, float %141, float %140, !dbg !21
  %142 = fcmp oge float %.01.i21, 0x4022059680000000, !dbg !21
  %s.0.i25 = select i1 %142, float 1.000000e+00, float %.03.i24, !dbg !21
  %143 = bitcast float %s.0.i25 to i32, !dbg !21
  %144 = bitcast float %59 to i32, !dbg !21
  %145 = and i32 %144, -2147483648, !dbg !21
  %146 = or i32 %145, %143, !dbg !21
  br label %__nv_tanhf.exit38, !dbg !21

__internal_fmad.exit3.i27:                        ; preds = %__nv_tanhf.exit19
  %147 = fmul float %59, %59, !dbg !21
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i28 = icmp eq i32 %148, 0, !dbg !21
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %147, float 0xBFAAC795C0000000) #3, !dbg !21
  %150 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %147, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i29 = select i1 %.not1.i28, float %150, float %149, !dbg !21
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i30 = icmp eq i32 %151, 0, !dbg !21
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i29, float %147, float 0x3FC10B2820000000) #3, !dbg !21
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i29, float %147, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i31 = select i1 %.not2.i30, float %153, float %152, !dbg !21
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i32 = icmp eq i32 %154, 0, !dbg !21
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i31, float %147, float 0xBFD5553DA0000000) #3, !dbg !21
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i31, float %147, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i33 = select i1 %.not3.i32, float %156, float %155, !dbg !21
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i34 = icmp eq i32 %157, 0, !dbg !21
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %147, float 0.000000e+00) #3, !dbg !21
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %147, float 0.000000e+00) #3, !dbg !21
  %.04.i35 = select i1 %.not4.i34, float %159, float %158, !dbg !21
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i36 = icmp eq i32 %160, 0, !dbg !21
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %59, float %59) #3, !dbg !21
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %59, float %59) #3, !dbg !21
  %.02.i37 = select i1 %.not5.i36, float %162, float %161, !dbg !21
  %163 = bitcast float %.02.i37 to i32, !dbg !23
  br label %__nv_tanhf.exit38, !dbg !21

__nv_tanhf.exit38:                                ; preds = %__internal_fmad.exit1.i22, %__internal_fmad.exit3.i27
  %s.1.i26 = phi i32 [ %146, %__internal_fmad.exit1.i22 ], [ %163, %__internal_fmad.exit3.i27 ], !dbg !21
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i39 = icmp eq i32 %164, 0, !dbg !21
  %165 = tail call float @llvm.nvvm.fabs.ftz.f(float %60) #3, !dbg !21
  %166 = tail call float @llvm.nvvm.fabs.f(float %60) #3, !dbg !21
  %.01.i40 = select i1 %.not.i39, float %166, float %165, !dbg !21
  %167 = fcmp ult float %.01.i40, 0x3FE3333340000000, !dbg !21
  br i1 %167, label %__internal_fmad.exit3.i46, label %__internal_fmad.exit1.i41, !dbg !21

__internal_fmad.exit1.i41:                        ; preds = %__nv_tanhf.exit38
  %168 = fmul float %.01.i40, 0x4007154760000000, !dbg !21
  %169 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %168) #3, !dbg !21
  %170 = fadd float %169, 1.000000e+00, !dbg !21
  %171 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %170) #4, !dbg !21, !srcloc !22
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i42 = icmp eq i32 %172, 0, !dbg !21
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %171, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %171, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i43 = select i1 %.not6.i42, float %174, float %173, !dbg !21
  %175 = fcmp oge float %.01.i40, 0x4022059680000000, !dbg !21
  %s.0.i44 = select i1 %175, float 1.000000e+00, float %.03.i43, !dbg !21
  %176 = bitcast float %s.0.i44 to i32, !dbg !21
  %177 = bitcast float %60 to i32, !dbg !21
  %178 = and i32 %177, -2147483648, !dbg !21
  %179 = or i32 %178, %176, !dbg !21
  br label %__nv_tanhf.exit57, !dbg !21

__internal_fmad.exit3.i46:                        ; preds = %__nv_tanhf.exit38
  %180 = fmul float %60, %60, !dbg !21
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i47 = icmp eq i32 %181, 0, !dbg !21
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %180, float 0xBFAAC795C0000000) #3, !dbg !21
  %183 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %180, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i48 = select i1 %.not1.i47, float %183, float %182, !dbg !21
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i49 = icmp eq i32 %184, 0, !dbg !21
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i48, float %180, float 0x3FC10B2820000000) #3, !dbg !21
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i48, float %180, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i50 = select i1 %.not2.i49, float %186, float %185, !dbg !21
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i51 = icmp eq i32 %187, 0, !dbg !21
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %180, float 0xBFD5553DA0000000) #3, !dbg !21
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %180, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i52 = select i1 %.not3.i51, float %189, float %188, !dbg !21
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i53 = icmp eq i32 %190, 0, !dbg !21
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i52, float %180, float 0.000000e+00) #3, !dbg !21
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i52, float %180, float 0.000000e+00) #3, !dbg !21
  %.04.i54 = select i1 %.not4.i53, float %192, float %191, !dbg !21
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i55 = icmp eq i32 %193, 0, !dbg !21
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %60, float %60) #3, !dbg !21
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %60, float %60) #3, !dbg !21
  %.02.i56 = select i1 %.not5.i55, float %195, float %194, !dbg !21
  %196 = bitcast float %.02.i56 to i32, !dbg !23
  br label %__nv_tanhf.exit57, !dbg !21

__nv_tanhf.exit57:                                ; preds = %__internal_fmad.exit1.i41, %__internal_fmad.exit3.i46
  %s.1.i45 = phi i32 [ %179, %__internal_fmad.exit1.i41 ], [ %196, %__internal_fmad.exit3.i46 ], !dbg !21
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i58 = icmp eq i32 %197, 0, !dbg !21
  %198 = tail call float @llvm.nvvm.fabs.ftz.f(float %61) #3, !dbg !21
  %199 = tail call float @llvm.nvvm.fabs.f(float %61) #3, !dbg !21
  %.01.i59 = select i1 %.not.i58, float %199, float %198, !dbg !21
  %200 = fcmp ult float %.01.i59, 0x3FE3333340000000, !dbg !21
  br i1 %200, label %__internal_fmad.exit3.i65, label %__internal_fmad.exit1.i60, !dbg !21

__internal_fmad.exit1.i60:                        ; preds = %__nv_tanhf.exit57
  %201 = fmul float %.01.i59, 0x4007154760000000, !dbg !21
  %202 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %201) #3, !dbg !21
  %203 = fadd float %202, 1.000000e+00, !dbg !21
  %204 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %203) #4, !dbg !21, !srcloc !22
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i61 = icmp eq i32 %205, 0, !dbg !21
  %206 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %204, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %207 = tail call float @llvm.nvvm.fma.rn.f(float %204, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i62 = select i1 %.not6.i61, float %207, float %206, !dbg !21
  %208 = fcmp oge float %.01.i59, 0x4022059680000000, !dbg !21
  %s.0.i63 = select i1 %208, float 1.000000e+00, float %.03.i62, !dbg !21
  %209 = bitcast float %s.0.i63 to i32, !dbg !21
  %210 = bitcast float %61 to i32, !dbg !21
  %211 = and i32 %210, -2147483648, !dbg !21
  %212 = or i32 %211, %209, !dbg !21
  br label %__nv_tanhf.exit76, !dbg !21

__internal_fmad.exit3.i65:                        ; preds = %__nv_tanhf.exit57
  %213 = fmul float %61, %61, !dbg !21
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i66 = icmp eq i32 %214, 0, !dbg !21
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %213, float 0xBFAAC795C0000000) #3, !dbg !21
  %216 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %213, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i67 = select i1 %.not1.i66, float %216, float %215, !dbg !21
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i68 = icmp eq i32 %217, 0, !dbg !21
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i67, float %213, float 0x3FC10B2820000000) #3, !dbg !21
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i67, float %213, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i69 = select i1 %.not2.i68, float %219, float %218, !dbg !21
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i70 = icmp eq i32 %220, 0, !dbg !21
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i69, float %213, float 0xBFD5553DA0000000) #3, !dbg !21
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i69, float %213, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i71 = select i1 %.not3.i70, float %222, float %221, !dbg !21
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i72 = icmp eq i32 %223, 0, !dbg !21
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i71, float %213, float 0.000000e+00) #3, !dbg !21
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i71, float %213, float 0.000000e+00) #3, !dbg !21
  %.04.i73 = select i1 %.not4.i72, float %225, float %224, !dbg !21
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i74 = icmp eq i32 %226, 0, !dbg !21
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i73, float %61, float %61) #3, !dbg !21
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i73, float %61, float %61) #3, !dbg !21
  %.02.i75 = select i1 %.not5.i74, float %228, float %227, !dbg !21
  %229 = bitcast float %.02.i75 to i32, !dbg !23
  br label %__nv_tanhf.exit76, !dbg !21

__nv_tanhf.exit76:                                ; preds = %__internal_fmad.exit1.i60, %__internal_fmad.exit3.i65
  %s.1.i64 = phi i32 [ %212, %__internal_fmad.exit1.i60 ], [ %229, %__internal_fmad.exit3.i65 ], !dbg !21
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i77 = icmp eq i32 %230, 0, !dbg !21
  %231 = tail call float @llvm.nvvm.fabs.ftz.f(float %62) #3, !dbg !21
  %232 = tail call float @llvm.nvvm.fabs.f(float %62) #3, !dbg !21
  %.01.i78 = select i1 %.not.i77, float %232, float %231, !dbg !21
  %233 = fcmp ult float %.01.i78, 0x3FE3333340000000, !dbg !21
  br i1 %233, label %__internal_fmad.exit3.i84, label %__internal_fmad.exit1.i79, !dbg !21

__internal_fmad.exit1.i79:                        ; preds = %__nv_tanhf.exit76
  %234 = fmul float %.01.i78, 0x4007154760000000, !dbg !21
  %235 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %234) #3, !dbg !21
  %236 = fadd float %235, 1.000000e+00, !dbg !21
  %237 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %236) #4, !dbg !21, !srcloc !22
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i80 = icmp eq i32 %238, 0, !dbg !21
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %237, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %237, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i81 = select i1 %.not6.i80, float %240, float %239, !dbg !21
  %241 = fcmp oge float %.01.i78, 0x4022059680000000, !dbg !21
  %s.0.i82 = select i1 %241, float 1.000000e+00, float %.03.i81, !dbg !21
  %242 = bitcast float %s.0.i82 to i32, !dbg !21
  %243 = bitcast float %62 to i32, !dbg !21
  %244 = and i32 %243, -2147483648, !dbg !21
  %245 = or i32 %244, %242, !dbg !21
  br label %__nv_tanhf.exit95, !dbg !21

__internal_fmad.exit3.i84:                        ; preds = %__nv_tanhf.exit76
  %246 = fmul float %62, %62, !dbg !21
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i85 = icmp eq i32 %247, 0, !dbg !21
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %246, float 0xBFAAC795C0000000) #3, !dbg !21
  %249 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %246, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i86 = select i1 %.not1.i85, float %249, float %248, !dbg !21
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i87 = icmp eq i32 %250, 0, !dbg !21
  %251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i86, float %246, float 0x3FC10B2820000000) #3, !dbg !21
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i86, float %246, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i88 = select i1 %.not2.i87, float %252, float %251, !dbg !21
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i89 = icmp eq i32 %253, 0, !dbg !21
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i88, float %246, float 0xBFD5553DA0000000) #3, !dbg !21
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i88, float %246, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i90 = select i1 %.not3.i89, float %255, float %254, !dbg !21
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i91 = icmp eq i32 %256, 0, !dbg !21
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i90, float %246, float 0.000000e+00) #3, !dbg !21
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i90, float %246, float 0.000000e+00) #3, !dbg !21
  %.04.i92 = select i1 %.not4.i91, float %258, float %257, !dbg !21
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i93 = icmp eq i32 %259, 0, !dbg !21
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i92, float %62, float %62) #3, !dbg !21
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i92, float %62, float %62) #3, !dbg !21
  %.02.i94 = select i1 %.not5.i93, float %261, float %260, !dbg !21
  %262 = bitcast float %.02.i94 to i32, !dbg !23
  br label %__nv_tanhf.exit95, !dbg !21

__nv_tanhf.exit95:                                ; preds = %__internal_fmad.exit1.i79, %__internal_fmad.exit3.i84
  %s.1.i83 = phi i32 [ %245, %__internal_fmad.exit1.i79 ], [ %262, %__internal_fmad.exit3.i84 ], !dbg !21
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i96 = icmp eq i32 %263, 0, !dbg !21
  %264 = tail call float @llvm.nvvm.fabs.ftz.f(float %63) #3, !dbg !21
  %265 = tail call float @llvm.nvvm.fabs.f(float %63) #3, !dbg !21
  %.01.i97 = select i1 %.not.i96, float %265, float %264, !dbg !21
  %266 = fcmp ult float %.01.i97, 0x3FE3333340000000, !dbg !21
  br i1 %266, label %__internal_fmad.exit3.i103, label %__internal_fmad.exit1.i98, !dbg !21

__internal_fmad.exit1.i98:                        ; preds = %__nv_tanhf.exit95
  %267 = fmul float %.01.i97, 0x4007154760000000, !dbg !21
  %268 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %267) #3, !dbg !21
  %269 = fadd float %268, 1.000000e+00, !dbg !21
  %270 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %269) #4, !dbg !21, !srcloc !22
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i99 = icmp eq i32 %271, 0, !dbg !21
  %272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %270, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %273 = tail call float @llvm.nvvm.fma.rn.f(float %270, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i100 = select i1 %.not6.i99, float %273, float %272, !dbg !21
  %274 = fcmp oge float %.01.i97, 0x4022059680000000, !dbg !21
  %s.0.i101 = select i1 %274, float 1.000000e+00, float %.03.i100, !dbg !21
  %275 = bitcast float %s.0.i101 to i32, !dbg !21
  %276 = bitcast float %63 to i32, !dbg !21
  %277 = and i32 %276, -2147483648, !dbg !21
  %278 = or i32 %277, %275, !dbg !21
  br label %__nv_tanhf.exit114, !dbg !21

__internal_fmad.exit3.i103:                       ; preds = %__nv_tanhf.exit95
  %279 = fmul float %63, %63, !dbg !21
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i104 = icmp eq i32 %280, 0, !dbg !21
  %281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %279, float 0xBFAAC795C0000000) #3, !dbg !21
  %282 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %279, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i105 = select i1 %.not1.i104, float %282, float %281, !dbg !21
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i106 = icmp eq i32 %283, 0, !dbg !21
  %284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i105, float %279, float 0x3FC10B2820000000) #3, !dbg !21
  %285 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i105, float %279, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i107 = select i1 %.not2.i106, float %285, float %284, !dbg !21
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i108 = icmp eq i32 %286, 0, !dbg !21
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i107, float %279, float 0xBFD5553DA0000000) #3, !dbg !21
  %288 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i107, float %279, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i109 = select i1 %.not3.i108, float %288, float %287, !dbg !21
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i110 = icmp eq i32 %289, 0, !dbg !21
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i109, float %279, float 0.000000e+00) #3, !dbg !21
  %291 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i109, float %279, float 0.000000e+00) #3, !dbg !21
  %.04.i111 = select i1 %.not4.i110, float %291, float %290, !dbg !21
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i112 = icmp eq i32 %292, 0, !dbg !21
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i111, float %63, float %63) #3, !dbg !21
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i111, float %63, float %63) #3, !dbg !21
  %.02.i113 = select i1 %.not5.i112, float %294, float %293, !dbg !21
  %295 = bitcast float %.02.i113 to i32, !dbg !23
  br label %__nv_tanhf.exit114, !dbg !21

__nv_tanhf.exit114:                               ; preds = %__internal_fmad.exit1.i98, %__internal_fmad.exit3.i103
  %s.1.i102 = phi i32 [ %278, %__internal_fmad.exit1.i98 ], [ %295, %__internal_fmad.exit3.i103 ], !dbg !21
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i115 = icmp eq i32 %296, 0, !dbg !21
  %297 = tail call float @llvm.nvvm.fabs.ftz.f(float %64) #3, !dbg !21
  %298 = tail call float @llvm.nvvm.fabs.f(float %64) #3, !dbg !21
  %.01.i116 = select i1 %.not.i115, float %298, float %297, !dbg !21
  %299 = fcmp ult float %.01.i116, 0x3FE3333340000000, !dbg !21
  br i1 %299, label %__internal_fmad.exit3.i122, label %__internal_fmad.exit1.i117, !dbg !21

__internal_fmad.exit1.i117:                       ; preds = %__nv_tanhf.exit114
  %300 = fmul float %.01.i116, 0x4007154760000000, !dbg !21
  %301 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %300) #3, !dbg !21
  %302 = fadd float %301, 1.000000e+00, !dbg !21
  %303 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %302) #4, !dbg !21, !srcloc !22
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i118 = icmp eq i32 %304, 0, !dbg !21
  %305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %303, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %306 = tail call float @llvm.nvvm.fma.rn.f(float %303, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i119 = select i1 %.not6.i118, float %306, float %305, !dbg !21
  %307 = fcmp oge float %.01.i116, 0x4022059680000000, !dbg !21
  %s.0.i120 = select i1 %307, float 1.000000e+00, float %.03.i119, !dbg !21
  %308 = bitcast float %s.0.i120 to i32, !dbg !21
  %309 = bitcast float %64 to i32, !dbg !21
  %310 = and i32 %309, -2147483648, !dbg !21
  %311 = or i32 %310, %308, !dbg !21
  br label %__nv_tanhf.exit133, !dbg !21

__internal_fmad.exit3.i122:                       ; preds = %__nv_tanhf.exit114
  %312 = fmul float %64, %64, !dbg !21
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i123 = icmp eq i32 %313, 0, !dbg !21
  %314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %312, float 0xBFAAC795C0000000) #3, !dbg !21
  %315 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %312, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i124 = select i1 %.not1.i123, float %315, float %314, !dbg !21
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i125 = icmp eq i32 %316, 0, !dbg !21
  %317 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i124, float %312, float 0x3FC10B2820000000) #3, !dbg !21
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i124, float %312, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i126 = select i1 %.not2.i125, float %318, float %317, !dbg !21
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i127 = icmp eq i32 %319, 0, !dbg !21
  %320 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i126, float %312, float 0xBFD5553DA0000000) #3, !dbg !21
  %321 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i126, float %312, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i128 = select i1 %.not3.i127, float %321, float %320, !dbg !21
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i129 = icmp eq i32 %322, 0, !dbg !21
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i128, float %312, float 0.000000e+00) #3, !dbg !21
  %324 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i128, float %312, float 0.000000e+00) #3, !dbg !21
  %.04.i130 = select i1 %.not4.i129, float %324, float %323, !dbg !21
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i131 = icmp eq i32 %325, 0, !dbg !21
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i130, float %64, float %64) #3, !dbg !21
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i130, float %64, float %64) #3, !dbg !21
  %.02.i132 = select i1 %.not5.i131, float %327, float %326, !dbg !21
  %328 = bitcast float %.02.i132 to i32, !dbg !23
  br label %__nv_tanhf.exit133, !dbg !21

__nv_tanhf.exit133:                               ; preds = %__internal_fmad.exit1.i117, %__internal_fmad.exit3.i122
  %s.1.i121 = phi i32 [ %311, %__internal_fmad.exit1.i117 ], [ %328, %__internal_fmad.exit3.i122 ], !dbg !21
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %s.1.i, i32 %s.1.i7, i32 %s.1.i26, i32 %s.1.i45, ptr addrspace(1) %16, i1 true) #3, !dbg !23
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %s.1.i64, i32 %s.1.i83, i32 %s.1.i102, i32 %s.1.i121, ptr addrspace(1) %18, i1 true) #3, !dbg !23
  ret void, !dbg !24
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chk4lxjebxuqq56ypvqndxokb5ksfz5rdnos3nokpezlx4joftn2.py", directory: "inductor_cache/hk")
!4 = !{ptr @triton_poi_fused_convolution_tanh_23, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_tanh_23, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_tanh_23", linkageName: "triton_poi_fused_convolution_tanh_23", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 26, column: 34, scope: !7)
!17 = !DILocation(line: 26, column: 39, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 18, scope: !7)
!21 = !DILocation(line: 29, column: 26, scope: !7)
!22 = !{i32 21046}
!23 = !DILocation(line: 30, column: 39, scope: !7)
!24 = !DILocation(line: 30, column: 4, scope: !7)
