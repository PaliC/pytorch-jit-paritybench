; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_convolution_softplus_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #3, !dbg !10
  %7 = shl i32 %6, 6, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 1, !dbg !12
  %10 = and i32 %9, 63, !dbg !12
  %11 = and i32 %8, 1, !dbg !12
  %12 = shl nuw nsw i32 %11, 1, !dbg !12
  %13 = or disjoint i32 %7, %10, !dbg !13
  %14 = icmp slt i32 %13, 64, !dbg !14
  %15 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !15
  %16 = shl i32 %15, 2, !dbg !16
  %17 = or disjoint i32 %16, %12, !dbg !17
  %18 = icmp slt i32 %17, 16, !dbg !18
  %19 = shl i32 %13, 4, !dbg !19
  %20 = add i32 %17, %19, !dbg !20
  %21 = sext i32 %20 to i64, !dbg !21
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !21
  %23 = and i1 %14, %18, !dbg !22
  %24 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %22, i1 %23) #3, !dbg !23
  %25 = extractvalue { i32, i32 } %24, 0, !dbg !23
  %26 = extractvalue { i32, i32 } %24, 1, !dbg !23
  %27 = bitcast i32 %25 to float, !dbg !23
  %28 = bitcast i32 %26 to float, !dbg !23
  %29 = sext i32 %17 to i64, !dbg !24
  %30 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !24
  %31 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %30, i1 %18) #3, !dbg !25
  %32 = extractvalue { i32, i32 } %31, 0, !dbg !25
  %33 = extractvalue { i32, i32 } %31, 1, !dbg !25
  %34 = bitcast i32 %32 to float, !dbg !25
  %35 = bitcast i32 %33 to float, !dbg !25
  %36 = fadd float %27, %34, !dbg !26
  %37 = fadd float %28, %35, !dbg !26
  %38 = fmul float %36, 0x3FF7154760000000, !dbg !27
  %39 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %38) #3, !dbg !27
  %40 = fmul float %37, 0x3FF7154760000000, !dbg !27
  %41 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %40) #3, !dbg !27
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i = icmp eq i32 %42, 0, !dbg !28
  %43 = tail call float @llvm.nvvm.add.rz.ftz.f(float %39, float 1.000000e+00) #3, !dbg !28
  %44 = tail call float @llvm.nvvm.add.rz.f(float %39, float 1.000000e+00) #3, !dbg !28
  %.01.i = select i1 %.not.i, float %44, float %43, !dbg !28
  %45 = bitcast float %.01.i to i32, !dbg !28
  %46 = add i32 %45, -1061158912, !dbg !28
  %47 = and i32 %46, -8388608, !dbg !28
  %48 = bitcast float %39 to i32, !dbg !28
  %49 = sub i32 %48, %47, !dbg !28
  %50 = bitcast i32 %49 to float, !dbg !28
  %51 = sub i32 1082130432, %47, !dbg !28
  %52 = bitcast i32 %51 to float, !dbg !28
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not14.i = icmp eq i32 %53, 0, !dbg !28
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %52, float -1.000000e+00) #3, !dbg !28
  %55 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %52, float -1.000000e+00) #3, !dbg !28
  %.09.i = select i1 %.not14.i, float %55, float %54, !dbg !28
  %56 = fadd float %.09.i, %50, !dbg !28
  %57 = sitofp i32 %47 to float, !dbg !28
  %58 = fmul float %57, 0x3E80000000000000, !dbg !28
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not15.i = icmp eq i32 %59, 0, !dbg !28
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %56, float 0x3FBB000240000000) #3, !dbg !28
  %61 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %56, float 0x3FBB000240000000) #3, !dbg !28
  %.012.i = select i1 %.not15.i, float %61, float %60, !dbg !28
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not16.i = icmp eq i32 %62, 0, !dbg !28
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %56, float 0xBFC0EF1C00000000) #3, !dbg !28
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %56, float 0xBFC0EF1C00000000) #3, !dbg !28
  %.010.i = select i1 %.not16.i, float %64, float %63, !dbg !28
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not17.i = icmp eq i32 %65, 0, !dbg !28
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %56, float 0x3FC28C8EA0000000) #3, !dbg !28
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %56, float 0x3FC28C8EA0000000) #3, !dbg !28
  %.06.i = select i1 %.not17.i, float %67, float %66, !dbg !28
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not18.i = icmp eq i32 %68, 0, !dbg !28
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %56, float 0xBFC54D1BA0000000) #3, !dbg !28
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %56, float 0xBFC54D1BA0000000) #3, !dbg !28
  %.02.i = select i1 %.not18.i, float %70, float %69, !dbg !28
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not19.i = icmp eq i32 %71, 0, !dbg !28
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %56, float 0x3FC995F3C0000000) #3, !dbg !28
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %56, float 0x3FC995F3C0000000) #3, !dbg !28
  %.0.i = select i1 %.not19.i, float %73, float %72, !dbg !28
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not20.i = icmp eq i32 %74, 0, !dbg !28
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %56, float 0xBFD0000840000000) #3, !dbg !28
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %56, float 0xBFD0000840000000) #3, !dbg !28
  %.011.i = select i1 %.not20.i, float %76, float %75, !dbg !28
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not21.i = icmp eq i32 %77, 0, !dbg !28
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %56, float 0x3FD5555CC0000000) #3, !dbg !28
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %56, float 0x3FD5555CC0000000) #3, !dbg !28
  %.08.i = select i1 %.not21.i, float %79, float %78, !dbg !28
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not22.i = icmp eq i32 %80, 0, !dbg !28
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %56, float -5.000000e-01) #3, !dbg !28
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %56, float -5.000000e-01) #3, !dbg !28
  %.07.i = select i1 %.not22.i, float %82, float %81, !dbg !28
  %83 = fmul float %56, %.07.i, !dbg !28
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not23.i = icmp eq i32 %84, 0, !dbg !28
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %83, float %56, float %56) #3, !dbg !28
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %83, float %56, float %56) #3, !dbg !28
  %.05.i = select i1 %.not23.i, float %86, float %85, !dbg !28
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not24.i = icmp eq i32 %87, 0, !dbg !28
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %58, float 0x3FE62E4300000000, float %.05.i) #3, !dbg !28
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %58, float 0x3FE62E4300000000, float %.05.i) #3, !dbg !28
  %.04.i = select i1 %.not24.i, float %89, float %88, !dbg !28
  %90 = icmp ugt i32 %48, 2139095039, !dbg !28
  br i1 %90, label %91, label %__nv_log1pf.exit, !dbg !28

91:                                               ; preds = %5
  %92 = icmp sgt i32 %48, -1082130432, !dbg !28
  br i1 %92, label %__nv_fmaf_rn.exit.i, label %96, !dbg !28

__nv_fmaf_rn.exit.i:                              ; preds = %91
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not25.i = icmp eq i32 %93, 0, !dbg !28
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %39, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %39, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %.03.i = select i1 %.not25.i, float %95, float %94, !dbg !28
  br label %96, !dbg !28

96:                                               ; preds = %__nv_fmaf_rn.exit.i, %91
  %r.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i ], [ %.04.i, %91 ], !dbg !28
  %97 = fcmp oeq float %39, 0.000000e+00, !dbg !28
  %r.1.i = select i1 %97, float -0.000000e+00, float %r.0.i, !dbg !28
  br label %__nv_log1pf.exit, !dbg !28

__nv_log1pf.exit:                                 ; preds = %5, %96
  %r.2.i = phi float [ %r.1.i, %96 ], [ %.04.i, %5 ], !dbg !28
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i5 = icmp eq i32 %98, 0, !dbg !28
  %99 = tail call float @llvm.nvvm.add.rz.ftz.f(float %41, float 1.000000e+00) #3, !dbg !28
  %100 = tail call float @llvm.nvvm.add.rz.f(float %41, float 1.000000e+00) #3, !dbg !28
  %.01.i6 = select i1 %.not.i5, float %100, float %99, !dbg !28
  %101 = bitcast float %.01.i6 to i32, !dbg !28
  %102 = add i32 %101, -1061158912, !dbg !28
  %103 = and i32 %102, -8388608, !dbg !28
  %104 = bitcast float %41 to i32, !dbg !28
  %105 = sub i32 %104, %103, !dbg !28
  %106 = bitcast i32 %105 to float, !dbg !28
  %107 = sub i32 1082130432, %103, !dbg !28
  %108 = bitcast i32 %107 to float, !dbg !28
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not14.i7 = icmp eq i32 %109, 0, !dbg !28
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %108, float -1.000000e+00) #3, !dbg !28
  %111 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %108, float -1.000000e+00) #3, !dbg !28
  %.09.i8 = select i1 %.not14.i7, float %111, float %110, !dbg !28
  %112 = fadd float %.09.i8, %106, !dbg !28
  %113 = sitofp i32 %103 to float, !dbg !28
  %114 = fmul float %113, 0x3E80000000000000, !dbg !28
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not15.i9 = icmp eq i32 %115, 0, !dbg !28
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %112, float 0x3FBB000240000000) #3, !dbg !28
  %117 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %112, float 0x3FBB000240000000) #3, !dbg !28
  %.012.i10 = select i1 %.not15.i9, float %117, float %116, !dbg !28
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not16.i11 = icmp eq i32 %118, 0, !dbg !28
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %112, float 0xBFC0EF1C00000000) #3, !dbg !28
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %112, float 0xBFC0EF1C00000000) #3, !dbg !28
  %.010.i12 = select i1 %.not16.i11, float %120, float %119, !dbg !28
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not17.i13 = icmp eq i32 %121, 0, !dbg !28
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i12, float %112, float 0x3FC28C8EA0000000) #3, !dbg !28
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i12, float %112, float 0x3FC28C8EA0000000) #3, !dbg !28
  %.06.i14 = select i1 %.not17.i13, float %123, float %122, !dbg !28
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not18.i15 = icmp eq i32 %124, 0, !dbg !28
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i14, float %112, float 0xBFC54D1BA0000000) #3, !dbg !28
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i14, float %112, float 0xBFC54D1BA0000000) #3, !dbg !28
  %.02.i16 = select i1 %.not18.i15, float %126, float %125, !dbg !28
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not19.i17 = icmp eq i32 %127, 0, !dbg !28
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i16, float %112, float 0x3FC995F3C0000000) #3, !dbg !28
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i16, float %112, float 0x3FC995F3C0000000) #3, !dbg !28
  %.0.i18 = select i1 %.not19.i17, float %129, float %128, !dbg !28
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not20.i19 = icmp eq i32 %130, 0, !dbg !28
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %112, float 0xBFD0000840000000) #3, !dbg !28
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %112, float 0xBFD0000840000000) #3, !dbg !28
  %.011.i20 = select i1 %.not20.i19, float %132, float %131, !dbg !28
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not21.i21 = icmp eq i32 %133, 0, !dbg !28
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i20, float %112, float 0x3FD5555CC0000000) #3, !dbg !28
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i20, float %112, float 0x3FD5555CC0000000) #3, !dbg !28
  %.08.i22 = select i1 %.not21.i21, float %135, float %134, !dbg !28
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not22.i23 = icmp eq i32 %136, 0, !dbg !28
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i22, float %112, float -5.000000e-01) #3, !dbg !28
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i22, float %112, float -5.000000e-01) #3, !dbg !28
  %.07.i24 = select i1 %.not22.i23, float %138, float %137, !dbg !28
  %139 = fmul float %112, %.07.i24, !dbg !28
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not23.i25 = icmp eq i32 %140, 0, !dbg !28
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float %112, float %112) #3, !dbg !28
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %139, float %112, float %112) #3, !dbg !28
  %.05.i26 = select i1 %.not23.i25, float %142, float %141, !dbg !28
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not24.i27 = icmp eq i32 %143, 0, !dbg !28
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %114, float 0x3FE62E4300000000, float %.05.i26) #3, !dbg !28
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %114, float 0x3FE62E4300000000, float %.05.i26) #3, !dbg !28
  %.04.i28 = select i1 %.not24.i27, float %145, float %144, !dbg !28
  %146 = icmp ugt i32 %104, 2139095039, !dbg !28
  br i1 %146, label %147, label %__nv_log1pf.exit35, !dbg !28

147:                                              ; preds = %__nv_log1pf.exit
  %148 = icmp sgt i32 %104, -1082130432, !dbg !28
  br i1 %148, label %__nv_fmaf_rn.exit.i32, label %152, !dbg !28

__nv_fmaf_rn.exit.i32:                            ; preds = %147
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not25.i33 = icmp eq i32 %149, 0, !dbg !28
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %41, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %41, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %.03.i34 = select i1 %.not25.i33, float %151, float %150, !dbg !28
  br label %152, !dbg !28

152:                                              ; preds = %__nv_fmaf_rn.exit.i32, %147
  %r.0.i30 = phi float [ %.03.i34, %__nv_fmaf_rn.exit.i32 ], [ %.04.i28, %147 ], !dbg !28
  %153 = fcmp oeq float %41, 0.000000e+00, !dbg !28
  %r.1.i31 = select i1 %153, float -0.000000e+00, float %r.0.i30, !dbg !28
  br label %__nv_log1pf.exit35, !dbg !28

__nv_log1pf.exit35:                               ; preds = %__nv_log1pf.exit, %152
  %r.2.i29 = phi float [ %r.1.i31, %152 ], [ %.04.i28, %__nv_log1pf.exit ], !dbg !28
  %154 = fcmp ogt float %37, 2.000000e+01, !dbg !29
  %155 = fcmp ogt float %36, 2.000000e+01, !dbg !29
  %.lobit12 = lshr i32 %8, 5, !dbg !30
  %156 = and i32 %.lobit12, 3, !dbg !30
  %157 = or disjoint i32 %16, %156, !dbg !17
  %158 = icmp slt i32 %157, 16, !dbg !18
  %159 = shl i32 %8, 1, !dbg !12
  %160 = and i32 %159, 62, !dbg !12
  %161 = or disjoint i32 %7, %160, !dbg !13
  %162 = icmp slt i32 %161, 64, !dbg !14
  %163 = and i1 %162, %158, !dbg !22
  %.frozen = freeze i32 %161, !dbg !31
  %164 = sdiv i32 %.frozen, 16, !dbg !31
  %165 = mul i32 %164, 16, !dbg !32
  %.decomposed = sub i32 %.frozen, %165, !dbg !32
  %166 = select i1 %155, float %36, float %r.2.i, !dbg !33
  %167 = select i1 %154, float %37, float %r.2.i29, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !34
  %168 = bitcast float %36 to i32, !dbg !35
  %169 = bitcast float %37 to i32, !dbg !35
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %168, i32 %169, ptr addrspace(1) %22, i1 %23) #3, !dbg !35
  %170 = shl i32 %157, 4, !dbg !36
  %171 = add i32 %170, %.decomposed, !dbg !37
  %172 = shl i32 %164, 8, !dbg !38
  %173 = add i32 %171, %172, !dbg !39
  %174 = sext i32 %173 to i64, !dbg !40
  %175 = getelementptr float, ptr addrspace(1) %2, i64 %174, !dbg !40
  %176 = shl nuw nsw i32 %11, 7, !dbg !41
  %177 = or disjoint i32 %176, %10, !dbg !41
  %178 = and i32 %159, 254, !dbg !41
  %.idx = shl nuw nsw i32 %11, 4, !dbg !41
  %179 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %.idx, !dbg !41
  %180 = getelementptr float, ptr addrspace(3) %179, i32 %177, !dbg !41
  %181 = bitcast float %166 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %180, <1 x i32> %181, i1 true) #3, !dbg !41
  %182 = or disjoint i32 %177, 64, !dbg !41
  %183 = lshr i32 %182, 5, !dbg !41
  %184 = and i32 %183, 6, !dbg !41
  %185 = getelementptr float, ptr addrspace(3) @global_smem, i32 %184, !dbg !41
  %186 = getelementptr float, ptr addrspace(3) %185, i32 %182, !dbg !41
  %187 = bitcast float %167 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %186, <1 x i32> %187, i1 true) #3, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %188 = lshr i32 %159, 5, !dbg !41
  %189 = and i32 %188, 6, !dbg !41
  %190 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %189, !dbg !41
  %191 = getelementptr inbounds float, ptr addrspace(3) %190, i32 %178, !dbg !41
  %.extract = load i32, ptr addrspace(3) %191, align 8, !dbg !41
  %192 = getelementptr inbounds i8, ptr addrspace(3) %191, i32 4, !dbg !41
  %.extract4 = load i32, ptr addrspace(3) %192, align 4, !dbg !41
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract, i32 %.extract4, ptr addrspace(1) %175, i1 %163) #3, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py", directory: "inductor_cache/vu")
!4 = !{ptr @triton_poi_fused_convolution_softplus_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_softplus_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_softplus_2", linkageName: "triton_poi_fused_convolution_softplus_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 32, column: 42, scope: !7)
!20 = !DILocation(line: 32, column: 39, scope: !7)
!21 = !DILocation(line: 32, column: 34, scope: !7)
!22 = !DILocation(line: 32, column: 55, scope: !7)
!23 = !DILocation(line: 32, column: 47, scope: !7)
!24 = !DILocation(line: 33, column: 30, scope: !7)
!25 = !DILocation(line: 33, column: 35, scope: !7)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 39, column: 23, scope: !7)
!28 = !DILocation(line: 40, column: 27, scope: !7)
!29 = !DILocation(line: 38, column: 18, scope: !7)
!30 = !DILocation(line: 26, column: 44, scope: !7)
!31 = !DILocation(line: 31, column: 19, scope: !7)
!32 = !DILocation(line: 30, column: 19, scope: !7)
!33 = !DILocation(line: 42, column: 33, scope: !7)
!34 = !DILocation(line: 43, column: 4, scope: !7)
!35 = !DILocation(line: 44, column: 47, scope: !7)
!36 = !DILocation(line: 45, column: 33, scope: !7)
!37 = !DILocation(line: 45, column: 30, scope: !7)
!38 = !DILocation(line: 45, column: 42, scope: !7)
!39 = !DILocation(line: 45, column: 38, scope: !7)
!40 = !DILocation(line: 45, column: 25, scope: !7)
!41 = !DILocation(line: 45, column: 54, scope: !7)
!42 = !DILocation(line: 45, column: 4, scope: !7)
