//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b32 	%r<99>;
	.reg .f32 	%f<57>;
	.reg .b64 	%rd<34>;
	.loc	1 19 0                          // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_0];
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_1];
$L__tmp0:
	.loc	1 22 28                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:22:33
	shl.b32 	%r43, %r1, 4;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_2];
	.loc	1 23 44                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:23:44
	mov.u32 	%r44, %tid.x;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_3];
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_4];
	bfe.u32 	%r46, %r44, 6, 1;
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_5];
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_10_param_6];
	.loc	1 23 23                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:23:23
	or.b32  	%r47, %r43, %r46;
	or.b32  	%r48, %r47, 2;
	or.b32  	%r49, %r47, 4;
	or.b32  	%r50, %r47, 6;
	or.b32  	%r51, %r47, 8;
	or.b32  	%r52, %r47, 10;
	or.b32  	%r53, %r47, 12;
	or.b32  	%r54, %r47, 14;
	.loc	1 25 28                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:25:33
	shl.b32 	%r55, %r2, 6;
	.loc	1 26 44                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:26:44
	and.b32  	%r56, %r44, 63;
	.loc	1 26 23                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:26:23
	or.b32  	%r57, %r55, %r56;
	.loc	1 27 21                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:27:21
	setp.lt.s32 	%p1, %r57, 35;
	.loc	1 32 35                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:32:35
	mad.lo.s32 	%r58, %r47, 35, %r57;
	mad.lo.s32 	%r59, %r48, 35, %r57;
	mad.lo.s32 	%r60, %r49, 35, %r57;
	mad.lo.s32 	%r61, %r50, 35, %r57;
	mad.lo.s32 	%r62, %r51, 35, %r57;
	mad.lo.s32 	%r63, %r52, 35, %r57;
	mad.lo.s32 	%r64, %r53, 35, %r57;
	mad.lo.s32 	%r65, %r54, 35, %r57;
	.loc	1 32 30                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:32:30
	mul.wide.s32 	%rd23, %r58, 4;
	add.s64 	%rd1, %rd16, %rd23;
	mul.wide.s32 	%rd24, %r59, 4;
	add.s64 	%rd2, %rd16, %rd24;
	mul.wide.s32 	%rd25, %r60, 4;
	add.s64 	%rd3, %rd16, %rd25;
	mul.wide.s32 	%rd26, %r61, 4;
	add.s64 	%rd4, %rd16, %rd26;
	mul.wide.s32 	%rd27, %r62, 4;
	add.s64 	%rd5, %rd16, %rd27;
	mul.wide.s32 	%rd28, %r63, 4;
	add.s64 	%rd6, %rd16, %rd28;
	mul.wide.s32 	%rd29, %r64, 4;
	add.s64 	%rd7, %rd16, %rd29;
	mul.wide.s32 	%rd30, %r65, 4;
	add.s64 	%rd8, %rd16, %rd30;
	.loc	1 32 43                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:32:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:33:30
	mul.wide.s32 	%rd31, %r57, 4;
	add.s64 	%rd9, %rd17, %rd31;
	.loc	1 33 35                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:33:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:34:30
	add.s64 	%rd10, %rd18, %rd31;
	.loc	1 34 35                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:34:35
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r12;
	.loc	1 35 31                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:35:31
	add.s64 	%rd11, %rd19, %rd31;
	.loc	1 35 36                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:35:36
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:36:31
	add.s64 	%rd12, %rd20, %rd31;
	.loc	1 36 36                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:36:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:37:31
	add.s64 	%rd13, %rd21, %rd31;
	.loc	1 37 36                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:37:36
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 40 18                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:40:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 41 26                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:41:26
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 32 43                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:32:43
	mov.b32 	%f4, %r10;
	mov.b32 	%f5, %r9;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r7;
	mov.b32 	%f8, %r6;
	mov.b32 	%f9, %r5;
	mov.b32 	%f10, %r4;
	mov.b32 	%f11, %r3;
	.loc	1 37 36                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:37:36
	mov.b32 	%f12, %r15;
	.loc	1 23 44                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:23:44
	shl.b32 	%r66, %r44, 2;
	and.b32  	%r67, %r66, 12;
	.loc	1 23 23                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:23:23
	or.b32  	%r68, %r43, %r67;
	.loc	1 31 19                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:31:19
	bfe.s32 	%r69, %r1, 27, 1;
	shr.u32 	%r70, %r69, 22;
	add.s32 	%r71, %r68, %r70;
	shr.s32 	%r72, %r71, 10;
	.loc	1 30 19                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:30:19
	and.b32  	%r73, %r71, -1024;
	sub.s32 	%r74, %r68, %r73;
	.loc	1 26 44                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:26:44
	bfe.u32 	%r75, %r44, 2, 5;
	.loc	1 26 23                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:26:23
	or.b32  	%r76, %r75, %r55;
	or.b32  	%r77, %r76, 32;
	.loc	1 27 21                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:27:21
	setp.lt.s32 	%p23, %r77, 35;
	setp.lt.s32 	%p22, %r76, 35;
	.loc	1 43 18                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:43:18
	mov.b32 	%r18, %f3;
	mov.b32 	%r17, 1065353216;
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%f13, %r16;
	.loc	1 38 18                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:38:18
	mov.b32 	%f14, %r11;
	sub.f32 	%f15, %f11, %f14;
	sub.f32 	%f16, %f10, %f14;
	sub.f32 	%f17, %f9, %f14;
	sub.f32 	%f18, %f8, %f14;
	sub.f32 	%f19, %f7, %f14;
	sub.f32 	%f20, %f6, %f14;
	sub.f32 	%f21, %f5, %f14;
	sub.f32 	%f22, %f4, %f14;
	.loc	1 46 19                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:46:19
	mul.f32 	%f23, %f22, %f13;
	mul.f32 	%f24, %f21, %f13;
	mul.f32 	%f25, %f20, %f13;
	mul.f32 	%f26, %f19, %f13;
	mul.f32 	%f27, %f18, %f13;
	mul.f32 	%f28, %f17, %f13;
	mul.f32 	%f29, %f16, %f13;
	mul.f32 	%f30, %f15, %f13;
	.loc	1 47 20                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:47:20
	mov.b32 	%f31, %r13;
	.loc	1 48 20                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:48:20
	mov.b32 	%f32, %r14;
	fma.rn.f32 	%f33, %f30, %f31, %f32;
	fma.rn.f32 	%f34, %f29, %f31, %f32;
	fma.rn.f32 	%f35, %f28, %f31, %f32;
	fma.rn.f32 	%f36, %f27, %f31, %f32;
	fma.rn.f32 	%f37, %f26, %f31, %f32;
	fma.rn.f32 	%f38, %f25, %f31, %f32;
	fma.rn.f32 	%f39, %f24, %f31, %f32;
	fma.rn.f32 	%f40, %f23, %f31, %f32;
	.loc	1 50 20                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:50:20
	setp.gt.f32 	%p24, %f40, 0f00000000;
	setp.gt.f32 	%p25, %f39, 0f00000000;
	setp.gt.f32 	%p26, %f38, 0f00000000;
	setp.gt.f32 	%p27, %f37, 0f00000000;
	setp.gt.f32 	%p28, %f36, 0f00000000;
	setp.gt.f32 	%p29, %f35, 0f00000000;
	setp.gt.f32 	%p30, %f34, 0f00000000;
	setp.gt.f32 	%p31, %f33, 0f00000000;
	.loc	1 51 20                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:51:20
	mul.f32 	%f41, %f33, %f12;
	mul.f32 	%f42, %f34, %f12;
	mul.f32 	%f43, %f35, %f12;
	mul.f32 	%f44, %f36, %f12;
	mul.f32 	%f45, %f37, %f12;
	mul.f32 	%f46, %f38, %f12;
	mul.f32 	%f47, %f39, %f12;
	mul.f32 	%f48, %f40, %f12;
	.loc	1 52 35                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:52:35
	selp.f32 	%f49, %f33, %f41, %p31;
	selp.f32 	%f50, %f34, %f42, %p30;
	selp.f32 	%f51, %f35, %f43, %p29;
	selp.f32 	%f52, %f36, %f44, %p28;
	selp.f32 	%f53, %f37, %f45, %p27;
	selp.f32 	%f54, %f38, %f46, %p26;
	selp.f32 	%f55, %f39, %f47, %p25;
	selp.f32 	%f56, %f40, %f48, %p24;
	.loc	1 53 35                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:53:35
	shl.b32 	%r78, %r76, 10;
	shl.b32 	%r79, %r77, 10;
	.loc	1 53 30                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:53:30
	mad.lo.s32 	%r80, %r72, 35840, %r74;
	.loc	1 53 40                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:53:40
	add.s32 	%r81, %r80, %r78;
	add.s32 	%r82, %r80, %r79;
	.loc	1 53 25                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:53:25
	mul.wide.s32 	%rd32, %r81, 4;
	add.s64 	%rd14, %rd22, %rd32;
	mul.wide.s32 	%rd33, %r82, 4;
	add.s64 	%rd15, %rd22, %rd33;
	.loc	1 53 58                         // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:53:58
	shl.b32 	%r83, %r44, 4;
	and.b32  	%r84, %r83, 1008;
	or.b32  	%r85, %r84, %r46;
	and.b32  	%r86, %r66, 508;
	mov.u32 	%r87, global_smem;
	add.s32 	%r88, %r87, %r84;
	shl.b32 	%r89, %r85, 2;
	add.s32 	%r19, %r88, %r89;
	mov.b32 	%r20, %f49;
	mov.pred 	%p14, -1;
	// begin inline asm
	@%p14 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r19, 8;
	mov.b32 	%r22, %f50;
	// begin inline asm
	@%p14 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r19, 16;
	mov.b32 	%r24, %f51;
	// begin inline asm
	@%p14 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r19, 24;
	mov.b32 	%r26, %f52;
	// begin inline asm
	@%p14 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r19, 32;
	mov.b32 	%r28, %f53;
	// begin inline asm
	@%p14 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r19, 40;
	mov.b32 	%r30, %f54;
	// begin inline asm
	@%p14 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r19, 48;
	mov.b32 	%r32, %f55;
	// begin inline asm
	@%p14 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r19, 56;
	mov.b32 	%r34, %f56;
	// begin inline asm
	@%p14 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r90, %r44, 124;
	shl.b32 	%r91, %r90, 2;
	add.s32 	%r92, %r87, %r91;
	shl.b32 	%r93, %r86, 2;
	add.s32 	%r94, %r92, %r93;
	or.b32  	%r95, %r86, 512;
	and.b32  	%r96, %r95, 1008;
	add.s32 	%r97, %r87, %r96;
	add.s32 	%r98, %r97, %r93;
	ld.shared.v4.u32 	{%r39, %r40, %r41, %r42}, [%r98+2048];
	ld.shared.v4.u32 	{%r35, %r36, %r37, %r38}, [%r94];
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd14 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd15 + 0 ], { %r39, %r40, %r41, %r42 };
	// end inline asm
	.loc	1 53 4                          // cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py:53:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/v2/cv2tiyu5u2jqqqxabyv3yfon7hzadfhjlrisoz7ysxwfjpozvxwj.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 50
.b8 116
.b8 105
.b8 121
.b8 117
.b8 53
.b8 117
.b8 50
.b8 106
.b8 113
.b8 113
.b8 113
.b8 120
.b8 97
.b8 98
.b8 121
.b8 118
.b8 51
.b8 121
.b8 102
.b8 111
.b8 110
.b8 55
.b8 104
.b8 122
.b8 97
.b8 100
.b8 102
.b8 104
.b8 106
.b8 108
.b8 114
.b8 105
.b8 115
.b8 111
.b8 122
.b8 55
.b8 121
.b8 115
.b8 120
.b8 119
.b8 102
.b8 106
.b8 112
.b8 111
.b8 122
.b8 118
.b8 120
.b8 119
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 50
.b8 0
	}
	.section	.debug_macinfo	{	}
