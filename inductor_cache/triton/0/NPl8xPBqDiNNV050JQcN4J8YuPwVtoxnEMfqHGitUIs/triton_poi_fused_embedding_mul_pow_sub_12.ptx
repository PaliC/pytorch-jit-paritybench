//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_embedding_mul_pow_sub_12 // -- Begin function triton_poi_fused_embedding_mul_pow_sub_12
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 98, 104, 47, 99, 98, 104, 116, 103, 120, 111, 120, 118, 104, 110, 102, 52, 99, 52, 119, 97, 50, 110, 118, 102, 103, 112, 120, 54, 110, 52, 100, 52, 55, 51, 109, 108, 119, 54, 119, 116, 108, 103, 104, 110, 100, 106, 116, 97, 105, 119, 120, 111, 101, 109, 104, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[38] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 48, 50, 52};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_embedding_mul_pow_sub_12
.visible .entry triton_poi_fused_embedding_mul_pow_sub_12(
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_4,
	.param .u32 triton_poi_fused_embedding_mul_pow_sub_12_param_5,
	.param .u32 triton_poi_fused_embedding_mul_pow_sub_12_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<39>;
	.reg .b32 	%r<127>;
	.reg .f32 	%f<51>;
	.reg .b64 	%rd<85>;
	.loc	1 19 0                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:19:0

// %bb.0:
	ld.param.u64 	%rd33, [triton_poi_fused_embedding_mul_pow_sub_12_param_0];
$L__tmp0:
	.loc	1 22 28                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:22:28
	// begin inline asm
	mov.u32 %r18, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:22:33
	shl.b32 	%r36, %r18, 5;
	ld.param.u64 	%rd34, [triton_poi_fused_embedding_mul_pow_sub_12_param_2];
	.loc	1 23 44                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:23:44
	mov.u32 	%r37, %tid.x;
	ld.param.u64 	%rd35, [triton_poi_fused_embedding_mul_pow_sub_12_param_3];
	shl.b32 	%r2, %r37, 2;
	and.b32  	%r3, %r2, 28;
	bfe.u32 	%r4, %r37, 3, 4;
	or.b32  	%r38, %r4, 16;
	and.b32  	%r39, %r37, 31;
	.loc	1 23 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:23:23
	or.b32  	%r40, %r36, %r3;
	or.b32  	%r5, %r36, %r4;
	or.b32  	%r41, %r36, %r39;
	.loc	1 25 28                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:25:28
	// begin inline asm
	mov.u32 %r19, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:25:33
	shl.b32 	%r7, %r19, 5;
	.loc	1 26 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:26:23
	or.b32  	%r42, %r7, %r4;
	or.b32  	%r43, %r7, %r38;
	.loc	1 27 21                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:27:21
	setp.lt.s32 	%p10, %r42, 64;
	setp.lt.s32 	%p11, %r43, 64;
	.loc	1 31 19                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:31:19
	bfe.s32 	%r44, %r18, 26, 1;
	shr.u32 	%r45, %r44, 24;
	add.s32 	%r46, %r40, %r45;
	.loc	1 30 19                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:30:19
	and.b32  	%r47, %r46, -256;
	sub.s32 	%r48, %r40, %r47;
	.loc	1 32 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:32:30
	mul.wide.s32 	%rd36, %r5, 8;
	add.s64 	%rd6, %rd33, %rd36;
	cvt.s64.s32 	%rd37, %r36;
	cvt.u64.u32 	%rd38, %r4;
	or.b64  	%rd39, %rd37, %rd38;
	shl.b64 	%rd40, %rd39, 3;
	add.s64 	%rd41, %rd33, %rd40;
	add.s64 	%rd14, %rd41, 128;
	mul.wide.s32 	%rd42, %r41, 8;
	add.s64 	%rd22, %rd33, %rd42;
	mov.pred 	%p9, -1;
	.loc	1 32 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:32:35
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd9, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd9 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd11 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 33 39                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:39
	shl.b32 	%r49, %r42, 8;
	shl.b32 	%r50, %r43, 8;
	.loc	1 33 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:50
	shl.b32 	%r51, %r46, 6;
	and.b32  	%r52, %r51, -16384;
	.loc	1 33 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:35
	add.s32 	%r53, %r52, %r48;
	.loc	1 33 44                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:44
	add.s32 	%r54, %r53, %r49;
	add.s32 	%r55, %r53, %r50;
	.loc	1 33 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:30
	mul.wide.s32 	%rd43, %r54, 4;
	add.s64 	%rd23, %rd34, %rd43;
	mul.wide.s32 	%rd44, %r55, 4;
	add.s64 	%rd24, %rd34, %rd44;
	.loc	1 33 55                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:55
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p10 ld.global.L1::evict_last.v4.b32 { %r20, %r21, %r22, %r23 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r24, %r25, %r26, %r27 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:34:30
	mul.wide.s32 	%rd45, %r42, 4;
	add.s64 	%rd25, %rd35, %rd45;
	cvt.s64.s32 	%rd46, %r7;
	or.b64  	%rd47, %rd46, %rd38;
	shl.b64 	%rd48, %rd47, 2;
	add.s64 	%rd49, %rd35, %rd48;
	add.s64 	%rd29, %rd49, 64;
	.loc	1 34 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:34:35
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r28 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r29 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r30 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r31 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r32 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r33 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r34 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r35 }, [ %rd29 + 0 ];
	// end inline asm
	.loc	1 38 32                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:38:32
	shr.u64 	%rd50, %rd21, 53;
	and.b64  	%rd51, %rd50, 1024;
	add.s64 	%rd52, %rd51, %rd21;
	.loc	1 39 36                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:36
	setp.lt.u64 	%p20, %rd52, 1024;
	.loc	1 39 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:50
	@%p20 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 50                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:0:50
	ld.param.u64 	%rd4, [triton_poi_fused_embedding_mul_pow_sub_12_param_4];
	ld.param.u64 	%rd3, [triton_poi_fused_embedding_mul_pow_sub_12_param_1];
	or.b32  	%r6, %r36, %r38;
	.loc	1 34 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:34:35
	mov.b32 	%f1, %r35;
	mov.b32 	%f2, %r31;
	.loc	1 33 55                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:55
	mov.b32 	%f3, %r27;
	mov.b32 	%f4, %r26;
	mov.b32 	%f5, %r25;
	mov.b32 	%f6, %r24;
	mov.b32 	%f7, %r23;
	mov.b32 	%f8, %r22;
	mov.b32 	%f9, %r21;
	mov.b32 	%f10, %r20;
	.loc	1 26 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:26:23
	or.b32  	%r88, %r7, %r3;
	.loc	1 27 21                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:27:21
	setp.lt.s32 	%p21, %r88, 64;
	.loc	1 39 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:50
	bar.sync 	0;
	.loc	1 26 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:26:23
	shl.b32 	%r89, %r88, 10;
	.loc	1 40 42                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:40:42
	or.b32  	%r90, %r89, 1024;
	or.b32  	%r91, %r89, 2048;
	or.b32  	%r92, %r89, 3072;
	.loc	1 40 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:40:30
	shl.b64 	%rd63, %rd11, 2;
	add.s64 	%rd64, %rd3, %rd63;
	shr.u64 	%rd65, %rd11, 51;
	and.b64  	%rd66, %rd65, 4096;
	add.s64 	%rd67, %rd64, %rd66;
	mul.wide.s32 	%rd68, %r89, 4;
	add.s64 	%rd53, %rd67, %rd68;
	mul.wide.s32 	%rd69, %r90, 4;
	add.s64 	%rd54, %rd67, %rd69;
	mul.wide.s32 	%rd70, %r91, 4;
	add.s64 	%rd55, %rd67, %rd70;
	mul.wide.s32 	%rd71, %r92, 4;
	add.s64 	%rd56, %rd67, %rd71;
	shl.b64 	%rd72, %rd19, 2;
	add.s64 	%rd73, %rd3, %rd72;
	shr.u64 	%rd74, %rd19, 51;
	and.b64  	%rd75, %rd74, 4096;
	add.s64 	%rd76, %rd73, %rd75;
	add.s64 	%rd57, %rd76, %rd68;
	add.s64 	%rd58, %rd76, %rd69;
	add.s64 	%rd59, %rd76, %rd70;
	add.s64 	%rd60, %rd76, %rd71;
	.loc	1 40 47                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:40:47
	// begin inline asm
	mov.u32 %r56, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r56 }, [ %rd53 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r56;
	// begin inline asm
	mov.u32 %r57, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r57 }, [ %rd54 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r57;
	// begin inline asm
	mov.u32 %r58, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r58 }, [ %rd55 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r58;
	// begin inline asm
	mov.u32 %r59, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r59 }, [ %rd56 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r59;
	// begin inline asm
	mov.u32 %r60, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r60 }, [ %rd57 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r60;
	// begin inline asm
	mov.u32 %r61, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r61 }, [ %rd58 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r61;
	// begin inline asm
	mov.u32 %r62, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r62 }, [ %rd59 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r62;
	// begin inline asm
	mov.u32 %r63, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r63 }, [ %rd60 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r63;
	.loc	1 41 18                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:41:18
	add.f32 	%f19, %f10, %f2;
	add.f32 	%f20, %f9, %f2;
	add.f32 	%f21, %f8, %f2;
	add.f32 	%f22, %f7, %f2;
	add.f32 	%f23, %f6, %f1;
	add.f32 	%f24, %f5, %f1;
	add.f32 	%f25, %f4, %f1;
	add.f32 	%f26, %f3, %f1;
	shl.b32 	%r93, %r37, 7;
	and.b32  	%r94, %r93, 896;
	or.b32  	%r95, %r94, %r4;
	and.b32  	%r96, %r2, 508;
	shr.u32 	%r97, %r94, 3;
	mov.u32 	%r98, global_smem;
	add.s32 	%r99, %r98, %r97;
	shl.b32 	%r100, %r95, 2;
	add.s32 	%r64, %r99, %r100;
	mov.b32 	%r65, %f19;
	// begin inline asm
	@%p9 st.shared.b32 [ %r64 + 0 ], %r65;
	// end inline asm
	or.b32  	%r101, %r94, 32;
	shr.u32 	%r102, %r101, 3;
	add.s32 	%r103, %r98, %r102;
	add.s32 	%r104, %r103, %r100;
	add.s32 	%r66, %r104, 128;
	mov.b32 	%r67, %f20;
	// begin inline asm
	@%p9 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	or.b32  	%r105, %r94, 64;
	shr.u32 	%r106, %r105, 3;
	add.s32 	%r107, %r98, %r106;
	add.s32 	%r108, %r107, %r100;
	add.s32 	%r68, %r108, 256;
	mov.b32 	%r69, %f21;
	// begin inline asm
	@%p9 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	or.b32  	%r109, %r94, 96;
	shr.u32 	%r110, %r109, 3;
	add.s32 	%r111, %r98, %r110;
	add.s32 	%r112, %r111, %r100;
	add.s32 	%r70, %r112, 384;
	mov.b32 	%r71, %f22;
	// begin inline asm
	@%p9 st.shared.b32 [ %r70 + 0 ], %r71;
	// end inline asm
	add.s32 	%r72, %r64, 64;
	mov.b32 	%r73, %f23;
	// begin inline asm
	@%p9 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	add.s32 	%r74, %r104, 192;
	mov.b32 	%r75, %f24;
	// begin inline asm
	@%p9 st.shared.b32 [ %r74 + 0 ], %r75;
	// end inline asm
	add.s32 	%r76, %r108, 320;
	mov.b32 	%r77, %f25;
	// begin inline asm
	@%p9 st.shared.b32 [ %r76 + 0 ], %r77;
	// end inline asm
	add.s32 	%r78, %r112, 448;
	mov.b32 	%r79, %f26;
	// begin inline asm
	@%p9 st.shared.b32 [ %r78 + 0 ], %r79;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r113, %r2, 3;
	and.b32  	%r114, %r113, 60;
	add.s32 	%r115, %r98, %r114;
	shl.b32 	%r116, %r96, 2;
	add.s32 	%r117, %r115, %r116;
	ld.shared.f32 	%f27, [%r117];
	ld.shared.f32 	%f28, [%r117+4];
	ld.shared.f32 	%f29, [%r117+8];
	ld.shared.f32 	%f30, [%r117+12];
	or.b32  	%r118, %r96, 512;
	shr.u32 	%r119, %r118, 3;
	and.b32  	%r120, %r119, 124;
	add.s32 	%r121, %r98, %r120;
	add.s32 	%r122, %r121, %r116;
	ld.shared.f32 	%f31, [%r122+2048];
	ld.shared.f32 	%f32, [%r122+2052];
	ld.shared.f32 	%f33, [%r122+2056];
	ld.shared.f32 	%f34, [%r122+2060];
	.loc	1 42 19                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:42:19
	sub.f32 	%f35, %f11, %f27;
	sub.f32 	%f36, %f12, %f28;
	sub.f32 	%f37, %f13, %f29;
	sub.f32 	%f38, %f14, %f30;
	sub.f32 	%f39, %f15, %f31;
	sub.f32 	%f40, %f16, %f32;
	sub.f32 	%f41, %f17, %f33;
	sub.f32 	%f42, %f18, %f34;
	.loc	1 44 20                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:44:20
	add.f32 	%f43, %f35, %f35;
	add.f32 	%f44, %f36, %f36;
	add.f32 	%f45, %f37, %f37;
	add.f32 	%f46, %f38, %f38;
	add.f32 	%f47, %f39, %f39;
	add.f32 	%f48, %f40, %f40;
	add.f32 	%f49, %f41, %f41;
	add.f32 	%f50, %f42, %f42;
	.loc	1 45 33                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:33
	shl.b32 	%r123, %r5, 6;
	shl.b32 	%r124, %r6, 6;
	.loc	1 45 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:30
	add.s32 	%r125, %r88, %r123;
	add.s32 	%r126, %r88, %r124;
	.loc	1 45 25                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:25
	mul.wide.s32 	%rd77, %r125, 4;
	add.s64 	%rd61, %rd4, %rd77;
	mul.wide.s32 	%rd78, %r126, 4;
	add.s64 	%rd62, %rd4, %rd78;
	.loc	1 45 45                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:45
	mov.b32 	%r80, %f43;
	mov.b32 	%r81, %f44;
	mov.b32 	%r82, %f45;
	mov.b32 	%r83, %f46;
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd61 + 0 ], { %r80, %r81, %r82, %r83 };
	// end inline asm
	mov.b32 	%r84, %f47;
	mov.b32 	%r85, %f48;
	mov.b32 	%r86, %f49;
	mov.b32 	%r87, %f50;
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd62 + 0 ], { %r84, %r85, %r86, %r87 };
	// end inline asm
	.loc	1 45 4                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:4
	ret;
$L__BB0_1:
	.loc	1 39 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:50
	mov.u64 	%rd79, assertMessage_0;
	cvta.global.u64 	%rd80, %rd79;
	mov.u64 	%rd81, assertFile_0;
	cvta.global.u64 	%rd82, %rd81;
	mov.u64 	%rd83, assertFunc_0;
	cvta.global.u64 	%rd84, %rd83;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd80;
	.param .b64 param1;
	st.param.b64 	[param1], %rd82;
	.param .b32 param2;
	st.param.b32 	[param2], 39;
	.param .b64 param3;
	st.param.b64 	[param3], %rd84;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bh/cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 104
.b8 116
.b8 103
.b8 120
.b8 111
.b8 120
.b8 118
.b8 104
.b8 110
.b8 102
.b8 52
.b8 99
.b8 52
.b8 119
.b8 97
.b8 50
.b8 110
.b8 118
.b8 102
.b8 103
.b8 112
.b8 120
.b8 54
.b8 110
.b8 52
.b8 100
.b8 52
.b8 55
.b8 51
.b8 109
.b8 108
.b8 119
.b8 54
.b8 119
.b8 116
.b8 108
.b8 103
.b8 104
.b8 110
.b8 100
.b8 106
.b8 116
.b8 97
.b8 105
.b8 119
.b8 120
.b8 111
.b8 101
.b8 109
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 104
.b8 0
	}
	.section	.debug_macinfo	{	}
