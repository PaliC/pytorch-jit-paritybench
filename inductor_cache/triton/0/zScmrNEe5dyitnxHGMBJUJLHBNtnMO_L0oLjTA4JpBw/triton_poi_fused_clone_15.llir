; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_clone_15(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %10 = shl i32 %9, 4, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 1, !dbg !12
  %13 = and i32 %12, 14, !dbg !12
  %14 = lshr i32 %11, 3, !dbg !12
  %15 = and i32 %14, 15, !dbg !12
  %16 = or disjoint i32 %10, %13, !dbg !13
  %17 = or disjoint i32 %10, %15, !dbg !13
  %18 = icmp slt i32 %16, 16, !dbg !14
  %19 = icmp slt i32 %17, 16, !dbg !14
  %20 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !15
  %21 = shl i32 %20, 4, !dbg !16
  %22 = or disjoint i32 %21, %15, !dbg !17
  %23 = or disjoint i32 %21, %13, !dbg !17
  %24 = icmp slt i32 %22, 16, !dbg !18
  %25 = icmp slt i32 %23, 16, !dbg !18
  %.frozen = freeze i32 %22, !dbg !19
  %26 = sdiv i32 %.frozen, 4, !dbg !19
  %27 = mul i32 %26, 4, !dbg !20
  %.decomposed = sub i32 %.frozen, %27, !dbg !20
  %.frozen1 = freeze i32 %23, !dbg !19
  %28 = sdiv i32 %.frozen1, 4, !dbg !19
  %29 = mul i32 %28, 4, !dbg !20
  %.decomposed2 = sub i32 %.frozen1, %29, !dbg !20
  %.frozen3 = freeze i32 %16, !dbg !21
  %30 = sdiv i32 %.frozen3, 4, !dbg !21
  %31 = mul i32 %30, 4, !dbg !22
  %.decomposed4 = sub i32 %.frozen3, %31, !dbg !22
  %.frozen5 = freeze i32 %17, !dbg !21
  %32 = sdiv i32 %.frozen5, 4, !dbg !21
  %33 = mul i32 %32, 4, !dbg !22
  %.decomposed6 = sub i32 %.frozen5, %33, !dbg !22
  %34 = shl nsw i32 %.decomposed, 2, !dbg !23
  %35 = shl i32 %30, 4, !dbg !24
  %36 = shl i32 %26, 6, !dbg !25
  %37 = add i32 %35, %.decomposed4, !dbg !26
  %38 = add i32 %37, %34, !dbg !27
  %39 = add i32 %38, %36, !dbg !28
  %40 = sext i32 %39 to i64, !dbg !29
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !29
  %42 = and i1 %18, %24, !dbg !30
  %43 = and i1 %19, %25, !dbg !30
  %44 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %41, i1 %42) #2, !dbg !31
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !31
  %46 = extractvalue { i32, i32 } %44, 1, !dbg !31
  %47 = shl i32 %11, 5, !dbg !31
  %48 = and i32 %47, 224, !dbg !31
  %49 = or disjoint i32 %48, %15, !dbg !31
  %50 = and i32 %12, 254, !dbg !31
  %51 = lshr exact i32 %48, 2, !dbg !31
  %52 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %51, !dbg !31
  %53 = getelementptr float, ptr addrspace(3) %52, i32 %49, !dbg !31
  %54 = insertelement <1 x i32> poison, i32 %45, i64 0, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %53, <1 x i32> %54, i1 true) #2, !dbg !31
  %55 = or disjoint i32 %49, 16, !dbg !31
  %56 = lshr i32 %55, 4, !dbg !31
  %57 = getelementptr float, ptr addrspace(3) @global_smem, i32 %56, !dbg !31
  %58 = getelementptr float, ptr addrspace(3) %57, i32 %55, !dbg !31
  %59 = insertelement <1 x i32> poison, i32 %46, i64 0, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %58, <1 x i32> %59, i1 true) #2, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %60 = lshr i32 %50, 4, !dbg !31
  %61 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %60, !dbg !31
  %62 = getelementptr inbounds float, ptr addrspace(3) %61, i32 %50, !dbg !31
  %63 = load float, ptr addrspace(3) %62, align 4, !dbg !31
  %64 = or disjoint i32 %50, 1, !dbg !31
  %65 = getelementptr inbounds float, ptr addrspace(3) %61, i32 %64, !dbg !31
  %66 = load float, ptr addrspace(3) %65, align 4, !dbg !31
  %67 = shl nsw i32 %32, 2, !dbg !32
  %68 = add i32 %.decomposed2, %67, !dbg !33
  %69 = shl i32 %28, 4, !dbg !34
  %70 = add i32 %68, %69, !dbg !35
  %71 = sext i32 %70 to i64, !dbg !36
  %72 = getelementptr float, ptr addrspace(1) %1, i64 %71, !dbg !36
  %73 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %72, i1 %43) #2, !dbg !37
  %74 = extractvalue { i32, i32 } %73, 0, !dbg !37
  %75 = extractvalue { i32, i32 } %73, 1, !dbg !37
  %76 = bitcast i32 %74 to float, !dbg !37
  %77 = bitcast i32 %75 to float, !dbg !37
  %78 = getelementptr float, ptr addrspace(1) %2, i64 %71, !dbg !38
  %79 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %78, i1 %43) #2, !dbg !39
  %80 = extractvalue { i32, i32 } %79, 0, !dbg !39
  %81 = extractvalue { i32, i32 } %79, 1, !dbg !39
  %82 = bitcast i32 %80 to float, !dbg !39
  %83 = bitcast i32 %81 to float, !dbg !39
  %84 = sext i32 %.decomposed6 to i64, !dbg !40
  %85 = getelementptr float, ptr addrspace(1) %3, i64 %84, !dbg !40
  %86 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %85, i1 %19) #2, !dbg !41
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %85, i1 %19) #2, !dbg !41
  %88 = bitcast i32 %87 to float, !dbg !41
  %89 = getelementptr float, ptr addrspace(1) %4, i64 %84, !dbg !42
  %90 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %89, i1 %19) #2, !dbg !43
  %91 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %89, i1 %19) #2, !dbg !43
  %92 = bitcast i32 %91 to float, !dbg !43
  %93 = fsub float %63, %76, !dbg !44
  %94 = fsub float %66, %77, !dbg !44
  %95 = fmul float %93, %82, !dbg !45
  %96 = fmul float %94, %83, !dbg !45
  %97 = fmul float %95, %88, !dbg !46
  %98 = fmul float %96, %88, !dbg !46
  %99 = fadd float %97, %92, !dbg !47
  %100 = fadd float %98, %92, !dbg !47
  %101 = shl i32 %17, 4, !dbg !48
  %102 = add i32 %23, %101, !dbg !49
  %103 = sext i32 %102 to i64, !dbg !50
  %104 = getelementptr float, ptr addrspace(1) %5, i64 %103, !dbg !50
  %105 = bitcast float %99 to i32, !dbg !51
  %106 = bitcast float %100 to i32, !dbg !51
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %105, i32 %106, ptr addrspace(1) %104, i1 %43) #2, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ck7czzk4unz4iyfopqzs4gop4bii5sebm6uohrf6mh3v7wqsrrre.py", directory: "inductor_cache/k7")
!4 = !{ptr @triton_poi_fused_clone_15, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_15, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_15", linkageName: "triton_poi_fused_clone_15", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 29, column: 19, scope: !7)
!20 = !DILocation(line: 28, column: 19, scope: !7)
!21 = !DILocation(line: 31, column: 19, scope: !7)
!22 = !DILocation(line: 30, column: 19, scope: !7)
!23 = !DILocation(line: 34, column: 37, scope: !7)
!24 = !DILocation(line: 34, column: 45, scope: !7)
!25 = !DILocation(line: 34, column: 53, scope: !7)
!26 = !DILocation(line: 34, column: 35, scope: !7)
!27 = !DILocation(line: 34, column: 42, scope: !7)
!28 = !DILocation(line: 34, column: 50, scope: !7)
!29 = !DILocation(line: 34, column: 30, scope: !7)
!30 = !DILocation(line: 34, column: 66, scope: !7)
!31 = !DILocation(line: 34, column: 58, scope: !7)
!32 = !DILocation(line: 35, column: 37, scope: !7)
!33 = !DILocation(line: 35, column: 35, scope: !7)
!34 = !DILocation(line: 35, column: 45, scope: !7)
!35 = !DILocation(line: 35, column: 42, scope: !7)
!36 = !DILocation(line: 35, column: 30, scope: !7)
!37 = !DILocation(line: 35, column: 50, scope: !7)
!38 = !DILocation(line: 36, column: 30, scope: !7)
!39 = !DILocation(line: 36, column: 50, scope: !7)
!40 = !DILocation(line: 37, column: 30, scope: !7)
!41 = !DILocation(line: 37, column: 35, scope: !7)
!42 = !DILocation(line: 38, column: 30, scope: !7)
!43 = !DILocation(line: 38, column: 35, scope: !7)
!44 = !DILocation(line: 39, column: 18, scope: !7)
!45 = !DILocation(line: 40, column: 18, scope: !7)
!46 = !DILocation(line: 41, column: 18, scope: !7)
!47 = !DILocation(line: 42, column: 18, scope: !7)
!48 = !DILocation(line: 43, column: 33, scope: !7)
!49 = !DILocation(line: 43, column: 30, scope: !7)
!50 = !DILocation(line: 43, column: 25, scope: !7)
!51 = !DILocation(line: 43, column: 44, scope: !7)
!52 = !DILocation(line: 43, column: 4, scope: !7)
