//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_avg_pool2d_22 // -- Begin function triton_poi_fused_avg_pool2d_22
                                        // @triton_poi_fused_avg_pool2d_22
.visible .entry triton_poi_fused_avg_pool2d_22(
	.param .u64 .ptr .global .align 1 triton_poi_fused_avg_pool2d_22_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_avg_pool2d_22_param_1,
	.param .u32 triton_poi_fused_avg_pool2d_22_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<47>;
	.reg .f32 	%f<33>;
	.reg .b64 	%rd<37>;
	.loc	1 19 0                          // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:19:0

// %bb.0:
	ld.param.u64 	%rd18, [triton_poi_fused_avg_pool2d_22_param_0];
	ld.param.u64 	%rd19, [triton_poi_fused_avg_pool2d_22_param_1];
$L__tmp0:
	.loc	1 21 28                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:21:33
	shl.b32 	%r19, %r1, 7;
	.loc	1 22 36                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:22:36
	mov.u32 	%r20, %tid.x;
	and.b32  	%r21, %r20, 127;
	.loc	1 22 23                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:22:23
	or.b32  	%r22, %r19, %r21;
	.loc	1 25 19                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:25:19
	shr.s32 	%r24, %r22, 31;
	shr.u32 	%r25, %r24, 21;
	add.s32 	%r26, %r22, %r25;
	.loc	1 24 19                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:24:19
	and.b32  	%r27, %r26, -2048;
	sub.s32 	%r28, %r22, %r27;
	.loc	1 27 41                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:27:41
	shl.b32 	%r29, %r26, 4;
	and.b32  	%r30, %r29, -32768;
	.loc	1 27 35                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:27:35
	add.s32 	%r31, %r30, %r28;
	.loc	1 27 30                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:27:30
	mul.wide.s32 	%rd20, %r31, 4;
	add.s64 	%rd1, %rd18, %rd20;
	mov.pred 	%p1, -1;
	.loc	1 27 46                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:27:46
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 28 42                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:28:42
	add.s32 	%r32, %r31, 2048;
	.loc	1 28 30                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:28:30
	mul.wide.s32 	%rd21, %r32, 4;
	add.s64 	%rd2, %rd18, %rd21;
	.loc	1 28 53                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:28:53
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 29 42                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:29:42
	add.s32 	%r33, %r31, 4096;
	.loc	1 29 30                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:29:30
	mul.wide.s32 	%rd22, %r33, 4;
	add.s64 	%rd3, %rd18, %rd22;
	.loc	1 29 53                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:29:53
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	.loc	1 30 42                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:30:42
	add.s32 	%r34, %r31, 6144;
	.loc	1 30 30                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:30:30
	mul.wide.s32 	%rd23, %r34, 4;
	add.s64 	%rd4, %rd18, %rd23;
	.loc	1 30 53                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:30:53
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r5;
	.loc	1 31 42                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:31:42
	add.s32 	%r35, %r31, 8192;
	.loc	1 31 30                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:31:30
	mul.wide.s32 	%rd24, %r35, 4;
	add.s64 	%rd5, %rd18, %rd24;
	.loc	1 31 53                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:31:53
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	.loc	1 32 43                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:32:43
	add.s32 	%r36, %r31, 10240;
	.loc	1 32 30                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:32:30
	mul.wide.s32 	%rd25, %r36, 4;
	add.s64 	%rd6, %rd18, %rd25;
	.loc	1 32 54                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:32:54
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r7;
	.loc	1 33 44                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:33:44
	add.s32 	%r37, %r31, 12288;
	.loc	1 33 31                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:33:31
	mul.wide.s32 	%rd26, %r37, 4;
	add.s64 	%rd7, %rd18, %rd26;
	.loc	1 33 55                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:33:55
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	.loc	1 34 44                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:34:44
	add.s32 	%r38, %r31, 14336;
	.loc	1 34 31                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:34:31
	mul.wide.s32 	%rd27, %r38, 4;
	add.s64 	%rd8, %rd18, %rd27;
	.loc	1 34 55                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:34:55
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r9;
	.loc	1 35 44                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:35:44
	add.s32 	%r39, %r31, 16384;
	.loc	1 35 31                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:35:31
	mul.wide.s32 	%rd28, %r39, 4;
	add.s64 	%rd9, %rd18, %rd28;
	.loc	1 35 55                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:35:55
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	.loc	1 36 44                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:36:44
	add.s32 	%r40, %r31, 18432;
	.loc	1 36 31                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:36:31
	mul.wide.s32 	%rd29, %r40, 4;
	add.s64 	%rd10, %rd18, %rd29;
	.loc	1 36 55                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:36:55
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.b32 { %r11 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r11;
	.loc	1 37 44                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:37:44
	add.s32 	%r41, %r31, 20480;
	.loc	1 37 31                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:37:31
	mul.wide.s32 	%rd30, %r41, 4;
	add.s64 	%rd11, %rd18, %rd30;
	.loc	1 37 55                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:37:55
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.b32 { %r12 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r12;
	.loc	1 38 44                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:38:44
	add.s32 	%r42, %r31, 22528;
	.loc	1 38 31                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:38:31
	mul.wide.s32 	%rd31, %r42, 4;
	add.s64 	%rd12, %rd18, %rd31;
	.loc	1 38 55                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:38:55
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.b32 { %r13 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r13;
	.loc	1 39 44                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:39:44
	add.s32 	%r43, %r31, 24576;
	.loc	1 39 31                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:39:31
	mul.wide.s32 	%rd32, %r43, 4;
	add.s64 	%rd13, %rd18, %rd32;
	.loc	1 39 55                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:39:55
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.b32 { %r14 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r14;
	.loc	1 40 44                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:40:44
	add.s32 	%r44, %r31, 26624;
	.loc	1 40 31                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:40:31
	mul.wide.s32 	%rd33, %r44, 4;
	add.s64 	%rd14, %rd18, %rd33;
	.loc	1 40 55                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:40:55
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.b32 { %r15 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r15;
	.loc	1 41 44                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:41:44
	add.s32 	%r45, %r31, 28672;
	.loc	1 41 31                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:41:31
	mul.wide.s32 	%rd34, %r45, 4;
	add.s64 	%rd15, %rd18, %rd34;
	.loc	1 41 55                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:41:55
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.b32 { %r16 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r16;
	.loc	1 42 44                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:42:44
	add.s32 	%r46, %r31, 30720;
	.loc	1 42 31                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:42:31
	mul.wide.s32 	%rd35, %r46, 4;
	add.s64 	%rd16, %rd18, %rd35;
	.loc	1 42 55                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:42:55
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.b32 { %r17 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r17;
	.loc	1 43 18                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:43:18
	add.f32 	%f17, %f1, %f2;
	.loc	1 44 18                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:44:18
	add.f32 	%f18, %f17, %f3;
	.loc	1 45 18                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:45:18
	add.f32 	%f19, %f18, %f4;
	.loc	1 46 18                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:46:18
	add.f32 	%f20, %f19, %f5;
	.loc	1 47 19                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:47:19
	add.f32 	%f21, %f20, %f6;
	.loc	1 48 20                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:48:20
	add.f32 	%f22, %f21, %f7;
	.loc	1 49 20                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:49:20
	add.f32 	%f23, %f22, %f8;
	.loc	1 50 20                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:50:20
	add.f32 	%f24, %f23, %f9;
	.loc	1 51 20                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:51:20
	add.f32 	%f25, %f24, %f10;
	.loc	1 52 20                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:52:20
	add.f32 	%f26, %f25, %f11;
	.loc	1 53 20                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:53:20
	add.f32 	%f27, %f26, %f12;
	.loc	1 54 20                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:54:20
	add.f32 	%f28, %f27, %f13;
	.loc	1 55 20                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:55:20
	add.f32 	%f29, %f28, %f14;
	.loc	1 56 20                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:56:20
	add.f32 	%f30, %f29, %f15;
	.loc	1 57 20                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:57:20
	add.f32 	%f31, %f30, %f16;
	.loc	1 59 20                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:59:20
	mul.f32 	%f32, %f31, 0f3D800000;
	.loc	1 60 25                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:60:25
	mul.wide.s32 	%rd36, %r22, 4;
	add.s64 	%rd17, %rd19, %rd36;
	.loc	1 60 37                         // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:60:37
	mov.b32 	%r18, %f32;
	// begin inline asm
	@%p1 st.global.b32 [ %rd17 + 0 ], { %r18 };
	// end inline asm
	.loc	1 60 4                          // csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py:60:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 117
.b8 117
.b8 102
.b8 99
.b8 110
.b8 103
.b8 120
.b8 104
.b8 52
.b8 117
.b8 115
.b8 99
.b8 101
.b8 50
.b8 108
.b8 110
.b8 121
.b8 51
.b8 109
.b8 101
.b8 114
.b8 120
.b8 106
.b8 116
.b8 119
.b8 103
.b8 122
.b8 120
.b8 114
.b8 120
.b8 103
.b8 100
.b8 119
.b8 115
.b8 100
.b8 120
.b8 101
.b8 102
.b8 104
.b8 119
.b8 104
.b8 97
.b8 113
.b8 51
.b8 106
.b8 113
.b8 116
.b8 98
.b8 104
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 117
.b8 0
	}
	.section	.debug_macinfo	{	}
