; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__softmax_mul_sum_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 6, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 62, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 64, !dbg !14
  %12 = sdiv i32 %10, 4, !dbg !15
  %13 = sext i32 %10 to i64, !dbg !16
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !16
  %15 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %14, i1 %11) #1, !dbg !17
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17
  %17 = extractvalue { i32, i32 } %15, 1, !dbg !17
  %18 = sext i32 %12 to i64, !dbg !18
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !18
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %11) #1, !dbg !19
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %11) #1, !dbg !19
  %22 = add i32 %10, 64, !dbg !20
  %23 = sext i32 %22 to i64, !dbg !21
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !21
  %25 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %24, i1 %11) #1, !dbg !22
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !22
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !22
  %28 = getelementptr i8, ptr addrspace(1) %19, i64 64, !dbg !23
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %11) #1, !dbg !24
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %11) #1, !dbg !24
  %31 = add i32 %10, 128, !dbg !25
  %32 = sext i32 %31 to i64, !dbg !26
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !26
  %34 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %33, i1 %11) #1, !dbg !27
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !27
  %36 = extractvalue { i32, i32 } %34, 1, !dbg !27
  %37 = getelementptr i8, ptr addrspace(1) %19, i64 128, !dbg !28
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %11) #1, !dbg !29
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %11) #1, !dbg !29
  %40 = add i32 %10, 192, !dbg !30
  %41 = sext i32 %40 to i64, !dbg !31
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !31
  %43 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %42, i1 %11) #1, !dbg !32
  %44 = extractvalue { i32, i32 } %43, 0, !dbg !32
  %45 = extractvalue { i32, i32 } %43, 1, !dbg !32
  %46 = getelementptr i8, ptr addrspace(1) %19, i64 192, !dbg !33
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %11) #1, !dbg !34
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %11) #1, !dbg !34
  %49 = insertelement <2 x i32> poison, i32 %16, i64 0, !dbg !17
  %50 = insertelement <2 x i32> %49, i32 %26, i64 1, !dbg !17
  %51 = bitcast <2 x i32> %50 to <2 x float>, !dbg !17
  %52 = insertelement <2 x i32> poison, i32 %20, i64 0, !dbg !19
  %53 = insertelement <2 x i32> %52, i32 %29, i64 1, !dbg !19
  %54 = bitcast <2 x i32> %53 to <2 x float>, !dbg !19
  %55 = fmul <2 x float> %51, %54, !dbg !35
  %56 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !17
  %57 = insertelement <2 x i32> %56, i32 %27, i64 1, !dbg !17
  %58 = bitcast <2 x i32> %57 to <2 x float>, !dbg !17
  %59 = insertelement <2 x i32> poison, i32 %21, i64 0, !dbg !19
  %60 = insertelement <2 x i32> %59, i32 %30, i64 1, !dbg !19
  %61 = bitcast <2 x i32> %60 to <2 x float>, !dbg !19
  %62 = fmul <2 x float> %58, %61, !dbg !35
  %shift = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !36
  %63 = fadd <2 x float> %55, %shift, !dbg !36
  %shift1 = shufflevector <2 x float> %62, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !36
  %64 = fadd <2 x float> %62, %shift1, !dbg !36
  %65 = insertelement <2 x i32> poison, i32 %35, i64 0, !dbg !27
  %66 = insertelement <2 x i32> %65, i32 %44, i64 1, !dbg !27
  %67 = bitcast <2 x i32> %66 to <2 x float>, !dbg !27
  %68 = insertelement <2 x i32> poison, i32 %38, i64 0, !dbg !29
  %69 = insertelement <2 x i32> %68, i32 %47, i64 1, !dbg !29
  %70 = bitcast <2 x i32> %69 to <2 x float>, !dbg !29
  %71 = fmul <2 x float> %67, %70, !dbg !37
  %72 = fadd <2 x float> %63, %71, !dbg !38
  %73 = insertelement <2 x i32> poison, i32 %36, i64 0, !dbg !27
  %74 = insertelement <2 x i32> %73, i32 %45, i64 1, !dbg !27
  %75 = bitcast <2 x i32> %74 to <2 x float>, !dbg !27
  %76 = insertelement <2 x i32> poison, i32 %39, i64 0, !dbg !29
  %77 = insertelement <2 x i32> %76, i32 %48, i64 1, !dbg !29
  %78 = bitcast <2 x i32> %77 to <2 x float>, !dbg !29
  %79 = fmul <2 x float> %75, %78, !dbg !37
  %80 = fadd <2 x float> %64, %79, !dbg !38
  %shift2 = shufflevector <2 x float> %71, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !39
  %81 = fadd <2 x float> %72, %shift2, !dbg !39
  %shift3 = shufflevector <2 x float> %79, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !39
  %82 = fadd <2 x float> %80, %shift3, !dbg !39
  %83 = getelementptr float, ptr addrspace(1) %2, i64 %13, !dbg !40
  %bc = bitcast <2 x float> %81 to <2 x i32>, !dbg !41
  %84 = extractelement <2 x i32> %bc, i64 0, !dbg !41
  %bc4 = bitcast <2 x float> %82 to <2 x i32>, !dbg !41
  %85 = extractelement <2 x i32> %bc4, i64 0, !dbg !41
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %84, i32 %85, ptr addrspace(1) %83, i1 %11) #1, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdyz4k2ccse6phmsavoi4ojiwjrclt4uc6vz3jaaveuvv6a3ofql.py", directory: "inductor_cache/dy")
!4 = !{ptr @triton_poi_fused__softmax_mul_sum_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax_mul_sum_3, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax_mul_sum_3", linkageName: "triton_poi_fused__softmax_mul_sum_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 40, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 40, scope: !7)
!25 = !DILocation(line: 30, column: 36, scope: !7)
!26 = !DILocation(line: 30, column: 30, scope: !7)
!27 = !DILocation(line: 30, column: 41, scope: !7)
!28 = !DILocation(line: 31, column: 30, scope: !7)
!29 = !DILocation(line: 31, column: 40, scope: !7)
!30 = !DILocation(line: 32, column: 37, scope: !7)
!31 = !DILocation(line: 32, column: 31, scope: !7)
!32 = !DILocation(line: 32, column: 42, scope: !7)
!33 = !DILocation(line: 33, column: 31, scope: !7)
!34 = !DILocation(line: 33, column: 41, scope: !7)
!35 = !DILocation(line: 34, column: 18, scope: !7)
!36 = !DILocation(line: 36, column: 18, scope: !7)
!37 = !DILocation(line: 37, column: 18, scope: !7)
!38 = !DILocation(line: 38, column: 19, scope: !7)
!39 = !DILocation(line: 40, column: 20, scope: !7)
!40 = !DILocation(line: 41, column: 25, scope: !7)
!41 = !DILocation(line: 41, column: 37, scope: !7)
!42 = !DILocation(line: 41, column: 4, scope: !7)
