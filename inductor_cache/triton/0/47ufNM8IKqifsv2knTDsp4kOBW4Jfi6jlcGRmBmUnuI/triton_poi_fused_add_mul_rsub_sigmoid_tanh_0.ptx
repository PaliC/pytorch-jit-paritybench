//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mul_rsub_sigmoid_tanh_0 // -- Begin function triton_poi_fused_add_mul_rsub_sigmoid_tanh_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_mul_rsub_sigmoid_tanh_0
.visible .entry triton_poi_fused_add_mul_rsub_sigmoid_tanh_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_8,
	.param .u32 triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<15>;
	.reg .b32 	%r<62>;
	.reg .f32 	%f<95>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:21:28
	// begin inline asm
	mov.u32 %r5, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:21:33
	shl.b32 	%r28, %r5, 8;
	ld.param.u64 	%rd14, [triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_2];
	ld.param.u64 	%rd15, [triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_3];
	.loc	1 22 36                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:22:36
	mov.u32 	%r29, %tid.x;
	shl.b32 	%r30, %r29, 1;
	ld.param.u64 	%rd16, [triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_4];
	and.b32  	%r31, %r30, 254;
	ld.param.u64 	%rd17, [triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_5];
	.loc	1 22 23                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:22:23
	or.b32  	%r32, %r28, %r31;
	ld.param.u64 	%rd18, [triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_6];
	.loc	1 23 21                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:23:21
	setp.lt.s32 	%p1, %r32, 256;
	ld.param.u64 	%rd19, [triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_7];
	.loc	1 25 19                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:25:19
	bfe.s32 	%r33, %r5, 23, 1;
	shr.u32 	%r34, %r33, 30;
	add.s32 	%r35, %r32, %r34;
	and.b32  	%r36, %r35, -4;
	sub.s32 	%r37, %r32, %r36;
	.loc	1 26 19                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:26:19
	shr.u32 	%r38, %r33, 28;
	add.s32 	%r39, %r32, %r38;
	and.b32  	%r40, %r39, -16;
	sub.s32 	%r41, %r32, %r40;
	.loc	1 27 19                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:27:19
	shr.u32 	%r42, %r33, 26;
	add.s32 	%r43, %r32, %r42;
	shr.s32 	%r44, %r43, 6;
	.loc	1 28 34                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:28:34
	mul.wide.s32 	%rd20, %r32, 4;
	add.s64 	%rd23, %rd12, %rd20;
	.loc	1 28 39                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:28:39
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd23 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r7;
	.loc	1 29 30                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:29:30
	mul.wide.s32 	%rd21, %r37, 4;
	add.s64 	%rd5, %rd13, %rd21;
	.loc	1 29 35                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:29:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r8, %r9 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r9;
	.loc	1 30 30                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:30:30
	add.s64 	%rd6, %rd14, %rd20;
	.loc	1 30 35                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:30:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.v2.b32 { %r10, %r11 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r11;
	.loc	1 31 30                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:31:30
	add.s64 	%rd7, %rd15, %rd21;
	.loc	1 31 35                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:31:35
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r13;
	.loc	1 32 38                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:32:38
	shl.b32 	%r45, %r44, 4;
	.loc	1 32 35                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:32:35
	add.s32 	%r46, %r45, %r41;
	.loc	1 32 30                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:32:30
	mul.wide.s32 	%rd22, %r46, 4;
	add.s64 	%rd8, %rd16, %rd22;
	.loc	1 32 43                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:32:43
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r14, %r15 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 33 30                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:33:30
	add.s64 	%rd9, %rd17, %rd20;
	.loc	1 33 35                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:33:35
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v2.b32 { %r16, %r17 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r16;
	mov.b32 	%f22, %r17;
	.loc	1 34 31                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:34:31
	add.s64 	%rd10, %rd18, %rd20;
	.loc	1 34 36                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:34:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p1 ld.global.v2.b32 { %r18, %r19 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r18;
	mov.b32 	%f24, %r19;
	.loc	1 35 31                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:35:31
	add.s64 	%rd11, %rd19, %rd20;
	.loc	1 35 36                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:35:36
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.v2.b32 { %r20, %r21 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 36 18                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:36:18
	add.f32 	%f25, %f17, %f18;
	.loc	1 28 39                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:28:39
	mov.b32 	%f26, %r10;
	mov.b32 	%f27, %r6;
	.loc	1 29 35                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:29:35
	mov.b32 	%f28, %r12;
	mov.b32 	%f29, %r8;
	.loc	1 36 18                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:36:18
	add.f32 	%f30, %f27, %f29;
	add.f32 	%f31, %f26, %f28;
	.loc	1 37 18                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:37:18
	add.f32 	%f32, %f19, %f20;
	.loc	1 38 18                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:38:18
	add.f32 	%f33, %f30, %f31;
	add.f32 	%f34, %f25, %f32;
	mov.f32 	%f35, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f36, %f35, %f33;
	sub.f32 	%f37, %f35, %f34;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f14, %f36, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f37, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f38, %f13, 0f3F800000;
	add.f32 	%f39, %f15, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r24, %f38;
	mov.b32 	%r23, 1065353216;
	// begin inline asm
	div.full.f32 %r60, %r23, %r24;
	// end inline asm
	mov.b32 	%f1, %r60;
	mov.b32 	%r27, %f39;
	// begin inline asm
	div.full.f32 %r61, %r23, %r27;
	// end inline asm
	mov.b32 	%f2, %r61;
$L__tmp2:
	.loc	1 41 19                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:41:19
	fma.rn.f32 	%f3, %f1, %f23, %f21;
	fma.rn.f32 	%f4, %f2, %f24, %f22;
	.loc	1 42 27                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:42:27
	abs.ftz.f32 	%f5, %f3;
	setp.ltu.f32 	%p9, %f5, 0f3F19999A;
	mov.f32 	%f87, 0f3F800000;
	mov.f32 	%f88, 0fC0000000;
	mov.f32 	%f89, 0fBD563CAE;
	mov.f32 	%f90, 0f3C80F082;
	mov.f32 	%f91, 0f3E085941;
	mov.f32 	%f92, 0fBEAAA9ED;
	@%p9 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f48, %f3, %f3;
	fma.rn.ftz.f32 	%f51, %f90, %f48, %f89;
	fma.rn.ftz.f32 	%f53, %f51, %f48, %f91;
	fma.rn.ftz.f32 	%f55, %f53, %f48, %f92;
	fma.rn.ftz.f32 	%f57, %f55, %f48, %f35;
	fma.rn.ftz.f32 	%f93, %f57, %f3, %f3;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	mul.f32 	%f42, %f5, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f43, %f42;
	add.f32 	%f41, %f43, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f40,%f41;
	// end inline asm
	fma.rn.ftz.f32 	%f46, %f40, %f88, %f87;
	setp.ge.f32 	%p10, %f5, 0f41102CB4;
	selp.f32 	%f47, 0f3F800000, %f46, %p10;
	mov.b32 	%r47, %f47;
	mov.b32 	%r48, %f3;
	and.b32  	%r49, %r48, -2147483648;
	or.b32  	%r50, %r49, %r47;
	mov.b32 	%f93, %r50;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 0 27                          // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:0:27
	ld.param.u64 	%rd3, [triton_poi_fused_add_mul_rsub_sigmoid_tanh_0_param_8];
	cvt.s64.s32 	%rd1, %r32;
	.loc	1 42 27                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:42:27
	abs.ftz.f32 	%f9, %f4;
	setp.ltu.f32 	%p11, %f9, 0f3F19999A;
	@%p11 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;
$L__BB0_5:                              // %__internal_fmad.exit3.i8
	mul.f32 	%f66, %f4, %f4;
	fma.rn.ftz.f32 	%f69, %f90, %f66, %f89;
	fma.rn.ftz.f32 	%f71, %f69, %f66, %f91;
	fma.rn.ftz.f32 	%f73, %f71, %f66, %f92;
	fma.rn.ftz.f32 	%f75, %f73, %f66, %f35;
	fma.rn.ftz.f32 	%f94, %f75, %f4, %f4;
	bra.uni 	$L__BB0_6;
$L__BB0_4:                              // %__internal_fmad.exit1.i3
	mul.f32 	%f60, %f9, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f61, %f60;
	add.f32 	%f59, %f61, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f58,%f59;
	// end inline asm
	fma.rn.ftz.f32 	%f64, %f58, %f88, %f87;
	setp.ge.f32 	%p12, %f9, 0f41102CB4;
	selp.f32 	%f65, 0f3F800000, %f64, %p12;
	mov.b32 	%r51, %f65;
	mov.b32 	%r52, %f4;
	and.b32  	%r53, %r52, -2147483648;
	or.b32  	%r54, %r53, %r51;
	mov.b32 	%f94, %r54;
$L__BB0_6:                              // %__nv_tanhf.exit19
	.loc	1 0 27                          // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:0:27
	cvt.u32.u64 	%r59, %rd1;
	.loc	1 23 21                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:23:21
	setp.lt.s32 	%p13, %r59, 256;
	.loc	1 35 36                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:35:36
	mov.b32 	%f76, %r21;
	mov.b32 	%f77, %r20;
	.loc	1 32 43                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:32:43
	mov.b32 	%f78, %r15;
	mov.b32 	%f79, %r14;
	.loc	1 43 19                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:43:19
	mul.f32 	%f80, %f93, %f79;
	mul.f32 	%f81, %f94, %f78;
	.loc	1 45 20                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:45:20
	sub.f32 	%f83, %f87, %f79;
	sub.f32 	%f84, %f87, %f78;
	.loc	1 47 20                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:47:20
	fma.rn.f32 	%f85, %f83, %f77, %f80;
	fma.rn.f32 	%f86, %f84, %f76, %f81;
	.loc	1 48 39                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:48:39
	// begin inline asm
	@%p13 st.global.v2.b32 [ %rd23 + 0 ], { %r60, %r61 };
	// end inline asm
	.loc	1 49 25                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:49:25
	shl.b64 	%rd25, %rd1, 2;
	add.s64 	%rd24, %rd3, %rd25;
	.loc	1 49 37                         // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:49:37
	mov.b32 	%r57, %f85;
	mov.b32 	%r58, %f86;
	// begin inline asm
	@%p13 st.global.v2.b32 [ %rd24 + 0 ], { %r57, %r58 };
	// end inline asm
	.loc	1 49 4                          // ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py:49:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/e3/ce3rtwswxo7om7n57b3iqtamqlbvnmdeimwd532mpfixork5f4g2.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 189                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 51
.b8 114
.b8 116
.b8 119
.b8 115
.b8 119
.b8 120
.b8 111
.b8 55
.b8 111
.b8 109
.b8 55
.b8 110
.b8 53
.b8 55
.b8 98
.b8 51
.b8 105
.b8 113
.b8 116
.b8 97
.b8 109
.b8 113
.b8 108
.b8 98
.b8 118
.b8 110
.b8 109
.b8 100
.b8 101
.b8 105
.b8 109
.b8 119
.b8 100
.b8 53
.b8 51
.b8 50
.b8 109
.b8 112
.b8 102
.b8 105
.b8 120
.b8 111
.b8 114
.b8 107
.b8 53
.b8 102
.b8 52
.b8 103
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 116
.b8 97
.b8 110
.b8 104
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x92:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
