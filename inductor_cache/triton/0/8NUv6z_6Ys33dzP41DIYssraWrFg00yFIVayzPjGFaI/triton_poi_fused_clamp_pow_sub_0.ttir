#loc = loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":19:0)
module {
  tt.func public @triton_poi_fused_clamp_pow_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<3.81469727E-6> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.45519152E-11> : tensor<256xf32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc6)
    %6 = tt.addptr %5, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc6)
    %7 = tt.load %6 : tensor<256x!tt.ptr<f32>> loc(#loc7)
    %8 = arith.cmpf ogt, %7, %cst : tensor<256xf32> loc(#loc18)
    %9 = arith.cmpf une, %7, %7 : tensor<256xf32> loc(#loc19)
    %10 = arith.ori %8, %9 : tensor<256xi1> loc(#loc20)
    %11 = arith.select %10, %7, %cst : tensor<256xi1>, tensor<256xf32> loc(#loc21)
    %12 = arith.mulf %11, %11 : tensor<256xf32> loc(#loc13)
    %13 = arith.subf %12, %cst_0 : tensor<256xf32> loc(#loc14)
    %14 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc15)
    %15 = tt.addptr %14, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc15)
    tt.store %15, %13 : tensor<256x!tt.ptr<f32>> loc(#loc16)
    tt.return loc(#loc17)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":21:28)
#loc3 = loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":21:33)
#loc4 = loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":22:36)
#loc5 = loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":22:23)
#loc6 = loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":25:30)
#loc7 = loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":25:35)
#loc8 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc9 = loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":27:40)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc13 = loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":28:18)
#loc14 = loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":30:18)
#loc15 = loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":31:25)
#loc16 = loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":31:36)
#loc17 = loc("inductor_cache/zd/czdp5cqrtrlbqcncpl4ph4m7ttikw3dxawivf7og25g3u5ryfksj.py":31:4)
#loc18 = loc(callsite(#loc8 at #loc9))
#loc19 = loc(callsite(#loc10 at #loc9))
#loc20 = loc(callsite(#loc11 at #loc9))
#loc21 = loc(callsite(#loc12 at #loc9))
