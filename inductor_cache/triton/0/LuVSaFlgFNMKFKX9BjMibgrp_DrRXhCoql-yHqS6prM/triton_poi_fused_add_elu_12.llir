; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_elu_12(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = sext i32 %10 to i64, !dbg !14
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !14
  %13 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %12, i1 true) #3, !dbg !15
  %14 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !16
  %15 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %14, i1 true) #3, !dbg !17
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17
  %17 = extractvalue { i32, i32 } %15, 1, !dbg !17
  %18 = bitcast i32 %16 to float, !dbg !17
  %19 = bitcast i32 %17 to float, !dbg !17
  %20 = fmul float %18, 0x3FF7154760000000, !dbg !18
  %21 = tail call float @llvm.nvvm.round.f(float %20) #3, !dbg !18
  %22 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not.i = icmp eq i32 %22, 0, !dbg !18
  %23 = tail call float @llvm.nvvm.fabs.ftz.f(float %18) #3, !dbg !18
  %24 = tail call float @llvm.nvvm.fabs.f(float %18) #3, !dbg !18
  %.03.i = select i1 %.not.i, float %24, float %23, !dbg !18
  %25 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !18
  %t.0.i = select i1 %25, float 0.000000e+00, float %21, !dbg !18
  %26 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %28 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !18
  %j.0.i = select i1 %28, float 1.270000e+02, float %t.0.i, !dbg !18
  %29 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %31 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %32 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not8.i = icmp eq i32 %34, 0, !dbg !18
  br i1 %.not8.i, label %37, label %35, !dbg !18

35:                                               ; preds = %4
  %36 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !18
  br label %__nv_expm1f.exit, !dbg !18

37:                                               ; preds = %4
  %38 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !18
  br label %__nv_expm1f.exit, !dbg !18

__nv_expm1f.exit:                                 ; preds = %35, %37
  %.0.i = phi float [ %36, %35 ], [ %38, %37 ], !dbg !18
  %39 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %40 = fmul float %19, 0x3FF7154760000000, !dbg !18
  %41 = tail call float @llvm.nvvm.round.f(float %40) #3, !dbg !18
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not.i1 = icmp eq i32 %42, 0, !dbg !18
  %43 = tail call float @llvm.nvvm.fabs.ftz.f(float %19) #3, !dbg !18
  %44 = tail call float @llvm.nvvm.fabs.f(float %19) #3, !dbg !18
  %.03.i2 = select i1 %.not.i1, float %44, float %43, !dbg !18
  %45 = fcmp olt float %.03.i2, 0x3FDA3D70A0000000, !dbg !18
  %t.0.i3 = select i1 %45, float 0.000000e+00, float %41, !dbg !18
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %48 = fcmp oeq float %t.0.i3, 1.280000e+02, !dbg !18
  %j.0.i4 = select i1 %48, float 1.270000e+02, float %t.0.i3, !dbg !18
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not8.i5 = icmp eq i32 %54, 0, !dbg !18
  br i1 %.not8.i5, label %57, label %55, !dbg !18

55:                                               ; preds = %__nv_expm1f.exit
  %56 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i4) #3, !dbg !18
  br label %__nv_expm1f.exit27, !dbg !18

57:                                               ; preds = %__nv_expm1f.exit
  %58 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i4) #3, !dbg !18
  br label %__nv_expm1f.exit27, !dbg !18

__nv_expm1f.exit27:                               ; preds = %55, %57
  %.0.i6 = phi float [ %56, %55 ], [ %58, %57 ], !dbg !18
  %59 = fcmp oeq float %18, 0.000000e+00, !dbg !18
  %60 = fadd float %18, %18, !dbg !18
  %61 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !18
  %62 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !18
  %.not9.i = icmp eq i32 %39, 0, !dbg !18
  %.not7.i = icmp eq i32 %33, 0, !dbg !18
  %.not6.i = icmp eq i32 %32, 0, !dbg !18
  %.not5.i = icmp eq i32 %31, 0, !dbg !18
  %.not4.i = icmp eq i32 %30, 0, !dbg !18
  %.not3.i = icmp eq i32 %29, 0, !dbg !18
  %.not2.i = icmp eq i32 %27, 0, !dbg !18
  %63 = fneg float %t.0.i, !dbg !18
  %.not1.i = icmp eq i32 %26, 0, !dbg !18
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %63, float 0x3FE62E4000000000, float %18) #3, !dbg !18
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %63, float 0x3FE62E4000000000, float %18) #3, !dbg !18
  %.04.i = select i1 %.not1.i, float %64, float %65, !dbg !18
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %63, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !18
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %63, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !18
  %.05.i = select i1 %.not2.i, float %66, float %67, !dbg !18
  %68 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !18
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !18
  %.07.i = select i1 %.not3.i, float %68, float %69, !dbg !18
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !18
  %71 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !18
  %.08.i = select i1 %.not4.i, float %70, float %71, !dbg !18
  %72 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !18
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !18
  %.09.i = select i1 %.not5.i, float %72, float %73, !dbg !18
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !18
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !18
  %.06.i = select i1 %.not6.i, float %74, float %75, !dbg !18
  %76 = fmul float %.05.i, %.06.i, !dbg !18
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %76, float %.05.i, float %.05.i) #3, !dbg !18
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %76, float %.05.i, float %.05.i) #3, !dbg !18
  %.01.i = select i1 %.not7.i, float %77, float %78, !dbg !18
  %79 = fadd float %.0.i, -1.000000e+00, !dbg !18
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i, float %79) #3, !dbg !18
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i, float %79) #3, !dbg !18
  %.02.i = select i1 %.not9.i, float %80, float %81, !dbg !18
  %82 = fadd float %.02.i, %.02.i, !dbg !18
  %u.0.i = select i1 %28, float %82, float %.02.i, !dbg !18
  %u.1.i = select i1 %62, float 0x7FF0000000000000, float %u.0.i, !dbg !18
  %u.2.i = select i1 %61, float -1.000000e+00, float %u.1.i, !dbg !18
  %u.3.i = select i1 %59, float %60, float %u.2.i, !dbg !18
  %83 = fcmp ogt float %19, 0.000000e+00, !dbg !19
  %84 = fcmp ogt float %18, 0.000000e+00, !dbg !19
  %85 = extractvalue { i32, i32 } %13, 1, !dbg !15
  %86 = bitcast i32 %85 to float, !dbg !15
  %87 = extractvalue { i32, i32 } %13, 0, !dbg !15
  %88 = bitcast i32 %87 to float, !dbg !15
  %.not7.i7 = icmp eq i32 %53, 0, !dbg !18
  %.not6.i8 = icmp eq i32 %52, 0, !dbg !18
  %.not5.i9 = icmp eq i32 %51, 0, !dbg !18
  %.not4.i10 = icmp eq i32 %50, 0, !dbg !18
  %.not3.i11 = icmp eq i32 %49, 0, !dbg !18
  %.not2.i12 = icmp eq i32 %47, 0, !dbg !18
  %89 = fneg float %t.0.i3, !dbg !18
  %.not1.i13 = icmp eq i32 %46, 0, !dbg !18
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %89, float 0x3FE62E4000000000, float %19) #3, !dbg !18
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %89, float 0x3FE62E4000000000, float %19) #3, !dbg !18
  %.04.i14 = select i1 %.not1.i13, float %90, float %91, !dbg !18
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %89, float 0x3EB7F7D1C0000000, float %.04.i14) #3, !dbg !18
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %89, float 0x3EB7F7D1C0000000, float %.04.i14) #3, !dbg !18
  %.05.i15 = select i1 %.not2.i12, float %92, float %93, !dbg !18
  %94 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i15, float 0x3F812ACC60000000) #3, !dbg !18
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i15, float 0x3F812ACC60000000) #3, !dbg !18
  %.07.i16 = select i1 %.not3.i11, float %94, float %95, !dbg !18
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i16, float %.05.i15, float 0x3FA5557C60000000) #3, !dbg !18
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i16, float %.05.i15, float 0x3FA5557C60000000) #3, !dbg !18
  %.08.i17 = select i1 %.not4.i10, float %96, float %97, !dbg !18
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i17, float %.05.i15, float 0x3FC5553EC0000000) #3, !dbg !18
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i17, float %.05.i15, float 0x3FC5553EC0000000) #3, !dbg !18
  %.09.i18 = select i1 %.not5.i9, float %98, float %99, !dbg !18
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i18, float %.05.i15, float 0x3FDFFFFFC0000000) #3, !dbg !18
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i18, float %.05.i15, float 0x3FDFFFFFC0000000) #3, !dbg !18
  %.06.i19 = select i1 %.not6.i8, float %100, float %101, !dbg !18
  %102 = fmul float %.05.i15, %.06.i19, !dbg !18
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %102, float %.05.i15, float %.05.i15) #3, !dbg !18
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %102, float %.05.i15, float %.05.i15) #3, !dbg !18
  %.01.i20 = select i1 %.not7.i7, float %103, float %104, !dbg !18
  %105 = fadd float %.0.i6, -1.000000e+00, !dbg !18
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not9.i21 = icmp eq i32 %106, 0, !dbg !18
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i20, float %.0.i6, float %105) #3, !dbg !18
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i20, float %.0.i6, float %105) #3, !dbg !18
  %.02.i22 = select i1 %.not9.i21, float %108, float %107, !dbg !18
  %109 = fadd float %.02.i22, %.02.i22, !dbg !18
  %u.0.i23 = select i1 %48, float %109, float %.02.i22, !dbg !18
  %110 = fcmp ogt float %j.0.i4, 1.280000e+02, !dbg !18
  %u.1.i24 = select i1 %110, float 0x7FF0000000000000, float %u.0.i23, !dbg !18
  %111 = fcmp olt float %j.0.i4, -2.500000e+01, !dbg !18
  %u.2.i25 = select i1 %111, float -1.000000e+00, float %u.1.i24, !dbg !18
  %112 = fcmp oeq float %19, 0.000000e+00, !dbg !18
  %113 = fadd float %19, %19, !dbg !18
  %u.3.i26 = select i1 %112, float %113, float %u.2.i25, !dbg !18
  %114 = select i1 %84, float %18, float %u.3.i, !dbg !20
  %115 = select i1 %83, float %19, float %u.3.i26, !dbg !20
  %116 = fadd float %114, %88, !dbg !21
  %117 = fadd float %115, %86, !dbg !21
  %118 = getelementptr float, ptr addrspace(1) %2, i64 %11, !dbg !22
  %119 = bitcast float %116 to i32, !dbg !23
  %120 = bitcast float %117 to i32, !dbg !23
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %119, i32 %120, ptr addrspace(1) %118, i1 true) #3, !dbg !23
  ret void, !dbg !24
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cx5j5yppb3hidw55fi3csbcpqptwl2tzw4hffi3kxexloifyk2vm.py", directory: "inductor_cache/x5")
!4 = !{ptr @triton_poi_fused_add_elu_12, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_elu_12, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_elu_12", linkageName: "triton_poi_fused_add_elu_12", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 30, scope: !7)
!15 = !DILocation(line: 25, column: 35, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 31, column: 27, scope: !7)
!19 = !DILocation(line: 28, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 32, scope: !7)
!21 = !DILocation(line: 34, column: 18, scope: !7)
!22 = !DILocation(line: 35, column: 25, scope: !7)
!23 = !DILocation(line: 35, column: 36, scope: !7)
!24 = !DILocation(line: 35, column: 4, scope: !7)
