//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11 // -- Begin function triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_5[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_5[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 55, 99, 47, 99, 55, 99, 101, 121, 100, 54, 102, 108, 52, 119, 50, 110, 108, 102, 116, 99, 121, 111, 105, 113, 101, 50, 113, 110, 107, 105, 105, 121, 100, 99, 51, 109, 119, 115, 109, 104, 102, 113, 119, 100, 53, 55, 111, 107, 114, 98, 107, 113, 117, 50, 101, 46, 112, 121};
.global .align 1 .b8 assertMessage_5[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 54, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_4[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_4[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 55, 99, 47, 99, 55, 99, 101, 121, 100, 54, 102, 108, 52, 119, 50, 110, 108, 102, 116, 99, 121, 111, 105, 113, 101, 50, 113, 110, 107, 105, 105, 121, 100, 99, 51, 109, 119, 115, 109, 104, 102, 113, 119, 100, 53, 55, 111, 107, 114, 98, 107, 113, 117, 50, 101, 46, 112, 121};
.global .align 1 .b8 assertMessage_4[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 51, 56, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_2[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_2[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 55, 99, 47, 99, 55, 99, 101, 121, 100, 54, 102, 108, 52, 119, 50, 110, 108, 102, 116, 99, 121, 111, 105, 113, 101, 50, 113, 110, 107, 105, 105, 121, 100, 99, 51, 109, 119, 115, 109, 104, 102, 113, 119, 100, 53, 55, 111, 107, 114, 98, 107, 113, 117, 50, 101, 46, 112, 121};
.global .align 1 .b8 assertMessage_2[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 49, 55, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_1[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_1[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 55, 99, 47, 99, 55, 99, 101, 121, 100, 54, 102, 108, 52, 119, 50, 110, 108, 102, 116, 99, 121, 111, 105, 113, 101, 50, 113, 110, 107, 105, 105, 121, 100, 99, 51, 109, 119, 115, 109, 104, 102, 113, 119, 100, 53, 55, 111, 107, 114, 98, 107, 113, 117, 50, 101, 46, 112, 121};
.global .align 1 .b8 assertMessage_1[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 57, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 55, 99, 47, 99, 55, 99, 101, 121, 100, 54, 102, 108, 52, 119, 50, 110, 108, 102, 116, 99, 121, 111, 105, 113, 101, 50, 113, 110, 107, 105, 105, 121, 100, 99, 51, 109, 119, 115, 109, 104, 102, 113, 119, 100, 53, 55, 111, 107, 114, 98, 107, 113, 117, 50, 101, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 52};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11
.visible .entry triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_8,
	.param .u32 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<49>;
	.reg .b32 	%r<95>;
	.reg .f32 	%f<67>;
	.reg .b64 	%rd<103>;
	.loc	1 19 0                          // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:19:0

// %bb.0:
	ld.param.u64 	%rd21, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_0];
$L__tmp0:
	.loc	1 25 33                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:25:33
	mov.u32 	%r1, %tid.x;
	and.b32  	%r2, %r1, 255;
	ld.param.u64 	%rd22, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_2];
	.loc	1 31 23                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:31:23
	bfe.u32 	%r22, %r1, 4, 4;
	ld.param.u64 	%rd23, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_5];
	ld.param.u64 	%rd24, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_6];
	.loc	1 36 34                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:36:34
	mul.wide.u32 	%rd25, %r22, 8;
	add.s64 	%rd16, %rd22, %rd25;
	ld.param.u64 	%rd26, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_7];
	mov.pred 	%p10, -1;
	.loc	1 36 39                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:36:39
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p10 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd16 + 0 ];
	@!%p10 mov.u64 %rd15, 0x0;
	// end inline asm
	.loc	1 37 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:37:35
	mul.wide.u32 	%rd27, %r2, 4;
	add.s64 	%rd17, %rd23, %rd27;
	mov.b32 	%r21, 0;
	.loc	1 37 40                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:37:40
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p10 ld.global.L1::evict_first.b32 { %r14 }, [ %rd17 + 0 ];
	@!%p10 mov.u32 %r14, %r21;
	// end inline asm
	.loc	1 38 39                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:38:39
	add.s64 	%rd18, %rd21, %rd27;
	.loc	1 38 44                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:38:44
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p10 ld.global.L1::evict_first.b32 { %r16 }, [ %rd18 + 0 ];
	@!%p10 mov.u32 %r16, %r21;
	// end inline asm
	.loc	1 39 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:39:35
	add.s64 	%rd19, %rd24, %rd27;
	.loc	1 39 40                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:39:40
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p10 ld.global.L1::evict_first.b32 { %r18 }, [ %rd19 + 0 ];
	@!%p10 mov.u32 %r18, %r21;
	// end inline asm
	.loc	1 41 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:41:35
	add.s64 	%rd20, %rd26, %rd27;
	.loc	1 41 40                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:41:40
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p10 ld.global.L1::evict_first.b32 { %r20 }, [ %rd20 + 0 ];
	@!%p10 mov.u32 %r20, %r21;
	// end inline asm
	.loc	1 45 36                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:45:36
	shr.u64 	%rd28, %rd15, 61;
	and.b64  	%rd29, %rd28, 4;
	add.s64 	%rd1, %rd29, %rd15;
	.loc	1 46 41                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:46:41
	setp.lt.u64 	%p11, %rd1, 4;
	.loc	1 46 64                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:46:64
	@%p11 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 64                          // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:0:64
	ld.param.u64 	%rd12, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_3];
	bfe.u32 	%r3, %r1, 6, 2;
	.loc	1 32 30                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:32:30
	bfe.u32 	%r23, %r1, 2, 2;
	.loc	1 46 64                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:46:64
	bar.sync 	0;
	.loc	1 47 41                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:47:41
	shl.b64 	%rd32, %rd1, 2;
	.loc	1 47 39                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:47:39
	cvt.u64.u32 	%rd33, %r23;
	.loc	1 47 51                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:47:51
	shl.b32 	%r24, %r3, 4;
	.loc	1 47 48                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:47:48
	cvt.u64.u32 	%rd34, %r24;
	.loc	1 47 39                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:47:39
	or.b64  	%rd2, %rd32, %rd34;
	.loc	1 47 48                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:47:48
	or.b64  	%rd35, %rd2, %rd33;
	.loc	1 47 34                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:47:34
	shl.b64 	%rd36, %rd35, 3;
	add.s64 	%rd31, %rd12, %rd36;
	.loc	1 47 56                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:47:56
	// begin inline asm
	mov.u64 %rd30, 0x0;
	@%p10 ld.global.L1::evict_last.b64 { %rd30 }, [ %rd31 + 0 ];
	@!%p10 mov.u64 %rd30, 0x0;
	// end inline asm
	.loc	1 50 36                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:50:36
	shr.u64 	%rd37, %rd30, 61;
	and.b64  	%rd38, %rd37, 4;
	add.s64 	%rd4, %rd38, %rd30;
	.loc	1 51 41                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:51:41
	setp.lt.u64 	%p14, %rd4, 4;
	.loc	1 51 64                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:51:64
	@%p14 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:
	.loc	1 0 64                          // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:0:64
	ld.param.u64 	%rd13, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_4];
	and.b32  	%r4, %r1, 3;
	.loc	1 51 64                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:51:64
	bar.sync 	0;
	.loc	1 52 44                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:52:44
	shl.b32 	%r29, %r3, 2;
	.loc	1 52 42                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:52:42
	cvt.u64.u32 	%rd5, %r29;
	or.b64  	%rd43, %rd1, %rd5;
	.loc	1 52 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:52:35
	shl.b64 	%rd44, %rd43, 2;
	add.s64 	%rd39, %rd13, %rd44;
	.loc	1 52 49                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:52:49
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r25 }, [ %rd39 + 0 ];
	@!%p10 mov.u32 %r25, %r21;
	// end inline asm
	.loc	1 53 42                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:53:42
	or.b64  	%rd45, %rd4, %rd5;
	.loc	1 53 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:53:35
	shl.b64 	%rd46, %rd45, 2;
	add.s64 	%rd40, %rd13, %rd46;
	.loc	1 53 49                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:53:49
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r27 }, [ %rd40 + 0 ];
	@!%p10 mov.u32 %r27, %r21;
	// end inline asm
	.loc	1 55 40                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:55:40
	cvt.u64.u32 	%rd47, %r4;
	.loc	1 55 49                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:55:49
	or.b64  	%rd48, %rd2, %rd47;
	.loc	1 55 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:55:35
	shl.b64 	%rd49, %rd48, 3;
	add.s64 	%rd42, %rd12, %rd49;
	.loc	1 55 57                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:55:57
	// begin inline asm
	mov.u64 %rd41, 0x0;
	@%p10 ld.global.L1::evict_last.b64 { %rd41 }, [ %rd42 + 0 ];
	@!%p10 mov.u64 %rd41, 0x0;
	// end inline asm
	.loc	1 58 39                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:58:39
	shr.u64 	%rd50, %rd41, 61;
	and.b64  	%rd51, %rd50, 4;
	add.s64 	%rd8, %rd51, %rd41;
	.loc	1 59 42                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:59:42
	setp.lt.u64 	%p21, %rd8, 4;
	.loc	1 59 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:59:66
	@%p21 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_5;
$L__BB0_6:
	bar.sync 	0;
	.loc	1 60 43                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:60:43
	or.b64  	%rd55, %rd8, %rd5;
	.loc	1 60 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:60:35
	shl.b64 	%rd56, %rd55, 2;
	add.s64 	%rd52, %rd13, %rd56;
	.loc	1 60 50                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:60:50
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r30 }, [ %rd52 + 0 ];
	@!%p10 mov.u32 %r30, %r21;
	// end inline asm
	.loc	1 71 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:71:66
	bar.sync 	0;
	.loc	1 72 81                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:72:81
	// begin inline asm
	mov.u64 %rd53, 0x0;
	@%p10 ld.global.L1::evict_last.b64 { %rd53 }, [ %rd31 + 0 ];
	@!%p10 mov.u64 %rd53, 0x0;
	// end inline asm
	.loc	1 75 39                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:75:39
	shr.u64 	%rd57, %rd53, 61;
	and.b64  	%rd58, %rd57, 4;
	add.s64 	%rd9, %rd58, %rd53;
	.loc	1 76 42                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:76:42
	setp.lt.u64 	%p26, %rd9, 4;
	.loc	1 76 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:76:66
	@%p26 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:
	bar.sync 	0;
	.loc	1 77 58                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:77:58
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r32 }, [ %rd39 + 0 ];
	@!%p10 mov.u32 %r32, %r21;
	// end inline asm
	.loc	1 78 43                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:78:43
	or.b64  	%rd63, %rd9, %rd5;
	.loc	1 78 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:78:35
	shl.b64 	%rd64, %rd63, 2;
	add.s64 	%rd60, %rd13, %rd64;
	.loc	1 78 58                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:78:58
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r34 }, [ %rd60 + 0 ];
	@!%p10 mov.u32 %r34, %r21;
	// end inline asm
	.loc	1 80 74                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:80:74
	// begin inline asm
	mov.u64 %rd61, 0x0;
	@%p10 ld.global.L1::evict_first.b64 { %rd61 }, [ %rd42 + 0 ];
	@!%p10 mov.u64 %rd61, 0x0;
	// end inline asm
	.loc	1 83 39                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:83:39
	shr.u64 	%rd65, %rd61, 61;
	and.b64  	%rd66, %rd65, 4;
	add.s64 	%rd10, %rd66, %rd61;
	.loc	1 84 42                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:84:42
	setp.lt.u64 	%p33, %rd10, 4;
	.loc	1 84 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:84:66
	@%p33 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_10:
	.loc	1 0 66                          // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:0:66
	ld.param.u64 	%rd69, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_8];
	ld.param.u64 	%rd68, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_1];
	.loc	1 53 49                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:53:49
	mov.b32 	%f1, %r32;
	mov.b32 	%f2, %r27;
	.loc	1 52 49                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:52:49
	mov.b32 	%f3, %r34;
	mov.b32 	%f4, %r25;
	.loc	1 38 44                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:38:44
	mov.b32 	%f5, %r16;
	mov.b32 	%f6, %r18;
	.loc	1 37 40                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:37:40
	mov.b32 	%f7, %r20;
	mov.b32 	%f8, %r14;
	.loc	1 25 33                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:25:33
	and.b32  	%r59, %r1, 31;
	.loc	1 84 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:84:66
	bar.sync 	0;
	.loc	1 85 43                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:85:43
	or.b64  	%rd71, %rd10, %rd5;
	.loc	1 85 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:85:35
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd67, %rd13, %rd72;
	.loc	1 85 58                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:85:58
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r36 }, [ %rd67 + 0 ];
	@!%p10 mov.u32 %r36, %r21;
	// end inline asm
	.loc	1 54 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:54:24
	add.f32 	%f9, %f2, %f4;
	add.f32 	%f10, %f1, %f3;
	.loc	1 60 50                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:60:50
	mov.b32 	%f11, %r36;
	mov.b32 	%f12, %r30;
	.loc	1 61 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:61:24
	add.f32 	%f13, %f4, %f12;
	add.f32 	%f14, %f1, %f11;
	.loc	1 62 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:62:24
	mul.f32 	%f15, %f10, %f14;
	mul.f32 	%f16, %f9, %f13;
	.loc	1 64 25                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:64:25
	setp.eq.f32 	%p45, %f16, 0f40800000;
	setp.eq.f32 	%p46, %f15, 0f40800000;
	.loc	1 65 25                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:65:25
	selp.f32 	%f17, 0f3F800000, 0f00000000, %p46;
	selp.f32 	%f18, 0f3F800000, 0f00000000, %p45;
	.loc	1 66 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:66:24
	mul.f32 	%f19, %f8, %f18;
	mul.f32 	%f20, %f7, %f17;
	.loc	1 67 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:67:24
	mul.f32 	%f21, %f20, %f6;
	.loc	1 92 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:92:24
	neg.f32 	%f22, %f21;
	fma.rn.f32 	%f23, %f19, %f5, %f22;
	.loc	1 93 28                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:93:28
	abs.f32 	%f24, %f23;
	.loc	1 95 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:95:24
	setp.lt.f32 	%p47, %f24, 0f3F800000;
	.loc	1 96 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:96:24
	mul.f32 	%f25, %f23, %f23;
	.loc	1 100 24                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:100:24
	add.f32 	%f26, %f24, 0fBF000000;
	.loc	1 103 25                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:103:25
	fma.rn.f32 	%f27, %f25, 0f3F000000, 0f00000000;
	.loc	1 101 39                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:101:39
	selp.f32 	%f28, %f27, %f26, %p47;
	.loc	1 106 25                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:106:25
	fma.rn.f32 	%f29, %f8, %f18, 0f00000000;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f28;
	shfl.sync.bfly.b32	%r61, %r60, 16, 31, -1;
	mov.b32 	%f30, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f28, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f31;
	shfl.sync.bfly.b32	%r63, %r62, 8, 31, -1;
	mov.b32 	%f32, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f33;
	shfl.sync.bfly.b32	%r65, %r64, 4, 31, -1;
	mov.b32 	%f34, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f35;
	shfl.sync.bfly.b32	%r67, %r66, 2, 31, -1;
	mov.b32 	%f36, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f37;
	shfl.sync.bfly.b32	%r69, %r68, 1, 31, -1;
	mov.b32 	%f38, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p36, %r59, 0;
	shr.u32 	%r70, %r1, 3;
	and.b32  	%r71, %r70, 28;
	mov.u32 	%r72, global_smem;
	add.s32 	%r38, %r72, %r71;
	mov.b32 	%r39, %f39;
	// begin inline asm
	@%p36 st.shared.b32 [ %r38 + 0 ], %r39;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p37, %r1, 8;
	shl.b32 	%r73, %r1, 2;
	add.s32 	%r41, %r72, %r73;
	// begin inline asm
	@%p37 ld.shared.b32 %r40, [ %r41 + 0 ];
	// end inline asm
	mov.b32 	%f40, %r40;
	shfl.sync.bfly.b32	%r74, %r40, 4, 31, -1;
	mov.b32 	%f41, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f42;
	shfl.sync.bfly.b32	%r76, %r75, 2, 31, -1;
	mov.b32 	%f43, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f44;
	shfl.sync.bfly.b32	%r78, %r77, 1, 31, -1;
	mov.b32 	%f45, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r79, %r1, 7;
	setp.eq.s32 	%p48, %r79, 0;
	and.pred  	%p38, %p37, %p48;
	mov.b32 	%r43, %f46;
	// begin inline asm
	@%p38 st.shared.b32 [ %r41 + 0 ], %r43;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 115 20                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:115:20
	ld.shared.u32 	%r56, [global_smem];
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r80, %f29;
	shfl.sync.bfly.b32	%r81, %r80, 16, 31, -1;
	mov.b32 	%f47, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f29, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f48;
	shfl.sync.bfly.b32	%r83, %r82, 8, 31, -1;
	mov.b32 	%f49, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f50;
	shfl.sync.bfly.b32	%r85, %r84, 4, 31, -1;
	mov.b32 	%f51, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f52;
	shfl.sync.bfly.b32	%r87, %r86, 2, 31, -1;
	mov.b32 	%f53, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f54;
	shfl.sync.bfly.b32	%r89, %r88, 1, 31, -1;
	mov.b32 	%f55, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f56;
	// begin inline asm
	@%p36 st.shared.b32 [ %r38 + 0 ], %r45;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p37 ld.shared.b32 %r46, [ %r41 + 0 ];
	// end inline asm
	mov.b32 	%f57, %r46;
	shfl.sync.bfly.b32	%r90, %r46, 4, 31, -1;
	mov.b32 	%f58, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f59;
	shfl.sync.bfly.b32	%r92, %r91, 2, 31, -1;
	mov.b32 	%f60, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r93, %f61;
	shfl.sync.bfly.b32	%r94, %r93, 1, 31, -1;
	mov.b32 	%f62, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f63;
	// begin inline asm
	@%p38 st.shared.b32 [ %r41 + 0 ], %r49;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 115 20                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:115:20
	ld.shared.u32 	%r57, [global_smem];
	.loc	1 110 20                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:110:20
	// begin inline asm
	mov.u32 %r53, 0x0;
	@%p10 ld.global.b32 { %r53 }, [ %rd68 + 0 ];
	// end inline asm
	.loc	1 112 20                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:112:20
	// begin inline asm
	mov.u32 %r54, 0x0;
	@%p10 ld.global.b32 { %r54 }, [ %rd69 + 0 ];
	// end inline asm
	.loc	1 114 20                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:114:20
	// begin inline asm
	div.full.f32 %r52, %r53, %r54;
	// end inline asm
	mov.b32 	%f64, %r52;
	.loc	1 115 20                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:115:20
	// begin inline asm
	div.full.f32 %r55, %r56, %r57;
	// end inline asm
	mov.b32 	%f65, %r55;
	.loc	1 116 20                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:116:20
	add.f32 	%f66, %f64, %f65;
	.loc	1 117 4                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:117:4
	bar.sync 	0;
	.loc	1 118 71                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:118:71
	setp.eq.s32 	%p44, %r2, 0;
	mov.b32 	%r58, %f66;
	// begin inline asm
	@%p44 st.global.b32 [ %rd68 + 0 ], { %r58 };
	// end inline asm
	.loc	1 118 4                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:118:4
	ret;
$L__BB0_1:
	.loc	1 46 64                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:46:64
	mov.u64 	%rd97, assertMessage_0;
	cvta.global.u64 	%rd98, %rd97;
	mov.u64 	%rd99, assertFile_0;
	cvta.global.u64 	%rd100, %rd99;
	mov.u64 	%rd101, assertFunc_0;
	cvta.global.u64 	%rd102, %rd101;
	{ // callseq 14, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd98;
	.param .b64 param1;
	st.param.b64 	[param1], %rd100;
	.param .b32 param2;
	st.param.b32 	[param2], 46;
	.param .b64 param3;
	st.param.b64 	[param3], %rd102;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 14
	trap;
$L__BB0_3:
	.loc	1 51 64                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:51:64
	mov.u64 	%rd91, assertMessage_1;
	cvta.global.u64 	%rd92, %rd91;
	mov.u64 	%rd93, assertFile_1;
	cvta.global.u64 	%rd94, %rd93;
	mov.u64 	%rd95, assertFunc_1;
	cvta.global.u64 	%rd96, %rd95;
	{ // callseq 13, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd92;
	.param .b64 param1;
	st.param.b64 	[param1], %rd94;
	.param .b32 param2;
	st.param.b32 	[param2], 51;
	.param .b64 param3;
	st.param.b64 	[param3], %rd96;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 13
	trap;
$L__BB0_5:
	.loc	1 59 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:59:66
	mov.u64 	%rd85, assertMessage_2;
	cvta.global.u64 	%rd86, %rd85;
	mov.u64 	%rd87, assertFile_2;
	cvta.global.u64 	%rd88, %rd87;
	mov.u64 	%rd89, assertFunc_2;
	cvta.global.u64 	%rd90, %rd89;
	{ // callseq 12, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd86;
	.param .b64 param1;
	st.param.b64 	[param1], %rd88;
	.param .b32 param2;
	st.param.b32 	[param2], 59;
	.param .b64 param3;
	st.param.b64 	[param3], %rd90;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 12
	trap;
$L__BB0_7:
	.loc	1 76 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:76:66
	mov.u64 	%rd79, assertMessage_4;
	cvta.global.u64 	%rd80, %rd79;
	mov.u64 	%rd81, assertFile_4;
	cvta.global.u64 	%rd82, %rd81;
	mov.u64 	%rd83, assertFunc_4;
	cvta.global.u64 	%rd84, %rd83;
	{ // callseq 11, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd80;
	.param .b64 param1;
	st.param.b64 	[param1], %rd82;
	.param .b32 param2;
	st.param.b32 	[param2], 76;
	.param .b64 param3;
	st.param.b64 	[param3], %rd84;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 11
	trap;
$L__BB0_9:
	.loc	1 84 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:84:66
	mov.u64 	%rd73, assertMessage_5;
	cvta.global.u64 	%rd74, %rd73;
	mov.u64 	%rd75, assertFile_5;
	cvta.global.u64 	%rd76, %rd75;
	mov.u64 	%rd77, assertFunc_5;
	cvta.global.u64 	%rd78, %rd77;
	{ // callseq 10, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd74;
	.param .b64 param1;
	st.param.b64 	[param1], %rd76;
	.param .b32 param2;
	st.param.b32 	[param2], 84;
	.param .b64 param3;
	st.param.b64 	[param3], %rd78;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 10
	trap;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7c/c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 231                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 99
.b8 101
.b8 121
.b8 100
.b8 54
.b8 102
.b8 108
.b8 52
.b8 119
.b8 50
.b8 110
.b8 108
.b8 102
.b8 116
.b8 99
.b8 121
.b8 111
.b8 105
.b8 113
.b8 101
.b8 50
.b8 113
.b8 110
.b8 107
.b8 105
.b8 105
.b8 121
.b8 100
.b8 99
.b8 51
.b8 109
.b8 119
.b8 115
.b8 109
.b8 104
.b8 102
.b8 113
.b8 119
.b8 100
.b8 53
.b8 55
.b8 111
.b8 107
.b8 114
.b8 98
.b8 107
.b8 113
.b8 117
.b8 50
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 99
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x41 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 101
.b8 113
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 109
.b8 111
.b8 111
.b8 116
.b8 104
.b8 95
.b8 108
.b8 49
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa4:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 108                                 // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 109                                 // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
