//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_mean_relu_7 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_mean_relu_7
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__native_batch_norm_legit_no_training_mean_relu_7
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_mean_relu_7(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_7_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_7_param_1,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_7_param_2,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_7_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<89>;
	.reg .f32 	%f<29>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_7_param_0];
	ld.param.u64 	%rd4, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_7_param_1];
$L__tmp0:
	.loc	1 23 28                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:23:33
	shl.b32 	%r39, %r1, 7;
	.loc	1 24 44                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:24:44
	mov.u32 	%r40, %tid.x;
	shl.b32 	%r42, %r40, 2;
	and.b32  	%r43, %r42, 124;
	and.b32  	%r44, %r40, 127;
	.loc	1 24 23                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:24:23
	or.b32  	%r45, %r39, %r43;
	or.b32  	%r46, %r39, %r44;
	.loc	1 31 19                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:31:19
	bfe.s32 	%r47, %r1, 24, 1;
	shr.u32 	%r48, %r47, 21;
	add.s32 	%r49, %r45, %r48;
	.loc	1 30 19                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:30:19
	and.b32  	%r50, %r49, -2048;
	sub.s32 	%r51, %r45, %r50;
	.loc	1 33 40                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:33:40
	shl.b32 	%r52, %r40, 6;
	and.b32  	%r53, %r52, 14336;
	.loc	1 33 35                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:33:35
	add.s32 	%r54, %r51, %r53;
	.loc	1 33 51                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:33:51
	shl.b32 	%r55, %r49, 3;
	and.b32  	%r56, %r55, -16384;
	.loc	1 33 45                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:33:45
	add.s32 	%r57, %r54, %r56;
	.loc	1 33 30                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:33:30
	mul.wide.s32 	%rd5, %r57, 4;
	add.s64 	%rd1, %rd4, %rd5;
	mov.pred 	%p1, -1;
	.loc	1 33 56                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:33:56
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r7, %r9, %r11, %r13 }, [ %rd1 + 0 ];
	// end inline asm
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	shr.u32 	%r58, %r40, 3;
	and.b32  	%r59, %r58, 28;
	shl.b32 	%r60, %r43, 5;
	or.b32  	%r61, %r60, %r59;
	mov.u32 	%r62, global_smem;
	add.s32 	%r6, %r62, %r61;
	// begin inline asm
	@%p1 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	add.s32 	%r8, %r6, 32;
	// begin inline asm
	@%p1 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	add.s32 	%r10, %r6, 64;
	// begin inline asm
	@%p1 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	add.s32 	%r12, %r6, 96;
	// begin inline asm
	@%p1 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r40, 1024;
	add.s32 	%r15, %r62, %r42;
	// begin inline asm
	@%p6 ld.shared.b32 %r14, [ %r15 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r14;
	shfl.sync.bfly.b32	%r63, %r14, 4, 31, -1;
	mov.b32 	%f2, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3, %f1, %f2;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f3;
	shfl.sync.bfly.b32	%r65, %r64, 2, 31, -1;
	mov.b32 	%f4, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5, %f3, %f4;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f5;
	shfl.sync.bfly.b32	%r67, %r66, 1, 31, -1;
	mov.b32 	%f6, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f7, %f5, %f6;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r68, %r40, 7;
	setp.eq.s32 	%p16, %r68, 0;
	and.pred  	%p7, %p6, %p16;
	mov.b32 	%r17, %f7;
	// begin inline asm
	@%p7 st.shared.b32 [ %r15 + 0 ], %r17;
	// end inline asm
	add.s32 	%r19, %r15, 1024;
	// begin inline asm
	@%p6 ld.shared.b32 %r18, [ %r19 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r18;
	shfl.sync.bfly.b32	%r69, %r18, 4, 31, -1;
	mov.b32 	%f9, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f10;
	shfl.sync.bfly.b32	%r71, %r70, 2, 31, -1;
	mov.b32 	%f11, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f12;
	shfl.sync.bfly.b32	%r73, %r72, 1, 31, -1;
	mov.b32 	%f13, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r21, %f14;
	// begin inline asm
	@%p7 st.shared.b32 [ %r19 + 0 ], %r21;
	// end inline asm
	add.s32 	%r23, %r15, 2048;
	// begin inline asm
	@%p6 ld.shared.b32 %r22, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r22;
	shfl.sync.bfly.b32	%r74, %r22, 4, 31, -1;
	mov.b32 	%f16, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f17;
	shfl.sync.bfly.b32	%r76, %r75, 2, 31, -1;
	mov.b32 	%f18, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f19;
	shfl.sync.bfly.b32	%r78, %r77, 1, 31, -1;
	mov.b32 	%f20, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r25, %f21;
	// begin inline asm
	@%p7 st.shared.b32 [ %r23 + 0 ], %r25;
	// end inline asm
	add.s32 	%r27, %r15, 3072;
	// begin inline asm
	@%p6 ld.shared.b32 %r26, [ %r27 + 0 ];
	// end inline asm
	mov.b32 	%f22, %r26;
	shfl.sync.bfly.b32	%r79, %r26, 4, 31, -1;
	mov.b32 	%f23, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f24;
	shfl.sync.bfly.b32	%r81, %r80, 2, 31, -1;
	mov.b32 	%f25, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f26;
	shfl.sync.bfly.b32	%r83, %r82, 1, 31, -1;
	mov.b32 	%f27, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r29, %f28;
	// begin inline asm
	@%p7 st.shared.b32 [ %r27 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r84, %r62, %r60;
	ld.shared.u32 	%r31, [%r84];
	ld.shared.u32 	%r32, [%r84+32];
	ld.shared.u32 	%r33, [%r84+64];
	ld.shared.u32 	%r34, [%r84+96];
$L__tmp2:
	.loc	1 37 18                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:37:18
	bar.sync 	0;
	shl.b32 	%r85, %r43, 2;
	add.s32 	%r30, %r62, %r85;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r30 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r86, %r44, 2;
	add.s32 	%r87, %r62, %r86;
	ld.shared.u32 	%r36, [%r87];
	mov.b32 	%r37, 1149239296;
	// begin inline asm
	div.full.f32 %r38, %r36, %r37;
	// end inline asm
	.loc	1 38 4                          // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:38:4
	bar.sync 	0;
	.loc	1 39 28                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:39:28
	mul.wide.s32 	%rd6, %r46, 4;
	add.s64 	%rd2, %rd3, %rd6;
	.loc	1 39 39                         // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:39:39
	and.b32  	%r88, %r40, 128;
	setp.eq.s32 	%p15, %r88, 0;
	// begin inline asm
	@%p15 st.global.b32 [ %rd2 + 0 ], { %r38 };
	// end inline asm
	.loc	1 39 4                          // c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py:39:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/3h/c3h6vtuhwnijwrspu5ks4yjaduhgebm4txby5otln62kh5mgu5pe.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 210                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 104
.b8 54
.b8 118
.b8 116
.b8 117
.b8 104
.b8 119
.b8 110
.b8 105
.b8 106
.b8 119
.b8 114
.b8 115
.b8 112
.b8 117
.b8 53
.b8 107
.b8 115
.b8 52
.b8 121
.b8 106
.b8 97
.b8 100
.b8 117
.b8 104
.b8 103
.b8 101
.b8 98
.b8 109
.b8 52
.b8 116
.b8 120
.b8 98
.b8 121
.b8 53
.b8 111
.b8 116
.b8 108
.b8 110
.b8 54
.b8 50
.b8 107
.b8 104
.b8 53
.b8 109
.b8 103
.b8 117
.b8 53
.b8 112
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 104
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x44 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa7:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 35                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
