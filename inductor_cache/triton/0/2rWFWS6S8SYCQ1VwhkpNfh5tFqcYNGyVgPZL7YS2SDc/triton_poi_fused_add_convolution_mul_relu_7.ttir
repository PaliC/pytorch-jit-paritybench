#loc = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":19:0)
module {
  tt.func public @triton_poi_fused_add_convolution_mul_relu_7(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":19:0)) attributes {noinline = false} {
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c320_i32 = arith.constant 320 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x1024xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1310720> : tensor<1x1024xi32> loc(#loc1)
    %cst_1 = arith.constant dense<320> : tensor<1x1024xi32> loc(#loc1)
    %cst_2 = arith.constant dense<4096> : tensor<1x1024xi32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<1024xi32> -> tensor<1x1024xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x1024xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x1024xi32> loc(#loc6)
    %6 = tt.get_program_id x : i32 loc(#loc7)
    %7 = arith.cmpi slt, %6, %c320_i32 : i32 loc(#loc8)
    %8 = tt.splat %7 : i1 -> tensor<1x1xi1> loc(#loc8)
    %9 = arith.remsi %5, %cst_2 : tensor<1x1024xi32> loc(#loc9)
    %10 = arith.divsi %5, %cst_2 : tensor<1x1024xi32> loc(#loc10)
    %11 = arith.muli %5, %cst_1 : tensor<1x1024xi32> loc(#loc11)
    %12 = tt.splat %6 : i32 -> tensor<1x1024xi32> loc(#loc12)
    %13 = arith.addi %12, %11 : tensor<1x1024xi32> loc(#loc12)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc13)
    %15 = tt.addptr %14, %13 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc13)
    %16 = tt.splat %7 : i1 -> tensor<1x1024xi1> loc(#loc14)
    %17 = tt.load %15, %16 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.addptr %arg1, %6 : !tt.ptr<f32>, i32 loc(#loc15)
    %19 = tt.splat %18 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc15)
    %20 = tt.load %19, %8 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.addptr %21, %13 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc17)
    %23 = tt.load %22, %16 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>> loc(#loc18)
    %24 = tt.broadcast %20 : tensor<1x1xf32> -> tensor<1x1024xf32> loc(#loc19)
    %25 = arith.addf %17, %24 : tensor<1x1024xf32> loc(#loc19)
    %26 = arith.addf %25, %23 : tensor<1x1024xf32> loc(#loc20)
    %27 = arith.cmpf ogt, %cst, %26 : tensor<1x1024xf32> loc(#loc31)
    %28 = arith.select %27, %cst, %26 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc32)
    %29 = arith.muli %6, %c4096_i32 : i32 loc(#loc24)
    %30 = tt.splat %29 : i32 -> tensor<1x1024xi32> loc(#loc25)
    %31 = arith.addi %9, %30 : tensor<1x1024xi32> loc(#loc25)
    %32 = arith.muli %10, %cst_0 : tensor<1x1024xi32> loc(#loc26)
    %33 = arith.addi %31, %32 : tensor<1x1024xi32> loc(#loc27)
    %34 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc28)
    %35 = tt.addptr %34, %33 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc28)
    tt.store %35, %28, %16 : tensor<1x1024x!tt.ptr<f32>> loc(#loc29)
    tt.return loc(#loc30)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":22:28)
#loc3 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":22:33)
#loc4 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":23:36)
#loc5 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":23:44)
#loc6 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":23:23)
#loc7 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":25:28)
#loc8 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":27:21)
#loc9 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":30:19)
#loc10 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":31:19)
#loc11 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":32:39)
#loc12 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":32:35)
#loc13 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":32:30)
#loc14 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":32:44)
#loc15 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":33:30)
#loc16 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":33:35)
#loc17 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":34:30)
#loc18 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":34:44)
#loc19 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":35:18)
#loc20 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":38:18)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc22 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":40:40)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc24 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":41:35)
#loc25 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":41:30)
#loc26 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":41:48)
#loc27 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":41:40)
#loc28 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":41:25)
#loc29 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":41:59)
#loc30 = loc("inductor_cache/d6/cd6jelbijy4imuc34hirb33bmf4ulugms5h637v5j3wwj4r2n52d.py":41:4)
#loc31 = loc(callsite(#loc21 at #loc22))
#loc32 = loc(callsite(#loc23 at #loc22))
