; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_div_max_mul_neg_pow_relu_sub_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 256, !dbg !14
  %13 = sdiv i32 %11, 4, !dbg !15
  %14 = sext i32 %11 to i64, !dbg !16
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !16
  %16 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %15, i1 %12) #4, !dbg !17
  %17 = extractvalue { i32, i32 } %16, 0, !dbg !17
  %18 = extractvalue { i32, i32 } %16, 1, !dbg !17
  %19 = bitcast i32 %17 to float, !dbg !17
  %20 = bitcast i32 %18 to float, !dbg !17
  %21 = getelementptr float, ptr addrspace(1) %1, i64 %14, !dbg !18
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %21, i1 %12) #4, !dbg !19
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !19
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !19
  %25 = bitcast i32 %23 to float, !dbg !19
  %26 = bitcast i32 %24 to float, !dbg !19
  %27 = sext i32 %13 to i64, !dbg !20
  %28 = getelementptr float, ptr addrspace(1) %2, i64 %27, !dbg !20
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %12) #4, !dbg !21
  %30 = bitcast i32 %29 to float, !dbg !21
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %12) #4, !dbg !21
  %32 = bitcast i32 %31 to float, !dbg !21
  %33 = fadd float %19, 0x3DDB7CDFE0000000, !dbg !22
  %34 = fadd float %20, 0x3DDB7CDFE0000000, !dbg !22
  %35 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %33) #4, !dbg !23
  %36 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %34) #4, !dbg !23
  %37 = fsub float %25, %30, !dbg !24
  %38 = fsub float %26, %32, !dbg !24
  %39 = fmul float %37, 3.000000e+00, !dbg !25
  %40 = fmul float %38, 3.000000e+00, !dbg !25
  %41 = fsub float 1.000000e+00, %39, !dbg !26
  %42 = fsub float 1.000000e+00, %40, !dbg !26
  %43 = fcmp olt float %41, 0.000000e+00, !dbg !27
  %44 = fcmp olt float %42, 0.000000e+00, !dbg !27
  %45 = select i1 %43, float 0.000000e+00, float %41, !dbg !31
  %46 = select i1 %44, float 0.000000e+00, float %42, !dbg !31
  %47 = tail call float @llvm.nvvm.trunc.f(float 0xBFC5555560000000) #4, !dbg !32
  %48 = fmul float %47, 2.000000e+00, !dbg !32
  %49 = fsub float 0xBFD5555560000000, %48, !dbg !32
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i = icmp eq i32 %50, 0, !dbg !32
  %51 = tail call float @llvm.nvvm.fabs.ftz.f(float %49) #4, !dbg !32
  %52 = tail call float @llvm.nvvm.fabs.f(float %49) #4, !dbg !32
  %.08.i = select i1 %.not.i, float %52, float %51, !dbg !32
  %53 = fcmp oeq float %.08.i, 1.000000e+00, !dbg !32
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not12.i = icmp eq i32 %54, 0, !dbg !32
  %55 = tail call float @llvm.nvvm.fabs.ftz.f(float %45) #4, !dbg !32
  %56 = tail call float @llvm.nvvm.fabs.f(float %45) #4, !dbg !32
  %.09.i = select i1 %.not12.i, float %56, float %55, !dbg !32
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not13.i = icmp eq i32 %57, 0, !dbg !32
  %58 = fcmp olt float %.09.i, 0x3810000000000000, !dbg !32
  %59 = fmul float %.09.i, 0x4170000000000000, !dbg !32
  %60 = select i1 %.not13.i, i1 %58, i1 false, !dbg !32
  %.116.i = select i1 %60, float %59, float %.09.i, !dbg !32
  %expo.i.i.1.i = select i1 %60, float -1.510000e+02, float -1.270000e+02, !dbg !32
  %61 = bitcast float %.116.i to i32, !dbg !32
  %62 = and i32 %61, 8388607, !dbg !32
  %63 = or disjoint i32 %62, 1065353216, !dbg !32
  %64 = bitcast i32 %63 to float, !dbg !32
  %65 = lshr i32 %61, 23, !dbg !32
  %66 = uitofp nneg i32 %65 to float, !dbg !32
  %67 = fadd float %expo.i.i.1.i, %66, !dbg !32
  %68 = fcmp ogt float %64, 0x3FF6A09E60000000, !dbg !32
  %69 = fmul float %64, 5.000000e-01, !dbg !32
  %70 = fadd float %67, 1.000000e+00, !dbg !32
  %expo.i.i.2.i = select i1 %68, float %70, float %67, !dbg !32
  %m.i.i.0.i = select i1 %68, float %69, float %64, !dbg !32
  %71 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !32
  %72 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !32
  %73 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %72) #5, !dbg !32, !srcloc !33
  %74 = fmul float %71, 2.000000e+00, !dbg !32
  %75 = fmul float %73, %74, !dbg !32
  %76 = fmul float %75, %75, !dbg !32
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not14.i = icmp eq i32 %77, 0, !dbg !32
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %76, float 0x3F8995EC60000000) #4, !dbg !32
  %79 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %76, float 0x3F8995EC60000000) #4, !dbg !32
  %.020.i = select i1 %.not14.i, float %79, float %78, !dbg !32
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not15.i = icmp eq i32 %80, 0, !dbg !32
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %76, float 0x3FB55557A0000000) #4, !dbg !32
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %76, float 0x3FB55557A0000000) #4, !dbg !32
  %.021.i = select i1 %.not15.i, float %82, float %81, !dbg !32
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not16.i = icmp eq i32 %83, 0, !dbg !32
  %84 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %76) #4, !dbg !32
  %85 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %76) #4, !dbg !32
  %.022.i = select i1 %.not16.i, float %85, float %84, !dbg !32
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not17.i = icmp eq i32 %86, 0, !dbg !32
  %87 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %75) #4, !dbg !32
  %88 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %75) #4, !dbg !32
  %.024.i = select i1 %.not17.i, float %88, float %87, !dbg !32
  %89 = fsub float %71, %75, !dbg !32
  %90 = fmul float %89, 2.000000e+00, !dbg !32
  %91 = fneg float %75, !dbg !32
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not18.i = icmp eq i32 %92, 0, !dbg !32
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %91, float %71, float %90) #4, !dbg !32
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %91, float %71, float %90) #4, !dbg !32
  %.025.i = select i1 %.not18.i, float %94, float %93, !dbg !32
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not19.i = icmp eq i32 %95, 0, !dbg !32
  %96 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %73, float %.025.i) #4, !dbg !32
  %97 = tail call float @llvm.nvvm.mul.rn.f(float %73, float %.025.i) #4, !dbg !32
  %.026.i = select i1 %.not19.i, float %97, float %96, !dbg !32
  %98 = fadd float %75, %.024.i, !dbg !32
  %99 = fsub float %75, %98, !dbg !32
  %100 = fadd float %.024.i, %99, !dbg !32
  %101 = fadd float %.026.i, %100, !dbg !32
  %102 = fadd float %98, %101, !dbg !32
  %103 = fsub float %98, %102, !dbg !32
  %104 = fadd float %101, %103, !dbg !32
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not20.i = icmp eq i32 %105, 0, !dbg !32
  %106 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !32
  %107 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !32
  %.019.i = select i1 %.not20.i, float %107, float %106, !dbg !32
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not21.i = icmp eq i32 %108, 0, !dbg !32
  %109 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !32
  %110 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !32
  %.018.i = select i1 %.not21.i, float %110, float %109, !dbg !32
  %111 = fadd float %.019.i, %102, !dbg !32
  %112 = fsub float %.019.i, %111, !dbg !32
  %113 = fadd float %102, %112, !dbg !32
  %114 = fadd float %104, %113, !dbg !32
  %115 = fadd float %.018.i, %114, !dbg !32
  %116 = fadd float %111, %115, !dbg !32
  %117 = fsub float %111, %116, !dbg !32
  %118 = fadd float %115, %117, !dbg !32
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not22.i = icmp eq i32 %119, 0, !dbg !32
  %120 = tail call float @llvm.nvvm.fabs.ftz.f(float 0xBFD5555560000000) #4, !dbg !32
  %121 = tail call float @llvm.nvvm.fabs.f(float 0xBFD5555560000000) #4, !dbg !32
  %.027.i = select i1 %.not22.i, float %121, float %120, !dbg !32
  %122 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !32
  %.013.i = select i1 %122, float 0xBF05555560000000, float 0xBFD5555560000000, !dbg !32
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not23.i = icmp eq i32 %123, 0, !dbg !32
  %124 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i, float %116) #4, !dbg !32
  %125 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i, float %116) #4, !dbg !32
  %.028.i = select i1 %.not23.i, float %125, float %124, !dbg !32
  %126 = fneg float %.028.i, !dbg !32
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not24.i = icmp eq i32 %127, 0, !dbg !32
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %116, float %126) #4, !dbg !32
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %116, float %126) #4, !dbg !32
  %.029.i = select i1 %.not24.i, float %129, float %128, !dbg !32
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not25.i = icmp eq i32 %130, 0, !dbg !32
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %118, float %.029.i) #4, !dbg !32
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %118, float %.029.i) #4, !dbg !32
  %.030.i = select i1 %.not25.i, float %132, float %131, !dbg !32
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not26.i = icmp eq i32 %133, 0, !dbg !32
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %116, float %.030.i) #4, !dbg !32
  %135 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %116, float %.030.i) #4, !dbg !32
  %.031.i = select i1 %.not26.i, float %135, float %134, !dbg !32
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not27.i = icmp eq i32 %136, 0, !dbg !32
  %137 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #4, !dbg !32
  %138 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #4, !dbg !32
  %.032.i = select i1 %.not27.i, float %138, float %137, !dbg !32
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %141 = bitcast float %.032.i to i32, !dbg !32
  %142 = icmp eq i32 %141, 1118925336, !dbg !32
  %prod.i.145.0.i = select i1 %142, float 0x40562E42E0000000, float %.032.i, !dbg !32
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not30.i = icmp eq i32 %143, 0, !dbg !32
  %144 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !32
  %145 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !32
  %.017.i = select i1 %.not30.i, float %145, float %144, !dbg !32
  %146 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #4, !dbg !32
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not31.i = icmp eq i32 %147, 0, !dbg !32
  %148 = tail call float @llvm.nvvm.fabs.ftz.f(float %146) #4, !dbg !32
  %149 = tail call float @llvm.nvvm.fabs.f(float %146) #4, !dbg !32
  %.023.i = select i1 %.not31.i, float %149, float %148, !dbg !32
  %150 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !32
  %151 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %146), !dbg !32
  %j.i.i.0.i = select i1 %150, float %151, float %146, !dbg !32
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not32.i = icmp eq i32 %152, 0, !dbg !32
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !32
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !32
  %.035.i = select i1 %.not32.i, float %154, float %153, !dbg !32
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not33.i = icmp eq i32 %155, 0, !dbg !32
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !32
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !32
  %.036.i = select i1 %.not33.i, float %157, float %156, !dbg !32
  %158 = fmul float %.036.i, 0x3FF7154760000000, !dbg !32
  %159 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !32
  %160 = bitcast float %159 to i32, !dbg !32
  %161 = shl i32 %160, 23, !dbg !32
  %162 = bitcast i32 %161 to float, !dbg !32
  %163 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %158) #4, !dbg !32
  %164 = fmul float %163, %162, !dbg !32
  %165 = fcmp une float %164, 0x7FF0000000000000, !dbg !32
  br i1 %165, label %__internal_fmad.exit.i.i, label %__internal_accurate_powf.exit.i, !dbg !32

__internal_fmad.exit.i.i:                         ; preds = %5
  %.not29.i = icmp eq i32 %140, 0, !dbg !32
  %.not28.i = icmp eq i32 %139, 0, !dbg !32
  %166 = fneg float %.032.i, !dbg !32
  %167 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %166) #4, !dbg !32
  %168 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %166) #4, !dbg !32
  %.033.i = select i1 %.not28.i, float %167, float %168, !dbg !32
  %169 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #4, !dbg !32
  %170 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #4, !dbg !32
  %.034.i = select i1 %.not29.i, float %169, float %170, !dbg !32
  %171 = fadd float %.034.i, 0x3EE0000000000000, !dbg !32
  %prod.i.044.0.i = select i1 %142, float %171, float %.034.i, !dbg !32
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not34.i = icmp eq i32 %172, 0, !dbg !32
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %164, float %prod.i.044.0.i, float %164) #4, !dbg !32
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %164, float %prod.i.044.0.i, float %164) #4, !dbg !32
  %.014.i = select i1 %.not34.i, float %174, float %173, !dbg !32
  br label %__internal_accurate_powf.exit.i, !dbg !32

__internal_accurate_powf.exit.i:                  ; preds = %__internal_fmad.exit.i.i, %5
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %5 ], !dbg !32
  %175 = fcmp oeq float %45, 0.000000e+00, !dbg !32
  br i1 %175, label %176, label %__internal_powf_corner_cases.exit.i, !dbg !32

176:                                              ; preds = %__internal_accurate_powf.exit.i
  %177 = fadd float %45, %45, !dbg !32
  %178 = bitcast float %177 to i32, !dbg !32
  %179 = or i32 %178, 2139095040, !dbg !32
  %180 = bitcast i32 %179 to float, !dbg !32
  %181 = select i1 %53, float %180, float 0x7FF0000000000000, !dbg !32
  br label %__internal_powf_corner_cases.exit.i, !dbg !32

__internal_powf_corner_cases.exit.i:              ; preds = %__internal_accurate_powf.exit.i, %176
  %.212.i = phi float [ %181, %176 ], [ %t.i.0.i, %__internal_accurate_powf.exit.i ], !dbg !32
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not35.i = icmp eq i32 %182, 0, !dbg !32
  %.01.i = select i1 %.not35.i, float %56, float %55, !dbg !32
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not36.i = icmp eq i32 %183, 0, !dbg !32
  %.02.i = select i1 %.not36.i, float %121, float %120, !dbg !32
  %184 = fadd float %.01.i, %.02.i, !dbg !32
  %185 = bitcast float %184 to i32, !dbg !32
  %186 = icmp sgt i32 %185, 2139095039, !dbg !32
  br i1 %186, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !32

__nv_isnanf.exit.i.i:                             ; preds = %__internal_powf_corner_cases.exit.i
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not37.i = icmp eq i32 %187, 0, !dbg !32
  %.06.i = select i1 %.not37.i, float %56, float %55, !dbg !32
  %188 = fcmp uno float %.06.i, 0.000000e+00, !dbg !32
  br i1 %188, label %191, label %__nv_isnanf.exit11.i.i, !dbg !32

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not38.i = icmp eq i32 %189, 0, !dbg !32
  %.07.i = select i1 %.not38.i, float %121, float %120, !dbg !32
  %190 = fcmp uno float %.07.i, 0.000000e+00, !dbg !32
  br i1 %190, label %191, label %__nv_isinff.exit8.i.i, !dbg !32

191:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %192 = fadd float %45, 0xBFD5555560000000, !dbg !32
  br label %__nv_powf.exit, !dbg !32

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not39.i = icmp eq i32 %193, 0, !dbg !32
  %.05.i = select i1 %.not39.i, float %121, float %120, !dbg !32
  %194 = fcmp oeq float %.05.i, 0x7FF0000000000000, !dbg !32
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not41.i = icmp eq i32 %195, 0, !dbg !32
  %.04.i = select i1 %.not41.i, float %56, float %55, !dbg !32
  br i1 %194, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !32

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %196 = fcmp ogt float %.04.i, 1.000000e+00, !dbg !32
  %197 = select i1 %196, float 0.000000e+00, float 0x7FF0000000000000, !dbg !32
  br label %__nv_powf.exit, !dbg !32

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %198 = fcmp oeq float %.04.i, 0x7FF0000000000000, !dbg !32
  br i1 %198, label %199, label %__nv_powf.exit, !dbg !32

199:                                              ; preds = %__nv_isinff.exit.i.i
  br label %__nv_powf.exit, !dbg !32

__nv_powf.exit:                                   ; preds = %__internal_powf_corner_cases.exit.i, %191, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %199
  %.3.i = phi float [ %.212.i, %__internal_powf_corner_cases.exit.i ], [ %192, %191 ], [ %197, %__nv_fabsf.exit5.i.i ], [ 0.000000e+00, %199 ], [ %.212.i, %__nv_isinff.exit.i.i ], !dbg !32
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i1 = icmp eq i32 %200, 0, !dbg !32
  %.08.i2 = select i1 %.not.i1, float %52, float %51, !dbg !32
  %201 = fcmp oeq float %.08.i2, 1.000000e+00, !dbg !32
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not12.i3 = icmp eq i32 %202, 0, !dbg !32
  %203 = tail call float @llvm.nvvm.fabs.ftz.f(float %46) #4, !dbg !32
  %204 = tail call float @llvm.nvvm.fabs.f(float %46) #4, !dbg !32
  %.09.i4 = select i1 %.not12.i3, float %204, float %203, !dbg !32
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not13.i5 = icmp eq i32 %205, 0, !dbg !32
  %206 = fcmp olt float %.09.i4, 0x3810000000000000, !dbg !32
  %207 = fmul float %.09.i4, 0x4170000000000000, !dbg !32
  %208 = select i1 %.not13.i5, i1 %206, i1 false, !dbg !32
  %.116.i8 = select i1 %208, float %207, float %.09.i4, !dbg !32
  %expo.i.i.1.i9 = select i1 %208, float -1.510000e+02, float -1.270000e+02, !dbg !32
  %209 = bitcast float %.116.i8 to i32, !dbg !32
  %210 = and i32 %209, 8388607, !dbg !32
  %211 = or disjoint i32 %210, 1065353216, !dbg !32
  %212 = bitcast i32 %211 to float, !dbg !32
  %213 = lshr i32 %209, 23, !dbg !32
  %214 = uitofp nneg i32 %213 to float, !dbg !32
  %215 = fadd float %expo.i.i.1.i9, %214, !dbg !32
  %216 = fcmp ogt float %212, 0x3FF6A09E60000000, !dbg !32
  %217 = fmul float %212, 5.000000e-01, !dbg !32
  %218 = fadd float %215, 1.000000e+00, !dbg !32
  %expo.i.i.2.i10 = select i1 %216, float %218, float %215, !dbg !32
  %m.i.i.0.i11 = select i1 %216, float %217, float %212, !dbg !32
  %219 = fadd float %m.i.i.0.i11, -1.000000e+00, !dbg !32
  %220 = fadd float %m.i.i.0.i11, 1.000000e+00, !dbg !32
  %221 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %220) #5, !dbg !32, !srcloc !33
  %222 = fmul float %219, 2.000000e+00, !dbg !32
  %223 = fmul float %221, %222, !dbg !32
  %224 = fmul float %223, %223, !dbg !32
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not14.i12 = icmp eq i32 %225, 0, !dbg !32
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %224, float 0x3F8995EC60000000) #4, !dbg !32
  %227 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %224, float 0x3F8995EC60000000) #4, !dbg !32
  %.020.i13 = select i1 %.not14.i12, float %227, float %226, !dbg !32
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not15.i14 = icmp eq i32 %228, 0, !dbg !32
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i13, float %224, float 0x3FB55557A0000000) #4, !dbg !32
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i13, float %224, float 0x3FB55557A0000000) #4, !dbg !32
  %.021.i15 = select i1 %.not15.i14, float %230, float %229, !dbg !32
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not16.i16 = icmp eq i32 %231, 0, !dbg !32
  %232 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i15, float %224) #4, !dbg !32
  %233 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i15, float %224) #4, !dbg !32
  %.022.i17 = select i1 %.not16.i16, float %233, float %232, !dbg !32
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not17.i18 = icmp eq i32 %234, 0, !dbg !32
  %235 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i17, float %223) #4, !dbg !32
  %236 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i17, float %223) #4, !dbg !32
  %.024.i19 = select i1 %.not17.i18, float %236, float %235, !dbg !32
  %237 = fsub float %219, %223, !dbg !32
  %238 = fmul float %237, 2.000000e+00, !dbg !32
  %239 = fneg float %223, !dbg !32
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not18.i20 = icmp eq i32 %240, 0, !dbg !32
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %239, float %219, float %238) #4, !dbg !32
  %242 = tail call float @llvm.nvvm.fma.rn.f(float %239, float %219, float %238) #4, !dbg !32
  %.025.i21 = select i1 %.not18.i20, float %242, float %241, !dbg !32
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not19.i22 = icmp eq i32 %243, 0, !dbg !32
  %244 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %221, float %.025.i21) #4, !dbg !32
  %245 = tail call float @llvm.nvvm.mul.rn.f(float %221, float %.025.i21) #4, !dbg !32
  %.026.i23 = select i1 %.not19.i22, float %245, float %244, !dbg !32
  %246 = fadd float %223, %.024.i19, !dbg !32
  %247 = fsub float %223, %246, !dbg !32
  %248 = fadd float %.024.i19, %247, !dbg !32
  %249 = fadd float %.026.i23, %248, !dbg !32
  %250 = fadd float %246, %249, !dbg !32
  %251 = fsub float %246, %250, !dbg !32
  %252 = fadd float %249, %251, !dbg !32
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not20.i24 = icmp eq i32 %253, 0, !dbg !32
  %254 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i10, float 0x3FE62E4000000000) #4, !dbg !32
  %255 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i10, float 0x3FE62E4000000000) #4, !dbg !32
  %.019.i25 = select i1 %.not20.i24, float %255, float %254, !dbg !32
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not21.i26 = icmp eq i32 %256, 0, !dbg !32
  %257 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i10, float 0x3EB7F7D1C0000000) #4, !dbg !32
  %258 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i10, float 0x3EB7F7D1C0000000) #4, !dbg !32
  %.018.i27 = select i1 %.not21.i26, float %258, float %257, !dbg !32
  %259 = fadd float %.019.i25, %250, !dbg !32
  %260 = fsub float %.019.i25, %259, !dbg !32
  %261 = fadd float %250, %260, !dbg !32
  %262 = fadd float %252, %261, !dbg !32
  %263 = fadd float %.018.i27, %262, !dbg !32
  %264 = fadd float %259, %263, !dbg !32
  %265 = fsub float %259, %264, !dbg !32
  %266 = fadd float %263, %265, !dbg !32
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not22.i28 = icmp eq i32 %267, 0, !dbg !32
  %.027.i29 = select i1 %.not22.i28, float %121, float %120, !dbg !32
  %268 = fcmp ogt float %.027.i29, 0x46FED09BE0000000, !dbg !32
  %.013.i30 = select i1 %268, float 0xBF05555560000000, float 0xBFD5555560000000, !dbg !32
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not23.i31 = icmp eq i32 %269, 0, !dbg !32
  %270 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i30, float %264) #4, !dbg !32
  %271 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i30, float %264) #4, !dbg !32
  %.028.i32 = select i1 %.not23.i31, float %271, float %270, !dbg !32
  %272 = fneg float %.028.i32, !dbg !32
  %273 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not24.i33 = icmp eq i32 %273, 0, !dbg !32
  %274 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i30, float %264, float %272) #4, !dbg !32
  %275 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i30, float %264, float %272) #4, !dbg !32
  %.029.i34 = select i1 %.not24.i33, float %275, float %274, !dbg !32
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not25.i35 = icmp eq i32 %276, 0, !dbg !32
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i30, float %266, float %.029.i34) #4, !dbg !32
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i30, float %266, float %.029.i34) #4, !dbg !32
  %.030.i36 = select i1 %.not25.i35, float %278, float %277, !dbg !32
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not26.i37 = icmp eq i32 %279, 0, !dbg !32
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %264, float %.030.i36) #4, !dbg !32
  %281 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %264, float %.030.i36) #4, !dbg !32
  %.031.i38 = select i1 %.not26.i37, float %281, float %280, !dbg !32
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not27.i39 = icmp eq i32 %282, 0, !dbg !32
  %283 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i32, float %.031.i38) #4, !dbg !32
  %284 = tail call float @llvm.nvvm.add.rn.f(float %.028.i32, float %.031.i38) #4, !dbg !32
  %.032.i40 = select i1 %.not27.i39, float %284, float %283, !dbg !32
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %287 = bitcast float %.032.i40 to i32, !dbg !32
  %288 = icmp eq i32 %287, 1118925336, !dbg !32
  %prod.i.145.0.i46 = select i1 %288, float 0x40562E42E0000000, float %.032.i40, !dbg !32
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not30.i47 = icmp eq i32 %289, 0, !dbg !32
  %290 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i46, float 0x3FF7154760000000) #4, !dbg !32
  %291 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i46, float 0x3FF7154760000000) #4, !dbg !32
  %.017.i48 = select i1 %.not30.i47, float %291, float %290, !dbg !32
  %292 = tail call float @llvm.nvvm.trunc.f(float %.017.i48) #4, !dbg !32
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not31.i49 = icmp eq i32 %293, 0, !dbg !32
  %294 = tail call float @llvm.nvvm.fabs.ftz.f(float %292) #4, !dbg !32
  %295 = tail call float @llvm.nvvm.fabs.f(float %292) #4, !dbg !32
  %.023.i50 = select i1 %.not31.i49, float %295, float %294, !dbg !32
  %296 = fcmp ogt float %.023.i50, 1.260000e+02, !dbg !32
  %297 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %292), !dbg !32
  %j.i.i.0.i51 = select i1 %296, float %297, float %292, !dbg !32
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not32.i52 = icmp eq i32 %298, 0, !dbg !32
  %299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i51, float 0xBFE62E4300000000, float %prod.i.145.0.i46) #4, !dbg !32
  %300 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i51, float 0xBFE62E4300000000, float %prod.i.145.0.i46) #4, !dbg !32
  %.035.i53 = select i1 %.not32.i52, float %300, float %299, !dbg !32
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not33.i54 = icmp eq i32 %301, 0, !dbg !32
  %302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i51, float 0x3E205C6100000000, float %.035.i53) #4, !dbg !32
  %303 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i51, float 0x3E205C6100000000, float %.035.i53) #4, !dbg !32
  %.036.i55 = select i1 %.not33.i54, float %303, float %302, !dbg !32
  %304 = fmul float %.036.i55, 0x3FF7154760000000, !dbg !32
  %305 = fadd float %j.i.i.0.i51, 0x4168000FE0000000, !dbg !32
  %306 = bitcast float %305 to i32, !dbg !32
  %307 = shl i32 %306, 23, !dbg !32
  %308 = bitcast i32 %307 to float, !dbg !32
  %309 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %304) #4, !dbg !32
  %310 = fmul float %309, %308, !dbg !32
  %311 = fcmp une float %310, 0x7FF0000000000000, !dbg !32
  br i1 %311, label %__internal_fmad.exit.i.i81, label %__internal_accurate_powf.exit.i56, !dbg !32

__internal_fmad.exit.i.i81:                       ; preds = %__nv_powf.exit
  %.not29.i43 = icmp eq i32 %286, 0, !dbg !32
  %.not28.i41 = icmp eq i32 %285, 0, !dbg !32
  %312 = fneg float %.032.i40, !dbg !32
  %313 = tail call float @llvm.nvvm.add.rn.f(float %.028.i32, float %312) #4, !dbg !32
  %314 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i32, float %312) #4, !dbg !32
  %.033.i42 = select i1 %.not28.i41, float %313, float %314, !dbg !32
  %315 = tail call float @llvm.nvvm.add.rn.f(float %.033.i42, float %.031.i38) #4, !dbg !32
  %316 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i42, float %.031.i38) #4, !dbg !32
  %.034.i44 = select i1 %.not29.i43, float %315, float %316, !dbg !32
  %317 = fadd float %.034.i44, 0x3EE0000000000000, !dbg !32
  %prod.i.044.0.i45 = select i1 %288, float %317, float %.034.i44, !dbg !32
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not34.i82 = icmp eq i32 %318, 0, !dbg !32
  %319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %310, float %prod.i.044.0.i45, float %310) #4, !dbg !32
  %320 = tail call float @llvm.nvvm.fma.rn.f(float %310, float %prod.i.044.0.i45, float %310) #4, !dbg !32
  %.014.i83 = select i1 %.not34.i82, float %320, float %319, !dbg !32
  br label %__internal_accurate_powf.exit.i56, !dbg !32

__internal_accurate_powf.exit.i56:                ; preds = %__internal_fmad.exit.i.i81, %__nv_powf.exit
  %t.i.0.i57 = phi float [ %.014.i83, %__internal_fmad.exit.i.i81 ], [ 0x7FF0000000000000, %__nv_powf.exit ], !dbg !32
  %321 = fcmp oeq float %46, 0.000000e+00, !dbg !32
  br i1 %321, label %322, label %__internal_powf_corner_cases.exit.i58, !dbg !32

322:                                              ; preds = %__internal_accurate_powf.exit.i56
  %323 = fadd float %46, %46, !dbg !32
  %324 = bitcast float %323 to i32, !dbg !32
  %325 = or i32 %324, 2139095040, !dbg !32
  %326 = bitcast i32 %325 to float, !dbg !32
  %327 = select i1 %201, float %326, float 0x7FF0000000000000, !dbg !32
  br label %__internal_powf_corner_cases.exit.i58, !dbg !32

__internal_powf_corner_cases.exit.i58:            ; preds = %__internal_accurate_powf.exit.i56, %322
  %.212.i59 = phi float [ %327, %322 ], [ %t.i.0.i57, %__internal_accurate_powf.exit.i56 ], !dbg !32
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not35.i60 = icmp eq i32 %328, 0, !dbg !32
  %.01.i61 = select i1 %.not35.i60, float %204, float %203, !dbg !32
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not36.i62 = icmp eq i32 %329, 0, !dbg !32
  %.02.i63 = select i1 %.not36.i62, float %121, float %120, !dbg !32
  %330 = fadd float %.01.i61, %.02.i63, !dbg !32
  %331 = bitcast float %330 to i32, !dbg !32
  %332 = icmp sgt i32 %331, 2139095039, !dbg !32
  br i1 %332, label %__nv_isnanf.exit.i.i66, label %__nv_powf.exit84, !dbg !32

__nv_isnanf.exit.i.i66:                           ; preds = %__internal_powf_corner_cases.exit.i58
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not37.i67 = icmp eq i32 %333, 0, !dbg !32
  %.06.i68 = select i1 %.not37.i67, float %204, float %203, !dbg !32
  %334 = fcmp uno float %.06.i68, 0.000000e+00, !dbg !32
  br i1 %334, label %337, label %__nv_isnanf.exit11.i.i69, !dbg !32

__nv_isnanf.exit11.i.i69:                         ; preds = %__nv_isnanf.exit.i.i66
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not38.i70 = icmp eq i32 %335, 0, !dbg !32
  %.07.i71 = select i1 %.not38.i70, float %121, float %120, !dbg !32
  %336 = fcmp uno float %.07.i71, 0.000000e+00, !dbg !32
  br i1 %336, label %337, label %__nv_isinff.exit8.i.i72, !dbg !32

337:                                              ; preds = %__nv_isnanf.exit11.i.i69, %__nv_isnanf.exit.i.i66
  %338 = fadd float %46, 0xBFD5555560000000, !dbg !32
  br label %__nv_powf.exit84, !dbg !32

__nv_isinff.exit8.i.i72:                          ; preds = %__nv_isnanf.exit11.i.i69
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not39.i73 = icmp eq i32 %339, 0, !dbg !32
  %.05.i74 = select i1 %.not39.i73, float %121, float %120, !dbg !32
  %340 = fcmp oeq float %.05.i74, 0x7FF0000000000000, !dbg !32
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not41.i79 = icmp eq i32 %341, 0, !dbg !32
  %.04.i80 = select i1 %.not41.i79, float %204, float %203, !dbg !32
  br i1 %340, label %__nv_fabsf.exit5.i.i78, label %__nv_isinff.exit.i.i75, !dbg !32

__nv_fabsf.exit5.i.i78:                           ; preds = %__nv_isinff.exit8.i.i72
  %342 = fcmp ogt float %.04.i80, 1.000000e+00, !dbg !32
  %343 = select i1 %342, float 0.000000e+00, float 0x7FF0000000000000, !dbg !32
  br label %__nv_powf.exit84, !dbg !32

__nv_isinff.exit.i.i75:                           ; preds = %__nv_isinff.exit8.i.i72
  %344 = fcmp oeq float %.04.i80, 0x7FF0000000000000, !dbg !32
  br i1 %344, label %345, label %__nv_powf.exit84, !dbg !32

345:                                              ; preds = %__nv_isinff.exit.i.i75
  br label %__nv_powf.exit84, !dbg !32

__nv_powf.exit84:                                 ; preds = %__internal_powf_corner_cases.exit.i58, %337, %__nv_fabsf.exit5.i.i78, %__nv_isinff.exit.i.i75, %345
  %.3.i64 = phi float [ %.212.i59, %__internal_powf_corner_cases.exit.i58 ], [ %338, %337 ], [ %343, %__nv_fabsf.exit5.i.i78 ], [ 0.000000e+00, %345 ], [ %.212.i59, %__nv_isinff.exit.i.i75 ], !dbg !32
  %346 = fcmp oeq float %45, 1.000000e+00, !dbg !32
  %t.0.i = select i1 %346, float 1.000000e+00, float %.3.i, !dbg !32
  %347 = fcmp oeq float %46, 1.000000e+00, !dbg !32
  %t.0.i65 = select i1 %347, float 1.000000e+00, float %.3.i64, !dbg !32
  %348 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %t.0.i) #4, !dbg !34
  %349 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %t.0.i65) #4, !dbg !34
  %350 = insertelement <2 x float> poison, float %35, i64 0, !dbg !35
  %351 = insertelement <2 x float> %350, float %348, i64 1, !dbg !35
  %352 = fmul <2 x float> %351, %351, !dbg !35
  %353 = fmul <2 x float> %351, %352, !dbg !36
  %354 = fadd <2 x float> %353, splat (float -1.000000e+00), !dbg !37
  %355 = fmul <2 x float> %354, <float 0xBFD5555560000000, float 0x3FD5555560000000>, !dbg !38
  %356 = insertelement <2 x float> poison, float %19, i64 0, !dbg !39
  %357 = shufflevector <2 x float> %356, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !39
  %358 = fmul <2 x float> %355, %357, !dbg !39
  %359 = insertelement <2 x float> poison, float %36, i64 0, !dbg !35
  %360 = insertelement <2 x float> %359, float %349, i64 1, !dbg !35
  %361 = fmul <2 x float> %360, %360, !dbg !35
  %362 = fmul <2 x float> %360, %361, !dbg !36
  %363 = fadd <2 x float> %362, splat (float -1.000000e+00), !dbg !37
  %364 = fmul <2 x float> %363, <float 0xBFD5555560000000, float 0x3FD5555560000000>, !dbg !38
  %365 = insertelement <2 x float> poison, float %20, i64 0, !dbg !39
  %366 = shufflevector <2 x float> %365, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !39
  %367 = fmul <2 x float> %364, %366, !dbg !39
  %shift = shufflevector <2 x float> %358, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %368 = fadd <2 x float> %358, %shift, !dbg !40
  %369 = extractelement <2 x float> %368, i64 0, !dbg !40
  %shift85 = shufflevector <2 x float> %367, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %370 = fadd <2 x float> %367, %shift85, !dbg !40
  %371 = extractelement <2 x float> %370, i64 0, !dbg !40
  %372 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %19) #4, !dbg !41
  %373 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %20) #4, !dbg !41
  %374 = fmul float %372, %372, !dbg !42
  %375 = fmul float %373, %373, !dbg !42
  %376 = fmul float %374, 5.000000e-01, !dbg !43
  %377 = fmul float %375, 5.000000e-01, !dbg !43
  %378 = fadd float %369, %376, !dbg !44
  %379 = fadd float %371, %377, !dbg !44
  %380 = getelementptr float, ptr addrspace(1) %3, i64 %14, !dbg !45
  %381 = bitcast float %378 to i32, !dbg !46
  %382 = bitcast float %379 to i32, !dbg !46
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %381, i32 %382, ptr addrspace(1) %380, i1 %12) #4, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py", directory: "inductor_cache/42")
!4 = !{ptr @triton_poi_fused_add_div_max_mul_neg_pow_relu_sub_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_max_mul_neg_pow_relu_sub_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_max_mul_neg_pow_relu_sub_5", linkageName: "triton_poi_fused_add_div_max_mul_neg_pow_relu_sub_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 31, scope: !7)
!19 = !DILocation(line: 27, column: 36, scope: !7)
!20 = !DILocation(line: 28, column: 31, scope: !7)
!21 = !DILocation(line: 28, column: 36, scope: !7)
!22 = !DILocation(line: 30, column: 18, scope: !7)
!23 = !DILocation(line: 32, column: 18, scope: !7)
!24 = !DILocation(line: 40, column: 20, scope: !7)
!25 = !DILocation(line: 42, column: 20, scope: !7)
!26 = !DILocation(line: 43, column: 20, scope: !7)
!27 = !DILocation(line: 118, column: 15, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !7, file: !29, discriminator: 0)
!29 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!30 = !DILocation(line: 45, column: 42, scope: !7)
!31 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !30)
!32 = !DILocation(line: 46, column: 33, scope: !7)
!33 = !{i32 21046}
!34 = !DILocation(line: 47, column: 19, scope: !7)
!35 = !DILocation(line: 33, column: 18, scope: !7)
!36 = !DILocation(line: 34, column: 18, scope: !7)
!37 = !DILocation(line: 36, column: 18, scope: !7)
!38 = !DILocation(line: 38, column: 19, scope: !7)
!39 = !DILocation(line: 39, column: 19, scope: !7)
!40 = !DILocation(line: 53, column: 20, scope: !7)
!41 = !DILocation(line: 54, column: 19, scope: !7)
!42 = !DILocation(line: 55, column: 20, scope: !7)
!43 = !DILocation(line: 57, column: 20, scope: !7)
!44 = !DILocation(line: 58, column: 20, scope: !7)
!45 = !DILocation(line: 59, column: 25, scope: !7)
!46 = !DILocation(line: 59, column: 37, scope: !7)
!47 = !DILocation(line: 59, column: 4, scope: !7)
