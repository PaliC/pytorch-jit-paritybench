//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_native_group_norm_15 // -- Begin function triton_per_fused_native_group_norm_15
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_native_group_norm_15
.visible .entry triton_per_fused_native_group_norm_15(
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_15_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_15_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_15_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_15_param_3,
	.param .u32 triton_per_fused_native_group_norm_15_param_4,
	.param .u32 triton_per_fused_native_group_norm_15_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<86>;
	.reg .f32 	%f<37>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_per_fused_native_group_norm_15_param_0];
	ld.param.u64 	%rd7, [triton_per_fused_native_group_norm_15_param_1];
$L__tmp0:
	.loc	1 23 28                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:25:21
	setp.lt.s32 	%p1, %r1, 6144;
	ld.param.u64 	%rd8, [triton_per_fused_native_group_norm_15_param_2];
	ld.param.u64 	%rd9, [triton_per_fused_native_group_norm_15_param_3];
	.loc	1 26 34                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:26:34
	mov.u32 	%r24, %tid.x;
	and.b32  	%r25, %r24, 31;
	and.b32  	%r26, %r24, 63;
	.loc	1 31 21                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:31:21
	mul.hi.s32 	%r27, %r1, 715827883;
	shr.s32 	%r28, %r27, 2;
	shr.u32 	%r29, %r27, 31;
	add.s32 	%r30, %r28, %r29;
	.loc	1 30 19                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:30:19
	mul.lo.s32 	%r31, %r30, 24;
	sub.s32 	%r32, %r1, %r31;
	.loc	1 31 27                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:31:27
	shr.s32 	%r33, %r30, 31;
	shr.u32 	%r34, %r33, 26;
	add.s32 	%r35, %r30, %r34;
	and.b32  	%r36, %r35, 33554368;
	sub.s32 	%r37, %r30, %r36;
	.loc	1 32 19                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:32:19
	shr.s32 	%r38, %r27, 8;
	add.s32 	%r39, %r38, %r29;
	.loc	1 34 32                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:34:32
	shl.b32 	%r40, %r32, 3;
	.loc	1 34 53                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:34:53
	shl.b32 	%r41, %r37, 7;
	.loc	1 34 49                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:34:49
	or.b32  	%r42, %r41, %r26;
	or.b32  	%r43, %r42, 64;
	.loc	1 34 98                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:34:98
	bfe.s32 	%r44, %r37, 24, 1;
	shr.u32 	%r45, %r44, 22;
	add.s32 	%r46, %r42, %r45;
	shr.s32 	%r47, %r46, 10;
	.loc	1 34 59                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:34:59
	and.b32  	%r48, %r46, -1024;
	sub.s32 	%r49, %r42, %r48;
	.loc	1 34 98                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:34:98
	add.s32 	%r50, %r43, %r45;
	shr.s32 	%r51, %r50, 10;
	.loc	1 34 59                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:34:59
	and.b32  	%r52, %r50, -1024;
	sub.s32 	%r53, %r43, %r52;
	.loc	1 34 37                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:34:37
	mad.lo.s32 	%r54, %r39, 196608, %r40;
	.loc	1 34 68                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:34:68
	add.s32 	%r55, %r54, %r47;
	.loc	1 34 81                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:34:81
	mad.lo.s32 	%r56, %r49, 192, %r55;
	.loc	1 34 68                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:34:68
	add.s32 	%r57, %r54, %r51;
	.loc	1 34 81                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:34:81
	mad.lo.s32 	%r58, %r53, 192, %r57;
	.loc	1 34 30                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:34:30
	mul.wide.s32 	%rd10, %r56, 4;
	add.s64 	%rd1, %rd6, %rd10;
	mul.wide.s32 	%rd11, %r58, 4;
	add.s64 	%rd2, %rd6, %rd11;
	mov.b32 	%r3, 0;
	.loc	1 34 106                        // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:34:106
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3, %f1, %f2;
	selp.f32 	%f4, %f3, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f4;
	shfl.sync.bfly.b32	%r60, %r59, 16, 31, -1;
	mov.b32 	%f5, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f4, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f6;
	shfl.sync.bfly.b32	%r62, %r61, 8, 31, -1;
	mov.b32 	%f7, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f6, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f8;
	shfl.sync.bfly.b32	%r64, %r63, 4, 31, -1;
	mov.b32 	%f9, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f10;
	shfl.sync.bfly.b32	%r66, %r65, 2, 31, -1;
	mov.b32 	%f11, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f12;
	shfl.sync.bfly.b32	%r68, %r67, 1, 31, -1;
	mov.b32 	%f13, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p5, %r25, 0;
	shr.u32 	%r69, %r24, 3;
	and.b32  	%r70, %r69, 4;
	mov.u32 	%r71, global_smem;
	add.s32 	%r6, %r71, %r70;
	mov.b32 	%r7, %f14;
	// begin inline asm
	@%p5 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r24, 2;
	shl.b32 	%r72, %r24, 2;
	add.s32 	%r9, %r71, %r72;
	// begin inline asm
	@%p6 ld.shared.b32 %r8, [ %r9 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r8;
	shfl.sync.bfly.b32	%r73, %r8, 1, 31, -1;
	mov.b32 	%f16, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r74, %r24, 1;
	setp.eq.b32 	%p14, %r74, 1;
	not.pred 	%p15, %p14;
	and.pred  	%p7, %p6, %p15;
	mov.b32 	%r11, %f17;
	// begin inline asm
	@%p7 st.shared.b32 [ %r9 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 42 19                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:42:19
	ld.shared.u32 	%r13, [global_smem];
	mov.b32 	%r14, 1124073472;
	// begin inline asm
	div.full.f32 %r21, %r13, %r14;
	// end inline asm
	mov.b32 	%f18, %r21;
	.loc	1 43 19                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:43:19
	sub.f32 	%f19, %f1, %f18;
	sub.f32 	%f20, %f2, %f18;
	.loc	1 44 20                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:44:20
	mul.f32 	%f21, %f20, %f20;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f22, %f19, %f19, %f21;
	selp.f32 	%f23, %f22, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f23;
	shfl.sync.bfly.b32	%r76, %r75, 16, 31, -1;
	mov.b32 	%f24, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f25;
	shfl.sync.bfly.b32	%r78, %r77, 8, 31, -1;
	mov.b32 	%f26, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f27;
	shfl.sync.bfly.b32	%r80, %r79, 4, 31, -1;
	mov.b32 	%f28, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f29;
	shfl.sync.bfly.b32	%r82, %r81, 2, 31, -1;
	mov.b32 	%f30, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f31;
	shfl.sync.bfly.b32	%r84, %r83, 1, 31, -1;
	mov.b32 	%f32, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r16, %f33;
	// begin inline asm
	@%p5 st.shared.b32 [ %r6 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b32 %r17, [ %r9 + 0 ];
	// end inline asm
	mov.b32 	%f34, %r17;
	shfl.sync.bfly.b32	%r85, %r17, 1, 31, -1;
	mov.b32 	%f35, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r20, %f36;
	// begin inline asm
	@%p7 st.shared.b32 [ %r9 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r22, [global_smem];
$L__tmp4:
	.loc	1 48 25                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:48:25
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd3, %rd7, %rd12;
	.loc	1 48 37                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:48:37
	setp.eq.s32 	%p16, %r26, 0;
	and.pred  	%p11, %p16, %p1;
	// begin inline asm
	@%p11 st.global.b32 [ %rd3 + 0 ], { %r21 };
	// end inline asm
	.loc	1 49 25                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:49:25
	add.s64 	%rd4, %rd8, %rd12;
	.loc	1 49 37                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:49:37
	// begin inline asm
	@%p11 st.global.b32 [ %rd4 + 0 ], { %r22 };
	// end inline asm
	.loc	1 50 25                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:50:25
	add.s64 	%rd5, %rd9, %rd12;
	.loc	1 50 36                         // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:50:36
	// begin inline asm
	@%p11 st.global.b32 [ %rd5 + 0 ], { %r14 };
	// end inline asm
	.loc	1 50 4                          // c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py:50:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 206                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 50
.b8 102
.b8 101
.b8 104
.b8 112
.b8 118
.b8 118
.b8 102
.b8 54
.b8 117
.b8 54
.b8 51
.b8 115
.b8 55
.b8 53
.b8 110
.b8 109
.b8 118
.b8 113
.b8 110
.b8 104
.b8 99
.b8 100
.b8 99
.b8 114
.b8 50
.b8 50
.b8 116
.b8 53
.b8 118
.b8 122
.b8 107
.b8 110
.b8 111
.b8 113
.b8 117
.b8 97
.b8 111
.b8 107
.b8 122
.b8 54
.b8 117
.b8 115
.b8 117
.b8 118
.b8 50
.b8 51
.b8 53
.b8 51
.b8 52
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 50
.b8 102
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x28 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 49
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
