#loc = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":19:0)
#loc1 = loc(unknown)
#loc24 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":39:24)
#loc31 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":47:26)
#loc41 = loc(callsite(#loc1 at #loc24))
#loc44 = loc(callsite(#loc1 at #loc31))
module {
  tt.func public @triton_per_fused_native_group_norm_15(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":19:0)) attributes {noinline = false} {
    %c196608_i32 = arith.constant 196608 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c1536_i32 = arith.constant 1536 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c24_i32 = arith.constant 24 : i32 loc(#loc1)
    %c6144_i32 = arith.constant 6144 : i32 loc(#loc1)
    %cst = arith.constant dense<1.280000e+02> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x128xf32> loc(#loc1)
    %cst_1 = arith.constant dense<192> : tensor<1x128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<1024> : tensor<1x128xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c6144_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc5)
    %5 = arith.remsi %0, %c24_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c24_i32 : i32 loc(#loc7)
    %7 = arith.remsi %6, %c64_i32 : i32 loc(#loc8)
    %8 = arith.divsi %0, %c1536_i32 : i32 loc(#loc9)
    %9 = arith.muli %5, %c8_i32 : i32 loc(#loc10)
    %10 = arith.muli %7, %c128_i32 : i32 loc(#loc11)
    %11 = tt.splat %10 : i32 -> tensor<1x128xi32> loc(#loc12)
    %12 = arith.addi %4, %11 : tensor<1x128xi32> loc(#loc12)
    %13 = arith.remsi %12, %cst_2 : tensor<1x128xi32> loc(#loc13)
    %14 = arith.muli %13, %cst_1 : tensor<1x128xi32> loc(#loc14)
    %15 = tt.splat %9 : i32 -> tensor<1x128xi32> loc(#loc15)
    %16 = arith.addi %15, %14 : tensor<1x128xi32> loc(#loc15)
    %17 = arith.muli %8, %c196608_i32 : i32 loc(#loc16)
    %18 = tt.splat %17 : i32 -> tensor<1x128xi32> loc(#loc17)
    %19 = arith.addi %16, %18 : tensor<1x128xi32> loc(#loc17)
    %20 = arith.divsi %12, %cst_2 : tensor<1x128xi32> loc(#loc18)
    %21 = arith.addi %19, %20 : tensor<1x128xi32> loc(#loc19)
    %22 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc20)
    %23 = tt.addptr %22, %21 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc20)
    %24 = tt.splat %1 : i1 -> tensor<1x128xi1> loc(#loc21)
    %25 = tt.load %23, %24, %cst_0 evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>> loc(#loc21)
    %26 = arith.select %24, %25, %cst_0 : tensor<1x128xi1>, tensor<1x128xf32> loc(#loc22)
    %27 = "tt.reduce"(%26) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc24)), %arg7: f32 loc(callsite(#loc1 at #loc24))):
      %42 = arith.addf %arg6, %arg7 : f32 loc(#loc45)
      tt.reduce.return %42 : f32 loc(#loc40)
    }) : (tensor<1x128xf32>) -> tensor<1xf32> loc(#loc40)
    %28 = tt.expand_dims %27 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc26)
    %29 = arith.divf %28, %cst : tensor<1x1xf32> loc(#loc27)
    %30 = tt.broadcast %29 : tensor<1x1xf32> -> tensor<1x128xf32> loc(#loc28)
    %31 = arith.subf %25, %30 : tensor<1x128xf32> loc(#loc28)
    %32 = arith.mulf %31, %31 : tensor<1x128xf32> loc(#loc29)
    %33 = arith.select %24, %32, %cst_0 : tensor<1x128xi1>, tensor<1x128xf32> loc(#loc30)
    %34 = "tt.reduce"(%33) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc31)), %arg7: f32 loc(callsite(#loc1 at #loc31))):
      %42 = arith.addf %arg6, %arg7 : f32 loc(#loc46)
      tt.reduce.return %42 : f32 loc(#loc43)
    }) : (tensor<1x128xf32>) -> tensor<1xf32> loc(#loc43)
    %35 = tt.expand_dims %34 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc32)
    %36 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc33)
    %37 = tt.splat %36 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc33)
    tt.store %37, %29, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc34)
    %38 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc35)
    %39 = tt.splat %38 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc35)
    tt.store %39, %35, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc36)
    %40 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc37)
    %41 = tt.splat %40 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc37)
    tt.store %41, %cst, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc38)
    tt.return loc(#loc39)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":23:28)
#loc3 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":25:21)
#loc4 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":26:26)
#loc5 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":26:34)
#loc6 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":30:19)
#loc7 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":31:21)
#loc8 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":31:27)
#loc9 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":32:19)
#loc10 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":34:32)
#loc11 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":34:53)
#loc12 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":34:49)
#loc13 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":34:59)
#loc14 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":34:43)
#loc15 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":34:37)
#loc16 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":34:75)
#loc17 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":34:68)
#loc18 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":34:98)
#loc19 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":34:81)
#loc20 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":34:30)
#loc21 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":34:106)
#loc22 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":38:33)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc26 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":39:27)
#loc27 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":42:19)
#loc28 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":43:19)
#loc29 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":44:20)
#loc30 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":46:35)
#loc32 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":47:29)
#loc33 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":48:25)
#loc34 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":48:37)
#loc35 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":49:25)
#loc36 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":49:37)
#loc37 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":50:25)
#loc38 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":50:36)
#loc39 = loc("inductor_cache/2f/c2fehpvvf6u63s75nmvqnhcdcr22t5vzknoquaokz6usuv23534o.py":50:4)
#loc40 = loc(callsite(#loc23 at #loc24))
#loc42 = loc(callsite(#loc25 at #loc23))
#loc43 = loc(callsite(#loc23 at #loc31))
#loc45 = loc(callsite(#loc42 at #loc24))
#loc46 = loc(callsite(#loc42 at #loc31))
