#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_cat_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<2.000000e-01> : tensor<512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<4096> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<160> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<655360> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<64> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<262144> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<96> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<-64> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<131072> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<-128> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<-96> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<128> : tensor<512xi64, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_1 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_2 : tensor<512xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %4, %cst_1 : tensor<512xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_3 : tensor<512xi32, #blocked> loc(#loc9)
    %9 = arith.extsi %6 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc10)
    %10 = arith.cmpi slt, %9, %cst_4 : tensor<512xi64, #blocked> loc(#loc10)
    %11 = arith.muli %6, %cst_1 : tensor<512xi32, #blocked> loc(#loc11)
    %12 = arith.addi %7, %11 : tensor<512xi32, #blocked> loc(#loc12)
    %13 = arith.muli %8, %cst_5 : tensor<512xi32, #blocked> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<512xi32, #blocked> loc(#loc14)
    %15 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc15)
    %16 = tt.addptr %15, %14 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc15)
    %17 = tt.load %16, %10, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc16)
    %18 = arith.cmpi sge, %9, %cst_4 : tensor<512xi64, #blocked> loc(#loc17)
    %19 = arith.cmpi slt, %9, %cst_6 : tensor<512xi64, #blocked> loc(#loc18)
    %20 = arith.andi %18, %19 : tensor<512xi1, #blocked> loc(#loc19)
    %21 = arith.addi %6, %cst_7 : tensor<512xi32, #blocked> loc(#loc20)
    %22 = arith.muli %21, %cst_1 : tensor<512xi32, #blocked> loc(#loc21)
    %23 = arith.addi %7, %22 : tensor<512xi32, #blocked> loc(#loc22)
    %24 = arith.muli %8, %cst_8 : tensor<512xi32, #blocked> loc(#loc23)
    %25 = arith.addi %23, %24 : tensor<512xi32, #blocked> loc(#loc24)
    %26 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc25)
    %27 = tt.addptr %26, %25 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc25)
    %28 = tt.load %27, %20, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc26)
    %29 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc27)
    %30 = tt.addptr %29, %21 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc27)
    %31 = tt.load %30, %20, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc28)
    %32 = arith.addf %28, %31 : tensor<512xf32, #blocked> loc(#loc29)
    %33 = arith.cmpf ogt, %32, %cst : tensor<512xf32, #blocked> loc(#loc30)
    %34 = arith.mulf %32, %cst_0 : tensor<512xf32, #blocked> loc(#loc31)
    %35 = arith.select %33, %32, %34 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc32)
    %36 = arith.cmpi sge, %9, %cst_6 : tensor<512xi64, #blocked> loc(#loc33)
    %37 = arith.cmpi slt, %9, %cst_11 : tensor<512xi64, #blocked> loc(#loc34)
    %38 = arith.andi %36, %37 : tensor<512xi1, #blocked> loc(#loc35)
    %39 = arith.addi %6, %cst_10 : tensor<512xi32, #blocked> loc(#loc36)
    %40 = arith.muli %39, %cst_1 : tensor<512xi32, #blocked> loc(#loc37)
    %41 = arith.addi %7, %40 : tensor<512xi32, #blocked> loc(#loc38)
    %42 = arith.addi %41, %24 : tensor<512xi32, #blocked> loc(#loc39)
    %43 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc40)
    %44 = tt.addptr %43, %42 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc40)
    %45 = tt.load %44, %38, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc41)
    %46 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc42)
    %47 = tt.addptr %46, %39 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc42)
    %48 = tt.load %47, %38, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc43)
    %49 = arith.addf %45, %48 : tensor<512xf32, #blocked> loc(#loc44)
    %50 = arith.cmpf ogt, %49, %cst : tensor<512xf32, #blocked> loc(#loc45)
    %51 = arith.mulf %49, %cst_0 : tensor<512xf32, #blocked> loc(#loc46)
    %52 = arith.select %50, %49, %51 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc47)
    %53 = arith.cmpi sge, %9, %cst_11 : tensor<512xi64, #blocked> loc(#loc48)
    %54 = arith.addi %6, %cst_9 : tensor<512xi32, #blocked> loc(#loc49)
    %55 = arith.muli %54, %cst_1 : tensor<512xi32, #blocked> loc(#loc50)
    %56 = arith.addi %7, %55 : tensor<512xi32, #blocked> loc(#loc51)
    %57 = arith.addi %56, %24 : tensor<512xi32, #blocked> loc(#loc52)
    %58 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc53)
    %59 = tt.addptr %58, %57 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc53)
    %60 = tt.load %59, %53, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc54)
    %61 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc55)
    %62 = tt.addptr %61, %54 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc55)
    %63 = tt.load %62, %53, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc56)
    %64 = arith.addf %60, %63 : tensor<512xf32, #blocked> loc(#loc57)
    %65 = arith.cmpf ogt, %64, %cst : tensor<512xf32, #blocked> loc(#loc58)
    %66 = arith.mulf %64, %cst_0 : tensor<512xf32, #blocked> loc(#loc59)
    %67 = arith.select %65, %64, %66 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc60)
    %68 = arith.select %53, %67, %cst : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc61)
    %69 = arith.select %38, %52, %68 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc70)
    %70 = arith.select %20, %35, %69 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc71)
    %71 = arith.select %10, %17, %70 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc66)
    %72 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc67)
    %73 = tt.addptr %72, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc67)
    tt.store %73, %71 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc68)
    tt.return loc(#loc69)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":21:28)
#loc3 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":21:33)
#loc4 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":22:36)
#loc5 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":22:23)
#loc6 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":24:21)
#loc7 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":24:29)
#loc8 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":25:19)
#loc9 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":26:19)
#loc10 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":32:18)
#loc11 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":33:41)
#loc12 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":33:35)
#loc13 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":33:54)
#loc14 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":33:47)
#loc15 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":33:30)
#loc16 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":33:59)
#loc17 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":34:19)
#loc18 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":36:18)
#loc19 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":37:18)
#loc20 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":38:50)
#loc21 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":38:42)
#loc22 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":38:36)
#loc23 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":38:63)
#loc24 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":38:56)
#loc25 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":38:31)
#loc26 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":38:68)
#loc27 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":39:31)
#loc28 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":39:44)
#loc29 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":40:20)
#loc30 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":42:20)
#loc31 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":44:20)
#loc32 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":45:35)
#loc33 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":48:20)
#loc34 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":50:19)
#loc35 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":51:20)
#loc36 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":52:50)
#loc37 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":52:42)
#loc38 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":52:36)
#loc39 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":52:56)
#loc40 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":52:31)
#loc41 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":52:68)
#loc42 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":53:31)
#loc43 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":53:44)
#loc44 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":54:20)
#loc45 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":56:20)
#loc46 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":58:20)
#loc47 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":59:35)
#loc48 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":62:20)
#loc49 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":65:51)
#loc50 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":65:42)
#loc51 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":65:36)
#loc52 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":65:57)
#loc53 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":65:31)
#loc54 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":65:69)
#loc55 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":66:31)
#loc56 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":66:45)
#loc57 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":67:20)
#loc58 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":69:20)
#loc59 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":71:20)
#loc60 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":72:35)
#loc61 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":74:35)
#loc62 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":75:35)
#loc63 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":61:35)
#loc64 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":76:34)
#loc65 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":47:34)
#loc66 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":77:33)
#loc67 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":78:25)
#loc68 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":78:37)
#loc69 = loc("inductor_cache/kk/ckkiqn7lw3ekwoc7adgq4f7kh662l3uir4azp63ajh36b3mseqa4.py":78:4)
#loc70 = loc(fused[#loc62, #loc63])
#loc71 = loc(fused[#loc64, #loc65])
