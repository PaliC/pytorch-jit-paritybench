#loc = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":19:0)
module {
  tt.func public @triton_poi_fused_avg_pool2d_67(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":19:0), %arg3: i32 loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<528> : tensor<4x1xi32> loc(#loc1)
    %cst_0 = arith.constant dense<25> : tensor<1x256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<10> : tensor<4x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<6> : tensor<4x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<528> : tensor<1x256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<2> : tensor<4x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<4x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<2112> : tensor<1x256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x256xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x256xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_6 : tensor<1x256xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.muli %7, %c4_i32 : i32 loc(#loc9)
    %9 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32> loc(#loc10)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<4xi32> -> tensor<4x1xi32> loc(#loc11)
    %11 = tt.splat %8 : i32 -> tensor<4x1xi32> loc(#loc12)
    %12 = arith.addi %11, %10 : tensor<4x1xi32> loc(#loc12)
    %13 = arith.cmpi slt, %12, %cst_5 : tensor<4x1xi32> loc(#loc13)
    %14 = arith.remsi %12, %cst_4 : tensor<4x1xi32> loc(#loc14)
    %15 = arith.divsi %12, %cst_4 : tensor<4x1xi32> loc(#loc15)
    %16 = arith.remsi %5, %cst_3 : tensor<1x256xi32> loc(#loc16)
    %17 = arith.divsi %5, %cst_3 : tensor<1x256xi32> loc(#loc17)
    %18 = arith.muli %14, %cst_4 : tensor<4x1xi32> loc(#loc18)
    %19 = arith.addi %18, %cst_2 : tensor<4x1xi32> loc(#loc19)
    %20 = arith.muli %15, %cst_1 : tensor<4x1xi32> loc(#loc20)
    %21 = arith.addi %19, %20 : tensor<4x1xi32> loc(#loc21)
    %22 = arith.muli %5, %cst_0 : tensor<1x256xi32> loc(#loc22)
    %23 = tt.broadcast %21 : tensor<4x1xi32> -> tensor<4x256xi32> loc(#loc23)
    %24 = tt.broadcast %22 : tensor<1x256xi32> -> tensor<4x256xi32> loc(#loc23)
    %25 = arith.addi %23, %24 : tensor<4x256xi32> loc(#loc23)
    %26 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<4x256x!tt.ptr<f32>> loc(#loc24)
    %27 = tt.addptr %26, %25 : tensor<4x256x!tt.ptr<f32>>, tensor<4x256xi32> loc(#loc24)
    %28 = tt.broadcast %13 : tensor<4x1xi1> -> tensor<4x256xi1> loc(#loc25)
    %29 = tt.broadcast %6 : tensor<1x256xi1> -> tensor<4x256xi1> loc(#loc25)
    %30 = arith.andi %28, %29 : tensor<4x256xi1> loc(#loc25)
    %31 = tt.load %27, %30 evictionPolicy = evict_last : tensor<4x256x!tt.ptr<f32>> loc(#loc26)
    %32 = arith.muli %12, %cst : tensor<4x1xi32> loc(#loc27)
    %33 = tt.broadcast %16 : tensor<1x256xi32> -> tensor<4x256xi32> loc(#loc28)
    %34 = tt.broadcast %32 : tensor<4x1xi32> -> tensor<4x256xi32> loc(#loc28)
    %35 = arith.addi %33, %34 : tensor<4x256xi32> loc(#loc28)
    %36 = arith.muli %17, %cst_6 : tensor<1x256xi32> loc(#loc29)
    %37 = tt.broadcast %36 : tensor<1x256xi32> -> tensor<4x256xi32> loc(#loc30)
    %38 = arith.addi %35, %37 : tensor<4x256xi32> loc(#loc30)
    %39 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<4x256x!tt.ptr<f32>> loc(#loc31)
    %40 = tt.addptr %39, %38 : tensor<4x256x!tt.ptr<f32>>, tensor<4x256xi32> loc(#loc31)
    tt.store %40, %31, %30 : tensor<4x256x!tt.ptr<f32>> loc(#loc32)
    tt.return loc(#loc33)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":22:28)
#loc3 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":22:33)
#loc4 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":23:36)
#loc5 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":23:44)
#loc6 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":23:23)
#loc7 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":24:21)
#loc8 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":25:28)
#loc9 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":25:33)
#loc10 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":26:36)
#loc11 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":26:44)
#loc12 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":26:23)
#loc13 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":27:21)
#loc14 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":28:19)
#loc15 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":29:19)
#loc16 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":32:19)
#loc17 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":33:19)
#loc18 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":34:36)
#loc19 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":34:34)
#loc20 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":34:44)
#loc21 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":34:41)
#loc22 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":34:52)
#loc23 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":34:49)
#loc24 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":34:30)
#loc25 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":34:65)
#loc26 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":34:57)
#loc27 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":37:34)
#loc28 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":37:30)
#loc29 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":37:44)
#loc30 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":37:39)
#loc31 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":37:25)
#loc32 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":37:55)
#loc33 = loc("inductor_cache/mq/cmquepebd2wo2wfaua6lz3jybgsmwxi6rzzv5cfzd73tojemfqxw.py":37:4)
