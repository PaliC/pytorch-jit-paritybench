; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_clamp_log_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %12, i1 %10) #2, !dbg !16
  %14 = extractvalue { i32, i32 } %13, 0, !dbg !16
  %15 = extractvalue { i32, i32 } %13, 1, !dbg !16
  %16 = bitcast i32 %14 to float, !dbg !16
  %17 = bitcast i32 %15 to float, !dbg !16
  %18 = fcmp ogt float %16, 0x3DDB7CDFE0000000, !dbg !17
  %19 = fcmp ogt float %17, 0x3DDB7CDFE0000000, !dbg !17
  %20 = fcmp uno float %16, 0.000000e+00, !dbg !21
  %21 = fcmp uno float %17, 0.000000e+00, !dbg !21
  %22 = or i1 %18, %20, !dbg !22
  %23 = or i1 %19, %21, !dbg !22
  %24 = select i1 %22, float %16, float 0x3DDB7CDFE0000000, !dbg !23
  %25 = select i1 %23, float %17, float 0x3DDB7CDFE0000000, !dbg !23
  %26 = fcmp olt float %24, 1.000000e+08, !dbg !24
  %27 = fcmp olt float %25, 1.000000e+08, !dbg !24
  %28 = fcmp uno float %24, 0.000000e+00, !dbg !26
  %29 = fcmp uno float %25, 0.000000e+00, !dbg !26
  %30 = or i1 %26, %28, !dbg !27
  %31 = or i1 %27, %29, !dbg !27
  %32 = select i1 %30, float %24, float 1.000000e+08, !dbg !28
  %33 = select i1 %31, float %25, float 1.000000e+08, !dbg !28
  %34 = fcmp olt float %32, 0x3810000000000000, !dbg !29
  %35 = fmul float %32, 0x4160000000000000, !dbg !29
  %.02.i = select i1 %34, float %35, float %32, !dbg !29
  %i.i.0.i = select i1 %34, float -2.300000e+01, float 0.000000e+00, !dbg !29
  %36 = bitcast float %.02.i to i32, !dbg !29
  %37 = add i32 %36, -1059760811, !dbg !29
  %38 = and i32 %37, -8388608, !dbg !29
  %39 = sub i32 %36, %38, !dbg !29
  %40 = bitcast i32 %39 to float, !dbg !29
  %41 = sitofp i32 %38 to float, !dbg !29
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not.i = icmp eq i32 %42, 0, !dbg !29
  %43 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %41, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !29
  %44 = tail call float @llvm.nvvm.fma.rn.f(float %41, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !29
  %.08.i = select i1 %.not.i, float %44, float %43, !dbg !29
  %45 = fadd float %40, -1.000000e+00, !dbg !29
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not1.i = icmp eq i32 %46, 0, !dbg !29
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %45, float 0x3FC2073EC0000000) #2, !dbg !29
  %48 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %45, float 0x3FC2073EC0000000) #2, !dbg !29
  %.010.i = select i1 %.not1.i, float %48, float %47, !dbg !29
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not2.i = icmp eq i32 %49, 0, !dbg !29
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %45, float 0xBFBF19B980000000) #2, !dbg !29
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %45, float 0xBFBF19B980000000) #2, !dbg !29
  %.011.i = select i1 %.not2.i, float %51, float %50, !dbg !29
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not3.i = icmp eq i32 %52, 0, !dbg !29
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %45, float 0x3FC1E52AA0000000) #2, !dbg !29
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %45, float 0x3FC1E52AA0000000) #2, !dbg !29
  %.012.i = select i1 %.not3.i, float %54, float %53, !dbg !29
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not4.i = icmp eq i32 %55, 0, !dbg !29
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %45, float 0xBFC55B1720000000) #2, !dbg !29
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %45, float 0xBFC55B1720000000) #2, !dbg !29
  %.09.i = select i1 %.not4.i, float %57, float %56, !dbg !29
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not5.i = icmp eq i32 %58, 0, !dbg !29
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %45, float 0x3FC99DA160000000) #2, !dbg !29
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %45, float 0x3FC99DA160000000) #2, !dbg !29
  %.05.i = select i1 %.not5.i, float %60, float %59, !dbg !29
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not6.i = icmp eq i32 %61, 0, !dbg !29
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %45, float 0xBFCFFFE440000000) #2, !dbg !29
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %45, float 0xBFCFFFE440000000) #2, !dbg !29
  %.01.i = select i1 %.not6.i, float %63, float %62, !dbg !29
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not7.i = icmp eq i32 %64, 0, !dbg !29
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %45, float 0x3FD5554F00000000) #2, !dbg !29
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %45, float 0x3FD5554F00000000) #2, !dbg !29
  %.0.i = select i1 %.not7.i, float %66, float %65, !dbg !29
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not8.i = icmp eq i32 %67, 0, !dbg !29
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %45, float -5.000000e-01) #2, !dbg !29
  %69 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %45, float -5.000000e-01) #2, !dbg !29
  %.07.i = select i1 %.not8.i, float %69, float %68, !dbg !29
  %70 = fmul float %45, %.07.i, !dbg !29
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not9.i = icmp eq i32 %71, 0, !dbg !29
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %70, float %45, float %45) #2, !dbg !29
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %70, float %45, float %45) #2, !dbg !29
  %.06.i = select i1 %.not9.i, float %73, float %72, !dbg !29
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not10.i = icmp eq i32 %74, 0, !dbg !29
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !29
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !29
  %.04.i = select i1 %.not10.i, float %76, float %75, !dbg !29
  %77 = icmp ugt i32 %36, 2139095039, !dbg !29
  br i1 %77, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !29

__nv_fmaf_rn.exit.i.i:                            ; preds = %3
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not11.i = icmp eq i32 %78, 0, !dbg !29
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !29
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !29
  %.03.i = select i1 %.not11.i, float %80, float %79, !dbg !29
  br label %__nv_logf.exit, !dbg !29

__nv_logf.exit:                                   ; preds = %3, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %3 ], !dbg !29
  %81 = fcmp olt float %33, 0x3810000000000000, !dbg !29
  %82 = fmul float %33, 0x4160000000000000, !dbg !29
  %.02.i1 = select i1 %81, float %82, float %33, !dbg !29
  %i.i.0.i2 = select i1 %81, float -2.300000e+01, float 0.000000e+00, !dbg !29
  %83 = bitcast float %.02.i1 to i32, !dbg !29
  %84 = add i32 %83, -1059760811, !dbg !29
  %85 = and i32 %84, -8388608, !dbg !29
  %86 = sub i32 %83, %85, !dbg !29
  %87 = bitcast i32 %86 to float, !dbg !29
  %88 = sitofp i32 %85 to float, !dbg !29
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not.i3 = icmp eq i32 %89, 0, !dbg !29
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %88, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !29
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %88, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !29
  %.08.i4 = select i1 %.not.i3, float %91, float %90, !dbg !29
  %92 = fadd float %87, -1.000000e+00, !dbg !29
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not1.i5 = icmp eq i32 %93, 0, !dbg !29
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %92, float 0x3FC2073EC0000000) #2, !dbg !29
  %95 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %92, float 0x3FC2073EC0000000) #2, !dbg !29
  %.010.i6 = select i1 %.not1.i5, float %95, float %94, !dbg !29
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not2.i7 = icmp eq i32 %96, 0, !dbg !29
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %92, float 0xBFBF19B980000000) #2, !dbg !29
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %92, float 0xBFBF19B980000000) #2, !dbg !29
  %.011.i8 = select i1 %.not2.i7, float %98, float %97, !dbg !29
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not3.i9 = icmp eq i32 %99, 0, !dbg !29
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %92, float 0x3FC1E52AA0000000) #2, !dbg !29
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %92, float 0x3FC1E52AA0000000) #2, !dbg !29
  %.012.i10 = select i1 %.not3.i9, float %101, float %100, !dbg !29
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not4.i11 = icmp eq i32 %102, 0, !dbg !29
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %92, float 0xBFC55B1720000000) #2, !dbg !29
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %92, float 0xBFC55B1720000000) #2, !dbg !29
  %.09.i12 = select i1 %.not4.i11, float %104, float %103, !dbg !29
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not5.i13 = icmp eq i32 %105, 0, !dbg !29
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %92, float 0x3FC99DA160000000) #2, !dbg !29
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %92, float 0x3FC99DA160000000) #2, !dbg !29
  %.05.i14 = select i1 %.not5.i13, float %107, float %106, !dbg !29
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not6.i15 = icmp eq i32 %108, 0, !dbg !29
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %92, float 0xBFCFFFE440000000) #2, !dbg !29
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %92, float 0xBFCFFFE440000000) #2, !dbg !29
  %.01.i16 = select i1 %.not6.i15, float %110, float %109, !dbg !29
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not7.i17 = icmp eq i32 %111, 0, !dbg !29
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %92, float 0x3FD5554F00000000) #2, !dbg !29
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %92, float 0x3FD5554F00000000) #2, !dbg !29
  %.0.i18 = select i1 %.not7.i17, float %113, float %112, !dbg !29
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not8.i19 = icmp eq i32 %114, 0, !dbg !29
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %92, float -5.000000e-01) #2, !dbg !29
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %92, float -5.000000e-01) #2, !dbg !29
  %.07.i20 = select i1 %.not8.i19, float %116, float %115, !dbg !29
  %117 = fmul float %92, %.07.i20, !dbg !29
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not9.i21 = icmp eq i32 %118, 0, !dbg !29
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %117, float %92, float %92) #2, !dbg !29
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %117, float %92, float %92) #2, !dbg !29
  %.06.i22 = select i1 %.not9.i21, float %120, float %119, !dbg !29
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not10.i23 = icmp eq i32 %121, 0, !dbg !29
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !29
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !29
  %.04.i24 = select i1 %.not10.i23, float %123, float %122, !dbg !29
  %124 = icmp ugt i32 %83, 2139095039, !dbg !29
  br i1 %124, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !29

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not11.i28 = icmp eq i32 %125, 0, !dbg !29
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !29
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !29
  %.03.i29 = select i1 %.not11.i28, float %127, float %126, !dbg !29
  br label %__nv_logf.exit30, !dbg !29

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !29
  %128 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !29
  %r.i.1.i = select i1 %128, float 0xFFF0000000000000, float %r.i.0.i, !dbg !29
  %129 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !29
  %r.i.1.i26 = select i1 %129, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !29
  %130 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !30
  %131 = bitcast float %r.i.1.i to i32, !dbg !31
  %132 = bitcast float %r.i.1.i26 to i32, !dbg !31
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %131, i32 %132, ptr addrspace(1) %130, i1 %10) #2, !dbg !31
  ret void, !dbg !32
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cl62lwntln6zs4ae7g4cavz33dot6rqva4seu6f5khnn4bs2a5jt.py", directory: "inductor_cache/l6")
!4 = !{ptr @triton_poi_fused_clamp_log_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clamp_log_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clamp_log_0", linkageName: "triton_poi_fused_clamp_log_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 118, column: 15, scope: !18, inlinedAt: !20)
!18 = distinct !DILexicalBlockFile(scope: !7, file: !19, discriminator: 0)
!19 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!20 = !DILocation(line: 27, column: 40, scope: !7)
!21 = !DILocation(line: 120, column: 21, scope: !18, inlinedAt: !20)
!22 = !DILocation(line: 120, column: 16, scope: !18, inlinedAt: !20)
!23 = !DILocation(line: 121, column: 29, scope: !18, inlinedAt: !20)
!24 = !DILocation(line: 110, column: 15, scope: !18, inlinedAt: !25)
!25 = !DILocation(line: 29, column: 40, scope: !7)
!26 = !DILocation(line: 112, column: 21, scope: !18, inlinedAt: !25)
!27 = !DILocation(line: 112, column: 16, scope: !18, inlinedAt: !25)
!28 = !DILocation(line: 113, column: 29, scope: !18, inlinedAt: !25)
!29 = !DILocation(line: 30, column: 23, scope: !7)
!30 = !DILocation(line: 31, column: 25, scope: !7)
!31 = !DILocation(line: 31, column: 36, scope: !7)
!32 = !DILocation(line: 31, column: 4, scope: !7)
