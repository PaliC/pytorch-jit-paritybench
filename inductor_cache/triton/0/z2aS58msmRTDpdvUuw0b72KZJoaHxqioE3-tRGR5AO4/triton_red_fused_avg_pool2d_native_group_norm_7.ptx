//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_avg_pool2d_native_group_norm_7 // -- Begin function triton_red_fused_avg_pool2d_native_group_norm_7
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_avg_pool2d_native_group_norm_7
.visible .entry triton_red_fused_avg_pool2d_native_group_norm_7(
	.param .u64 .ptr .global .align 1 triton_red_fused_avg_pool2d_native_group_norm_7_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_avg_pool2d_native_group_norm_7_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_avg_pool2d_native_group_norm_7_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_avg_pool2d_native_group_norm_7_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_avg_pool2d_native_group_norm_7_param_4,
	.param .u32 triton_red_fused_avg_pool2d_native_group_norm_7_param_5,
	.param .u32 triton_red_fused_avg_pool2d_native_group_norm_7_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<69>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<182>;
	.reg .f32 	%f<169>;
	.reg .b64 	%rd<54>;
	.loc	1 19 0                          // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_red_fused_avg_pool2d_native_group_norm_7_param_4];
	ld.param.u64 	%rd8, [triton_red_fused_avg_pool2d_native_group_norm_7_param_3];
	ld.param.u64 	%rd7, [triton_red_fused_avg_pool2d_native_group_norm_7_param_2];
	ld.param.u64 	%rd6, [triton_red_fused_avg_pool2d_native_group_norm_7_param_0];
	ld.param.u64 	%rd12, [triton_red_fused_avg_pool2d_native_group_norm_7_param_1];
$L__tmp0:
	.loc	1 22 28                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:22:28
	// begin inline asm
	mov.u32 %r14, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:22:33
	shl.b32 	%r15, %r14, 6;
	.loc	1 23 44                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:23:44
	mov.u32 	%r1, %tid.x;
	and.b32  	%r2, %r1, 63;
	and.b32  	%r16, %r1, 64;
	bfe.u32 	%r17, %r1, 1, 6;
	.loc	1 23 23                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:23:23
	or.b32  	%r3, %r15, %r2;
	or.b32  	%r4, %r15, %r17;
	.loc	1 24 21                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:24:21
	setp.lt.s32 	%p8, %r3, 128;
	.loc	1 25 33                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:25:33
	bfe.u32 	%r5, %r1, 6, 1;
	shl.b32 	%r18, %r1, 2;
	and.b32  	%r19, %r18, 4;
	.loc	1 36 54                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:36:54
	shl.b32 	%r6, %r3, 12;
	shl.b32 	%r20, %r1, 3;
	and.b32  	%r21, %r20, 504;
	or.b32  	%r22, %r21, %r5;
	and.b32  	%r23, %r18, 252;
	shl.b32 	%r24, %r16, 2;
	or.b32  	%r25, %r23, %r24;
	shl.b32 	%r26, %r21, 1;
	mov.u32 	%r27, global_smem;
	add.s32 	%r28, %r27, %r26;
	shl.b32 	%r29, %r22, 2;
	add.s32 	%r121, %r28, %r29;
	add.s32 	%r123, %r121, 8;
	add.s32 	%r125, %r121, 16;
	add.s32 	%r127, %r121, 24;
	shl.b32 	%r30, %r25, 1;
	and.b32  	%r31, %r30, 1008;
	add.s32 	%r32, %r27, %r31;
	shl.b32 	%r33, %r25, 2;
	add.s32 	%r11, %r32, %r33;
	.loc	1 30 36                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:30:36
	or.b32  	%r12, %r6, 1;
	shl.b32 	%r34, %r14, 16;
	shl.b32 	%r35, %r17, 10;
	or.b32  	%r36, %r34, %r35;
	or.b32  	%r37, %r36, %r19;
	mul.wide.s32 	%rd13, %r37, 4;
	add.s64 	%rd1, %rd12, %rd13;
	shl.b32 	%r13, %r5, 1;
	mov.f32 	%f56, 0f00000000;
	mov.u64 	%rd53, -8;
	mov.u64 	%rd52, 0;
	mov.pred 	%p68, 0;
	mov.f32 	%f145, %f56;
	mov.f32 	%f146, %f56;
	mov.f32 	%f147, %f56;
	mov.f32 	%f148, %f56;
	mov.f32 	%f149, %f56;
	mov.f32 	%f150, %f56;
	mov.f32 	%f151, %f56;
	mov.f32 	%f152, %f56;
	mov.f32 	%f153, %f56;
	mov.f32 	%f154, %f56;
	mov.f32 	%f155, %f56;
	mov.f32 	%f156, %f56;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %._crit_edge
                                        //   in Loop: Header=BB0_1 Depth=1
	.loc	1 24 21                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:24:21
	setp.lt.s32 	%p45, %r4, 128;
	.loc	1 49 62                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:49:62
	selp.f32 	%f153, %f165, %f153, %p8;
	selp.f32 	%f154, %f166, %f154, %p8;
	selp.f32 	%f155, %f167, %f155, %p8;
	selp.f32 	%f156, %f168, %f156, %p8;
	.loc	1 50 58                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:50:58
	selp.f32 	%f149, %f157, %f149, %p8;
	selp.f32 	%f150, %f158, %f150, %p8;
	selp.f32 	%f151, %f159, %f151, %p8;
	selp.f32 	%f152, %f160, %f152, %p8;
	.loc	1 51 66                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:51:66
	selp.f32 	%f145, %f161, %f145, %p8;
	selp.f32 	%f146, %f162, %f146, %p8;
	selp.f32 	%f147, %f163, %f147, %p8;
	selp.f32 	%f148, %f164, %f148, %p8;
	.loc	1 52 50                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:52:50
	add.s64 	%rd47, %rd1, %rd52;
	bar.sync 	0;
	mov.b32 	%r122, %f13;
	mov.pred 	%p48, -1;
	// begin inline asm
	@%p48 st.shared.b32 [ %r121 + 0 ], %r122;
	// end inline asm
	mov.b32 	%r124, %f14;
	// begin inline asm
	@%p48 st.shared.b32 [ %r123 + 0 ], %r124;
	// end inline asm
	mov.b32 	%r126, %f15;
	// begin inline asm
	@%p48 st.shared.b32 [ %r125 + 0 ], %r126;
	// end inline asm
	mov.b32 	%r128, %f16;
	// begin inline asm
	@%p48 st.shared.b32 [ %r127 + 0 ], %r128;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r129, %r130, %r131, %r132}, [%r11];
	// begin inline asm
	@%p45 st.global.v4.b32 [ %rd47 + 0 ], { %r129, %r130, %r131, %r132 };
	// end inline asm
	.loc	1 30 36                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:30:36
	add.s64 	%rd52, %rd52, 32;
	xor.pred 	%p68, %p68, -1;
	setp.lt.u64 	%p47, %rd53, 1016;
	@%p47 bra 	$L__BB0_1;
	bra.uni 	$L__BB0_4;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 33 23                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:33:23
	selp.u16 	%rs1, 1, 0, %p68;
	mul.wide.u16 	%r70, %rs1, 16;
	or.b32  	%r71, %r13, %r70;
	cvt.u64.u32 	%rd30, %r71;
	add.s64 	%rd53, %rd53, 8;
	cvt.u32.u64 	%r72, %rd53;
	and.b32  	%r73, %r72, 8;
	or.b32  	%r74, %r73, %r5;
	.loc	1 36 36                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:36:36
	shl.b32 	%r75, %r74, 1;
	cvt.u32.u64 	%r76, %rd52;
	.loc	1 36 44                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:36:44
	and.b32  	%r77, %r76, 4032;
	.loc	1 36 36                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:36:36
	or.b32  	%r78, %r75, %r77;
	.loc	1 36 41                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:36:41
	or.b32  	%r79, %r78, 4;
	or.b32  	%r80, %r78, 8;
	or.b32  	%r81, %r78, 12;
	or.b32  	%r82, %r75, %r6;
	.loc	1 36 49                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:36:49
	or.b32  	%r83, %r82, %r77;
	or.b32  	%r84, %r79, %r6;
	or.b32  	%r85, %r80, %r6;
	or.b32  	%r86, %r81, %r6;
	.loc	1 36 34                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:36:34
	mul.wide.s32 	%rd31, %r83, 4;
	add.s64 	%rd14, %rd6, %rd31;
	mul.wide.s32 	%rd32, %r84, 4;
	add.s64 	%rd15, %rd6, %rd32;
	mul.wide.s32 	%rd33, %r85, 4;
	add.s64 	%rd16, %rd6, %rd33;
	mul.wide.s32 	%rd34, %r86, 4;
	add.s64 	%rd17, %rd6, %rd34;
	mov.b32 	%r39, 0;
	.loc	1 36 59                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:36:59
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r38 }, [ %rd14 + 0 ];
	@!%p8 mov.u32 %r38, %r39;
	// end inline asm
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r40 }, [ %rd15 + 0 ];
	@!%p8 mov.u32 %r40, %r39;
	// end inline asm
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r42 }, [ %rd16 + 0 ];
	@!%p8 mov.u32 %r42, %r39;
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r44 }, [ %rd17 + 0 ];
	@!%p8 mov.u32 %r44, %r39;
	// end inline asm
	or.b32  	%r87, %r79, %r12;
	or.b32  	%r88, %r80, %r12;
	or.b32  	%r89, %r81, %r12;
	.loc	1 37 34                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:37:34
	add.s64 	%rd18, %rd14, 4;
	mul.wide.s32 	%rd35, %r87, 4;
	add.s64 	%rd19, %rd6, %rd35;
	mul.wide.s32 	%rd36, %r88, 4;
	add.s64 	%rd20, %rd6, %rd36;
	mul.wide.s32 	%rd37, %r89, 4;
	add.s64 	%rd21, %rd6, %rd37;
	.loc	1 37 63                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:37:63
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r46 }, [ %rd18 + 0 ];
	@!%p8 mov.u32 %r46, %r39;
	// end inline asm
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r48 }, [ %rd19 + 0 ];
	@!%p8 mov.u32 %r48, %r39;
	// end inline asm
	// begin inline asm
	mov.u32 %r50, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r50 }, [ %rd20 + 0 ];
	@!%p8 mov.u32 %r50, %r39;
	// end inline asm
	// begin inline asm
	mov.u32 %r52, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r52 }, [ %rd21 + 0 ];
	@!%p8 mov.u32 %r52, %r39;
	// end inline asm
	.loc	1 38 46                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:38:46
	add.s64 	%rd38, %rd52, %rd30;
	cvt.u32.u64 	%r90, %rd38;
	add.s32 	%r91, %r90, 4;
	or.b32  	%r92, %r91, 32;
	add.s32 	%r93, %r90, 8;
	or.b32  	%r94, %r93, 32;
	add.s32 	%r95, %r90, 12;
	or.b32  	%r96, %r95, 32;
	.loc	1 38 54                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:38:54
	or.b32  	%r97, %r82, %r76;
	or.b32  	%r98, %r97, 32;
	add.s32 	%r99, %r92, %r6;
	add.s32 	%r100, %r94, %r6;
	add.s32 	%r101, %r96, %r6;
	.loc	1 38 34                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:38:34
	mul.wide.s32 	%rd39, %r98, 4;
	add.s64 	%rd22, %rd6, %rd39;
	mul.wide.s32 	%rd40, %r99, 4;
	add.s64 	%rd23, %rd6, %rd40;
	mul.wide.s32 	%rd41, %r100, 4;
	add.s64 	%rd24, %rd6, %rd41;
	mul.wide.s32 	%rd42, %r101, 4;
	add.s64 	%rd25, %rd6, %rd42;
	.loc	1 38 64                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:38:64
	// begin inline asm
	mov.u32 %r54, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r54 }, [ %rd22 + 0 ];
	@!%p8 mov.u32 %r54, %r39;
	// end inline asm
	// begin inline asm
	mov.u32 %r56, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r56 }, [ %rd23 + 0 ];
	@!%p8 mov.u32 %r56, %r39;
	// end inline asm
	// begin inline asm
	mov.u32 %r58, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r58 }, [ %rd24 + 0 ];
	@!%p8 mov.u32 %r58, %r39;
	// end inline asm
	// begin inline asm
	mov.u32 %r60, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r60 }, [ %rd25 + 0 ];
	@!%p8 mov.u32 %r60, %r39;
	// end inline asm
	.loc	1 39 46                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:39:46
	or.b32  	%r102, %r91, 33;
	or.b32  	%r103, %r93, 33;
	or.b32  	%r104, %r95, 33;
	.loc	1 39 54                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:39:54
	or.b32  	%r105, %r97, 33;
	add.s32 	%r106, %r102, %r6;
	add.s32 	%r107, %r103, %r6;
	add.s32 	%r108, %r104, %r6;
	.loc	1 39 34                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:39:34
	mul.wide.s32 	%rd43, %r105, 4;
	add.s64 	%rd26, %rd6, %rd43;
	mul.wide.s32 	%rd44, %r106, 4;
	add.s64 	%rd27, %rd6, %rd44;
	mul.wide.s32 	%rd45, %r107, 4;
	add.s64 	%rd28, %rd6, %rd45;
	mul.wide.s32 	%rd46, %r108, 4;
	add.s64 	%rd29, %rd6, %rd46;
	.loc	1 39 64                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:39:64
	// begin inline asm
	mov.u32 %r62, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r62 }, [ %rd26 + 0 ];
	@!%p8 mov.u32 %r62, %r39;
	// end inline asm
	// begin inline asm
	mov.u32 %r64, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r64 }, [ %rd27 + 0 ];
	@!%p8 mov.u32 %r64, %r39;
	// end inline asm
	// begin inline asm
	mov.u32 %r66, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r66 }, [ %rd28 + 0 ];
	@!%p8 mov.u32 %r66, %r39;
	// end inline asm
	// begin inline asm
	mov.u32 %r68, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r68 }, [ %rd29 + 0 ];
	@!%p8 mov.u32 %r68, %r39;
	// end inline asm
	.loc	1 36 59                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:36:59
	mov.b32 	%f60, %r38;
	mov.b32 	%f61, %r40;
	mov.b32 	%f62, %r42;
	mov.b32 	%f63, %r44;
	.loc	1 37 63                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:37:63
	mov.b32 	%f64, %r46;
	mov.b32 	%f65, %r48;
	mov.b32 	%f66, %r50;
	mov.b32 	%f67, %r52;
	.loc	1 38 64                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:38:64
	mov.b32 	%f68, %r60;
	mov.b32 	%f69, %r58;
	mov.b32 	%f70, %r56;
	mov.b32 	%f71, %r54;
	.loc	1 39 64                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:39:64
	mov.b32 	%f72, %r62;
	mov.b32 	%f73, %r64;
	mov.b32 	%f74, %r66;
	mov.b32 	%f75, %r68;
	.loc	1 40 22                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:40:22
	add.f32 	%f76, %f63, %f67;
	add.f32 	%f77, %f62, %f66;
	add.f32 	%f78, %f61, %f65;
	add.f32 	%f79, %f60, %f64;
	.loc	1 41 22                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:41:22
	add.f32 	%f80, %f79, %f71;
	add.f32 	%f81, %f78, %f70;
	add.f32 	%f82, %f77, %f69;
	add.f32 	%f83, %f76, %f68;
	.loc	1 42 22                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:42:22
	add.f32 	%f84, %f83, %f75;
	add.f32 	%f85, %f82, %f74;
	add.f32 	%f86, %f81, %f73;
	add.f32 	%f87, %f80, %f72;
	.loc	1 44 22                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:44:22
	mul.f32 	%f13, %f87, 0f3E800000;
	mul.f32 	%f14, %f86, 0f3E800000;
	mul.f32 	%f15, %f85, 0f3E800000;
	mul.f32 	%f16, %f84, 0f3E800000;
	.loc	1 47 65                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:47:65
	setp.eq.s64 	%p40, %rd52, 0;
	mov.f32 	%f161, 0f3F800000;
	mov.f32 	%f157, %f56;
	mov.f32 	%f158, %f56;
	mov.f32 	%f159, %f56;
	mov.f32 	%f160, %f56;
	mov.f32 	%f162, %f161;
	mov.f32 	%f163, %f161;
	mov.f32 	%f164, %f161;
	mov.f32 	%f165, %f13;
	mov.f32 	%f166, %f14;
	mov.f32 	%f167, %f15;
	mov.f32 	%f168, %f16;
$L__tmp1:
	.loc	2 178 7                         // triton_helpers.py:178:7
	@%p40 bra 	$L__BB0_3;
// %bb.2:                               //   in Loop: Header=BB0_1 Depth=1
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f88, %f16, %f156;
	sub.f32 	%f89, %f15, %f155;
	sub.f32 	%f90, %f14, %f154;
	sub.f32 	%f91, %f13, %f153;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f161, %f145, 0f3F800000;
	add.f32 	%f162, %f146, 0f3F800000;
	add.f32 	%f163, %f147, 0f3F800000;
	add.f32 	%f164, %f148, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r110, %f91;
	mov.b32 	%r111, %f161;
	// begin inline asm
	div.full.f32 %r109, %r110, %r111;
	// end inline asm
	mov.b32 	%f92, %r109;
	mov.b32 	%r113, %f90;
	mov.b32 	%r114, %f162;
	// begin inline asm
	div.full.f32 %r112, %r113, %r114;
	// end inline asm
	mov.b32 	%f93, %r112;
	mov.b32 	%r116, %f89;
	mov.b32 	%r117, %f163;
	// begin inline asm
	div.full.f32 %r115, %r116, %r117;
	// end inline asm
	mov.b32 	%f94, %r115;
	mov.b32 	%r119, %f88;
	mov.b32 	%r120, %f164;
	// begin inline asm
	div.full.f32 %r118, %r119, %r120;
	// end inline asm
	mov.b32 	%f95, %r118;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f165, %f153, %f92;
	add.f32 	%f166, %f154, %f93;
	add.f32 	%f167, %f155, %f94;
	add.f32 	%f168, %f156, %f95;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f96, %f16, %f168;
	sub.f32 	%f97, %f15, %f167;
	sub.f32 	%f98, %f14, %f166;
	sub.f32 	%f99, %f13, %f165;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f157, %f91, %f99, %f149;
	fma.rn.f32 	%f158, %f90, %f98, %f150;
	fma.rn.f32 	%f159, %f89, %f97, %f151;
	fma.rn.f32 	%f160, %f88, %f96, %f152;
	bra.uni 	$L__BB0_3;
$L__tmp2:
$L__BB0_4:                              // %__nv_rsqrtf.exit
	.loc	2 204 46                        // triton_helpers.py:204:46
	bar.sync 	0;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f100, %f154, %f153;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f101, %f145, %f146;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p61, %f101, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r135, %f101;
	mov.b32 	%r134, %f146;
	// begin inline asm
	div.full.f32 %r133, %r134, %r135;
	// end inline asm
	mov.b32 	%f102, %r133;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f103, 0f00000000, %f102, %p61;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f104, %f100, %f103, %f153;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f105, %f149, %f150;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f106, %f100, %f100;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f107, %f106, %f145;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f108, %f107, %f103, %f105;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f109, %f155, %f104;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f110, %f147, %f101;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p62, %f110, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r138, %f110;
	mov.b32 	%r137, %f147;
	// begin inline asm
	div.full.f32 %r136, %r137, %r138;
	// end inline asm
	mov.b32 	%f111, %r136;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f112, 0f00000000, %f111, %p62;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f113, %f112, %f109, %f104;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f114, %f151, %f108;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f115, %f109, %f109;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f116, %f101, %f115;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f117, %f112, %f116, %f114;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f118, %f156, %f113;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f119, %f148, %f110;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p63, %f119, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r141, %f119;
	mov.b32 	%r140, %f148;
	// begin inline asm
	div.full.f32 %r139, %r140, %r141;
	// end inline asm
	mov.b32 	%f120, %r139;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f121, 0f00000000, %f120, %p63;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f122, %f121, %f118, %f113;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f123, %f152, %f117;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f124, %f118, %f118;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f125, %f110, %f124;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f126, %f121, %f125, %f123;
	.loc	2 204 46                        // triton_helpers.py:204:46
	shl.b32 	%r170, %r5, 2;
	shl.b32 	%r171, %r2, 3;
	or.b32  	%r172, %r171, %r170;
	add.s32 	%r142, %r27, %r172;
	mov.b32 	%r143, %f122;
	// begin inline asm
	@%p48 st.shared.b32 [ %r142 + 0 ], %r143;
	// end inline asm
	add.s32 	%r174, %r27, 512;
	add.s32 	%r144, %r174, %r172;
	mov.b32 	%r145, %f126;
	// begin inline asm
	@%p48 st.shared.b32 [ %r144 + 0 ], %r145;
	// end inline asm
	add.s32 	%r175, %r27, 1024;
	add.s32 	%r146, %r175, %r172;
	// begin inline asm
	@%p48 st.shared.b32 [ %r146 + 0 ], %r141;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p51, %r1, 128;
	add.s32 	%r149, %r27, %r18;
	// begin inline asm
	@%p51 ld.shared.b32 %r148, [ %r149 + 0 ];
	// end inline asm
	mov.b32 	%f127, %r148;
	add.s32 	%r151, %r174, %r18;
	// begin inline asm
	@%p51 ld.shared.b32 %r150, [ %r151 + 0 ];
	// end inline asm
	mov.b32 	%f128, %r150;
	add.s32 	%r153, %r175, %r18;
	// begin inline asm
	@%p51 ld.shared.b32 %r152, [ %r153 + 0 ];
	// end inline asm
	mov.b32 	%f129, %r152;
	shfl.sync.bfly.b32	%r177, %r148, 1, 31, -1;
	mov.b32 	%f130, %r177;
	shfl.sync.bfly.b32	%r178, %r150, 1, 31, -1;
	mov.b32 	%f131, %r178;
	shfl.sync.bfly.b32	%r155, %r152, 1, 31, -1;
	mov.b32 	%f132, %r155;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f133, %f130, %f127;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f134, %f129, %f132;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p64, %f134, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r156, %f134;
	// begin inline asm
	div.full.f32 %r154, %r155, %r156;
	// end inline asm
	mov.b32 	%f135, %r154;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f136, 0f00000000, %f135, %p64;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f137, %f133, %f136, %f127;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f138, %f128, %f131;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f139, %f133, %f133;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f140, %f139, %f129;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f141, %f140, %f136, %f138;
	.loc	2 204 46                        // triton_helpers.py:204:46
	and.b32  	%r179, %r1, 1;
	setp.eq.b32 	%p65, %r179, 1;
	not.pred 	%p66, %p65;
	and.pred  	%p54, %p51, %p66;
	mov.b32 	%r158, %f137;
	// begin inline asm
	@%p54 st.shared.b32 [ %r149 + 0 ], %r158;
	// end inline asm
	mov.b32 	%r160, %f141;
	// begin inline asm
	@%p54 st.shared.b32 [ %r151 + 0 ], %r160;
	// end inline asm
	// begin inline asm
	@%p54 st.shared.b32 [ %r153 + 0 ], %r156;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r180, %r27, %r171;
	ld.shared.u32 	%r163, [%r180];
	add.s32 	%r181, %r174, %r171;
$L__tmp3:
	.loc	1 59 25                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:59:25
	mul.wide.s32 	%rd51, %r3, 4;
	add.s64 	%rd48, %rd7, %rd51;
	.loc	1 59 37                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:59:37
	setp.eq.s32 	%p67, %r5, 0;
	and.pred  	%p57, %p67, %p8;
	.loc	1 60 37                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:60:37
	ld.shared.u32 	%r164, [%r181];
	.loc	1 59 37                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:59:37
	// begin inline asm
	@%p57 st.global.b32 [ %rd48 + 0 ], { %r163 };
	// end inline asm
	.loc	1 60 25                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:60:25
	add.s64 	%rd49, %rd8, %rd51;
	.loc	1 60 37                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:60:37
	// begin inline asm
	@%p57 st.global.b32 [ %rd49 + 0 ], { %r164 };
	// end inline asm
	mov.b32 	%r167, 1149239296;
	.loc	1 62 20                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:62:20
	// begin inline asm
	div.full.f32 %r165, %r164, %r167;
	// end inline asm
	mov.b32 	%f142, %r165;
	.loc	1 64 20                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:64:20
	add.f32 	%f143, %f142, 0f3727C5AC;
	.loc	1 65 28                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:65:28
	rsqrt.approx.ftz.f32 	%f144, %f143;
	.loc	1 66 25                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:66:25
	add.s64 	%rd50, %rd9, %rd51;
	.loc	1 66 37                         // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:66:37
	mov.b32 	%r168, %f144;
	// begin inline asm
	@%p57 st.global.b32 [ %rd50 + 0 ], { %r168 };
	// end inline asm
	.loc	1 66 4                          // cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py:66:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/r3/cr3pylpwulyboeq5xoewxptx33nxuxxmsninhp4hwmv5qvauxh6a.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 216                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 51
.b8 112
.b8 121
.b8 108
.b8 112
.b8 119
.b8 117
.b8 108
.b8 121
.b8 98
.b8 111
.b8 101
.b8 113
.b8 53
.b8 120
.b8 111
.b8 101
.b8 119
.b8 120
.b8 112
.b8 116
.b8 120
.b8 51
.b8 51
.b8 110
.b8 120
.b8 117
.b8 120
.b8 120
.b8 109
.b8 115
.b8 110
.b8 105
.b8 110
.b8 104
.b8 112
.b8 52
.b8 104
.b8 119
.b8 109
.b8 118
.b8 53
.b8 113
.b8 118
.b8 97
.b8 117
.b8 120
.b8 104
.b8 54
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x32 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 118
.b8 103
.b8 95
.b8 112
.b8 111
.b8 111
.b8 108
.b8 50
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x95:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xaa:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 54                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
