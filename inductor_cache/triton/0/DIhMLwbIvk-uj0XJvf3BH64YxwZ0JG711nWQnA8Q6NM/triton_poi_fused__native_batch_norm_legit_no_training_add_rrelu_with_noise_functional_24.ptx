//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<73>;
	.reg .f32 	%f<47>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_1];
$L__tmp0:
	.loc	1 22 28                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:22:33
	shl.b32 	%r37, %r1, 1;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_2];
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_3];
	.loc	1 23 44                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:23:44
	mov.u32 	%r38, %tid.x;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_4];
	bfe.u32 	%r39, %r38, 6, 1;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_5];
	.loc	1 23 23                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:23:23
	or.b32  	%r40, %r37, %r39;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_6];
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_7];
	.loc	1 24 21                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:24:21
	setp.lt.s32 	%p8, %r37, 256;
	.loc	1 25 28                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:25:33
	shl.b32 	%r41, %r2, 8;
	.loc	1 26 44                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:26:44
	shl.b32 	%r42, %r38, 2;
	and.b32  	%r43, %r42, 252;
	and.b32  	%r44, %r38, 127;
	.loc	1 26 23                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:26:23
	or.b32  	%r45, %r41, %r43;
	or.b32  	%r46, %r41, %r44;
	or.b32  	%r47, %r46, 128;
	.loc	1 27 21                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:27:21
	setp.lt.s32 	%p16, %r46, 256;
	setp.lt.s32 	%p17, %r47, 256;
	.loc	1 31 19                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:31:19
	bfe.s32 	%r48, %r1, 30, 1;
	shr.u32 	%r49, %r48, 26;
	add.s32 	%r50, %r37, %r49;
	.loc	1 30 19                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:30:19
	and.b32  	%r51, %r50, -64;
	sub.s32 	%r52, %r37, %r51;
	.loc	1 32 39                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:32:39
	shl.b32 	%r53, %r40, 8;
	.loc	1 32 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:32:35
	add.s32 	%r54, %r45, %r53;
	.loc	1 32 30                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:32:30
	mul.wide.s32 	%rd20, %r54, 4;
	add.s64 	%rd1, %rd12, %rd20;
	.loc	1 32 52                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:32:52
	max.s32 	%r55, %r40, %r45;
	setp.lt.s32 	%p1, %r55, 256;
	and.pred  	%p6, %p8, %p16;
	and.pred  	%p7, %p17, %p8;
	.loc	1 32 44                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:32:44
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.v4.b32 { %r8, %r10, %r12, %r14 }, [ %rd1 + 0 ];
	// end inline asm
	shl.b32 	%r56, %r38, 3;
	and.b32  	%r57, %r56, 504;
	or.b32  	%r58, %r57, %r39;
	shl.b32 	%r59, %r57, 2;
	mov.u32 	%r60, global_smem;
	add.s32 	%r61, %r60, %r59;
	shl.b32 	%r62, %r58, 2;
	add.s32 	%r7, %r61, %r62;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	add.s32 	%r9, %r7, 16;
	// begin inline asm
	@%p2 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	add.s32 	%r11, %r7, 32;
	// begin inline asm
	@%p2 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	add.s32 	%r13, %r7, 48;
	// begin inline asm
	@%p2 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r63, %r56, 1016;
	add.s32 	%r64, %r60, %r63;
	add.s32 	%r65, %r64, %r63;
	ld.shared.v2.f32 	{%f1, %f2}, [%r65];
	ld.shared.v2.f32 	{%f3, %f4}, [%r65+2048];
	.loc	1 33 38                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:38
	shl.b32 	%r66, %r46, 6;
	shl.b32 	%r67, %r47, 6;
	.loc	1 33 49                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:49
	shl.b32 	%r68, %r50, 8;
	and.b32  	%r69, %r68, -16384;
	.loc	1 33 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:35
	add.s32 	%r70, %r69, %r52;
	.loc	1 33 43                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:43
	add.s32 	%r71, %r70, %r66;
	add.s32 	%r72, %r70, %r67;
	.loc	1 33 30                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:30
	cvt.s64.s32 	%rd21, %r71;
	mul.wide.s32 	%rd22, %r71, 4;
	add.s64 	%rd2, %rd13, %rd22;
	cvt.s64.s32 	%rd23, %r72;
	mul.wide.s32 	%rd24, %r72, 4;
	add.s64 	%rd3, %rd13, %rd24;
	.loc	1 33 54                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:54
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p6 ld.global.v2.b32 { %r15, %r16 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p7 ld.global.v2.b32 { %r17, %r18 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:34:30
	mul.wide.s32 	%rd25, %r52, 4;
	add.s64 	%rd4, %rd14, %rd25;
	.loc	1 34 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:34:35
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p8 ld.global.L1::evict_last.v2.b32 { %r19, %r20 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:35:30
	add.s64 	%rd5, %rd15, %rd25;
	.loc	1 35 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:35:35
	// begin inline asm
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p8 ld.global.L1::evict_last.v2.b32 { %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r21;
	mov.b32 	%f6, %r22;
	.loc	1 36 31                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:36:31
	add.s64 	%rd6, %rd16, %rd25;
	.loc	1 36 36                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:36:36
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	@%p8 ld.global.L1::evict_last.v2.b32 { %r23, %r24 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:37:31
	add.s64 	%rd7, %rd17, %rd25;
	.loc	1 37 36                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:37:36
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p8 ld.global.L1::evict_last.v2.b32 { %r25, %r26 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 40 18                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:40:18
	add.f32 	%f7, %f5, 0f3727C5AC;
	add.f32 	%f8, %f6, 0f3727C5AC;
	.loc	1 41 26                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:41:26
	sqrt.approx.ftz.f32 	%f9, %f7;
	sqrt.approx.ftz.f32 	%f10, %f8;
	.loc	1 43 18                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:43:18
	mov.b32 	%r29, %f9;
	mov.b32 	%r28, 1065353216;
	// begin inline asm
	div.full.f32 %r27, %r28, %r29;
	// end inline asm
	mov.b32 	%f11, %r27;
	mov.b32 	%r32, %f10;
	// begin inline asm
	div.full.f32 %r30, %r28, %r32;
	// end inline asm
	mov.b32 	%f12, %r30;
	.loc	1 55 25                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:55:25
	add.s64 	%rd8, %rd18, %rd21;
	add.s64 	%rd9, %rd18, %rd23;
	.loc	1 34 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:34:35
	mov.b32 	%f13, %r19;
	mov.b32 	%f14, %r20;
	.loc	1 33 54                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:54
	mov.b32 	%f15, %r15;
	mov.b32 	%f16, %r16;
	.loc	1 38 18                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:38:18
	sub.f32 	%f17, %f16, %f14;
	sub.f32 	%f18, %f15, %f13;
	.loc	1 37 36                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:37:36
	mov.b32 	%f19, %r25;
	mov.b32 	%f20, %r26;
	.loc	1 36 36                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:36:36
	mov.b32 	%f21, %r23;
	mov.b32 	%f22, %r24;
	.loc	1 46 19                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:46:19
	mul.f32 	%f23, %f18, %f11;
	mul.f32 	%f24, %f17, %f12;
	.loc	1 48 20                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:48:20
	fma.rn.f32 	%f25, %f24, %f22, %f20;
	fma.rn.f32 	%f26, %f23, %f21, %f19;
	.loc	1 49 19                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:49:19
	add.f32 	%f27, %f1, %f26;
	add.f32 	%f28, %f2, %f25;
	.loc	1 51 20                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:51:20
	setp.gt.f32 	%p18, %f28, 0f00000000;
	setp.gt.f32 	%p19, %f27, 0f00000000;
	.loc	1 53 20                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:53:20
	mul.f32 	%f29, %f27, 0f3E6AAAAB;
	mul.f32 	%f30, %f28, 0f3E6AAAAB;
	.loc	1 54 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:54:35
	selp.f32 	%f31, %f27, %f29, %p19;
	selp.f32 	%f32, %f28, %f30, %p18;
	.loc	1 33 54                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:54
	mov.b32 	%f33, %r17;
	mov.b32 	%f34, %r18;
	.loc	1 38 18                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:38:18
	sub.f32 	%f35, %f34, %f14;
	sub.f32 	%f36, %f33, %f13;
	.loc	1 46 19                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:46:19
	mul.f32 	%f37, %f36, %f11;
	mul.f32 	%f38, %f35, %f12;
	.loc	1 48 20                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:48:20
	fma.rn.f32 	%f39, %f38, %f22, %f20;
	fma.rn.f32 	%f40, %f37, %f21, %f19;
	.loc	1 49 19                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:49:19
	add.f32 	%f41, %f3, %f40;
	add.f32 	%f42, %f4, %f39;
	.loc	1 51 20                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:51:20
	setp.gt.f32 	%p20, %f42, 0f00000000;
	setp.gt.f32 	%p21, %f41, 0f00000000;
	.loc	1 53 20                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:53:20
	mul.f32 	%f43, %f41, 0f3E6AAAAB;
	mul.f32 	%f44, %f42, 0f3E6AAAAB;
	.loc	1 54 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:54:35
	selp.f32 	%f45, %f41, %f43, %p21;
	selp.f32 	%f46, %f42, %f44, %p20;
	.loc	1 55 56                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:55:56
	selp.u16 	%rs3, 1, 0, %p19;
	selp.u16 	%rs4, 1, 0, %p18;
	shl.b16 	%rs5, %rs4, 8;
	or.b16  	%rs1, %rs3, %rs5;
	// begin inline asm
	@%p6 st.global.b16 [ %rd8 + 0 ], { %rs1 };
	// end inline asm
	selp.u16 	%rs6, 1, 0, %p21;
	selp.u16 	%rs7, 1, 0, %p20;
	shl.b16 	%rs8, %rs7, 8;
	or.b16  	%rs2, %rs6, %rs8;
	// begin inline asm
	@%p7 st.global.b16 [ %rd9 + 0 ], { %rs2 };
	// end inline asm
	.loc	1 56 25                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:56:25
	add.s64 	%rd10, %rd19, %rd22;
	add.s64 	%rd11, %rd19, %rd24;
	.loc	1 56 56                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:56:56
	mov.b32 	%r33, %f31;
	mov.b32 	%r34, %f32;
	// begin inline asm
	@%p6 st.global.v2.b32 [ %rd10 + 0 ], { %r33, %r34 };
	// end inline asm
	mov.b32 	%r35, %f45;
	mov.b32 	%r36, %f46;
	// begin inline asm
	@%p7 st.global.v2.b32 [ %rd11 + 0 ], { %r35, %r36 };
	// end inline asm
	.loc	1 56 4                          // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:56:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/s4/cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 52
.b8 104
.b8 117
.b8 108
.b8 106
.b8 101
.b8 100
.b8 99
.b8 98
.b8 98
.b8 110
.b8 119
.b8 99
.b8 121
.b8 102
.b8 116
.b8 110
.b8 114
.b8 55
.b8 97
.b8 53
.b8 118
.b8 113
.b8 98
.b8 116
.b8 114
.b8 97
.b8 101
.b8 101
.b8 103
.b8 53
.b8 110
.b8 113
.b8 102
.b8 108
.b8 113
.b8 99
.b8 54
.b8 106
.b8 121
.b8 122
.b8 114
.b8 53
.b8 101
.b8 109
.b8 118
.b8 110
.b8 51
.b8 103
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 52
.b8 0
	}
	.section	.debug_macinfo	{	}
