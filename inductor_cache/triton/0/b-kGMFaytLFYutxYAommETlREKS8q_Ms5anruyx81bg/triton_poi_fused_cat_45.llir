; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_45(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 30720, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %14 = sdiv i32 %.frozen, 16, !dbg !15
  %15 = srem i32 %14, 480, !dbg !16
  %16 = mul i32 %14, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %16, !dbg !17
  %.frozen6 = freeze i32 %12, !dbg !18
  %17 = sdiv i32 %.frozen6, 7680, !dbg !18
  %18 = mul i32 %17, 7680, !dbg !19
  %.decomposed7 = sub i32 %.frozen6, %18, !dbg !19
  %19 = icmp slt i32 %15, 456, !dbg !20
  %20 = icmp slt i32 %15, 432, !dbg !21
  %21 = icmp slt i32 %15, 408, !dbg !22
  %22 = mul i32 %17, 22912, !dbg !23
  %23 = add i32 %22, %.decomposed7, !dbg !24
  %24 = sext i32 %23 to i64, !dbg !25
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !25
  %26 = and i1 %13, %21, !dbg !26
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %25, i1 %26, i32 0, i1 %26, i32 0, i1 %26) #1, !dbg !27
  %28 = extractvalue { i32, i32 } %27, 0, !dbg !27
  %29 = extractvalue { i32, i32 } %27, 1, !dbg !27
  %30 = add nsw i32 %15, -408, !dbg !28
  %31 = icmp ult i32 %30, 24, !dbg !28
  %32 = add nsw i32 %.decomposed, 16384, !dbg !29
  %33 = shl nsw i32 %15, 4, !dbg !30
  %34 = mul i32 %17, 16768, !dbg !31
  %35 = add i32 %34, %32, !dbg !30
  %36 = add i32 %35, -6528, !dbg !32
  %37 = add i32 %36, %33, !dbg !33
  %38 = sext i32 %37 to i64, !dbg !34
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !34
  %40 = and i1 %13, %31, !dbg !35
  %41 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %39, i1 %40, i32 0, i1 %40, i32 0, i1 %40) #1, !dbg !36
  %42 = extractvalue { i32, i32 } %41, 0, !dbg !36
  %43 = extractvalue { i32, i32 } %41, 1, !dbg !36
  %.v = select i1 %21, i32 %28, i32 %42, !dbg !37
  %.v1 = select i1 %21, i32 %29, i32 %43, !dbg !37
  %44 = add nsw i32 %15, -432, !dbg !38
  %45 = icmp ult i32 %44, 24, !dbg !38
  %46 = add i32 %35, -6912, !dbg !39
  %47 = add i32 %46, %33, !dbg !40
  %48 = sext i32 %47 to i64, !dbg !41
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %48, !dbg !41
  %50 = and i1 %13, %45, !dbg !42
  %51 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %49, i1 %50, i32 0, i1 %50, i32 0, i1 %50) #1, !dbg !43
  %52 = extractvalue { i32, i32 } %51, 0, !dbg !43
  %53 = extractvalue { i32, i32 } %51, 1, !dbg !43
  %.v2 = select i1 %20, i32 %.v, i32 %52, !dbg !44
  %.v3 = select i1 %20, i32 %.v1, i32 %53, !dbg !44
  %54 = icmp sgt i32 %15, 455, !dbg !45
  %55 = add i32 %35, -7296, !dbg !46
  %56 = add i32 %55, %33, !dbg !47
  %57 = sext i32 %56 to i64, !dbg !48
  %58 = getelementptr float, ptr addrspace(1) %3, i64 %57, !dbg !48
  %59 = and i1 %13, %54, !dbg !49
  %60 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %58, i1 %59, i32 0, i1 %59, i32 0, i1 %59) #1, !dbg !50
  %61 = extractvalue { i32, i32 } %60, 0, !dbg !50
  %62 = extractvalue { i32, i32 } %60, 1, !dbg !50
  %.v4 = select i1 %19, i32 %.v2, i32 %61, !dbg !51
  %.v5 = select i1 %19, i32 %.v3, i32 %62, !dbg !51
  %63 = mul i32 %17, 24064, !dbg !52
  %64 = add i32 %63, %.decomposed7, !dbg !53
  %65 = sext i32 %64 to i64, !dbg !54
  %66 = getelementptr float, ptr addrspace(1) %4, i64 %65, !dbg !54
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.v4, i32 %.v5, ptr addrspace(1) %66, i1 %13) #1, !dbg !55
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cs2yiwiarrhknrtzvx6yaxkriba4riniv52k366u7hmavk4ii4fc.py", directory: "inductor_cache/s2")
!4 = !{ptr @triton_poi_fused_cat_45, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_45, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_45", linkageName: "triton_poi_fused_cat_45", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 27, column: 19, scope: !7)
!20 = !DILocation(line: 32, column: 18, scope: !7)
!21 = !DILocation(line: 37, column: 18, scope: !7)
!22 = !DILocation(line: 43, column: 20, scope: !7)
!23 = !DILocation(line: 45, column: 52, scope: !7)
!24 = !DILocation(line: 45, column: 46, scope: !7)
!25 = !DILocation(line: 45, column: 31, scope: !7)
!26 = !DILocation(line: 45, column: 65, scope: !7)
!27 = !DILocation(line: 45, column: 57, scope: !7)
!28 = !DILocation(line: 49, column: 20, scope: !7)
!29 = !DILocation(line: 50, column: 39, scope: !7)
!30 = !DILocation(line: 50, column: 48, scope: !7)
!31 = !DILocation(line: 50, column: 71, scope: !7)
!32 = !DILocation(line: 50, column: 44, scope: !7)
!33 = !DILocation(line: 50, column: 65, scope: !7)
!34 = !DILocation(line: 50, column: 31, scope: !7)
!35 = !DILocation(line: 50, column: 84, scope: !7)
!36 = !DILocation(line: 50, column: 76, scope: !7)
!37 = !DILocation(line: 51, column: 35, scope: !7)
!38 = !DILocation(line: 57, column: 20, scope: !7)
!39 = !DILocation(line: 58, column: 44, scope: !7)
!40 = !DILocation(line: 58, column: 65, scope: !7)
!41 = !DILocation(line: 58, column: 31, scope: !7)
!42 = !DILocation(line: 58, column: 84, scope: !7)
!43 = !DILocation(line: 58, column: 76, scope: !7)
!44 = !DILocation(line: 59, column: 34, scope: !7)
!45 = !DILocation(line: 62, column: 20, scope: !7)
!46 = !DILocation(line: 65, column: 44, scope: !7)
!47 = !DILocation(line: 65, column: 63, scope: !7)
!48 = !DILocation(line: 65, column: 31, scope: !7)
!49 = !DILocation(line: 65, column: 82, scope: !7)
!50 = !DILocation(line: 65, column: 74, scope: !7)
!51 = !DILocation(line: 0, scope: !7)
!52 = !DILocation(line: 67, column: 36, scope: !7)
!53 = !DILocation(line: 67, column: 30, scope: !7)
!54 = !DILocation(line: 67, column: 25, scope: !7)
!55 = !DILocation(line: 67, column: 48, scope: !7)
!56 = !DILocation(line: 67, column: 4, scope: !7)
