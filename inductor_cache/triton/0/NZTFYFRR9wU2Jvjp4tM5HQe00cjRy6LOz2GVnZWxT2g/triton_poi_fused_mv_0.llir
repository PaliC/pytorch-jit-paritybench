; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mv_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 2, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 28, !dbg !12
  %9 = and i32 %7, 3, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 4, !dbg !14
  %12 = sext i32 %10 to i64, !dbg !15
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !15
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %13, i1 %11) #1, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !17
  %16 = add i32 %10, 4, !dbg !18
  %17 = sext i32 %16 to i64, !dbg !19
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 %11) #1, !dbg !20
  %20 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !21
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !22
  %22 = add i32 %10, 8, !dbg !23
  %23 = sext i32 %22 to i64, !dbg !24
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !24
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %11) #1, !dbg !25
  %26 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !26
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #1, !dbg !27
  %28 = add i32 %10, 12, !dbg !28
  %29 = sext i32 %28 to i64, !dbg !29
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !29
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %11) #1, !dbg !30
  %32 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !31
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 true) #1, !dbg !32
  %34 = insertelement <2 x i32> poison, i32 %14, i64 0, !dbg !16
  %35 = insertelement <2 x i32> %34, i32 %19, i64 1, !dbg !16
  %36 = bitcast <2 x i32> %35 to <2 x float>, !dbg !16
  %37 = insertelement <2 x i32> poison, i32 %15, i64 0, !dbg !17
  %38 = insertelement <2 x i32> %37, i32 %21, i64 1, !dbg !17
  %39 = bitcast <2 x i32> %38 to <2 x float>, !dbg !17
  %40 = fmul <2 x float> %36, %39, !dbg !33
  %shift = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !34
  %41 = fadd <2 x float> %40, %shift, !dbg !34
  %42 = insertelement <2 x i32> poison, i32 %25, i64 0, !dbg !25
  %43 = insertelement <2 x i32> %42, i32 %31, i64 1, !dbg !25
  %44 = bitcast <2 x i32> %43 to <2 x float>, !dbg !25
  %45 = insertelement <2 x i32> poison, i32 %27, i64 0, !dbg !27
  %46 = insertelement <2 x i32> %45, i32 %33, i64 1, !dbg !27
  %47 = bitcast <2 x i32> %46 to <2 x float>, !dbg !27
  %48 = fmul <2 x float> %44, %47, !dbg !35
  %49 = fadd <2 x float> %41, %48, !dbg !36
  %shift1 = shufflevector <2 x float> %48, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !37
  %50 = fadd <2 x float> %49, %shift1, !dbg !37
  %51 = getelementptr float, ptr addrspace(1) %2, i64 %12, !dbg !38
  %52 = icmp eq i32 %8, 0, !dbg !39
  %bc = bitcast <2 x float> %50 to <2 x i32>, !dbg !39
  %53 = extractelement <2 x i32> %bc, i64 0, !dbg !39
  %54 = and i1 %52, %11, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %53, ptr addrspace(1) %51, i1 %54) #1, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cajpdcl65s4fz463wsluayrzgysjudpfo66njyrlqmbi5ozhr5mk.py", directory: "inductor_cache/aj")
!4 = !{ptr @triton_poi_fused_mv_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mv_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mv_0", linkageName: "triton_poi_fused_mv_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 34, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 39, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 19, scope: !7)
!23 = !DILocation(line: 31, column: 34, scope: !7)
!24 = !DILocation(line: 31, column: 30, scope: !7)
!25 = !DILocation(line: 31, column: 39, scope: !7)
!26 = !DILocation(line: 32, column: 31, scope: !7)
!27 = !DILocation(line: 32, column: 20, scope: !7)
!28 = !DILocation(line: 34, column: 36, scope: !7)
!29 = !DILocation(line: 34, column: 31, scope: !7)
!30 = !DILocation(line: 34, column: 41, scope: !7)
!31 = !DILocation(line: 35, column: 31, scope: !7)
!32 = !DILocation(line: 35, column: 20, scope: !7)
!33 = !DILocation(line: 37, column: 18, scope: !7)
!34 = !DILocation(line: 39, column: 18, scope: !7)
!35 = !DILocation(line: 40, column: 19, scope: !7)
!36 = !DILocation(line: 41, column: 19, scope: !7)
!37 = !DILocation(line: 43, column: 20, scope: !7)
!38 = !DILocation(line: 44, column: 25, scope: !7)
!39 = !DILocation(line: 44, column: 37, scope: !7)
!40 = !DILocation(line: 44, column: 4, scope: !7)
