//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__log_softmax_convolution_27 // -- Begin function triton_per_fused__log_softmax_convolution_27
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__log_softmax_convolution_27
.visible .entry triton_per_fused__log_softmax_convolution_27(
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax_convolution_27_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax_convolution_27_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax_convolution_27_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax_convolution_27_param_3,
	.param .u32 triton_per_fused__log_softmax_convolution_27_param_4,
	.param .u32 triton_per_fused__log_softmax_convolution_27_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<88>;
	.reg .b32 	%r<168>;
	.reg .f32 	%f<127>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:19:0

// %bb.0:
	ld.param.u64 	%rd13, [triton_per_fused__log_softmax_convolution_27_param_0];
	ld.param.u64 	%rd14, [triton_per_fused__log_softmax_convolution_27_param_1];
$L__tmp0:
	.loc	1 23 28                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:23:33
	shl.b32 	%r94, %r1, 7;
	ld.param.u64 	%rd15, [triton_per_fused__log_softmax_convolution_27_param_2];
	.loc	1 24 44                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:24:44
	mov.u32 	%r95, %tid.x;
	ld.param.u64 	%rd16, [triton_per_fused__log_softmax_convolution_27_param_3];
	shl.b32 	%r97, %r95, 2;
	and.b32  	%r98, %r97, 124;
	and.b32  	%r99, %r95, 127;
	.loc	1 24 23                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:24:23
	or.b32  	%r100, %r94, %r98;
	or.b32  	%r101, %r94, %r99;
	.loc	1 26 34                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:26:34
	bfe.u32 	%r102, %r95, 5, 3;
	or.b32  	%r103, %r102, 8;
	.loc	1 28 21                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:28:21
	setp.lt.u32 	%p6, %r103, 12;
	.loc	1 31 19                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:31:19
	bfe.s32 	%r104, %r1, 24, 1;
	shr.u32 	%r105, %r104, 20;
	add.s32 	%r106, %r100, %r105;
	shr.s32 	%r107, %r106, 12;
	.loc	1 30 19                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:30:19
	and.b32  	%r108, %r106, -4096;
	sub.s32 	%r109, %r100, %r108;
	.loc	1 33 40                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:33:40
	shl.b32 	%r110, %r102, 12;
	shl.b32 	%r111, %r103, 12;
	.loc	1 33 35                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:33:35
	mad.lo.s32 	%r112, %r107, 49152, %r109;
	.loc	1 33 45                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:33:45
	add.s32 	%r113, %r112, %r110;
	add.s32 	%r114, %r112, %r111;
	.loc	1 33 30                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:33:30
	mul.wide.s32 	%rd17, %r113, 4;
	add.s64 	%rd1, %rd13, %rd17;
	mul.wide.s32 	%rd18, %r114, 4;
	add.s64 	%rd2, %rd13, %rd18;
	mov.b32 	%r6, 0;
	mov.pred 	%p1, -1;
	.loc	1 33 56                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:33:56
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f17, %r2;
	mov.b32 	%f18, %r3;
	mov.b32 	%f19, %r4;
	mov.b32 	%f20, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f21, %r10;
	mov.b32 	%f22, %r11;
	mov.b32 	%f23, %r12;
	mov.b32 	%f24, %r13;
	.loc	1 34 30                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:34:30
	mul.wide.u32 	%rd19, %r102, 4;
	add.s64 	%rd3, %rd14, %rd19;
	add.s64 	%rd7, %rd3, 32;
	.loc	1 34 35                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:34:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r20, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r22, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r24, %r6;
	// end inline asm
	mov.b32 	%f25, %r24;
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r26 }, [ %rd7 + 0 ];
	@!%p6 mov.u32 %r26, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r28 }, [ %rd7 + 0 ];
	@!%p6 mov.u32 %r28, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r30 }, [ %rd7 + 0 ];
	@!%p6 mov.u32 %r30, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r32 }, [ %rd7 + 0 ];
	@!%p6 mov.u32 %r32, %r6;
	// end inline asm
	mov.b32 	%f26, %r32;
	.loc	1 35 18                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:35:18
	add.f32 	%f27, %f17, %f25;
	add.f32 	%f28, %f18, %f25;
	add.f32 	%f29, %f19, %f25;
	add.f32 	%f30, %f20, %f25;
	add.f32 	%f31, %f21, %f26;
	add.f32 	%f32, %f22, %f26;
	add.f32 	%f33, %f23, %f26;
	add.f32 	%f34, %f24, %f26;
	.loc	1 37 33                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:37:33
	selp.f32 	%f35, %f31, 0fFF800000, %p6;
	selp.f32 	%f36, %f32, 0fFF800000, %p6;
	selp.f32 	%f37, %f33, 0fFF800000, %p6;
	selp.f32 	%f38, %f34, 0fFF800000, %p6;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p55, %f27, %f35;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p56, %f27, %f27;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f39, %f27, %f35, %p55;
	selp.f32 	%f40, %f27, %f39, %p56;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p57, %f28, %f36;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p58, %f28, %f28;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f41, %f28, %f36, %p57;
	selp.f32 	%f42, %f28, %f41, %p58;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p59, %f29, %f37;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p60, %f29, %f29;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f43, %f29, %f37, %p59;
	selp.f32 	%f44, %f29, %f43, %p60;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p61, %f30, %f38;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p62, %f30, %f30;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f45, %f30, %f38, %p61;
	selp.f32 	%f46, %f30, %f45, %p62;
	.loc	2 131 29                        // triton_helpers.py:131:29
	shl.b32 	%r115, %r102, 2;
	shl.b32 	%r116, %r98, 5;
	or.b32  	%r117, %r116, %r115;
	mov.u32 	%r118, global_smem;
	add.s32 	%r34, %r118, %r117;
	mov.b32 	%r35, %f40;
	// begin inline asm
	@%p1 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	add.s32 	%r36, %r34, 32;
	mov.b32 	%r37, %f42;
	// begin inline asm
	@%p1 st.shared.b32 [ %r36 + 0 ], %r37;
	// end inline asm
	add.s32 	%r38, %r34, 64;
	mov.b32 	%r39, %f44;
	// begin inline asm
	@%p1 st.shared.b32 [ %r38 + 0 ], %r39;
	// end inline asm
	add.s32 	%r40, %r34, 96;
	mov.b32 	%r41, %f46;
	// begin inline asm
	@%p1 st.shared.b32 [ %r40 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p31, %r95, 1024;
	add.s32 	%r43, %r118, %r97;
	// begin inline asm
	@%p31 ld.shared.b32 %r42, [ %r43 + 0 ];
	// end inline asm
	mov.b32 	%f47, %r42;
	shfl.sync.bfly.b32	%r119, %r42, 4, 31, -1;
	mov.b32 	%f48, %r119;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p63, %f47, %f48;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p64, %f47, %f47;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f49, %f47, %f48, %p63;
	selp.f32 	%f50, %f47, %f49, %p64;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r120, %f50;
	shfl.sync.bfly.b32	%r121, %r120, 2, 31, -1;
	mov.b32 	%f51, %r121;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p65, %f50, %f51;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p66, %f50, %f50;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f52, %f50, %f51, %p66;
	selp.f32 	%f53, %f50, %f52, %p65;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r122, %f53;
	shfl.sync.bfly.b32	%r123, %r122, 1, 31, -1;
	mov.b32 	%f54, %r123;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p67, %f53, %f54;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p68, %f53, %f53;
	.loc	2 131 29                        // triton_helpers.py:131:29
	and.b32  	%r124, %r95, 7;
	setp.eq.s32 	%p69, %r124, 0;
	and.pred  	%p32, %p31, %p69;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r125, %r122, %r123, %p68;
	selp.b32 	%r45, %r122, %r125, %p67;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p32 st.shared.b32 [ %r43 + 0 ], %r45;
	// end inline asm
	add.s32 	%r47, %r43, 1024;
	// begin inline asm
	@%p31 ld.shared.b32 %r46, [ %r47 + 0 ];
	// end inline asm
	mov.b32 	%f55, %r46;
	shfl.sync.bfly.b32	%r126, %r46, 4, 31, -1;
	mov.b32 	%f56, %r126;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p70, %f55, %f56;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p71, %f55, %f55;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f57, %f55, %f56, %p70;
	selp.f32 	%f58, %f55, %f57, %p71;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r127, %f58;
	shfl.sync.bfly.b32	%r128, %r127, 2, 31, -1;
	mov.b32 	%f59, %r128;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p72, %f58, %f59;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p73, %f58, %f58;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f60, %f58, %f59, %p73;
	selp.f32 	%f61, %f58, %f60, %p72;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r129, %f61;
	shfl.sync.bfly.b32	%r130, %r129, 1, 31, -1;
	mov.b32 	%f62, %r130;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p74, %f61, %f62;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p75, %f61, %f61;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r131, %r129, %r130, %p75;
	selp.b32 	%r49, %r129, %r131, %p74;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p32 st.shared.b32 [ %r47 + 0 ], %r49;
	// end inline asm
	add.s32 	%r51, %r43, 2048;
	// begin inline asm
	@%p31 ld.shared.b32 %r50, [ %r51 + 0 ];
	// end inline asm
	mov.b32 	%f63, %r50;
	shfl.sync.bfly.b32	%r132, %r50, 4, 31, -1;
	mov.b32 	%f64, %r132;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p76, %f63, %f64;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p77, %f63, %f63;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f65, %f63, %f64, %p76;
	selp.f32 	%f66, %f63, %f65, %p77;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r133, %f66;
	shfl.sync.bfly.b32	%r134, %r133, 2, 31, -1;
	mov.b32 	%f67, %r134;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p78, %f66, %f67;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p79, %f66, %f66;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f68, %f66, %f67, %p79;
	selp.f32 	%f69, %f66, %f68, %p78;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r135, %f69;
	shfl.sync.bfly.b32	%r136, %r135, 1, 31, -1;
	mov.b32 	%f70, %r136;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p80, %f69, %f70;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p81, %f69, %f69;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r137, %r135, %r136, %p81;
	selp.b32 	%r53, %r135, %r137, %p80;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p32 st.shared.b32 [ %r51 + 0 ], %r53;
	// end inline asm
	add.s32 	%r55, %r43, 3072;
	// begin inline asm
	@%p31 ld.shared.b32 %r54, [ %r55 + 0 ];
	// end inline asm
	mov.b32 	%f71, %r54;
	shfl.sync.bfly.b32	%r138, %r54, 4, 31, -1;
	mov.b32 	%f72, %r138;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p82, %f71, %f72;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p83, %f71, %f71;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f73, %f71, %f72, %p82;
	selp.f32 	%f74, %f71, %f73, %p83;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r139, %f74;
	shfl.sync.bfly.b32	%r140, %r139, 2, 31, -1;
	mov.b32 	%f75, %r140;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p84, %f74, %f75;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p85, %f74, %f74;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f76, %f74, %f75, %p85;
	selp.f32 	%f77, %f74, %f76, %p84;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r141, %f77;
	shfl.sync.bfly.b32	%r142, %r141, 1, 31, -1;
	mov.b32 	%f78, %r142;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p86, %f77, %f78;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p87, %f77, %f77;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r143, %r141, %r142, %p87;
	selp.b32 	%r57, %r141, %r143, %p86;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p32 st.shared.b32 [ %r55 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r144, %r118, %r116;
	ld.shared.f32 	%f79, [%r144];
	ld.shared.f32 	%f80, [%r144+32];
	ld.shared.f32 	%f81, [%r144+64];
	ld.shared.f32 	%f82, [%r144+96];
$L__tmp2:
	.loc	1 38 40                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:38:40
	bar.sync 	0;
	mad.lo.s32 	%r87, %r98, -28, %r144;
	mov.b32 	%r59, %f79;
	mov.b32 	%r60, %f80;
	mov.b32 	%r61, %f81;
	mov.b32 	%r62, %f82;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r87 + 0 ], { %r59, %r60, %r61, %r62 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r145, %r99, 2;
	add.s32 	%r146, %r118, %r145;
	ld.shared.u32 	%r92, [%r146];
	.loc	1 39 18                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:39:18
	sub.f32 	%f83, %f27, %f79;
	sub.f32 	%f84, %f28, %f80;
	sub.f32 	%f85, %f29, %f81;
	sub.f32 	%f86, %f30, %f82;
	sub.f32 	%f87, %f31, %f79;
	sub.f32 	%f88, %f32, %f80;
	sub.f32 	%f89, %f33, %f81;
	sub.f32 	%f90, %f34, %f82;
	.loc	1 40 23                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:40:23
	mul.f32 	%f2, %f83, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f84, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f85, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f86, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	mul.f32 	%f10, %f87, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f88, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	mul.f32 	%f14, %f89, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f90, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	1 42 34                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:42:34
	selp.f32 	%f91, %f9, 0f00000000, %p6;
	selp.f32 	%f92, %f11, 0f00000000, %p6;
	selp.f32 	%f93, %f13, 0f00000000, %p6;
	selp.f32 	%f94, %f15, 0f00000000, %p6;
$L__tmp3:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f95, %f1, %f91;
	add.f32 	%f96, %f3, %f92;
	add.f32 	%f97, %f5, %f93;
	add.f32 	%f98, %f7, %f94;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f95;
	// begin inline asm
	@%p1 st.shared.b32 [ %r34 + 0 ], %r64;
	// end inline asm
	mov.b32 	%r66, %f96;
	// begin inline asm
	@%p1 st.shared.b32 [ %r36 + 0 ], %r66;
	// end inline asm
	mov.b32 	%r68, %f97;
	// begin inline asm
	@%p1 st.shared.b32 [ %r38 + 0 ], %r68;
	// end inline asm
	mov.b32 	%r70, %f98;
	// begin inline asm
	@%p1 st.shared.b32 [ %r40 + 0 ], %r70;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p31 ld.shared.b32 %r71, [ %r43 + 0 ];
	// end inline asm
	mov.b32 	%f99, %r71;
	shfl.sync.bfly.b32	%r147, %r71, 4, 31, -1;
	mov.b32 	%f100, %r147;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f101, %f99, %f100;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r148, %f101;
	shfl.sync.bfly.b32	%r149, %r148, 2, 31, -1;
	mov.b32 	%f102, %r149;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f103, %f101, %f102;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r150, %f103;
	shfl.sync.bfly.b32	%r151, %r150, 1, 31, -1;
	mov.b32 	%f104, %r151;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f105, %f103, %f104;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f105;
	// begin inline asm
	@%p32 st.shared.b32 [ %r43 + 0 ], %r74;
	// end inline asm
	// begin inline asm
	@%p31 ld.shared.b32 %r75, [ %r47 + 0 ];
	// end inline asm
	mov.b32 	%f106, %r75;
	shfl.sync.bfly.b32	%r152, %r75, 4, 31, -1;
	mov.b32 	%f107, %r152;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f108, %f106, %f107;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r153, %f108;
	shfl.sync.bfly.b32	%r154, %r153, 2, 31, -1;
	mov.b32 	%f109, %r154;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f110, %f108, %f109;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r155, %f110;
	shfl.sync.bfly.b32	%r156, %r155, 1, 31, -1;
	mov.b32 	%f111, %r156;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f112, %f110, %f111;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f112;
	// begin inline asm
	@%p32 st.shared.b32 [ %r47 + 0 ], %r78;
	// end inline asm
	// begin inline asm
	@%p31 ld.shared.b32 %r79, [ %r51 + 0 ];
	// end inline asm
	mov.b32 	%f113, %r79;
	shfl.sync.bfly.b32	%r157, %r79, 4, 31, -1;
	mov.b32 	%f114, %r157;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f115, %f113, %f114;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r158, %f115;
	shfl.sync.bfly.b32	%r159, %r158, 2, 31, -1;
	mov.b32 	%f116, %r159;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f117, %f115, %f116;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r160, %f117;
	shfl.sync.bfly.b32	%r161, %r160, 1, 31, -1;
	mov.b32 	%f118, %r161;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f119, %f117, %f118;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f119;
	// begin inline asm
	@%p32 st.shared.b32 [ %r51 + 0 ], %r82;
	// end inline asm
	// begin inline asm
	@%p31 ld.shared.b32 %r83, [ %r55 + 0 ];
	// end inline asm
	mov.b32 	%f120, %r83;
	shfl.sync.bfly.b32	%r162, %r83, 4, 31, -1;
	mov.b32 	%f121, %r162;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f122, %f120, %f121;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r163, %f122;
	shfl.sync.bfly.b32	%r164, %r163, 2, 31, -1;
	mov.b32 	%f123, %r164;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f124, %f122, %f123;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r165, %f124;
	shfl.sync.bfly.b32	%r166, %r165, 1, 31, -1;
	mov.b32 	%f125, %r166;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f126, %f124, %f125;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f126;
	// begin inline asm
	@%p32 st.shared.b32 [ %r55 + 0 ], %r86;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r88, [%r144];
	ld.shared.u32 	%r89, [%r144+32];
	ld.shared.u32 	%r90, [%r144+64];
	ld.shared.u32 	%r91, [%r144+96];
$L__tmp4:
	.loc	1 43 29                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:43:29
	bar.sync 	0;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r87 + 0 ], { %r88, %r89, %r90, %r91 };
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r93, [%r146];
	.loc	1 44 25                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:44:25
	mul.wide.s32 	%rd20, %r101, 4;
	add.s64 	%rd11, %rd15, %rd20;
	.loc	1 44 36                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:44:36
	and.b32  	%r167, %r95, 128;
	setp.eq.s32 	%p53, %r167, 0;
	// begin inline asm
	@%p53 st.global.b32 [ %rd11 + 0 ], { %r92 };
	// end inline asm
	.loc	1 45 25                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:45:25
	add.s64 	%rd12, %rd16, %rd20;
	.loc	1 45 37                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:45:37
	// begin inline asm
	@%p53 st.global.b32 [ %rd12 + 0 ], { %r93 };
	// end inline asm
	.loc	1 45 4                          // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:45:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 213                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xce DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 54
.b8 54
.b8 104
.b8 105
.b8 120
.b8 108
.b8 104
.b8 99
.b8 112
.b8 55
.b8 102
.b8 116
.b8 122
.b8 114
.b8 52
.b8 107
.b8 122
.b8 113
.b8 110
.b8 102
.b8 103
.b8 112
.b8 112
.b8 102
.b8 109
.b8 100
.b8 122
.b8 121
.b8 97
.b8 51
.b8 98
.b8 97
.b8 97
.b8 97
.b8 98
.b8 122
.b8 115
.b8 99
.b8 97
.b8 106
.b8 109
.b8 54
.b8 119
.b8 53
.b8 119
.b8 116
.b8 109
.b8 107
.b8 115
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 54
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 50
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x92:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 37                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
