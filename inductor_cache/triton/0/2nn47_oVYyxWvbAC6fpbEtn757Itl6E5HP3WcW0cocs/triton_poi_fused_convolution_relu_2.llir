; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_relu_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 1, !dbg !11
  %8 = or disjoint i32 %7, 1, !dbg !12
  %9 = icmp slt i32 %7, 192, !dbg !13
  %10 = icmp slt i32 %8, 192, !dbg !13
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !14
  %12 = shl i32 %11, 8, !dbg !15
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !16
  %14 = and i32 %13, 127, !dbg !16
  %15 = or disjoint i32 %12, %14, !dbg !17
  %16 = or disjoint i32 %15, 128, !dbg !17
  %17 = icmp slt i32 %15, 225, !dbg !18
  %18 = icmp slt i32 %16, 225, !dbg !18
  %.frozen = freeze i32 %7, !dbg !19
  %19 = sdiv i32 %.frozen, 48, !dbg !19
  %20 = mul i32 %19, 48, !dbg !20
  %.decomposed = sub i32 %.frozen, %20, !dbg !20
  %21 = mul i32 %15, 48, !dbg !21
  %22 = mul i32 %16, 48, !dbg !21
  %23 = mul i32 %19, 10800, !dbg !22
  %24 = add i32 %23, %.decomposed, !dbg !23
  %25 = add i32 %24, %21, !dbg !24
  %26 = add i32 %24, %22, !dbg !24
  %27 = sext i32 %25 to i64, !dbg !25
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !25
  %29 = sext i32 %26 to i64, !dbg !25
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !25
  %31 = and i1 %9, %17, !dbg !26
  %32 = and i1 %18, %9, !dbg !26
  %33 = and i1 %10, %17, !dbg !26
  %34 = and i1 %18, %10, !dbg !26
  %35 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 %31) #1, !dbg !27
  %36 = extractvalue { i32, i32 } %35, 0, !dbg !27
  %37 = extractvalue { i32, i32 } %35, 1, !dbg !27
  %38 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %30, i1 %32) #1, !dbg !27
  %39 = extractvalue { i32, i32 } %38, 0, !dbg !27
  %40 = extractvalue { i32, i32 } %38, 1, !dbg !27
  %41 = sext i32 %.decomposed to i64, !dbg !28
  %42 = getelementptr float, ptr addrspace(1) %1, i64 %41, !dbg !28
  %43 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %42, i1 %9) #1, !dbg !29
  %44 = extractvalue { i32, i32 } %43, 0, !dbg !29
  %45 = extractvalue { i32, i32 } %43, 1, !dbg !29
  %46 = insertelement <4 x i32> poison, i32 %40, i64 0, !dbg !27
  %47 = insertelement <4 x i32> %46, i32 %39, i64 1, !dbg !27
  %48 = insertelement <4 x i32> %47, i32 %37, i64 2, !dbg !27
  %49 = insertelement <4 x i32> %48, i32 %36, i64 3, !dbg !27
  %50 = bitcast <4 x i32> %49 to <4 x float>, !dbg !27
  %51 = insertelement <2 x i32> poison, i32 %45, i64 0, !dbg !29
  %52 = insertelement <2 x i32> %51, i32 %44, i64 1, !dbg !29
  %53 = bitcast <2 x i32> %52 to <2 x float>, !dbg !29
  %54 = shufflevector <2 x float> %53, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>, !dbg !29
  %55 = fadd <4 x float> %54, %50, !dbg !30
  %56 = fcmp olt <4 x float> %55, zeroinitializer, !dbg !31
  %57 = extractelement <4 x i1> %56, i64 3, !dbg !35
  %58 = extractelement <4 x i1> %56, i64 2, !dbg !35
  %59 = extractelement <4 x i1> %56, i64 1, !dbg !35
  %60 = extractelement <4 x i1> %56, i64 0, !dbg !35
  %61 = mul i32 %6, 450, !dbg !36
  %62 = mul i32 %8, 225, !dbg !36
  %63 = add i32 %15, %61, !dbg !37
  %64 = add i32 %61, %16, !dbg !37
  %65 = add i32 %15, %62, !dbg !37
  %66 = add i32 %62, %16, !dbg !37
  %67 = sext i32 %63 to i64, !dbg !38
  %68 = getelementptr float, ptr addrspace(1) %2, i64 %67, !dbg !38
  %69 = sext i32 %64 to i64, !dbg !38
  %70 = getelementptr float, ptr addrspace(1) %2, i64 %69, !dbg !38
  %71 = sext i32 %65 to i64, !dbg !38
  %72 = getelementptr float, ptr addrspace(1) %2, i64 %71, !dbg !38
  %73 = sext i32 %66 to i64, !dbg !38
  %74 = getelementptr float, ptr addrspace(1) %2, i64 %73, !dbg !38
  %bc = bitcast <4 x float> %55 to <4 x i32>, !dbg !39
  %75 = extractelement <4 x i32> %bc, i64 3, !dbg !39
  %76 = select i1 %57, i32 0, i32 %75, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %76, ptr addrspace(1) %68, i1 %31) #1, !dbg !39
  %bc1 = bitcast <4 x float> %55 to <4 x i32>, !dbg !39
  %77 = extractelement <4 x i32> %bc1, i64 1, !dbg !39
  %78 = select i1 %59, i32 0, i32 %77, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %78, ptr addrspace(1) %70, i1 %32) #1, !dbg !39
  %bc2 = bitcast <4 x float> %55 to <4 x i32>, !dbg !39
  %79 = extractelement <4 x i32> %bc2, i64 2, !dbg !39
  %80 = select i1 %58, i32 0, i32 %79, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %80, ptr addrspace(1) %72, i1 %33) #1, !dbg !39
  %bc3 = bitcast <4 x float> %55 to <4 x i32>, !dbg !39
  %81 = extractelement <4 x i32> %bc3, i64 0, !dbg !39
  %82 = select i1 %60, i32 0, i32 %81, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %82, ptr addrspace(1) %74, i1 %34) #1, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py", directory: "inductor_cache/dv")
!4 = !{ptr @triton_poi_fused_convolution_relu_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_relu_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_relu_2", linkageName: "triton_poi_fused_convolution_relu_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 23, scope: !7)
!13 = !DILocation(line: 24, column: 21, scope: !7)
!14 = !DILocation(line: 25, column: 28, scope: !7)
!15 = !DILocation(line: 25, column: 33, scope: !7)
!16 = !DILocation(line: 26, column: 44, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 30, column: 19, scope: !7)
!20 = !DILocation(line: 29, column: 19, scope: !7)
!21 = !DILocation(line: 32, column: 38, scope: !7)
!22 = !DILocation(line: 32, column: 49, scope: !7)
!23 = !DILocation(line: 32, column: 35, scope: !7)
!24 = !DILocation(line: 32, column: 43, scope: !7)
!25 = !DILocation(line: 32, column: 30, scope: !7)
!26 = !DILocation(line: 32, column: 62, scope: !7)
!27 = !DILocation(line: 32, column: 54, scope: !7)
!28 = !DILocation(line: 33, column: 30, scope: !7)
!29 = !DILocation(line: 33, column: 35, scope: !7)
!30 = !DILocation(line: 34, column: 18, scope: !7)
!31 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !7, file: !33, discriminator: 0)
!33 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!34 = !DILocation(line: 36, column: 40, scope: !7)
!35 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !34)
!36 = !DILocation(line: 37, column: 34, scope: !7)
!37 = !DILocation(line: 37, column: 30, scope: !7)
!38 = !DILocation(line: 37, column: 25, scope: !7)
!39 = !DILocation(line: 37, column: 45, scope: !7)
!40 = !DILocation(line: 37, column: 4, scope: !7)
