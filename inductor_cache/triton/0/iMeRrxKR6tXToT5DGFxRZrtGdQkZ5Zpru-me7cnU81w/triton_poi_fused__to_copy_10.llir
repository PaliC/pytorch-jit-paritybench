; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__to_copy_10(ptr addrspace(1) %0, i32 %1) local_unnamed_addr !dbg !7 {
  %3 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %4 = shl i32 %3, 3, !dbg !11
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %6 = and i32 %5, 24, !dbg !12
  %7 = and i32 %5, 7, !dbg !12
  %8 = or disjoint i32 %4, %7, !dbg !13
  %9 = icmp slt i32 %8, 8, !dbg !14
  %10 = sitofp i32 %8 to float, !dbg !15
  %11 = fmul float %10, 0x3FDB6DB6E0000000, !dbg !16
  %12 = fcmp ogt float %11, 0.000000e+00, !dbg !17
  %13 = select i1 %12, float %11, float 0.000000e+00, !dbg !21
  %14 = fptosi float %13 to i32, !dbg !22
  %15 = sext i32 %8 to i64, !dbg !23
  %16 = getelementptr i64, ptr addrspace(1) %0, i64 %15, !dbg !23
  %17 = sext i32 %14 to i64, !dbg !24
  %18 = icmp eq i32 %6, 0, !dbg !24
  %19 = and i1 %18, %9, !dbg !24
  tail call void asm sideeffect "@$2 st.global.b64 [ $1 + 0 ], { $0 };", "l,l,b"(i64 %17, ptr addrspace(1) %16, i1 %19) #1, !dbg !24
  ret void, !dbg !25
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ci2lbm57omhjix4adyshpsfypw2lgaofciesggc2kizsc7tvrddf.py", directory: "inductor_cache/i2")
!4 = !{ptr @triton_poi_fused__to_copy_10, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__to_copy_10, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_10", linkageName: "triton_poi_fused__to_copy_10", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 28, column: 18, scope: !7)
!17 = !DILocation(line: 118, column: 15, scope: !18, inlinedAt: !20)
!18 = distinct !DILexicalBlockFile(scope: !7, file: !19, discriminator: 0)
!19 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!20 = !DILocation(line: 30, column: 40, scope: !7)
!21 = !DILocation(line: 121, column: 29, scope: !18, inlinedAt: !20)
!22 = !DILocation(line: 31, column: 19, scope: !7)
!23 = !DILocation(line: 32, column: 25, scope: !7)
!24 = !DILocation(line: 32, column: 36, scope: !7)
!25 = !DILocation(line: 32, column: 4, scope: !7)
