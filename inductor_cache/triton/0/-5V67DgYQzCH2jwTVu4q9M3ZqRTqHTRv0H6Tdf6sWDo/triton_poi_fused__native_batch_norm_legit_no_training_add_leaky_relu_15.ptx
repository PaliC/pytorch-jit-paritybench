//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<43>;
	.reg .b32 	%r<137>;
	.reg .f32 	%f<80>;
	.reg .b64 	%rd<23>;
	.loc	1 19 0                          // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_1];
$L__tmp0:
	.loc	1 22 28                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:22:33
	shl.b32 	%r82, %r1, 3;
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_2];
	.loc	1 23 44                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:23:44
	mov.u32 	%r83, %tid.x;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_3];
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_4];
	bfe.u32 	%r85, %r83, 5, 2;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_5];
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_15_param_6];
	shl.b32 	%r86, %r83, 2;
	.loc	1 23 23                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:23:23
	or.b32  	%r87, %r82, %r85;
	.loc	1 25 28                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:25:33
	shl.b32 	%r88, %r2, 7;
	.loc	1 26 44                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:26:44
	and.b32  	%r89, %r86, 124;
	and.b32  	%r90, %r83, 127;
	.loc	1 26 23                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:26:23
	or.b32  	%r91, %r88, %r89;
	or.b32  	%r92, %r88, %r90;
	.loc	1 27 21                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:27:21
	setp.lt.s32 	%p1, %r91, 128;
	setp.lt.s32 	%p11, %r92, 128;
	.loc	1 23 23                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:23:23
	shl.b32 	%r93, %r87, 7;
	.loc	1 32 35                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:32:35
	add.s32 	%r94, %r91, %r93;
	add.s32 	%r95, %r94, 512;
	.loc	1 32 30                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:32:30
	mul.wide.s32 	%rd18, %r94, 4;
	add.s64 	%rd1, %rd11, %rd18;
	mul.wide.s32 	%rd19, %r95, 4;
	add.s64 	%rd2, %rd11, %rd19;
	.loc	1 32 44                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:32:44
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r14, %r16, %r18 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd2 + 0 ];
	// end inline asm
	and.b32  	%r96, %r86, 508;
	bfe.u32 	%r97, %r86, 7, 2;
	or.b32  	%r98, %r97, %r96;
	shl.b32 	%r99, %r98, 2;
	mov.u32 	%r100, global_smem;
	add.s32 	%r11, %r100, %r99;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	shl.b32 	%r101, %r97, 2;
	add.s32 	%r102, %r100, %r101;
	shl.b32 	%r103, %r96, 2;
	add.s32 	%r104, %r102, %r103;
	add.s32 	%r13, %r104, 4;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	add.s32 	%r15, %r104, 8;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	add.s32 	%r17, %r104, 12;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r105, %r90, 2;
	add.s32 	%r42, %r100, %r105;
	ld.shared.f32 	%f1, [%r42];
	add.s32 	%r44, %r42, 516;
	ld.shared.f32 	%f2, [%r42+516];
	add.s32 	%r46, %r42, 1032;
	ld.shared.f32 	%f3, [%r42+1032];
	add.s32 	%r48, %r42, 1548;
	ld.shared.f32 	%f4, [%r42+1548];
	bar.sync 	0;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r20;
	// end inline asm
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r22;
	// end inline asm
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r24;
	// end inline asm
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f5, [%r42];
	ld.shared.f32 	%f6, [%r42+516];
	ld.shared.f32 	%f7, [%r42+1032];
	ld.shared.f32 	%f8, [%r42+1548];
	.loc	1 33 30                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:33:30
	mul.wide.s32 	%rd20, %r92, 4;
	add.s64 	%rd3, %rd12, %rd20;
	.loc	1 33 35                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:33:35
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r27 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 30                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:34:30
	add.s64 	%rd4, %rd13, %rd20;
	.loc	1 34 35                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:34:35
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r28 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r28;
	.loc	1 35 31                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:35:31
	add.s64 	%rd5, %rd14, %rd20;
	.loc	1 35 36                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:35:36
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r29 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 36 31                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:36:31
	add.s64 	%rd6, %rd15, %rd20;
	.loc	1 36 36                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:36:36
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r30 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 37 31                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:37:31
	add.s64 	%rd7, %rd16, %rd18;
	add.s64 	%rd8, %rd16, %rd19;
	.loc	1 37 45                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:37:45
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 40 18                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:40:18
	add.f32 	%f10, %f9, 0f3727C5AC;
	.loc	1 41 26                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:41:26
	sqrt.approx.ftz.f32 	%f11, %f10;
	.loc	1 37 45                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:37:45
	mov.b32 	%f12, %r38;
	mov.b32 	%f13, %r37;
	mov.b32 	%f14, %r36;
	mov.b32 	%f15, %r35;
	mov.b32 	%f16, %r34;
	mov.b32 	%f17, %r33;
	mov.b32 	%f18, %r32;
	mov.b32 	%f19, %r31;
	.loc	1 23 44                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:23:44
	and.b32  	%r106, %r86, 4;
	.loc	1 23 23                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:23:23
	or.b32  	%r107, %r82, %r106;
	.loc	1 31 19                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:31:19
	bfe.s32 	%r108, %r1, 28, 1;
	shr.u32 	%r109, %r108, 24;
	add.s32 	%r110, %r107, %r109;
	.loc	1 30 19                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:30:19
	and.b32  	%r111, %r110, -256;
	sub.s32 	%r112, %r107, %r111;
	.loc	1 26 44                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:26:44
	bfe.u32 	%r113, %r83, 1, 6;
	.loc	1 26 23                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:26:23
	or.b32  	%r114, %r113, %r88;
	or.b32  	%r115, %r114, 64;
	.loc	1 27 21                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:27:21
	setp.lt.s32 	%p34, %r115, 128;
	setp.lt.s32 	%p33, %r114, 128;
	.loc	1 43 18                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:43:18
	mov.b32 	%r41, %f11;
	mov.b32 	%r40, 1065353216;
	// begin inline asm
	div.full.f32 %r39, %r40, %r41;
	// end inline asm
	mov.b32 	%f20, %r39;
	.loc	1 38 18                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:38:18
	mov.b32 	%f21, %r27;
	sub.f32 	%f22, %f1, %f21;
	sub.f32 	%f23, %f2, %f21;
	sub.f32 	%f24, %f3, %f21;
	sub.f32 	%f25, %f4, %f21;
	sub.f32 	%f26, %f5, %f21;
	sub.f32 	%f27, %f6, %f21;
	sub.f32 	%f28, %f7, %f21;
	sub.f32 	%f29, %f8, %f21;
	.loc	1 46 19                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:46:19
	mul.f32 	%f30, %f29, %f20;
	mul.f32 	%f31, %f28, %f20;
	mul.f32 	%f32, %f27, %f20;
	mul.f32 	%f33, %f26, %f20;
	mul.f32 	%f34, %f25, %f20;
	mul.f32 	%f35, %f24, %f20;
	mul.f32 	%f36, %f23, %f20;
	mul.f32 	%f37, %f22, %f20;
	.loc	1 47 20                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:47:20
	mov.b32 	%f38, %r29;
	.loc	1 48 20                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:48:20
	mov.b32 	%f39, %r30;
	fma.rn.f32 	%f40, %f37, %f38, %f39;
	fma.rn.f32 	%f41, %f36, %f38, %f39;
	fma.rn.f32 	%f42, %f35, %f38, %f39;
	fma.rn.f32 	%f43, %f34, %f38, %f39;
	fma.rn.f32 	%f44, %f33, %f38, %f39;
	fma.rn.f32 	%f45, %f32, %f38, %f39;
	fma.rn.f32 	%f46, %f31, %f38, %f39;
	fma.rn.f32 	%f47, %f30, %f38, %f39;
	.loc	1 50 20                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:50:20
	setp.gt.f32 	%p35, %f47, 0f00000000;
	setp.gt.f32 	%p36, %f46, 0f00000000;
	setp.gt.f32 	%p37, %f45, 0f00000000;
	setp.gt.f32 	%p38, %f44, 0f00000000;
	setp.gt.f32 	%p39, %f43, 0f00000000;
	setp.gt.f32 	%p40, %f42, 0f00000000;
	setp.gt.f32 	%p41, %f41, 0f00000000;
	setp.gt.f32 	%p42, %f40, 0f00000000;
	.loc	1 52 20                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:52:20
	mul.f32 	%f48, %f40, 0f3DCCCCCD;
	mul.f32 	%f49, %f41, 0f3DCCCCCD;
	mul.f32 	%f50, %f42, 0f3DCCCCCD;
	mul.f32 	%f51, %f43, 0f3DCCCCCD;
	mul.f32 	%f52, %f44, 0f3DCCCCCD;
	mul.f32 	%f53, %f45, 0f3DCCCCCD;
	mul.f32 	%f54, %f46, 0f3DCCCCCD;
	mul.f32 	%f55, %f47, 0f3DCCCCCD;
	.loc	1 53 35                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:53:35
	selp.f32 	%f56, %f40, %f48, %p42;
	selp.f32 	%f57, %f41, %f49, %p41;
	selp.f32 	%f58, %f42, %f50, %p40;
	selp.f32 	%f59, %f43, %f51, %p39;
	selp.f32 	%f60, %f44, %f52, %p38;
	selp.f32 	%f61, %f45, %f53, %p37;
	selp.f32 	%f62, %f46, %f54, %p36;
	selp.f32 	%f63, %f47, %f55, %p35;
	bar.sync 	0;
	mov.b32 	%r43, %f56;
	// begin inline asm
	@%p3 st.shared.b32 [ %r42 + 0 ], %r43;
	// end inline asm
	mov.b32 	%r45, %f57;
	// begin inline asm
	@%p3 st.shared.b32 [ %r44 + 0 ], %r45;
	// end inline asm
	mov.b32 	%r47, %f58;
	// begin inline asm
	@%p3 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	mov.b32 	%r49, %f59;
	// begin inline asm
	@%p3 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f64, [%r11];
	ld.shared.f32 	%f65, [%r104+4];
	ld.shared.f32 	%f66, [%r104+8];
	ld.shared.f32 	%f67, [%r104+12];
	bar.sync 	0;
	mov.b32 	%r51, %f60;
	// begin inline asm
	@%p3 st.shared.b32 [ %r42 + 0 ], %r51;
	// end inline asm
	mov.b32 	%r53, %f61;
	// begin inline asm
	@%p3 st.shared.b32 [ %r44 + 0 ], %r53;
	// end inline asm
	mov.b32 	%r55, %f62;
	// begin inline asm
	@%p3 st.shared.b32 [ %r46 + 0 ], %r55;
	// end inline asm
	mov.b32 	%r57, %f63;
	// begin inline asm
	@%p3 st.shared.b32 [ %r48 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f68, [%r11];
	ld.shared.f32 	%f69, [%r104+4];
	ld.shared.f32 	%f70, [%r104+8];
	ld.shared.f32 	%f71, [%r104+12];
	.loc	1 54 20                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:54:20
	add.f32 	%f72, %f64, %f19;
	add.f32 	%f73, %f65, %f18;
	add.f32 	%f74, %f66, %f17;
	add.f32 	%f75, %f67, %f16;
	add.f32 	%f76, %f68, %f15;
	add.f32 	%f77, %f69, %f14;
	add.f32 	%f78, %f70, %f13;
	add.f32 	%f79, %f71, %f12;
	.loc	1 55 34                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:55:34
	shl.b32 	%r116, %r114, 8;
	shl.b32 	%r117, %r115, 8;
	.loc	1 55 45                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:55:45
	shl.b32 	%r118, %r110, 7;
	and.b32  	%r119, %r118, -32768;
	.loc	1 55 30                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:55:30
	add.s32 	%r120, %r119, %r112;
	.loc	1 55 39                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:55:39
	add.s32 	%r121, %r120, %r116;
	add.s32 	%r122, %r120, %r117;
	.loc	1 55 25                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:55:25
	mul.wide.s32 	%rd21, %r121, 4;
	add.s64 	%rd9, %rd17, %rd21;
	mul.wide.s32 	%rd22, %r122, 4;
	add.s64 	%rd10, %rd17, %rd22;
	.loc	1 55 57                         // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:55:57
	bar.sync 	0;
	shl.b32 	%r123, %r83, 5;
	and.b32  	%r124, %r123, 992;
	or.b32  	%r125, %r124, %r85;
	shl.b32 	%r126, %r125, 2;
	mov.b32 	%r59, %f72;
	shl.b32 	%r127, %r124, 1;
	add.s32 	%r128, %r100, %r127;
	add.s32 	%r58, %r128, %r126;
	// begin inline asm
	@%p3 st.shared.b32 [ %r58 + 0 ], %r59;
	// end inline asm
	add.s32 	%r60, %r58, 48;
	mov.b32 	%r61, %f73;
	// begin inline asm
	@%p3 st.shared.b32 [ %r60 + 0 ], %r61;
	// end inline asm
	add.s32 	%r62, %r58, 96;
	mov.b32 	%r63, %f74;
	// begin inline asm
	@%p3 st.shared.b32 [ %r62 + 0 ], %r63;
	// end inline asm
	add.s32 	%r64, %r58, 144;
	mov.b32 	%r65, %f75;
	// begin inline asm
	@%p3 st.shared.b32 [ %r64 + 0 ], %r65;
	// end inline asm
	add.s32 	%r66, %r58, 16;
	mov.b32 	%r67, %f76;
	// begin inline asm
	@%p3 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	add.s32 	%r68, %r58, 64;
	mov.b32 	%r69, %f77;
	// begin inline asm
	@%p3 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	add.s32 	%r70, %r58, 112;
	mov.b32 	%r71, %f78;
	// begin inline asm
	@%p3 st.shared.b32 [ %r70 + 0 ], %r71;
	// end inline asm
	add.s32 	%r72, %r58, 160;
	mov.b32 	%r73, %f79;
	// begin inline asm
	@%p3 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r129, %r83, 3;
	and.b32  	%r130, %r129, 1008;
	add.s32 	%r131, %r100, %r130;
	add.s32 	%r132, %r131, %r103;
	or.b32  	%r133, %r129, 1024;
	and.b32  	%r134, %r133, 2032;
	add.s32 	%r135, %r100, %r134;
	add.s32 	%r136, %r135, %r103;
	ld.shared.v4.u32 	{%r78, %r79, %r80, %r81}, [%r136+2048];
	ld.shared.v4.u32 	{%r74, %r75, %r76, %r77}, [%r132];
	// begin inline asm
	@%p33 st.global.v4.b32 [ %rd9 + 0 ], { %r74, %r75, %r76, %r77 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.v4.b32 [ %rd10 + 0 ], { %r78, %r79, %r80, %r81 };
	// end inline asm
	.loc	1 55 4                          // ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py:55:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/tx/ctx5it4zwm4i5kce7vrj22bnocsvfsfdgxw3jnbdd4rma2j3yynu.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 120
.b8 53
.b8 105
.b8 116
.b8 52
.b8 122
.b8 119
.b8 109
.b8 52
.b8 105
.b8 53
.b8 107
.b8 99
.b8 101
.b8 55
.b8 118
.b8 114
.b8 106
.b8 50
.b8 50
.b8 98
.b8 110
.b8 111
.b8 99
.b8 115
.b8 118
.b8 102
.b8 115
.b8 102
.b8 100
.b8 103
.b8 120
.b8 119
.b8 51
.b8 106
.b8 110
.b8 98
.b8 100
.b8 100
.b8 52
.b8 114
.b8 109
.b8 97
.b8 50
.b8 106
.b8 51
.b8 121
.b8 121
.b8 110
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 120
.b8 0
	}
	.section	.debug_macinfo	{	}
