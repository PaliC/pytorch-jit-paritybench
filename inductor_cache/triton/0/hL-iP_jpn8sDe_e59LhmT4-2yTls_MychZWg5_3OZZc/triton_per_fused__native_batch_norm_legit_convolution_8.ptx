//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_convolution_8 // -- Begin function triton_per_fused__native_batch_norm_legit_convolution_8
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_convolution_8
.visible .entry triton_per_fused__native_batch_norm_legit_convolution_8(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_8_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_8_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_8_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_8_param_3,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_8_param_4,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_8_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<114>;
	.reg .f32 	%f<82>;
	.reg .b64 	%rd<24>;
	.loc	1 19 0                          // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd15, [triton_per_fused__native_batch_norm_legit_convolution_8_param_0];
	ld.param.u64 	%rd16, [triton_per_fused__native_batch_norm_legit_convolution_8_param_1];
$L__tmp0:
	.loc	1 23 28                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:23:33
	shl.b32 	%r56, %r1, 5;
	ld.param.u64 	%rd17, [triton_per_fused__native_batch_norm_legit_convolution_8_param_2];
	ld.param.u64 	%rd18, [triton_per_fused__native_batch_norm_legit_convolution_8_param_3];
	.loc	1 24 44                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:24:44
	mov.u32 	%r57, %tid.x;
	bfe.u32 	%r58, %r57, 4, 4;
	and.b32  	%r59, %r57, 31;
	.loc	1 24 23                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:24:23
	or.b32  	%r60, %r56, %r58;
	or.b32  	%r61, %r60, 16;
	.loc	1 25 21                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:25:21
	setp.lt.s32 	%p1, %r60, 1024;
	setp.lt.s32 	%p6, %r61, 1024;
	.loc	1 26 34                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:26:34
	shl.b32 	%r62, %r57, 2;
	and.b32  	%r63, %r62, 60;
	.loc	1 31 19                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:31:19
	bfe.s32 	%r64, %r1, 26, 1;
	shr.u32 	%r65, %r64, 24;
	add.s32 	%r66, %r60, %r65;
	and.b32  	%r67, %r66, -256;
	sub.s32 	%r68, %r60, %r67;
	add.s32 	%r69, %r61, %r65;
	and.b32  	%r70, %r69, -256;
	sub.s32 	%r71, %r61, %r70;
	.loc	1 32 42                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:32:42
	shl.b32 	%r72, %r60, 6;
	shl.b32 	%r73, %r61, 6;
	.loc	1 32 39                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:32:39
	or.b32  	%r74, %r72, %r63;
	or.b32  	%r75, %r73, %r63;
	.loc	1 32 34                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:32:34
	mul.wide.s32 	%rd19, %r74, 4;
	add.s64 	%rd1, %rd15, %rd19;
	mul.wide.s32 	%rd20, %r75, 4;
	add.s64 	%rd2, %rd15, %rd20;
	mov.b32 	%r6, 0;
	.loc	1 32 47                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	.loc	1 33 30                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:33:30
	mul.wide.s32 	%rd21, %r68, 4;
	add.s64 	%rd3, %rd17, %rd21;
	mul.wide.s32 	%rd22, %r71, 4;
	add.s64 	%rd7, %rd17, %rd22;
	.loc	1 33 35                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:33:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r21;
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r22 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r23 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r24 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r25 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r25;
	.loc	1 34 18                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:34:18
	add.f32 	%f11, %f1, %f9;
	add.f32 	%f12, %f2, %f9;
	add.f32 	%f13, %f3, %f9;
	add.f32 	%f14, %f4, %f9;
	add.f32 	%f15, %f5, %f10;
	add.f32 	%f16, %f6, %f10;
	add.f32 	%f17, %f7, %f10;
	add.f32 	%f18, %f8, %f10;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f11, %f12;
	add.f32 	%f20, %f13, %f19;
	add.f32 	%f21, %f14, %f20;
	selp.f32 	%f22, %f21, 0f00000000, %p1;
	add.f32 	%f23, %f15, %f16;
	add.f32 	%f24, %f17, %f23;
	add.f32 	%f25, %f18, %f24;
	selp.f32 	%f26, %f25, 0f00000000, %p6;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f22;
	shfl.sync.bfly.b32	%r77, %r76, 8, 31, -1;
	mov.b32 	%f27, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f22, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f28;
	shfl.sync.bfly.b32	%r79, %r78, 4, 31, -1;
	mov.b32 	%f29, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f30;
	shfl.sync.bfly.b32	%r81, %r80, 2, 31, -1;
	mov.b32 	%f31, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f32;
	shfl.sync.bfly.b32	%r83, %r82, 1, 31, -1;
	mov.b32 	%f33, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f26;
	shfl.sync.bfly.b32	%r85, %r84, 8, 31, -1;
	mov.b32 	%f35, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f26, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f36;
	shfl.sync.bfly.b32	%r87, %r86, 4, 31, -1;
	mov.b32 	%f37, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f38;
	shfl.sync.bfly.b32	%r89, %r88, 2, 31, -1;
	mov.b32 	%f39, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f40;
	shfl.sync.bfly.b32	%r91, %r90, 1, 31, -1;
	mov.b32 	%f41, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
$L__tmp2:
	.loc	1 42 19                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:42:19
	shl.b32 	%r92, %r58, 2;
	mov.u32 	%r93, global_smem;
	add.s32 	%r26, %r93, %r92;
	mov.b32 	%r27, %f34;
	mov.pred 	%p19, -1;
	// begin inline asm
	@%p19 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	add.s32 	%r28, %r26, 64;
	mov.b32 	%r29, %f42;
	// begin inline asm
	@%p19 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r94, %r59, 2;
	add.s32 	%r95, %r93, %r94;
	ld.shared.u32 	%r31, [%r95];
	mov.b32 	%r32, 1115684864;
	// begin inline asm
	div.full.f32 %r55, %r31, %r32;
	// end inline asm
	// begin inline asm
	div.full.f32 %r33, %r27, %r32;
	// end inline asm
	mov.b32 	%f43, %r33;
	// begin inline asm
	div.full.f32 %r36, %r29, %r32;
	// end inline asm
	mov.b32 	%f44, %r36;
	.loc	1 43 19                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:43:19
	sub.f32 	%f45, %f11, %f43;
	sub.f32 	%f46, %f12, %f43;
	sub.f32 	%f47, %f13, %f43;
	sub.f32 	%f48, %f14, %f43;
	sub.f32 	%f49, %f15, %f44;
	sub.f32 	%f50, %f16, %f44;
	sub.f32 	%f51, %f17, %f44;
	sub.f32 	%f52, %f18, %f44;
	.loc	1 44 20                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:44:20
	mul.f32 	%f53, %f46, %f46;
	mul.f32 	%f54, %f50, %f50;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f55, %f45, %f45, %f53;
	fma.rn.f32 	%f56, %f47, %f47, %f55;
	fma.rn.f32 	%f57, %f48, %f48, %f56;
	selp.f32 	%f58, %f57, 0f00000000, %p1;
	fma.rn.f32 	%f59, %f49, %f49, %f54;
	fma.rn.f32 	%f60, %f51, %f51, %f59;
	fma.rn.f32 	%f61, %f52, %f52, %f60;
	selp.f32 	%f62, %f61, 0f00000000, %p6;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f58;
	shfl.sync.bfly.b32	%r97, %r96, 8, 31, -1;
	mov.b32 	%f63, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f58, %f63;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f64;
	shfl.sync.bfly.b32	%r99, %r98, 4, 31, -1;
	mov.b32 	%f65, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f66;
	shfl.sync.bfly.b32	%r101, %r100, 2, 31, -1;
	mov.b32 	%f67, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f68;
	shfl.sync.bfly.b32	%r103, %r102, 1, 31, -1;
	mov.b32 	%f69, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f62;
	shfl.sync.bfly.b32	%r105, %r104, 8, 31, -1;
	mov.b32 	%f71, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f62, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f72;
	shfl.sync.bfly.b32	%r107, %r106, 4, 31, -1;
	mov.b32 	%f73, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r108, %f74;
	shfl.sync.bfly.b32	%r109, %r108, 2, 31, -1;
	mov.b32 	%f75, %r109;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r110, %f76;
	shfl.sync.bfly.b32	%r111, %r110, 1, 31, -1;
	mov.b32 	%f77, %r111;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
$L__tmp4:
	.loc	1 52 28                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:52:28
	bar.sync 	0;
	mov.b32 	%r40, %f70;
	// begin inline asm
	@%p19 st.shared.b32 [ %r26 + 0 ], %r40;
	// end inline asm
	mov.b32 	%r42, %f78;
	// begin inline asm
	@%p19 st.shared.b32 [ %r28 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	.loc	1 49 20                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:49:20
	ld.shared.u32 	%r44, [%r95];
	// begin inline asm
	div.full.f32 %r43, %r44, %r32;
	// end inline asm
	mov.b32 	%f79, %r43;
	.loc	1 51 20                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:51:20
	add.f32 	%f80, %f79, 0f3727C5AC;
	.loc	1 52 28                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:52:28
	rsqrt.approx.ftz.f32 	%f81, %f80;
	.loc	1 24 23                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:24:23
	or.b32  	%r112, %r56, %r59;
	.loc	1 25 21                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:25:21
	setp.lt.s32 	%p27, %r112, 1024;
	.loc	1 53 47                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:53:47
	mov.b32 	%r46, %f11;
	mov.b32 	%r47, %f12;
	mov.b32 	%r48, %f13;
	mov.b32 	%r49, %f14;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r46, %r47, %r48, %r49 };
	// end inline asm
	mov.b32 	%r50, %f15;
	mov.b32 	%r51, %f16;
	mov.b32 	%r52, %f17;
	mov.b32 	%r53, %f18;
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd2 + 0 ], { %r50, %r51, %r52, %r53 };
	// end inline asm
	.loc	1 54 4                          // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:54:4
	bar.sync 	0;
	.loc	1 55 28                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:55:28
	mul.wide.s32 	%rd23, %r112, 4;
	add.s64 	%rd13, %rd16, %rd23;
	.loc	1 55 40                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:55:40
	and.b32  	%r113, %r57, 224;
	setp.eq.s32 	%p28, %r113, 0;
	mov.b32 	%r54, %f81;
	and.pred  	%p25, %p28, %p27;
	// begin inline asm
	@%p25 st.global.b32 [ %rd13 + 0 ], { %r54 };
	// end inline asm
	.loc	1 56 25                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:56:25
	add.s64 	%rd14, %rd18, %rd23;
	.loc	1 56 37                         // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:56:37
	// begin inline asm
	@%p25 st.global.b32 [ %rd14 + 0 ], { %r55 };
	// end inline asm
	.loc	1 56 4                          // ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py:56:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/h3/ch3enj2j5f3wlyidntbcapchbxskuh7cwgznatra66c6ltfwnqvf.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 224                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 51
.b8 101
.b8 110
.b8 106
.b8 50
.b8 106
.b8 53
.b8 102
.b8 51
.b8 119
.b8 108
.b8 121
.b8 105
.b8 100
.b8 110
.b8 116
.b8 98
.b8 99
.b8 97
.b8 112
.b8 99
.b8 104
.b8 98
.b8 120
.b8 115
.b8 107
.b8 117
.b8 104
.b8 55
.b8 99
.b8 119
.b8 103
.b8 122
.b8 110
.b8 97
.b8 116
.b8 114
.b8 97
.b8 54
.b8 54
.b8 99
.b8 54
.b8 108
.b8 116
.b8 102
.b8 119
.b8 110
.b8 113
.b8 118
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9d:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xca:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
