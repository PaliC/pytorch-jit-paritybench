; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_sin_11(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 510, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = sext i32 %9 to i64, !dbg !14
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %10, !dbg !14
  %12 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %11, i1 true) #4, !dbg !15
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !15
  %14 = extractvalue { i32, i32 } %12, 1, !dbg !15
  %15 = bitcast i32 %13 to float, !dbg !15
  %16 = bitcast i32 %14 to float, !dbg !15
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !16
  %17 = fmul float %15, 0x3FE45F3060000000, !dbg !16
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i = icmp eq i32 %18, 0, !dbg !16
  %19 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %17) #4, !dbg !16
  %20 = tail call i32 @llvm.nvvm.f2i.rn(float %17) #4, !dbg !16
  %.01.i = select i1 %.not.i, i32 %20, i32 %19, !dbg !16
  %21 = sitofp i32 %.01.i to float, !dbg !16
  %22 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not15.i = icmp eq i32 %22, 0, !dbg !16
  %23 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %21, float 0xBFF921FB40000000, float %15) #4, !dbg !16
  %24 = tail call float @llvm.nvvm.fma.rn.f(float %21, float 0xBFF921FB40000000, float %15) #4, !dbg !16
  %.02.i = select i1 %.not15.i, float %24, float %23, !dbg !16
  %25 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not16.i = icmp eq i32 %25, 0, !dbg !16
  %26 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %21, float 0xBE74442D00000000, float %.02.i) #4, !dbg !16
  %27 = tail call float @llvm.nvvm.fma.rn.f(float %21, float 0xBE74442D00000000, float %.02.i) #4, !dbg !16
  %.03.i = select i1 %.not16.i, float %27, float %26, !dbg !16
  %28 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not17.i = icmp eq i32 %28, 0, !dbg !16
  %29 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %21, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !16
  %30 = tail call float @llvm.nvvm.fma.rn.f(float %21, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !16
  %.04.i = select i1 %.not17.i, float %30, float %29, !dbg !16
  %31 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not18.i = icmp eq i32 %31, 0, !dbg !16
  %32 = tail call float @llvm.nvvm.fabs.ftz.f(float %15) #4, !dbg !16
  %33 = tail call float @llvm.nvvm.fabs.f(float %15) #4, !dbg !16
  %.06.i = select i1 %.not18.i, float %33, float %32, !dbg !16
  %34 = fcmp ult float %.06.i, 1.056150e+05, !dbg !16
  br i1 %34, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !16

__nv_isinff.exit.i.i.i:                           ; preds = %3
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not19.i = icmp eq i32 %35, 0, !dbg !16
  %.07.i = select i1 %.not19.i, float %33, float %32, !dbg !16
  %36 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !16
  br i1 %36, label %__nv_fmul_rn.exit.i.i.i, label %40, !dbg !16

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not27.i = icmp eq i32 %37, 0, !dbg !16
  %38 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %15, float 0.000000e+00) #4, !dbg !16
  %39 = tail call float @llvm.nvvm.mul.rn.f(float %15, float 0.000000e+00) #4, !dbg !16
  %.08.i = select i1 %.not27.i, float %39, float %38, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !16

40:                                               ; preds = %__nv_isinff.exit.i.i.i
  %41 = lshr i32 %13, 23, !dbg !16
  %42 = and i32 %41, 224, !dbg !16
  %43 = add nsw i32 %42, -128, !dbg !16
  %44 = shl i32 %13, 8, !dbg !16
  %45 = or i32 %44, -2147483648, !dbg !16
  %46 = lshr exact i32 %43, 5, !dbg !16
  br label %47, !dbg !16

47:                                               ; preds = %40, %47
  %indvars.iv = phi i64 [ 0, %40 ], [ %indvars.iv.next, %47 ]
  %hi.i.i.i.0.i56 = phi i32 [ 0, %40 ], [ %52, %47 ]
  %48 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !16
  %49 = load i32, ptr addrspace(1) %48, align 4, !dbg !16
  %50 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %49, i32 %45, i32 %hi.i.i.i.0.i56) #5, !dbg !16, !srcloc !17
  %51 = extractvalue { i32, i32 } %50, 0, !dbg !16
  %52 = extractvalue { i32, i32 } %50, 1, !dbg !16
  %53 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !16
  store i32 %51, ptr %53, align 4, !dbg !16
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !16
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !16
  br i1 %exitcond.not, label %54, label %47, !dbg !16, !llvm.loop !18

54:                                               ; preds = %47
  %55 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !16
  store i32 %52, ptr %55, align 4, !dbg !16
  %56 = and i32 %41, 31, !dbg !16
  %57 = sub nsw i32 6, %46, !dbg !16
  %58 = sext i32 %57 to i64, !dbg !16
  %59 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %58, !dbg !16
  %60 = load i32, ptr %59, align 4, !dbg !16
  %61 = sub nsw i32 5, %46, !dbg !16
  %62 = sext i32 %61 to i64, !dbg !16
  %63 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %62, !dbg !16
  %64 = load i32, ptr %63, align 4, !dbg !16
  %.not20.i = icmp eq i32 %56, 0, !dbg !16
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %65, !dbg !16

65:                                               ; preds = %54
  %66 = sub nsw i32 4, %46, !dbg !16
  %67 = sub nuw nsw i32 32, %56, !dbg !16
  %68 = shl i32 %60, %56, !dbg !16
  %69 = lshr i32 %64, %67, !dbg !16
  %70 = add i32 %69, %68, !dbg !16
  %71 = shl i32 %64, %56, !dbg !16
  %72 = sext i32 %66 to i64, !dbg !16
  %73 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %72, !dbg !16
  %74 = load i32, ptr %73, align 4, !dbg !16
  %75 = lshr i32 %74, %67, !dbg !16
  %76 = add i32 %75, %71, !dbg !16
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !16

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %65, %54
  %hi.i.i.i.1.i = phi i32 [ %70, %65 ], [ %60, %54 ], !dbg !16
  %lo.i.i.i.0.i = phi i32 [ %76, %65 ], [ %64, %54 ], !dbg !16
  %77 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !16
  %78 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !16
  %79 = shl i32 %lo.i.i.i.0.i, 2, !dbg !16
  %80 = lshr i32 %78, 31, !dbg !16
  %81 = add nuw nsw i32 %80, %77, !dbg !16
  %82 = sub nsw i32 0, %81, !dbg !16
  %.not2123.i = icmp slt i32 %13, 0, !dbg !16
  %spec.select.i = select i1 %.not2123.i, i32 %82, i32 %81, !dbg !16
  %83 = xor i32 %78, %13, !dbg !16
  %.lobit.i = ashr i32 %78, 31, !dbg !16
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %78, !dbg !16
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %79, !dbg !16
  %84 = zext i32 %hi.i.i.i.2.i to i64, !dbg !16
  %85 = shl nuw i64 %84, 32, !dbg !16
  %86 = zext i32 %lo.i.i.i.1.i to i64, !dbg !16
  %87 = or disjoint i64 %85, %86, !dbg !16
  %88 = sitofp i64 %87 to double, !dbg !16
  %89 = fmul double %88, 0x3BF921FB54442D19, !dbg !16
  %90 = fptrunc double %89 to float, !dbg !16
  %91 = fneg float %90, !dbg !16
  %.not2526.i = icmp slt i32 %83, 0, !dbg !16
  %r.i.i.i.0.i = select i1 %.not2526.i, float %91, float %90, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !16

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %3
  %i.i.1.i = phi i32 [ %.01.i, %3 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !16
  %t.i.i.1.i = phi float [ %.04.i, %3 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !16
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not28.i = icmp eq i32 %92, 0, !dbg !16
  %93 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !16
  %94 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !16
  %.011.i = select i1 %.not28.i, float %94, float %93, !dbg !16
  %95 = and i32 %i.i.1.i, 1, !dbg !16
  %.not29.i = icmp eq i32 %95, 0, !dbg !16
  %96 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !16
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not30.i = icmp eq i32 %97, 0, !dbg !16
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %96, float 0.000000e+00) #4, !dbg !16
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %96, float 0.000000e+00) #4, !dbg !16
  %.012.i = select i1 %.not30.i, float %99, float %98, !dbg !16
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !16

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not31.i = icmp eq i32 %100, 0, !dbg !16
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !16
  %102 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !16
  %.013.i = select i1 %.not31.i, float %102, float %101, !dbg !16
  br label %__internal_fmad.exit2.i.i.i, !dbg !16

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %103 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !16
  %104 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !16
  %105 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !16
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not32.i = icmp eq i32 %106, 0, !dbg !16
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %105, float %.011.i, float %104) #4, !dbg !16
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %105, float %.011.i, float %104) #4, !dbg !16
  %.010.i = select i1 %.not32.i, float %108, float %107, !dbg !16
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not33.i = icmp eq i32 %109, 0, !dbg !16
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %103) #4, !dbg !16
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %103) #4, !dbg !16
  %.09.i = select i1 %.not33.i, float %111, float %110, !dbg !16
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not34.i = icmp eq i32 %112, 0, !dbg !16
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %96) #4, !dbg !16
  %114 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %96) #4, !dbg !16
  %.05.i = select i1 %.not34.i, float %114, float %113, !dbg !16
  %115 = and i32 %i.i.1.i, 2, !dbg !16
  %.not35.i = icmp eq i32 %115, 0, !dbg !16
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !16

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not36.i = icmp eq i32 %116, 0, !dbg !16
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %.0.i = select i1 %.not36.i, float %118, float %117, !dbg !16
  br label %__nv_sinf.exit, !dbg !16

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !16
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !16
  %119 = fmul float %16, 0x3FE45F3060000000, !dbg !16
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i2 = icmp eq i32 %120, 0, !dbg !16
  %121 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %119) #4, !dbg !16
  %122 = tail call i32 @llvm.nvvm.f2i.rn(float %119) #4, !dbg !16
  %.01.i3 = select i1 %.not.i2, i32 %122, i32 %121, !dbg !16
  %123 = sitofp i32 %.01.i3 to float, !dbg !16
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not15.i4 = icmp eq i32 %124, 0, !dbg !16
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %123, float 0xBFF921FB40000000, float %16) #4, !dbg !16
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %123, float 0xBFF921FB40000000, float %16) #4, !dbg !16
  %.02.i5 = select i1 %.not15.i4, float %126, float %125, !dbg !16
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not16.i6 = icmp eq i32 %127, 0, !dbg !16
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %123, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !16
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %123, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !16
  %.03.i7 = select i1 %.not16.i6, float %129, float %128, !dbg !16
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not17.i8 = icmp eq i32 %130, 0, !dbg !16
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %123, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !16
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %123, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !16
  %.04.i9 = select i1 %.not17.i8, float %132, float %131, !dbg !16
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not18.i10 = icmp eq i32 %133, 0, !dbg !16
  %134 = tail call float @llvm.nvvm.fabs.ftz.f(float %16) #4, !dbg !16
  %135 = tail call float @llvm.nvvm.fabs.f(float %16) #4, !dbg !16
  %.06.i11 = select i1 %.not18.i10, float %135, float %134, !dbg !16
  %136 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !16
  br i1 %136, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !16

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not19.i13 = icmp eq i32 %137, 0, !dbg !16
  %.07.i14 = select i1 %.not19.i13, float %135, float %134, !dbg !16
  %138 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !16
  br i1 %138, label %__nv_fmul_rn.exit.i.i.i52, label %142, !dbg !16

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not27.i53 = icmp eq i32 %139, 0, !dbg !16
  %140 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %16, float 0.000000e+00) #4, !dbg !16
  %141 = tail call float @llvm.nvvm.mul.rn.f(float %16, float 0.000000e+00) #4, !dbg !16
  %.08.i54 = select i1 %.not27.i53, float %141, float %140, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !16

142:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %143 = lshr i32 %14, 23, !dbg !16
  %144 = and i32 %143, 224, !dbg !16
  %145 = add nsw i32 %144, -128, !dbg !16
  %146 = shl i32 %14, 8, !dbg !16
  %147 = or i32 %146, -2147483648, !dbg !16
  %148 = lshr exact i32 %145, 5, !dbg !16
  br label %149, !dbg !16

149:                                              ; preds = %142, %149
  %indvars.iv63 = phi i64 [ 0, %142 ], [ %indvars.iv.next64, %149 ]
  %hi.i.i.i.0.i1558 = phi i32 [ 0, %142 ], [ %154, %149 ]
  %150 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv63, !dbg !16
  %151 = load i32, ptr addrspace(1) %150, align 4, !dbg !16
  %152 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %151, i32 %147, i32 %hi.i.i.i.0.i1558) #5, !dbg !16, !srcloc !17
  %153 = extractvalue { i32, i32 } %152, 0, !dbg !16
  %154 = extractvalue { i32, i32 } %152, 1, !dbg !16
  %155 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv63, !dbg !16
  store i32 %153, ptr %155, align 4, !dbg !16
  %indvars.iv.next64 = add nuw nsw i64 %indvars.iv63, 1, !dbg !16
  %exitcond65.not = icmp eq i64 %indvars.iv.next64, 6, !dbg !16
  br i1 %exitcond65.not, label %156, label %149, !dbg !16, !llvm.loop !20

156:                                              ; preds = %149
  %157 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !16
  store i32 %154, ptr %157, align 4, !dbg !16
  %158 = and i32 %143, 31, !dbg !16
  %159 = sub nsw i32 6, %148, !dbg !16
  %160 = sext i32 %159 to i64, !dbg !16
  %161 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %160, !dbg !16
  %162 = load i32, ptr %161, align 4, !dbg !16
  %163 = sub nsw i32 5, %148, !dbg !16
  %164 = sext i32 %163 to i64, !dbg !16
  %165 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %164, !dbg !16
  %166 = load i32, ptr %165, align 4, !dbg !16
  %.not20.i17 = icmp eq i32 %158, 0, !dbg !16
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %167, !dbg !16

167:                                              ; preds = %156
  %168 = sub nsw i32 4, %148, !dbg !16
  %169 = sub nuw nsw i32 32, %158, !dbg !16
  %170 = shl i32 %162, %158, !dbg !16
  %171 = lshr i32 %166, %169, !dbg !16
  %172 = add i32 %171, %170, !dbg !16
  %173 = shl i32 %166, %158, !dbg !16
  %174 = sext i32 %168 to i64, !dbg !16
  %175 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %174, !dbg !16
  %176 = load i32, ptr %175, align 4, !dbg !16
  %177 = lshr i32 %176, %169, !dbg !16
  %178 = add i32 %177, %173, !dbg !16
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !16

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %167, %156
  %hi.i.i.i.1.i19 = phi i32 [ %172, %167 ], [ %162, %156 ], !dbg !16
  %lo.i.i.i.0.i20 = phi i32 [ %178, %167 ], [ %166, %156 ], !dbg !16
  %179 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !16
  %180 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !16
  %181 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !16
  %182 = lshr i32 %180, 31, !dbg !16
  %183 = add nuw nsw i32 %182, %179, !dbg !16
  %184 = sub nsw i32 0, %183, !dbg !16
  %.not2123.i21 = icmp slt i32 %14, 0, !dbg !16
  %spec.select.i22 = select i1 %.not2123.i21, i32 %184, i32 %183, !dbg !16
  %185 = xor i32 %180, %14, !dbg !16
  %.lobit.i23 = ashr i32 %180, 31, !dbg !16
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %180, !dbg !16
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %181, !dbg !16
  %186 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !16
  %187 = shl nuw i64 %186, 32, !dbg !16
  %188 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !16
  %189 = or disjoint i64 %187, %188, !dbg !16
  %190 = sitofp i64 %189 to double, !dbg !16
  %191 = fmul double %190, 0x3BF921FB54442D19, !dbg !16
  %192 = fptrunc double %191 to float, !dbg !16
  %193 = fneg float %192, !dbg !16
  %.not2526.i27 = icmp slt i32 %185, 0, !dbg !16
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %193, float %192, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !16

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !16
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !16
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not28.i32 = icmp eq i32 %194, 0, !dbg !16
  %195 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !16
  %196 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !16
  %.011.i33 = select i1 %.not28.i32, float %196, float %195, !dbg !16
  %197 = and i32 %i.i.1.i30, 1, !dbg !16
  %.not29.i34 = icmp eq i32 %197, 0, !dbg !16
  %198 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !16
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not30.i35 = icmp eq i32 %199, 0, !dbg !16
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %198, float 0.000000e+00) #4, !dbg !16
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %198, float 0.000000e+00) #4, !dbg !16
  %.012.i36 = select i1 %.not30.i35, float %201, float %200, !dbg !16
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !16

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not31.i38 = icmp eq i32 %202, 0, !dbg !16
  %203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !16
  %204 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !16
  %.013.i39 = select i1 %.not31.i38, float %204, float %203, !dbg !16
  br label %__internal_fmad.exit2.i.i.i40, !dbg !16

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %205 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !16
  %206 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !16
  %207 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !16
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not32.i41 = icmp eq i32 %208, 0, !dbg !16
  %209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %207, float %.011.i33, float %206) #4, !dbg !16
  %210 = tail call float @llvm.nvvm.fma.rn.f(float %207, float %.011.i33, float %206) #4, !dbg !16
  %.010.i42 = select i1 %.not32.i41, float %210, float %209, !dbg !16
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not33.i43 = icmp eq i32 %211, 0, !dbg !16
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %205) #4, !dbg !16
  %213 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %205) #4, !dbg !16
  %.09.i44 = select i1 %.not33.i43, float %213, float %212, !dbg !16
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not34.i45 = icmp eq i32 %214, 0, !dbg !16
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %198) #4, !dbg !16
  %216 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %198) #4, !dbg !16
  %.05.i46 = select i1 %.not34.i45, float %216, float %215, !dbg !16
  %217 = and i32 %i.i.1.i30, 2, !dbg !16
  %.not35.i47 = icmp eq i32 %217, 0, !dbg !16
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !16

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not36.i49 = icmp eq i32 %218, 0, !dbg !16
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %.0.i50 = select i1 %.not36.i49, float %220, float %219, !dbg !16
  br label %__nv_sinf.exit55, !dbg !16

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !16
  %221 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !21
  %222 = bitcast float %z.i.i.0.i to i32, !dbg !22
  %223 = bitcast float %z.i.i.0.i51 to i32, !dbg !22
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %222, i32 %223, ptr addrspace(1) %221, i1 true) #4, !dbg !22
  ret void, !dbg !23
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cds5bjxbkmgi6hqk7j5kl2xhtqsdrs47uihsygizmskye63cfoc3.py", directory: "inductor_cache/ds")
!4 = !{ptr @triton_poi_fused_sin_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_sin_11, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_sin_11", linkageName: "triton_poi_fused_sin_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 30, scope: !7)
!15 = !DILocation(line: 25, column: 35, scope: !7)
!16 = !DILocation(line: 26, column: 23, scope: !7)
!17 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.count", i32 1}
!20 = distinct !{!20, !19}
!21 = !DILocation(line: 27, column: 25, scope: !7)
!22 = !DILocation(line: 27, column: 36, scope: !7)
!23 = !DILocation(line: 27, column: 4, scope: !7)
