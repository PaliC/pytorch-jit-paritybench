#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":39:57)
#loc23 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":46:59)
#loc44 = loc(callsite(#loc1 at #loc16))
#loc48 = loc(callsite(#loc1 at #loc23))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_convolution_native_layer_norm_relu_23(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":19:0), %arg7: i32 loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_0 = arith.constant 1.024000e+03 : f32 loc(#loc1)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1024xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc3)
    %2 = arith.muli %0, %c1024_i32 : i32 loc(#loc4)
    %3 = tt.splat %2 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)
    %4 = arith.addi %1, %3 : tensor<1024xi32, #blocked> loc(#loc5)
    %5 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc6)
    %6 = tt.addptr %5, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc6)
    %7 = tt.load %6 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc7)
    %8 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.addptr %8, %1 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc8)
    %10 = tt.load %9 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc9)
    %11 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc10)
    %12 = tt.addptr %11, %1 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc10)
    %13 = tt.load %12 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc11)
    %14 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc12)
    %15 = tt.addptr %14, %1 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc12)
    %16 = tt.load %15 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc13)
    %17 = arith.addf %7, %10 : tensor<1024xf32, #blocked> loc(#loc14)
    %18 = "tt.reduce"(%17) <{axis = 0 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc16)), %arg10: f32 loc(callsite(#loc1 at #loc16))):
      %43 = arith.addf %arg9, %arg10 : f32 loc(#loc52)
      tt.reduce.return %43 : f32 loc(#loc43)
    }) : (tensor<1024xf32, #blocked>) -> f32 loc(#loc43)
    %19 = arith.addf %18, %cst_1 : f32 loc(#loc46)
    %20 = arith.divf %19, %cst_0 : f32 loc(#loc20)
    %21 = tt.splat %20 : f32 -> tensor<1xf32, #blocked1> loc(#loc20)
    %22 = tt.splat %20 : f32 -> tensor<1024xf32, #blocked> loc(#loc21)
    %23 = arith.subf %17, %22 : tensor<1024xf32, #blocked> loc(#loc21)
    %24 = arith.mulf %23, %23 : tensor<1024xf32, #blocked> loc(#loc22)
    %25 = "tt.reduce"(%24) <{axis = 0 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc23)), %arg10: f32 loc(callsite(#loc1 at #loc23))):
      %43 = arith.addf %arg9, %arg10 : f32 loc(#loc53)
      tt.reduce.return %43 : f32 loc(#loc47)
    }) : (tensor<1024xf32, #blocked>) -> f32 loc(#loc47)
    %26 = arith.addf %25, %cst_1 : f32 loc(#loc49)
    %27 = arith.divf %26, %cst_0 : f32 loc(#loc25)
    %28 = arith.addf %27, %cst : f32 loc(#loc26)
    %29 = tt.extern_elementwise %28 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc27)
    %30 = tt.splat %29 : f32 -> tensor<1xf32, #blocked1> loc(#loc27)
    %31 = tt.splat %29 : f32 -> tensor<1024xf32, #blocked> loc(#loc28)
    %32 = arith.mulf %23, %31 : tensor<1024xf32, #blocked> loc(#loc28)
    %33 = arith.mulf %32, %13 : tensor<1024xf32, #blocked> loc(#loc29)
    %34 = arith.addf %33, %16 : tensor<1024xf32, #blocked> loc(#loc30)
    %35 = arith.cmpf ogt, %cst_2, %34 : tensor<1024xf32, #blocked> loc(#loc50)
    %36 = arith.select %35, %cst_2, %34 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc51)
    tt.store %6, %17 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc34)
    gpu.barrier loc(#loc35)
    %37 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc36)
    %38 = tt.splat %37 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc36)
    tt.store %38, %30 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc37)
    %39 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc38)
    %40 = tt.addptr %39, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc38)
    tt.store %40, %36 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc39)
    %41 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc40)
    %42 = tt.splat %41 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc40)
    tt.store %42, %21 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc41)
    tt.return loc(#loc42)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":24:28)
#loc3 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":27:26)
#loc4 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":32:44)
#loc5 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":32:39)
#loc6 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":32:34)
#loc7 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":32:49)
#loc8 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":33:30)
#loc9 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":33:35)
#loc10 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":34:31)
#loc11 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":34:36)
#loc12 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":35:31)
#loc13 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":35:36)
#loc14 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":36:18)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc19 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":39:44)
#loc20 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":42:19)
#loc21 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":43:19)
#loc22 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":44:20)
#loc24 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":46:45)
#loc25 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":48:20)
#loc26 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":50:20)
#loc27 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":51:28)
#loc28 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":53:20)
#loc29 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":54:20)
#loc30 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":55:20)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc32 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":57:42)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc34 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":58:49)
#loc35 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":59:4)
#loc36 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":60:28)
#loc37 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":60:40)
#loc38 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":61:25)
#loc39 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":61:47)
#loc40 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":62:25)
#loc41 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":62:37)
#loc42 = loc("inductor_cache/bd/cbdldxq2unnp3we6iuk4kcfhnbk6adi74pymbibyltfwuce5elqg.py":62:4)
#loc43 = loc(callsite(#loc15 at #loc16))
#loc45 = loc(callsite(#loc17 at #loc15))
#loc46 = loc(callsite(#loc18 at #loc19))
#loc47 = loc(callsite(#loc15 at #loc23))
#loc49 = loc(callsite(#loc18 at #loc24))
#loc50 = loc(callsite(#loc31 at #loc32))
#loc51 = loc(callsite(#loc33 at #loc32))
#loc52 = loc(callsite(#loc45 at #loc16))
#loc53 = loc(callsite(#loc45 at #loc23))
