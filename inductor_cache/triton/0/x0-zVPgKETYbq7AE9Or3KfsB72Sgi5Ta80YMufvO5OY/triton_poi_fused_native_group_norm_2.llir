; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_native_group_norm_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6, i32 %7) local_unnamed_addr !dbg !7 {
__nv_rsqrtf.exit:
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #3, !dbg !10
  %9 = shl i32 %8, 6, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = lshr i32 %10, 1, !dbg !12
  %12 = and i32 %11, 63, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %14 = icmp slt i32 %13, 128, !dbg !14
  %15 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !15
  %16 = shl i32 %15, 2, !dbg !16
  %17 = shl i32 %10, 1, !dbg !17
  %18 = and i32 %17, 2, !dbg !17
  %19 = or disjoint i32 %16, %18, !dbg !18
  %20 = or disjoint i32 %16, 1, !dbg !18
  %21 = icmp slt i32 %19, 4, !dbg !19
  %.frozen = freeze i32 %13, !dbg !20
  %22 = sdiv i32 %.frozen, 4, !dbg !20
  %23 = mul i32 %22, 4, !dbg !21
  %.decomposed = sub i32 %.frozen, %23, !dbg !21
  %24 = sdiv i32 %13, 32, !dbg !22
  %25 = srem i32 %22, 8, !dbg !23
  %26 = srem i32 %20, 2, !dbg !24
  %27 = shl nsw i32 %26, 1, !dbg !25
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !26
  %28 = sdiv i8 %.lhs.trunc, 2, !dbg !26
  %.sext = sext i8 %28 to i32, !dbg !26
  %29 = shl nsw i32 %.sext, 2, !dbg !27
  %30 = shl i32 %19, 2, !dbg !28
  %31 = shl i32 %22, 4, !dbg !29
  %32 = mul i8 %28, 2, !dbg !30
  %.decomposed6 = sub i8 %.lhs.trunc, %32, !dbg !30
  %.sext5 = sext i8 %.decomposed6 to i32, !dbg !30
  %33 = add i32 %31, %30, !dbg !31
  %34 = add i32 %33, %.sext5, !dbg !32
  %35 = add i32 %34, %29, !dbg !33
  %36 = add i32 %33, %27, !dbg !31
  %37 = add i32 %36, %.sext5, !dbg !32
  %38 = add i32 %37, %29, !dbg !33
  %39 = sext i32 %35 to i64, !dbg !34
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !34
  %41 = sext i32 %38 to i64, !dbg !34
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !34
  %43 = and i1 %14, %21, !dbg !35
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %43) #3, !dbg !36
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %43) #3, !dbg !36
  %46 = sext i32 %24 to i64, !dbg !37
  %47 = getelementptr float, ptr addrspace(1) %1, i64 %46, !dbg !37
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 %14) #3, !dbg !38
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 %14) #3, !dbg !38
  %50 = getelementptr float, ptr addrspace(1) %2, i64 %46, !dbg !39
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %14) #3, !dbg !40
  %52 = bitcast i32 %51 to float, !dbg !40
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %14) #3, !dbg !40
  %54 = bitcast i32 %53 to float, !dbg !40
  %55 = sext i32 %25 to i64, !dbg !41
  %56 = getelementptr float, ptr addrspace(1) %3, i64 %55, !dbg !41
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %14) #3, !dbg !42
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %14) #3, !dbg !42
  %59 = getelementptr float, ptr addrspace(1) %4, i64 %55, !dbg !43
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 %14) #3, !dbg !44
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 %14) #3, !dbg !44
  %62 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %52, float 1.280000e+02) #3, !dbg !45
  %63 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %54, float 1.280000e+02) #3, !dbg !45
  %64 = fadd float %63, 0x3EE4F8B580000000, !dbg !46
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !47
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !47
  %.not.i1 = icmp eq i32 %66, 0, !dbg !47
  br i1 %.not.i1, label %69, label %67, !dbg !47

67:                                               ; preds = %__nv_rsqrtf.exit
  %68 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %64), !dbg !47
  br label %__nv_rsqrtf.exit3, !dbg !47

69:                                               ; preds = %__nv_rsqrtf.exit
  %70 = tail call float @llvm.nvvm.rsqrt.approx.f(float %64), !dbg !47
  br label %__nv_rsqrtf.exit3, !dbg !47

__nv_rsqrtf.exit3:                                ; preds = %67, %69
  %.0.i2 = phi float [ %68, %67 ], [ %70, %69 ], !dbg !47
  %71 = bitcast i32 %45 to float, !dbg !36
  %72 = bitcast i32 %49 to float, !dbg !38
  %73 = fsub float %71, %72, !dbg !48
  %74 = bitcast i32 %44 to float, !dbg !36
  %75 = fsub float %74, %72, !dbg !48
  %76 = bitcast i32 %61 to float, !dbg !44
  %77 = bitcast i32 %58 to float, !dbg !42
  %78 = fmul float %75, %.0.i2, !dbg !49
  %79 = fmul float %73, %.0.i2, !dbg !49
  %80 = fmul float %78, %77, !dbg !50
  %81 = fmul float %79, %77, !dbg !50
  %82 = fadd float %80, %76, !dbg !51
  %83 = fadd float %81, %76, !dbg !51
  %84 = shl i32 %13, 2, !dbg !52
  %85 = add i32 %19, %84, !dbg !53
  %86 = sext i32 %85 to i64, !dbg !54
  %87 = getelementptr float, ptr addrspace(1) %5, i64 %86, !dbg !54
  %88 = bitcast float %82 to i32, !dbg !55
  %89 = bitcast float %83 to i32, !dbg !55
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %88, i32 %89, ptr addrspace(1) %87, i1 %43) #3, !dbg !55
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "co255o3h3hcavvuzk5b4rompx5wrh2wd3a5ku2p4lysi5f22tzip.py", directory: "inductor_cache/o2")
!4 = !{ptr @triton_poi_fused_native_group_norm_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_native_group_norm_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_native_group_norm_2", linkageName: "triton_poi_fused_native_group_norm_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 30, column: 19, scope: !7)
!21 = !DILocation(line: 29, column: 19, scope: !7)
!22 = !DILocation(line: 31, column: 19, scope: !7)
!23 = !DILocation(line: 32, column: 26, scope: !7)
!24 = !DILocation(line: 34, column: 39, scope: !7)
!25 = !DILocation(line: 34, column: 34, scope: !7)
!26 = !DILocation(line: 34, column: 54, scope: !7)
!27 = !DILocation(line: 34, column: 48, scope: !7)
!28 = !DILocation(line: 34, column: 62, scope: !7)
!29 = !DILocation(line: 34, column: 76, scope: !7)
!30 = !DILocation(line: 34, column: 88, scope: !7)
!31 = !DILocation(line: 34, column: 59, scope: !7)
!32 = !DILocation(line: 34, column: 73, scope: !7)
!33 = !DILocation(line: 34, column: 83, scope: !7)
!34 = !DILocation(line: 34, column: 30, scope: !7)
!35 = !DILocation(line: 34, column: 102, scope: !7)
!36 = !DILocation(line: 34, column: 94, scope: !7)
!37 = !DILocation(line: 35, column: 30, scope: !7)
!38 = !DILocation(line: 35, column: 35, scope: !7)
!39 = !DILocation(line: 36, column: 30, scope: !7)
!40 = !DILocation(line: 36, column: 35, scope: !7)
!41 = !DILocation(line: 37, column: 31, scope: !7)
!42 = !DILocation(line: 37, column: 36, scope: !7)
!43 = !DILocation(line: 38, column: 31, scope: !7)
!44 = !DILocation(line: 38, column: 36, scope: !7)
!45 = !DILocation(line: 41, column: 18, scope: !7)
!46 = !DILocation(line: 43, column: 18, scope: !7)
!47 = !DILocation(line: 44, column: 27, scope: !7)
!48 = !DILocation(line: 39, column: 18, scope: !7)
!49 = !DILocation(line: 45, column: 18, scope: !7)
!50 = !DILocation(line: 46, column: 19, scope: !7)
!51 = !DILocation(line: 47, column: 20, scope: !7)
!52 = !DILocation(line: 48, column: 32, scope: !7)
!53 = !DILocation(line: 48, column: 30, scope: !7)
!54 = !DILocation(line: 48, column: 25, scope: !7)
!55 = !DILocation(line: 48, column: 44, scope: !7)
!56 = !DILocation(line: 48, column: 4, scope: !7)
