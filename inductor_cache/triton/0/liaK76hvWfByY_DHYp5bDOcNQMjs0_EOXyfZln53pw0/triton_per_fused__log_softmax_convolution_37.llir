; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused__log_softmax_convolution_37(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 3, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = lshr i32 %9, 5, !dbg !12
  %.lobit = and i32 %10, 1, !dbg !12
  %11 = or disjoint i32 %.lobit, 2, !dbg !12
  %12 = or disjoint i32 %.lobit, 4, !dbg !12
  %13 = or disjoint i32 %.lobit, 6, !dbg !12
  %14 = and i32 %9, 7, !dbg !12
  %15 = or disjoint i32 %8, %.lobit, !dbg !13
  %16 = or disjoint i32 %8, %11, !dbg !13
  %17 = or disjoint i32 %8, %12, !dbg !13
  %18 = or disjoint i32 %8, %13, !dbg !13
  %19 = or disjoint i32 %8, %14, !dbg !13
  %20 = and i32 %9, 31, !dbg !14
  %21 = icmp samesign ult i32 %20, 21, !dbg !15
  %22 = mul i32 %15, 21, !dbg !16
  %23 = mul i32 %16, 21, !dbg !16
  %24 = mul i32 %17, 21, !dbg !16
  %25 = mul i32 %18, 21, !dbg !16
  %26 = add i32 %22, %20, !dbg !17
  %27 = add i32 %23, %20, !dbg !17
  %28 = add i32 %24, %20, !dbg !17
  %29 = add i32 %25, %20, !dbg !17
  %30 = sext i32 %26 to i64, !dbg !18
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !18
  %32 = sext i32 %27 to i64, !dbg !18
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !18
  %34 = sext i32 %28 to i64, !dbg !18
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !18
  %36 = sext i32 %29 to i64, !dbg !18
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !18
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %21, i32 0, i1 %21) #3, !dbg !19
  %39 = bitcast i32 %38 to float, !dbg !19
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %21, i32 0, i1 %21) #3, !dbg !19
  %41 = bitcast i32 %40 to float, !dbg !19
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %21, i32 0, i1 %21) #3, !dbg !19
  %43 = bitcast i32 %42 to float, !dbg !19
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %21, i32 0, i1 %21) #3, !dbg !19
  %45 = bitcast i32 %44 to float, !dbg !19
  %46 = zext nneg i32 %20 to i64, !dbg !20
  %47 = getelementptr float, ptr addrspace(1) %1, i64 %46, !dbg !20
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %21, i32 0, i1 %21) #3, !dbg !21
  %49 = bitcast i32 %48 to float, !dbg !21
  %50 = fadd float %39, %49, !dbg !22
  %51 = fadd float %41, %49, !dbg !22
  %52 = fadd float %43, %49, !dbg !22
  %53 = fadd float %45, %49, !dbg !22
  %54 = select i1 %21, float %50, float 0xFFF0000000000000, !dbg !23
  %55 = select i1 %21, float %51, float 0xFFF0000000000000, !dbg !23
  %56 = select i1 %21, float %52, float 0xFFF0000000000000, !dbg !23
  %57 = select i1 %21, float %53, float 0xFFF0000000000000, !dbg !23
  %58 = bitcast float %54 to i32, !dbg !24
  %59 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %58, i32 16, i32 31), !dbg !24
  %60 = bitcast i32 %59 to float, !dbg !24
  %61 = fcmp ogt float %54, %60, !dbg !28
  %62 = fcmp uno float %54, 0.000000e+00, !dbg !30
  %63 = or i1 %61, %62, !dbg !31
  %64 = select i1 %63, float %54, float %60, !dbg !32
  %65 = bitcast float %64 to i32, !dbg !24
  %66 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %65, i32 8, i32 31), !dbg !24
  %67 = bitcast i32 %66 to float, !dbg !24
  %68 = fcmp ogt float %64, %67, !dbg !28
  %69 = fcmp uno float %64, 0.000000e+00, !dbg !30
  %70 = or i1 %68, %69, !dbg !31
  %71 = select i1 %70, float %64, float %67, !dbg !32
  %72 = bitcast float %71 to i32, !dbg !24
  %73 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %72, i32 4, i32 31), !dbg !24
  %74 = bitcast i32 %73 to float, !dbg !24
  %75 = fcmp ogt float %71, %74, !dbg !28
  %76 = fcmp uno float %71, 0.000000e+00, !dbg !30
  %77 = or i1 %75, %76, !dbg !31
  %78 = select i1 %77, float %71, float %74, !dbg !32
  %79 = bitcast float %78 to i32, !dbg !24
  %80 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %79, i32 2, i32 31), !dbg !24
  %81 = bitcast i32 %80 to float, !dbg !24
  %82 = fcmp ogt float %78, %81, !dbg !28
  %83 = fcmp uno float %78, 0.000000e+00, !dbg !30
  %84 = or i1 %82, %83, !dbg !31
  %85 = select i1 %84, float %78, float %81, !dbg !32
  %86 = bitcast float %85 to i32, !dbg !24
  %87 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %86, i32 1, i32 31), !dbg !24
  %88 = bitcast i32 %87 to float, !dbg !24
  %89 = fcmp ogt float %85, %88, !dbg !28
  %90 = fcmp uno float %85, 0.000000e+00, !dbg !30
  %91 = or i1 %89, %90, !dbg !31
  %92 = select i1 %91, float %85, float %88, !dbg !32
  %93 = bitcast float %55 to i32, !dbg !24
  %94 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 16, i32 31), !dbg !24
  %95 = bitcast i32 %94 to float, !dbg !24
  %96 = fcmp ogt float %55, %95, !dbg !28
  %97 = fcmp uno float %55, 0.000000e+00, !dbg !30
  %98 = or i1 %97, %96, !dbg !31
  %99 = select i1 %98, float %55, float %95, !dbg !32
  %100 = bitcast float %99 to i32, !dbg !24
  %101 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %100, i32 8, i32 31), !dbg !24
  %102 = bitcast i32 %101 to float, !dbg !24
  %103 = fcmp ogt float %99, %102, !dbg !28
  %104 = fcmp uno float %99, 0.000000e+00, !dbg !30
  %105 = or i1 %103, %104, !dbg !31
  %106 = select i1 %105, float %99, float %102, !dbg !32
  %107 = bitcast float %106 to i32, !dbg !24
  %108 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %107, i32 4, i32 31), !dbg !24
  %109 = bitcast i32 %108 to float, !dbg !24
  %110 = fcmp ogt float %106, %109, !dbg !28
  %111 = fcmp uno float %106, 0.000000e+00, !dbg !30
  %112 = or i1 %110, %111, !dbg !31
  %113 = select i1 %112, float %106, float %109, !dbg !32
  %114 = bitcast float %113 to i32, !dbg !24
  %115 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %114, i32 2, i32 31), !dbg !24
  %116 = bitcast i32 %115 to float, !dbg !24
  %117 = fcmp ogt float %113, %116, !dbg !28
  %118 = fcmp uno float %113, 0.000000e+00, !dbg !30
  %119 = or i1 %117, %118, !dbg !31
  %120 = select i1 %119, float %113, float %116, !dbg !32
  %121 = bitcast float %120 to i32, !dbg !24
  %122 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %121, i32 1, i32 31), !dbg !24
  %123 = bitcast i32 %122 to float, !dbg !24
  %124 = fcmp ogt float %120, %123, !dbg !28
  %125 = fcmp uno float %120, 0.000000e+00, !dbg !30
  %126 = or i1 %124, %125, !dbg !31
  %127 = select i1 %126, float %120, float %123, !dbg !32
  %128 = bitcast float %56 to i32, !dbg !24
  %129 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %128, i32 16, i32 31), !dbg !24
  %130 = bitcast i32 %129 to float, !dbg !24
  %131 = fcmp ogt float %56, %130, !dbg !28
  %132 = fcmp uno float %56, 0.000000e+00, !dbg !30
  %133 = or i1 %132, %131, !dbg !31
  %134 = select i1 %133, float %56, float %130, !dbg !32
  %135 = bitcast float %134 to i32, !dbg !24
  %136 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %135, i32 8, i32 31), !dbg !24
  %137 = bitcast i32 %136 to float, !dbg !24
  %138 = fcmp ogt float %134, %137, !dbg !28
  %139 = fcmp uno float %134, 0.000000e+00, !dbg !30
  %140 = or i1 %138, %139, !dbg !31
  %141 = select i1 %140, float %134, float %137, !dbg !32
  %142 = bitcast float %141 to i32, !dbg !24
  %143 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %142, i32 4, i32 31), !dbg !24
  %144 = bitcast i32 %143 to float, !dbg !24
  %145 = fcmp ogt float %141, %144, !dbg !28
  %146 = fcmp uno float %141, 0.000000e+00, !dbg !30
  %147 = or i1 %145, %146, !dbg !31
  %148 = select i1 %147, float %141, float %144, !dbg !32
  %149 = bitcast float %148 to i32, !dbg !24
  %150 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %149, i32 2, i32 31), !dbg !24
  %151 = bitcast i32 %150 to float, !dbg !24
  %152 = fcmp ogt float %148, %151, !dbg !28
  %153 = fcmp uno float %148, 0.000000e+00, !dbg !30
  %154 = or i1 %152, %153, !dbg !31
  %155 = select i1 %154, float %148, float %151, !dbg !32
  %156 = bitcast float %155 to i32, !dbg !24
  %157 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %156, i32 1, i32 31), !dbg !24
  %158 = bitcast i32 %157 to float, !dbg !24
  %159 = fcmp ogt float %155, %158, !dbg !28
  %160 = fcmp uno float %155, 0.000000e+00, !dbg !30
  %161 = or i1 %159, %160, !dbg !31
  %162 = select i1 %161, float %155, float %158, !dbg !32
  %163 = bitcast float %57 to i32, !dbg !24
  %164 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %163, i32 16, i32 31), !dbg !24
  %165 = bitcast i32 %164 to float, !dbg !24
  %166 = fcmp ogt float %57, %165, !dbg !28
  %167 = fcmp uno float %57, 0.000000e+00, !dbg !30
  %168 = or i1 %167, %166, !dbg !31
  %169 = select i1 %168, float %57, float %165, !dbg !32
  %170 = bitcast float %169 to i32, !dbg !24
  %171 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %170, i32 8, i32 31), !dbg !24
  %172 = bitcast i32 %171 to float, !dbg !24
  %173 = fcmp ogt float %169, %172, !dbg !28
  %174 = fcmp uno float %169, 0.000000e+00, !dbg !30
  %175 = or i1 %173, %174, !dbg !31
  %176 = select i1 %175, float %169, float %172, !dbg !32
  %177 = bitcast float %176 to i32, !dbg !24
  %178 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %177, i32 4, i32 31), !dbg !24
  %179 = bitcast i32 %178 to float, !dbg !24
  %180 = fcmp ogt float %176, %179, !dbg !28
  %181 = fcmp uno float %176, 0.000000e+00, !dbg !30
  %182 = or i1 %180, %181, !dbg !31
  %183 = select i1 %182, float %176, float %179, !dbg !32
  %184 = bitcast float %183 to i32, !dbg !24
  %185 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %184, i32 2, i32 31), !dbg !24
  %186 = bitcast i32 %185 to float, !dbg !24
  %187 = fcmp ogt float %183, %186, !dbg !28
  %188 = fcmp uno float %183, 0.000000e+00, !dbg !30
  %189 = or i1 %187, %188, !dbg !31
  %190 = select i1 %189, float %183, float %186, !dbg !32
  %191 = bitcast float %190 to i32, !dbg !24
  %192 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %191, i32 1, i32 31), !dbg !24
  %193 = bitcast i32 %192 to float, !dbg !24
  %194 = fcmp ogt float %190, %193, !dbg !28
  %195 = fcmp uno float %190, 0.000000e+00, !dbg !30
  %196 = or i1 %194, %195, !dbg !31
  %197 = select i1 %196, float %190, float %193, !dbg !32
  %198 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %.lobit, !dbg !33
  %199 = bitcast float %92 to <1 x i32>, !dbg !33
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %198, <1 x i32> %199, i1 true) #3, !dbg !33
  %200 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %11, !dbg !33
  %201 = bitcast float %127 to <1 x i32>, !dbg !33
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %200, <1 x i32> %201, i1 true) #3, !dbg !33
  %202 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %12, !dbg !33
  %203 = bitcast float %162 to <1 x i32>, !dbg !33
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %202, <1 x i32> %203, i1 true) #3, !dbg !33
  %204 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %13, !dbg !33
  %205 = bitcast float %197 to <1 x i32>, !dbg !33
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %204, <1 x i32> %205, i1 true) #3, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %206 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %14, !dbg !33
  %207 = load i32, ptr addrspace(3) %206, align 4, !dbg !33
  %208 = fsub float %50, %92, !dbg !34
  %209 = fsub float %51, %127, !dbg !34
  %210 = fsub float %52, %162, !dbg !34
  %211 = fsub float %53, %197, !dbg !34
  %212 = fmul float %208, 0x3FF7154760000000, !dbg !35
  %213 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %212) #3, !dbg !35
  %214 = fmul float %209, 0x3FF7154760000000, !dbg !35
  %215 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %214) #3, !dbg !35
  %216 = fmul float %210, 0x3FF7154760000000, !dbg !35
  %217 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %216) #3, !dbg !35
  %218 = fmul float %211, 0x3FF7154760000000, !dbg !35
  %219 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %218) #3, !dbg !35
  %220 = select i1 %21, float %213, float 0.000000e+00, !dbg !36
  %221 = select i1 %21, float %215, float 0.000000e+00, !dbg !36
  %222 = select i1 %21, float %217, float 0.000000e+00, !dbg !36
  %223 = select i1 %21, float %219, float 0.000000e+00, !dbg !36
  %224 = bitcast float %220 to i32, !dbg !37
  %225 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %224, i32 16, i32 31), !dbg !37
  %226 = bitcast i32 %225 to float, !dbg !37
  %227 = fadd float %220, %226, !dbg !41
  %228 = bitcast float %227 to i32, !dbg !37
  %229 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %228, i32 8, i32 31), !dbg !37
  %230 = bitcast i32 %229 to float, !dbg !37
  %231 = fadd float %227, %230, !dbg !41
  %232 = bitcast float %231 to i32, !dbg !37
  %233 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %232, i32 4, i32 31), !dbg !37
  %234 = bitcast i32 %233 to float, !dbg !37
  %235 = fadd float %231, %234, !dbg !41
  %236 = bitcast float %235 to i32, !dbg !37
  %237 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %236, i32 2, i32 31), !dbg !37
  %238 = bitcast i32 %237 to float, !dbg !37
  %239 = fadd float %235, %238, !dbg !41
  %240 = bitcast float %239 to i32, !dbg !37
  %241 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %240, i32 1, i32 31), !dbg !37
  %242 = bitcast i32 %241 to float, !dbg !37
  %243 = fadd float %239, %242, !dbg !41
  %244 = bitcast float %221 to i32, !dbg !37
  %245 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %244, i32 16, i32 31), !dbg !37
  %246 = bitcast i32 %245 to float, !dbg !37
  %247 = fadd float %221, %246, !dbg !41
  %248 = bitcast float %247 to i32, !dbg !37
  %249 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %248, i32 8, i32 31), !dbg !37
  %250 = bitcast i32 %249 to float, !dbg !37
  %251 = fadd float %247, %250, !dbg !41
  %252 = bitcast float %251 to i32, !dbg !37
  %253 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %252, i32 4, i32 31), !dbg !37
  %254 = bitcast i32 %253 to float, !dbg !37
  %255 = fadd float %251, %254, !dbg !41
  %256 = bitcast float %255 to i32, !dbg !37
  %257 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %256, i32 2, i32 31), !dbg !37
  %258 = bitcast i32 %257 to float, !dbg !37
  %259 = fadd float %255, %258, !dbg !41
  %260 = bitcast float %259 to i32, !dbg !37
  %261 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %260, i32 1, i32 31), !dbg !37
  %262 = bitcast i32 %261 to float, !dbg !37
  %263 = fadd float %259, %262, !dbg !41
  %264 = bitcast float %222 to i32, !dbg !37
  %265 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %264, i32 16, i32 31), !dbg !37
  %266 = bitcast i32 %265 to float, !dbg !37
  %267 = fadd float %222, %266, !dbg !41
  %268 = bitcast float %267 to i32, !dbg !37
  %269 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %268, i32 8, i32 31), !dbg !37
  %270 = bitcast i32 %269 to float, !dbg !37
  %271 = fadd float %267, %270, !dbg !41
  %272 = bitcast float %271 to i32, !dbg !37
  %273 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %272, i32 4, i32 31), !dbg !37
  %274 = bitcast i32 %273 to float, !dbg !37
  %275 = fadd float %271, %274, !dbg !41
  %276 = bitcast float %275 to i32, !dbg !37
  %277 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %276, i32 2, i32 31), !dbg !37
  %278 = bitcast i32 %277 to float, !dbg !37
  %279 = fadd float %275, %278, !dbg !41
  %280 = bitcast float %279 to i32, !dbg !37
  %281 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %280, i32 1, i32 31), !dbg !37
  %282 = bitcast i32 %281 to float, !dbg !37
  %283 = fadd float %279, %282, !dbg !41
  %284 = bitcast float %223 to i32, !dbg !37
  %285 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %284, i32 16, i32 31), !dbg !37
  %286 = bitcast i32 %285 to float, !dbg !37
  %287 = fadd float %223, %286, !dbg !41
  %288 = bitcast float %287 to i32, !dbg !37
  %289 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %288, i32 8, i32 31), !dbg !37
  %290 = bitcast i32 %289 to float, !dbg !37
  %291 = fadd float %287, %290, !dbg !41
  %292 = bitcast float %291 to i32, !dbg !37
  %293 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %292, i32 4, i32 31), !dbg !37
  %294 = bitcast i32 %293 to float, !dbg !37
  %295 = fadd float %291, %294, !dbg !41
  %296 = bitcast float %295 to i32, !dbg !37
  %297 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %296, i32 2, i32 31), !dbg !37
  %298 = bitcast i32 %297 to float, !dbg !37
  %299 = fadd float %295, %298, !dbg !41
  %300 = bitcast float %299 to i32, !dbg !37
  %301 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %300, i32 1, i32 31), !dbg !37
  %302 = bitcast i32 %301 to float, !dbg !37
  %303 = fadd float %299, %302, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %304 = bitcast float %243 to <1 x i32>, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %198, <1 x i32> %304, i1 true) #3, !dbg !43
  %305 = bitcast float %263 to <1 x i32>, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %200, <1 x i32> %305, i1 true) #3, !dbg !43
  %306 = bitcast float %283 to <1 x i32>, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %202, <1 x i32> %306, i1 true) #3, !dbg !43
  %307 = bitcast float %303 to <1 x i32>, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %204, <1 x i32> %307, i1 true) #3, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %308 = load i32, ptr addrspace(3) %206, align 4, !dbg !43
  %309 = sext i32 %19 to i64, !dbg !44
  %310 = getelementptr float, ptr addrspace(1) %2, i64 %309, !dbg !44
  %311 = and i32 %9, 56, !dbg !45
  %312 = icmp eq i32 %311, 0, !dbg !45
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %207, ptr addrspace(1) %310, i1 %312) #3, !dbg !45
  %313 = getelementptr float, ptr addrspace(1) %3, i64 %309, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %308, ptr addrspace(1) %313, i1 %312) #3, !dbg !47
  ret void, !dbg !48
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py", directory: "inductor_cache/3u")
!4 = !{ptr @triton_per_fused__log_softmax_convolution_37, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__log_softmax_convolution_37, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__log_softmax_convolution_37", linkageName: "triton_per_fused__log_softmax_convolution_37", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 26, column: 34, scope: !7)
!15 = !DILocation(line: 28, column: 21, scope: !7)
!16 = !DILocation(line: 31, column: 38, scope: !7)
!17 = !DILocation(line: 31, column: 35, scope: !7)
!18 = !DILocation(line: 31, column: 30, scope: !7)
!19 = !DILocation(line: 31, column: 43, scope: !7)
!20 = !DILocation(line: 32, column: 30, scope: !7)
!21 = !DILocation(line: 32, column: 35, scope: !7)
!22 = !DILocation(line: 33, column: 18, scope: !7)
!23 = !DILocation(line: 35, column: 33, scope: !7)
!24 = !DILocation(line: 131, column: 29, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!26 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!27 = !DILocation(line: 36, column: 37, scope: !7)
!28 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !27)
!29 = distinct !DILexicalBlockFile(scope: !25, file: !26, discriminator: 0)
!30 = !DILocation(line: 120, column: 21, scope: !29, inlinedAt: !27)
!31 = !DILocation(line: 120, column: 16, scope: !29, inlinedAt: !27)
!32 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !27)
!33 = !DILocation(line: 36, column: 40, scope: !7)
!34 = !DILocation(line: 37, column: 18, scope: !7)
!35 = !DILocation(line: 38, column: 23, scope: !7)
!36 = !DILocation(line: 40, column: 34, scope: !7)
!37 = !DILocation(line: 267, column: 36, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !7, file: !39, discriminator: 0)
!39 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!40 = !DILocation(line: 41, column: 26, scope: !7)
!41 = !DILocation(line: 256, column: 15, scope: !42, inlinedAt: !40)
!42 = distinct !DILexicalBlockFile(scope: !38, file: !39, discriminator: 0)
!43 = !DILocation(line: 41, column: 29, scope: !7)
!44 = !DILocation(line: 42, column: 25, scope: !7)
!45 = !DILocation(line: 42, column: 36, scope: !7)
!46 = !DILocation(line: 43, column: 25, scope: !7)
!47 = !DILocation(line: 43, column: 37, scope: !7)
!48 = !DILocation(line: 43, column: 4, scope: !7)
