//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_8,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_9,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_10,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_11
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<54>;
	.reg .f32 	%f<32>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd13, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_0];
	ld.param.u64 	%rd14, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_1];
$L__tmp0:
	.loc	1 23 28                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:25:21
	setp.lt.s32 	%p1, %r1, 512;
	ld.param.u64 	%rd15, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_2];
	ld.param.u64 	%rd16, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_3];
	.loc	1 26 34                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:26:34
	mov.u32 	%r28, %tid.x;
	and.b32  	%r29, %r28, 63;
	ld.param.u64 	%rd17, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_4];
	.loc	1 31 19                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:31:19
	shr.s32 	%r30, %r1, 31;
	shr.u32 	%r31, %r30, 25;
	add.s32 	%r32, %r1, %r31;
	and.b32  	%r33, %r32, -128;
	sub.s32 	%r34, %r1, %r33;
	ld.param.u64 	%rd18, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_5];
	.loc	1 32 42                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:32:42
	shl.b32 	%r35, %r1, 6;
	ld.param.u64 	%rd19, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_6];
	.loc	1 32 39                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:32:39
	or.b32  	%r36, %r35, %r29;
	ld.param.u64 	%rd20, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_7];
	ld.param.u64 	%rd21, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_8];
	.loc	1 32 34                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:32:34
	mul.wide.s32 	%rd22, %r36, 4;
	add.s64 	%rd1, %rd13, %rd22;
	ld.param.u64 	%rd23, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_13_param_9];
	mov.b32 	%r3, 0;
	.loc	1 32 47                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	.loc	1 33 30                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:33:30
	mul.wide.s32 	%rd24, %r34, 4;
	add.s64 	%rd2, %rd16, %rd24;
	.loc	1 33 35                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:33:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 34                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:34:34
	add.s64 	%rd3, %rd14, %rd22;
	.loc	1 34 47                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:34:47
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r5, %r3;
	// end inline asm
	.loc	1 35 30                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:35:30
	add.s64 	%rd4, %rd17, %rd24;
	.loc	1 35 35                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:35:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 36 30                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:36:30
	add.s64 	%rd5, %rd18, %rd24;
	.loc	1 36 35                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:36:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 37 30                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:37:30
	add.s64 	%rd6, %rd19, %rd24;
	.loc	1 37 35                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:37:35
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r9;
	.loc	1 38 31                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:38:31
	add.s64 	%rd7, %rd20, %rd24;
	.loc	1 38 36                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:38:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:39:31
	add.s64 	%rd8, %rd21, %rd24;
	.loc	1 39 36                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:39:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 44 19                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:44:19
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 45 27                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:45:27
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 34 47                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:34:47
	mov.b32 	%f4, %r5;
	.loc	1 35 35                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:35:35
	mov.b32 	%f5, %r7;
	.loc	1 41 18                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:41:18
	add.f32 	%f6, %f4, %f5;
	.loc	1 36 35                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:36:35
	mov.b32 	%f7, %r8;
	.loc	1 42 18                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:42:18
	sub.f32 	%f8, %f6, %f7;
	.loc	1 32 47                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:32:47
	mov.b32 	%f9, %r2;
	.loc	1 33 35                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:33:35
	mov.b32 	%f10, %r4;
	.loc	1 40 18                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:40:18
	add.f32 	%f11, %f9, %f10;
	.loc	1 39 36                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:39:36
	mov.b32 	%f12, %r11;
	.loc	1 38 36                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:38:36
	mov.b32 	%f13, %r10;
	.loc	1 26 34                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:26:34
	and.b32  	%r37, %r28, 31;
	.loc	1 47 20                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:47:20
	mov.b32 	%r14, %f3;
	mov.b32 	%r13, 1065353216;
	// begin inline asm
	div.full.f32 %r12, %r13, %r14;
	// end inline asm
	mov.b32 	%f14, %r12;
	.loc	1 50 19                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:50:19
	mul.f32 	%f15, %f8, %f14;
	.loc	1 52 20                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:52:20
	fma.rn.f32 	%f16, %f15, %f13, %f12;
	.loc	1 53 19                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:53:19
	add.f32 	%f17, %f11, %f16;
	.loc	1 55 35                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:55:35
	selp.f32 	%f18, %f17, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f18;
	shfl.sync.bfly.b32	%r39, %r38, 16, 31, -1;
	mov.b32 	%f19, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f20;
	shfl.sync.bfly.b32	%r41, %r40, 8, 31, -1;
	mov.b32 	%f21, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f22;
	shfl.sync.bfly.b32	%r43, %r42, 4, 31, -1;
	mov.b32 	%f23, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f24;
	shfl.sync.bfly.b32	%r45, %r44, 2, 31, -1;
	mov.b32 	%f25, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f26;
	shfl.sync.bfly.b32	%r47, %r46, 1, 31, -1;
	mov.b32 	%f27, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p11, %r37, 0;
	shr.u32 	%r48, %r28, 3;
	and.b32  	%r49, %r48, 4;
	mov.u32 	%r50, global_smem;
	add.s32 	%r15, %r50, %r49;
	mov.b32 	%r16, %f28;
	// begin inline asm
	@%p11 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p12, %r28, 2;
	shl.b32 	%r51, %r28, 2;
	add.s32 	%r18, %r50, %r51;
	// begin inline asm
	@%p12 ld.shared.b32 %r17, [ %r18 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r17;
	shfl.sync.bfly.b32	%r52, %r17, 1, 31, -1;
	mov.b32 	%f30, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r53, %r28, 1;
	setp.eq.b32 	%p18, %r53, 1;
	not.pred 	%p19, %p18;
	and.pred  	%p13, %p12, %p19;
	mov.b32 	%r20, %f31;
	// begin inline asm
	@%p13 st.shared.b32 [ %r18 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 58 20                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:58:20
	ld.shared.u32 	%r22, [global_smem];
	mov.b32 	%r23, 1115684864;
	// begin inline asm
	div.full.f32 %r27, %r22, %r23;
	// end inline asm
	.loc	1 59 47                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:59:47
	mov.b32 	%r24, %f11;
	// begin inline asm
	@%p1 st.global.b32 [ %rd1 + 0 ], { %r24 };
	// end inline asm
	.loc	1 60 47                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:60:47
	mov.b32 	%r25, %f6;
	// begin inline asm
	@%p1 st.global.b32 [ %rd3 + 0 ], { %r25 };
	// end inline asm
	.loc	1 61 25                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:61:25
	add.s64 	%rd11, %rd23, %rd22;
	.loc	1 61 45                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:61:45
	mov.b32 	%r26, %f17;
	// begin inline asm
	@%p1 st.global.b32 [ %rd11 + 0 ], { %r26 };
	// end inline asm
	.loc	1 62 4                          // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:62:4
	bar.sync 	0;
	.loc	1 63 28                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:63:28
	mul.wide.s32 	%rd25, %r1, 4;
	add.s64 	%rd12, %rd15, %rd25;
	.loc	1 63 40                         // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:63:40
	setp.eq.s32 	%p20, %r29, 0;
	and.pred  	%p17, %p20, %p1;
	// begin inline asm
	@%p17 st.global.b32 [ %rd12 + 0 ], { %r27 };
	// end inline asm
	.loc	1 63 4                          // cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py:63:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bp/cbpsjynu72otjyzp56x5upb3lz57hhznbaekx6x6idmmbbr3mgcv.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 222                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 112
.b8 115
.b8 106
.b8 121
.b8 110
.b8 117
.b8 55
.b8 50
.b8 111
.b8 116
.b8 106
.b8 121
.b8 122
.b8 112
.b8 53
.b8 54
.b8 120
.b8 53
.b8 117
.b8 112
.b8 98
.b8 51
.b8 108
.b8 122
.b8 53
.b8 55
.b8 104
.b8 104
.b8 122
.b8 110
.b8 98
.b8 97
.b8 101
.b8 107
.b8 120
.b8 54
.b8 120
.b8 54
.b8 105
.b8 100
.b8 109
.b8 109
.b8 98
.b8 98
.b8 114
.b8 51
.b8 109
.b8 103
.b8 99
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 112
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x50 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 49
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb3:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
