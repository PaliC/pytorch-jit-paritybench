#loc = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":19:0)
#loc1 = loc(unknown)
#loc43 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":50:26)
#loc54 = loc(callsite(#loc1 at #loc43))
module {
  tt.func public @triton_per_fused_div_mean_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999996E-13> : tensor<1x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<48> : tensor<1x16xi32> loc(#loc1)
    %cst_1 = arith.constant dense<32> : tensor<1x16xi32> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<1x16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.divsi %0, %c4_i32 : i32 loc(#loc6)
    %6 = arith.muli %0, %c16_i32 : i32 loc(#loc7)
    %7 = tt.splat %6 : i32 -> tensor<1x16xi32> loc(#loc8)
    %8 = arith.addi %4, %7 : tensor<1x16xi32> loc(#loc8)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %8 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc9)
    %11 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc10)
    %12 = tt.load %10, %11, %cst_3 : tensor<1x16x!tt.ptr<f32>> loc(#loc10)
    %13 = arith.muli %5, %c64_i32 : i32 loc(#loc11)
    %14 = tt.splat %13 : i32 -> tensor<1x16xi32> loc(#loc12)
    %15 = arith.addi %4, %14 : tensor<1x16xi32> loc(#loc12)
    %16 = tt.addptr %9, %15 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc13)
    %17 = tt.load %16, %11, %cst_3 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc14)
    %18 = arith.addi %4, %cst_2 : tensor<1x16xi32> loc(#loc15)
    %19 = arith.addi %18, %14 : tensor<1x16xi32> loc(#loc16)
    %20 = tt.addptr %9, %19 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc17)
    %21 = tt.load %20, %11, %cst_3 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc18)
    %22 = arith.addi %4, %cst_1 : tensor<1x16xi32> loc(#loc19)
    %23 = arith.addi %22, %14 : tensor<1x16xi32> loc(#loc20)
    %24 = tt.addptr %9, %23 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc21)
    %25 = tt.load %24, %11, %cst_3 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc22)
    %26 = arith.addi %4, %cst_0 : tensor<1x16xi32> loc(#loc23)
    %27 = arith.addi %26, %14 : tensor<1x16xi32> loc(#loc24)
    %28 = tt.addptr %9, %27 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc25)
    %29 = tt.load %28, %11, %cst_3 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc26)
    %30 = arith.mulf %17, %17 : tensor<1x16xf32> loc(#loc27)
    %31 = arith.mulf %21, %21 : tensor<1x16xf32> loc(#loc28)
    %32 = arith.addf %30, %31 : tensor<1x16xf32> loc(#loc29)
    %33 = arith.mulf %25, %25 : tensor<1x16xf32> loc(#loc30)
    %34 = arith.addf %32, %33 : tensor<1x16xf32> loc(#loc31)
    %35 = arith.mulf %29, %29 : tensor<1x16xf32> loc(#loc32)
    %36 = arith.addf %34, %35 : tensor<1x16xf32> loc(#loc33)
    %37 = tt.extern_elementwise %36 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x16xf32>) -> tensor<1x16xf32> loc(#loc34)
    %38 = arith.cmpf ogt, %37, %cst : tensor<1x16xf32> loc(#loc49)
    %39 = arith.cmpf une, %37, %37 : tensor<1x16xf32> loc(#loc50)
    %40 = arith.ori %38, %39 : tensor<1x16xi1> loc(#loc51)
    %41 = arith.select %40, %37, %cst : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc52)
    %42 = arith.divf %12, %41 : tensor<1x16xf32> loc(#loc40)
    %43 = arith.select %11, %42, %cst_3 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc41)
    %44 = "tt.reduce"(%43) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc43)), %arg5: f32 loc(callsite(#loc1 at #loc43))):
      %48 = arith.addf %arg4, %arg5 : f32 loc(#loc56)
      tt.reduce.return %48 : f32 loc(#loc53)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc53)
    %45 = tt.expand_dims %44 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc45)
    %46 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc46)
    %47 = tt.splat %46 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc46)
    tt.store %47, %45, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc47)
    tt.return loc(#loc48)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":23:28)
#loc3 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":25:21)
#loc4 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":26:26)
#loc5 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":26:34)
#loc6 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":31:19)
#loc7 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":32:38)
#loc8 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":32:35)
#loc9 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":32:30)
#loc10 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":32:43)
#loc11 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":33:38)
#loc12 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":33:35)
#loc13 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":33:30)
#loc14 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":33:43)
#loc15 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":34:35)
#loc16 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":34:40)
#loc17 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":34:30)
#loc18 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":34:48)
#loc19 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":35:35)
#loc20 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":35:40)
#loc21 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":35:30)
#loc22 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":35:48)
#loc23 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":36:35)
#loc24 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":36:40)
#loc25 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":36:30)
#loc26 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":36:48)
#loc27 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":37:18)
#loc28 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":38:18)
#loc29 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":39:18)
#loc30 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":40:18)
#loc31 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":41:18)
#loc32 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":42:19)
#loc33 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":43:19)
#loc34 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":44:27)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc36 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":46:42)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc40 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":47:19)
#loc41 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":49:35)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc45 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":50:29)
#loc46 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":51:25)
#loc47 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":51:37)
#loc48 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":51:4)
#loc49 = loc(callsite(#loc35 at #loc36))
#loc50 = loc(callsite(#loc37 at #loc36))
#loc51 = loc(callsite(#loc38 at #loc36))
#loc52 = loc(callsite(#loc39 at #loc36))
#loc53 = loc(callsite(#loc42 at #loc43))
#loc55 = loc(callsite(#loc44 at #loc42))
#loc56 = loc(callsite(#loc55 at #loc43))
