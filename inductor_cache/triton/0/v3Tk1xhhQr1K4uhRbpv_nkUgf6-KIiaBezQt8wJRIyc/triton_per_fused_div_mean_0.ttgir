#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":19:0)
#loc1 = loc(unknown)
#loc42 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":50:26)
#loc53 = loc(callsite(#loc1 at #loc42))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_div_mean_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999996E-13> : tensor<1x16xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<48> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<32> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x16xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x16xi32, #blocked> loc(#loc4)
    %4 = arith.divsi %0, %c4_i32 : i32 loc(#loc5)
    %5 = arith.muli %0, %c16_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x16xi32, #blocked> loc(#loc7)
    %7 = arith.addi %3, %6 : tensor<1x16xi32, #blocked> loc(#loc7)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x16xi1, #blocked> loc(#loc9)
    %11 = tt.load %9, %10, %cst_3 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc9)
    %12 = arith.muli %4, %c64_i32 : i32 loc(#loc10)
    %13 = tt.splat %12 : i32 -> tensor<1x16xi32, #blocked> loc(#loc11)
    %14 = arith.addi %3, %13 : tensor<1x16xi32, #blocked> loc(#loc11)
    %15 = tt.addptr %8, %14 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc12)
    %16 = tt.load %15, %10, %cst_3 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc13)
    %17 = arith.addi %3, %cst_2 : tensor<1x16xi32, #blocked> loc(#loc14)
    %18 = arith.addi %17, %13 : tensor<1x16xi32, #blocked> loc(#loc15)
    %19 = tt.addptr %8, %18 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc16)
    %20 = tt.load %19, %10, %cst_3 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc17)
    %21 = arith.addi %3, %cst_1 : tensor<1x16xi32, #blocked> loc(#loc18)
    %22 = arith.addi %21, %13 : tensor<1x16xi32, #blocked> loc(#loc19)
    %23 = tt.addptr %8, %22 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc20)
    %24 = tt.load %23, %10, %cst_3 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc21)
    %25 = arith.addi %3, %cst_0 : tensor<1x16xi32, #blocked> loc(#loc22)
    %26 = arith.addi %25, %13 : tensor<1x16xi32, #blocked> loc(#loc23)
    %27 = tt.addptr %8, %26 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc24)
    %28 = tt.load %27, %10, %cst_3 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc25)
    %29 = arith.mulf %16, %16 : tensor<1x16xf32, #blocked> loc(#loc26)
    %30 = arith.mulf %20, %20 : tensor<1x16xf32, #blocked> loc(#loc27)
    %31 = arith.addf %29, %30 : tensor<1x16xf32, #blocked> loc(#loc28)
    %32 = arith.mulf %24, %24 : tensor<1x16xf32, #blocked> loc(#loc29)
    %33 = arith.addf %31, %32 : tensor<1x16xf32, #blocked> loc(#loc30)
    %34 = arith.mulf %28, %28 : tensor<1x16xf32, #blocked> loc(#loc31)
    %35 = arith.addf %33, %34 : tensor<1x16xf32, #blocked> loc(#loc32)
    %36 = tt.extern_elementwise %35 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x16xf32, #blocked>) -> tensor<1x16xf32, #blocked> loc(#loc33)
    %37 = arith.cmpf ogt, %36, %cst : tensor<1x16xf32, #blocked> loc(#loc48)
    %38 = arith.cmpf une, %36, %36 : tensor<1x16xf32, #blocked> loc(#loc49)
    %39 = arith.ori %37, %38 : tensor<1x16xi1, #blocked> loc(#loc50)
    %40 = arith.select %39, %36, %cst : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc51)
    %41 = arith.divf %11, %40 : tensor<1x16xf32, #blocked> loc(#loc39)
    %42 = arith.select %10, %41, %cst_3 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc40)
    %43 = "tt.reduce"(%42) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc42)), %arg5: f32 loc(callsite(#loc1 at #loc42))):
      %48 = arith.addf %arg4, %arg5 : f32 loc(#loc55)
      tt.reduce.return %48 : f32 loc(#loc52)
    }) : (tensor<1x16xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc52)
    %44 = tt.expand_dims %43 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc44)
    %45 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc45)
    %46 = tt.splat %45 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc46)
    %47 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc46)
    tt.store %46, %44, %47 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc46)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":23:28)
#loc3 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":25:21)
#loc4 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":26:34)
#loc5 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":31:19)
#loc6 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":32:38)
#loc7 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":32:35)
#loc8 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":32:30)
#loc9 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":32:43)
#loc10 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":33:38)
#loc11 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":33:35)
#loc12 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":33:30)
#loc13 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":33:43)
#loc14 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":34:35)
#loc15 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":34:40)
#loc16 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":34:30)
#loc17 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":34:48)
#loc18 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":35:35)
#loc19 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":35:40)
#loc20 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":35:30)
#loc21 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":35:48)
#loc22 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":36:35)
#loc23 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":36:40)
#loc24 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":36:30)
#loc25 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":36:48)
#loc26 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":37:18)
#loc27 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":38:18)
#loc28 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":39:18)
#loc29 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":40:18)
#loc30 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":41:18)
#loc31 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":42:19)
#loc32 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":43:19)
#loc33 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":44:27)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc35 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":46:42)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc39 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":47:19)
#loc40 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":49:35)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc44 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":50:29)
#loc45 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":51:25)
#loc46 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":51:37)
#loc47 = loc("inductor_cache/wc/cwchxmjwnmcdhxem2wkiytjbygxzfyfan5mner2vn4ubha57l6bt.py":51:4)
#loc48 = loc(callsite(#loc34 at #loc35))
#loc49 = loc(callsite(#loc36 at #loc35))
#loc50 = loc(callsite(#loc37 at #loc35))
#loc51 = loc(callsite(#loc38 at #loc35))
#loc52 = loc(callsite(#loc41 at #loc42))
#loc54 = loc(callsite(#loc43 at #loc41))
#loc55 = loc(callsite(#loc54 at #loc42))
