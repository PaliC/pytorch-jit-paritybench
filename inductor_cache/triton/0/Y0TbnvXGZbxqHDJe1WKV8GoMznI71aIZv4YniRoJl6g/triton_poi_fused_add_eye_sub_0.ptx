//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_eye_sub_0 // -- Begin function triton_poi_fused_add_eye_sub_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_eye_sub_0
.visible .entry triton_poi_fused_add_eye_sub_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_eye_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_eye_sub_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_eye_sub_0_param_2,
	.param .u32 triton_poi_fused_add_eye_sub_0_param_3,
	.param .u32 triton_poi_fused_add_eye_sub_0_param_4
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<61>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<10>;
	.loc	1 19 0                          // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_add_eye_sub_0_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_add_eye_sub_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:22:33
	shl.b32 	%r13, %r1, 4;
	ld.param.u64 	%rd7, [triton_poi_fused_add_eye_sub_0_param_2];
	.loc	1 23 44                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:23:44
	mov.u32 	%r14, %tid.x;
	bfe.u32 	%r15, %r14, 1, 3;
	and.b32  	%r16, %r14, 16;
	shr.u32 	%r17, %r16, 1;
	or.b32  	%r18, %r15, %r17;
	and.b32  	%r19, %r14, 1;
	and.b32  	%r20, %r14, 15;
	.loc	1 23 23                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:23:23
	or.b32  	%r21, %r18, %r13;
	or.b32  	%r22, %r13, %r20;
	.loc	1 24 21                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:24:21
	setp.lt.s32 	%p8, %r21, 16;
	setp.lt.s32 	%p9, %r22, 16;
	.loc	1 25 28                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:25:33
	shl.b32 	%r23, %r2, 1;
	.loc	1 26 44                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:26:44
	bfe.u32 	%r24, %r14, 4, 1;
	.loc	1 26 23                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:26:23
	or.b32  	%r25, %r23, %r19;
	or.b32  	%r26, %r23, %r24;
	.loc	1 27 21                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:27:21
	setp.lt.s32 	%p10, %r25, 4;
	setp.lt.s32 	%p11, %r26, 4;
	.loc	1 31 19                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:31:19
	shr.s32 	%r28, %r22, 31;
	shr.u32 	%r29, %r28, 30;
	add.s32 	%r30, %r22, %r29;
	.loc	1 28 19                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:28:19
	and.b32  	%r31, %r30, -4;
	sub.s32 	%r32, %r22, %r31;
	.loc	1 32 37                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:32:37
	shl.b32 	%r33, %r21, 2;
	.loc	1 32 35                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:32:35
	add.s32 	%r34, %r25, %r33;
	.loc	1 32 30                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:32:30
	mul.wide.s32 	%rd8, %r34, 4;
	add.s64 	%rd1, %rd5, %rd8;
	.loc	1 32 50                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:32:50
	and.pred  	%p1, %p8, %p10;
	and.pred  	%p3, %p9, %p11;
	.loc	1 32 42                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:32:42
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	and.b32  	%r35, %r14, 31;
	shl.b32 	%r36, %r19, 2;
	mov.u32 	%r37, global_smem;
	add.s32 	%r38, %r37, %r36;
	shl.b32 	%r39, %r18, 2;
	shl.b32 	%r40, %r19, 6;
	or.b32  	%r41, %r40, %r39;
	add.s32 	%r4, %r38, %r41;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r4 + 0 ], %r5;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r42, %r14, 2;
	and.b32  	%r43, %r42, 4;
	add.s32 	%r44, %r37, %r43;
	shl.b32 	%r45, %r35, 2;
	add.s32 	%r46, %r44, %r45;
	ld.shared.f32 	%f1, [%r46];
	.loc	1 33 37                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:33:37
	shl.b32 	%r47, %r26, 2;
	.loc	1 33 35                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:33:35
	add.s32 	%r48, %r47, %r32;
	.loc	1 33 45                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:33:45
	shl.b32 	%r49, %r30, 2;
	and.b32  	%r50, %r49, -16;
	.loc	1 33 42                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:33:42
	add.s32 	%r51, %r48, %r50;
	.loc	1 33 30                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:33:30
	mul.wide.s32 	%rd9, %r51, 4;
	add.s64 	%rd2, %rd5, %rd9;
	.loc	1 33 50                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:33:50
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r6;
	.loc	1 36 19                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:36:19
	setp.eq.s32 	%p12, %r32, %r26;
	.loc	1 39 32                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:39:32
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p12;
	.loc	1 40 18                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:40:18
	sub.f32 	%f4, %f1, %f2;
	.loc	1 41 18                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:41:18
	add.f32 	%f5, %f3, %f4;
	.loc	1 42 19                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:42:19
	sub.f32 	%f6, %f3, %f4;
	.loc	1 43 25                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:43:25
	add.s64 	%rd3, %rd6, %rd8;
	.loc	1 43 43                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:43:43
	bar.sync 	0;
	shl.b32 	%r52, %r14, 1;
	and.b32  	%r53, %r52, 30;
	or.b32  	%r54, %r53, %r24;
	shl.b32 	%r55, %r53, 1;
	add.s32 	%r56, %r37, %r55;
	shl.b32 	%r57, %r54, 2;
	add.s32 	%r7, %r56, %r57;
	mov.b32 	%r8, %f5;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r58, %r52, 60;
	add.s32 	%r59, %r37, %r58;
	add.s32 	%r60, %r59, %r45;
	ld.shared.u32 	%r9, [%r60];
	// begin inline asm
	@%p1 st.global.b32 [ %rd3 + 0 ], { %r9 };
	// end inline asm
	.loc	1 44 25                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:44:25
	add.s64 	%rd4, %rd7, %rd8;
	.loc	1 44 44                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:44:44
	bar.sync 	0;
	mov.b32 	%r11, %f6;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r12, [%r60];
	// begin inline asm
	@%p1 st.global.b32 [ %rd4 + 0 ], { %r12 };
	// end inline asm
	.loc	1 44 4                          // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:44:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/te/cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 101
.b8 112
.b8 112
.b8 97
.b8 50
.b8 105
.b8 55
.b8 112
.b8 107
.b8 120
.b8 106
.b8 122
.b8 55
.b8 53
.b8 98
.b8 117
.b8 110
.b8 98
.b8 108
.b8 108
.b8 107
.b8 107
.b8 110
.b8 51
.b8 121
.b8 104
.b8 52
.b8 117
.b8 101
.b8 114
.b8 50
.b8 98
.b8 98
.b8 102
.b8 97
.b8 121
.b8 111
.b8 121
.b8 107
.b8 99
.b8 121
.b8 97
.b8 100
.b8 54
.b8 114
.b8 51
.b8 114
.b8 55
.b8 51
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 101
.b8 0
	}
	.section	.debug_macinfo	{	}
