; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mean_mul_sigmoid_56(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 7168, !dbg !14
  %.frozen = freeze i32 %8, !dbg !15
  %10 = sdiv i32 %.frozen, 1792, !dbg !15
  %11 = mul i32 %10, 1792, !dbg !16
  %.decomposed = sub i32 %.frozen, %11, !dbg !16
  %12 = mul i32 %10, 7168, !dbg !17
  %13 = add i32 %12, %.decomposed, !dbg !18
  %14 = sext i32 %13 to i64, !dbg !19
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !19
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 %9) #1, !dbg !20
  %17 = bitcast i32 %16 to float, !dbg !20
  %18 = add i32 %13, 1792, !dbg !21
  %19 = sext i32 %18 to i64, !dbg !22
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !22
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %9) #1, !dbg !23
  %22 = bitcast i32 %21 to float, !dbg !23
  %23 = add i32 %13, 3584, !dbg !24
  %24 = sext i32 %23 to i64, !dbg !25
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !25
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %9) #1, !dbg !26
  %27 = bitcast i32 %26 to float, !dbg !26
  %28 = add i32 %13, 5376, !dbg !27
  %29 = sext i32 %28 to i64, !dbg !28
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !28
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %9) #1, !dbg !29
  %32 = bitcast i32 %31 to float, !dbg !29
  %33 = fsub float 0.000000e+00, %17, !dbg !30
  %34 = fmul float %33, 0x3FF7154760000000, !dbg !34
  %35 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %34) #1, !dbg !34
  %36 = fadd float %35, 1.000000e+00, !dbg !35
  %37 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %36) #1, !dbg !36
  %38 = fmul float %37, %17, !dbg !37
  %39 = fsub float 0.000000e+00, %22, !dbg !38
  %40 = fmul float %39, 0x3FF7154760000000, !dbg !40
  %41 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %40) #1, !dbg !40
  %42 = fadd float %41, 1.000000e+00, !dbg !41
  %43 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %42) #1, !dbg !42
  %44 = fmul float %43, %22, !dbg !43
  %45 = fadd float %38, %44, !dbg !44
  %46 = fsub float 0.000000e+00, %27, !dbg !45
  %47 = fmul float %46, 0x3FF7154760000000, !dbg !47
  %48 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %47) #1, !dbg !47
  %49 = fadd float %48, 1.000000e+00, !dbg !48
  %50 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %49) #1, !dbg !49
  %51 = fmul float %50, %27, !dbg !50
  %52 = fadd float %45, %51, !dbg !51
  %53 = fsub float 0.000000e+00, %32, !dbg !52
  %54 = fmul float %53, 0x3FF7154760000000, !dbg !54
  %55 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %54) #1, !dbg !54
  %56 = fadd float %55, 1.000000e+00, !dbg !55
  %57 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %56) #1, !dbg !56
  %58 = fmul float %57, %32, !dbg !57
  %59 = fadd float %52, %58, !dbg !58
  %60 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %59, float 4.000000e+00) #1, !dbg !59
  %61 = sext i32 %8 to i64, !dbg !60
  %62 = getelementptr float, ptr addrspace(1) %1, i64 %61, !dbg !60
  %63 = bitcast float %60 to i32, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %63, ptr addrspace(1) %62, i1 %9) #1, !dbg !61
  ret void, !dbg !62
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cvvsjob4dlzypuuf47us6slnpysitvg6iyqtbhlv3zgbikcufpel.py", directory: "inductor_cache/vv")
!4 = !{ptr @triton_poi_fused_mean_mul_sigmoid_56, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mean_mul_sigmoid_56, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mean_mul_sigmoid_56", linkageName: "triton_poi_fused_mean_mul_sigmoid_56", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 40, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 45, scope: !7)
!21 = !DILocation(line: 28, column: 42, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 52, scope: !7)
!24 = !DILocation(line: 29, column: 42, scope: !7)
!25 = !DILocation(line: 29, column: 30, scope: !7)
!26 = !DILocation(line: 29, column: 52, scope: !7)
!27 = !DILocation(line: 30, column: 43, scope: !7)
!28 = !DILocation(line: 30, column: 31, scope: !7)
!29 = !DILocation(line: 30, column: 53, scope: !7)
!30 = !DILocation(line: 47, column: 30, scope: !31, inlinedAt: !33)
!31 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!32 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!33 = !DILocation(line: 31, column: 22, scope: !7)
!34 = !DILocation(line: 47, column: 29, scope: !31, inlinedAt: !33)
!35 = !DILocation(line: 47, column: 20, scope: !31, inlinedAt: !33)
!36 = !DILocation(line: 47, column: 16, scope: !31, inlinedAt: !33)
!37 = !DILocation(line: 32, column: 18, scope: !7)
!38 = !DILocation(line: 47, column: 30, scope: !31, inlinedAt: !39)
!39 = !DILocation(line: 33, column: 22, scope: !7)
!40 = !DILocation(line: 47, column: 29, scope: !31, inlinedAt: !39)
!41 = !DILocation(line: 47, column: 20, scope: !31, inlinedAt: !39)
!42 = !DILocation(line: 47, column: 16, scope: !31, inlinedAt: !39)
!43 = !DILocation(line: 34, column: 18, scope: !7)
!44 = !DILocation(line: 35, column: 18, scope: !7)
!45 = !DILocation(line: 47, column: 30, scope: !31, inlinedAt: !46)
!46 = !DILocation(line: 36, column: 22, scope: !7)
!47 = !DILocation(line: 47, column: 29, scope: !31, inlinedAt: !46)
!48 = !DILocation(line: 47, column: 20, scope: !31, inlinedAt: !46)
!49 = !DILocation(line: 47, column: 16, scope: !31, inlinedAt: !46)
!50 = !DILocation(line: 37, column: 18, scope: !7)
!51 = !DILocation(line: 38, column: 19, scope: !7)
!52 = !DILocation(line: 47, column: 30, scope: !31, inlinedAt: !53)
!53 = !DILocation(line: 39, column: 23, scope: !7)
!54 = !DILocation(line: 47, column: 29, scope: !31, inlinedAt: !53)
!55 = !DILocation(line: 47, column: 20, scope: !31, inlinedAt: !53)
!56 = !DILocation(line: 47, column: 16, scope: !31, inlinedAt: !53)
!57 = !DILocation(line: 40, column: 20, scope: !7)
!58 = !DILocation(line: 41, column: 20, scope: !7)
!59 = !DILocation(line: 43, column: 20, scope: !7)
!60 = !DILocation(line: 44, column: 25, scope: !7)
!61 = !DILocation(line: 44, column: 37, scope: !7)
!62 = !DILocation(line: 44, column: 4, scope: !7)
