#loc = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":19:0)
#loc1 = loc(unknown)
#loc28 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":43:41)
#loc71 = loc(callsite(#loc1 at #loc28))
module {
  tt.func public @triton_red_fused_add_div_sqrt_sub_var_mean_42(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e-10> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4.096000e+03> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_4 = arith.constant dense<4096> : tensor<1x2048xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc3)
    %2 = tt.expand_dims %1 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc4)
    %3 = arith.muli %0, %c4096_i32 : i32 loc(#loc5)
    %4 = tt.splat %3 : i32 -> tensor<1x2048xi32> loc(#loc6)
    %5 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc7)
    %6:3 = scf.for %arg5 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg6 = %cst_3, %arg7 = %cst_3, %arg8 = %cst_3) -> (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>)  : i32 {
      %21 = tt.splat %arg5 : i32 -> tensor<1x2048xi32> loc(#loc9)
      %22 = arith.addi %21, %2 : tensor<1x2048xi32> loc(#loc9)
      %23 = arith.cmpi slt, %22, %cst_4 : tensor<1x2048xi32> loc(#loc10)
      %24 = arith.addi %22, %4 : tensor<1x2048xi32> loc(#loc6)
      %25 = tt.addptr %5, %24 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc7)
      %26 = tt.load %25, %23, %cst_3 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc11)
      %27 = arith.cmpi eq, %arg5, %c0_i32 : i32 loc(#loc12)
      %28:3 = scf.if %27 -> (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) {
        scf.yield %cst_3, %26, %cst_0 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc62)
      } else {
        %32 = arith.subf %26, %arg6 : tensor<1x2048xf32> loc(#loc63)
        %33 = arith.addf %arg8, %cst_0 : tensor<1x2048xf32> loc(#loc64)
        %34 = arith.divf %32, %33 : tensor<1x2048xf32> loc(#loc65)
        %35 = arith.addf %arg6, %34 : tensor<1x2048xf32> loc(#loc66)
        %36 = arith.subf %26, %35 : tensor<1x2048xf32> loc(#loc67)
        %37 = arith.mulf %32, %36 : tensor<1x2048xf32> loc(#loc68)
        %38 = arith.addf %arg7, %37 : tensor<1x2048xf32> loc(#loc69)
        scf.yield %38, %35, %33 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc69)
      } loc(#loc61)
      %29 = arith.select %23, %28#1, %arg6 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc23)
      %30 = arith.select %23, %28#0, %arg7 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc24)
      %31 = arith.select %23, %28#2, %arg8 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc25)
      scf.yield %29, %30, %31 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc26)
    } loc(#loc8)
    %7:3 = "tt.reduce"(%6#0, %6#1, %6#2) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc28)), %arg6: f32 loc(callsite(#loc1 at #loc28)), %arg7: f32 loc(callsite(#loc1 at #loc28)), %arg8: f32 loc(callsite(#loc1 at #loc28)), %arg9: f32 loc(callsite(#loc1 at #loc28)), %arg10: f32 loc(callsite(#loc1 at #loc28))):
      %21 = arith.subf %arg8, %arg5 : f32 loc(#loc84)
      %22 = arith.addf %arg7, %arg10 : f32 loc(#loc85)
      %23 = arith.cmpf oeq, %22, %cst : f32 loc(#loc86)
      %24 = arith.divf %arg10, %22 : f32 loc(#loc87)
      %25 = arith.select %23, %cst, %24 : f32 loc(#loc88)
      %26 = arith.mulf %21, %25 : f32 loc(#loc89)
      %27 = arith.addf %arg5, %26 : f32 loc(#loc90)
      %28 = arith.addf %arg6, %arg9 : f32 loc(#loc91)
      %29 = arith.mulf %21, %21 : f32 loc(#loc92)
      %30 = arith.mulf %29, %arg7 : f32 loc(#loc93)
      %31 = arith.mulf %30, %25 : f32 loc(#loc94)
      %32 = arith.addf %28, %31 : f32 loc(#loc95)
      tt.reduce.return %27, %32, %22 : f32, f32, f32 loc(#loc70)
    }) : (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) -> (tensor<1xf32>, tensor<1xf32>, tensor<1xf32>) loc(#loc70)
    %8 = tt.expand_dims %7#0 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc41)
    %9 = tt.expand_dims %7#1 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc42)
    %10 = arith.divf %9, %cst_2 : tensor<1x1xf32> loc(#loc43)
    %11 = arith.addf %10, %cst_1 : tensor<1x1xf32> loc(#loc44)
    %12 = tt.extern_elementwise %11 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc45)
    gpu.barrier loc(#loc46)
    %13 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc47)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc47)
    tt.store %14, %12 : tensor<1x1x!tt.ptr<f32>> loc(#loc48)
    %15 = arith.muli %0, %c4096_i32 : i32 loc(#loc49)
    %16 = tt.splat %15 : i32 -> tensor<1x2048xi32> loc(#loc50)
    %17 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc51)
    %18 = tt.broadcast %8 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc52)
    %19 = tt.broadcast %12 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc53)
    %20 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc54)
    scf.for %arg5 = %c0_i32 to %c4096_i32 step %c2048_i32  : i32 {
      %21 = tt.splat %arg5 : i32 -> tensor<1x2048xi32> loc(#loc56)
      %22 = arith.addi %21, %2 : tensor<1x2048xi32> loc(#loc56)
      %23 = arith.cmpi slt, %22, %cst_4 : tensor<1x2048xi32> loc(#loc57)
      %24 = arith.addi %22, %16 : tensor<1x2048xi32> loc(#loc50)
      %25 = tt.addptr %17, %24 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc51)
      %26 = tt.load %25, %23, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc58)
      %27 = arith.subf %26, %18 : tensor<1x2048xf32> loc(#loc52)
      %28 = arith.divf %27, %19 : tensor<1x2048xf32> loc(#loc53)
      %29 = tt.addptr %20, %24 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc54)
      tt.store %29, %28, %23 : tensor<1x2048x!tt.ptr<f32>> loc(#loc59)
    } loc(#loc55)
    tt.return loc(#loc60)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":22:28)
#loc3 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":25:25)
#loc4 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":25:33)
#loc5 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":34:44)
#loc6 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":34:39)
#loc7 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":34:34)
#loc8 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":30:36)
#loc9 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":31:27)
#loc10 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":32:25)
#loc11 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":34:49)
#loc12 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":37:62)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc14 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":37:51)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc23 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":39:52)
#loc24 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":40:48)
#loc25 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":41:56)
#loc26 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":41:8)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc41 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":45:20)
#loc42 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":46:20)
#loc43 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":49:18)
#loc44 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":51:18)
#loc45 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":52:26)
#loc46 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":53:4)
#loc47 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":54:28)
#loc48 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":54:39)
#loc49 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":59:45)
#loc50 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":59:40)
#loc51 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":59:35)
#loc52 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":60:24)
#loc53 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":61:24)
#loc54 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":62:29)
#loc55 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":55:36)
#loc56 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":56:27)
#loc57 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":57:25)
#loc58 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":59:50)
#loc59 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":62:51)
#loc60 = loc("inductor_cache/c5/cc5kzdi76zhgedhyjosqicuxrvgex4dmxwuo7naqkk4rigrijw75.py":55:4)
#loc61 = loc(callsite(#loc13 at #loc14))
#loc62 = loc(callsite(#loc15 at #loc14))
#loc63 = loc(callsite(#loc16 at #loc14))
#loc64 = loc(callsite(#loc17 at #loc14))
#loc65 = loc(callsite(#loc18 at #loc14))
#loc66 = loc(callsite(#loc19 at #loc14))
#loc67 = loc(callsite(#loc20 at #loc14))
#loc68 = loc(callsite(#loc21 at #loc14))
#loc69 = loc(callsite(#loc22 at #loc14))
#loc70 = loc(callsite(#loc27 at #loc28))
#loc72 = loc(callsite(#loc29 at #loc27))
#loc73 = loc(callsite(#loc30 at #loc27))
#loc74 = loc(callsite(#loc31 at #loc27))
#loc75 = loc(callsite(#loc32 at #loc27))
#loc76 = loc(callsite(#loc33 at #loc27))
#loc77 = loc(callsite(#loc34 at #loc27))
#loc78 = loc(callsite(#loc35 at #loc27))
#loc79 = loc(callsite(#loc36 at #loc27))
#loc80 = loc(callsite(#loc37 at #loc27))
#loc81 = loc(callsite(#loc38 at #loc27))
#loc82 = loc(callsite(#loc39 at #loc27))
#loc83 = loc(callsite(#loc40 at #loc27))
#loc84 = loc(callsite(#loc72 at #loc28))
#loc85 = loc(callsite(#loc73 at #loc28))
#loc86 = loc(callsite(#loc74 at #loc28))
#loc87 = loc(callsite(#loc75 at #loc28))
#loc88 = loc(callsite(#loc76 at #loc28))
#loc89 = loc(callsite(#loc77 at #loc28))
#loc90 = loc(callsite(#loc78 at #loc28))
#loc91 = loc(callsite(#loc79 at #loc28))
#loc92 = loc(callsite(#loc80 at #loc28))
#loc93 = loc(callsite(#loc81 at #loc28))
#loc94 = loc(callsite(#loc82 at #loc28))
#loc95 = loc(callsite(#loc83 at #loc28))
