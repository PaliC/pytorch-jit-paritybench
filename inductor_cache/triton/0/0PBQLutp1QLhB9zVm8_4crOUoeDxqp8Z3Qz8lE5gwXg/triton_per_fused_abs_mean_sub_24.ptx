//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_abs_mean_sub_24 // -- Begin function triton_per_fused_abs_mean_sub_24
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_abs_mean_sub_24
.visible .entry triton_per_fused_abs_mean_sub_24(
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_mean_sub_24_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_mean_sub_24_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_mean_sub_24_param_2,
	.param .u32 triton_per_fused_abs_mean_sub_24_param_3,
	.param .u32 triton_per_fused_abs_mean_sub_24_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<73>;
	.reg .f32 	%f<24>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_per_fused_abs_mean_sub_24_param_0];
	ld.param.u64 	%rd7, [triton_per_fused_abs_mean_sub_24_param_1];
$L__tmp0:
	.loc	1 23 28                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:25:21
	setp.lt.s32 	%p1, %r1, 1024;
	ld.param.u64 	%rd8, [triton_per_fused_abs_mean_sub_24_param_2];
	.loc	1 26 34                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:26:34
	mov.u32 	%r17, %tid.x;
	and.b32  	%r18, %r17, 31;
	and.b32  	%r19, %r17, 63;
	.loc	1 31 19                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:31:19
	shr.s32 	%r20, %r1, 31;
	shr.u32 	%r21, %r20, 26;
	add.s32 	%r22, %r1, %r21;
	.loc	1 30 19                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:30:19
	and.b32  	%r23, %r22, 33554368;
	sub.s32 	%r24, %r1, %r23;
	.loc	1 33 36                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:33:36
	shl.b32 	%r25, %r19, 9;
	.loc	1 33 65                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:33:65
	shl.b32 	%r26, %r24, 7;
	.loc	1 33 61                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:33:61
	or.b32  	%r27, %r26, %r19;
	.loc	1 33 75                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:33:75
	shl.b32 	%r28, %r22, 7;
	and.b32  	%r29, %r28, -8192;
	.loc	1 33 70                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:33:70
	add.s32 	%r30, %r27, %r29;
	or.b32  	%r31, %r30, 64;
	.loc	1 33 82                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:33:82
	shr.s32 	%r32, %r30, 31;
	shr.u32 	%r33, %r32, 17;
	add.s32 	%r34, %r30, %r33;
	add.s32 	%r35, %r31, %r33;
	.loc	1 33 55                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:33:55
	and.b32  	%r36, %r34, -32768;
	and.b32  	%r37, %r35, -32768;
	.loc	1 33 48                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:33:48
	or.b32  	%r38, %r36, %r25;
	or.b32  	%r39, %r37, %r25;
	.loc	1 33 121                        // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:33:121
	shr.u32 	%r40, %r32, 26;
	add.s32 	%r41, %r30, %r40;
	shr.s32 	%r42, %r41, 6;
	add.s32 	%r43, %r31, %r40;
	shr.s32 	%r44, %r43, 6;
	.loc	1 33 127                        // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:33:127
	shr.s32 	%r45, %r41, 31;
	shr.u32 	%r46, %r45, 23;
	add.s32 	%r47, %r42, %r46;
	and.b32  	%r48, %r47, -512;
	sub.s32 	%r49, %r42, %r48;
	shr.s32 	%r50, %r43, 31;
	shr.u32 	%r51, %r50, 23;
	add.s32 	%r52, %r44, %r51;
	and.b32  	%r53, %r52, -512;
	sub.s32 	%r54, %r44, %r53;
	.loc	1 33 93                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:33:93
	add.s32 	%r55, %r38, %r49;
	add.s32 	%r56, %r39, %r54;
	.loc	1 33 30                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:33:30
	mul.wide.s32 	%rd9, %r55, 4;
	add.s64 	%rd1, %rd6, %rd9;
	mul.wide.s32 	%rd10, %r56, 4;
	add.s64 	%rd2, %rd6, %rd10;
	mov.b32 	%r3, 0;
	.loc	1 33 135                        // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:33:135
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	.loc	1 34 30                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:34:30
	add.s64 	%rd3, %rd7, %rd9;
	add.s64 	%rd4, %rd7, %rd10;
	.loc	1 34 135                        // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:34:135
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r6, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r8, %r3;
	// end inline asm
	.loc	1 33 135                        // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:33:135
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r4;
	.loc	1 34 135                        // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:34:135
	mov.b32 	%f3, %r6;
	mov.b32 	%f4, %r8;
	.loc	1 35 18                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:35:18
	sub.f32 	%f5, %f2, %f4;
	sub.f32 	%f6, %f1, %f3;
	.loc	1 36 23                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:36:23
	abs.f32 	%f7, %f6;
	abs.f32 	%f8, %f5;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f7, %f8;
	selp.f32 	%f10, %f9, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f10;
	shfl.sync.bfly.b32	%r58, %r57, 16, 31, -1;
	mov.b32 	%f11, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f12;
	shfl.sync.bfly.b32	%r60, %r59, 8, 31, -1;
	mov.b32 	%f13, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f14;
	shfl.sync.bfly.b32	%r62, %r61, 4, 31, -1;
	mov.b32 	%f15, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f16;
	shfl.sync.bfly.b32	%r64, %r63, 2, 31, -1;
	mov.b32 	%f17, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f18;
	shfl.sync.bfly.b32	%r66, %r65, 1, 31, -1;
	mov.b32 	%f19, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p9, %r18, 0;
	shr.u32 	%r67, %r17, 3;
	and.b32  	%r68, %r67, 4;
	mov.u32 	%r69, global_smem;
	add.s32 	%r10, %r69, %r68;
	mov.b32 	%r11, %f20;
	// begin inline asm
	@%p9 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r17, 2;
	shl.b32 	%r70, %r17, 2;
	add.s32 	%r13, %r69, %r70;
	// begin inline asm
	@%p10 ld.shared.b32 %r12, [ %r13 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r12;
	shfl.sync.bfly.b32	%r71, %r12, 1, 31, -1;
	mov.b32 	%f22, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r72, %r17, 1;
	setp.eq.b32 	%p13, %r72, 1;
	not.pred 	%p14, %p13;
	and.pred  	%p11, %p10, %p14;
	mov.b32 	%r15, %f23;
	// begin inline asm
	@%p11 st.shared.b32 [ %r13 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r16, [global_smem];
$L__tmp2:
	.loc	1 40 25                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:40:25
	mul.wide.s32 	%rd11, %r1, 4;
	add.s64 	%rd5, %rd8, %rd11;
	.loc	1 40 36                         // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:40:36
	setp.eq.s32 	%p15, %r19, 0;
	and.pred  	%p12, %p15, %p1;
	// begin inline asm
	@%p12 st.global.b32 [ %rd5 + 0 ], { %r16 };
	// end inline asm
	.loc	1 40 4                          // c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py:40:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6b/c6btjnmro5kudbaehykdaub7nw6vvp2hwfkp7piza7fjrhyp25l3.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 177                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xaa DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 98
.b8 116
.b8 106
.b8 110
.b8 109
.b8 114
.b8 111
.b8 53
.b8 107
.b8 117
.b8 100
.b8 98
.b8 97
.b8 101
.b8 104
.b8 121
.b8 107
.b8 100
.b8 97
.b8 117
.b8 98
.b8 55
.b8 110
.b8 119
.b8 54
.b8 118
.b8 118
.b8 112
.b8 50
.b8 104
.b8 119
.b8 102
.b8 107
.b8 112
.b8 55
.b8 112
.b8 105
.b8 122
.b8 97
.b8 55
.b8 102
.b8 106
.b8 114
.b8 104
.b8 121
.b8 112
.b8 50
.b8 53
.b8 108
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 98
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x23 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 98
.b8 115
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x86:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9b:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
