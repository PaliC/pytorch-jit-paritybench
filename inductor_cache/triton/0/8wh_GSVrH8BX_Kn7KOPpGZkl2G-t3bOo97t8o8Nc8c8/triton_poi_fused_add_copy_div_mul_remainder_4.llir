; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_copy_div_mul_remainder_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %7 = shl i32 %6, 7, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 192, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 16, !dbg !15
  %13 = srem i32 %12, 3, !dbg !16
  %14 = mul i32 %12, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %14, !dbg !17
  %15 = sdiv i32 %10, 48, !dbg !18
  %16 = mul nsw i32 %15, 48, !dbg !19
  %17 = add nsw i32 %16, %.decomposed, !dbg !20
  %18 = sext i32 %17 to i64, !dbg !21
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !21
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %11) #2, !dbg !22
  %21 = bitcast i32 %20 to float, !dbg !22
  %22 = sext i32 %15 to i64, !dbg !23
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %22, !dbg !23
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %11) #2, !dbg !24
  %25 = bitcast i32 %24 to float, !dbg !24
  %26 = sext i32 %17 to i64, !dbg !25
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !25
  %28 = getelementptr i8, ptr addrspace(1) %27, i64 64, !dbg !25
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %11) #2, !dbg !26
  %30 = bitcast i32 %29 to float, !dbg !26
  %31 = getelementptr float, ptr addrspace(1) %2, i64 %22, !dbg !27
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %11) #2, !dbg !28
  %33 = bitcast i32 %32 to float, !dbg !28
  %34 = sext i32 %10 to i64, !dbg !29
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !29
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %11) #2, !dbg !30
  %37 = bitcast i32 %36 to float, !dbg !30
  %38 = icmp eq i32 %13, 1, !dbg !31
  %39 = fmul float %25, 2.550000e+02, !dbg !32
  %40 = fmul float %39, 0x3F66C16C20000000, !dbg !33
  %41 = fadd float %40, %21, !dbg !34
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !35
  %.not.i = icmp eq i32 %42, 0, !dbg !35
  %43 = tail call float @llvm.nvvm.floor.ftz.f(float %41), !dbg !35
  %44 = tail call float @llvm.nvvm.floor.f(float %41), !dbg !35
  %.0.i = select i1 %.not.i, float %44, float %43, !dbg !35
  %45 = fsub float %41, %.0.i, !dbg !35
  %46 = fcmp une float %45, 0.000000e+00, !dbg !36
  %47 = bitcast float %45 to i32, !dbg !37
  %48 = icmp slt i32 %47, 0, !dbg !38
  %49 = and i1 %46, %48, !dbg !39
  %50 = fadd float %45, 1.000000e+00, !dbg !40
  %51 = select i1 %49, float %50, float %45, !dbg !41
  %52 = fmul float %30, %33, !dbg !42
  %53 = icmp eq i32 %13, 0, !dbg !43
  %54 = select i1 %53, float %51, float %37, !dbg !44
  %55 = select i1 %38, float %52, float %54, !dbg !45
  %56 = getelementptr float, ptr addrspace(1) %3, i64 %34, !dbg !46
  %57 = bitcast float %55 to i32, !dbg !47
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %57, ptr addrspace(1) %56, i1 %11) #2, !dbg !47
  ret void, !dbg !48
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.f(float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py", directory: "inductor_cache/am")
!4 = !{ptr @triton_poi_fused_add_copy_div_mul_remainder_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_copy_div_mul_remainder_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_copy_div_mul_remainder_4", linkageName: "triton_poi_fused_add_copy_div_mul_remainder_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 38, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 43, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 35, scope: !7)
!25 = !DILocation(line: 30, column: 31, scope: !7)
!26 = !DILocation(line: 30, column: 49, scope: !7)
!27 = !DILocation(line: 31, column: 31, scope: !7)
!28 = !DILocation(line: 31, column: 36, scope: !7)
!29 = !DILocation(line: 32, column: 31, scope: !7)
!30 = !DILocation(line: 32, column: 36, scope: !7)
!31 = !DILocation(line: 35, column: 19, scope: !7)
!32 = !DILocation(line: 40, column: 18, scope: !7)
!33 = !DILocation(line: 42, column: 19, scope: !7)
!34 = !DILocation(line: 43, column: 19, scope: !7)
!35 = !DILocation(line: 46, column: 20, scope: !7)
!36 = !DILocation(line: 47, column: 21, scope: !7)
!37 = !DILocation(line: 48, column: 31, scope: !7)
!38 = !DILocation(line: 48, column: 41, scope: !7)
!39 = !DILocation(line: 51, column: 20, scope: !7)
!40 = !DILocation(line: 52, column: 20, scope: !7)
!41 = !DILocation(line: 53, column: 35, scope: !7)
!42 = !DILocation(line: 56, column: 20, scope: !7)
!43 = !DILocation(line: 57, column: 20, scope: !7)
!44 = !DILocation(line: 0, scope: !7)
!45 = !DILocation(line: 60, column: 34, scope: !7)
!46 = !DILocation(line: 61, column: 25, scope: !7)
!47 = !DILocation(line: 61, column: 37, scope: !7)
!48 = !DILocation(line: 61, column: 4, scope: !7)
