//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_copy_div_mul_remainder_4 // -- Begin function triton_poi_fused_add_copy_div_mul_remainder_4
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_copy_div_mul_remainder_4
.visible .entry triton_poi_fused_add_copy_div_mul_remainder_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_copy_div_mul_remainder_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_copy_div_mul_remainder_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_copy_div_mul_remainder_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_copy_div_mul_remainder_4_param_3,
	.param .u32 triton_poi_fused_add_copy_div_mul_remainder_4_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<30>;
	.reg .f32 	%f<16>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_add_copy_div_mul_remainder_4_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_add_copy_div_mul_remainder_4_param_1];
$L__tmp0:
	.loc	1 21 28                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:21:33
	shl.b32 	%r8, %r1, 7;
	ld.param.u64 	%rd9, [triton_poi_fused_add_copy_div_mul_remainder_4_param_2];
	ld.param.u64 	%rd10, [triton_poi_fused_add_copy_div_mul_remainder_4_param_3];
	.loc	1 22 36                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:22:36
	mov.u32 	%r9, %tid.x;
	and.b32  	%r10, %r9, 127;
	.loc	1 22 23                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:22:23
	or.b32  	%r11, %r8, %r10;
	.loc	1 23 21                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:23:21
	setp.lt.s32 	%p1, %r11, 192;
	.loc	1 24 21                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:24:21
	shr.s32 	%r13, %r11, 31;
	shr.u32 	%r14, %r13, 28;
	add.s32 	%r15, %r11, %r14;
	shr.s32 	%r16, %r15, 4;
	.loc	1 24 27                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:24:27
	mul.hi.s32 	%r17, %r16, 1431655766;
	shr.u32 	%r18, %r17, 31;
	add.s32 	%r19, %r17, %r18;
	mul.lo.s32 	%r20, %r19, 3;
	sub.s32 	%r21, %r16, %r20;
	.loc	1 25 19                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:25:19
	and.b32  	%r22, %r15, -16;
	sub.s32 	%r23, %r11, %r22;
	.loc	1 26 19                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:26:19
	mul.hi.s32 	%r24, %r11, 715827883;
	shr.u32 	%r25, %r24, 31;
	shr.s32 	%r26, %r24, 3;
	add.s32 	%r27, %r26, %r25;
	.loc	1 28 35                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:28:35
	mad.lo.s32 	%r28, %r27, 48, %r23;
	.loc	1 28 30                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:28:30
	mul.wide.s32 	%rd11, %r28, 4;
	add.s64 	%rd1, %rd7, %rd11;
	.loc	1 28 43                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:28:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 29 30                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:29:30
	mul.wide.s32 	%rd12, %r27, 4;
	add.s64 	%rd2, %rd8, %rd12;
	.loc	1 29 35                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:29:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 30 31                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:30:31
	add.s64 	%rd3, %rd1, 64;
	.loc	1 30 49                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:30:49
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	.loc	1 31 31                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:31:31
	add.s64 	%rd4, %rd9, %rd12;
	.loc	1 31 36                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:31:36
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r5;
	.loc	1 32 31                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:32:31
	mul.wide.s32 	%rd13, %r11, 4;
	add.s64 	%rd5, %rd7, %rd13;
	.loc	1 32 36                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:32:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	.loc	1 35 19                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:35:19
	setp.eq.s32 	%p7, %r21, 1;
	.loc	1 40 18                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:40:18
	mul.f32 	%f6, %f2, 0f437F0000;
	.loc	1 43 19                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:43:19
	fma.rn.f32 	%f7, %f6, 0f3B360B61, %f1;
	.loc	1 46 20                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:46:20
	cvt.rmi.ftz.f32.f32 	%f8, %f7;
	sub.f32 	%f9, %f7, %f8;
	.loc	1 47 21                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:47:21
	setp.neu.f32 	%p8, %f9, 0f00000000;
	.loc	1 48 31                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:48:31
	mov.b32 	%r29, %f9;
	.loc	1 48 41                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:48:41
	setp.lt.s32 	%p9, %r29, 0;
	.loc	1 52 20                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:52:20
	add.f32 	%f10, %f9, 0f3F800000;
	.loc	1 53 35                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:53:35
	selp.f32 	%f11, %f10, %f9, %p9;
	selp.f32 	%f12, %f11, %f9, %p8;
	.loc	1 56 20                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:56:20
	mul.f32 	%f13, %f3, %f4;
	.loc	1 57 20                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:57:20
	setp.eq.s32 	%p10, %r21, 0;
	.loc	1 0 0                           // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:0:0
	selp.f32 	%f14, %f12, %f5, %p10;
	.loc	1 60 34                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:60:34
	selp.f32 	%f15, %f13, %f14, %p7;
	.loc	1 61 25                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:61:25
	add.s64 	%rd6, %rd10, %rd13;
	.loc	1 61 37                         // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:61:37
	mov.b32 	%r7, %f15;
	// begin inline asm
	@%p1 st.global.b32 [ %rd6 + 0 ], { %r7 };
	// end inline asm
	.loc	1 61 4                          // camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py:61:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/am/camsnhk6isxhygljpapc73c7wlclfy6kluytyyrpzk6hnwgt33kt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 97
.b8 109
.b8 115
.b8 110
.b8 104
.b8 107
.b8 54
.b8 105
.b8 115
.b8 120
.b8 104
.b8 121
.b8 103
.b8 108
.b8 106
.b8 112
.b8 97
.b8 112
.b8 99
.b8 55
.b8 51
.b8 99
.b8 55
.b8 119
.b8 108
.b8 99
.b8 108
.b8 102
.b8 121
.b8 54
.b8 107
.b8 108
.b8 117
.b8 121
.b8 116
.b8 121
.b8 121
.b8 114
.b8 112
.b8 122
.b8 107
.b8 54
.b8 104
.b8 110
.b8 119
.b8 103
.b8 116
.b8 51
.b8 51
.b8 107
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 97
.b8 109
.b8 0
	}
	.section	.debug_macinfo	{	}
