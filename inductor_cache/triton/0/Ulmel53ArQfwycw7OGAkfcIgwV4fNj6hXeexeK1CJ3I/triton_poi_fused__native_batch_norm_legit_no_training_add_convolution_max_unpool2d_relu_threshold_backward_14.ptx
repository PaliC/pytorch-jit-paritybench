//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 104, 117, 47, 99, 104, 117, 51, 106, 114, 120, 102, 52, 97, 113, 52, 55, 113, 54, 99, 108, 110, 110, 52, 98, 52, 118, 99, 103, 118, 117, 121, 53, 55, 52, 122, 120, 108, 107, 51, 106, 110, 115, 53, 114, 97, 55, 105, 99, 118, 114, 109, 102, 117, 117, 111, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[40] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 50, 57, 32, 60, 32, 51, 50, 55, 54, 56};
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_9,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_10
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<34>;
	.reg .f32 	%f<18>;
	.reg .b64 	%rd<40>;
	.loc	1 19 0                          // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_0];
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_1];
$L__tmp0:
	.loc	1 21 28                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:21:28
	// begin inline asm
	mov.u32 %r7, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:21:33
	shl.b32 	%r18, %r7, 7;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_2];
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_3];
	.loc	1 22 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:22:36
	mov.u32 	%r19, %tid.x;
	and.b32  	%r20, %r19, 127;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_4];
	.loc	1 22 23                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:22:23
	or.b32  	%r21, %r18, %r20;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_5];
	.loc	1 25 21                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:25:21
	bfe.s32 	%r22, %r7, 24, 1;
	shr.u32 	%r23, %r22, 30;
	add.s32 	%r24, %r21, %r23;
	shr.s32 	%r25, %r24, 2;
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_6];
	.loc	1 25 26                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:25:26
	shr.s32 	%r26, %r24, 31;
	shr.u32 	%r27, %r26, 23;
	add.s32 	%r28, %r25, %r27;
	and.b32  	%r29, %r28, -512;
	sub.s32 	%r30, %r25, %r29;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_7];
	.loc	1 26 34                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:26:34
	mul.wide.s32 	%rd23, %r21, 4;
	add.s64 	%rd6, %rd15, %rd23;
	mov.pred 	%p8, -1;
	.loc	1 26 39                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:26:39
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p8 ld.global.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 27 30                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:27:30
	mul.wide.s32 	%rd24, %r30, 4;
	add.s64 	%rd7, %rd16, %rd24;
	.loc	1 27 35                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:27:35
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 28 30                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:28:30
	add.s64 	%rd8, %rd17, %rd24;
	.loc	1 28 35                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:28:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 29 30                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:29:30
	add.s64 	%rd9, %rd18, %rd24;
	.loc	1 29 35                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:29:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r11 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 30 31                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:30:31
	add.s64 	%rd10, %rd19, %rd24;
	.loc	1 30 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:30:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r12 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 31 31                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:31:31
	add.s64 	%rd11, %rd20, %rd24;
	.loc	1 31 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:31:36
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r13 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 32 31                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:32:31
	add.s64 	%rd12, %rd21, %rd23;
	.loc	1 32 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:32:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p8 ld.global.b32 { %r14 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 33 31                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:33:31
	mul.wide.s32 	%rd25, %r21, 8;
	add.s64 	%rd14, %rd22, %rd25;
	.loc	1 33 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:33:36
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p8 ld.global.b64 { %rd13 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 50 16                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:50:16
	shl.b32 	%r31, %r25, 4;
	.loc	1 51 20                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:51:20
	cvt.s64.s32 	%rd26, %r31;
	add.s64 	%rd27, %rd13, %rd26;
	.loc	1 55 35                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:55:35
	shr.u64 	%rd28, %rd27, 48;
	and.b64  	%rd29, %rd28, 32768;
	add.s64 	%rd3, %rd29, %rd27;
	.loc	1 56 37                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:56:37
	setp.lt.u64 	%p9, %rd3, 32768;
	.loc	1 56 53                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:56:53
	@%p9 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 53                          // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:0:53
	ld.param.u64 	%rd5, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_9];
	ld.param.u64 	%rd4, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_8];
	cvt.s64.s32 	%rd1, %r21;
	mov.b32 	%f2, %r11;
	add.f32 	%f3, %f2, 0f3727C5AC;
	sqrt.approx.ftz.f32 	%f4, %f3;
	mov.b32 	%r17, %f4;
	mov.b32 	%r16, 1065353216;
	// begin inline asm
	div.full.f32 %r15, %r16, %r17;
	// end inline asm
	mov.b32 	%f1, %r15;
	.loc	1 26 39                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:26:39
	mov.b32 	%f5, %r8;
	.loc	1 27 35                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:27:35
	mov.b32 	%f6, %r9;
	.loc	1 34 18                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:34:18
	add.f32 	%f7, %f5, %f6;
	.loc	1 28 35                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:28:35
	mov.b32 	%f8, %r10;
	.loc	1 35 18                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:35:18
	sub.f32 	%f9, %f7, %f8;
	.loc	1 43 19                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:43:19
	mul.f32 	%f10, %f9, %f1;
	.loc	1 30 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:30:36
	mov.b32 	%f11, %r12;
	.loc	1 31 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:31:36
	mov.b32 	%f12, %r13;
	.loc	1 45 20                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:45:20
	fma.rn.f32 	%f13, %f10, %f11, %f12;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p13, %f13, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f14, 0f00000000, %f13, %p13;
$L__tmp2:
	.loc	1 32 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:32:36
	mov.b32 	%f15, %r14;
	.loc	1 48 20                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:48:20
	add.f32 	%f16, %f14, %f15;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p14, %f16, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f17, 0f00000000, %f16, %p14;
$L__tmp4:
	.loc	1 56 53                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:56:53
	bar.sync 	0;
	.loc	1 58 21                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:58:21
	setp.le.f32 	%p15, %f17, 0f00000000;
	.loc	1 59 39                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:59:39
	mov.b32 	%r32, %f7;
	// begin inline asm
	@%p8 st.global.b32 [ %rd6 + 0 ], { %r32 };
	// end inline asm
	.loc	1 60 25                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:60:25
	shl.b64 	%rd33, %rd3, 2;
	add.s64 	%rd31, %rd4, %rd33;
	.loc	1 60 67                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:60:67
	mov.b32 	%r33, %f17;
	// begin inline asm
	@%p8 st.global.b32 [ %rd31 + 0 ], { %r33 };
	// end inline asm
	.loc	1 61 25                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:61:25
	add.s64 	%rd32, %rd5, %rd1;
	.loc	1 61 37                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:61:37
	selp.u16 	%rs1, 1, 0, %p15;
	// begin inline asm
	@%p8 st.global.b8 [ %rd32 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 61 4                          // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:61:4
	ret;
$L__BB0_1:
	.loc	1 56 53                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:56:53
	mov.u64 	%rd34, assertMessage_0;
	cvta.global.u64 	%rd35, %rd34;
	mov.u64 	%rd36, assertFile_0;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, assertFunc_0;
	cvta.global.u64 	%rd39, %rd38;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd35;
	.param .b64 param1;
	st.param.b64 	[param1], %rd37;
	.param .b32 param2;
	st.param.b32 	[param2], 56;
	.param .b64 param3;
	st.param.b64 	[param3], %rd39;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hu/chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 278                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x10f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 51
.b8 106
.b8 114
.b8 120
.b8 102
.b8 52
.b8 97
.b8 113
.b8 52
.b8 55
.b8 113
.b8 54
.b8 99
.b8 108
.b8 110
.b8 110
.b8 52
.b8 98
.b8 52
.b8 118
.b8 99
.b8 103
.b8 118
.b8 117
.b8 121
.b8 53
.b8 55
.b8 52
.b8 122
.b8 120
.b8 108
.b8 107
.b8 51
.b8 106
.b8 110
.b8 115
.b8 53
.b8 114
.b8 97
.b8 55
.b8 105
.b8 99
.b8 118
.b8 114
.b8 109
.b8 102
.b8 117
.b8 117
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 117
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x70 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 97
.b8 120
.b8 95
.b8 117
.b8 110
.b8 112
.b8 111
.b8 111
.b8 108
.b8 50
.b8 100
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 49
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xd3:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xe8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x100:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
