; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__softmax_mul_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = icmp slt i32 %12, 256, !dbg !14
  %15 = srem i32 %12, 4, !dbg !15
  %16 = srem i32 %13, 4, !dbg !15
  %17 = sdiv i32 %12, 64, !dbg !16
  %18 = shl nsw i32 %15, 2, !dbg !17
  %19 = shl nsw i32 %16, 2, !dbg !17
  %20 = shl nsw i32 %17, 4, !dbg !18
  %21 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !19
  %22 = shufflevector <2 x i32> %21, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !19
  %23 = sdiv <2 x i32> %22, <i32 16, i32 4>, !dbg !19
  %24 = srem <2 x i32> %23, splat (i32 4), !dbg !20
  %25 = extractelement <2 x i32> %23, i64 1, !dbg !21
  %26 = sext i32 %25 to i64, !dbg !21
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !21
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %14) #1, !dbg !22
  %29 = bitcast i32 %28 to float, !dbg !22
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %14) #1, !dbg !22
  %31 = bitcast i32 %30 to float, !dbg !22
  %32 = extractelement <2 x i32> %24, i64 1, !dbg !23
  %33 = add nsw i32 %20, %32, !dbg !23
  %34 = add nsw i32 %33, %18, !dbg !24
  %35 = add nsw i32 %33, %19, !dbg !24
  %36 = sext i32 %34 to i64, !dbg !25
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !25
  %38 = sext i32 %35 to i64, !dbg !25
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !25
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %14) #1, !dbg !26
  %41 = bitcast i32 %40 to float, !dbg !26
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %14) #1, !dbg !26
  %43 = bitcast i32 %42 to float, !dbg !26
  %44 = getelementptr float, ptr addrspace(1) %2, i64 %26, !dbg !27
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %14) #1, !dbg !28
  %46 = bitcast i32 %45 to float, !dbg !28
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %14) #1, !dbg !28
  %48 = bitcast i32 %47 to float, !dbg !28
  %49 = getelementptr float, ptr addrspace(1) %3, i64 %26, !dbg !29
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %14) #1, !dbg !30
  %51 = bitcast i32 %50 to float, !dbg !30
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %14) #1, !dbg !30
  %53 = bitcast i32 %52 to float, !dbg !30
  %54 = fmul float %29, %41, !dbg !31
  %55 = fmul float %31, %43, !dbg !31
  %56 = fsub float %54, %46, !dbg !32
  %57 = fsub float %55, %48, !dbg !32
  %58 = fmul float %56, 0x3FF7154760000000, !dbg !33
  %59 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %58) #1, !dbg !33
  %60 = fmul float %57, 0x3FF7154760000000, !dbg !33
  %61 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %60) #1, !dbg !33
  %62 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %59, float %51) #1, !dbg !34
  %63 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %61, float %53) #1, !dbg !34
  %64 = shl nsw <2 x i32> %24, <i32 2, i32 4>, !dbg !35
  %65 = shl nsw i32 %17, 6, !dbg !36
  %66 = add i32 %65, %15, !dbg !37
  %67 = extractelement <2 x i32> %64, i64 0, !dbg !38
  %68 = add i32 %66, %67, !dbg !38
  %69 = extractelement <2 x i32> %64, i64 1, !dbg !39
  %70 = add i32 %68, %69, !dbg !39
  %71 = sext i32 %70 to i64, !dbg !40
  %72 = getelementptr float, ptr addrspace(1) %4, i64 %71, !dbg !40
  %73 = bitcast float %62 to i32, !dbg !41
  %74 = bitcast float %63 to i32, !dbg !41
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %73, i32 %74, ptr addrspace(1) %72, i1 %14) #1, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7zc5hnzil4sl2hiwuenq3joxrigjtmjidyxps5x457ydn3oelbn.py", directory: "inductor_cache/7z")
!4 = !{ptr @triton_poi_fused__softmax_mul_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax_mul_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax_mul_1", linkageName: "triton_poi_fused__softmax_mul_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 19, scope: !7)
!17 = !DILocation(line: 30, column: 37, scope: !7)
!18 = !DILocation(line: 30, column: 45, scope: !7)
!19 = !DILocation(line: 28, column: 21, scope: !7)
!20 = !DILocation(line: 28, column: 27, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 35, scope: !7)
!23 = !DILocation(line: 30, column: 35, scope: !7)
!24 = !DILocation(line: 30, column: 42, scope: !7)
!25 = !DILocation(line: 30, column: 30, scope: !7)
!26 = !DILocation(line: 30, column: 50, scope: !7)
!27 = !DILocation(line: 31, column: 30, scope: !7)
!28 = !DILocation(line: 31, column: 35, scope: !7)
!29 = !DILocation(line: 32, column: 30, scope: !7)
!30 = !DILocation(line: 32, column: 35, scope: !7)
!31 = !DILocation(line: 33, column: 18, scope: !7)
!32 = !DILocation(line: 36, column: 18, scope: !7)
!33 = !DILocation(line: 37, column: 23, scope: !7)
!34 = !DILocation(line: 38, column: 18, scope: !7)
!35 = !DILocation(line: 39, column: 32, scope: !7)
!36 = !DILocation(line: 39, column: 48, scope: !7)
!37 = !DILocation(line: 39, column: 30, scope: !7)
!38 = !DILocation(line: 39, column: 37, scope: !7)
!39 = !DILocation(line: 39, column: 45, scope: !7)
!40 = !DILocation(line: 39, column: 25, scope: !7)
!41 = !DILocation(line: 39, column: 59, scope: !7)
!42 = !DILocation(line: 39, column: 4, scope: !7)
