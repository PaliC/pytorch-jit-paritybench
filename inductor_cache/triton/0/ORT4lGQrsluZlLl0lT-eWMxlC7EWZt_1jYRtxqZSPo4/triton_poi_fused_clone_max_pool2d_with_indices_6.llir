; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_clone_max_pool2d_with_indices_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 510, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %12 = sdiv i32 %.frozen, 16, !dbg !14
  %13 = mul i32 %12, 16, !dbg !15
  %.decomposed = sub i32 %.frozen, %13, !dbg !15
  %14 = srem i32 %11, 16, !dbg !15
  %15 = sdiv i32 %10, 131072, !dbg !16
  %16 = srem i32 %10, 256, !dbg !17
  %17 = shl nsw i32 %.decomposed, 1, !dbg !18
  %18 = shl nsw i32 %14, 1, !dbg !18
  %19 = shl i32 %12, 6, !dbg !19
  %20 = add i32 %17, %19, !dbg !20
  %21 = add i32 %19, %18, !dbg !20
  %22 = sext i32 %20 to i64, !dbg !21
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !21
  %24 = sext i32 %21 to i64, !dbg !21
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !21
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #1, !dbg !22
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #1, !dbg !22
  %28 = or disjoint i32 %20, 1, !dbg !23
  %29 = or disjoint i32 %21, 1, !dbg !23
  %30 = sext i32 %28 to i64, !dbg !24
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !24
  %32 = sext i32 %29 to i64, !dbg !24
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !24
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !25
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #1, !dbg !25
  %36 = add i32 %20, 32, !dbg !26
  %37 = add i32 %21, 32, !dbg !26
  %38 = sext i32 %36 to i64, !dbg !27
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !27
  %40 = sext i32 %37 to i64, !dbg !27
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !27
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 true) #1, !dbg !28
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 true) #1, !dbg !28
  %44 = add i32 %20, 33, !dbg !29
  %45 = add i32 %21, 33, !dbg !29
  %46 = sext i32 %44 to i64, !dbg !30
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !30
  %48 = sext i32 %45 to i64, !dbg !30
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !30
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #1, !dbg !31
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 true) #1, !dbg !31
  %52 = insertelement <2 x i32> poison, i32 %26, i64 0, !dbg !22
  %53 = insertelement <2 x i32> %52, i32 %27, i64 1, !dbg !22
  %54 = bitcast <2 x i32> %53 to <2 x float>, !dbg !22
  %55 = insertelement <2 x i32> poison, i32 %34, i64 0, !dbg !25
  %56 = insertelement <2 x i32> %55, i32 %35, i64 1, !dbg !25
  %57 = bitcast <2 x i32> %56 to <2 x float>, !dbg !25
  %58 = insertelement <2 x i32> poison, i32 %42, i64 0, !dbg !28
  %59 = insertelement <2 x i32> %58, i32 %43, i64 1, !dbg !28
  %60 = bitcast <2 x i32> %59 to <2 x float>, !dbg !28
  %61 = insertelement <2 x i32> poison, i32 %50, i64 0, !dbg !31
  %62 = insertelement <2 x i32> %61, i32 %51, i64 1, !dbg !31
  %63 = bitcast <2 x i32> %62 to <2 x float>, !dbg !31
  %64 = fcmp ogt <2 x float> %57, %54, !dbg !32
  %65 = zext <2 x i1> %64 to <2 x i8>, !dbg !33
  %66 = fcmp uno <2 x float> %57, zeroinitializer, !dbg !34
  %67 = or <2 x i1> %64, %66, !dbg !38
  %.v = select <2 x i1> %67, <2 x i32> %56, <2 x i32> %53, !dbg !39
  %68 = bitcast <2 x i32> %.v to <2 x float>, !dbg !39
  %69 = fcmp olt <2 x float> %68, %60, !dbg !40
  %70 = select <2 x i1> %69, <2 x i8> splat (i8 2), <2 x i8> %65, !dbg !41
  %71 = fcmp uno <2 x float> %60, zeroinitializer, !dbg !42
  %72 = or <2 x i1> %71, %69, !dbg !44
  %.v1 = select <2 x i1> %72, <2 x i32> %59, <2 x i32> %.v, !dbg !45
  %73 = bitcast <2 x i32> %.v1 to <2 x float>, !dbg !45
  %74 = fcmp olt <2 x float> %73, %63, !dbg !46
  %75 = select <2 x i1> %74, <2 x i8> splat (i8 3), <2 x i8> %70, !dbg !47
  %76 = bitcast i32 %50 to float, !dbg !48
  %77 = fcmp uno float %76, 0.000000e+00, !dbg !48
  %78 = bitcast i32 %51 to float, !dbg !48
  %79 = fcmp uno float %78, 0.000000e+00, !dbg !48
  %80 = extractelement <2 x i1> %74, i64 0, !dbg !50
  %81 = or i1 %77, %80, !dbg !50
  %82 = extractelement <2 x i1> %74, i64 1, !dbg !50
  %83 = or i1 %79, %82, !dbg !50
  %84 = sext i32 %10 to i64, !dbg !51
  %85 = getelementptr i8, ptr addrspace(1) %1, i64 %84, !dbg !51
  %86 = bitcast <2 x i8> %75 to i16, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %86, ptr addrspace(1) %85, i1 true) #1, !dbg !52
  %87 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !53
  %88 = shufflevector <2 x i32> %87, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !53
  %89 = sdiv <2 x i32> %88, <i32 32768, i32 256>, !dbg !53
  %90 = srem <2 x i32> %89, <i32 4, i32 128>, !dbg !54
  %91 = shl nsw <2 x i32> %90, <i32 8, i32 10>, !dbg !55
  %92 = shl nsw i32 %15, 17, !dbg !56
  %93 = add i32 %92, %16, !dbg !57
  %94 = extractelement <2 x i32> %91, i64 0, !dbg !58
  %95 = add i32 %93, %94, !dbg !58
  %96 = extractelement <2 x i32> %91, i64 1, !dbg !59
  %97 = add i32 %95, %96, !dbg !59
  %98 = sext i32 %97 to i64, !dbg !60
  %99 = getelementptr float, ptr addrspace(1) %2, i64 %98, !dbg !60
  %100 = extractelement <2 x i32> %.v1, i64 0, !dbg !61
  %101 = select i1 %81, i32 %50, i32 %100, !dbg !62
  %102 = extractelement <2 x i32> %.v1, i64 1, !dbg !61
  %103 = select i1 %83, i32 %51, i32 %102, !dbg !62
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %101, i32 %103, ptr addrspace(1) %99, i1 true) #1, !dbg !61
  ret void, !dbg !63
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjegibhayo4mapemtzz4darmhvkpccjgmhy6meizvc4yhvroig7v.py", directory: "inductor_cache/je")
!4 = !{ptr @triton_poi_fused_clone_max_pool2d_with_indices_6, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_max_pool2d_with_indices_6, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_max_pool2d_with_indices_6", linkageName: "triton_poi_fused_clone_max_pool2d_with_indices_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 29, column: 19, scope: !7)
!17 = !DILocation(line: 30, column: 19, scope: !7)
!18 = !DILocation(line: 31, column: 32, scope: !7)
!19 = !DILocation(line: 31, column: 40, scope: !7)
!20 = !DILocation(line: 31, column: 37, scope: !7)
!21 = !DILocation(line: 31, column: 30, scope: !7)
!22 = !DILocation(line: 31, column: 45, scope: !7)
!23 = !DILocation(line: 32, column: 41, scope: !7)
!24 = !DILocation(line: 32, column: 30, scope: !7)
!25 = !DILocation(line: 32, column: 49, scope: !7)
!26 = !DILocation(line: 33, column: 42, scope: !7)
!27 = !DILocation(line: 33, column: 30, scope: !7)
!28 = !DILocation(line: 33, column: 50, scope: !7)
!29 = !DILocation(line: 34, column: 43, scope: !7)
!30 = !DILocation(line: 34, column: 31, scope: !7)
!31 = !DILocation(line: 34, column: 51, scope: !7)
!32 = !DILocation(line: 35, column: 18, scope: !7)
!33 = !DILocation(line: 38, column: 32, scope: !7)
!34 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !37)
!35 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!36 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!37 = !DILocation(line: 39, column: 40, scope: !7)
!38 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !37)
!39 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !37)
!40 = !DILocation(line: 40, column: 18, scope: !7)
!41 = !DILocation(line: 42, column: 33, scope: !7)
!42 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !43)
!43 = !DILocation(line: 43, column: 41, scope: !7)
!44 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !43)
!45 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !43)
!46 = !DILocation(line: 44, column: 20, scope: !7)
!47 = !DILocation(line: 46, column: 35, scope: !7)
!48 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !49)
!49 = !DILocation(line: 47, column: 42, scope: !7)
!50 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !49)
!51 = !DILocation(line: 48, column: 25, scope: !7)
!52 = !DILocation(line: 48, column: 37, scope: !7)
!53 = !DILocation(line: 28, column: 21, scope: !7)
!54 = !DILocation(line: 28, column: 30, scope: !7)
!55 = !DILocation(line: 49, column: 34, scope: !7)
!56 = !DILocation(line: 49, column: 56, scope: !7)
!57 = !DILocation(line: 49, column: 30, scope: !7)
!58 = !DILocation(line: 49, column: 39, scope: !7)
!59 = !DILocation(line: 49, column: 49, scope: !7)
!60 = !DILocation(line: 49, column: 25, scope: !7)
!61 = !DILocation(line: 49, column: 68, scope: !7)
!62 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !49)
!63 = !DILocation(line: 49, column: 4, scope: !7)
