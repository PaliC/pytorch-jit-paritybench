#loc = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":19:0)
module {
  tt.func public @triton_poi_fused__softmax_10(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<6144> : tensor<256xi32> loc(#loc1)
    %cst_0 = arith.constant dense<4096> : tensor<256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<2048> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_1 : tensor<256xi32> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc7)
    %7 = tt.addptr %6, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc7)
    %8 = tt.load %7 : tensor<256x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %6, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc9)
    %10 = tt.load %9 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc10)
    %11 = arith.addi %5, %cst_1 : tensor<256xi32> loc(#loc11)
    %12 = tt.addptr %6, %11 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc12)
    %13 = tt.load %12 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc13)
    %14 = arith.addi %5, %cst_0 : tensor<256xi32> loc(#loc14)
    %15 = tt.addptr %6, %14 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc15)
    %16 = tt.load %15 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc16)
    %17 = arith.addi %5, %cst : tensor<256xi32> loc(#loc17)
    %18 = tt.addptr %6, %17 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc18)
    %19 = tt.load %18 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc19)
    %20 = arith.addf %10, %13 : tensor<256xf32> loc(#loc20)
    %21 = arith.addf %20, %16 : tensor<256xf32> loc(#loc21)
    %22 = arith.addf %21, %19 : tensor<256xf32> loc(#loc22)
    %23 = arith.divf %8, %22 : tensor<256xf32> loc(#loc23)
    %24 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc24)
    %25 = tt.addptr %24, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc24)
    tt.store %25, %23 : tensor<256x!tt.ptr<f32>> loc(#loc25)
    tt.return loc(#loc26)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":21:28)
#loc3 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":21:33)
#loc4 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":22:36)
#loc5 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":22:23)
#loc6 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":25:19)
#loc7 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":26:30)
#loc8 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":26:35)
#loc9 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":27:30)
#loc10 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":27:35)
#loc11 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":28:37)
#loc12 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":28:30)
#loc13 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":28:42)
#loc14 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":29:37)
#loc15 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":29:30)
#loc16 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":29:42)
#loc17 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":30:37)
#loc18 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":30:30)
#loc19 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":30:42)
#loc20 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":31:18)
#loc21 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":32:18)
#loc22 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":33:18)
#loc23 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":34:18)
#loc24 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":35:25)
#loc25 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":35:36)
#loc26 = loc("inductor_cache/y5/cy5a5jma7ncj6p3vi7qmkxrxv5mi3523rlcv32k6y3iwzkt5zv5t.py":35:4)
