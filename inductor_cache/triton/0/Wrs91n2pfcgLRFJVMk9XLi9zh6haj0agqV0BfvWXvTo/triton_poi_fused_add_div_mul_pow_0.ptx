//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_div_mul_pow_0 // -- Begin function triton_poi_fused_add_div_mul_pow_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_div_mul_pow_0
.visible .entry triton_poi_fused_add_div_mul_pow_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_pow_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_pow_0_param_1,
	.param .u32 triton_poi_fused_add_div_mul_pow_0_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b32 	%r<36>;
	.reg .f32 	%f<192>;
	.reg .b64 	%rd<8>;
	.loc	1 19 0                          // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_add_div_mul_pow_0_param_0];
$L__tmp0:
	.loc	1 21 28                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:21:28
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:21:33
	shl.b32 	%r6, %r3, 8;
	.loc	1 22 36                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:22:36
	mov.u32 	%r7, %tid.x;
	shl.b32 	%r8, %r7, 1;
	and.b32  	%r9, %r8, 254;
	.loc	1 22 23                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:22:23
	or.b32  	%r10, %r6, %r9;
	.loc	1 23 21                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:23:21
	setp.lt.s32 	%p1, %r10, 256;
	.loc	1 25 30                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:25:30
	mul.wide.s32 	%rd5, %r10, 4;
	add.s64 	%rd3, %rd4, %rd5;
	.loc	1 25 35                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:25:35
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	@%p1 ld.global.v2.b32 { %r34, %r35 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r34;
	mov.b32 	%f2, %r35;
	.loc	1 30 18                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:30:18
	fma.rn.f32 	%f3, %f1, %f1, 0f3F800000;
	mov.f32 	%f33, 0f3EC00000;
	.loc	1 32 31                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:32:31
	cvt.rzi.f32.f32 	%f34, %f33;
	fma.rn.f32 	%f35, %f34, 0fC0000000, 0f3F400000;
	abs.ftz.f32 	%f5, %f35;
	abs.ftz.f32 	%f6, %f3;
	mov.b32 	%r11, %f6;
	and.b32  	%r12, %r11, 8388607;
	or.b32  	%r13, %r12, 1065353216;
	mov.b32 	%f36, %r13;
	shr.u32 	%r14, %r11, 23;
	cvt.rn.f32.u32 	%f37, %r14;
	add.f32 	%f38, %f37, 0fC2FE0000;
	setp.gt.f32 	%p2, %f36, 0f3FB504F3;
	mul.f32 	%f39, %f36, 0f3F000000;
	add.f32 	%f40, %f38, 0f3F800000;
	selp.f32 	%f41, %f40, %f38, %p2;
	selp.f32 	%f42, %f39, %f36, %p2;
	add.f32 	%f43, %f42, 0fBF800000;
	add.f32 	%f31, %f42, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f30,%f31;
	// end inline asm
	add.f32 	%f44, %f43, %f43;
	mul.f32 	%f45, %f30, %f44;
	mul.f32 	%f46, %f45, %f45;
	mov.f32 	%f47, 0f3C4CAF63;
	mov.f32 	%f48, 0f3B18F0FE;
	fma.rn.ftz.f32 	%f49, %f48, %f46, %f47;
	mov.f32 	%f50, 0f3DAAAABD;
	fma.rn.ftz.f32 	%f51, %f49, %f46, %f50;
	mul.rn.ftz.f32 	%f52, %f51, %f46;
	mul.rn.ftz.f32 	%f53, %f52, %f45;
	neg.f32 	%f54, %f30;
	fma.rn.f32 	%f55, %f54, %f44, %f43;
	add.f32 	%f56, %f55, %f55;
	neg.f32 	%f57, %f45;
	fma.rn.ftz.f32 	%f58, %f57, %f43, %f56;
	mul.rn.ftz.f32 	%f59, %f30, %f58;
	fma.rn.f32 	%f60, %f30, %f44, %f53;
	neg.f32 	%f61, %f60;
	fma.rn.f32 	%f62, %f30, %f44, %f61;
	add.f32 	%f63, %f53, %f62;
	add.f32 	%f64, %f59, %f63;
	add.f32 	%f65, %f60, %f64;
	sub.f32 	%f66, %f60, %f65;
	add.f32 	%f67, %f64, %f66;
	mov.f32 	%f68, 0f3F317200;
	mul.rn.ftz.f32 	%f69, %f41, %f68;
	mov.f32 	%f70, 0f35BFBE8E;
	mul.rn.ftz.f32 	%f71, %f41, %f70;
	add.f32 	%f72, %f69, %f65;
	sub.f32 	%f73, %f69, %f72;
	add.f32 	%f74, %f65, %f73;
	add.f32 	%f75, %f67, %f74;
	add.f32 	%f76, %f71, %f75;
	add.f32 	%f77, %f72, %f76;
	sub.f32 	%f78, %f72, %f77;
	add.f32 	%f79, %f76, %f78;
	mov.f32 	%f80, 0f3F400000;
	abs.ftz.f32 	%f7, %f80;
	setp.gt.f32 	%p3, %f7, 0f77F684DF;
	selp.f32 	%f8, 0f38C00000, 0f3F400000, %p3;
	mul.rn.ftz.f32 	%f9, %f8, %f77;
	neg.f32 	%f81, %f9;
	fma.rn.ftz.f32 	%f82, %f8, %f77, %f81;
	fma.rn.ftz.f32 	%f83, %f8, %f79, %f82;
	mov.f32 	%f84, 0f00000000;
	fma.rn.ftz.f32 	%f10, %f84, %f77, %f83;
	add.rn.ftz.f32 	%f11, %f9, %f10;
	mov.b32 	%r1, %f11;
	setp.eq.s32 	%p4, %r1, 1118925336;
	selp.f32 	%f85, 0f42B17217, %f11, %p4;
	mov.f32 	%f86, 0f3FB8AA3B;
	mul.rn.ftz.f32 	%f87, %f85, %f86;
	cvt.rzi.f32.f32 	%f88, %f87;
	abs.ftz.f32 	%f89, %f88;
	setp.gt.f32 	%p5, %f89, 0f42FC0000;
	mov.f32 	%f90, 0f42FC0000;
	copysign.f32 	%f91, %f88, %f90;
	selp.f32 	%f92, %f91, %f88, %p5;
	mov.f32 	%f93, 0fBF317218;
	fma.rn.ftz.f32 	%f94, %f92, %f93, %f85;
	mov.f32 	%f95, 0f3102E308;
	fma.rn.ftz.f32 	%f96, %f92, %f95, %f94;
	mul.f32 	%f97, %f96, 0f3FB8AA3B;
	add.f32 	%f98, %f92, 0f4B40007F;
	mov.b32 	%r15, %f98;
	shl.b32 	%r16, %r15, 23;
	mov.b32 	%f99, %r16;
	ex2.approx.ftz.f32 	%f100, %f97;
	mul.f32 	%f12, %f100, %f99;
	setp.eq.f32 	%p6, %f12, 0f7F800000;
	mov.f32 	%f188, 0f7F800000;
	@%p6 bra 	$L__BB0_2;
// %bb.1:                               // %__internal_fmad.exit.i.i
	neg.f32 	%f101, %f11;
	add.rn.ftz.f32 	%f102, %f9, %f101;
	add.rn.ftz.f32 	%f103, %f102, %f10;
	add.f32 	%f104, %f103, 0f37000000;
	selp.f32 	%f105, %f104, %f103, %p4;
	fma.rn.ftz.f32 	%f188, %f12, %f105, %f12;
$L__BB0_2:                              // %__internal_accurate_powf.exit.i
	.loc	1 0 0                           // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:0:0
	fma.rn.f32 	%f4, %f2, %f2, 0f3F800000;
	.loc	1 32 31                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:32:31
	setp.eq.f32 	%p8, %f5, 0f3F800000;
	setp.eq.f32 	%p9, %f3, 0f00000000;
	add.f32 	%f106, %f3, %f3;
	selp.f32 	%f107, %f106, 0f00000000, %p8;
	selp.f32 	%f189, %f107, %f188, %p9;
	add.f32 	%f108, %f6, %f7;
	mov.b32 	%r17, %f108;
	setp.lt.s32 	%p10, %r17, 2139095040;
	@%p10 bra 	$L__BB0_10;
// %bb.3:                               // %__nv_isnanf.exit.i.i
	setp.nan.f32 	%p11, %f6, %f6;
	@%p11 bra 	$L__BB0_5;
// %bb.4:                               // %__nv_isnanf.exit11.i.i
	setp.num.f32 	%p12, %f7, %f7;
	@%p12 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_5;
$L__BB0_6:                              // %__nv_isinff.exit8.i.i
	setp.neu.f32 	%p13, %f7, 0f7F800000;
	@%p13 bra 	$L__BB0_8;
// %bb.7:                               // %__nv_fabsf.exit5.i.i
	setp.gt.f32 	%p15, %f6, 0f3F800000;
	selp.f32 	%f189, 0f7F800000, 0f00000000, %p15;
	bra.uni 	$L__BB0_10;
$L__BB0_8:                              // %__nv_isinff.exit.i.i
	setp.neu.f32 	%p14, %f6, 0f7F800000;
	@%p14 bra 	$L__BB0_10;
// %bb.9:
	.loc	1 0 31                          // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:0:31
	mov.f32 	%f189, 0f7F800000;
$L__BB0_10:                             // %__nv_powf.exit
	.loc	1 32 31                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:32:31
	abs.ftz.f32 	%f19, %f4;
	mov.b32 	%r18, %f19;
	and.b32  	%r19, %r18, 8388607;
	or.b32  	%r20, %r19, 1065353216;
	mov.b32 	%f113, %r20;
	shr.u32 	%r21, %r18, 23;
	cvt.rn.f32.u32 	%f114, %r21;
	add.f32 	%f115, %f114, 0fC2FE0000;
	setp.gt.f32 	%p16, %f113, 0f3FB504F3;
	mul.f32 	%f116, %f113, 0f3F000000;
	add.f32 	%f117, %f115, 0f3F800000;
	selp.f32 	%f118, %f117, %f115, %p16;
	selp.f32 	%f119, %f116, %f113, %p16;
	add.f32 	%f120, %f119, 0fBF800000;
	add.f32 	%f111, %f119, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f110,%f111;
	// end inline asm
	add.f32 	%f121, %f120, %f120;
	mul.f32 	%f122, %f110, %f121;
	mul.f32 	%f123, %f122, %f122;
	fma.rn.ftz.f32 	%f126, %f48, %f123, %f47;
	fma.rn.ftz.f32 	%f128, %f126, %f123, %f50;
	mul.rn.ftz.f32 	%f129, %f128, %f123;
	mul.rn.ftz.f32 	%f130, %f129, %f122;
	neg.f32 	%f131, %f110;
	fma.rn.f32 	%f132, %f131, %f121, %f120;
	add.f32 	%f133, %f132, %f132;
	neg.f32 	%f134, %f122;
	fma.rn.ftz.f32 	%f135, %f134, %f120, %f133;
	mul.rn.ftz.f32 	%f136, %f110, %f135;
	fma.rn.f32 	%f137, %f110, %f121, %f130;
	neg.f32 	%f138, %f137;
	fma.rn.f32 	%f139, %f110, %f121, %f138;
	add.f32 	%f140, %f130, %f139;
	add.f32 	%f141, %f136, %f140;
	add.f32 	%f142, %f137, %f141;
	sub.f32 	%f143, %f137, %f142;
	add.f32 	%f144, %f141, %f143;
	mul.rn.ftz.f32 	%f146, %f118, %f68;
	mul.rn.ftz.f32 	%f148, %f118, %f70;
	add.f32 	%f149, %f146, %f142;
	sub.f32 	%f150, %f146, %f149;
	add.f32 	%f151, %f142, %f150;
	add.f32 	%f152, %f144, %f151;
	add.f32 	%f153, %f148, %f152;
	add.f32 	%f154, %f149, %f153;
	sub.f32 	%f155, %f149, %f154;
	add.f32 	%f156, %f153, %f155;
	mul.rn.ftz.f32 	%f20, %f8, %f154;
	neg.f32 	%f157, %f20;
	fma.rn.ftz.f32 	%f158, %f8, %f154, %f157;
	fma.rn.ftz.f32 	%f159, %f8, %f156, %f158;
	fma.rn.ftz.f32 	%f21, %f84, %f154, %f159;
	add.rn.ftz.f32 	%f22, %f20, %f21;
	mov.b32 	%r2, %f22;
	setp.eq.s32 	%p17, %r2, 1118925336;
	selp.f32 	%f161, 0f42B17217, %f22, %p17;
	mul.rn.ftz.f32 	%f163, %f161, %f86;
	cvt.rzi.f32.f32 	%f164, %f163;
	abs.ftz.f32 	%f165, %f164;
	setp.gt.f32 	%p18, %f165, 0f42FC0000;
	copysign.f32 	%f167, %f164, %f90;
	selp.f32 	%f168, %f167, %f164, %p18;
	fma.rn.ftz.f32 	%f170, %f168, %f93, %f161;
	fma.rn.ftz.f32 	%f172, %f168, %f95, %f170;
	mul.f32 	%f173, %f172, 0f3FB8AA3B;
	add.f32 	%f174, %f168, 0f4B40007F;
	mov.b32 	%r22, %f174;
	shl.b32 	%r23, %r22, 23;
	mov.b32 	%f175, %r23;
	ex2.approx.ftz.f32 	%f176, %f173;
	mul.f32 	%f23, %f176, %f175;
	setp.eq.f32 	%p19, %f23, 0f7F800000;
	mov.f32 	%f190, 0f7F800000;
	@%p19 bra 	$L__BB0_12;
// %bb.11:                              // %__internal_fmad.exit.i.i81
	neg.f32 	%f177, %f22;
	add.rn.ftz.f32 	%f178, %f20, %f177;
	add.rn.ftz.f32 	%f179, %f178, %f21;
	add.f32 	%f180, %f179, 0f37000000;
	selp.f32 	%f181, %f180, %f179, %p17;
	fma.rn.ftz.f32 	%f190, %f23, %f181, %f23;
$L__BB0_12:                             // %__internal_accurate_powf.exit.i56
	.loc	1 0 31                          // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:0:31
	ld.param.u64 	%rd2, [triton_poi_fused_add_div_mul_pow_0_param_1];
	cvt.s64.s32 	%rd1, %r10;
	.loc	1 32 31                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:32:31
	setp.eq.f32 	%p22, %f4, 0f00000000;
	add.f32 	%f182, %f4, %f4;
	selp.f32 	%f183, %f182, 0f00000000, %p8;
	selp.f32 	%f191, %f183, %f190, %p22;
	add.f32 	%f184, %f19, %f7;
	mov.b32 	%r24, %f184;
	setp.lt.s32 	%p23, %r24, 2139095040;
	@%p23 bra 	$L__BB0_20;
// %bb.13:                              // %__nv_isnanf.exit.i.i66
	setp.nan.f32 	%p24, %f19, %f19;
	@%p24 bra 	$L__BB0_15;
// %bb.14:                              // %__nv_isnanf.exit11.i.i69
	setp.num.f32 	%p25, %f7, %f7;
	@%p25 bra 	$L__BB0_16;
	bra.uni 	$L__BB0_15;
$L__BB0_16:                             // %__nv_isinff.exit8.i.i72
	setp.neu.f32 	%p26, %f7, 0f7F800000;
	@%p26 bra 	$L__BB0_18;
// %bb.17:                              // %__nv_fabsf.exit5.i.i78
	setp.gt.f32 	%p28, %f19, 0f3F800000;
	selp.f32 	%f191, 0f7F800000, 0f00000000, %p28;
	bra.uni 	$L__BB0_20;
$L__BB0_18:                             // %__nv_isinff.exit.i.i75
	setp.neu.f32 	%p27, %f19, 0f7F800000;
	@%p27 bra 	$L__BB0_20;
// %bb.19:
	.loc	1 0 31                          // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:0:31
	mov.f32 	%f191, 0f7F800000;
$L__BB0_20:                             // %__nv_powf.exit84
	cvt.u32.u64 	%r33, %rd1;
	.loc	1 23 21                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:23:21
	setp.lt.s32 	%p29, %r33, 256;
	.loc	1 32 31                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:32:31
	setp.eq.f32 	%p30, %f3, 0f3F800000;
	selp.f32 	%f186, 0f3F800000, %f189, %p30;
	setp.eq.f32 	%p31, %f4, 0f3F800000;
	selp.f32 	%f187, 0f3F800000, %f191, %p31;
	.loc	1 33 18                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:33:18
	mov.b32 	%r27, %f186;
	// begin inline asm
	div.full.f32 %r31, %r34, %r27;
	// end inline asm
	mov.b32 	%r30, %f187;
	// begin inline asm
	div.full.f32 %r32, %r35, %r30;
	// end inline asm
	.loc	1 34 25                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:34:25
	shl.b64 	%rd7, %rd1, 2;
	add.s64 	%rd6, %rd2, %rd7;
	.loc	1 34 36                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:34:36
	// begin inline asm
	@%p29 st.global.v2.b32 [ %rd6 + 0 ], { %r31, %r32 };
	// end inline asm
	.loc	1 34 4                          // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:34:4
	ret;
$L__BB0_5:
	.loc	1 32 31                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:32:31
	add.f32 	%f189, %f3, 0f3F400000;
	bra.uni 	$L__BB0_10;
$L__BB0_15:
	add.f32 	%f191, %f4, 0f3F400000;
	bra.uni 	$L__BB0_20;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/nm/cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 109
.b8 52
.b8 114
.b8 119
.b8 50
.b8 110
.b8 115
.b8 108
.b8 110
.b8 53
.b8 113
.b8 53
.b8 118
.b8 109
.b8 104
.b8 102
.b8 118
.b8 53
.b8 116
.b8 105
.b8 97
.b8 121
.b8 105
.b8 52
.b8 118
.b8 116
.b8 114
.b8 109
.b8 115
.b8 54
.b8 55
.b8 112
.b8 105
.b8 98
.b8 50
.b8 113
.b8 98
.b8 54
.b8 50
.b8 51
.b8 116
.b8 108
.b8 104
.b8 100
.b8 114
.b8 104
.b8 97
.b8 102
.b8 97
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 109
.b8 0
	}
	.section	.debug_macinfo	{	}
