; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_cat_39(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %12 = shl i32 %11, 10, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = shl i32 %13, 2, !dbg !12
  %15 = and i32 %14, 508, !dbg !12
  %16 = or disjoint i32 %12, %15, !dbg !13
  %17 = or disjoint i32 %16, 512, !dbg !13
  %.frozen = freeze i32 %16, !dbg !14
  %18 = sdiv i32 %.frozen, 256, !dbg !14
  %19 = mul i32 %18, 256, !dbg !15
  %.decomposed = sub i32 %.frozen, %19, !dbg !15
  %20 = sdiv i32 %17, 256, !dbg !14
  %21 = icmp slt i32 %.decomposed, 128, !dbg !16
  %22 = shl nsw i32 %18, 7, !dbg !17
  %23 = shl nsw i32 %20, 7, !dbg !17
  %24 = add nsw i32 %22, %.decomposed, !dbg !18
  %25 = add nsw i32 %23, %.decomposed, !dbg !18
  %26 = sext i32 %24 to i64, !dbg !19
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !19
  %28 = sext i32 %25 to i64, !dbg !19
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !19
  %30 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %27, i1 %21, i32 0, i1 %21, i32 0, i1 %21, i32 0, i1 %21, i32 0, i1 %21) #3, !dbg !20
  %31 = extractvalue { i32, i32, i32, i32 } %30, 0, !dbg !20
  %32 = extractvalue { i32, i32, i32, i32 } %30, 1, !dbg !20
  %33 = extractvalue { i32, i32, i32, i32 } %30, 2, !dbg !20
  %34 = extractvalue { i32, i32, i32, i32 } %30, 3, !dbg !20
  %35 = bitcast i32 %31 to float, !dbg !20
  %36 = bitcast i32 %32 to float, !dbg !20
  %37 = bitcast i32 %33 to float, !dbg !20
  %38 = bitcast i32 %34 to float, !dbg !20
  %39 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %29, i1 %21, i32 0, i1 %21, i32 0, i1 %21, i32 0, i1 %21, i32 0, i1 %21) #3, !dbg !20
  %40 = extractvalue { i32, i32, i32, i32 } %39, 0, !dbg !20
  %41 = extractvalue { i32, i32, i32, i32 } %39, 1, !dbg !20
  %42 = extractvalue { i32, i32, i32, i32 } %39, 2, !dbg !20
  %43 = extractvalue { i32, i32, i32, i32 } %39, 3, !dbg !20
  %44 = bitcast i32 %40 to float, !dbg !20
  %45 = bitcast i32 %41 to float, !dbg !20
  %46 = bitcast i32 %42 to float, !dbg !20
  %47 = bitcast i32 %43 to float, !dbg !20
  %48 = fmul float %35, 0x3FF7154760000000, !dbg !21
  %49 = tail call float @llvm.nvvm.round.f(float %48) #3, !dbg !21
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i = icmp eq i32 %50, 0, !dbg !21
  %51 = tail call float @llvm.nvvm.fabs.ftz.f(float %35) #3, !dbg !21
  %52 = tail call float @llvm.nvvm.fabs.f(float %35) #3, !dbg !21
  %.03.i = select i1 %.not.i, float %52, float %51, !dbg !21
  %53 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !21
  %t.0.i = select i1 %53, float 0.000000e+00, float %49, !dbg !21
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %56 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !21
  %j.0.i = select i1 %56, float 1.270000e+02, float %t.0.i, !dbg !21
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not8.i = icmp eq i32 %62, 0, !dbg !21
  br i1 %.not8.i, label %65, label %63, !dbg !21

63:                                               ; preds = %10
  %64 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !21
  br label %__nv_expm1f.exit, !dbg !21

65:                                               ; preds = %10
  %66 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !21
  br label %__nv_expm1f.exit, !dbg !21

__nv_expm1f.exit:                                 ; preds = %63, %65
  %.0.i = phi float [ %64, %63 ], [ %66, %65 ], !dbg !21
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %68 = fmul float %36, 0x3FF7154760000000, !dbg !21
  %69 = tail call float @llvm.nvvm.round.f(float %68) #3, !dbg !21
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i4 = icmp eq i32 %70, 0, !dbg !21
  %71 = tail call float @llvm.nvvm.fabs.ftz.f(float %36) #3, !dbg !21
  %72 = tail call float @llvm.nvvm.fabs.f(float %36) #3, !dbg !21
  %.03.i5 = select i1 %.not.i4, float %72, float %71, !dbg !21
  %73 = fcmp olt float %.03.i5, 0x3FDA3D70A0000000, !dbg !21
  %t.0.i6 = select i1 %73, float 0.000000e+00, float %69, !dbg !21
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %76 = fcmp oeq float %t.0.i6, 1.280000e+02, !dbg !21
  %j.0.i7 = select i1 %76, float 1.270000e+02, float %t.0.i6, !dbg !21
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not8.i8 = icmp eq i32 %82, 0, !dbg !21
  br i1 %.not8.i8, label %85, label %83, !dbg !21

83:                                               ; preds = %__nv_expm1f.exit
  %84 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i7) #3, !dbg !21
  br label %__nv_expm1f.exit30, !dbg !21

85:                                               ; preds = %__nv_expm1f.exit
  %86 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i7) #3, !dbg !21
  br label %__nv_expm1f.exit30, !dbg !21

__nv_expm1f.exit30:                               ; preds = %83, %85
  %.0.i9 = phi float [ %84, %83 ], [ %86, %85 ], !dbg !21
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %88 = fmul float %37, 0x3FF7154760000000, !dbg !21
  %89 = tail call float @llvm.nvvm.round.f(float %88) #3, !dbg !21
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i31 = icmp eq i32 %90, 0, !dbg !21
  %91 = tail call float @llvm.nvvm.fabs.ftz.f(float %37) #3, !dbg !21
  %92 = tail call float @llvm.nvvm.fabs.f(float %37) #3, !dbg !21
  %.03.i32 = select i1 %.not.i31, float %92, float %91, !dbg !21
  %93 = fcmp olt float %.03.i32, 0x3FDA3D70A0000000, !dbg !21
  %t.0.i33 = select i1 %93, float 0.000000e+00, float %89, !dbg !21
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %96 = fcmp oeq float %t.0.i33, 1.280000e+02, !dbg !21
  %j.0.i34 = select i1 %96, float 1.270000e+02, float %t.0.i33, !dbg !21
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not8.i35 = icmp eq i32 %102, 0, !dbg !21
  br i1 %.not8.i35, label %105, label %103, !dbg !21

103:                                              ; preds = %__nv_expm1f.exit30
  %104 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i34) #3, !dbg !21
  br label %__nv_expm1f.exit57, !dbg !21

105:                                              ; preds = %__nv_expm1f.exit30
  %106 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i34) #3, !dbg !21
  br label %__nv_expm1f.exit57, !dbg !21

__nv_expm1f.exit57:                               ; preds = %103, %105
  %.0.i36 = phi float [ %104, %103 ], [ %106, %105 ], !dbg !21
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %108 = fmul float %38, 0x3FF7154760000000, !dbg !21
  %109 = tail call float @llvm.nvvm.round.f(float %108) #3, !dbg !21
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i58 = icmp eq i32 %110, 0, !dbg !21
  %111 = tail call float @llvm.nvvm.fabs.ftz.f(float %38) #3, !dbg !21
  %112 = tail call float @llvm.nvvm.fabs.f(float %38) #3, !dbg !21
  %.03.i59 = select i1 %.not.i58, float %112, float %111, !dbg !21
  %113 = fcmp olt float %.03.i59, 0x3FDA3D70A0000000, !dbg !21
  %t.0.i60 = select i1 %113, float 0.000000e+00, float %109, !dbg !21
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %116 = fcmp oeq float %t.0.i60, 1.280000e+02, !dbg !21
  %j.0.i61 = select i1 %116, float 1.270000e+02, float %t.0.i60, !dbg !21
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not8.i62 = icmp eq i32 %122, 0, !dbg !21
  br i1 %.not8.i62, label %125, label %123, !dbg !21

123:                                              ; preds = %__nv_expm1f.exit57
  %124 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i61) #3, !dbg !21
  br label %__nv_expm1f.exit84, !dbg !21

125:                                              ; preds = %__nv_expm1f.exit57
  %126 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i61) #3, !dbg !21
  br label %__nv_expm1f.exit84, !dbg !21

__nv_expm1f.exit84:                               ; preds = %123, %125
  %.0.i63 = phi float [ %124, %123 ], [ %126, %125 ], !dbg !21
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %128 = fmul float %44, 0x3FF7154760000000, !dbg !21
  %129 = tail call float @llvm.nvvm.round.f(float %128) #3, !dbg !21
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i85 = icmp eq i32 %130, 0, !dbg !21
  %131 = tail call float @llvm.nvvm.fabs.ftz.f(float %44) #3, !dbg !21
  %132 = tail call float @llvm.nvvm.fabs.f(float %44) #3, !dbg !21
  %.03.i86 = select i1 %.not.i85, float %132, float %131, !dbg !21
  %133 = fcmp olt float %.03.i86, 0x3FDA3D70A0000000, !dbg !21
  %t.0.i87 = select i1 %133, float 0.000000e+00, float %129, !dbg !21
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %136 = fcmp oeq float %t.0.i87, 1.280000e+02, !dbg !21
  %j.0.i88 = select i1 %136, float 1.270000e+02, float %t.0.i87, !dbg !21
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not8.i89 = icmp eq i32 %142, 0, !dbg !21
  br i1 %.not8.i89, label %145, label %143, !dbg !21

143:                                              ; preds = %__nv_expm1f.exit84
  %144 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i88) #3, !dbg !21
  br label %__nv_expm1f.exit111, !dbg !21

145:                                              ; preds = %__nv_expm1f.exit84
  %146 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i88) #3, !dbg !21
  br label %__nv_expm1f.exit111, !dbg !21

__nv_expm1f.exit111:                              ; preds = %143, %145
  %.0.i90 = phi float [ %144, %143 ], [ %146, %145 ], !dbg !21
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %148 = fmul float %45, 0x3FF7154760000000, !dbg !21
  %149 = tail call float @llvm.nvvm.round.f(float %148) #3, !dbg !21
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i112 = icmp eq i32 %150, 0, !dbg !21
  %151 = tail call float @llvm.nvvm.fabs.ftz.f(float %45) #3, !dbg !21
  %152 = tail call float @llvm.nvvm.fabs.f(float %45) #3, !dbg !21
  %.03.i113 = select i1 %.not.i112, float %152, float %151, !dbg !21
  %153 = fcmp olt float %.03.i113, 0x3FDA3D70A0000000, !dbg !21
  %t.0.i114 = select i1 %153, float 0.000000e+00, float %149, !dbg !21
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %156 = fcmp oeq float %t.0.i114, 1.280000e+02, !dbg !21
  %j.0.i115 = select i1 %156, float 1.270000e+02, float %t.0.i114, !dbg !21
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not8.i116 = icmp eq i32 %162, 0, !dbg !21
  br i1 %.not8.i116, label %165, label %163, !dbg !21

163:                                              ; preds = %__nv_expm1f.exit111
  %164 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i115) #3, !dbg !21
  br label %__nv_expm1f.exit138, !dbg !21

165:                                              ; preds = %__nv_expm1f.exit111
  %166 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i115) #3, !dbg !21
  br label %__nv_expm1f.exit138, !dbg !21

__nv_expm1f.exit138:                              ; preds = %163, %165
  %.0.i117 = phi float [ %164, %163 ], [ %166, %165 ], !dbg !21
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %168 = fmul float %46, 0x3FF7154760000000, !dbg !21
  %169 = tail call float @llvm.nvvm.round.f(float %168) #3, !dbg !21
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i139 = icmp eq i32 %170, 0, !dbg !21
  %171 = tail call float @llvm.nvvm.fabs.ftz.f(float %46) #3, !dbg !21
  %172 = tail call float @llvm.nvvm.fabs.f(float %46) #3, !dbg !21
  %.03.i140 = select i1 %.not.i139, float %172, float %171, !dbg !21
  %173 = fcmp olt float %.03.i140, 0x3FDA3D70A0000000, !dbg !21
  %t.0.i141 = select i1 %173, float 0.000000e+00, float %169, !dbg !21
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %176 = fcmp oeq float %t.0.i141, 1.280000e+02, !dbg !21
  %j.0.i142 = select i1 %176, float 1.270000e+02, float %t.0.i141, !dbg !21
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not8.i143 = icmp eq i32 %182, 0, !dbg !21
  br i1 %.not8.i143, label %185, label %183, !dbg !21

183:                                              ; preds = %__nv_expm1f.exit138
  %184 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i142) #3, !dbg !21
  br label %__nv_expm1f.exit165, !dbg !21

185:                                              ; preds = %__nv_expm1f.exit138
  %186 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i142) #3, !dbg !21
  br label %__nv_expm1f.exit165, !dbg !21

__nv_expm1f.exit165:                              ; preds = %183, %185
  %.0.i144 = phi float [ %184, %183 ], [ %186, %185 ], !dbg !21
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %188 = fmul float %47, 0x3FF7154760000000, !dbg !21
  %189 = tail call float @llvm.nvvm.round.f(float %188) #3, !dbg !21
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i166 = icmp eq i32 %190, 0, !dbg !21
  %191 = tail call float @llvm.nvvm.fabs.ftz.f(float %47) #3, !dbg !21
  %192 = tail call float @llvm.nvvm.fabs.f(float %47) #3, !dbg !21
  %.03.i167 = select i1 %.not.i166, float %192, float %191, !dbg !21
  %193 = fcmp olt float %.03.i167, 0x3FDA3D70A0000000, !dbg !21
  %t.0.i168 = select i1 %193, float 0.000000e+00, float %189, !dbg !21
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %196 = fcmp oeq float %t.0.i168, 1.280000e+02, !dbg !21
  %j.0.i169 = select i1 %196, float 1.270000e+02, float %t.0.i168, !dbg !21
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not8.i170 = icmp eq i32 %202, 0, !dbg !21
  br i1 %.not8.i170, label %205, label %203, !dbg !21

203:                                              ; preds = %__nv_expm1f.exit165
  %204 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i169) #3, !dbg !21
  br label %__nv_expm1f.exit192, !dbg !21

205:                                              ; preds = %__nv_expm1f.exit165
  %206 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i169) #3, !dbg !21
  br label %__nv_expm1f.exit192, !dbg !21

__nv_expm1f.exit192:                              ; preds = %203, %205
  %.0.i171 = phi float [ %204, %203 ], [ %206, %205 ], !dbg !21
  %207 = fcmp oeq float %46, 0.000000e+00, !dbg !21
  %208 = fadd float %46, %46, !dbg !21
  %209 = fcmp olt float %j.0.i142, -2.500000e+01, !dbg !21
  %210 = fcmp ogt float %j.0.i142, 1.280000e+02, !dbg !21
  %.not9.i159 = icmp eq i32 %187, 0, !dbg !21
  %.not7.i145 = icmp eq i32 %181, 0, !dbg !21
  %.not6.i146 = icmp eq i32 %180, 0, !dbg !21
  %.not5.i147 = icmp eq i32 %179, 0, !dbg !21
  %.not4.i148 = icmp eq i32 %178, 0, !dbg !21
  %.not3.i149 = icmp eq i32 %177, 0, !dbg !21
  %.not2.i150 = icmp eq i32 %175, 0, !dbg !21
  %211 = fneg float %t.0.i141, !dbg !21
  %.not1.i151 = icmp eq i32 %174, 0, !dbg !21
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %211, float 0x3FE62E4000000000, float %46) #3, !dbg !21
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %211, float 0x3FE62E4000000000, float %46) #3, !dbg !21
  %.04.i152 = select i1 %.not1.i151, float %212, float %213, !dbg !21
  %214 = tail call float @llvm.nvvm.fma.rn.f(float %211, float 0x3EB7F7D1C0000000, float %.04.i152) #3, !dbg !21
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %211, float 0x3EB7F7D1C0000000, float %.04.i152) #3, !dbg !21
  %.05.i153 = select i1 %.not2.i150, float %214, float %215, !dbg !21
  %216 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i153, float 0x3F812ACC60000000) #3, !dbg !21
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i153, float 0x3F812ACC60000000) #3, !dbg !21
  %.07.i154 = select i1 %.not3.i149, float %216, float %217, !dbg !21
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i154, float %.05.i153, float 0x3FA5557C60000000) #3, !dbg !21
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i154, float %.05.i153, float 0x3FA5557C60000000) #3, !dbg !21
  %.08.i155 = select i1 %.not4.i148, float %218, float %219, !dbg !21
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i155, float %.05.i153, float 0x3FC5553EC0000000) #3, !dbg !21
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i155, float %.05.i153, float 0x3FC5553EC0000000) #3, !dbg !21
  %.09.i156 = select i1 %.not5.i147, float %220, float %221, !dbg !21
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i156, float %.05.i153, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i156, float %.05.i153, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %.06.i157 = select i1 %.not6.i146, float %222, float %223, !dbg !21
  %224 = fmul float %.05.i153, %.06.i157, !dbg !21
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %224, float %.05.i153, float %.05.i153) #3, !dbg !21
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %224, float %.05.i153, float %.05.i153) #3, !dbg !21
  %.01.i158 = select i1 %.not7.i145, float %225, float %226, !dbg !21
  %227 = fadd float %.0.i144, -1.000000e+00, !dbg !21
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i158, float %.0.i144, float %227) #3, !dbg !21
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i158, float %.0.i144, float %227) #3, !dbg !21
  %.02.i160 = select i1 %.not9.i159, float %228, float %229, !dbg !21
  %230 = fadd float %.02.i160, %.02.i160, !dbg !21
  %u.0.i161 = select i1 %176, float %230, float %.02.i160, !dbg !21
  %u.1.i162 = select i1 %210, float 0x7FF0000000000000, float %u.0.i161, !dbg !21
  %u.2.i163 = select i1 %209, float -1.000000e+00, float %u.1.i162, !dbg !21
  %u.3.i164 = select i1 %207, float %208, float %u.2.i163, !dbg !21
  %231 = fcmp oeq float %45, 0.000000e+00, !dbg !21
  %232 = fadd float %45, %45, !dbg !21
  %233 = fcmp olt float %j.0.i115, -2.500000e+01, !dbg !21
  %234 = fcmp ogt float %j.0.i115, 1.280000e+02, !dbg !21
  %.not9.i132 = icmp eq i32 %167, 0, !dbg !21
  %.not7.i118 = icmp eq i32 %161, 0, !dbg !21
  %.not6.i119 = icmp eq i32 %160, 0, !dbg !21
  %.not5.i120 = icmp eq i32 %159, 0, !dbg !21
  %.not4.i121 = icmp eq i32 %158, 0, !dbg !21
  %.not3.i122 = icmp eq i32 %157, 0, !dbg !21
  %.not2.i123 = icmp eq i32 %155, 0, !dbg !21
  %235 = fneg float %t.0.i114, !dbg !21
  %.not1.i124 = icmp eq i32 %154, 0, !dbg !21
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %235, float 0x3FE62E4000000000, float %45) #3, !dbg !21
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %235, float 0x3FE62E4000000000, float %45) #3, !dbg !21
  %.04.i125 = select i1 %.not1.i124, float %236, float %237, !dbg !21
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %235, float 0x3EB7F7D1C0000000, float %.04.i125) #3, !dbg !21
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %235, float 0x3EB7F7D1C0000000, float %.04.i125) #3, !dbg !21
  %.05.i126 = select i1 %.not2.i123, float %238, float %239, !dbg !21
  %240 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i126, float 0x3F812ACC60000000) #3, !dbg !21
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i126, float 0x3F812ACC60000000) #3, !dbg !21
  %.07.i127 = select i1 %.not3.i122, float %240, float %241, !dbg !21
  %242 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i127, float %.05.i126, float 0x3FA5557C60000000) #3, !dbg !21
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i127, float %.05.i126, float 0x3FA5557C60000000) #3, !dbg !21
  %.08.i128 = select i1 %.not4.i121, float %242, float %243, !dbg !21
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i128, float %.05.i126, float 0x3FC5553EC0000000) #3, !dbg !21
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i128, float %.05.i126, float 0x3FC5553EC0000000) #3, !dbg !21
  %.09.i129 = select i1 %.not5.i120, float %244, float %245, !dbg !21
  %246 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i129, float %.05.i126, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i129, float %.05.i126, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %.06.i130 = select i1 %.not6.i119, float %246, float %247, !dbg !21
  %248 = fmul float %.05.i126, %.06.i130, !dbg !21
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %248, float %.05.i126, float %.05.i126) #3, !dbg !21
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %248, float %.05.i126, float %.05.i126) #3, !dbg !21
  %.01.i131 = select i1 %.not7.i118, float %249, float %250, !dbg !21
  %251 = fadd float %.0.i117, -1.000000e+00, !dbg !21
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i131, float %.0.i117, float %251) #3, !dbg !21
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i131, float %.0.i117, float %251) #3, !dbg !21
  %.02.i133 = select i1 %.not9.i132, float %252, float %253, !dbg !21
  %254 = fadd float %.02.i133, %.02.i133, !dbg !21
  %u.0.i134 = select i1 %156, float %254, float %.02.i133, !dbg !21
  %u.1.i135 = select i1 %234, float 0x7FF0000000000000, float %u.0.i134, !dbg !21
  %u.2.i136 = select i1 %233, float -1.000000e+00, float %u.1.i135, !dbg !21
  %u.3.i137 = select i1 %231, float %232, float %u.2.i136, !dbg !21
  %255 = fcmp oeq float %44, 0.000000e+00, !dbg !21
  %256 = fadd float %44, %44, !dbg !21
  %257 = fcmp olt float %j.0.i88, -2.500000e+01, !dbg !21
  %258 = fcmp ogt float %j.0.i88, 1.280000e+02, !dbg !21
  %.not9.i105 = icmp eq i32 %147, 0, !dbg !21
  %.not7.i91 = icmp eq i32 %141, 0, !dbg !21
  %.not6.i92 = icmp eq i32 %140, 0, !dbg !21
  %.not5.i93 = icmp eq i32 %139, 0, !dbg !21
  %.not4.i94 = icmp eq i32 %138, 0, !dbg !21
  %.not3.i95 = icmp eq i32 %137, 0, !dbg !21
  %.not2.i96 = icmp eq i32 %135, 0, !dbg !21
  %259 = fneg float %t.0.i87, !dbg !21
  %.not1.i97 = icmp eq i32 %134, 0, !dbg !21
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %259, float 0x3FE62E4000000000, float %44) #3, !dbg !21
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %259, float 0x3FE62E4000000000, float %44) #3, !dbg !21
  %.04.i98 = select i1 %.not1.i97, float %260, float %261, !dbg !21
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %259, float 0x3EB7F7D1C0000000, float %.04.i98) #3, !dbg !21
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %259, float 0x3EB7F7D1C0000000, float %.04.i98) #3, !dbg !21
  %.05.i99 = select i1 %.not2.i96, float %262, float %263, !dbg !21
  %264 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i99, float 0x3F812ACC60000000) #3, !dbg !21
  %265 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i99, float 0x3F812ACC60000000) #3, !dbg !21
  %.07.i100 = select i1 %.not3.i95, float %264, float %265, !dbg !21
  %266 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i100, float %.05.i99, float 0x3FA5557C60000000) #3, !dbg !21
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i100, float %.05.i99, float 0x3FA5557C60000000) #3, !dbg !21
  %.08.i101 = select i1 %.not4.i94, float %266, float %267, !dbg !21
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i101, float %.05.i99, float 0x3FC5553EC0000000) #3, !dbg !21
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i101, float %.05.i99, float 0x3FC5553EC0000000) #3, !dbg !21
  %.09.i102 = select i1 %.not5.i93, float %268, float %269, !dbg !21
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i102, float %.05.i99, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %271 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i102, float %.05.i99, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %.06.i103 = select i1 %.not6.i92, float %270, float %271, !dbg !21
  %272 = fmul float %.05.i99, %.06.i103, !dbg !21
  %273 = tail call float @llvm.nvvm.fma.rn.f(float %272, float %.05.i99, float %.05.i99) #3, !dbg !21
  %274 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %272, float %.05.i99, float %.05.i99) #3, !dbg !21
  %.01.i104 = select i1 %.not7.i91, float %273, float %274, !dbg !21
  %275 = fadd float %.0.i90, -1.000000e+00, !dbg !21
  %276 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i104, float %.0.i90, float %275) #3, !dbg !21
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i104, float %.0.i90, float %275) #3, !dbg !21
  %.02.i106 = select i1 %.not9.i105, float %276, float %277, !dbg !21
  %278 = fadd float %.02.i106, %.02.i106, !dbg !21
  %u.0.i107 = select i1 %136, float %278, float %.02.i106, !dbg !21
  %u.1.i108 = select i1 %258, float 0x7FF0000000000000, float %u.0.i107, !dbg !21
  %u.2.i109 = select i1 %257, float -1.000000e+00, float %u.1.i108, !dbg !21
  %u.3.i110 = select i1 %255, float %256, float %u.2.i109, !dbg !21
  %279 = fcmp oeq float %38, 0.000000e+00, !dbg !21
  %280 = fadd float %38, %38, !dbg !21
  %281 = fcmp olt float %j.0.i61, -2.500000e+01, !dbg !21
  %282 = fcmp ogt float %j.0.i61, 1.280000e+02, !dbg !21
  %.not9.i78 = icmp eq i32 %127, 0, !dbg !21
  %.not7.i64 = icmp eq i32 %121, 0, !dbg !21
  %.not6.i65 = icmp eq i32 %120, 0, !dbg !21
  %.not5.i66 = icmp eq i32 %119, 0, !dbg !21
  %.not4.i67 = icmp eq i32 %118, 0, !dbg !21
  %.not3.i68 = icmp eq i32 %117, 0, !dbg !21
  %.not2.i69 = icmp eq i32 %115, 0, !dbg !21
  %283 = fneg float %t.0.i60, !dbg !21
  %.not1.i70 = icmp eq i32 %114, 0, !dbg !21
  %284 = tail call float @llvm.nvvm.fma.rn.f(float %283, float 0x3FE62E4000000000, float %38) #3, !dbg !21
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %283, float 0x3FE62E4000000000, float %38) #3, !dbg !21
  %.04.i71 = select i1 %.not1.i70, float %284, float %285, !dbg !21
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %283, float 0x3EB7F7D1C0000000, float %.04.i71) #3, !dbg !21
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %283, float 0x3EB7F7D1C0000000, float %.04.i71) #3, !dbg !21
  %.05.i72 = select i1 %.not2.i69, float %286, float %287, !dbg !21
  %288 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i72, float 0x3F812ACC60000000) #3, !dbg !21
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i72, float 0x3F812ACC60000000) #3, !dbg !21
  %.07.i73 = select i1 %.not3.i68, float %288, float %289, !dbg !21
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i73, float %.05.i72, float 0x3FA5557C60000000) #3, !dbg !21
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i73, float %.05.i72, float 0x3FA5557C60000000) #3, !dbg !21
  %.08.i74 = select i1 %.not4.i67, float %290, float %291, !dbg !21
  %292 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i74, float %.05.i72, float 0x3FC5553EC0000000) #3, !dbg !21
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i74, float %.05.i72, float 0x3FC5553EC0000000) #3, !dbg !21
  %.09.i75 = select i1 %.not5.i66, float %292, float %293, !dbg !21
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i75, float %.05.i72, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i75, float %.05.i72, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %.06.i76 = select i1 %.not6.i65, float %294, float %295, !dbg !21
  %296 = fmul float %.05.i72, %.06.i76, !dbg !21
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %296, float %.05.i72, float %.05.i72) #3, !dbg !21
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %296, float %.05.i72, float %.05.i72) #3, !dbg !21
  %.01.i77 = select i1 %.not7.i64, float %297, float %298, !dbg !21
  %299 = fadd float %.0.i63, -1.000000e+00, !dbg !21
  %300 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i77, float %.0.i63, float %299) #3, !dbg !21
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i77, float %.0.i63, float %299) #3, !dbg !21
  %.02.i79 = select i1 %.not9.i78, float %300, float %301, !dbg !21
  %302 = fadd float %.02.i79, %.02.i79, !dbg !21
  %u.0.i80 = select i1 %116, float %302, float %.02.i79, !dbg !21
  %u.1.i81 = select i1 %282, float 0x7FF0000000000000, float %u.0.i80, !dbg !21
  %u.2.i82 = select i1 %281, float -1.000000e+00, float %u.1.i81, !dbg !21
  %u.3.i83 = select i1 %279, float %280, float %u.2.i82, !dbg !21
  %303 = fcmp oeq float %37, 0.000000e+00, !dbg !21
  %304 = fadd float %37, %37, !dbg !21
  %305 = fcmp olt float %j.0.i34, -2.500000e+01, !dbg !21
  %306 = fcmp ogt float %j.0.i34, 1.280000e+02, !dbg !21
  %.not9.i51 = icmp eq i32 %107, 0, !dbg !21
  %.not7.i37 = icmp eq i32 %101, 0, !dbg !21
  %.not6.i38 = icmp eq i32 %100, 0, !dbg !21
  %.not5.i39 = icmp eq i32 %99, 0, !dbg !21
  %.not4.i40 = icmp eq i32 %98, 0, !dbg !21
  %.not3.i41 = icmp eq i32 %97, 0, !dbg !21
  %.not2.i42 = icmp eq i32 %95, 0, !dbg !21
  %307 = fneg float %t.0.i33, !dbg !21
  %.not1.i43 = icmp eq i32 %94, 0, !dbg !21
  %308 = tail call float @llvm.nvvm.fma.rn.f(float %307, float 0x3FE62E4000000000, float %37) #3, !dbg !21
  %309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %307, float 0x3FE62E4000000000, float %37) #3, !dbg !21
  %.04.i44 = select i1 %.not1.i43, float %308, float %309, !dbg !21
  %310 = tail call float @llvm.nvvm.fma.rn.f(float %307, float 0x3EB7F7D1C0000000, float %.04.i44) #3, !dbg !21
  %311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %307, float 0x3EB7F7D1C0000000, float %.04.i44) #3, !dbg !21
  %.05.i45 = select i1 %.not2.i42, float %310, float %311, !dbg !21
  %312 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i45, float 0x3F812ACC60000000) #3, !dbg !21
  %313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i45, float 0x3F812ACC60000000) #3, !dbg !21
  %.07.i46 = select i1 %.not3.i41, float %312, float %313, !dbg !21
  %314 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i46, float %.05.i45, float 0x3FA5557C60000000) #3, !dbg !21
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i46, float %.05.i45, float 0x3FA5557C60000000) #3, !dbg !21
  %.08.i47 = select i1 %.not4.i40, float %314, float %315, !dbg !21
  %316 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i47, float %.05.i45, float 0x3FC5553EC0000000) #3, !dbg !21
  %317 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i47, float %.05.i45, float 0x3FC5553EC0000000) #3, !dbg !21
  %.09.i48 = select i1 %.not5.i39, float %316, float %317, !dbg !21
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i48, float %.05.i45, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i48, float %.05.i45, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %.06.i49 = select i1 %.not6.i38, float %318, float %319, !dbg !21
  %320 = fmul float %.05.i45, %.06.i49, !dbg !21
  %321 = tail call float @llvm.nvvm.fma.rn.f(float %320, float %.05.i45, float %.05.i45) #3, !dbg !21
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %320, float %.05.i45, float %.05.i45) #3, !dbg !21
  %.01.i50 = select i1 %.not7.i37, float %321, float %322, !dbg !21
  %323 = fadd float %.0.i36, -1.000000e+00, !dbg !21
  %324 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i50, float %.0.i36, float %323) #3, !dbg !21
  %325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i50, float %.0.i36, float %323) #3, !dbg !21
  %.02.i52 = select i1 %.not9.i51, float %324, float %325, !dbg !21
  %326 = fadd float %.02.i52, %.02.i52, !dbg !21
  %u.0.i53 = select i1 %96, float %326, float %.02.i52, !dbg !21
  %u.1.i54 = select i1 %306, float 0x7FF0000000000000, float %u.0.i53, !dbg !21
  %u.2.i55 = select i1 %305, float -1.000000e+00, float %u.1.i54, !dbg !21
  %u.3.i56 = select i1 %303, float %304, float %u.2.i55, !dbg !21
  %327 = fcmp oeq float %36, 0.000000e+00, !dbg !21
  %328 = fadd float %36, %36, !dbg !21
  %329 = fcmp olt float %j.0.i7, -2.500000e+01, !dbg !21
  %330 = fcmp ogt float %j.0.i7, 1.280000e+02, !dbg !21
  %.not9.i24 = icmp eq i32 %87, 0, !dbg !21
  %.not7.i10 = icmp eq i32 %81, 0, !dbg !21
  %.not6.i11 = icmp eq i32 %80, 0, !dbg !21
  %.not5.i12 = icmp eq i32 %79, 0, !dbg !21
  %.not4.i13 = icmp eq i32 %78, 0, !dbg !21
  %.not3.i14 = icmp eq i32 %77, 0, !dbg !21
  %.not2.i15 = icmp eq i32 %75, 0, !dbg !21
  %331 = fneg float %t.0.i6, !dbg !21
  %.not1.i16 = icmp eq i32 %74, 0, !dbg !21
  %332 = tail call float @llvm.nvvm.fma.rn.f(float %331, float 0x3FE62E4000000000, float %36) #3, !dbg !21
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %331, float 0x3FE62E4000000000, float %36) #3, !dbg !21
  %.04.i17 = select i1 %.not1.i16, float %332, float %333, !dbg !21
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %331, float 0x3EB7F7D1C0000000, float %.04.i17) #3, !dbg !21
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %331, float 0x3EB7F7D1C0000000, float %.04.i17) #3, !dbg !21
  %.05.i18 = select i1 %.not2.i15, float %334, float %335, !dbg !21
  %336 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i18, float 0x3F812ACC60000000) #3, !dbg !21
  %337 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i18, float 0x3F812ACC60000000) #3, !dbg !21
  %.07.i19 = select i1 %.not3.i14, float %336, float %337, !dbg !21
  %338 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i19, float %.05.i18, float 0x3FA5557C60000000) #3, !dbg !21
  %339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i19, float %.05.i18, float 0x3FA5557C60000000) #3, !dbg !21
  %.08.i20 = select i1 %.not4.i13, float %338, float %339, !dbg !21
  %340 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i20, float %.05.i18, float 0x3FC5553EC0000000) #3, !dbg !21
  %341 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i20, float %.05.i18, float 0x3FC5553EC0000000) #3, !dbg !21
  %.09.i21 = select i1 %.not5.i12, float %340, float %341, !dbg !21
  %342 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i21, float %.05.i18, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %343 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i21, float %.05.i18, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %.06.i22 = select i1 %.not6.i11, float %342, float %343, !dbg !21
  %344 = fmul float %.05.i18, %.06.i22, !dbg !21
  %345 = tail call float @llvm.nvvm.fma.rn.f(float %344, float %.05.i18, float %.05.i18) #3, !dbg !21
  %346 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %344, float %.05.i18, float %.05.i18) #3, !dbg !21
  %.01.i23 = select i1 %.not7.i10, float %345, float %346, !dbg !21
  %347 = fadd float %.0.i9, -1.000000e+00, !dbg !21
  %348 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i23, float %.0.i9, float %347) #3, !dbg !21
  %349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i23, float %.0.i9, float %347) #3, !dbg !21
  %.02.i25 = select i1 %.not9.i24, float %348, float %349, !dbg !21
  %350 = fadd float %.02.i25, %.02.i25, !dbg !21
  %u.0.i26 = select i1 %76, float %350, float %.02.i25, !dbg !21
  %u.1.i27 = select i1 %330, float 0x7FF0000000000000, float %u.0.i26, !dbg !21
  %u.2.i28 = select i1 %329, float -1.000000e+00, float %u.1.i27, !dbg !21
  %u.3.i29 = select i1 %327, float %328, float %u.2.i28, !dbg !21
  %351 = fcmp oeq float %35, 0.000000e+00, !dbg !21
  %352 = fadd float %35, %35, !dbg !21
  %353 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !21
  %354 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !21
  %.not9.i = icmp eq i32 %67, 0, !dbg !21
  %.not7.i = icmp eq i32 %61, 0, !dbg !21
  %.not6.i = icmp eq i32 %60, 0, !dbg !21
  %.not5.i = icmp eq i32 %59, 0, !dbg !21
  %.not4.i = icmp eq i32 %58, 0, !dbg !21
  %.not3.i = icmp eq i32 %57, 0, !dbg !21
  %.not2.i = icmp eq i32 %55, 0, !dbg !21
  %355 = fneg float %t.0.i, !dbg !21
  %.not1.i = icmp eq i32 %54, 0, !dbg !21
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %355, float 0x3FE62E4000000000, float %35) #3, !dbg !21
  %357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %355, float 0x3FE62E4000000000, float %35) #3, !dbg !21
  %.04.i = select i1 %.not1.i, float %356, float %357, !dbg !21
  %358 = tail call float @llvm.nvvm.fma.rn.f(float %355, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !21
  %359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %355, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !21
  %.05.i = select i1 %.not2.i, float %358, float %359, !dbg !21
  %360 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !21
  %361 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !21
  %.07.i = select i1 %.not3.i, float %360, float %361, !dbg !21
  %362 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !21
  %363 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !21
  %.08.i = select i1 %.not4.i, float %362, float %363, !dbg !21
  %364 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !21
  %365 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !21
  %.09.i = select i1 %.not5.i, float %364, float %365, !dbg !21
  %366 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %367 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %.06.i = select i1 %.not6.i, float %366, float %367, !dbg !21
  %368 = fmul float %.05.i, %.06.i, !dbg !21
  %369 = tail call float @llvm.nvvm.fma.rn.f(float %368, float %.05.i, float %.05.i) #3, !dbg !21
  %370 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %368, float %.05.i, float %.05.i) #3, !dbg !21
  %.01.i = select i1 %.not7.i, float %369, float %370, !dbg !21
  %371 = fadd float %.0.i, -1.000000e+00, !dbg !21
  %372 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i, float %371) #3, !dbg !21
  %373 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i, float %371) #3, !dbg !21
  %.02.i = select i1 %.not9.i, float %372, float %373, !dbg !21
  %374 = fadd float %.02.i, %.02.i, !dbg !21
  %u.0.i = select i1 %56, float %374, float %.02.i, !dbg !21
  %u.1.i = select i1 %354, float 0x7FF0000000000000, float %u.0.i, !dbg !21
  %u.2.i = select i1 %353, float -1.000000e+00, float %u.1.i, !dbg !21
  %u.3.i = select i1 %351, float %352, float %u.2.i, !dbg !21
  %375 = fcmp ogt float %47, 0.000000e+00, !dbg !22
  %376 = fcmp ogt float %46, 0.000000e+00, !dbg !22
  %377 = fcmp ogt float %45, 0.000000e+00, !dbg !22
  %378 = fcmp ogt float %44, 0.000000e+00, !dbg !22
  %379 = fcmp ogt float %38, 0.000000e+00, !dbg !22
  %380 = fcmp ogt float %37, 0.000000e+00, !dbg !22
  %381 = fcmp ogt float %36, 0.000000e+00, !dbg !22
  %382 = fcmp ogt float %35, 0.000000e+00, !dbg !22
  %383 = srem i32 %20, 16, !dbg !23
  %384 = srem i32 %18, 16, !dbg !23
  %385 = sdiv i32 %17, 4096, !dbg !24
  %386 = srem i32 %385, 16, !dbg !25
  %387 = sdiv i32 %16, 4096, !dbg !24
  %388 = srem i32 %387, 16, !dbg !25
  %389 = srem i32 %20, 256, !dbg !26
  %390 = srem i32 %18, 256, !dbg !26
  %391 = sdiv i32 %17, 65536, !dbg !27
  %392 = sdiv i32 %16, 65536, !dbg !27
  %393 = or disjoint i32 %16, 3, !dbg !13
  %394 = srem i32 %393, 256, !dbg !15
  %395 = or disjoint i32 %16, 2, !dbg !13
  %396 = srem i32 %395, 256, !dbg !15
  %397 = or disjoint i32 %16, 1, !dbg !13
  %398 = srem i32 %397, 256, !dbg !15
  %.not7.i172 = icmp eq i32 %201, 0, !dbg !21
  %.not6.i173 = icmp eq i32 %200, 0, !dbg !21
  %.not5.i174 = icmp eq i32 %199, 0, !dbg !21
  %.not4.i175 = icmp eq i32 %198, 0, !dbg !21
  %.not3.i176 = icmp eq i32 %197, 0, !dbg !21
  %.not2.i177 = icmp eq i32 %195, 0, !dbg !21
  %399 = fneg float %t.0.i168, !dbg !21
  %.not1.i178 = icmp eq i32 %194, 0, !dbg !21
  %400 = tail call float @llvm.nvvm.fma.rn.f(float %399, float 0x3FE62E4000000000, float %47) #3, !dbg !21
  %401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %399, float 0x3FE62E4000000000, float %47) #3, !dbg !21
  %.04.i179 = select i1 %.not1.i178, float %400, float %401, !dbg !21
  %402 = tail call float @llvm.nvvm.fma.rn.f(float %399, float 0x3EB7F7D1C0000000, float %.04.i179) #3, !dbg !21
  %403 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %399, float 0x3EB7F7D1C0000000, float %.04.i179) #3, !dbg !21
  %.05.i180 = select i1 %.not2.i177, float %402, float %403, !dbg !21
  %404 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i180, float 0x3F812ACC60000000) #3, !dbg !21
  %405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i180, float 0x3F812ACC60000000) #3, !dbg !21
  %.07.i181 = select i1 %.not3.i176, float %404, float %405, !dbg !21
  %406 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i181, float %.05.i180, float 0x3FA5557C60000000) #3, !dbg !21
  %407 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i181, float %.05.i180, float 0x3FA5557C60000000) #3, !dbg !21
  %.08.i182 = select i1 %.not4.i175, float %406, float %407, !dbg !21
  %408 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i182, float %.05.i180, float 0x3FC5553EC0000000) #3, !dbg !21
  %409 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i182, float %.05.i180, float 0x3FC5553EC0000000) #3, !dbg !21
  %.09.i183 = select i1 %.not5.i174, float %408, float %409, !dbg !21
  %410 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i183, float %.05.i180, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %411 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i183, float %.05.i180, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %.06.i184 = select i1 %.not6.i173, float %410, float %411, !dbg !21
  %412 = fmul float %.05.i180, %.06.i184, !dbg !21
  %413 = tail call float @llvm.nvvm.fma.rn.f(float %412, float %.05.i180, float %.05.i180) #3, !dbg !21
  %414 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %412, float %.05.i180, float %.05.i180) #3, !dbg !21
  %.01.i185 = select i1 %.not7.i172, float %413, float %414, !dbg !21
  %415 = fadd float %.0.i171, -1.000000e+00, !dbg !21
  %416 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not9.i186 = icmp eq i32 %416, 0, !dbg !21
  %417 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i185, float %.0.i171, float %415) #3, !dbg !21
  %418 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i185, float %.0.i171, float %415) #3, !dbg !21
  %.02.i187 = select i1 %.not9.i186, float %418, float %417, !dbg !21
  %419 = fadd float %.02.i187, %.02.i187, !dbg !21
  %u.0.i188 = select i1 %196, float %419, float %.02.i187, !dbg !21
  %420 = fcmp ogt float %j.0.i169, 1.280000e+02, !dbg !21
  %u.1.i189 = select i1 %420, float 0x7FF0000000000000, float %u.0.i188, !dbg !21
  %421 = fcmp olt float %j.0.i169, -2.500000e+01, !dbg !21
  %u.2.i190 = select i1 %421, float -1.000000e+00, float %u.1.i189, !dbg !21
  %422 = fcmp oeq float %47, 0.000000e+00, !dbg !21
  %423 = fadd float %47, %47, !dbg !21
  %u.3.i191 = select i1 %422, float %423, float %u.2.i190, !dbg !21
  %424 = select i1 %382, float %35, float %u.3.i, !dbg !28
  %425 = select i1 %381, float %36, float %u.3.i29, !dbg !28
  %426 = select i1 %380, float %37, float %u.3.i56, !dbg !28
  %427 = select i1 %379, float %38, float %u.3.i83, !dbg !28
  %428 = select i1 %378, float %44, float %u.3.i110, !dbg !28
  %429 = select i1 %377, float %45, float %u.3.i137, !dbg !28
  %430 = select i1 %376, float %46, float %u.3.i164, !dbg !28
  %431 = select i1 %375, float %47, float %u.3.i191, !dbg !28
  %432 = icmp sgt i32 %.decomposed, 127, !dbg !29
  %433 = add nsw i32 %.decomposed, -128, !dbg !30
  %434 = shl nsw i32 %433, 8, !dbg !31
  %435 = shl nsw i32 %398, 8, !dbg !31
  %436 = shl nsw i32 %396, 8, !dbg !31
  %437 = shl nsw i32 %394, 8, !dbg !31
  %438 = shl nsw i32 %392, 15, !dbg !32
  %439 = shl nsw i32 %391, 15, !dbg !32
  %440 = add nsw i32 %438, %390, !dbg !33
  %441 = add nsw i32 %440, %434, !dbg !34
  %442 = add nsw i32 %440, -32768, !dbg !33
  %443 = add nsw i32 %442, %435, !dbg !34
  %444 = add nsw i32 %442, %436, !dbg !34
  %445 = add nsw i32 %442, %437, !dbg !34
  %446 = add nsw i32 %439, %389, !dbg !33
  %447 = add nsw i32 %446, %434, !dbg !34
  %448 = add nsw i32 %446, -32768, !dbg !33
  %449 = add nsw i32 %448, %435, !dbg !34
  %450 = add nsw i32 %448, %436, !dbg !34
  %451 = add nsw i32 %448, %437, !dbg !34
  %452 = sext i32 %441 to i64, !dbg !35
  %453 = getelementptr float, ptr addrspace(1) %1, i64 %452, !dbg !35
  %454 = sext i32 %443 to i64, !dbg !35
  %455 = getelementptr float, ptr addrspace(1) %1, i64 %454, !dbg !35
  %456 = sext i32 %444 to i64, !dbg !35
  %457 = getelementptr float, ptr addrspace(1) %1, i64 %456, !dbg !35
  %458 = sext i32 %445 to i64, !dbg !35
  %459 = getelementptr float, ptr addrspace(1) %1, i64 %458, !dbg !35
  %460 = sext i32 %447 to i64, !dbg !35
  %461 = getelementptr float, ptr addrspace(1) %1, i64 %460, !dbg !35
  %462 = sext i32 %449 to i64, !dbg !35
  %463 = getelementptr float, ptr addrspace(1) %1, i64 %462, !dbg !35
  %464 = sext i32 %450 to i64, !dbg !35
  %465 = getelementptr float, ptr addrspace(1) %1, i64 %464, !dbg !35
  %466 = sext i32 %451 to i64, !dbg !35
  %467 = getelementptr float, ptr addrspace(1) %1, i64 %466, !dbg !35
  %468 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %453, i1 %432, i32 0, i1 %432) #3, !dbg !36
  %469 = bitcast i32 %468 to float, !dbg !36
  %470 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %455, i1 %432, i32 0, i1 %432) #3, !dbg !36
  %471 = bitcast i32 %470 to float, !dbg !36
  %472 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %457, i1 %432, i32 0, i1 %432) #3, !dbg !36
  %473 = bitcast i32 %472 to float, !dbg !36
  %474 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %459, i1 %432, i32 0, i1 %432) #3, !dbg !36
  %475 = bitcast i32 %474 to float, !dbg !36
  %476 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %461, i1 %432, i32 0, i1 %432) #3, !dbg !36
  %477 = bitcast i32 %476 to float, !dbg !36
  %478 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %463, i1 %432, i32 0, i1 %432) #3, !dbg !36
  %479 = bitcast i32 %478 to float, !dbg !36
  %480 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %465, i1 %432, i32 0, i1 %432) #3, !dbg !36
  %481 = bitcast i32 %480 to float, !dbg !36
  %482 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %467, i1 %432, i32 0, i1 %432) #3, !dbg !36
  %483 = bitcast i32 %482 to float, !dbg !36
  %484 = sext i32 %388 to i64, !dbg !37
  %485 = getelementptr i64, ptr addrspace(1) %2, i64 %484, !dbg !37
  %486 = sext i32 %386 to i64, !dbg !37
  %487 = getelementptr i64, ptr addrspace(1) %2, i64 %486, !dbg !37
  %488 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %485, i1 %432, i1 %432) #3, !dbg !38
  %489 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %485, i1 %432, i1 %432) #3, !dbg !38
  %490 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %485, i1 %432, i1 %432) #3, !dbg !38
  %491 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %485, i1 %432, i1 %432) #3, !dbg !38
  %492 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %487, i1 %432, i1 %432) #3, !dbg !38
  %493 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %487, i1 %432, i1 %432) #3, !dbg !38
  %494 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %487, i1 %432, i1 %432) #3, !dbg !38
  %495 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %487, i1 %432, i1 %432) #3, !dbg !38
  %496 = lshr i64 %488, 59, !dbg !39
  %497 = and i64 %496, 16, !dbg !39
  %498 = add i64 %497, %488, !dbg !39
  %499 = lshr i64 %492, 59, !dbg !39
  %500 = and i64 %499, 16, !dbg !39
  %501 = add i64 %500, %492, !dbg !39
  %502 = sext i32 %384 to i64, !dbg !40
  %503 = getelementptr i64, ptr addrspace(1) %3, i64 %502, !dbg !40
  %504 = sext i32 %383 to i64, !dbg !40
  %505 = getelementptr i64, ptr addrspace(1) %3, i64 %504, !dbg !40
  %506 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %503, i1 %432, i1 %432) #3, !dbg !41
  %507 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %503, i1 %432, i1 %432) #3, !dbg !41
  %508 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %503, i1 %432, i1 %432) #3, !dbg !41
  %509 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %503, i1 %432, i1 %432) #3, !dbg !41
  %510 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %505, i1 %432, i1 %432) #3, !dbg !41
  %511 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %505, i1 %432, i1 %432) #3, !dbg !41
  %512 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %505, i1 %432, i1 %432) #3, !dbg !41
  %513 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %505, i1 %432, i1 %432) #3, !dbg !41
  %514 = lshr i64 %506, 59, !dbg !42
  %515 = and i64 %514, 16, !dbg !42
  %516 = add i64 %515, %506, !dbg !42
  %517 = lshr i64 %510, 59, !dbg !42
  %518 = and i64 %517, 16, !dbg !42
  %519 = add i64 %518, %510, !dbg !42
  %520 = shl i64 %498, 11, !dbg !43
  %521 = shl i64 %501, 11, !dbg !43
  %522 = sext i32 %438 to i64, !dbg !44
  %523 = sext i32 %439 to i64, !dbg !44
  %524 = sext i32 %433 to i64, !dbg !45
  %.idx = shl i64 %516, 9, !dbg !46
  %525 = getelementptr i8, ptr addrspace(1) %4, i64 %.idx, !dbg !46
  %526 = getelementptr float, ptr addrspace(1) %525, i64 %520, !dbg !46
  %527 = getelementptr float, ptr addrspace(1) %526, i64 %522, !dbg !46
  %528 = getelementptr float, ptr addrspace(1) %527, i64 %524, !dbg !46
  %.idx1 = shl i64 %519, 9, !dbg !46
  %529 = getelementptr i8, ptr addrspace(1) %4, i64 %.idx1, !dbg !46
  %530 = getelementptr float, ptr addrspace(1) %529, i64 %521, !dbg !46
  %531 = getelementptr float, ptr addrspace(1) %530, i64 %523, !dbg !46
  %532 = getelementptr float, ptr addrspace(1) %531, i64 %524, !dbg !46
  %533 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %528, i1 %432, i32 0, i1 %432, i32 0, i1 %432, i32 0, i1 %432, i32 0, i1 %432) #3, !dbg !47
  %534 = extractvalue { i32, i32, i32, i32 } %533, 0, !dbg !47
  %535 = extractvalue { i32, i32, i32, i32 } %533, 1, !dbg !47
  %536 = extractvalue { i32, i32, i32, i32 } %533, 2, !dbg !47
  %537 = extractvalue { i32, i32, i32, i32 } %533, 3, !dbg !47
  %538 = bitcast i32 %534 to float, !dbg !47
  %539 = bitcast i32 %535 to float, !dbg !47
  %540 = bitcast i32 %536 to float, !dbg !47
  %541 = bitcast i32 %537 to float, !dbg !47
  %542 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %532, i1 %432, i32 0, i1 %432, i32 0, i1 %432, i32 0, i1 %432, i32 0, i1 %432) #3, !dbg !47
  %543 = extractvalue { i32, i32, i32, i32 } %542, 0, !dbg !47
  %544 = extractvalue { i32, i32, i32, i32 } %542, 1, !dbg !47
  %545 = extractvalue { i32, i32, i32, i32 } %542, 2, !dbg !47
  %546 = extractvalue { i32, i32, i32, i32 } %542, 3, !dbg !47
  %547 = bitcast i32 %543 to float, !dbg !47
  %548 = bitcast i32 %544 to float, !dbg !47
  %549 = bitcast i32 %545 to float, !dbg !47
  %550 = bitcast i32 %546 to float, !dbg !47
  %551 = getelementptr i64, ptr addrspace(1) %5, i64 %502, !dbg !48
  %552 = getelementptr i64, ptr addrspace(1) %5, i64 %504, !dbg !48
  %553 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %551, i1 %432, i1 %432) #3, !dbg !49
  %554 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %551, i1 %432, i1 %432) #3, !dbg !49
  %555 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %551, i1 %432, i1 %432) #3, !dbg !49
  %556 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %551, i1 %432, i1 %432) #3, !dbg !49
  %557 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %552, i1 %432, i1 %432) #3, !dbg !49
  %558 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %552, i1 %432, i1 %432) #3, !dbg !49
  %559 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %552, i1 %432, i1 %432) #3, !dbg !49
  %560 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %552, i1 %432, i1 %432) #3, !dbg !49
  %561 = lshr i64 %553, 59, !dbg !50
  %562 = and i64 %561, 16, !dbg !50
  %563 = add i64 %562, %553, !dbg !50
  %564 = lshr i64 %557, 59, !dbg !50
  %565 = and i64 %564, 16, !dbg !50
  %566 = add i64 %565, %557, !dbg !50
  %.idx2 = shl i64 %563, 9, !dbg !51
  %567 = getelementptr i8, ptr addrspace(1) %4, i64 %.idx2, !dbg !51
  %568 = getelementptr float, ptr addrspace(1) %567, i64 %520, !dbg !51
  %569 = getelementptr float, ptr addrspace(1) %568, i64 %522, !dbg !51
  %570 = getelementptr float, ptr addrspace(1) %569, i64 %524, !dbg !51
  %.idx3 = shl i64 %566, 9, !dbg !51
  %571 = getelementptr i8, ptr addrspace(1) %4, i64 %.idx3, !dbg !51
  %572 = getelementptr float, ptr addrspace(1) %571, i64 %521, !dbg !51
  %573 = getelementptr float, ptr addrspace(1) %572, i64 %523, !dbg !51
  %574 = getelementptr float, ptr addrspace(1) %573, i64 %524, !dbg !51
  %575 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %570, i1 %432, i32 0, i1 %432, i32 0, i1 %432, i32 0, i1 %432, i32 0, i1 %432) #3, !dbg !52
  %576 = extractvalue { i32, i32, i32, i32 } %575, 0, !dbg !52
  %577 = extractvalue { i32, i32, i32, i32 } %575, 1, !dbg !52
  %578 = extractvalue { i32, i32, i32, i32 } %575, 2, !dbg !52
  %579 = extractvalue { i32, i32, i32, i32 } %575, 3, !dbg !52
  %580 = bitcast i32 %576 to float, !dbg !52
  %581 = bitcast i32 %577 to float, !dbg !52
  %582 = bitcast i32 %578 to float, !dbg !52
  %583 = bitcast i32 %579 to float, !dbg !52
  %584 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %574, i1 %432, i32 0, i1 %432, i32 0, i1 %432, i32 0, i1 %432, i32 0, i1 %432) #3, !dbg !52
  %585 = extractvalue { i32, i32, i32, i32 } %584, 0, !dbg !52
  %586 = extractvalue { i32, i32, i32, i32 } %584, 1, !dbg !52
  %587 = extractvalue { i32, i32, i32, i32 } %584, 2, !dbg !52
  %588 = extractvalue { i32, i32, i32, i32 } %584, 3, !dbg !52
  %589 = bitcast i32 %585 to float, !dbg !52
  %590 = bitcast i32 %586 to float, !dbg !52
  %591 = bitcast i32 %587 to float, !dbg !52
  %592 = bitcast i32 %588 to float, !dbg !52
  %593 = fsub float %580, %538, !dbg !53
  %594 = fsub float %581, %539, !dbg !53
  %595 = fsub float %582, %540, !dbg !53
  %596 = fsub float %583, %541, !dbg !53
  %597 = fsub float %589, %547, !dbg !53
  %598 = fsub float %590, %548, !dbg !53
  %599 = fsub float %591, %549, !dbg !53
  %600 = fsub float %592, %550, !dbg !53
  %601 = getelementptr float, ptr addrspace(1) %6, i64 %502, !dbg !54
  %602 = getelementptr float, ptr addrspace(1) %6, i64 %504, !dbg !54
  %603 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %601, i1 %432, i32 0, i1 %432) #3, !dbg !55
  %604 = bitcast i32 %603 to float, !dbg !55
  %605 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %601, i1 %432, i32 0, i1 %432) #3, !dbg !55
  %606 = bitcast i32 %605 to float, !dbg !55
  %607 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %601, i1 %432, i32 0, i1 %432) #3, !dbg !55
  %608 = bitcast i32 %607 to float, !dbg !55
  %609 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %601, i1 %432, i32 0, i1 %432) #3, !dbg !55
  %610 = bitcast i32 %609 to float, !dbg !55
  %611 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %602, i1 %432, i32 0, i1 %432) #3, !dbg !55
  %612 = bitcast i32 %611 to float, !dbg !55
  %613 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %602, i1 %432, i32 0, i1 %432) #3, !dbg !55
  %614 = bitcast i32 %613 to float, !dbg !55
  %615 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %602, i1 %432, i32 0, i1 %432) #3, !dbg !55
  %616 = bitcast i32 %615 to float, !dbg !55
  %617 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %602, i1 %432, i32 0, i1 %432) #3, !dbg !55
  %618 = bitcast i32 %617 to float, !dbg !55
  %619 = fmul float %593, %604, !dbg !56
  %620 = fmul float %594, %606, !dbg !56
  %621 = fmul float %595, %608, !dbg !56
  %622 = fmul float %596, %610, !dbg !56
  %623 = fmul float %597, %612, !dbg !56
  %624 = fmul float %598, %614, !dbg !56
  %625 = fmul float %599, %616, !dbg !56
  %626 = fmul float %600, %618, !dbg !56
  %627 = fadd float %619, %538, !dbg !57
  %628 = fadd float %620, %539, !dbg !57
  %629 = fadd float %621, %540, !dbg !57
  %630 = fadd float %622, %541, !dbg !57
  %631 = fadd float %623, %547, !dbg !57
  %632 = fadd float %624, %548, !dbg !57
  %633 = fadd float %625, %549, !dbg !57
  %634 = fadd float %626, %550, !dbg !57
  %635 = fsub float %627, %469, !dbg !58
  %636 = fsub float %628, %471, !dbg !58
  %637 = fsub float %629, %473, !dbg !58
  %638 = fsub float %630, %475, !dbg !58
  %639 = fsub float %631, %477, !dbg !58
  %640 = fsub float %632, %479, !dbg !58
  %641 = fsub float %633, %481, !dbg !58
  %642 = fsub float %634, %483, !dbg !58
  %643 = getelementptr float, ptr addrspace(1) %7, i64 %484, !dbg !59
  %644 = getelementptr float, ptr addrspace(1) %7, i64 %486, !dbg !59
  %645 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %643, i1 %432, i32 0, i1 %432) #3, !dbg !60
  %646 = bitcast i32 %645 to float, !dbg !60
  %647 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %643, i1 %432, i32 0, i1 %432) #3, !dbg !60
  %648 = bitcast i32 %647 to float, !dbg !60
  %649 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %643, i1 %432, i32 0, i1 %432) #3, !dbg !60
  %650 = bitcast i32 %649 to float, !dbg !60
  %651 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %643, i1 %432, i32 0, i1 %432) #3, !dbg !60
  %652 = bitcast i32 %651 to float, !dbg !60
  %653 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %644, i1 %432, i32 0, i1 %432) #3, !dbg !60
  %654 = bitcast i32 %653 to float, !dbg !60
  %655 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %644, i1 %432, i32 0, i1 %432) #3, !dbg !60
  %656 = bitcast i32 %655 to float, !dbg !60
  %657 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %644, i1 %432, i32 0, i1 %432) #3, !dbg !60
  %658 = bitcast i32 %657 to float, !dbg !60
  %659 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %644, i1 %432, i32 0, i1 %432) #3, !dbg !60
  %660 = bitcast i32 %659 to float, !dbg !60
  %661 = fmul float %635, %646, !dbg !61
  %662 = fmul float %636, %648, !dbg !61
  %663 = fmul float %637, %650, !dbg !61
  %664 = fmul float %638, %652, !dbg !61
  %665 = fmul float %639, %654, !dbg !61
  %666 = fmul float %640, %656, !dbg !61
  %667 = fmul float %641, %658, !dbg !61
  %668 = fmul float %642, %660, !dbg !61
  %669 = fadd float %661, %469, !dbg !62
  %670 = fadd float %662, %471, !dbg !62
  %671 = fadd float %663, %473, !dbg !62
  %672 = fadd float %664, %475, !dbg !62
  %673 = fadd float %665, %477, !dbg !62
  %674 = fadd float %666, %479, !dbg !62
  %675 = fadd float %667, %481, !dbg !62
  %676 = fadd float %668, %483, !dbg !62
  %677 = select i1 %21, float %424, float %669, !dbg !63
  %678 = select i1 %21, float %425, float %670, !dbg !63
  %679 = select i1 %21, float %426, float %671, !dbg !63
  %680 = select i1 %21, float %427, float %672, !dbg !63
  %681 = select i1 %21, float %428, float %673, !dbg !63
  %682 = select i1 %21, float %429, float %674, !dbg !63
  %683 = select i1 %21, float %430, float %675, !dbg !63
  %684 = select i1 %21, float %431, float %676, !dbg !63
  %685 = sext i32 %16 to i64, !dbg !64
  %686 = getelementptr float, ptr addrspace(1) %8, i64 %685, !dbg !64
  %687 = sext i32 %17 to i64, !dbg !64
  %688 = getelementptr float, ptr addrspace(1) %8, i64 %687, !dbg !64
  %689 = bitcast float %677 to i32, !dbg !65
  %690 = bitcast float %678 to i32, !dbg !65
  %691 = bitcast float %679 to i32, !dbg !65
  %692 = bitcast float %680 to i32, !dbg !65
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %689, i32 %690, i32 %691, i32 %692, ptr addrspace(1) %686, i1 true) #3, !dbg !65
  %693 = bitcast float %681 to i32, !dbg !65
  %694 = bitcast float %682 to i32, !dbg !65
  %695 = bitcast float %683 to i32, !dbg !65
  %696 = bitcast float %684 to i32, !dbg !65
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %693, i32 %694, i32 %695, i32 %696, ptr addrspace(1) %688, i1 true) #3, !dbg !65
  ret void, !dbg !66
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cyjq5ugo2dcnd3dczfpl3aq2tafez4co3zrqemoohl6vynzxguc2.py", directory: "inductor_cache/yj")
!4 = !{ptr @triton_poi_fused_cat_39, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_39, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_39", linkageName: "triton_poi_fused_cat_39", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 35, column: 18, scope: !7)
!17 = !DILocation(line: 36, column: 34, scope: !7)
!18 = !DILocation(line: 36, column: 40, scope: !7)
!19 = !DILocation(line: 36, column: 30, scope: !7)
!20 = !DILocation(line: 36, column: 46, scope: !7)
!21 = !DILocation(line: 41, column: 28, scope: !7)
!22 = !DILocation(line: 38, column: 18, scope: !7)
!23 = !DILocation(line: 29, column: 28, scope: !7)
!24 = !DILocation(line: 28, column: 21, scope: !7)
!25 = !DILocation(line: 28, column: 29, scope: !7)
!26 = !DILocation(line: 27, column: 28, scope: !7)
!27 = !DILocation(line: 26, column: 19, scope: !7)
!28 = !DILocation(line: 43, column: 33, scope: !7)
!29 = !DILocation(line: 46, column: 20, scope: !7)
!30 = !DILocation(line: 49, column: 50, scope: !7)
!31 = !DILocation(line: 49, column: 41, scope: !7)
!32 = !DILocation(line: 49, column: 62, scope: !7)
!33 = !DILocation(line: 49, column: 36, scope: !7)
!34 = !DILocation(line: 49, column: 56, scope: !7)
!35 = !DILocation(line: 49, column: 31, scope: !7)
!36 = !DILocation(line: 49, column: 67, scope: !7)
!37 = !DILocation(line: 50, column: 31, scope: !7)
!38 = !DILocation(line: 50, column: 36, scope: !7)
!39 = !DILocation(line: 54, column: 35, scope: !7)
!40 = !DILocation(line: 55, column: 31, scope: !7)
!41 = !DILocation(line: 55, column: 36, scope: !7)
!42 = !DILocation(line: 58, column: 35, scope: !7)
!43 = !DILocation(line: 59, column: 48, scope: !7)
!44 = !DILocation(line: 59, column: 56, scope: !7)
!45 = !DILocation(line: 59, column: 68, scope: !7)
!46 = !DILocation(line: 59, column: 31, scope: !7)
!47 = !DILocation(line: 59, column: 83, scope: !7)
!48 = !DILocation(line: 60, column: 31, scope: !7)
!49 = !DILocation(line: 60, column: 36, scope: !7)
!50 = !DILocation(line: 63, column: 35, scope: !7)
!51 = !DILocation(line: 64, column: 31, scope: !7)
!52 = !DILocation(line: 64, column: 83, scope: !7)
!53 = !DILocation(line: 65, column: 20, scope: !7)
!54 = !DILocation(line: 66, column: 31, scope: !7)
!55 = !DILocation(line: 66, column: 36, scope: !7)
!56 = !DILocation(line: 67, column: 20, scope: !7)
!57 = !DILocation(line: 68, column: 20, scope: !7)
!58 = !DILocation(line: 69, column: 20, scope: !7)
!59 = !DILocation(line: 70, column: 31, scope: !7)
!60 = !DILocation(line: 70, column: 36, scope: !7)
!61 = !DILocation(line: 71, column: 20, scope: !7)
!62 = !DILocation(line: 72, column: 20, scope: !7)
!63 = !DILocation(line: 0, scope: !7)
!64 = !DILocation(line: 76, column: 25, scope: !7)
!65 = !DILocation(line: 76, column: 37, scope: !7)
!66 = !DILocation(line: 76, column: 4, scope: !7)
