//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_1 // -- Begin function triton_poi_fused_convolution_1
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_1
.visible .entry triton_poi_fused_convolution_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_1_param_2,
	.param .u32 triton_poi_fused_convolution_1_param_3,
	.param .u32 triton_poi_fused_convolution_1_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<39>;
	.reg .f32 	%f<6>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_convolution_1_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_convolution_1_param_1];
$L__tmp0:
	.loc	1 22 28                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 24 21                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:24:21
	setp.lt.s32 	%p2, %r1, 64;
	ld.param.u64 	%rd8, [triton_poi_fused_convolution_1_param_2];
	.loc	1 25 28                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:25:33
	shl.b32 	%r13, %r2, 8;
	.loc	1 26 44                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:26:44
	mov.u32 	%r14, %tid.x;
	shl.b32 	%r15, %r14, 1;
	and.b32  	%r16, %r15, 254;
	and.b32  	%r17, %r14, 127;
	.loc	1 26 23                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:26:23
	or.b32  	%r18, %r13, %r16;
	or.b32  	%r19, %r13, %r17;
	or.b32  	%r20, %r19, 128;
	.loc	1 27 21                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:27:21
	setp.lt.s32 	%p8, %r18, 256;
	setp.lt.s32 	%p9, %r19, 256;
	setp.lt.s32 	%p10, %r20, 256;
	.loc	1 31 19                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:31:19
	shr.s32 	%r21, %r1, 31;
	shr.u32 	%r22, %r21, 28;
	add.s32 	%r23, %r1, %r22;
	.loc	1 30 19                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:30:19
	and.b32  	%r24, %r23, -16;
	sub.s32 	%r25, %r1, %r24;
	.loc	1 32 39                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:32:39
	shl.b32 	%r26, %r1, 8;
	.loc	1 32 35                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:32:35
	add.s32 	%r27, %r18, %r26;
	.loc	1 32 30                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:32:30
	mul.wide.s32 	%rd9, %r27, 4;
	add.s64 	%rd1, %rd6, %rd9;
	.loc	1 32 52                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:32:52
	and.pred  	%p1, %p2, %p8;
	and.pred  	%p6, %p2, %p9;
	and.pred  	%p7, %p2, %p10;
	.loc	1 32 44                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:32:44
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	.loc	1 33 30                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:33:30
	mul.wide.s32 	%rd10, %r25, 4;
	add.s64 	%rd2, %rd7, %rd10;
	.loc	1 33 35                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:33:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r6;
	.loc	1 34 18                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:34:18
	add.f32 	%f4, %f1, %f3;
	add.f32 	%f5, %f2, %f3;
	.loc	1 35 33                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:35:33
	shl.b32 	%r28, %r19, 4;
	shl.b32 	%r29, %r20, 4;
	.loc	1 35 43                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:35:43
	shl.b32 	%r30, %r23, 8;
	and.b32  	%r31, %r30, -4096;
	.loc	1 35 30                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:35:30
	add.s32 	%r32, %r31, %r25;
	.loc	1 35 38                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:35:38
	add.s32 	%r33, %r32, %r28;
	add.s32 	%r34, %r32, %r29;
	.loc	1 35 25                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:35:25
	mul.wide.s32 	%rd11, %r33, 4;
	add.s64 	%rd4, %rd8, %rd11;
	mul.wide.s32 	%rd12, %r34, 4;
	add.s64 	%rd5, %rd8, %rd12;
	.loc	1 35 54                         // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:35:54
	shl.b32 	%r35, %r16, 2;
	mov.u32 	%r36, global_smem;
	add.s32 	%r7, %r36, %r35;
	mov.b32 	%r8, %f4;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	add.s32 	%r9, %r7, 4;
	mov.b32 	%r10, %f5;
	// begin inline asm
	@%p4 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r37, %r17, 2;
	add.s32 	%r38, %r36, %r37;
	ld.shared.u32 	%r11, [%r38];
	ld.shared.u32 	%r12, [%r38+512];
	// begin inline asm
	@%p6 st.global.b32 [ %rd4 + 0 ], { %r11 };
	// end inline asm
	// begin inline asm
	@%p7 st.global.b32 [ %rd5 + 0 ], { %r12 };
	// end inline asm
	.loc	1 35 4                          // cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/f5/cf5r3dr5z7v5vd7s4v4byy2nhllbawuwtkvwr3eyoucppnkzkiwx.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 53
.b8 114
.b8 51
.b8 100
.b8 114
.b8 53
.b8 122
.b8 55
.b8 118
.b8 53
.b8 118
.b8 100
.b8 55
.b8 115
.b8 52
.b8 118
.b8 52
.b8 98
.b8 121
.b8 121
.b8 50
.b8 110
.b8 104
.b8 108
.b8 108
.b8 98
.b8 97
.b8 119
.b8 117
.b8 119
.b8 116
.b8 107
.b8 118
.b8 119
.b8 114
.b8 51
.b8 101
.b8 121
.b8 111
.b8 117
.b8 99
.b8 112
.b8 112
.b8 110
.b8 107
.b8 122
.b8 107
.b8 105
.b8 119
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 53
.b8 0
	}
	.section	.debug_macinfo	{	}
