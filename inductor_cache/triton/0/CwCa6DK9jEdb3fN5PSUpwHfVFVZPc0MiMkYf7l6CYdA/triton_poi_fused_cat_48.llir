; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_48(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 9, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 2, !dbg !12
  %10 = and i32 %9, 508, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %.frozen = freeze i32 %11, !dbg !14
  %12 = sdiv i32 %.frozen, 256, !dbg !14
  %13 = mul i32 %12, 256, !dbg !15
  %.decomposed = sub i32 %.frozen, %13, !dbg !15
  %14 = sdiv i32 %11, 2048, !dbg !16
  %15 = srem i32 %14, 8, !dbg !17
  %16 = srem i32 %12, 8, !dbg !18
  %17 = sdiv i32 %11, 16384, !dbg !19
  %18 = icmp slt i32 %.decomposed, 128, !dbg !20
  %19 = shl nsw i32 %12, 7, !dbg !21
  %20 = add nsw i32 %19, %.decomposed, !dbg !22
  %21 = sext i32 %20 to i64, !dbg !23
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !23
  %23 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %22, i1 %18, i32 0, i1 %18, i32 0, i1 %18, i32 0, i1 %18, i32 0, i1 %18) #1, !dbg !24
  %24 = extractvalue { i32, i32, i32, i32 } %23, 0, !dbg !24
  %25 = extractvalue { i32, i32, i32, i32 } %23, 1, !dbg !24
  %26 = extractvalue { i32, i32, i32, i32 } %23, 2, !dbg !24
  %27 = extractvalue { i32, i32, i32, i32 } %23, 3, !dbg !24
  %28 = bitcast i32 %24 to float, !dbg !24
  %29 = bitcast i32 %25 to float, !dbg !24
  %30 = bitcast i32 %26 to float, !dbg !24
  %31 = bitcast i32 %27 to float, !dbg !24
  %32 = fcmp ogt float %28, 0.000000e+00, !dbg !25
  %33 = fcmp ogt float %29, 0.000000e+00, !dbg !25
  %34 = fcmp ogt float %30, 0.000000e+00, !dbg !25
  %35 = fcmp ogt float %31, 0.000000e+00, !dbg !25
  %36 = fmul float %28, 0x3FB99999A0000000, !dbg !26
  %37 = fmul float %29, 0x3FB99999A0000000, !dbg !26
  %38 = fmul float %30, 0x3FB99999A0000000, !dbg !26
  %39 = fmul float %31, 0x3FB99999A0000000, !dbg !26
  %40 = select i1 %32, float %28, float %36, !dbg !27
  %41 = select i1 %33, float %29, float %37, !dbg !27
  %42 = select i1 %34, float %30, float %38, !dbg !27
  %43 = select i1 %35, float %31, float %39, !dbg !27
  %44 = icmp sgt i32 %.decomposed, 127, !dbg !28
  %45 = sext i32 %15 to i64, !dbg !29
  %46 = getelementptr i64, ptr addrspace(1) %1, i64 %45, !dbg !29
  %47 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %46, i1 %44, i1 %44) #1, !dbg !30
  %48 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %46, i1 %44, i1 %44) #1, !dbg !30
  %49 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %46, i1 %44, i1 %44) #1, !dbg !30
  %50 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %46, i1 %44, i1 %44) #1, !dbg !30
  %51 = lshr i64 %47, 61, !dbg !31
  %52 = and i64 %51, 4, !dbg !31
  %53 = add i64 %52, %47, !dbg !31
  %54 = sext i32 %16 to i64, !dbg !32
  %55 = getelementptr i64, ptr addrspace(1) %1, i64 %54, !dbg !32
  %56 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %55, i1 %44, i1 %44) #1, !dbg !33
  %57 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %55, i1 %44, i1 %44) #1, !dbg !33
  %58 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %55, i1 %44, i1 %44) #1, !dbg !33
  %59 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %55, i1 %44, i1 %44) #1, !dbg !33
  %60 = lshr i64 %56, 61, !dbg !34
  %61 = and i64 %60, 4, !dbg !34
  %62 = add i64 %61, %56, !dbg !34
  %63 = shl nsw i32 %17, 11, !dbg !35
  %64 = sext i32 %63 to i64, !dbg !36
  %.idx = shl i64 %62, 9, !dbg !37
  %65 = getelementptr i8, ptr addrspace(1) %2, i64 %.idx, !dbg !37
  %.idx1 = shl i64 %53, 11, !dbg !37
  %66 = getelementptr i8, ptr addrspace(1) %65, i64 %.idx1, !dbg !37
  %67 = getelementptr float, ptr addrspace(1) %66, i64 %64, !dbg !37
  %68 = sext i32 %.decomposed to i64, !dbg !37
  %69 = getelementptr float, ptr addrspace(1) %67, i64 %68, !dbg !37
  %70 = getelementptr i8, ptr addrspace(1) %69, i64 -512, !dbg !37
  %71 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %70, i1 %44, i32 0, i1 %44, i32 0, i1 %44, i32 0, i1 %44, i32 0, i1 %44) #1, !dbg !38
  %72 = extractvalue { i32, i32, i32, i32 } %71, 0, !dbg !38
  %73 = extractvalue { i32, i32, i32, i32 } %71, 1, !dbg !38
  %74 = extractvalue { i32, i32, i32, i32 } %71, 2, !dbg !38
  %75 = extractvalue { i32, i32, i32, i32 } %71, 3, !dbg !38
  %76 = bitcast i32 %72 to float, !dbg !38
  %77 = bitcast i32 %73 to float, !dbg !38
  %78 = bitcast i32 %74 to float, !dbg !38
  %79 = bitcast i32 %75 to float, !dbg !38
  %80 = fcmp ogt float %76, 0.000000e+00, !dbg !39
  %81 = fcmp ogt float %77, 0.000000e+00, !dbg !39
  %82 = fcmp ogt float %78, 0.000000e+00, !dbg !39
  %83 = fcmp ogt float %79, 0.000000e+00, !dbg !39
  %84 = fmul float %76, 0x3FB99999A0000000, !dbg !40
  %85 = fmul float %77, 0x3FB99999A0000000, !dbg !40
  %86 = fmul float %78, 0x3FB99999A0000000, !dbg !40
  %87 = fmul float %79, 0x3FB99999A0000000, !dbg !40
  %88 = select i1 %80, float %76, float %84, !dbg !41
  %89 = select i1 %81, float %77, float %85, !dbg !41
  %90 = select i1 %82, float %78, float %86, !dbg !41
  %91 = select i1 %83, float %79, float %87, !dbg !41
  %92 = select i1 %18, float %40, float %88, !dbg !42
  %93 = select i1 %18, float %41, float %89, !dbg !42
  %94 = select i1 %18, float %42, float %90, !dbg !42
  %95 = select i1 %18, float %43, float %91, !dbg !42
  %96 = sext i32 %11 to i64, !dbg !43
  %97 = getelementptr float, ptr addrspace(1) %3, i64 %96, !dbg !43
  %98 = bitcast float %92 to i32, !dbg !44
  %99 = bitcast float %93 to i32, !dbg !44
  %100 = bitcast float %94 to i32, !dbg !44
  %101 = bitcast float %95 to i32, !dbg !44
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %98, i32 %99, i32 %100, i32 %101, ptr addrspace(1) %97, i1 true) #1, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjdc4hpy5ao33oqbixu4uwle2t3pjogidcvxi2qwqyz64xfwd7fl.py", directory: "inductor_cache/jd")
!4 = !{ptr @triton_poi_fused_cat_48, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_48, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_48", linkageName: "triton_poi_fused_cat_48", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 21, scope: !7)
!17 = !DILocation(line: 26, column: 29, scope: !7)
!18 = !DILocation(line: 27, column: 28, scope: !7)
!19 = !DILocation(line: 28, column: 19, scope: !7)
!20 = !DILocation(line: 34, column: 18, scope: !7)
!21 = !DILocation(line: 35, column: 34, scope: !7)
!22 = !DILocation(line: 35, column: 40, scope: !7)
!23 = !DILocation(line: 35, column: 30, scope: !7)
!24 = !DILocation(line: 35, column: 46, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 39, column: 18, scope: !7)
!27 = !DILocation(line: 40, column: 33, scope: !7)
!28 = !DILocation(line: 43, column: 20, scope: !7)
!29 = !DILocation(line: 46, column: 31, scope: !7)
!30 = !DILocation(line: 46, column: 36, scope: !7)
!31 = !DILocation(line: 50, column: 35, scope: !7)
!32 = !DILocation(line: 51, column: 31, scope: !7)
!33 = !DILocation(line: 51, column: 36, scope: !7)
!34 = !DILocation(line: 54, column: 35, scope: !7)
!35 = !DILocation(line: 55, column: 60, scope: !7)
!36 = !DILocation(line: 55, column: 55, scope: !7)
!37 = !DILocation(line: 55, column: 31, scope: !7)
!38 = !DILocation(line: 55, column: 81, scope: !7)
!39 = !DILocation(line: 57, column: 20, scope: !7)
!40 = !DILocation(line: 59, column: 20, scope: !7)
!41 = !DILocation(line: 60, column: 35, scope: !7)
!42 = !DILocation(line: 0, scope: !7)
!43 = !DILocation(line: 64, column: 25, scope: !7)
!44 = !DILocation(line: 64, column: 37, scope: !7)
!45 = !DILocation(line: 64, column: 4, scope: !7)
