//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_convolution_native_group_norm_0 // -- Begin function triton_per_fused_convolution_native_group_norm_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_convolution_native_group_norm_0
.visible .entry triton_per_fused_convolution_native_group_norm_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_4,
	.param .u32 triton_per_fused_convolution_native_group_norm_0_param_5,
	.param .u32 triton_per_fused_convolution_native_group_norm_0_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<87>;
	.reg .f32 	%f<44>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd8, [triton_per_fused_convolution_native_group_norm_0_param_0];
	ld.param.u64 	%rd9, [triton_per_fused_convolution_native_group_norm_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:25:21
	setp.lt.s32 	%p1, %r1, 64;
	ld.param.u64 	%rd10, [triton_per_fused_convolution_native_group_norm_0_param_2];
	ld.param.u64 	%rd11, [triton_per_fused_convolution_native_group_norm_0_param_3];
	.loc	1 26 34                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:26:34
	mov.u32 	%r41, %tid.x;
	and.b32  	%r42, %r41, 31;
	ld.param.u64 	%rd12, [triton_per_fused_convolution_native_group_norm_0_param_4];
	shl.b32 	%r43, %r41, 1;
	and.b32  	%r44, %r43, 126;
	and.b32  	%r45, %r41, 63;
	.loc	1 32 19                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:32:19
	shr.s32 	%r46, %r1, 31;
	shr.u32 	%r47, %r46, 28;
	add.s32 	%r48, %r1, %r47;
	and.b32  	%r49, %r48, 2147483632;
	sub.s32 	%r50, %r1, %r49;
	.loc	1 33 43                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:33:43
	shl.b32 	%r51, %r1, 7;
	.loc	1 33 39                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:33:39
	or.b32  	%r52, %r51, %r44;
	.loc	1 33 34                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:33:34
	mul.wide.s32 	%rd13, %r52, 4;
	add.s64 	%rd1, %rd8, %rd13;
	mov.b32 	%r4, 0;
	.loc	1 33 48                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:33:48
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r7, %r9 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r7, %r4;
	@!%p1 mov.u32 %r9, %r4;
	// end inline asm
	shl.b32 	%r53, %r44, 3;
	mov.u32 	%r54, global_smem;
	add.s32 	%r6, %r54, %r53;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	add.s32 	%r8, %r6, 8;
	// begin inline asm
	@%p4 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
	.loc	1 26 34                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:26:34
	shl.b32 	%r55, %r45, 3;
	.loc	1 33 48                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:33:48
	add.s32 	%r56, %r54, %r55;
	ld.shared.f32 	%f1, [%r56];
	ld.shared.f32 	%f2, [%r56+512];
	.loc	1 34 37                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:34:37
	shl.b32 	%r57, %r50, 1;
	.loc	1 34 30                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:34:30
	mul.wide.s32 	%rd14, %r57, 4;
	add.s64 	%rd2, %rd9, %rd14;
	add.s64 	%rd3, %rd2, 4;
	.loc	1 34 42                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:34:42
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r4;
	// end inline asm
	mov.b32 	%f3, %r10;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r12, %r4;
	// end inline asm
	mov.b32 	%f4, %r12;
	.loc	1 35 18                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:35:18
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f7, %f5, %f6;
	selp.f32 	%f8, %f7, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f8;
	shfl.sync.bfly.b32	%r59, %r58, 16, 31, -1;
	mov.b32 	%f9, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f10;
	shfl.sync.bfly.b32	%r61, %r60, 8, 31, -1;
	mov.b32 	%f11, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f12;
	shfl.sync.bfly.b32	%r63, %r62, 4, 31, -1;
	mov.b32 	%f13, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f14;
	shfl.sync.bfly.b32	%r65, %r64, 2, 31, -1;
	mov.b32 	%f15, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f16;
	shfl.sync.bfly.b32	%r67, %r66, 1, 31, -1;
	mov.b32 	%f17, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p10, %r42, 0;
	shr.u32 	%r68, %r41, 3;
	and.b32  	%r69, %r68, 4;
	add.s32 	%r14, %r54, %r69;
	mov.b32 	%r15, %f18;
	// begin inline asm
	@%p10 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p11, %r41, 2;
	shl.b32 	%r70, %r41, 2;
	add.s32 	%r17, %r54, %r70;
	// begin inline asm
	@%p11 ld.shared.b32 %r16, [ %r17 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r16;
	shfl.sync.bfly.b32	%r71, %r16, 1, 31, -1;
	mov.b32 	%f20, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r72, %r41, 1;
	setp.eq.b32 	%p22, %r72, 1;
	not.pred 	%p23, %p22;
	and.pred  	%p12, %p11, %p23;
	mov.b32 	%r19, %f21;
	// begin inline asm
	@%p12 st.shared.b32 [ %r17 + 0 ], %r19;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 43 19                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:43:19
	ld.shared.u32 	%r21, [global_smem];
	mov.b32 	%r22, 1124073472;
	// begin inline asm
	div.full.f32 %r39, %r21, %r22;
	// end inline asm
	mov.b32 	%f22, %r39;
	.loc	1 44 19                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:44:19
	sub.f32 	%f23, %f5, %f22;
	sub.f32 	%f24, %f6, %f22;
	.loc	1 45 20                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:45:20
	mul.f32 	%f25, %f24, %f24;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f26, %f23, %f23, %f25;
	selp.f32 	%f27, %f26, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f27;
	shfl.sync.bfly.b32	%r74, %r73, 16, 31, -1;
	mov.b32 	%f28, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f29;
	shfl.sync.bfly.b32	%r76, %r75, 8, 31, -1;
	mov.b32 	%f30, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f31;
	shfl.sync.bfly.b32	%r78, %r77, 4, 31, -1;
	mov.b32 	%f32, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f33;
	shfl.sync.bfly.b32	%r80, %r79, 2, 31, -1;
	mov.b32 	%f34, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f35;
	shfl.sync.bfly.b32	%r82, %r81, 1, 31, -1;
	mov.b32 	%f36, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f37;
	// begin inline asm
	@%p10 st.shared.b32 [ %r14 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p11 ld.shared.b32 %r25, [ %r17 + 0 ];
	// end inline asm
	mov.b32 	%f38, %r25;
	shfl.sync.bfly.b32	%r83, %r25, 1, 31, -1;
	mov.b32 	%f39, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f40;
	// begin inline asm
	@%p12 st.shared.b32 [ %r17 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 50 20                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:50:20
	ld.shared.u32 	%r30, [global_smem];
	// begin inline asm
	div.full.f32 %r29, %r30, %r22;
	// end inline asm
	mov.b32 	%f41, %r29;
	.loc	1 52 20                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:52:20
	add.f32 	%f42, %f41, 0f3727C5AC;
	.loc	1 53 28                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:53:28
	rsqrt.approx.ftz.f32 	%f43, %f42;
	.loc	1 54 48                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:54:48
	bar.sync 	0;
	shl.b32 	%r84, %r45, 2;
	sub.s32 	%r32, %r56, %r84;
	mov.b32 	%r33, %f5;
	// begin inline asm
	@%p4 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	add.s32 	%r34, %r32, 256;
	mov.b32 	%r35, %f6;
	// begin inline asm
	@%p4 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r85, %r44, 2;
	sub.s32 	%r86, %r6, %r85;
	ld.shared.v2.u32 	{%r36, %r37}, [%r86];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r36, %r37 };
	// end inline asm
	.loc	1 55 25                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:55:25
	mul.wide.s32 	%rd15, %r1, 4;
	add.s64 	%rd5, %rd12, %rd15;
	.loc	1 55 37                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:55:37
	setp.eq.s32 	%p24, %r45, 0;
	mov.b32 	%r38, %f43;
	and.pred  	%p19, %p24, %p1;
	// begin inline asm
	@%p19 st.global.b32 [ %rd5 + 0 ], { %r38 };
	// end inline asm
	.loc	1 56 25                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:56:25
	add.s64 	%rd6, %rd10, %rd15;
	.loc	1 56 37                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:56:37
	// begin inline asm
	@%p19 st.global.b32 [ %rd6 + 0 ], { %r39 };
	// end inline asm
	.loc	1 57 25                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:57:25
	add.s64 	%rd7, %rd11, %rd15;
	.loc	1 57 37                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:57:37
	// begin inline asm
	@%p19 st.global.b32 [ %rd7 + 0 ], { %r30 };
	// end inline asm
	.loc	1 57 4                          // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:57:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/em/cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 217                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 109
.b8 102
.b8 120
.b8 118
.b8 117
.b8 116
.b8 107
.b8 115
.b8 121
.b8 100
.b8 50
.b8 101
.b8 102
.b8 112
.b8 111
.b8 53
.b8 113
.b8 115
.b8 99
.b8 104
.b8 109
.b8 106
.b8 98
.b8 114
.b8 97
.b8 115
.b8 53
.b8 108
.b8 107
.b8 117
.b8 111
.b8 116
.b8 100
.b8 105
.b8 103
.b8 51
.b8 100
.b8 106
.b8 108
.b8 119
.b8 99
.b8 99
.b8 108
.b8 52
.b8 104
.b8 107
.b8 120
.b8 120
.b8 105
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x33 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x96:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xab:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
