//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__softmax_add_3 // -- Begin function triton_per_fused__softmax_add_3
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 105, 114, 47, 99, 105, 114, 50, 111, 103, 113, 120, 100, 110, 102, 99, 104, 55, 106, 103, 104, 103, 51, 109, 104, 102, 113, 110, 52, 116, 122, 119, 111, 118, 111, 118, 98, 116, 50, 53, 112, 100, 98, 100, 99, 108, 53, 104, 116, 117, 97, 52, 118, 106, 106, 108, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[37] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 53, 32, 60, 32, 51, 52, 51};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__softmax_add_3
.visible .entry triton_per_fused__softmax_add_3(
	.param .u64 .ptr .global .align 1 triton_per_fused__softmax_add_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__softmax_add_3_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__softmax_add_3_param_2,
	.param .u32 triton_per_fused__softmax_add_3_param_3,
	.param .u32 triton_per_fused__softmax_add_3_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<60>;
	.reg .b16 	%rs<13>;
	.reg .b32 	%r<172>;
	.reg .f32 	%f<53>;
	.reg .b64 	%rd<46>;
	.loc	1 19 0                          // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_per_fused__softmax_add_3_param_0];
	ld.param.u64 	%rd15, [triton_per_fused__softmax_add_3_param_1];
$L__tmp0:
	.loc	1 23 28                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:23:28
	// begin inline asm
	mov.u32 %r18, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:23:33
	shl.b32 	%r1, %r18, 3;
	.loc	1 24 44                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:24:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r35, %r2, 3, 3;
	.loc	1 24 23                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:24:23
	or.b32  	%r3, %r1, %r35;
	.loc	1 25 21                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:25:21
	setp.gt.s32 	%p16, %r3, 511;
	setp.lt.s32 	%p15, %r3, 512;
	.loc	1 26 34                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:26:34
	shl.b32 	%r4, %r2, 2;
	and.b32  	%r36, %r4, 28;
	.loc	1 32 21                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:32:21
	shr.s32 	%r38, %r3, 31;
	shr.u32 	%r39, %r38, 27;
	add.s32 	%r40, %r3, %r39;
	.loc	1 31 19                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:31:19
	and.b32  	%r41, %r40, 134217696;
	sub.s32 	%r42, %r3, %r41;
	.loc	1 33 42                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:33:42
	shl.b32 	%r43, %r3, 5;
	.loc	1 33 39                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:33:39
	or.b32  	%r44, %r43, %r36;
	.loc	1 33 34                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:33:34
	mul.wide.s32 	%rd16, %r44, 4;
	add.s64 	%rd7, %rd14, %rd16;
	mov.b32 	%r23, 0;
	.loc	1 33 47                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:33:47
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p15 ld.global.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd7 + 0 ];
	@!%p15 mov.u32 %r19, %r23;
	@!%p15 mov.u32 %r20, %r23;
	@!%p15 mov.u32 %r21, %r23;
	@!%p15 mov.u32 %r22, %r23;
	// end inline asm
	shl.b32 	%r45, %r2, 5;
	and.b32  	%r6, %r45, 224;
	or.b32  	%r7, %r6, %r35;
	shr.u32 	%r47, %r6, 3;
	add.s32 	%r8, %r47, %r7;
	shl.b32 	%r48, %r8, 2;
	mov.u32 	%r49, global_smem;
	add.s32 	%r27, %r49, %r48;
	mov.pred 	%p9, -1;
	// begin inline asm
	@%p9 st.shared.b32 [ %r27 + 0 ], %r19;
	// end inline asm
	or.b32  	%r50, %r6, 8;
	shr.u32 	%r51, %r50, 3;
	add.s32 	%r10, %r51, %r7;
	shl.b32 	%r52, %r10, 2;
	add.s32 	%r53, %r49, %r52;
	add.s32 	%r29, %r53, 32;
	// begin inline asm
	@%p9 st.shared.b32 [ %r29 + 0 ], %r20;
	// end inline asm
	or.b32  	%r54, %r6, 16;
	shr.u32 	%r55, %r54, 3;
	add.s32 	%r11, %r55, %r7;
	shl.b32 	%r56, %r11, 2;
	add.s32 	%r57, %r49, %r56;
	add.s32 	%r31, %r57, 64;
	// begin inline asm
	@%p9 st.shared.b32 [ %r31 + 0 ], %r21;
	// end inline asm
	or.b32  	%r58, %r6, 24;
	shr.u32 	%r59, %r58, 3;
	add.s32 	%r12, %r59, %r7;
	shl.b32 	%r60, %r12, 2;
	add.s32 	%r61, %r49, %r60;
	add.s32 	%r33, %r61, 96;
	// begin inline asm
	@%p9 st.shared.b32 [ %r33 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	.loc	1 34 38                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:34:38
	shl.b32 	%r75, %r42, 5;
	.loc	1 34 35                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:34:35
	or.b32  	%r76, %r75, %r36;
	.loc	1 34 30                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:34:30
	mul.wide.s32 	%rd17, %r76, 8;
	add.s64 	%rd10, %rd15, %rd17;
	add.s64 	%rd13, %rd10, 16;
	.loc	1 34 43                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:34:43
	// begin inline asm
	mov.u64 %rd8, 0x0;
	mov.u64 %rd9, 0x0;
	@%p15 ld.global.L1::evict_last.v2.b64 { %rd8, %rd9 }, [ %rd10 + 0 ];
	@!%p15 mov.u64 %rd8, 0x0;
	@!%p15 mov.u64 %rd9, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	mov.u64 %rd12, 0x0;
	@%p15 ld.global.L1::evict_last.v2.b64 { %rd11, %rd12 }, [ %rd13 + 0 ];
	@!%p15 mov.u64 %rd11, 0x0;
	@!%p15 mov.u64 %rd12, 0x0;
	// end inline asm
	.loc	1 36 18                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:36:18
	add.s64 	%rd18, %rd11, 343;
	add.s64 	%rd19, %rd12, 343;
	add.s64 	%rd20, %rd8, 343;
	add.s64 	%rd21, %rd9, 343;
	.loc	1 37 18                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:37:18
	setp.lt.s64 	%p17, %rd11, 0;
	setp.lt.s64 	%p18, %rd12, 0;
	setp.lt.s64 	%p19, %rd8, 0;
	setp.lt.s64 	%p20, %rd9, 0;
	.loc	1 38 32                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:38:32
	selp.b64 	%rd3, %rd21, %rd9, %p20;
	selp.b64 	%rd2, %rd20, %rd8, %p19;
	selp.b64 	%rd5, %rd19, %rd12, %p18;
	selp.b64 	%rd4, %rd18, %rd11, %p17;
	.loc	1 39 37                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:39:37
	setp.gt.u64 	%p21, %rd4, 342;
	selp.u16 	%rs1, 1, 0, %p21;
	shl.b16 	%rs2, %rs1, 2;
	setp.gt.u64 	%p22, %rd5, 342;
	selp.u16 	%rs3, -1, 0, %p22;
	shl.b16 	%rs4, %rs3, 3;
	or.b16  	%rs5, %rs4, %rs2;
	setp.gt.u64 	%p23, %rd2, 342;
	selp.u16 	%rs6, 1, 0, %p23;
	setp.gt.u64 	%p24, %rd3, 342;
	selp.u16 	%rs7, -1, 0, %p24;
	shl.b16 	%rs8, %rs7, 1;
	or.b16  	%rs9, %rs6, %rs8;
	and.b16  	%rs10, %rs9, 3;
	or.b16  	%rs11, %rs10, %rs5;
	.loc	1 39 62                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:39:62
	and.b16  	%rs12, %rs11, 15;
	setp.eq.s16 	%p25, %rs12, 0;
	or.pred  	%p26, %p16, %p25;
	@%p26 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 62                          // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:0:62
	ld.param.u64 	%rd6, [triton_per_fused__softmax_add_3_param_2];
	shr.s32 	%r5, %r40, 5;
	and.b32  	%r46, %r2, 63;
	add.s32 	%r13, %r35, %r46;
	shl.b32 	%r62, %r13, 2;
	add.s32 	%r14, %r49, %r62;
	ld.shared.f32 	%f1, [%r14];
	or.b32  	%r63, %r46, 64;
	shr.u32 	%r64, %r63, 3;
	add.s32 	%r15, %r64, %r46;
	shl.b32 	%r65, %r15, 2;
	add.s32 	%r66, %r49, %r65;
	ld.shared.f32 	%f2, [%r66+256];
	or.b32  	%r67, %r46, 128;
	shr.u32 	%r68, %r67, 3;
	add.s32 	%r16, %r68, %r46;
	shl.b32 	%r69, %r16, 2;
	add.s32 	%r70, %r49, %r69;
	ld.shared.f32 	%f3, [%r70+512];
	or.b32  	%r71, %r46, 192;
	shr.u32 	%r72, %r71, 3;
	add.s32 	%r17, %r72, %r46;
	shl.b32 	%r73, %r17, 2;
	add.s32 	%r74, %r49, %r73;
	ld.shared.f32 	%f4, [%r74+768];
	.loc	1 24 44                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:24:44
	and.b32  	%r121, %r2, 7;
	.loc	1 32 27                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:32:27
	shr.u32 	%r122, %r5, 30;
	add.s32 	%r123, %r5, %r122;
	and.b32  	%r124, %r123, -4;
	sub.s32 	%r125, %r5, %r124;
	.loc	1 24 23                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:24:23
	or.b32  	%r126, %r1, %r121;
	.loc	1 25 21                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:25:21
	setp.lt.s32 	%p31, %r126, 512;
	.loc	1 24 44                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:24:44
	and.b32  	%r127, %r2, 24;
	.loc	1 39 62                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:39:62
	bar.sync 	0;
	.loc	1 40 30                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:40:30
	shl.b64 	%rd31, %rd2, 4;
	add.s64 	%rd32, %rd6, %rd31;
	mul.wide.s32 	%rd33, %r125, 4;
	add.s64 	%rd22, %rd32, %rd33;
	shl.b64 	%rd34, %rd3, 4;
	add.s64 	%rd35, %rd6, %rd34;
	add.s64 	%rd23, %rd35, %rd33;
	shl.b64 	%rd36, %rd4, 4;
	add.s64 	%rd37, %rd6, %rd36;
	add.s64 	%rd24, %rd37, %rd33;
	shl.b64 	%rd38, %rd5, 4;
	add.s64 	%rd39, %rd6, %rd38;
	add.s64 	%rd25, %rd39, %rd33;
	.loc	1 40 44                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:40:44
	bar.sync 	0;
	add.s32 	%r77, %r27, %r48;
	// begin inline asm
	@%p9 st.shared.b64 [ %r77 + 0 ], %rd22;
	// end inline asm
	shl.b32 	%r129, %r10, 3;
	add.s32 	%r131, %r49, %r129;
	add.s32 	%r78, %r131, 64;
	// begin inline asm
	@%p9 st.shared.b64 [ %r78 + 0 ], %rd23;
	// end inline asm
	shl.b32 	%r132, %r11, 3;
	add.s32 	%r133, %r49, %r132;
	add.s32 	%r79, %r133, 128;
	// begin inline asm
	@%p9 st.shared.b64 [ %r79 + 0 ], %rd24;
	// end inline asm
	shl.b32 	%r134, %r12, 3;
	add.s32 	%r135, %r49, %r134;
	add.s32 	%r80, %r135, 192;
	// begin inline asm
	@%p9 st.shared.b64 [ %r80 + 0 ], %rd25;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r137, %r14, %r62;
	ld.shared.u64 	%rd26, [%r137];
	shl.b32 	%r138, %r15, 3;
	add.s32 	%r139, %r49, %r138;
	ld.shared.u64 	%rd27, [%r139+512];
	shl.b32 	%r140, %r16, 3;
	add.s32 	%r141, %r49, %r140;
	ld.shared.u64 	%rd28, [%r141+1024];
	shl.b32 	%r142, %r17, 3;
	add.s32 	%r143, %r49, %r142;
	ld.shared.u64 	%rd29, [%r143+1536];
	// begin inline asm
	mov.u32 %r81, 0x0;
	@%p31 ld.global.L1::evict_last.b32 { %r81 }, [ %rd26 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r81;
	// begin inline asm
	mov.u32 %r82, 0x0;
	@%p31 ld.global.L1::evict_last.b32 { %r82 }, [ %rd27 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r82;
	// begin inline asm
	mov.u32 %r83, 0x0;
	@%p31 ld.global.L1::evict_last.b32 { %r83 }, [ %rd28 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r83;
	// begin inline asm
	mov.u32 %r84, 0x0;
	@%p31 ld.global.L1::evict_last.b32 { %r84 }, [ %rd29 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r84;
	.loc	1 41 18                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:41:18
	add.f32 	%f17, %f1, %f13;
	add.f32 	%f18, %f2, %f14;
	add.f32 	%f19, %f3, %f15;
	add.f32 	%f20, %f4, %f16;
	.loc	1 43 34                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:43:34
	selp.f32 	%f21, %f17, 0fFF800000, %p31;
	selp.f32 	%f22, %f18, 0fFF800000, %p31;
	selp.f32 	%f23, %f19, 0fFF800000, %p31;
	selp.f32 	%f24, %f20, 0fFF800000, %p31;
$L__tmp1:
	.loc	2 131 29                        // triton_helpers.py:131:29
	bar.sync 	0;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p46, %f21, %f22;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p47, %f21, %f21;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f25, %f21, %f22, %p46;
	selp.f32 	%f26, %f21, %f25, %p47;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p48, %f26, %f23;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p49, %f26, %f26;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f27, %f26, %f23, %p49;
	selp.f32 	%f28, %f26, %f27, %p48;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p50, %f28, %f24;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p51, %f28, %f28;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f29, %f28, %f24, %p51;
	selp.f32 	%f30, %f28, %f29, %p50;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r144, %f30;
	shfl.sync.bfly.b32	%r145, %r144, 16, 31, -1;
	mov.b32 	%f31, %r145;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p52, %f30, %f31;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p53, %f30, %f30;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f32, %f30, %f31, %p53;
	selp.f32 	%f33, %f30, %f32, %p52;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r146, %f33;
	shfl.sync.bfly.b32	%r147, %r146, 8, 31, -1;
	mov.b32 	%f34, %r147;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p54, %f33, %f34;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p55, %f33, %f33;
	.loc	2 131 29                        // triton_helpers.py:131:29
	setp.eq.s32 	%p35, %r127, 0;
	shr.u32 	%r148, %r2, 3;
	and.b32  	%r149, %r148, 4;
	shl.b32 	%r150, %r121, 3;
	or.b32  	%r151, %r150, %r149;
	add.s32 	%r85, %r49, %r151;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r152, %r146, %r147, %p55;
	selp.b32 	%r86, %r146, %r152, %p54;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p35 st.shared.b32 [ %r85 + 0 ], %r86;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p36, %r2, 16;
	add.s32 	%r88, %r49, %r4;
	// begin inline asm
	@%p36 ld.shared.b32 %r87, [ %r88 + 0 ];
	// end inline asm
	mov.b32 	%f35, %r87;
	shfl.sync.bfly.b32	%r154, %r87, 1, 31, -1;
	mov.b32 	%f36, %r154;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p56, %f35, %f36;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p57, %f35, %f35;
	.loc	2 131 29                        // triton_helpers.py:131:29
	and.b32  	%r155, %r2, 1;
	setp.eq.b32 	%p58, %r155, 1;
	not.pred 	%p59, %p58;
	and.pred  	%p37, %p36, %p59;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r156, %r87, %r154, %p56;
	selp.b32 	%r90, %r87, %r156, %p57;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p37 st.shared.b32 [ %r88 + 0 ], %r90;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r157, %r49, %r150;
	ld.shared.f32 	%f37, [%r157];
$L__tmp2:
	.loc	1 45 19                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:45:19
	sub.f32 	%f38, %f17, %f37;
	sub.f32 	%f39, %f18, %f37;
	sub.f32 	%f40, %f19, %f37;
	sub.f32 	%f41, %f20, %f37;
	.loc	1 46 24                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:46:24
	mul.f32 	%f6, %f38, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f39, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	mul.f32 	%f10, %f40, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f41, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
$L__tmp3:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f42, %f5, %f7;
	add.f32 	%f43, %f42, %f9;
	add.f32 	%f44, %f43, %f11;
	selp.f32 	%f45, %f44, 0f00000000, %p31;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r158, %f45;
	shfl.sync.bfly.b32	%r159, %r158, 16, 31, -1;
	mov.b32 	%f46, %r159;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r160, %f47;
	shfl.sync.bfly.b32	%r161, %r160, 8, 31, -1;
	mov.b32 	%f48, %r161;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r92, %f49;
	// begin inline asm
	@%p35 st.shared.b32 [ %r85 + 0 ], %r92;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p36 ld.shared.b32 %r93, [ %r88 + 0 ];
	// end inline asm
	mov.b32 	%f50, %r93;
	shfl.sync.bfly.b32	%r162, %r93, 1, 31, -1;
	mov.b32 	%f51, %r162;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f52;
	// begin inline asm
	@%p37 st.shared.b32 [ %r88 + 0 ], %r96;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 50 20                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:50:20
	mov.b32 	%r98, %f5;
	ld.shared.u32 	%r99, [%r157];
	// begin inline asm
	div.full.f32 %r110, %r98, %r99;
	// end inline asm
	mov.b32 	%r101, %f7;
	// begin inline asm
	div.full.f32 %r112, %r101, %r99;
	// end inline asm
	mov.b32 	%r104, %f9;
	// begin inline asm
	div.full.f32 %r114, %r104, %r99;
	// end inline asm
	mov.b32 	%r107, %f11;
	// begin inline asm
	div.full.f32 %r116, %r107, %r99;
	// end inline asm
	.loc	1 51 48                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:51:48
	bar.sync 	0;
	and.b32  	%r163, %r4, 252;
	shr.u32 	%r164, %r6, 1;
	add.s32 	%r165, %r49, %r164;
	shl.b32 	%r166, %r7, 2;
	add.s32 	%r109, %r165, %r166;
	// begin inline asm
	@%p9 st.shared.b32 [ %r109 + 0 ], %r110;
	// end inline asm
	add.s32 	%r111, %r109, 32;
	// begin inline asm
	@%p9 st.shared.b32 [ %r111 + 0 ], %r112;
	// end inline asm
	add.s32 	%r113, %r109, 64;
	// begin inline asm
	@%p9 st.shared.b32 [ %r113 + 0 ], %r114;
	// end inline asm
	add.s32 	%r115, %r109, 96;
	// begin inline asm
	@%p9 st.shared.b32 [ %r115 + 0 ], %r116;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r167, %r4, 1;
	and.b32  	%r168, %r167, 112;
	add.s32 	%r169, %r49, %r168;
	shl.b32 	%r170, %r163, 2;
	add.s32 	%r171, %r169, %r170;
	ld.shared.v4.u32 	{%r117, %r118, %r119, %r120}, [%r171];
	// begin inline asm
	@%p15 st.global.v4.b32 [ %rd7 + 0 ], { %r117, %r118, %r119, %r120 };
	// end inline asm
	.loc	1 51 4                          // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:51:4
	ret;
$L__BB0_1:
	.loc	1 39 62                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:39:62
	mov.u64 	%rd40, assertMessage_0;
	cvta.global.u64 	%rd41, %rd40;
	mov.u64 	%rd42, assertFile_0;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, assertFunc_0;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd41;
	.param .b64 param1;
	st.param.b64 	[param1], %rd43;
	.param .b32 param2;
	st.param.b32 	[param2], 39;
	.param .b64 param3;
	st.param.b64 	[param3], %rd45;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 200                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 114
.b8 50
.b8 111
.b8 103
.b8 113
.b8 120
.b8 100
.b8 110
.b8 102
.b8 99
.b8 104
.b8 55
.b8 106
.b8 103
.b8 104
.b8 103
.b8 51
.b8 109
.b8 104
.b8 102
.b8 113
.b8 110
.b8 52
.b8 116
.b8 122
.b8 119
.b8 111
.b8 118
.b8 111
.b8 118
.b8 98
.b8 116
.b8 50
.b8 53
.b8 112
.b8 100
.b8 98
.b8 100
.b8 99
.b8 108
.b8 53
.b8 104
.b8 116
.b8 117
.b8 97
.b8 52
.b8 118
.b8 106
.b8 106
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x22 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x85:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9a:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 39                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
