; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_add_repeat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 18432, !dbg !14
  %.frozen = freeze i32 %8, !dbg !15
  %10 = sdiv i32 %.frozen, 36, !dbg !15
  %11 = srem i32 %10, 128, !dbg !16
  %12 = mul i32 %10, 36, !dbg !17
  %.decomposed = sub i32 %.frozen, %12, !dbg !17
  %13 = sext i32 %8 to i64, !dbg !18
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !18
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 %9) #4, !dbg !19
  %16 = sext i32 %11 to i64, !dbg !20
  %17 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !20
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %9) #4, !dbg !21
  %19 = shl nsw i32 %11, 1, !dbg !22
  %20 = sitofp i32 %19 to float, !dbg !23
  %21 = fmul float %20, 0xBFB26BB1C0000000, !dbg !24
  %22 = fmul float %21, 0x3FF7154760000000, !dbg !25
  %23 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %22) #4, !dbg !25
  %24 = sitofp i32 %.decomposed to float, !dbg !26
  %25 = fmul float %23, %24, !dbg !27
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !28
  %26 = fmul float %25, 0x3FE45F3060000000, !dbg !28
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i = icmp eq i32 %27, 0, !dbg !28
  %28 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %26) #4, !dbg !28
  %29 = tail call i32 @llvm.nvvm.f2i.rn(float %26) #4, !dbg !28
  %.01.i = select i1 %.not.i, i32 %29, i32 %28, !dbg !28
  %30 = sitofp i32 %.01.i to float, !dbg !28
  %31 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i = icmp eq i32 %31, 0, !dbg !28
  %32 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %30, float 0xBFF921FB40000000, float %25) #4, !dbg !28
  %33 = tail call float @llvm.nvvm.fma.rn.f(float %30, float 0xBFF921FB40000000, float %25) #4, !dbg !28
  %.02.i = select i1 %.not15.i, float %33, float %32, !dbg !28
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i = icmp eq i32 %34, 0, !dbg !28
  %35 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %30, float 0xBE74442D00000000, float %.02.i) #4, !dbg !28
  %36 = tail call float @llvm.nvvm.fma.rn.f(float %30, float 0xBE74442D00000000, float %.02.i) #4, !dbg !28
  %.03.i = select i1 %.not16.i, float %36, float %35, !dbg !28
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i = icmp eq i32 %37, 0, !dbg !28
  %38 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %30, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !28
  %39 = tail call float @llvm.nvvm.fma.rn.f(float %30, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !28
  %.04.i = select i1 %.not17.i, float %39, float %38, !dbg !28
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i = icmp eq i32 %40, 0, !dbg !28
  %41 = tail call float @llvm.nvvm.fabs.ftz.f(float %25) #4, !dbg !28
  %42 = tail call float @llvm.nvvm.fabs.f(float %25) #4, !dbg !28
  %.06.i = select i1 %.not18.i, float %42, float %41, !dbg !28
  %43 = fcmp ult float %.06.i, 1.056150e+05, !dbg !28
  br i1 %43, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !28

__nv_isinff.exit.i.i.i:                           ; preds = %3
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i = icmp eq i32 %44, 0, !dbg !28
  %.07.i = select i1 %.not19.i, float %42, float %41, !dbg !28
  %45 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !28
  br i1 %45, label %__nv_fmul_rn.exit.i.i.i, label %49, !dbg !28

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i = icmp eq i32 %46, 0, !dbg !28
  %47 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %25, float 0.000000e+00) #4, !dbg !28
  %48 = tail call float @llvm.nvvm.mul.rn.f(float %25, float 0.000000e+00) #4, !dbg !28
  %.08.i = select i1 %.not27.i, float %48, float %47, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !28

49:                                               ; preds = %__nv_isinff.exit.i.i.i
  %50 = bitcast float %25 to i32, !dbg !28
  %51 = lshr i32 %50, 23, !dbg !28
  %52 = and i32 %51, 224, !dbg !28
  %53 = add nsw i32 %52, -128, !dbg !28
  %54 = shl i32 %50, 8, !dbg !28
  %55 = or i32 %54, -2147483648, !dbg !28
  %56 = lshr exact i32 %53, 5, !dbg !28
  br label %57, !dbg !28

57:                                               ; preds = %49, %57
  %indvars.iv = phi i64 [ 0, %49 ], [ %indvars.iv.next, %57 ]
  %hi.i.i.i.0.i54 = phi i32 [ 0, %49 ], [ %62, %57 ]
  %58 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !28
  %59 = load i32, ptr addrspace(1) %58, align 4, !dbg !28
  %60 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %59, i32 %55, i32 %hi.i.i.i.0.i54) #5, !dbg !28, !srcloc !29
  %61 = extractvalue { i32, i32 } %60, 0, !dbg !28
  %62 = extractvalue { i32, i32 } %60, 1, !dbg !28
  %63 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !28
  store i32 %61, ptr %63, align 4, !dbg !28
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !28
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !28
  br i1 %exitcond.not, label %64, label %57, !dbg !28, !llvm.loop !30

64:                                               ; preds = %57
  %65 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !28
  store i32 %62, ptr %65, align 4, !dbg !28
  %66 = and i32 %51, 31, !dbg !28
  %67 = sub nsw i32 6, %56, !dbg !28
  %68 = sext i32 %67 to i64, !dbg !28
  %69 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %68, !dbg !28
  %70 = load i32, ptr %69, align 4, !dbg !28
  %71 = sub nsw i32 5, %56, !dbg !28
  %72 = sext i32 %71 to i64, !dbg !28
  %73 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %72, !dbg !28
  %74 = load i32, ptr %73, align 4, !dbg !28
  %.not20.i = icmp eq i32 %66, 0, !dbg !28
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %75, !dbg !28

75:                                               ; preds = %64
  %76 = sub nsw i32 4, %56, !dbg !28
  %77 = sub nuw nsw i32 32, %66, !dbg !28
  %78 = shl i32 %70, %66, !dbg !28
  %79 = lshr i32 %74, %77, !dbg !28
  %80 = add i32 %79, %78, !dbg !28
  %81 = shl i32 %74, %66, !dbg !28
  %82 = sext i32 %76 to i64, !dbg !28
  %83 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %82, !dbg !28
  %84 = load i32, ptr %83, align 4, !dbg !28
  %85 = lshr i32 %84, %77, !dbg !28
  %86 = add i32 %85, %81, !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %75, %64
  %hi.i.i.i.1.i = phi i32 [ %80, %75 ], [ %70, %64 ], !dbg !28
  %lo.i.i.i.0.i = phi i32 [ %86, %75 ], [ %74, %64 ], !dbg !28
  %87 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !28
  %88 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !28
  %89 = shl i32 %lo.i.i.i.0.i, 2, !dbg !28
  %90 = lshr i32 %88, 31, !dbg !28
  %91 = add nuw nsw i32 %90, %87, !dbg !28
  %92 = sub nsw i32 0, %91, !dbg !28
  %.not2123.i = icmp slt i32 %50, 0, !dbg !28
  %spec.select.i = select i1 %.not2123.i, i32 %92, i32 %91, !dbg !28
  %93 = xor i32 %88, %50, !dbg !28
  %.lobit.i = ashr i32 %88, 31, !dbg !28
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %88, !dbg !28
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %89, !dbg !28
  %94 = zext i32 %hi.i.i.i.2.i to i64, !dbg !28
  %95 = shl nuw i64 %94, 32, !dbg !28
  %96 = zext i32 %lo.i.i.i.1.i to i64, !dbg !28
  %97 = or disjoint i64 %95, %96, !dbg !28
  %98 = sitofp i64 %97 to double, !dbg !28
  %99 = fmul double %98, 0x3BF921FB54442D19, !dbg !28
  %100 = fptrunc double %99 to float, !dbg !28
  %101 = fneg float %100, !dbg !28
  %.not2526.i = icmp slt i32 %93, 0, !dbg !28
  %r.i.i.i.0.i = select i1 %.not2526.i, float %101, float %100, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !28

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %3
  %i.i.1.i = phi i32 [ %.01.i, %3 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !28
  %t.i.i.1.i = phi float [ %.04.i, %3 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !28
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i = icmp eq i32 %102, 0, !dbg !28
  %103 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !28
  %104 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !28
  %.011.i = select i1 %.not28.i, float %104, float %103, !dbg !28
  %105 = and i32 %i.i.1.i, 1, !dbg !28
  %.not29.i = icmp eq i32 %105, 0, !dbg !28
  %106 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !28
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i = icmp eq i32 %107, 0, !dbg !28
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %106, float 0.000000e+00) #4, !dbg !28
  %109 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %106, float 0.000000e+00) #4, !dbg !28
  %.012.i = select i1 %.not30.i, float %109, float %108, !dbg !28
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !28

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i = icmp eq i32 %110, 0, !dbg !28
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !28
  %112 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i = select i1 %.not31.i, float %112, float %111, !dbg !28
  br label %__internal_fmad.exit2.i.i.i, !dbg !28

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %113 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !28
  %114 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !28
  %115 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !28
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i = icmp eq i32 %116, 0, !dbg !28
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %115, float %.011.i, float %114) #4, !dbg !28
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %115, float %.011.i, float %114) #4, !dbg !28
  %.010.i = select i1 %.not32.i, float %118, float %117, !dbg !28
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i = icmp eq i32 %119, 0, !dbg !28
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %113) #4, !dbg !28
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %113) #4, !dbg !28
  %.09.i = select i1 %.not33.i, float %121, float %120, !dbg !28
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i = icmp eq i32 %122, 0, !dbg !28
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %106) #4, !dbg !28
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %106) #4, !dbg !28
  %.05.i = select i1 %.not34.i, float %124, float %123, !dbg !28
  %125 = and i32 %i.i.1.i, 2, !dbg !28
  %.not35.i = icmp eq i32 %125, 0, !dbg !28
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !28

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i = icmp eq i32 %126, 0, !dbg !28
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i = select i1 %.not36.i, float %128, float %127, !dbg !28
  br label %__nv_sinf.exit, !dbg !28

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !28
  %129 = add nsw i32 %19, -128, !dbg !32
  %130 = sitofp i32 %129 to float, !dbg !33
  %131 = fmul float %130, 0xBFB26BB1C0000000, !dbg !34
  %132 = fmul float %131, 0x3FF7154760000000, !dbg !35
  %133 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %132) #4, !dbg !35
  %134 = fmul float %133, %24, !dbg !36
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !37
  %135 = fmul float %134, 0x3FE45F3060000000, !dbg !37
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not.i2 = icmp eq i32 %136, 0, !dbg !37
  %137 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %135) #4, !dbg !37
  %138 = tail call i32 @llvm.nvvm.f2i.rn(float %135) #4, !dbg !37
  %.01.i3 = select i1 %.not.i2, i32 %138, i32 %137, !dbg !37
  %139 = sitofp i32 %.01.i3 to float, !dbg !37
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not15.i4 = icmp eq i32 %140, 0, !dbg !37
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float 0xBFF921FB40000000, float %134) #4, !dbg !37
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %139, float 0xBFF921FB40000000, float %134) #4, !dbg !37
  %.02.i5 = select i1 %.not15.i4, float %142, float %141, !dbg !37
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not16.i6 = icmp eq i32 %143, 0, !dbg !37
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !37
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %139, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !37
  %.03.i7 = select i1 %.not16.i6, float %145, float %144, !dbg !37
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not17.i8 = icmp eq i32 %146, 0, !dbg !37
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !37
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %139, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !37
  %.04.i9 = select i1 %.not17.i8, float %148, float %147, !dbg !37
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not18.i10 = icmp eq i32 %149, 0, !dbg !37
  %150 = tail call float @llvm.nvvm.fabs.ftz.f(float %134) #4, !dbg !37
  %151 = tail call float @llvm.nvvm.fabs.f(float %134) #4, !dbg !37
  %.06.i11 = select i1 %.not18.i10, float %151, float %150, !dbg !37
  %152 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !37
  br i1 %152, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !37

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not19.i13 = icmp eq i32 %153, 0, !dbg !37
  %.07.i14 = select i1 %.not19.i13, float %151, float %150, !dbg !37
  %154 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !37
  br i1 %154, label %__nv_fmul_rn.exit.i.i.i51, label %158, !dbg !37

__nv_fmul_rn.exit.i.i.i51:                        ; preds = %__nv_isinff.exit.i.i.i12
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not27.i52 = icmp eq i32 %155, 0, !dbg !37
  %156 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %134, float 0.000000e+00) #4, !dbg !37
  %157 = tail call float @llvm.nvvm.mul.rn.f(float %134, float 0.000000e+00) #4, !dbg !37
  %.08.i53 = select i1 %.not27.i52, float %157, float %156, !dbg !37
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !37

158:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %159 = bitcast float %134 to i32, !dbg !37
  %160 = lshr i32 %159, 23, !dbg !37
  %161 = and i32 %160, 224, !dbg !37
  %162 = add nsw i32 %161, -128, !dbg !37
  %163 = shl i32 %159, 8, !dbg !37
  %164 = or i32 %163, -2147483648, !dbg !37
  %165 = lshr exact i32 %162, 5, !dbg !37
  br label %166, !dbg !37

166:                                              ; preds = %158, %166
  %indvars.iv61 = phi i64 [ 0, %158 ], [ %indvars.iv.next62, %166 ]
  %hi.i.i.i.0.i1556 = phi i32 [ 0, %158 ], [ %171, %166 ]
  %167 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv61, !dbg !37
  %168 = load i32, ptr addrspace(1) %167, align 4, !dbg !37
  %169 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %168, i32 %164, i32 %hi.i.i.i.0.i1556) #5, !dbg !37, !srcloc !29
  %170 = extractvalue { i32, i32 } %169, 0, !dbg !37
  %171 = extractvalue { i32, i32 } %169, 1, !dbg !37
  %172 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv61, !dbg !37
  store i32 %170, ptr %172, align 4, !dbg !37
  %indvars.iv.next62 = add nuw nsw i64 %indvars.iv61, 1, !dbg !37
  %exitcond63.not = icmp eq i64 %indvars.iv.next62, 6, !dbg !37
  br i1 %exitcond63.not, label %173, label %166, !dbg !37, !llvm.loop !38

173:                                              ; preds = %166
  %174 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !37
  store i32 %171, ptr %174, align 4, !dbg !37
  %175 = and i32 %160, 31, !dbg !37
  %176 = sub nsw i32 6, %165, !dbg !37
  %177 = sext i32 %176 to i64, !dbg !37
  %178 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %177, !dbg !37
  %179 = load i32, ptr %178, align 4, !dbg !37
  %180 = sub nsw i32 5, %165, !dbg !37
  %181 = sext i32 %180 to i64, !dbg !37
  %182 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %181, !dbg !37
  %183 = load i32, ptr %182, align 4, !dbg !37
  %.not20.i17 = icmp eq i32 %175, 0, !dbg !37
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %184, !dbg !37

184:                                              ; preds = %173
  %185 = sub nsw i32 4, %165, !dbg !37
  %186 = sub nuw nsw i32 32, %175, !dbg !37
  %187 = shl i32 %179, %175, !dbg !37
  %188 = lshr i32 %183, %186, !dbg !37
  %189 = add i32 %188, %187, !dbg !37
  %190 = shl i32 %183, %175, !dbg !37
  %191 = sext i32 %185 to i64, !dbg !37
  %192 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %191, !dbg !37
  %193 = load i32, ptr %192, align 4, !dbg !37
  %194 = lshr i32 %193, %186, !dbg !37
  %195 = add i32 %194, %190, !dbg !37
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !37

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %184, %173
  %hi.i.i.i.1.i19 = phi i32 [ %189, %184 ], [ %179, %173 ], !dbg !37
  %lo.i.i.i.0.i20 = phi i32 [ %195, %184 ], [ %183, %173 ], !dbg !37
  %196 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !37
  %197 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !37
  %198 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !37
  %199 = lshr i32 %197, 31, !dbg !37
  %200 = add nuw nsw i32 %199, %196, !dbg !37
  %201 = sub nsw i32 0, %200, !dbg !37
  %.not2123.i21 = icmp slt i32 %159, 0, !dbg !37
  %spec.select.i22 = select i1 %.not2123.i21, i32 %201, i32 %200, !dbg !37
  %202 = xor i32 %197, %159, !dbg !37
  %.lobit.i23 = ashr i32 %197, 31, !dbg !37
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %197, !dbg !37
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %198, !dbg !37
  %203 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !37
  %204 = shl nuw i64 %203, 32, !dbg !37
  %205 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !37
  %206 = or disjoint i64 %204, %205, !dbg !37
  %207 = sitofp i64 %206 to double, !dbg !37
  %208 = fmul double %207, 0x3BF921FB54442D19, !dbg !37
  %209 = fptrunc double %208 to float, !dbg !37
  %210 = fneg float %209, !dbg !37
  %.not2526.i27 = icmp slt i32 %202, 0, !dbg !37
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %210, float %209, !dbg !37
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !37

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i51, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i51 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !37
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i53, %__nv_fmul_rn.exit.i.i.i51 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !37
  %211 = add i32 %i.i.1.i30, 1, !dbg !37
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not28.i32 = icmp eq i32 %212, 0, !dbg !37
  %213 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !37
  %214 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !37
  %.011.i33 = select i1 %.not28.i32, float %214, float %213, !dbg !37
  %215 = and i32 %i.i.1.i30, 1, !dbg !37
  %.not29.not.i = icmp eq i32 %215, 0, !dbg !37
  %216 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i31, !dbg !37
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not30.i34 = icmp eq i32 %217, 0, !dbg !37
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %216, float 0.000000e+00) #4, !dbg !37
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %216, float 0.000000e+00) #4, !dbg !37
  %.012.i35 = select i1 %.not30.i34, float %219, float %218, !dbg !37
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i48, label %__internal_fmad.exit2.i.i.i36, !dbg !37

__internal_fmad.exit1.i.i.i48:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not31.i49 = icmp eq i32 %220, 0, !dbg !37
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !37
  %222 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !37
  %.013.i50 = select i1 %.not31.i49, float %222, float %221, !dbg !37
  br label %__internal_fmad.exit2.i.i.i36, !dbg !37

__internal_fmad.exit2.i.i.i36:                    ; preds = %__internal_fmad.exit1.i.i.i48, %__internal_trig_reduction_kernel.exit.i.i29
  %223 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i48 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !37
  %224 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i48 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !37
  %225 = phi float [ %.013.i50, %__internal_fmad.exit1.i.i.i48 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !37
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not32.i37 = icmp eq i32 %226, 0, !dbg !37
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %225, float %.011.i33, float %224) #4, !dbg !37
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %225, float %.011.i33, float %224) #4, !dbg !37
  %.010.i38 = select i1 %.not32.i37, float %228, float %227, !dbg !37
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not33.i39 = icmp eq i32 %229, 0, !dbg !37
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i38, float %.011.i33, float %223) #4, !dbg !37
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i38, float %.011.i33, float %223) #4, !dbg !37
  %.09.i40 = select i1 %.not33.i39, float %231, float %230, !dbg !37
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not34.i41 = icmp eq i32 %232, 0, !dbg !37
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i40, float %.012.i35, float %216) #4, !dbg !37
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i40, float %.012.i35, float %216) #4, !dbg !37
  %.05.i42 = select i1 %.not34.i41, float %234, float %233, !dbg !37
  %235 = and i32 %211, 2, !dbg !37
  %.not35.i43 = icmp eq i32 %235, 0, !dbg !37
  br i1 %.not35.i43, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i44, !dbg !37

__internal_fmad.exit5.i.i.i44:                    ; preds = %__internal_fmad.exit2.i.i.i36
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not36.i45 = icmp eq i32 %236, 0, !dbg !37
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #4, !dbg !37
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #4, !dbg !37
  %.0.i46 = select i1 %.not36.i45, float %238, float %237, !dbg !37
  br label %__nv_cosf.exit, !dbg !37

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i36, %__internal_fmad.exit5.i.i.i44
  %z.i.i.0.i47 = phi float [ %.0.i46, %__internal_fmad.exit5.i.i.i44 ], [ %.05.i42, %__internal_fmad.exit2.i.i.i36 ], !dbg !37
  %239 = icmp slt i32 %11, 64, !dbg !39
  %240 = bitcast i32 %15 to float, !dbg !19
  %241 = bitcast i32 %18 to float, !dbg !21
  %242 = fadd float %240, %241, !dbg !40
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !37
  %243 = select i1 %239, float %z.i.i.0.i, float %z.i.i.0.i47, !dbg !41
  %244 = fadd float %242, %243, !dbg !42
  %245 = bitcast float %244 to i32, !dbg !43
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %245, ptr addrspace(1) %14, i1 %9) #4, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpvme26tpuy662q37ccvyrmnzr3pas3fh3tnibj6n5uuild2t2z6.py", directory: "inductor_cache/pv")
!4 = !{ptr @triton_poi_fused_add_repeat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_repeat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_repeat_0", linkageName: "triton_poi_fused_add_repeat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 27, column: 34, scope: !7)
!19 = !DILocation(line: 27, column: 39, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 35, column: 14, scope: !7)
!23 = !DILocation(line: 36, column: 19, scope: !7)
!24 = !DILocation(line: 38, column: 19, scope: !7)
!25 = !DILocation(line: 39, column: 24, scope: !7)
!26 = !DILocation(line: 41, column: 21, scope: !7)
!27 = !DILocation(line: 42, column: 20, scope: !7)
!28 = !DILocation(line: 43, column: 24, scope: !7)
!29 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.unroll.count", i32 1}
!32 = !DILocation(line: 49, column: 15, scope: !7)
!33 = !DILocation(line: 50, column: 21, scope: !7)
!34 = !DILocation(line: 52, column: 20, scope: !7)
!35 = !DILocation(line: 53, column: 24, scope: !7)
!36 = !DILocation(line: 56, column: 20, scope: !7)
!37 = !DILocation(line: 57, column: 24, scope: !7)
!38 = distinct !{!38, !31}
!39 = !DILocation(line: 34, column: 18, scope: !7)
!40 = !DILocation(line: 29, column: 18, scope: !7)
!41 = !DILocation(line: 0, scope: !7)
!42 = !DILocation(line: 61, column: 19, scope: !7)
!43 = !DILocation(line: 62, column: 40, scope: !7)
!44 = !DILocation(line: 62, column: 4, scope: !7)
