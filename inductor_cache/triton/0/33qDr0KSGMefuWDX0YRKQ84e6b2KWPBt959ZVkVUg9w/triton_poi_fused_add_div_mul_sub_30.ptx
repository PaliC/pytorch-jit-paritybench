//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_div_mul_sub_30 // -- Begin function triton_poi_fused_add_div_mul_sub_30
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_div_mul_sub_30
.visible .entry triton_poi_fused_add_div_mul_sub_30(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_sub_30_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_sub_30_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_sub_30_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_sub_30_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_sub_30_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_sub_30_param_5,
	.param .u32 triton_poi_fused_add_div_mul_sub_30_param_6,
	.param .u32 triton_poi_fused_add_div_mul_sub_30_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<71>;
	.reg .f32 	%f<13>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused_add_div_mul_sub_30_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_add_div_mul_sub_30_param_1];
$L__tmp0:
	.loc	1 22 28                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:22:33
	shl.b32 	%r25, %r1, 4;
	ld.param.u64 	%rd11, [triton_poi_fused_add_div_mul_sub_30_param_2];
	ld.param.u64 	%rd12, [triton_poi_fused_add_div_mul_sub_30_param_3];
	.loc	1 23 44                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:23:44
	mov.u32 	%r26, %tid.x;
	ld.param.u64 	%rd13, [triton_poi_fused_add_div_mul_sub_30_param_4];
	bfe.u32 	%r27, %r26, 3, 4;
	ld.param.u64 	%rd14, [triton_poi_fused_add_div_mul_sub_30_param_5];
	shl.b32 	%r28, %r26, 1;
	and.b32  	%r29, %r28, 14;
	.loc	1 23 23                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:23:23
	or.b32  	%r30, %r25, %r27;
	or.b32  	%r31, %r25, %r29;
	.loc	1 24 21                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:24:21
	setp.lt.s32 	%p1, %r30, 1536;
	setp.lt.s32 	%p11, %r31, 1536;
	.loc	1 25 28                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:25:33
	shl.b32 	%r32, %r2, 4;
	.loc	1 26 23                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:26:23
	or.b32  	%r33, %r32, %r29;
	or.b32  	%r34, %r32, %r27;
	.loc	1 27 21                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:27:21
	setp.lt.s32 	%p12, %r33, 16;
	setp.lt.s32 	%p13, %r34, 16;
	.loc	1 31 19                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:31:19
	mul.hi.s32 	%r36, %r30, 715827883;
	shr.u32 	%r37, %r36, 31;
	shr.s32 	%r38, %r36, 6;
	add.s32 	%r39, %r38, %r37;
	.loc	1 28 19                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:28:19
	mul.lo.s32 	%r40, %r39, 384;
	sub.s32 	%r41, %r30, %r40;
	.loc	1 31 19                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:31:19
	mul.hi.s32 	%r43, %r31, 715827883;
	shr.u32 	%r44, %r43, 31;
	shr.s32 	%r45, %r43, 6;
	add.s32 	%r46, %r45, %r44;
	.loc	1 28 19                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:28:19
	mul.lo.s32 	%r47, %r46, 384;
	sub.s32 	%r48, %r31, %r47;
	.loc	1 32 30                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:32:30
	mul.wide.s32 	%rd15, %r41, 4;
	add.s64 	%rd1, %rd9, %rd15;
	.loc	1 32 35                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:32:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r4;
	.loc	1 33 38                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:33:38
	shl.b32 	%r49, %r30, 4;
	.loc	1 33 35                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:33:35
	add.s32 	%r50, %r33, %r49;
	.loc	1 33 30                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:33:30
	mul.wide.s32 	%rd16, %r50, 4;
	add.s64 	%rd3, %rd10, %rd16;
	.loc	1 33 51                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:33:51
	and.pred  	%p3, %p1, %p12;
	and.pred  	%p10, %p11, %p13;
	.loc	1 33 43                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:33:43
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r5, %r6 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r5;
	mov.b32 	%f3, %r6;
	.loc	1 34 38                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:34:38
	shl.b32 	%r51, %r39, 4;
	.loc	1 34 35                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:34:35
	add.s32 	%r52, %r51, %r33;
	.loc	1 34 30                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:34:30
	mul.wide.s32 	%rd17, %r52, 4;
	add.s64 	%rd4, %rd11, %rd17;
	.loc	1 34 43                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:34:43
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r7, %r8 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r7;
	mov.b32 	%f5, %r8;
	.loc	1 35 30                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:35:30
	add.s64 	%rd5, %rd12, %rd17;
	.loc	1 35 43                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:35:43
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r18, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r15, %r18 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 36 30                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:36:30
	add.s64 	%rd6, %rd13, %rd15;
	.loc	1 36 35                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:36:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r12;
	.loc	1 37 18                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:37:18
	sub.f32 	%f7, %f2, %f4;
	sub.f32 	%f8, %f3, %f5;
	.loc	1 38 18                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:38:18
	mov.b32 	%r14, %f7;
	// begin inline asm
	div.full.f32 %r13, %r14, %r15;
	// end inline asm
	mov.b32 	%f9, %r13;
	mov.b32 	%r17, %f8;
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%f10, %r16;
	.loc	1 40 18                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:40:18
	fma.rn.f32 	%f11, %f9, %f1, %f6;
	fma.rn.f32 	%f12, %f10, %f1, %f6;
	.loc	1 41 30                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:41:30
	mad.lo.s32 	%r53, %r34, 384, %r48;
	.loc	1 41 39                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:41:39
	mad.lo.s32 	%r54, %r46, 6144, %r53;
	.loc	1 41 25                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:41:25
	mul.wide.s32 	%rd18, %r54, 4;
	add.s64 	%rd8, %rd14, %rd18;
	.loc	1 41 55                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:41:55
	shl.b32 	%r55, %r26, 5;
	and.b32  	%r56, %r55, 224;
	or.b32  	%r57, %r56, %r27;
	shr.u32 	%r58, %r56, 1;
	mov.u32 	%r59, global_smem;
	add.s32 	%r60, %r59, %r58;
	shl.b32 	%r61, %r57, 2;
	add.s32 	%r19, %r60, %r61;
	mov.b32 	%r20, %f11;
	mov.pred 	%p8, -1;
	// begin inline asm
	@%p8 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r62, %r56, 16;
	shr.u32 	%r63, %r62, 1;
	add.s32 	%r64, %r59, %r63;
	add.s32 	%r65, %r64, %r61;
	add.s32 	%r21, %r65, 64;
	mov.b32 	%r22, %f12;
	// begin inline asm
	@%p8 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r66, %r26, 120;
	add.s32 	%r67, %r59, %r66;
	shl.b32 	%r68, %r26, 3;
	and.b32  	%r69, %r68, 1016;
	add.s32 	%r70, %r67, %r69;
	ld.shared.v2.u32 	{%r23, %r24}, [%r70];
	// begin inline asm
	@%p10 st.global.v2.b32 [ %rd8 + 0 ], { %r23, %r24 };
	// end inline asm
	.loc	1 41 4                          // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:41:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vy/cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 121
.b8 105
.b8 116
.b8 104
.b8 120
.b8 102
.b8 99
.b8 99
.b8 106
.b8 99
.b8 105
.b8 118
.b8 97
.b8 99
.b8 97
.b8 109
.b8 53
.b8 97
.b8 111
.b8 118
.b8 122
.b8 106
.b8 102
.b8 97
.b8 107
.b8 50
.b8 54
.b8 115
.b8 99
.b8 109
.b8 116
.b8 118
.b8 113
.b8 116
.b8 55
.b8 108
.b8 113
.b8 109
.b8 120
.b8 113
.b8 121
.b8 108
.b8 114
.b8 117
.b8 120
.b8 100
.b8 121
.b8 114
.b8 122
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 121
.b8 0
	}
	.section	.debug_macinfo	{	}
