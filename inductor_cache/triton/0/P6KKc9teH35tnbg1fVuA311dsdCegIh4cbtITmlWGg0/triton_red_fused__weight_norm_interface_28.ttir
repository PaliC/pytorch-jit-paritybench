#loc = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":37:25)
#loc34 = loc(callsite(#loc1 at #loc16))
module {
  tt.func public @triton_red_fused__weight_norm_interface_28(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":19:0)) attributes {noinline = false} {
    %c1312_i32 = arith.constant 1312 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %cst = arith.constant dense<1312> : tensor<1x2048xi32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst : tensor<1x2048xi32> loc(#loc6)
    %6 = arith.muli %0, %c1312_i32 : i32 loc(#loc7)
    %7 = tt.splat %6 : i32 -> tensor<1x2048xi32> loc(#loc8)
    %8 = arith.addi %4, %7 : tensor<1x2048xi32> loc(#loc8)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %8 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc9)
    %11 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc10)
    %12 = arith.andi %5, %11 : tensor<1x2048xi1> loc(#loc10)
    %13 = tt.load %10, %12, %cst_0 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc11)
    %14 = arith.mulf %13, %13 : tensor<1x2048xf32> loc(#loc12)
    %15 = arith.addf %14, %cst_0 : tensor<1x2048xf32> loc(#loc13)
    %16 = arith.select %12, %15, %cst_0 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc14)
    %17 = "tt.reduce"(%16) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc16)), %arg8: f32 loc(callsite(#loc1 at #loc16))):
      %33 = arith.addf %arg7, %arg8 : f32 loc(#loc36)
      tt.reduce.return %33 : f32 loc(#loc33)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc33)
    %18 = tt.expand_dims %17 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc18)
    %19 = tt.extern_elementwise %18 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc19)
    gpu.barrier loc(#loc20)
    %20 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc21)
    %21 = tt.splat %20 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc21)
    tt.store %21, %19, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc22)
    %22 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc23)
    %23 = tt.splat %22 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc23)
    %24 = tt.load %23, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc24)
    %25 = tt.load %10, %12, %cst_0 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc25)
    %26 = arith.divf %24, %19 : tensor<1x1xf32> loc(#loc26)
    %27 = tt.broadcast %26 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc27)
    %28 = arith.mulf %25, %27 : tensor<1x2048xf32> loc(#loc27)
    %29 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc28)
    %30 = tt.addptr %29, %8 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc28)
    tt.store %30, %28, %12 : tensor<1x2048x!tt.ptr<f32>> loc(#loc29)
    %31 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc30)
    %32 = tt.addptr %31, %8 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc30)
    tt.store %32, %28, %12 : tensor<1x2048x!tt.ptr<f32>> loc(#loc31)
    tt.return loc(#loc32)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":22:28)
#loc3 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":24:21)
#loc4 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":25:25)
#loc5 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":25:33)
#loc6 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":30:25)
#loc7 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":32:44)
#loc8 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":32:39)
#loc9 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":32:34)
#loc10 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":32:57)
#loc11 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":32:49)
#loc12 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":33:22)
#loc13 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":35:23)
#loc14 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":36:46)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc18 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":37:28)
#loc19 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":38:26)
#loc20 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":39:4)
#loc21 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":40:28)
#loc22 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":40:39)
#loc23 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":41:30)
#loc24 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":41:35)
#loc25 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":46:49)
#loc26 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":47:22)
#loc27 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":48:22)
#loc28 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":49:29)
#loc29 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":49:50)
#loc30 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":50:29)
#loc31 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":50:50)
#loc32 = loc("inductor_cache/p3/cp3wsx56yx2omqm6tdyy7cne625ix2dluvu7l2ayp375lqpparfm.py":42:4)
#loc33 = loc(callsite(#loc15 at #loc16))
#loc35 = loc(callsite(#loc17 at #loc15))
#loc36 = loc(callsite(#loc35 at #loc16))
