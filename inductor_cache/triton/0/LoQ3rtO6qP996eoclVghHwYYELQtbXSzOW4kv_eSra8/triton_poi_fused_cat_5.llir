; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) nocapture readnone %7, ptr addrspace(1) nocapture readnone %8, ptr addrspace(1) %9, ptr addrspace(1) %10, ptr addrspace(1) nocapture readnone %11, ptr addrspace(1) %12, ptr addrspace(1) %13, ptr addrspace(1) %14, i32 %15) local_unnamed_addr !dbg !7 {
  %17 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %18 = shl i32 %17, 7, !dbg !11
  %19 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %20 = and i32 %19, 127, !dbg !12
  %21 = or disjoint i32 %18, %20, !dbg !13
  %22 = icmp slt i32 %21, 256, !dbg !14
  %.frozen = freeze i32 %21, !dbg !15
  %23 = sdiv i32 %.frozen, 16, !dbg !15
  %24 = srem i32 %23, 4, !dbg !16
  %25 = sdiv i32 %21, 64, !dbg !17
  %26 = mul i32 %23, 16, !dbg !18
  %.decomposed = sub i32 %.frozen, %26, !dbg !18
  %.frozen1 = freeze i32 %21, !dbg !19
  %27 = sdiv i32 %.frozen1, 4, !dbg !19
  %28 = srem i32 %27, 4, !dbg !20
  %29 = mul i32 %27, 4, !dbg !21
  %.decomposed2 = sub i32 %.frozen1, %29, !dbg !21
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !22
  %31 = bitcast i32 %30 to float, !dbg !22
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #1, !dbg !23
  %33 = bitcast i32 %32 to float, !dbg !23
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %5, i1 true) #1, !dbg !24
  %35 = bitcast i32 %34 to float, !dbg !24
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %10, i1 true) #1, !dbg !25
  %37 = bitcast i32 %36 to float, !dbg !25
  %38 = icmp slt i32 %24, 1, !dbg !26
  %39 = shl nsw i32 %25, 4, !dbg !27
  %40 = add nsw i32 %39, %.decomposed, !dbg !28
  %41 = sext i32 %40 to i64, !dbg !29
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !29
  %43 = and i1 %22, %38, !dbg !30
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %42, i1 %43, i32 0, i1 %43) #1, !dbg !31
  %45 = bitcast i32 %44 to float, !dbg !31
  %46 = fadd float %31, %45, !dbg !32
  %47 = icmp eq i32 %24, 1, !dbg !33
  %48 = getelementptr float, ptr addrspace(1) %2, i64 %41, !dbg !34
  %49 = and i1 %22, %47, !dbg !35
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %49, i32 0, i1 %49) #1, !dbg !36
  %51 = bitcast i32 %50 to float, !dbg !36
  %52 = fadd float %33, %51, !dbg !37
  %53 = icmp eq i32 %24, 2, !dbg !38
  %54 = getelementptr float, ptr addrspace(1) %4, i64 %41, !dbg !39
  %55 = and i1 %22, %53, !dbg !40
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %54, i1 %55, i32 0, i1 %55) #1, !dbg !41
  %57 = bitcast i32 %56 to float, !dbg !41
  %58 = fadd float %35, %57, !dbg !42
  %59 = icmp sgt i32 %24, 2, !dbg !43
  %60 = getelementptr float, ptr addrspace(1) %6, i64 %41, !dbg !44
  %61 = and i1 %22, %59, !dbg !45
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 %61, i32 0, i1 %61) #1, !dbg !46
  %63 = bitcast i32 %62 to float, !dbg !46
  %64 = sext i32 %25 to i64, !dbg !47
  %65 = getelementptr float, ptr addrspace(1) %9, i64 %64, !dbg !47
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %61, i32 0, i1 %61) #1, !dbg !48
  %67 = bitcast i32 %66 to float, !dbg !48
  %68 = fadd float %37, %67, !dbg !49
  %69 = fcmp olt float %68, 0.000000e+00, !dbg !50
  %70 = select i1 %69, float 0.000000e+00, float %68, !dbg !54
  %71 = fsub float %70, %70, !dbg !55
  %72 = sext i32 %.decomposed2 to i64, !dbg !56
  %73 = getelementptr float, ptr addrspace(1) %12, i64 %72, !dbg !56
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %73, i1 %61, i32 0, i1 %61) #1, !dbg !57
  %75 = bitcast i32 %74 to float, !dbg !57
  %76 = fmul float %71, %75, !dbg !58
  %77 = fadd float %70, %76, !dbg !59
  %78 = fsub float %77, %63, !dbg !60
  %79 = sext i32 %28 to i64, !dbg !61
  %80 = getelementptr float, ptr addrspace(1) %13, i64 %79, !dbg !61
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %80, i1 %61, i32 0, i1 %61) #1, !dbg !62
  %82 = bitcast i32 %81 to float, !dbg !62
  %83 = fmul float %78, %82, !dbg !63
  %84 = fadd float %83, %63, !dbg !64
  %85 = select i1 %59, float %84, float 0.000000e+00, !dbg !65
  %86 = select i1 %53, float %58, float %85, !dbg !66
  %87 = select i1 %47, float %52, float %86, !dbg !66
  %88 = select i1 %38, float %46, float %87, !dbg !66
  %89 = sext i32 %21 to i64, !dbg !67
  %90 = getelementptr float, ptr addrspace(1) %14, i64 %89, !dbg !67
  %91 = bitcast float %88 to i32, !dbg !68
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %91, ptr addrspace(1) %90, i1 %22) #1, !dbg !68
  ret void, !dbg !69
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py", directory: "inductor_cache/cs")
!4 = !{ptr @triton_poi_fused_cat_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_5", linkageName: "triton_poi_fused_cat_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 27, column: 26, scope: !7)
!21 = !DILocation(line: 28, column: 19, scope: !7)
!22 = !DILocation(line: 30, column: 19, scope: !7)
!23 = !DILocation(line: 32, column: 20, scope: !7)
!24 = !DILocation(line: 34, column: 20, scope: !7)
!25 = !DILocation(line: 36, column: 20, scope: !7)
!26 = !DILocation(line: 42, column: 18, scope: !7)
!27 = !DILocation(line: 43, column: 38, scope: !7)
!28 = !DILocation(line: 43, column: 35, scope: !7)
!29 = !DILocation(line: 43, column: 30, scope: !7)
!30 = !DILocation(line: 43, column: 50, scope: !7)
!31 = !DILocation(line: 43, column: 43, scope: !7)
!32 = !DILocation(line: 44, column: 18, scope: !7)
!33 = !DILocation(line: 50, column: 20, scope: !7)
!34 = !DILocation(line: 51, column: 31, scope: !7)
!35 = !DILocation(line: 51, column: 52, scope: !7)
!36 = !DILocation(line: 51, column: 44, scope: !7)
!37 = !DILocation(line: 52, column: 20, scope: !7)
!38 = !DILocation(line: 58, column: 20, scope: !7)
!39 = !DILocation(line: 59, column: 31, scope: !7)
!40 = !DILocation(line: 59, column: 52, scope: !7)
!41 = !DILocation(line: 59, column: 44, scope: !7)
!42 = !DILocation(line: 60, column: 20, scope: !7)
!43 = !DILocation(line: 63, column: 20, scope: !7)
!44 = !DILocation(line: 66, column: 31, scope: !7)
!45 = !DILocation(line: 66, column: 52, scope: !7)
!46 = !DILocation(line: 66, column: 44, scope: !7)
!47 = !DILocation(line: 76, column: 31, scope: !7)
!48 = !DILocation(line: 76, column: 36, scope: !7)
!49 = !DILocation(line: 77, column: 20, scope: !7)
!50 = !DILocation(line: 118, column: 15, scope: !51, inlinedAt: !53)
!51 = distinct !DILexicalBlockFile(scope: !7, file: !52, discriminator: 0)
!52 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!53 = !DILocation(line: 79, column: 42, scope: !7)
!54 = !DILocation(line: 121, column: 29, scope: !51, inlinedAt: !53)
!55 = !DILocation(line: 84, column: 20, scope: !7)
!56 = !DILocation(line: 85, column: 32, scope: !7)
!57 = !DILocation(line: 85, column: 37, scope: !7)
!58 = !DILocation(line: 86, column: 20, scope: !7)
!59 = !DILocation(line: 87, column: 20, scope: !7)
!60 = !DILocation(line: 88, column: 20, scope: !7)
!61 = !DILocation(line: 89, column: 32, scope: !7)
!62 = !DILocation(line: 89, column: 37, scope: !7)
!63 = !DILocation(line: 90, column: 20, scope: !7)
!64 = !DILocation(line: 91, column: 20, scope: !7)
!65 = !DILocation(line: 93, column: 35, scope: !7)
!66 = !DILocation(line: 0, scope: !7)
!67 = !DILocation(line: 97, column: 25, scope: !7)
!68 = !DILocation(line: 97, column: 37, scope: !7)
!69 = !DILocation(line: 97, column: 4, scope: !7)
