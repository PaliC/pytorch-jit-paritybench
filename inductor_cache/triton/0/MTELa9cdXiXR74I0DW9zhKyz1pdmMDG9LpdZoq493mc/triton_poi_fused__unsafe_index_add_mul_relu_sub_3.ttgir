#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__unsafe_index_add_mul_relu_sub_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":19:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":19:0), %arg4: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":19:0), %arg6: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<16> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<4> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<256> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_2 : tensor<128xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_1 : tensor<128xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_1 : tensor<128xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %4, %cst_1 : tensor<128xi32, #blocked> loc(#loc9)
    %9 = arith.divsi %4, %cst_0 : tensor<128xi32, #blocked> loc(#loc10)
    %10 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc11)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = tt.addptr %13, %8 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc13)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc14)
    %16 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = tt.addptr %16, %7 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc15)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc16)
    %19 = arith.cmpf ogt, %cst, %12 : tensor<128xf32, #blocked> loc(#loc30)
    %20 = arith.select %19, %cst, %12 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc31)
    %21 = arith.cmpf ogt, %cst, %20 : tensor<128xf32, #blocked> loc(#loc32)
    %22 = arith.select %21, %cst, %20 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc33)
    %23 = arith.subf %22, %22 : tensor<128xf32, #blocked> loc(#loc21)
    %24 = arith.mulf %23, %15 : tensor<128xf32, #blocked> loc(#loc22)
    %25 = arith.addf %22, %24 : tensor<128xf32, #blocked> loc(#loc23)
    %26 = arith.subf %25, %25 : tensor<128xf32, #blocked> loc(#loc24)
    %27 = arith.mulf %26, %18 : tensor<128xf32, #blocked> loc(#loc25)
    %28 = arith.addf %25, %27 : tensor<128xf32, #blocked> loc(#loc26)
    %29 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc27)
    %30 = tt.addptr %29, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc27)
    tt.store %30, %28, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc28)
    tt.return loc(#loc29)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":21:28)
#loc3 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":21:33)
#loc4 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":22:36)
#loc5 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":22:23)
#loc6 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":23:21)
#loc7 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":24:21)
#loc8 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":24:26)
#loc9 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":25:19)
#loc10 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":26:19)
#loc11 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":30:30)
#loc12 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":30:35)
#loc13 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":32:31)
#loc14 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":32:36)
#loc15 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":34:31)
#loc16 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":34:36)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc18 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":43:42)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc20 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":44:42)
#loc21 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":48:20)
#loc22 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":49:20)
#loc23 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":50:20)
#loc24 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":54:20)
#loc25 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":55:20)
#loc26 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":56:20)
#loc27 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":57:28)
#loc28 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":57:40)
#loc29 = loc("inductor_cache/3j/c3jrmwsjrydyyadzow57sbc2ocvcs4uch77k5llymq6cqcad3dl7.py":57:4)
#loc30 = loc(callsite(#loc17 at #loc18))
#loc31 = loc(callsite(#loc19 at #loc18))
#loc32 = loc(callsite(#loc17 at #loc20))
#loc33 = loc(callsite(#loc19 at #loc20))
