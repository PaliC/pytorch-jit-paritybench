; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_add_div_max_mean_mul_neg_pow_relu_sub_sum_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %7 = and i32 %6, 63, !dbg !10
  %8 = shl nuw nsw i32 %7, 2, !dbg !11
  %9 = zext nneg i32 %8 to i64, !dbg !12
  %10 = getelementptr float, ptr addrspace(1) %2, i64 %9, !dbg !12
  %11 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %10, i1 true) #6, !dbg !13
  %12 = getelementptr float, ptr addrspace(1) %3, i64 %9, !dbg !14
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 true) #6, !dbg !15
  %14 = bitcast i32 %13 to float, !dbg !15
  %15 = zext nneg i32 %7 to i64, !dbg !16
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !16
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 true) #6, !dbg !17
  %18 = bitcast i32 %17 to float, !dbg !17
  %19 = or disjoint i32 %8, 1, !dbg !18
  %20 = zext nneg i32 %19 to i64, !dbg !19
  %21 = getelementptr float, ptr addrspace(1) %2, i64 %20, !dbg !19
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 true) #6, !dbg !20
  %23 = getelementptr float, ptr addrspace(1) %3, i64 %20, !dbg !21
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #6, !dbg !22
  %25 = bitcast i32 %24 to float, !dbg !22
  %26 = or disjoint i32 %8, 2, !dbg !23
  %27 = zext nneg i32 %26 to i64, !dbg !24
  %28 = getelementptr float, ptr addrspace(1) %2, i64 %27, !dbg !24
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #6, !dbg !25
  %30 = getelementptr float, ptr addrspace(1) %3, i64 %27, !dbg !26
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #6, !dbg !27
  %32 = bitcast i32 %31 to float, !dbg !27
  %33 = or disjoint i32 %8, 3, !dbg !28
  %34 = zext nneg i32 %33 to i64, !dbg !29
  %35 = getelementptr float, ptr addrspace(1) %2, i64 %34, !dbg !29
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #6, !dbg !30
  %37 = getelementptr float, ptr addrspace(1) %3, i64 %34, !dbg !31
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 true) #6, !dbg !32
  %39 = bitcast i32 %38 to float, !dbg !32
  %40 = fsub float %14, %18, !dbg !33
  %41 = fmul float %40, 3.000000e+00, !dbg !34
  %42 = fsub float 1.000000e+00, %41, !dbg !35
  %43 = fcmp olt float %42, 0.000000e+00, !dbg !36
  %44 = select i1 %43, float 0.000000e+00, float %42, !dbg !40
  %45 = tail call float @llvm.nvvm.trunc.f(float 0xBFC5555560000000) #6, !dbg !41
  %46 = fmul float %45, 2.000000e+00, !dbg !41
  %47 = fsub float 0xBFD5555560000000, %46, !dbg !41
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not.i = icmp eq i32 %48, 0, !dbg !41
  %49 = tail call float @llvm.nvvm.fabs.ftz.f(float %47) #6, !dbg !41
  %50 = tail call float @llvm.nvvm.fabs.f(float %47) #6, !dbg !41
  %.08.i = select i1 %.not.i, float %50, float %49, !dbg !41
  %51 = fcmp oeq float %.08.i, 1.000000e+00, !dbg !41
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not12.i = icmp eq i32 %52, 0, !dbg !41
  %53 = tail call float @llvm.nvvm.fabs.ftz.f(float %44) #6, !dbg !41
  %54 = tail call float @llvm.nvvm.fabs.f(float %44) #6, !dbg !41
  %.09.i = select i1 %.not12.i, float %54, float %53, !dbg !41
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not13.i = icmp eq i32 %55, 0, !dbg !41
  %56 = fcmp olt float %.09.i, 0x3810000000000000, !dbg !41
  %57 = fmul float %.09.i, 0x4170000000000000, !dbg !41
  %58 = select i1 %.not13.i, i1 %56, i1 false, !dbg !41
  %.116.i = select i1 %58, float %57, float %.09.i, !dbg !41
  %expo.i.i.1.i = select i1 %58, float -1.510000e+02, float -1.270000e+02, !dbg !41
  %59 = bitcast float %.116.i to i32, !dbg !41
  %60 = and i32 %59, 8388607, !dbg !41
  %61 = or disjoint i32 %60, 1065353216, !dbg !41
  %62 = bitcast i32 %61 to float, !dbg !41
  %63 = lshr i32 %59, 23, !dbg !41
  %64 = uitofp nneg i32 %63 to float, !dbg !41
  %65 = fadd float %expo.i.i.1.i, %64, !dbg !41
  %66 = fcmp ogt float %62, 0x3FF6A09E60000000, !dbg !41
  %67 = fmul float %62, 5.000000e-01, !dbg !41
  %68 = fadd float %65, 1.000000e+00, !dbg !41
  %expo.i.i.2.i = select i1 %66, float %68, float %65, !dbg !41
  %m.i.i.0.i = select i1 %66, float %67, float %62, !dbg !41
  %69 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !41
  %70 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !41
  %71 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %70) #7, !dbg !41, !srcloc !42
  %72 = fmul float %69, 2.000000e+00, !dbg !41
  %73 = fmul float %71, %72, !dbg !41
  %74 = fmul float %73, %73, !dbg !41
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not14.i = icmp eq i32 %75, 0, !dbg !41
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %74, float 0x3F8995EC60000000) #6, !dbg !41
  %77 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %74, float 0x3F8995EC60000000) #6, !dbg !41
  %.020.i = select i1 %.not14.i, float %77, float %76, !dbg !41
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not15.i = icmp eq i32 %78, 0, !dbg !41
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %74, float 0x3FB55557A0000000) #6, !dbg !41
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %74, float 0x3FB55557A0000000) #6, !dbg !41
  %.021.i = select i1 %.not15.i, float %80, float %79, !dbg !41
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not16.i = icmp eq i32 %81, 0, !dbg !41
  %82 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %74) #6, !dbg !41
  %83 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %74) #6, !dbg !41
  %.022.i = select i1 %.not16.i, float %83, float %82, !dbg !41
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not17.i = icmp eq i32 %84, 0, !dbg !41
  %85 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %73) #6, !dbg !41
  %86 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %73) #6, !dbg !41
  %.024.i = select i1 %.not17.i, float %86, float %85, !dbg !41
  %87 = fsub float %69, %73, !dbg !41
  %88 = fmul float %87, 2.000000e+00, !dbg !41
  %89 = fneg float %73, !dbg !41
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not18.i = icmp eq i32 %90, 0, !dbg !41
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %89, float %69, float %88) #6, !dbg !41
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %89, float %69, float %88) #6, !dbg !41
  %.025.i = select i1 %.not18.i, float %92, float %91, !dbg !41
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not19.i = icmp eq i32 %93, 0, !dbg !41
  %94 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %71, float %.025.i) #6, !dbg !41
  %95 = tail call float @llvm.nvvm.mul.rn.f(float %71, float %.025.i) #6, !dbg !41
  %.026.i = select i1 %.not19.i, float %95, float %94, !dbg !41
  %96 = fadd float %73, %.024.i, !dbg !41
  %97 = fsub float %73, %96, !dbg !41
  %98 = fadd float %.024.i, %97, !dbg !41
  %99 = fadd float %.026.i, %98, !dbg !41
  %100 = fadd float %96, %99, !dbg !41
  %101 = fsub float %96, %100, !dbg !41
  %102 = fadd float %99, %101, !dbg !41
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not20.i = icmp eq i32 %103, 0, !dbg !41
  %104 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #6, !dbg !41
  %105 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #6, !dbg !41
  %.019.i = select i1 %.not20.i, float %105, float %104, !dbg !41
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not21.i = icmp eq i32 %106, 0, !dbg !41
  %107 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #6, !dbg !41
  %108 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #6, !dbg !41
  %.018.i = select i1 %.not21.i, float %108, float %107, !dbg !41
  %109 = fadd float %.019.i, %100, !dbg !41
  %110 = fsub float %.019.i, %109, !dbg !41
  %111 = fadd float %100, %110, !dbg !41
  %112 = fadd float %102, %111, !dbg !41
  %113 = fadd float %.018.i, %112, !dbg !41
  %114 = fadd float %109, %113, !dbg !41
  %115 = fsub float %109, %114, !dbg !41
  %116 = fadd float %113, %115, !dbg !41
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not22.i = icmp eq i32 %117, 0, !dbg !41
  %118 = tail call float @llvm.nvvm.fabs.ftz.f(float 0xBFD5555560000000) #6, !dbg !41
  %119 = tail call float @llvm.nvvm.fabs.f(float 0xBFD5555560000000) #6, !dbg !41
  %.027.i = select i1 %.not22.i, float %119, float %118, !dbg !41
  %120 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !41
  %.013.i = select i1 %120, float 0xBF05555560000000, float 0xBFD5555560000000, !dbg !41
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not23.i = icmp eq i32 %121, 0, !dbg !41
  %122 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i, float %114) #6, !dbg !41
  %123 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i, float %114) #6, !dbg !41
  %.028.i = select i1 %.not23.i, float %123, float %122, !dbg !41
  %124 = fneg float %.028.i, !dbg !41
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not24.i = icmp eq i32 %125, 0, !dbg !41
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %114, float %124) #6, !dbg !41
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %114, float %124) #6, !dbg !41
  %.029.i = select i1 %.not24.i, float %127, float %126, !dbg !41
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not25.i = icmp eq i32 %128, 0, !dbg !41
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %116, float %.029.i) #6, !dbg !41
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %116, float %.029.i) #6, !dbg !41
  %.030.i = select i1 %.not25.i, float %130, float %129, !dbg !41
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not26.i = icmp eq i32 %131, 0, !dbg !41
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %114, float %.030.i) #6, !dbg !41
  %133 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %114, float %.030.i) #6, !dbg !41
  %.031.i = select i1 %.not26.i, float %133, float %132, !dbg !41
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not27.i = icmp eq i32 %134, 0, !dbg !41
  %135 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #6, !dbg !41
  %136 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #6, !dbg !41
  %.032.i = select i1 %.not27.i, float %136, float %135, !dbg !41
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %139 = bitcast float %.032.i to i32, !dbg !41
  %140 = icmp eq i32 %139, 1118925336, !dbg !41
  %prod.i.145.0.i = select i1 %140, float 0x40562E42E0000000, float %.032.i, !dbg !41
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not30.i = icmp eq i32 %141, 0, !dbg !41
  %142 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #6, !dbg !41
  %143 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #6, !dbg !41
  %.017.i = select i1 %.not30.i, float %143, float %142, !dbg !41
  %144 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #6, !dbg !41
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not31.i = icmp eq i32 %145, 0, !dbg !41
  %146 = tail call float @llvm.nvvm.fabs.ftz.f(float %144) #6, !dbg !41
  %147 = tail call float @llvm.nvvm.fabs.f(float %144) #6, !dbg !41
  %.023.i = select i1 %.not31.i, float %147, float %146, !dbg !41
  %148 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !41
  %149 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %144), !dbg !41
  %j.i.i.0.i = select i1 %148, float %149, float %144, !dbg !41
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not32.i = icmp eq i32 %150, 0, !dbg !41
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #6, !dbg !41
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #6, !dbg !41
  %.035.i = select i1 %.not32.i, float %152, float %151, !dbg !41
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not33.i = icmp eq i32 %153, 0, !dbg !41
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #6, !dbg !41
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #6, !dbg !41
  %.036.i = select i1 %.not33.i, float %155, float %154, !dbg !41
  %156 = fmul float %.036.i, 0x3FF7154760000000, !dbg !41
  %157 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !41
  %158 = bitcast float %157 to i32, !dbg !41
  %159 = shl i32 %158, 23, !dbg !41
  %160 = bitcast i32 %159 to float, !dbg !41
  %161 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %156) #6, !dbg !41
  %162 = fmul float %161, %160, !dbg !41
  %163 = fcmp une float %162, 0x7FF0000000000000, !dbg !41
  br i1 %163, label %__internal_fmad.exit.i.i, label %__internal_accurate_powf.exit.i, !dbg !41

__internal_fmad.exit.i.i:                         ; preds = %5
  %.not29.i = icmp eq i32 %138, 0, !dbg !41
  %.not28.i = icmp eq i32 %137, 0, !dbg !41
  %164 = fneg float %.032.i, !dbg !41
  %165 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %164) #6, !dbg !41
  %166 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %164) #6, !dbg !41
  %.033.i = select i1 %.not28.i, float %165, float %166, !dbg !41
  %167 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #6, !dbg !41
  %168 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #6, !dbg !41
  %.034.i = select i1 %.not29.i, float %167, float %168, !dbg !41
  %169 = fadd float %.034.i, 0x3EE0000000000000, !dbg !41
  %prod.i.044.0.i = select i1 %140, float %169, float %.034.i, !dbg !41
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not34.i = icmp eq i32 %170, 0, !dbg !41
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %162, float %prod.i.044.0.i, float %162) #6, !dbg !41
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %162, float %prod.i.044.0.i, float %162) #6, !dbg !41
  %.014.i = select i1 %.not34.i, float %172, float %171, !dbg !41
  br label %__internal_accurate_powf.exit.i, !dbg !41

__internal_accurate_powf.exit.i:                  ; preds = %__internal_fmad.exit.i.i, %5
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %5 ], !dbg !41
  %173 = fcmp oeq float %44, 0.000000e+00, !dbg !41
  br i1 %173, label %174, label %__internal_powf_corner_cases.exit.i, !dbg !41

174:                                              ; preds = %__internal_accurate_powf.exit.i
  %175 = fadd float %44, %44, !dbg !41
  %176 = bitcast float %175 to i32, !dbg !41
  %177 = or i32 %176, 2139095040, !dbg !41
  %178 = bitcast i32 %177 to float, !dbg !41
  %179 = select i1 %51, float %178, float 0x7FF0000000000000, !dbg !41
  br label %__internal_powf_corner_cases.exit.i, !dbg !41

__internal_powf_corner_cases.exit.i:              ; preds = %__internal_accurate_powf.exit.i, %174
  %.212.i = phi float [ %179, %174 ], [ %t.i.0.i, %__internal_accurate_powf.exit.i ], !dbg !41
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not35.i = icmp eq i32 %180, 0, !dbg !41
  %.01.i = select i1 %.not35.i, float %54, float %53, !dbg !41
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not36.i = icmp eq i32 %181, 0, !dbg !41
  %.02.i = select i1 %.not36.i, float %119, float %118, !dbg !41
  %182 = fadd float %.01.i, %.02.i, !dbg !41
  %183 = bitcast float %182 to i32, !dbg !41
  %184 = icmp sgt i32 %183, 2139095039, !dbg !41
  br i1 %184, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !41

__nv_isnanf.exit.i.i:                             ; preds = %__internal_powf_corner_cases.exit.i
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not37.i = icmp eq i32 %185, 0, !dbg !41
  %.06.i = select i1 %.not37.i, float %54, float %53, !dbg !41
  %186 = fcmp uno float %.06.i, 0.000000e+00, !dbg !41
  br i1 %186, label %189, label %__nv_isnanf.exit11.i.i, !dbg !41

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not38.i = icmp eq i32 %187, 0, !dbg !41
  %.07.i = select i1 %.not38.i, float %119, float %118, !dbg !41
  %188 = fcmp uno float %.07.i, 0.000000e+00, !dbg !41
  br i1 %188, label %189, label %__nv_isinff.exit8.i.i, !dbg !41

189:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %190 = fadd float %44, 0xBFD5555560000000, !dbg !41
  br label %__nv_powf.exit, !dbg !41

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not39.i = icmp eq i32 %191, 0, !dbg !41
  %.05.i = select i1 %.not39.i, float %119, float %118, !dbg !41
  %192 = fcmp oeq float %.05.i, 0x7FF0000000000000, !dbg !41
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not41.i = icmp eq i32 %193, 0, !dbg !41
  %.04.i = select i1 %.not41.i, float %54, float %53, !dbg !41
  br i1 %192, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !41

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %194 = fcmp ogt float %.04.i, 1.000000e+00, !dbg !41
  %195 = select i1 %194, float 0.000000e+00, float 0x7FF0000000000000, !dbg !41
  br label %__nv_powf.exit, !dbg !41

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %196 = fcmp oeq float %.04.i, 0x7FF0000000000000, !dbg !41
  br i1 %196, label %197, label %__nv_powf.exit, !dbg !41

197:                                              ; preds = %__nv_isinff.exit.i.i
  br label %__nv_powf.exit, !dbg !41

__nv_powf.exit:                                   ; preds = %__internal_powf_corner_cases.exit.i, %189, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %197
  %.3.i = phi float [ %.212.i, %__internal_powf_corner_cases.exit.i ], [ %190, %189 ], [ %195, %__nv_fabsf.exit5.i.i ], [ 0.000000e+00, %197 ], [ %.212.i, %__nv_isinff.exit.i.i ], !dbg !41
  %198 = fcmp oeq float %44, 1.000000e+00, !dbg !41
  %t.0.i = select i1 %198, float 1.000000e+00, float %.3.i, !dbg !41
  %199 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %t.0.i) #6, !dbg !43
  %200 = fsub float %25, %18, !dbg !44
  %201 = fmul float %200, 3.000000e+00, !dbg !45
  %202 = fsub float 1.000000e+00, %201, !dbg !46
  %203 = fcmp olt float %202, 0.000000e+00, !dbg !47
  %204 = select i1 %203, float 0.000000e+00, float %202, !dbg !49
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not.i1 = icmp eq i32 %205, 0, !dbg !50
  %.08.i2 = select i1 %.not.i1, float %50, float %49, !dbg !50
  %206 = fcmp oeq float %.08.i2, 1.000000e+00, !dbg !50
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not12.i3 = icmp eq i32 %207, 0, !dbg !50
  %208 = tail call float @llvm.nvvm.fabs.ftz.f(float %204) #6, !dbg !50
  %209 = tail call float @llvm.nvvm.fabs.f(float %204) #6, !dbg !50
  %.09.i4 = select i1 %.not12.i3, float %209, float %208, !dbg !50
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not13.i5 = icmp eq i32 %210, 0, !dbg !50
  %211 = fcmp olt float %.09.i4, 0x3810000000000000, !dbg !50
  %212 = fmul float %.09.i4, 0x4170000000000000, !dbg !50
  %213 = select i1 %.not13.i5, i1 %211, i1 false, !dbg !50
  %.116.i8 = select i1 %213, float %212, float %.09.i4, !dbg !50
  %expo.i.i.1.i9 = select i1 %213, float -1.510000e+02, float -1.270000e+02, !dbg !50
  %214 = bitcast float %.116.i8 to i32, !dbg !50
  %215 = and i32 %214, 8388607, !dbg !50
  %216 = or disjoint i32 %215, 1065353216, !dbg !50
  %217 = bitcast i32 %216 to float, !dbg !50
  %218 = lshr i32 %214, 23, !dbg !50
  %219 = uitofp nneg i32 %218 to float, !dbg !50
  %220 = fadd float %expo.i.i.1.i9, %219, !dbg !50
  %221 = fcmp ogt float %217, 0x3FF6A09E60000000, !dbg !50
  %222 = fmul float %217, 5.000000e-01, !dbg !50
  %223 = fadd float %220, 1.000000e+00, !dbg !50
  %expo.i.i.2.i10 = select i1 %221, float %223, float %220, !dbg !50
  %m.i.i.0.i11 = select i1 %221, float %222, float %217, !dbg !50
  %224 = fadd float %m.i.i.0.i11, -1.000000e+00, !dbg !50
  %225 = fadd float %m.i.i.0.i11, 1.000000e+00, !dbg !50
  %226 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %225) #7, !dbg !50, !srcloc !42
  %227 = fmul float %224, 2.000000e+00, !dbg !50
  %228 = fmul float %226, %227, !dbg !50
  %229 = fmul float %228, %228, !dbg !50
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not14.i12 = icmp eq i32 %230, 0, !dbg !50
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %229, float 0x3F8995EC60000000) #6, !dbg !50
  %232 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %229, float 0x3F8995EC60000000) #6, !dbg !50
  %.020.i13 = select i1 %.not14.i12, float %232, float %231, !dbg !50
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not15.i14 = icmp eq i32 %233, 0, !dbg !50
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i13, float %229, float 0x3FB55557A0000000) #6, !dbg !50
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i13, float %229, float 0x3FB55557A0000000) #6, !dbg !50
  %.021.i15 = select i1 %.not15.i14, float %235, float %234, !dbg !50
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not16.i16 = icmp eq i32 %236, 0, !dbg !50
  %237 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i15, float %229) #6, !dbg !50
  %238 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i15, float %229) #6, !dbg !50
  %.022.i17 = select i1 %.not16.i16, float %238, float %237, !dbg !50
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not17.i18 = icmp eq i32 %239, 0, !dbg !50
  %240 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i17, float %228) #6, !dbg !50
  %241 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i17, float %228) #6, !dbg !50
  %.024.i19 = select i1 %.not17.i18, float %241, float %240, !dbg !50
  %242 = fsub float %224, %228, !dbg !50
  %243 = fmul float %242, 2.000000e+00, !dbg !50
  %244 = fneg float %228, !dbg !50
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not18.i20 = icmp eq i32 %245, 0, !dbg !50
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %244, float %224, float %243) #6, !dbg !50
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %244, float %224, float %243) #6, !dbg !50
  %.025.i21 = select i1 %.not18.i20, float %247, float %246, !dbg !50
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not19.i22 = icmp eq i32 %248, 0, !dbg !50
  %249 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %226, float %.025.i21) #6, !dbg !50
  %250 = tail call float @llvm.nvvm.mul.rn.f(float %226, float %.025.i21) #6, !dbg !50
  %.026.i23 = select i1 %.not19.i22, float %250, float %249, !dbg !50
  %251 = fadd float %228, %.024.i19, !dbg !50
  %252 = fsub float %228, %251, !dbg !50
  %253 = fadd float %.024.i19, %252, !dbg !50
  %254 = fadd float %.026.i23, %253, !dbg !50
  %255 = fadd float %251, %254, !dbg !50
  %256 = fsub float %251, %255, !dbg !50
  %257 = fadd float %254, %256, !dbg !50
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not20.i24 = icmp eq i32 %258, 0, !dbg !50
  %259 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i10, float 0x3FE62E4000000000) #6, !dbg !50
  %260 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i10, float 0x3FE62E4000000000) #6, !dbg !50
  %.019.i25 = select i1 %.not20.i24, float %260, float %259, !dbg !50
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not21.i26 = icmp eq i32 %261, 0, !dbg !50
  %262 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i10, float 0x3EB7F7D1C0000000) #6, !dbg !50
  %263 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i10, float 0x3EB7F7D1C0000000) #6, !dbg !50
  %.018.i27 = select i1 %.not21.i26, float %263, float %262, !dbg !50
  %264 = fadd float %.019.i25, %255, !dbg !50
  %265 = fsub float %.019.i25, %264, !dbg !50
  %266 = fadd float %255, %265, !dbg !50
  %267 = fadd float %257, %266, !dbg !50
  %268 = fadd float %.018.i27, %267, !dbg !50
  %269 = fadd float %264, %268, !dbg !50
  %270 = fsub float %264, %269, !dbg !50
  %271 = fadd float %268, %270, !dbg !50
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not22.i28 = icmp eq i32 %272, 0, !dbg !50
  %.027.i29 = select i1 %.not22.i28, float %119, float %118, !dbg !50
  %273 = fcmp ogt float %.027.i29, 0x46FED09BE0000000, !dbg !50
  %.013.i30 = select i1 %273, float 0xBF05555560000000, float 0xBFD5555560000000, !dbg !50
  %274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not23.i31 = icmp eq i32 %274, 0, !dbg !50
  %275 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i30, float %269) #6, !dbg !50
  %276 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i30, float %269) #6, !dbg !50
  %.028.i32 = select i1 %.not23.i31, float %276, float %275, !dbg !50
  %277 = fneg float %.028.i32, !dbg !50
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not24.i33 = icmp eq i32 %278, 0, !dbg !50
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i30, float %269, float %277) #6, !dbg !50
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i30, float %269, float %277) #6, !dbg !50
  %.029.i34 = select i1 %.not24.i33, float %280, float %279, !dbg !50
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not25.i35 = icmp eq i32 %281, 0, !dbg !50
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i30, float %271, float %.029.i34) #6, !dbg !50
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i30, float %271, float %.029.i34) #6, !dbg !50
  %.030.i36 = select i1 %.not25.i35, float %283, float %282, !dbg !50
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not26.i37 = icmp eq i32 %284, 0, !dbg !50
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %269, float %.030.i36) #6, !dbg !50
  %286 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %269, float %.030.i36) #6, !dbg !50
  %.031.i38 = select i1 %.not26.i37, float %286, float %285, !dbg !50
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not27.i39 = icmp eq i32 %287, 0, !dbg !50
  %288 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i32, float %.031.i38) #6, !dbg !50
  %289 = tail call float @llvm.nvvm.add.rn.f(float %.028.i32, float %.031.i38) #6, !dbg !50
  %.032.i40 = select i1 %.not27.i39, float %289, float %288, !dbg !50
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %292 = bitcast float %.032.i40 to i32, !dbg !50
  %293 = icmp eq i32 %292, 1118925336, !dbg !50
  %prod.i.145.0.i46 = select i1 %293, float 0x40562E42E0000000, float %.032.i40, !dbg !50
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not30.i47 = icmp eq i32 %294, 0, !dbg !50
  %295 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i46, float 0x3FF7154760000000) #6, !dbg !50
  %296 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i46, float 0x3FF7154760000000) #6, !dbg !50
  %.017.i48 = select i1 %.not30.i47, float %296, float %295, !dbg !50
  %297 = tail call float @llvm.nvvm.trunc.f(float %.017.i48) #6, !dbg !50
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not31.i49 = icmp eq i32 %298, 0, !dbg !50
  %299 = tail call float @llvm.nvvm.fabs.ftz.f(float %297) #6, !dbg !50
  %300 = tail call float @llvm.nvvm.fabs.f(float %297) #6, !dbg !50
  %.023.i50 = select i1 %.not31.i49, float %300, float %299, !dbg !50
  %301 = fcmp ogt float %.023.i50, 1.260000e+02, !dbg !50
  %302 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %297), !dbg !50
  %j.i.i.0.i51 = select i1 %301, float %302, float %297, !dbg !50
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not32.i52 = icmp eq i32 %303, 0, !dbg !50
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i51, float 0xBFE62E4300000000, float %prod.i.145.0.i46) #6, !dbg !50
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i51, float 0xBFE62E4300000000, float %prod.i.145.0.i46) #6, !dbg !50
  %.035.i53 = select i1 %.not32.i52, float %305, float %304, !dbg !50
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not33.i54 = icmp eq i32 %306, 0, !dbg !50
  %307 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i51, float 0x3E205C6100000000, float %.035.i53) #6, !dbg !50
  %308 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i51, float 0x3E205C6100000000, float %.035.i53) #6, !dbg !50
  %.036.i55 = select i1 %.not33.i54, float %308, float %307, !dbg !50
  %309 = fmul float %.036.i55, 0x3FF7154760000000, !dbg !50
  %310 = fadd float %j.i.i.0.i51, 0x4168000FE0000000, !dbg !50
  %311 = bitcast float %310 to i32, !dbg !50
  %312 = shl i32 %311, 23, !dbg !50
  %313 = bitcast i32 %312 to float, !dbg !50
  %314 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %309) #6, !dbg !50
  %315 = fmul float %314, %313, !dbg !50
  %316 = fcmp une float %315, 0x7FF0000000000000, !dbg !50
  br i1 %316, label %__internal_fmad.exit.i.i81, label %__internal_accurate_powf.exit.i56, !dbg !50

__internal_fmad.exit.i.i81:                       ; preds = %__nv_powf.exit
  %.not29.i43 = icmp eq i32 %291, 0, !dbg !50
  %.not28.i41 = icmp eq i32 %290, 0, !dbg !50
  %317 = fneg float %.032.i40, !dbg !50
  %318 = tail call float @llvm.nvvm.add.rn.f(float %.028.i32, float %317) #6, !dbg !50
  %319 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i32, float %317) #6, !dbg !50
  %.033.i42 = select i1 %.not28.i41, float %318, float %319, !dbg !50
  %320 = tail call float @llvm.nvvm.add.rn.f(float %.033.i42, float %.031.i38) #6, !dbg !50
  %321 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i42, float %.031.i38) #6, !dbg !50
  %.034.i44 = select i1 %.not29.i43, float %320, float %321, !dbg !50
  %322 = fadd float %.034.i44, 0x3EE0000000000000, !dbg !50
  %prod.i.044.0.i45 = select i1 %293, float %322, float %.034.i44, !dbg !50
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not34.i82 = icmp eq i32 %323, 0, !dbg !50
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %315, float %prod.i.044.0.i45, float %315) #6, !dbg !50
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %315, float %prod.i.044.0.i45, float %315) #6, !dbg !50
  %.014.i83 = select i1 %.not34.i82, float %325, float %324, !dbg !50
  br label %__internal_accurate_powf.exit.i56, !dbg !50

__internal_accurate_powf.exit.i56:                ; preds = %__internal_fmad.exit.i.i81, %__nv_powf.exit
  %t.i.0.i57 = phi float [ %.014.i83, %__internal_fmad.exit.i.i81 ], [ 0x7FF0000000000000, %__nv_powf.exit ], !dbg !50
  %326 = fcmp oeq float %204, 0.000000e+00, !dbg !50
  br i1 %326, label %327, label %__internal_powf_corner_cases.exit.i58, !dbg !50

327:                                              ; preds = %__internal_accurate_powf.exit.i56
  %328 = fadd float %204, %204, !dbg !50
  %329 = bitcast float %328 to i32, !dbg !50
  %330 = or i32 %329, 2139095040, !dbg !50
  %331 = bitcast i32 %330 to float, !dbg !50
  %332 = select i1 %206, float %331, float 0x7FF0000000000000, !dbg !50
  br label %__internal_powf_corner_cases.exit.i58, !dbg !50

__internal_powf_corner_cases.exit.i58:            ; preds = %__internal_accurate_powf.exit.i56, %327
  %.212.i59 = phi float [ %332, %327 ], [ %t.i.0.i57, %__internal_accurate_powf.exit.i56 ], !dbg !50
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not35.i60 = icmp eq i32 %333, 0, !dbg !50
  %.01.i61 = select i1 %.not35.i60, float %209, float %208, !dbg !50
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not36.i62 = icmp eq i32 %334, 0, !dbg !50
  %.02.i63 = select i1 %.not36.i62, float %119, float %118, !dbg !50
  %335 = fadd float %.01.i61, %.02.i63, !dbg !50
  %336 = bitcast float %335 to i32, !dbg !50
  %337 = icmp sgt i32 %336, 2139095039, !dbg !50
  br i1 %337, label %__nv_isnanf.exit.i.i66, label %__nv_powf.exit84, !dbg !50

__nv_isnanf.exit.i.i66:                           ; preds = %__internal_powf_corner_cases.exit.i58
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not37.i67 = icmp eq i32 %338, 0, !dbg !50
  %.06.i68 = select i1 %.not37.i67, float %209, float %208, !dbg !50
  %339 = fcmp uno float %.06.i68, 0.000000e+00, !dbg !50
  br i1 %339, label %342, label %__nv_isnanf.exit11.i.i69, !dbg !50

__nv_isnanf.exit11.i.i69:                         ; preds = %__nv_isnanf.exit.i.i66
  %340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not38.i70 = icmp eq i32 %340, 0, !dbg !50
  %.07.i71 = select i1 %.not38.i70, float %119, float %118, !dbg !50
  %341 = fcmp uno float %.07.i71, 0.000000e+00, !dbg !50
  br i1 %341, label %342, label %__nv_isinff.exit8.i.i72, !dbg !50

342:                                              ; preds = %__nv_isnanf.exit11.i.i69, %__nv_isnanf.exit.i.i66
  %343 = fadd float %204, 0xBFD5555560000000, !dbg !50
  br label %__nv_powf.exit84, !dbg !50

__nv_isinff.exit8.i.i72:                          ; preds = %__nv_isnanf.exit11.i.i69
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not39.i73 = icmp eq i32 %344, 0, !dbg !50
  %.05.i74 = select i1 %.not39.i73, float %119, float %118, !dbg !50
  %345 = fcmp oeq float %.05.i74, 0x7FF0000000000000, !dbg !50
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !50
  %.not41.i79 = icmp eq i32 %346, 0, !dbg !50
  %.04.i80 = select i1 %.not41.i79, float %209, float %208, !dbg !50
  br i1 %345, label %__nv_fabsf.exit5.i.i78, label %__nv_isinff.exit.i.i75, !dbg !50

__nv_fabsf.exit5.i.i78:                           ; preds = %__nv_isinff.exit8.i.i72
  %347 = fcmp ogt float %.04.i80, 1.000000e+00, !dbg !50
  %348 = select i1 %347, float 0.000000e+00, float 0x7FF0000000000000, !dbg !50
  br label %__nv_powf.exit84, !dbg !50

__nv_isinff.exit.i.i75:                           ; preds = %__nv_isinff.exit8.i.i72
  %349 = fcmp oeq float %.04.i80, 0x7FF0000000000000, !dbg !50
  br i1 %349, label %350, label %__nv_powf.exit84, !dbg !50

350:                                              ; preds = %__nv_isinff.exit.i.i75
  br label %__nv_powf.exit84, !dbg !50

__nv_powf.exit84:                                 ; preds = %__internal_powf_corner_cases.exit.i58, %342, %__nv_fabsf.exit5.i.i78, %__nv_isinff.exit.i.i75, %350
  %.3.i64 = phi float [ %.212.i59, %__internal_powf_corner_cases.exit.i58 ], [ %343, %342 ], [ %348, %__nv_fabsf.exit5.i.i78 ], [ 0.000000e+00, %350 ], [ %.212.i59, %__nv_isinff.exit.i.i75 ], !dbg !50
  %351 = fcmp oeq float %204, 1.000000e+00, !dbg !50
  %t.0.i65 = select i1 %351, float 1.000000e+00, float %.3.i64, !dbg !50
  %352 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %t.0.i65) #6, !dbg !51
  %353 = fsub float %32, %18, !dbg !52
  %354 = fmul float %353, 3.000000e+00, !dbg !53
  %355 = fsub float 1.000000e+00, %354, !dbg !54
  %356 = fcmp olt float %355, 0.000000e+00, !dbg !55
  %357 = select i1 %356, float 0.000000e+00, float %355, !dbg !57
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not.i85 = icmp eq i32 %358, 0, !dbg !58
  %.08.i86 = select i1 %.not.i85, float %50, float %49, !dbg !58
  %359 = fcmp oeq float %.08.i86, 1.000000e+00, !dbg !58
  %360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not12.i87 = icmp eq i32 %360, 0, !dbg !58
  %361 = tail call float @llvm.nvvm.fabs.ftz.f(float %357) #6, !dbg !58
  %362 = tail call float @llvm.nvvm.fabs.f(float %357) #6, !dbg !58
  %.09.i88 = select i1 %.not12.i87, float %362, float %361, !dbg !58
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not13.i89 = icmp eq i32 %363, 0, !dbg !58
  %364 = fcmp olt float %.09.i88, 0x3810000000000000, !dbg !58
  %365 = fmul float %.09.i88, 0x4170000000000000, !dbg !58
  %366 = select i1 %.not13.i89, i1 %364, i1 false, !dbg !58
  %.116.i92 = select i1 %366, float %365, float %.09.i88, !dbg !58
  %expo.i.i.1.i93 = select i1 %366, float -1.510000e+02, float -1.270000e+02, !dbg !58
  %367 = bitcast float %.116.i92 to i32, !dbg !58
  %368 = and i32 %367, 8388607, !dbg !58
  %369 = or disjoint i32 %368, 1065353216, !dbg !58
  %370 = bitcast i32 %369 to float, !dbg !58
  %371 = lshr i32 %367, 23, !dbg !58
  %372 = uitofp nneg i32 %371 to float, !dbg !58
  %373 = fadd float %expo.i.i.1.i93, %372, !dbg !58
  %374 = fcmp ogt float %370, 0x3FF6A09E60000000, !dbg !58
  %375 = fmul float %370, 5.000000e-01, !dbg !58
  %376 = fadd float %373, 1.000000e+00, !dbg !58
  %expo.i.i.2.i94 = select i1 %374, float %376, float %373, !dbg !58
  %m.i.i.0.i95 = select i1 %374, float %375, float %370, !dbg !58
  %377 = fadd float %m.i.i.0.i95, -1.000000e+00, !dbg !58
  %378 = fadd float %m.i.i.0.i95, 1.000000e+00, !dbg !58
  %379 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %378) #7, !dbg !58, !srcloc !42
  %380 = fmul float %377, 2.000000e+00, !dbg !58
  %381 = fmul float %379, %380, !dbg !58
  %382 = fmul float %381, %381, !dbg !58
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not14.i96 = icmp eq i32 %383, 0, !dbg !58
  %384 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %382, float 0x3F8995EC60000000) #6, !dbg !58
  %385 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %382, float 0x3F8995EC60000000) #6, !dbg !58
  %.020.i97 = select i1 %.not14.i96, float %385, float %384, !dbg !58
  %386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not15.i98 = icmp eq i32 %386, 0, !dbg !58
  %387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i97, float %382, float 0x3FB55557A0000000) #6, !dbg !58
  %388 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i97, float %382, float 0x3FB55557A0000000) #6, !dbg !58
  %.021.i99 = select i1 %.not15.i98, float %388, float %387, !dbg !58
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not16.i100 = icmp eq i32 %389, 0, !dbg !58
  %390 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i99, float %382) #6, !dbg !58
  %391 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i99, float %382) #6, !dbg !58
  %.022.i101 = select i1 %.not16.i100, float %391, float %390, !dbg !58
  %392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not17.i102 = icmp eq i32 %392, 0, !dbg !58
  %393 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i101, float %381) #6, !dbg !58
  %394 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i101, float %381) #6, !dbg !58
  %.024.i103 = select i1 %.not17.i102, float %394, float %393, !dbg !58
  %395 = fsub float %377, %381, !dbg !58
  %396 = fmul float %395, 2.000000e+00, !dbg !58
  %397 = fneg float %381, !dbg !58
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not18.i104 = icmp eq i32 %398, 0, !dbg !58
  %399 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %397, float %377, float %396) #6, !dbg !58
  %400 = tail call float @llvm.nvvm.fma.rn.f(float %397, float %377, float %396) #6, !dbg !58
  %.025.i105 = select i1 %.not18.i104, float %400, float %399, !dbg !58
  %401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not19.i106 = icmp eq i32 %401, 0, !dbg !58
  %402 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %379, float %.025.i105) #6, !dbg !58
  %403 = tail call float @llvm.nvvm.mul.rn.f(float %379, float %.025.i105) #6, !dbg !58
  %.026.i107 = select i1 %.not19.i106, float %403, float %402, !dbg !58
  %404 = fadd float %381, %.024.i103, !dbg !58
  %405 = fsub float %381, %404, !dbg !58
  %406 = fadd float %.024.i103, %405, !dbg !58
  %407 = fadd float %.026.i107, %406, !dbg !58
  %408 = fadd float %404, %407, !dbg !58
  %409 = fsub float %404, %408, !dbg !58
  %410 = fadd float %407, %409, !dbg !58
  %411 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not20.i108 = icmp eq i32 %411, 0, !dbg !58
  %412 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i94, float 0x3FE62E4000000000) #6, !dbg !58
  %413 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i94, float 0x3FE62E4000000000) #6, !dbg !58
  %.019.i109 = select i1 %.not20.i108, float %413, float %412, !dbg !58
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not21.i110 = icmp eq i32 %414, 0, !dbg !58
  %415 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i94, float 0x3EB7F7D1C0000000) #6, !dbg !58
  %416 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i94, float 0x3EB7F7D1C0000000) #6, !dbg !58
  %.018.i111 = select i1 %.not21.i110, float %416, float %415, !dbg !58
  %417 = fadd float %.019.i109, %408, !dbg !58
  %418 = fsub float %.019.i109, %417, !dbg !58
  %419 = fadd float %408, %418, !dbg !58
  %420 = fadd float %410, %419, !dbg !58
  %421 = fadd float %.018.i111, %420, !dbg !58
  %422 = fadd float %417, %421, !dbg !58
  %423 = fsub float %417, %422, !dbg !58
  %424 = fadd float %421, %423, !dbg !58
  %425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not22.i112 = icmp eq i32 %425, 0, !dbg !58
  %.027.i113 = select i1 %.not22.i112, float %119, float %118, !dbg !58
  %426 = fcmp ogt float %.027.i113, 0x46FED09BE0000000, !dbg !58
  %.013.i114 = select i1 %426, float 0xBF05555560000000, float 0xBFD5555560000000, !dbg !58
  %427 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not23.i115 = icmp eq i32 %427, 0, !dbg !58
  %428 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i114, float %422) #6, !dbg !58
  %429 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i114, float %422) #6, !dbg !58
  %.028.i116 = select i1 %.not23.i115, float %429, float %428, !dbg !58
  %430 = fneg float %.028.i116, !dbg !58
  %431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not24.i117 = icmp eq i32 %431, 0, !dbg !58
  %432 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i114, float %422, float %430) #6, !dbg !58
  %433 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i114, float %422, float %430) #6, !dbg !58
  %.029.i118 = select i1 %.not24.i117, float %433, float %432, !dbg !58
  %434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not25.i119 = icmp eq i32 %434, 0, !dbg !58
  %435 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i114, float %424, float %.029.i118) #6, !dbg !58
  %436 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i114, float %424, float %.029.i118) #6, !dbg !58
  %.030.i120 = select i1 %.not25.i119, float %436, float %435, !dbg !58
  %437 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not26.i121 = icmp eq i32 %437, 0, !dbg !58
  %438 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %422, float %.030.i120) #6, !dbg !58
  %439 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %422, float %.030.i120) #6, !dbg !58
  %.031.i122 = select i1 %.not26.i121, float %439, float %438, !dbg !58
  %440 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not27.i123 = icmp eq i32 %440, 0, !dbg !58
  %441 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i116, float %.031.i122) #6, !dbg !58
  %442 = tail call float @llvm.nvvm.add.rn.f(float %.028.i116, float %.031.i122) #6, !dbg !58
  %.032.i124 = select i1 %.not27.i123, float %442, float %441, !dbg !58
  %443 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %444 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %445 = bitcast float %.032.i124 to i32, !dbg !58
  %446 = icmp eq i32 %445, 1118925336, !dbg !58
  %prod.i.145.0.i130 = select i1 %446, float 0x40562E42E0000000, float %.032.i124, !dbg !58
  %447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not30.i131 = icmp eq i32 %447, 0, !dbg !58
  %448 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i130, float 0x3FF7154760000000) #6, !dbg !58
  %449 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i130, float 0x3FF7154760000000) #6, !dbg !58
  %.017.i132 = select i1 %.not30.i131, float %449, float %448, !dbg !58
  %450 = tail call float @llvm.nvvm.trunc.f(float %.017.i132) #6, !dbg !58
  %451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not31.i133 = icmp eq i32 %451, 0, !dbg !58
  %452 = tail call float @llvm.nvvm.fabs.ftz.f(float %450) #6, !dbg !58
  %453 = tail call float @llvm.nvvm.fabs.f(float %450) #6, !dbg !58
  %.023.i134 = select i1 %.not31.i133, float %453, float %452, !dbg !58
  %454 = fcmp ogt float %.023.i134, 1.260000e+02, !dbg !58
  %455 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %450), !dbg !58
  %j.i.i.0.i135 = select i1 %454, float %455, float %450, !dbg !58
  %456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not32.i136 = icmp eq i32 %456, 0, !dbg !58
  %457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i135, float 0xBFE62E4300000000, float %prod.i.145.0.i130) #6, !dbg !58
  %458 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i135, float 0xBFE62E4300000000, float %prod.i.145.0.i130) #6, !dbg !58
  %.035.i137 = select i1 %.not32.i136, float %458, float %457, !dbg !58
  %459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not33.i138 = icmp eq i32 %459, 0, !dbg !58
  %460 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i135, float 0x3E205C6100000000, float %.035.i137) #6, !dbg !58
  %461 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i135, float 0x3E205C6100000000, float %.035.i137) #6, !dbg !58
  %.036.i139 = select i1 %.not33.i138, float %461, float %460, !dbg !58
  %462 = fmul float %.036.i139, 0x3FF7154760000000, !dbg !58
  %463 = fadd float %j.i.i.0.i135, 0x4168000FE0000000, !dbg !58
  %464 = bitcast float %463 to i32, !dbg !58
  %465 = shl i32 %464, 23, !dbg !58
  %466 = bitcast i32 %465 to float, !dbg !58
  %467 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %462) #6, !dbg !58
  %468 = fmul float %467, %466, !dbg !58
  %469 = fcmp une float %468, 0x7FF0000000000000, !dbg !58
  br i1 %469, label %__internal_fmad.exit.i.i165, label %__internal_accurate_powf.exit.i140, !dbg !58

__internal_fmad.exit.i.i165:                      ; preds = %__nv_powf.exit84
  %.not29.i127 = icmp eq i32 %444, 0, !dbg !58
  %.not28.i125 = icmp eq i32 %443, 0, !dbg !58
  %470 = fneg float %.032.i124, !dbg !58
  %471 = tail call float @llvm.nvvm.add.rn.f(float %.028.i116, float %470) #6, !dbg !58
  %472 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i116, float %470) #6, !dbg !58
  %.033.i126 = select i1 %.not28.i125, float %471, float %472, !dbg !58
  %473 = tail call float @llvm.nvvm.add.rn.f(float %.033.i126, float %.031.i122) #6, !dbg !58
  %474 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i126, float %.031.i122) #6, !dbg !58
  %.034.i128 = select i1 %.not29.i127, float %473, float %474, !dbg !58
  %475 = fadd float %.034.i128, 0x3EE0000000000000, !dbg !58
  %prod.i.044.0.i129 = select i1 %446, float %475, float %.034.i128, !dbg !58
  %476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not34.i166 = icmp eq i32 %476, 0, !dbg !58
  %477 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %468, float %prod.i.044.0.i129, float %468) #6, !dbg !58
  %478 = tail call float @llvm.nvvm.fma.rn.f(float %468, float %prod.i.044.0.i129, float %468) #6, !dbg !58
  %.014.i167 = select i1 %.not34.i166, float %478, float %477, !dbg !58
  br label %__internal_accurate_powf.exit.i140, !dbg !58

__internal_accurate_powf.exit.i140:               ; preds = %__internal_fmad.exit.i.i165, %__nv_powf.exit84
  %t.i.0.i141 = phi float [ %.014.i167, %__internal_fmad.exit.i.i165 ], [ 0x7FF0000000000000, %__nv_powf.exit84 ], !dbg !58
  %479 = fcmp oeq float %357, 0.000000e+00, !dbg !58
  br i1 %479, label %480, label %__internal_powf_corner_cases.exit.i142, !dbg !58

480:                                              ; preds = %__internal_accurate_powf.exit.i140
  %481 = fadd float %357, %357, !dbg !58
  %482 = bitcast float %481 to i32, !dbg !58
  %483 = or i32 %482, 2139095040, !dbg !58
  %484 = bitcast i32 %483 to float, !dbg !58
  %485 = select i1 %359, float %484, float 0x7FF0000000000000, !dbg !58
  br label %__internal_powf_corner_cases.exit.i142, !dbg !58

__internal_powf_corner_cases.exit.i142:           ; preds = %__internal_accurate_powf.exit.i140, %480
  %.212.i143 = phi float [ %485, %480 ], [ %t.i.0.i141, %__internal_accurate_powf.exit.i140 ], !dbg !58
  %486 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not35.i144 = icmp eq i32 %486, 0, !dbg !58
  %.01.i145 = select i1 %.not35.i144, float %362, float %361, !dbg !58
  %487 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not36.i146 = icmp eq i32 %487, 0, !dbg !58
  %.02.i147 = select i1 %.not36.i146, float %119, float %118, !dbg !58
  %488 = fadd float %.01.i145, %.02.i147, !dbg !58
  %489 = bitcast float %488 to i32, !dbg !58
  %490 = icmp sgt i32 %489, 2139095039, !dbg !58
  br i1 %490, label %__nv_isnanf.exit.i.i150, label %__nv_powf.exit168, !dbg !58

__nv_isnanf.exit.i.i150:                          ; preds = %__internal_powf_corner_cases.exit.i142
  %491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not37.i151 = icmp eq i32 %491, 0, !dbg !58
  %.06.i152 = select i1 %.not37.i151, float %362, float %361, !dbg !58
  %492 = fcmp uno float %.06.i152, 0.000000e+00, !dbg !58
  br i1 %492, label %495, label %__nv_isnanf.exit11.i.i153, !dbg !58

__nv_isnanf.exit11.i.i153:                        ; preds = %__nv_isnanf.exit.i.i150
  %493 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not38.i154 = icmp eq i32 %493, 0, !dbg !58
  %.07.i155 = select i1 %.not38.i154, float %119, float %118, !dbg !58
  %494 = fcmp uno float %.07.i155, 0.000000e+00, !dbg !58
  br i1 %494, label %495, label %__nv_isinff.exit8.i.i156, !dbg !58

495:                                              ; preds = %__nv_isnanf.exit11.i.i153, %__nv_isnanf.exit.i.i150
  %496 = fadd float %357, 0xBFD5555560000000, !dbg !58
  br label %__nv_powf.exit168, !dbg !58

__nv_isinff.exit8.i.i156:                         ; preds = %__nv_isnanf.exit11.i.i153
  %497 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not39.i157 = icmp eq i32 %497, 0, !dbg !58
  %.05.i158 = select i1 %.not39.i157, float %119, float %118, !dbg !58
  %498 = fcmp oeq float %.05.i158, 0x7FF0000000000000, !dbg !58
  %499 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !58
  %.not41.i163 = icmp eq i32 %499, 0, !dbg !58
  %.04.i164 = select i1 %.not41.i163, float %362, float %361, !dbg !58
  br i1 %498, label %__nv_fabsf.exit5.i.i162, label %__nv_isinff.exit.i.i159, !dbg !58

__nv_fabsf.exit5.i.i162:                          ; preds = %__nv_isinff.exit8.i.i156
  %500 = fcmp ogt float %.04.i164, 1.000000e+00, !dbg !58
  %501 = select i1 %500, float 0.000000e+00, float 0x7FF0000000000000, !dbg !58
  br label %__nv_powf.exit168, !dbg !58

__nv_isinff.exit.i.i159:                          ; preds = %__nv_isinff.exit8.i.i156
  %502 = fcmp oeq float %.04.i164, 0x7FF0000000000000, !dbg !58
  br i1 %502, label %503, label %__nv_powf.exit168, !dbg !58

503:                                              ; preds = %__nv_isinff.exit.i.i159
  br label %__nv_powf.exit168, !dbg !58

__nv_powf.exit168:                                ; preds = %__internal_powf_corner_cases.exit.i142, %495, %__nv_fabsf.exit5.i.i162, %__nv_isinff.exit.i.i159, %503
  %.3.i148 = phi float [ %.212.i143, %__internal_powf_corner_cases.exit.i142 ], [ %496, %495 ], [ %501, %__nv_fabsf.exit5.i.i162 ], [ 0.000000e+00, %503 ], [ %.212.i143, %__nv_isinff.exit.i.i159 ], !dbg !58
  %504 = fcmp oeq float %357, 1.000000e+00, !dbg !58
  %t.0.i149 = select i1 %504, float 1.000000e+00, float %.3.i148, !dbg !58
  %505 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %t.0.i149) #6, !dbg !59
  %506 = fsub float %39, %18, !dbg !60
  %507 = fmul float %506, 3.000000e+00, !dbg !61
  %508 = fsub float 1.000000e+00, %507, !dbg !62
  %509 = fcmp olt float %508, 0.000000e+00, !dbg !63
  %510 = select i1 %509, float 0.000000e+00, float %508, !dbg !65
  %511 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not.i169 = icmp eq i32 %511, 0, !dbg !66
  %.08.i170 = select i1 %.not.i169, float %50, float %49, !dbg !66
  %512 = fcmp oeq float %.08.i170, 1.000000e+00, !dbg !66
  %513 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not12.i171 = icmp eq i32 %513, 0, !dbg !66
  %514 = tail call float @llvm.nvvm.fabs.ftz.f(float %510) #6, !dbg !66
  %515 = tail call float @llvm.nvvm.fabs.f(float %510) #6, !dbg !66
  %.09.i172 = select i1 %.not12.i171, float %515, float %514, !dbg !66
  %516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not13.i173 = icmp eq i32 %516, 0, !dbg !66
  %517 = fcmp olt float %.09.i172, 0x3810000000000000, !dbg !66
  %518 = fmul float %.09.i172, 0x4170000000000000, !dbg !66
  %519 = select i1 %.not13.i173, i1 %517, i1 false, !dbg !66
  %.116.i176 = select i1 %519, float %518, float %.09.i172, !dbg !66
  %expo.i.i.1.i177 = select i1 %519, float -1.510000e+02, float -1.270000e+02, !dbg !66
  %520 = bitcast float %.116.i176 to i32, !dbg !66
  %521 = and i32 %520, 8388607, !dbg !66
  %522 = or disjoint i32 %521, 1065353216, !dbg !66
  %523 = bitcast i32 %522 to float, !dbg !66
  %524 = lshr i32 %520, 23, !dbg !66
  %525 = uitofp nneg i32 %524 to float, !dbg !66
  %526 = fadd float %expo.i.i.1.i177, %525, !dbg !66
  %527 = fcmp ogt float %523, 0x3FF6A09E60000000, !dbg !66
  %528 = fmul float %523, 5.000000e-01, !dbg !66
  %529 = fadd float %526, 1.000000e+00, !dbg !66
  %expo.i.i.2.i178 = select i1 %527, float %529, float %526, !dbg !66
  %m.i.i.0.i179 = select i1 %527, float %528, float %523, !dbg !66
  %530 = fadd float %m.i.i.0.i179, -1.000000e+00, !dbg !66
  %531 = fadd float %m.i.i.0.i179, 1.000000e+00, !dbg !66
  %532 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %531) #7, !dbg !66, !srcloc !42
  %533 = fmul float %530, 2.000000e+00, !dbg !66
  %534 = fmul float %532, %533, !dbg !66
  %535 = fmul float %534, %534, !dbg !66
  %536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not14.i180 = icmp eq i32 %536, 0, !dbg !66
  %537 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %535, float 0x3F8995EC60000000) #6, !dbg !66
  %538 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %535, float 0x3F8995EC60000000) #6, !dbg !66
  %.020.i181 = select i1 %.not14.i180, float %538, float %537, !dbg !66
  %539 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not15.i182 = icmp eq i32 %539, 0, !dbg !66
  %540 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i181, float %535, float 0x3FB55557A0000000) #6, !dbg !66
  %541 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i181, float %535, float 0x3FB55557A0000000) #6, !dbg !66
  %.021.i183 = select i1 %.not15.i182, float %541, float %540, !dbg !66
  %542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not16.i184 = icmp eq i32 %542, 0, !dbg !66
  %543 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i183, float %535) #6, !dbg !66
  %544 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i183, float %535) #6, !dbg !66
  %.022.i185 = select i1 %.not16.i184, float %544, float %543, !dbg !66
  %545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not17.i186 = icmp eq i32 %545, 0, !dbg !66
  %546 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i185, float %534) #6, !dbg !66
  %547 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i185, float %534) #6, !dbg !66
  %.024.i187 = select i1 %.not17.i186, float %547, float %546, !dbg !66
  %548 = fsub float %530, %534, !dbg !66
  %549 = fmul float %548, 2.000000e+00, !dbg !66
  %550 = fneg float %534, !dbg !66
  %551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not18.i188 = icmp eq i32 %551, 0, !dbg !66
  %552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %550, float %530, float %549) #6, !dbg !66
  %553 = tail call float @llvm.nvvm.fma.rn.f(float %550, float %530, float %549) #6, !dbg !66
  %.025.i189 = select i1 %.not18.i188, float %553, float %552, !dbg !66
  %554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not19.i190 = icmp eq i32 %554, 0, !dbg !66
  %555 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %532, float %.025.i189) #6, !dbg !66
  %556 = tail call float @llvm.nvvm.mul.rn.f(float %532, float %.025.i189) #6, !dbg !66
  %.026.i191 = select i1 %.not19.i190, float %556, float %555, !dbg !66
  %557 = fadd float %534, %.024.i187, !dbg !66
  %558 = fsub float %534, %557, !dbg !66
  %559 = fadd float %.024.i187, %558, !dbg !66
  %560 = fadd float %.026.i191, %559, !dbg !66
  %561 = fadd float %557, %560, !dbg !66
  %562 = fsub float %557, %561, !dbg !66
  %563 = fadd float %560, %562, !dbg !66
  %564 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not20.i192 = icmp eq i32 %564, 0, !dbg !66
  %565 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i178, float 0x3FE62E4000000000) #6, !dbg !66
  %566 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i178, float 0x3FE62E4000000000) #6, !dbg !66
  %.019.i193 = select i1 %.not20.i192, float %566, float %565, !dbg !66
  %567 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not21.i194 = icmp eq i32 %567, 0, !dbg !66
  %568 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i178, float 0x3EB7F7D1C0000000) #6, !dbg !66
  %569 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i178, float 0x3EB7F7D1C0000000) #6, !dbg !66
  %.018.i195 = select i1 %.not21.i194, float %569, float %568, !dbg !66
  %570 = fadd float %.019.i193, %561, !dbg !66
  %571 = fsub float %.019.i193, %570, !dbg !66
  %572 = fadd float %561, %571, !dbg !66
  %573 = fadd float %563, %572, !dbg !66
  %574 = fadd float %.018.i195, %573, !dbg !66
  %575 = fadd float %570, %574, !dbg !66
  %576 = fsub float %570, %575, !dbg !66
  %577 = fadd float %574, %576, !dbg !66
  %578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not22.i196 = icmp eq i32 %578, 0, !dbg !66
  %.027.i197 = select i1 %.not22.i196, float %119, float %118, !dbg !66
  %579 = fcmp ogt float %.027.i197, 0x46FED09BE0000000, !dbg !66
  %.013.i198 = select i1 %579, float 0xBF05555560000000, float 0xBFD5555560000000, !dbg !66
  %580 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not23.i199 = icmp eq i32 %580, 0, !dbg !66
  %581 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i198, float %575) #6, !dbg !66
  %582 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i198, float %575) #6, !dbg !66
  %.028.i200 = select i1 %.not23.i199, float %582, float %581, !dbg !66
  %583 = fneg float %.028.i200, !dbg !66
  %584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not24.i201 = icmp eq i32 %584, 0, !dbg !66
  %585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i198, float %575, float %583) #6, !dbg !66
  %586 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i198, float %575, float %583) #6, !dbg !66
  %.029.i202 = select i1 %.not24.i201, float %586, float %585, !dbg !66
  %587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not25.i203 = icmp eq i32 %587, 0, !dbg !66
  %588 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i198, float %577, float %.029.i202) #6, !dbg !66
  %589 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i198, float %577, float %.029.i202) #6, !dbg !66
  %.030.i204 = select i1 %.not25.i203, float %589, float %588, !dbg !66
  %590 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not26.i205 = icmp eq i32 %590, 0, !dbg !66
  %591 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %575, float %.030.i204) #6, !dbg !66
  %592 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %575, float %.030.i204) #6, !dbg !66
  %.031.i206 = select i1 %.not26.i205, float %592, float %591, !dbg !66
  %593 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not27.i207 = icmp eq i32 %593, 0, !dbg !66
  %594 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i200, float %.031.i206) #6, !dbg !66
  %595 = tail call float @llvm.nvvm.add.rn.f(float %.028.i200, float %.031.i206) #6, !dbg !66
  %.032.i208 = select i1 %.not27.i207, float %595, float %594, !dbg !66
  %596 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %597 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %598 = bitcast float %.032.i208 to i32, !dbg !66
  %599 = icmp eq i32 %598, 1118925336, !dbg !66
  %prod.i.145.0.i214 = select i1 %599, float 0x40562E42E0000000, float %.032.i208, !dbg !66
  %600 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not30.i215 = icmp eq i32 %600, 0, !dbg !66
  %601 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i214, float 0x3FF7154760000000) #6, !dbg !66
  %602 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i214, float 0x3FF7154760000000) #6, !dbg !66
  %.017.i216 = select i1 %.not30.i215, float %602, float %601, !dbg !66
  %603 = tail call float @llvm.nvvm.trunc.f(float %.017.i216) #6, !dbg !66
  %604 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not31.i217 = icmp eq i32 %604, 0, !dbg !66
  %605 = tail call float @llvm.nvvm.fabs.ftz.f(float %603) #6, !dbg !66
  %606 = tail call float @llvm.nvvm.fabs.f(float %603) #6, !dbg !66
  %.023.i218 = select i1 %.not31.i217, float %606, float %605, !dbg !66
  %607 = fcmp ogt float %.023.i218, 1.260000e+02, !dbg !66
  %608 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %603), !dbg !66
  %j.i.i.0.i219 = select i1 %607, float %608, float %603, !dbg !66
  %609 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not32.i220 = icmp eq i32 %609, 0, !dbg !66
  %610 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i219, float 0xBFE62E4300000000, float %prod.i.145.0.i214) #6, !dbg !66
  %611 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i219, float 0xBFE62E4300000000, float %prod.i.145.0.i214) #6, !dbg !66
  %.035.i221 = select i1 %.not32.i220, float %611, float %610, !dbg !66
  %612 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not33.i222 = icmp eq i32 %612, 0, !dbg !66
  %613 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i219, float 0x3E205C6100000000, float %.035.i221) #6, !dbg !66
  %614 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i219, float 0x3E205C6100000000, float %.035.i221) #6, !dbg !66
  %.036.i223 = select i1 %.not33.i222, float %614, float %613, !dbg !66
  %615 = fmul float %.036.i223, 0x3FF7154760000000, !dbg !66
  %616 = fadd float %j.i.i.0.i219, 0x4168000FE0000000, !dbg !66
  %617 = bitcast float %616 to i32, !dbg !66
  %618 = shl i32 %617, 23, !dbg !66
  %619 = bitcast i32 %618 to float, !dbg !66
  %620 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %615) #6, !dbg !66
  %621 = fmul float %620, %619, !dbg !66
  %622 = fcmp une float %621, 0x7FF0000000000000, !dbg !66
  br i1 %622, label %__internal_fmad.exit.i.i249, label %__internal_accurate_powf.exit.i224, !dbg !66

__internal_fmad.exit.i.i249:                      ; preds = %__nv_powf.exit168
  %.not29.i211 = icmp eq i32 %597, 0, !dbg !66
  %.not28.i209 = icmp eq i32 %596, 0, !dbg !66
  %623 = fneg float %.032.i208, !dbg !66
  %624 = tail call float @llvm.nvvm.add.rn.f(float %.028.i200, float %623) #6, !dbg !66
  %625 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i200, float %623) #6, !dbg !66
  %.033.i210 = select i1 %.not28.i209, float %624, float %625, !dbg !66
  %626 = tail call float @llvm.nvvm.add.rn.f(float %.033.i210, float %.031.i206) #6, !dbg !66
  %627 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i210, float %.031.i206) #6, !dbg !66
  %.034.i212 = select i1 %.not29.i211, float %626, float %627, !dbg !66
  %628 = fadd float %.034.i212, 0x3EE0000000000000, !dbg !66
  %prod.i.044.0.i213 = select i1 %599, float %628, float %.034.i212, !dbg !66
  %629 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not34.i250 = icmp eq i32 %629, 0, !dbg !66
  %630 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %621, float %prod.i.044.0.i213, float %621) #6, !dbg !66
  %631 = tail call float @llvm.nvvm.fma.rn.f(float %621, float %prod.i.044.0.i213, float %621) #6, !dbg !66
  %.014.i251 = select i1 %.not34.i250, float %631, float %630, !dbg !66
  br label %__internal_accurate_powf.exit.i224, !dbg !66

__internal_accurate_powf.exit.i224:               ; preds = %__internal_fmad.exit.i.i249, %__nv_powf.exit168
  %t.i.0.i225 = phi float [ %.014.i251, %__internal_fmad.exit.i.i249 ], [ 0x7FF0000000000000, %__nv_powf.exit168 ], !dbg !66
  %632 = fcmp oeq float %510, 0.000000e+00, !dbg !66
  br i1 %632, label %633, label %__internal_powf_corner_cases.exit.i226, !dbg !66

633:                                              ; preds = %__internal_accurate_powf.exit.i224
  %634 = fadd float %510, %510, !dbg !66
  %635 = bitcast float %634 to i32, !dbg !66
  %636 = or i32 %635, 2139095040, !dbg !66
  %637 = bitcast i32 %636 to float, !dbg !66
  %638 = select i1 %512, float %637, float 0x7FF0000000000000, !dbg !66
  br label %__internal_powf_corner_cases.exit.i226, !dbg !66

__internal_powf_corner_cases.exit.i226:           ; preds = %__internal_accurate_powf.exit.i224, %633
  %.212.i227 = phi float [ %638, %633 ], [ %t.i.0.i225, %__internal_accurate_powf.exit.i224 ], !dbg !66
  %639 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not35.i228 = icmp eq i32 %639, 0, !dbg !66
  %.01.i229 = select i1 %.not35.i228, float %515, float %514, !dbg !66
  %640 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not36.i230 = icmp eq i32 %640, 0, !dbg !66
  %.02.i231 = select i1 %.not36.i230, float %119, float %118, !dbg !66
  %641 = fadd float %.01.i229, %.02.i231, !dbg !66
  %642 = bitcast float %641 to i32, !dbg !66
  %643 = icmp sgt i32 %642, 2139095039, !dbg !66
  br i1 %643, label %__nv_isnanf.exit.i.i234, label %__nv_powf.exit252, !dbg !66

__nv_isnanf.exit.i.i234:                          ; preds = %__internal_powf_corner_cases.exit.i226
  %644 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not37.i235 = icmp eq i32 %644, 0, !dbg !66
  %.06.i236 = select i1 %.not37.i235, float %515, float %514, !dbg !66
  %645 = fcmp uno float %.06.i236, 0.000000e+00, !dbg !66
  br i1 %645, label %648, label %__nv_isnanf.exit11.i.i237, !dbg !66

__nv_isnanf.exit11.i.i237:                        ; preds = %__nv_isnanf.exit.i.i234
  %646 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not38.i238 = icmp eq i32 %646, 0, !dbg !66
  %.07.i239 = select i1 %.not38.i238, float %119, float %118, !dbg !66
  %647 = fcmp uno float %.07.i239, 0.000000e+00, !dbg !66
  br i1 %647, label %648, label %__nv_isinff.exit8.i.i240, !dbg !66

648:                                              ; preds = %__nv_isnanf.exit11.i.i237, %__nv_isnanf.exit.i.i234
  %649 = fadd float %510, 0xBFD5555560000000, !dbg !66
  br label %__nv_powf.exit252, !dbg !66

__nv_isinff.exit8.i.i240:                         ; preds = %__nv_isnanf.exit11.i.i237
  %650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not39.i241 = icmp eq i32 %650, 0, !dbg !66
  %.05.i242 = select i1 %.not39.i241, float %119, float %118, !dbg !66
  %651 = fcmp oeq float %.05.i242, 0x7FF0000000000000, !dbg !66
  %652 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !66
  %.not41.i247 = icmp eq i32 %652, 0, !dbg !66
  %.04.i248 = select i1 %.not41.i247, float %515, float %514, !dbg !66
  br i1 %651, label %__nv_fabsf.exit5.i.i246, label %__nv_isinff.exit.i.i243, !dbg !66

__nv_fabsf.exit5.i.i246:                          ; preds = %__nv_isinff.exit8.i.i240
  %653 = fcmp ogt float %.04.i248, 1.000000e+00, !dbg !66
  %654 = select i1 %653, float 0.000000e+00, float 0x7FF0000000000000, !dbg !66
  br label %__nv_powf.exit252, !dbg !66

__nv_isinff.exit.i.i243:                          ; preds = %__nv_isinff.exit8.i.i240
  %655 = fcmp oeq float %.04.i248, 0x7FF0000000000000, !dbg !66
  br i1 %655, label %656, label %__nv_powf.exit252, !dbg !66

656:                                              ; preds = %__nv_isinff.exit.i.i243
  br label %__nv_powf.exit252, !dbg !66

__nv_powf.exit252:                                ; preds = %__internal_powf_corner_cases.exit.i226, %648, %__nv_fabsf.exit5.i.i246, %__nv_isinff.exit.i.i243, %656
  %.3.i232 = phi float [ %.212.i227, %__internal_powf_corner_cases.exit.i226 ], [ %649, %648 ], [ %654, %__nv_fabsf.exit5.i.i246 ], [ 0.000000e+00, %656 ], [ %.212.i227, %__nv_isinff.exit.i.i243 ], !dbg !66
  %657 = insertelement <2 x float> poison, float %199, i64 0, !dbg !67
  %658 = insertelement <2 x float> %657, float %352, i64 1, !dbg !67
  %659 = fmul <2 x float> %658, %658, !dbg !67
  %660 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !13
  %661 = insertelement <2 x i32> %660, i32 %22, i64 1, !dbg !13
  %662 = bitcast <2 x i32> %661 to <2 x float>, !dbg !13
  %663 = fmul <2 x float> %659, splat (float 5.000000e-01), !dbg !68
  %664 = fsub <2 x float> %662, %663, !dbg !69
  %shift = shufflevector <2 x float> %664, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !70
  %665 = fadd <2 x float> %664, %shift, !dbg !70
  %666 = insertelement <2 x i32> poison, i32 %29, i64 0, !dbg !25
  %667 = insertelement <2 x i32> %666, i32 %36, i64 1, !dbg !25
  %668 = bitcast <2 x i32> %667 to <2 x float>, !dbg !25
  %669 = lshr i32 %6, 5, !dbg !10
  %670 = and i32 %6, 31, !dbg !10
  %671 = fcmp oeq float %510, 1.000000e+00, !dbg !66
  %t.0.i233 = select i1 %671, float 1.000000e+00, float %.3.i232, !dbg !66
  %672 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %t.0.i233) #6, !dbg !71
  %673 = insertelement <2 x float> poison, float %505, i64 0, !dbg !72
  %674 = insertelement <2 x float> %673, float %672, i64 1, !dbg !72
  %675 = fmul <2 x float> %674, %674, !dbg !72
  %676 = fmul <2 x float> %675, splat (float 5.000000e-01), !dbg !73
  %677 = fsub <2 x float> %668, %676, !dbg !74
  %678 = fadd <2 x float> %665, %677, !dbg !75
  %shift253 = shufflevector <2 x float> %677, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !76
  %679 = fadd <2 x float> %678, %shift253, !dbg !76
  %680 = extractelement <2 x float> %679, i64 0, !dbg !76
  %681 = bitcast float %680 to i32, !dbg !77
  %682 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %681, i32 16, i32 31), !dbg !77
  %683 = bitcast i32 %682 to float, !dbg !77
  %684 = fadd float %680, %683, !dbg !81
  %685 = bitcast float %684 to i32, !dbg !77
  %686 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %685, i32 8, i32 31), !dbg !77
  %687 = bitcast i32 %686 to float, !dbg !77
  %688 = fadd float %684, %687, !dbg !81
  %689 = bitcast float %688 to i32, !dbg !77
  %690 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %689, i32 4, i32 31), !dbg !77
  %691 = bitcast i32 %690 to float, !dbg !77
  %692 = fadd float %688, %691, !dbg !81
  %693 = bitcast float %692 to i32, !dbg !77
  %694 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %693, i32 2, i32 31), !dbg !77
  %695 = bitcast i32 %694 to float, !dbg !77
  %696 = fadd float %692, %695, !dbg !81
  %697 = bitcast float %696 to i32, !dbg !77
  %698 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %697, i32 1, i32 31), !dbg !77
  %699 = bitcast i32 %698 to float, !dbg !77
  %700 = fadd float %696, %699, !dbg !81
  %701 = icmp eq i32 %670, 0, !dbg !77
  %702 = and i32 %669, 1, !dbg !77
  %703 = getelementptr float, ptr addrspace(3) @global_smem, i32 %702, !dbg !77
  %704 = bitcast float %700 to <1 x i32>, !dbg !77
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %703, <1 x i32> %704, i1 %701) #6, !dbg !77
  tail call void @llvm.nvvm.barrier0(), !dbg !77
  %705 = icmp slt i32 %6, 2, !dbg !77
  %706 = getelementptr float, ptr addrspace(3) @global_smem, i32 %6, !dbg !77
  %707 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %706, i1 %705) #6, !dbg !77
  %708 = bitcast i32 %707 to float, !dbg !77
  %709 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %707, i32 1, i32 31), !dbg !77
  %710 = bitcast i32 %709 to float, !dbg !77
  %711 = fadd float %708, %710, !dbg !81
  %712 = and i32 %6, 1, !dbg !77
  %713 = icmp eq i32 %712, 0, !dbg !77
  %714 = and i1 %705, %713, !dbg !77
  %715 = bitcast float %711 to <1 x i32>, !dbg !77
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %706, <1 x i32> %715, i1 %714) #6, !dbg !77
  tail call void @llvm.nvvm.barrier0(), !dbg !77
  %716 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !77
  %717 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %716, float 6.400000e+01) #6, !dbg !83
  tail call void @llvm.nvvm.barrier0(), !dbg !84
  %718 = icmp eq i32 %7, 0, !dbg !85
  %719 = bitcast float %717 to i32, !dbg !85
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %719, ptr addrspace(1) %1, i1 %718) #6, !dbg !85
  ret void, !dbg !86
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #5

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { nounwind }
attributes #7 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cuicjynvsdm6r42dwguajflxpgycuqdctuf6ecaurjbrzfurkou5.py", directory: "inductor_cache/ui")
!4 = !{ptr @triton_per_fused_add_div_max_mean_mul_neg_pow_relu_sub_sum_6, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_div_max_mean_mul_neg_pow_relu_sub_sum_6, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_div_max_mean_mul_neg_pow_relu_sub_sum_6", linkageName: "triton_per_fused_add_div_max_mean_mul_neg_pow_relu_sub_sum_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 30, column: 32, scope: !7)
!12 = !DILocation(line: 30, column: 30, scope: !7)
!13 = !DILocation(line: 30, column: 37, scope: !7)
!14 = !DILocation(line: 31, column: 30, scope: !7)
!15 = !DILocation(line: 31, column: 37, scope: !7)
!16 = !DILocation(line: 32, column: 34, scope: !7)
!17 = !DILocation(line: 32, column: 39, scope: !7)
!18 = !DILocation(line: 33, column: 35, scope: !7)
!19 = !DILocation(line: 33, column: 31, scope: !7)
!20 = !DILocation(line: 33, column: 42, scope: !7)
!21 = !DILocation(line: 34, column: 31, scope: !7)
!22 = !DILocation(line: 34, column: 42, scope: !7)
!23 = !DILocation(line: 35, column: 35, scope: !7)
!24 = !DILocation(line: 35, column: 31, scope: !7)
!25 = !DILocation(line: 35, column: 42, scope: !7)
!26 = !DILocation(line: 36, column: 31, scope: !7)
!27 = !DILocation(line: 36, column: 42, scope: !7)
!28 = !DILocation(line: 37, column: 35, scope: !7)
!29 = !DILocation(line: 37, column: 31, scope: !7)
!30 = !DILocation(line: 37, column: 42, scope: !7)
!31 = !DILocation(line: 38, column: 31, scope: !7)
!32 = !DILocation(line: 38, column: 42, scope: !7)
!33 = !DILocation(line: 39, column: 18, scope: !7)
!34 = !DILocation(line: 41, column: 18, scope: !7)
!35 = !DILocation(line: 43, column: 18, scope: !7)
!36 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !39)
!37 = distinct !DILexicalBlockFile(scope: !7, file: !38, discriminator: 0)
!38 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!39 = !DILocation(line: 45, column: 40, scope: !7)
!40 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !39)
!41 = !DILocation(line: 47, column: 32, scope: !7)
!42 = !{i32 21046}
!43 = !DILocation(line: 49, column: 20, scope: !7)
!44 = !DILocation(line: 54, column: 20, scope: !7)
!45 = !DILocation(line: 55, column: 20, scope: !7)
!46 = !DILocation(line: 56, column: 20, scope: !7)
!47 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !48)
!48 = !DILocation(line: 57, column: 41, scope: !7)
!49 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !48)
!50 = !DILocation(line: 58, column: 33, scope: !7)
!51 = !DILocation(line: 59, column: 20, scope: !7)
!52 = !DILocation(line: 64, column: 20, scope: !7)
!53 = !DILocation(line: 65, column: 20, scope: !7)
!54 = !DILocation(line: 66, column: 20, scope: !7)
!55 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !56)
!56 = !DILocation(line: 67, column: 41, scope: !7)
!57 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !56)
!58 = !DILocation(line: 68, column: 33, scope: !7)
!59 = !DILocation(line: 69, column: 20, scope: !7)
!60 = !DILocation(line: 74, column: 20, scope: !7)
!61 = !DILocation(line: 75, column: 20, scope: !7)
!62 = !DILocation(line: 76, column: 20, scope: !7)
!63 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !64)
!64 = !DILocation(line: 77, column: 41, scope: !7)
!65 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !64)
!66 = !DILocation(line: 78, column: 33, scope: !7)
!67 = !DILocation(line: 50, column: 20, scope: !7)
!68 = !DILocation(line: 52, column: 20, scope: !7)
!69 = !DILocation(line: 53, column: 19, scope: !7)
!70 = !DILocation(line: 63, column: 20, scope: !7)
!71 = !DILocation(line: 79, column: 20, scope: !7)
!72 = !DILocation(line: 70, column: 20, scope: !7)
!73 = !DILocation(line: 71, column: 20, scope: !7)
!74 = !DILocation(line: 72, column: 20, scope: !7)
!75 = !DILocation(line: 73, column: 20, scope: !7)
!76 = !DILocation(line: 83, column: 20, scope: !7)
!77 = !DILocation(line: 267, column: 36, scope: !78, inlinedAt: !80)
!78 = distinct !DILexicalBlockFile(scope: !7, file: !79, discriminator: 0)
!79 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!80 = !DILocation(line: 85, column: 26, scope: !7)
!81 = !DILocation(line: 256, column: 15, scope: !82, inlinedAt: !80)
!82 = distinct !DILexicalBlockFile(scope: !78, file: !79, discriminator: 0)
!83 = !DILocation(line: 87, column: 20, scope: !7)
!84 = !DILocation(line: 88, column: 4, scope: !7)
!85 = !DILocation(line: 89, column: 71, scope: !7)
!86 = !DILocation(line: 89, column: 4, scope: !7)
