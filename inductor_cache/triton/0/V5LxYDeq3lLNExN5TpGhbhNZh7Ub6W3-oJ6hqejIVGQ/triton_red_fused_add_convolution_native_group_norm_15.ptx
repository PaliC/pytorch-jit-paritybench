//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_add_convolution_native_group_norm_15 // -- Begin function triton_red_fused_add_convolution_native_group_norm_15
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_add_convolution_native_group_norm_15
.visible .entry triton_red_fused_add_convolution_native_group_norm_15(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_convolution_native_group_norm_15_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_convolution_native_group_norm_15_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_convolution_native_group_norm_15_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_convolution_native_group_norm_15_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_convolution_native_group_norm_15_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_convolution_native_group_norm_15_param_5,
	.param .u32 triton_red_fused_add_convolution_native_group_norm_15_param_6,
	.param .u32 triton_red_fused_add_convolution_native_group_norm_15_param_7
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<65>;
	.reg .b32 	%r<197>;
	.reg .f32 	%f<172>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd14, [triton_red_fused_add_convolution_native_group_norm_15_param_0];
	ld.param.u64 	%rd15, [triton_red_fused_add_convolution_native_group_norm_15_param_1];
$L__tmp0:
	.loc	1 22 28                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:24:21
	setp.lt.s32 	%p1, %r1, 128;
	ld.param.u64 	%rd16, [triton_red_fused_add_convolution_native_group_norm_15_param_2];
	ld.param.u64 	%rd17, [triton_red_fused_add_convolution_native_group_norm_15_param_3];
	.loc	1 25 33                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:25:33
	mov.u32 	%r121, %tid.x;
	and.b32  	%r122, %r121, 31;
	ld.param.u64 	%rd18, [triton_red_fused_add_convolution_native_group_norm_15_param_4];
	ld.param.u64 	%rd19, [triton_red_fused_add_convolution_native_group_norm_15_param_5];
	and.b32  	%r123, %r121, 511;
	or.b32  	%r124, %r123, 512;
	or.b32  	%r125, %r123, 1024;
	or.b32  	%r126, %r123, 1536;
	shl.b32 	%r127, %r121, 2;
	and.b32  	%r128, %r127, 2044;
	.loc	1 27 19                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:27:19
	shr.s32 	%r129, %r1, 31;
	shr.u32 	%r130, %r129, 27;
	add.s32 	%r131, %r1, %r130;
	and.b32  	%r132, %r131, 536870880;
	sub.s32 	%r133, %r1, %r132;
	.loc	1 35 23                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:35:23
	bfe.u32 	%r134, %r121, 8, 1;
	shr.u32 	%r135, %r124, 8;
	shr.u32 	%r136, %r125, 8;
	shr.u32 	%r137, %r126, 8;
	.loc	1 36 48                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:36:48
	shl.b32 	%r138, %r1, 11;
	.loc	1 36 43                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:36:43
	or.b32  	%r139, %r138, %r128;
	.loc	1 36 38                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:36:38
	mul.wide.s32 	%rd20, %r139, 4;
	add.s64 	%rd1, %rd14, %rd20;
	mov.b32 	%r6, 0;
	.loc	1 36 53                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:36:53
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r11, %r13, %r15, %r17 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r13, %r6;
	@!%p1 mov.u32 %r15, %r6;
	@!%p1 mov.u32 %r17, %r6;
	// end inline asm
	shl.b32 	%r140, %r128, 3;
	mov.u32 	%r141, global_smem;
	add.s32 	%r10, %r141, %r140;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	add.s32 	%r12, %r10, 8;
	// begin inline asm
	@%p6 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	add.s32 	%r14, %r10, 16;
	// begin inline asm
	@%p6 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r10, 24;
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r142, %r123, 3;
	add.s32 	%r143, %r141, %r142;
	ld.shared.f32 	%f1, [%r143];
	shl.b32 	%r144, %r124, 3;
	add.s32 	%r145, %r141, %r144;
	ld.shared.f32 	%f2, [%r145];
	shl.b32 	%r146, %r125, 3;
	add.s32 	%r147, %r141, %r146;
	ld.shared.f32 	%f3, [%r147];
	shl.b32 	%r148, %r126, 3;
	add.s32 	%r149, %r141, %r148;
	ld.shared.f32 	%f4, [%r149];
	.loc	1 37 41                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:37:41
	shl.b32 	%r150, %r133, 3;
	.loc	1 37 39                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:37:39
	or.b32  	%r151, %r150, %r134;
	or.b32  	%r152, %r150, %r135;
	or.b32  	%r153, %r150, %r136;
	or.b32  	%r154, %r150, %r137;
	.loc	1 37 34                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:37:34
	mul.wide.s32 	%rd21, %r151, 4;
	add.s64 	%rd2, %rd16, %rd21;
	mul.wide.s32 	%rd22, %r152, 4;
	add.s64 	%rd3, %rd16, %rd22;
	mul.wide.s32 	%rd23, %r153, 4;
	add.s64 	%rd4, %rd16, %rd23;
	mul.wide.s32 	%rd24, %r154, 4;
	add.s64 	%rd5, %rd16, %rd24;
	.loc	1 37 46                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:37:46
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	// end inline asm
	mov.b32 	%f5, %r18;
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r20, %r6;
	// end inline asm
	mov.b32 	%f6, %r20;
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r22, %r6;
	// end inline asm
	mov.b32 	%f7, %r22;
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r24, %r6;
	// end inline asm
	mov.b32 	%f8, %r24;
	.loc	1 38 34                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:38:34
	add.s64 	%rd6, %rd17, %rd20;
	.loc	1 38 49                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:38:49
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r39, 0x0;
	mov.u32 %r41, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r35, %r37, %r39, %r41 }, [ %rd6 + 0 ];
	@!%p1 mov.u32 %r35, %r6;
	@!%p1 mov.u32 %r37, %r6;
	@!%p1 mov.u32 %r39, %r6;
	@!%p1 mov.u32 %r41, %r6;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r35;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b32 [ %r12 + 0 ], %r37;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b32 [ %r14 + 0 ], %r39;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f9, [%r143];
	ld.shared.f32 	%f10, [%r145];
	ld.shared.f32 	%f11, [%r147];
	ld.shared.f32 	%f12, [%r149];
	.loc	1 39 34                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:39:34
	add.s64 	%rd7, %rd18, %rd21;
	add.s64 	%rd8, %rd18, %rd22;
	add.s64 	%rd9, %rd18, %rd23;
	add.s64 	%rd10, %rd18, %rd24;
	.loc	1 39 46                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:39:46
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r42 }, [ %rd7 + 0 ];
	@!%p1 mov.u32 %r42, %r6;
	// end inline asm
	mov.b32 	%f13, %r42;
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r44 }, [ %rd8 + 0 ];
	@!%p1 mov.u32 %r44, %r6;
	// end inline asm
	mov.b32 	%f14, %r44;
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r46 }, [ %rd9 + 0 ];
	@!%p1 mov.u32 %r46, %r6;
	// end inline asm
	mov.b32 	%f15, %r46;
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r48 }, [ %rd10 + 0 ];
	@!%p1 mov.u32 %r48, %r6;
	// end inline asm
	mov.b32 	%f16, %r48;
	.loc	1 40 22                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:40:22
	add.f32 	%f17, %f1, %f5;
	add.f32 	%f18, %f2, %f6;
	add.f32 	%f19, %f3, %f7;
	add.f32 	%f20, %f4, %f8;
	.loc	1 41 22                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:41:22
	add.f32 	%f21, %f9, %f13;
	add.f32 	%f22, %f10, %f14;
	add.f32 	%f23, %f11, %f15;
	add.f32 	%f24, %f12, %f16;
	.loc	1 42 22                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:42:22
	add.f32 	%f25, %f17, %f21;
	add.f32 	%f26, %f18, %f22;
	add.f32 	%f27, %f19, %f23;
	add.f32 	%f28, %f20, %f24;
	.loc	1 47 60                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:47:60
	selp.f32 	%f29, %f25, 0f00000000, %p1;
	selp.f32 	%f30, %f26, 0f00000000, %p1;
	selp.f32 	%f31, %f27, 0f00000000, %p1;
	selp.f32 	%f32, %f28, 0f00000000, %p1;
	.loc	1 49 64                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:49:64
	selp.f32 	%f33, 0f3F800000, 0f00000000, %p1;
	.loc	1 50 53                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:50:53
	bar.sync 	0;
	shl.b32 	%r155, %r123, 2;
	add.s32 	%r50, %r141, %r155;
	mov.b32 	%r51, %f25;
	// begin inline asm
	@%p6 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	add.s32 	%r52, %r50, 2048;
	mov.b32 	%r53, %f26;
	// begin inline asm
	@%p6 st.shared.b32 [ %r52 + 0 ], %r53;
	// end inline asm
	add.s32 	%r54, %r50, 4096;
	mov.b32 	%r55, %f27;
	// begin inline asm
	@%p6 st.shared.b32 [ %r54 + 0 ], %r55;
	// end inline asm
	add.s32 	%r56, %r50, 6144;
	mov.b32 	%r57, %f28;
	// begin inline asm
	@%p6 st.shared.b32 [ %r56 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r156, %r128, 2;
	add.s32 	%r157, %r141, %r156;
	ld.shared.v4.u32 	{%r58, %r59, %r60, %r61}, [%r157];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r58, %r59, %r60, %r61 };
	// end inline asm
$L__tmp1:
	.loc	2 204 46                        // triton_helpers.py:204:46
	bar.sync 	0;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f34, %f30, %f29;
	.loc	2 193 28                        // triton_helpers.py:193:28
	selp.f32 	%f35, 0f40000000, 0f00000000, %p1;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p51, %f35, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r63, %f33;
	mov.b32 	%r64, %f35;
	// begin inline asm
	div.full.f32 %r62, %r63, %r64;
	// end inline asm
	mov.b32 	%f36, %r62;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f37, 0f00000000, %f36, %p51;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f38, %f34, %f37, %f29;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f39, %f34, %f34;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f40, %f33, %f39;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f41, %f40, %f37, 0f00000000;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f42, %f31, %f38;
	.loc	2 193 28                        // triton_helpers.py:193:28
	selp.f32 	%f43, 0f40400000, 0f00000000, %p1;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p52, %f43, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r67, %f43;
	// begin inline asm
	div.full.f32 %r65, %r63, %r67;
	// end inline asm
	mov.b32 	%f44, %r65;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f45, 0f00000000, %f44, %p52;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f46, %f45, %f42, %f38;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f47, %f42, %f42;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f48, %f35, %f47;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f49, %f45, %f48, %f41;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f50, %f32, %f46;
	.loc	2 193 28                        // triton_helpers.py:193:28
	selp.f32 	%f51, 0f40800000, 0f00000000, %p1;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p53, %f51, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r70, %f51;
	// begin inline asm
	div.full.f32 %r68, %r63, %r70;
	// end inline asm
	mov.b32 	%f52, %r68;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f53, 0f00000000, %f52, %p53;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f54, %f53, %f50, %f46;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f55, %f50, %f50;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f56, %f43, %f55;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f57, %f53, %f56, %f49;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r158, %f54;
	shfl.sync.bfly.b32	%r159, %r158, 16, 31, -1;
	mov.b32 	%f58, %r159;
	mov.b32 	%r160, %f57;
	shfl.sync.bfly.b32	%r161, %r160, 16, 31, -1;
	mov.b32 	%f59, %r161;
	shfl.sync.bfly.b32	%r72, %r70, 16, 31, -1;
	mov.b32 	%f60, %r72;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f61, %f58, %f54;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f62, %f51, %f60;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p54, %f62, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r73, %f62;
	// begin inline asm
	div.full.f32 %r71, %r72, %r73;
	// end inline asm
	mov.b32 	%f63, %r71;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f64, 0f00000000, %f63, %p54;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f65, %f64, %f61, %f54;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f66, %f57, %f59;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f67, %f61, %f61;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f68, %f51, %f67;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f69, %f64, %f68, %f66;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r162, %f65;
	shfl.sync.bfly.b32	%r163, %r162, 8, 31, -1;
	mov.b32 	%f70, %r163;
	mov.b32 	%r164, %f69;
	shfl.sync.bfly.b32	%r165, %r164, 8, 31, -1;
	mov.b32 	%f71, %r165;
	shfl.sync.bfly.b32	%r75, %r73, 8, 31, -1;
	mov.b32 	%f72, %r75;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f73, %f70, %f65;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f74, %f62, %f72;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p55, %f74, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r76, %f74;
	// begin inline asm
	div.full.f32 %r74, %r75, %r76;
	// end inline asm
	mov.b32 	%f75, %r74;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f76, 0f00000000, %f75, %p55;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f77, %f73, %f76, %f65;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f78, %f69, %f71;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f79, %f73, %f73;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f80, %f62, %f79;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f81, %f76, %f80, %f78;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r166, %f77;
	shfl.sync.bfly.b32	%r167, %r166, 4, 31, -1;
	mov.b32 	%f82, %r167;
	mov.b32 	%r168, %f81;
	shfl.sync.bfly.b32	%r169, %r168, 4, 31, -1;
	mov.b32 	%f83, %r169;
	shfl.sync.bfly.b32	%r78, %r76, 4, 31, -1;
	mov.b32 	%f84, %r78;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f85, %f82, %f77;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f86, %f74, %f84;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p56, %f86, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r79, %f86;
	// begin inline asm
	div.full.f32 %r77, %r78, %r79;
	// end inline asm
	mov.b32 	%f87, %r77;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f88, 0f00000000, %f87, %p56;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f89, %f85, %f88, %f77;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f90, %f81, %f83;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f91, %f85, %f85;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f92, %f74, %f91;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f93, %f88, %f92, %f90;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r170, %f89;
	shfl.sync.bfly.b32	%r171, %r170, 2, 31, -1;
	mov.b32 	%f94, %r171;
	mov.b32 	%r172, %f93;
	shfl.sync.bfly.b32	%r173, %r172, 2, 31, -1;
	mov.b32 	%f95, %r173;
	shfl.sync.bfly.b32	%r81, %r79, 2, 31, -1;
	mov.b32 	%f96, %r81;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f97, %f94, %f89;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f98, %f86, %f96;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p57, %f98, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r82, %f98;
	// begin inline asm
	div.full.f32 %r80, %r81, %r82;
	// end inline asm
	mov.b32 	%f99, %r80;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f100, 0f00000000, %f99, %p57;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f101, %f97, %f100, %f89;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f102, %f93, %f95;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f103, %f97, %f97;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f104, %f86, %f103;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f105, %f100, %f104, %f102;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r174, %f101;
	shfl.sync.bfly.b32	%r175, %r174, 1, 31, -1;
	mov.b32 	%f106, %r175;
	mov.b32 	%r176, %f105;
	shfl.sync.bfly.b32	%r177, %r176, 1, 31, -1;
	mov.b32 	%f107, %r177;
	shfl.sync.bfly.b32	%r84, %r82, 1, 31, -1;
	mov.b32 	%f108, %r84;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f109, %f106, %f101;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f110, %f98, %f108;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p58, %f110, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r85, %f110;
	// begin inline asm
	div.full.f32 %r83, %r84, %r85;
	// end inline asm
	mov.b32 	%f111, %r83;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f112, 0f00000000, %f111, %p58;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f113, %f109, %f112, %f101;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f114, %f105, %f107;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f115, %f109, %f109;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f116, %f98, %f115;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f117, %f112, %f116, %f114;
	.loc	2 204 46                        // triton_helpers.py:204:46
	setp.eq.s32 	%p40, %r122, 0;
	shr.u32 	%r178, %r121, 3;
	and.b32  	%r179, %r178, 60;
	add.s32 	%r86, %r141, %r179;
	mov.b32 	%r87, %f113;
	// begin inline asm
	@%p40 st.shared.b32 [ %r86 + 0 ], %r87;
	// end inline asm
	add.s32 	%r180, %r141, 64;
	add.s32 	%r88, %r180, %r179;
	mov.b32 	%r89, %f117;
	// begin inline asm
	@%p40 st.shared.b32 [ %r88 + 0 ], %r89;
	// end inline asm
	add.s32 	%r181, %r141, 128;
	add.s32 	%r90, %r181, %r179;
	// begin inline asm
	@%p40 st.shared.b32 [ %r90 + 0 ], %r85;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p43, %r121, 16;
	add.s32 	%r93, %r141, %r127;
	// begin inline asm
	@%p43 ld.shared.b32 %r92, [ %r93 + 0 ];
	// end inline asm
	mov.b32 	%f118, %r92;
	add.s32 	%r95, %r180, %r127;
	// begin inline asm
	@%p43 ld.shared.b32 %r94, [ %r95 + 0 ];
	// end inline asm
	mov.b32 	%f119, %r94;
	add.s32 	%r97, %r181, %r127;
	// begin inline asm
	@%p43 ld.shared.b32 %r96, [ %r97 + 0 ];
	// end inline asm
	mov.b32 	%f120, %r96;
	shfl.sync.bfly.b32	%r182, %r92, 8, 31, -1;
	mov.b32 	%f121, %r182;
	shfl.sync.bfly.b32	%r183, %r94, 8, 31, -1;
	mov.b32 	%f122, %r183;
	shfl.sync.bfly.b32	%r99, %r96, 8, 31, -1;
	mov.b32 	%f123, %r99;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f124, %f121, %f118;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f125, %f120, %f123;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p59, %f125, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r100, %f125;
	// begin inline asm
	div.full.f32 %r98, %r99, %r100;
	// end inline asm
	mov.b32 	%f126, %r98;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f127, 0f00000000, %f126, %p59;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f128, %f124, %f127, %f118;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f129, %f119, %f122;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f130, %f124, %f124;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f131, %f130, %f120;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f132, %f131, %f127, %f129;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r184, %f128;
	shfl.sync.bfly.b32	%r185, %r184, 4, 31, -1;
	mov.b32 	%f133, %r185;
	mov.b32 	%r186, %f132;
	shfl.sync.bfly.b32	%r187, %r186, 4, 31, -1;
	mov.b32 	%f134, %r187;
	shfl.sync.bfly.b32	%r102, %r100, 4, 31, -1;
	mov.b32 	%f135, %r102;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f136, %f133, %f128;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f137, %f125, %f135;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p60, %f137, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r103, %f137;
	// begin inline asm
	div.full.f32 %r101, %r102, %r103;
	// end inline asm
	mov.b32 	%f138, %r101;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f139, 0f00000000, %f138, %p60;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f140, %f136, %f139, %f128;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f141, %f132, %f134;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f142, %f136, %f136;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f143, %f125, %f142;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f144, %f139, %f143, %f141;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r188, %f140;
	shfl.sync.bfly.b32	%r189, %r188, 2, 31, -1;
	mov.b32 	%f145, %r189;
	mov.b32 	%r190, %f144;
	shfl.sync.bfly.b32	%r191, %r190, 2, 31, -1;
	mov.b32 	%f146, %r191;
	shfl.sync.bfly.b32	%r105, %r103, 2, 31, -1;
	mov.b32 	%f147, %r105;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f148, %f145, %f140;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f149, %f137, %f147;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p61, %f149, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r106, %f149;
	// begin inline asm
	div.full.f32 %r104, %r105, %r106;
	// end inline asm
	mov.b32 	%f150, %r104;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f151, 0f00000000, %f150, %p61;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f152, %f148, %f151, %f140;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f153, %f144, %f146;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f154, %f148, %f148;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f155, %f137, %f154;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f156, %f151, %f155, %f153;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r192, %f152;
	shfl.sync.bfly.b32	%r193, %r192, 1, 31, -1;
	mov.b32 	%f157, %r193;
	mov.b32 	%r194, %f156;
	shfl.sync.bfly.b32	%r195, %r194, 1, 31, -1;
	mov.b32 	%f158, %r195;
	shfl.sync.bfly.b32	%r108, %r106, 1, 31, -1;
	mov.b32 	%f159, %r108;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f160, %f157, %f152;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f161, %f149, %f159;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p62, %f161, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r109, %f161;
	// begin inline asm
	div.full.f32 %r107, %r108, %r109;
	// end inline asm
	mov.b32 	%f162, %r107;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f163, 0f00000000, %f162, %p62;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f164, %f160, %f163, %f152;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f165, %f156, %f158;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f166, %f160, %f160;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f167, %f149, %f166;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f168, %f163, %f167, %f165;
	.loc	2 204 46                        // triton_helpers.py:204:46
	and.b32  	%r196, %r121, 15;
	setp.eq.s32 	%p63, %r196, 0;
	and.pred  	%p46, %p43, %p63;
	mov.b32 	%r111, %f164;
	// begin inline asm
	@%p46 st.shared.b32 [ %r93 + 0 ], %r111;
	// end inline asm
	mov.b32 	%r113, %f168;
	// begin inline asm
	@%p46 st.shared.b32 [ %r95 + 0 ], %r113;
	// end inline asm
	// begin inline asm
	@%p46 st.shared.b32 [ %r97 + 0 ], %r109;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r116, [global_smem];
$L__tmp2:
	.loc	1 57 25                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:57:25
	mul.wide.s32 	%rd25, %r1, 4;
	add.s64 	%rd12, %rd19, %rd25;
	.loc	1 57 36                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:57:36
	setp.eq.s32 	%p64, %r123, 0;
	and.pred  	%p49, %p64, %p1;
	.loc	1 59 19                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:59:19
	ld.shared.u32 	%r118, [global_smem+64];
	.loc	1 57 36                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:57:36
	// begin inline asm
	@%p49 st.global.b32 [ %rd12 + 0 ], { %r116 };
	// end inline asm
	mov.b32 	%r119, 1157627904;
	.loc	1 59 19                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:59:19
	// begin inline asm
	div.full.f32 %r117, %r118, %r119;
	// end inline asm
	mov.b32 	%f169, %r117;
	.loc	1 61 20                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:61:20
	add.f32 	%f170, %f169, 0f358637BD;
	.loc	1 62 28                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:62:28
	rsqrt.approx.ftz.f32 	%f171, %f170;
	.loc	1 63 4                          // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:63:4
	bar.sync 	0;
	.loc	1 64 28                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:64:28
	add.s64 	%rd13, %rd15, %rd25;
	.loc	1 64 40                         // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:64:40
	mov.b32 	%r120, %f171;
	// begin inline asm
	@%p49 st.global.b32 [ %rd13 + 0 ], { %r120 };
	// end inline asm
	.loc	1 64 4                          // cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py:64:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 198                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 107
.b8 120
.b8 114
.b8 101
.b8 110
.b8 115
.b8 101
.b8 116
.b8 101
.b8 106
.b8 108
.b8 122
.b8 53
.b8 118
.b8 110
.b8 110
.b8 109
.b8 122
.b8 51
.b8 104
.b8 102
.b8 104
.b8 120
.b8 50
.b8 102
.b8 112
.b8 55
.b8 104
.b8 50
.b8 116
.b8 114
.b8 97
.b8 53
.b8 118
.b8 100
.b8 118
.b8 108
.b8 115
.b8 99
.b8 107
.b8 114
.b8 54
.b8 120
.b8 51
.b8 51
.b8 119
.b8 50
.b8 97
.b8 114
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x38 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 49
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 52                                  // DW_AT_call_line
.b8 41                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
