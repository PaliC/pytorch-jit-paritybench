#loc = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":19:0)
#loc1 = loc(unknown)
#loc29 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":52:41)
#loc54 = loc(callsite(#loc1 at #loc29))
module {
  tt.func public @triton_red_fused_add_convolution_native_group_norm_15(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":19:0)) attributes {noinline = false} {
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999997E-7> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<2.048000e+03> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_4 = arith.constant dense<256> : tensor<1x2048xi32> loc(#loc1)
    %cst_5 = arith.constant dense<2048> : tensor<1x2048xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5 = arith.remsi %0, %c32_i32 : i32 loc(#loc6)
    %6 = arith.cmpi slt, %4, %cst_5 : tensor<1x2048xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_4 : tensor<1x2048xi32> loc(#loc8)
    %8 = arith.muli %0, %c2048_i32 : i32 loc(#loc9)
    %9 = tt.splat %8 : i32 -> tensor<1x2048xi32> loc(#loc10)
    %10 = arith.addi %4, %9 : tensor<1x2048xi32> loc(#loc10)
    %11 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.addptr %11, %10 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc11)
    %13 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc12)
    %14 = arith.andi %6, %13 : tensor<1x2048xi1> loc(#loc12)
    %15 = tt.load %12, %14, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc13)
    %16 = arith.muli %5, %c8_i32 : i32 loc(#loc14)
    %17 = tt.splat %16 : i32 -> tensor<1x2048xi32> loc(#loc15)
    %18 = arith.addi %7, %17 : tensor<1x2048xi32> loc(#loc15)
    %19 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc16)
    %20 = tt.addptr %19, %18 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc16)
    %21 = tt.load %20, %14, %cst_3 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc18)
    %23 = tt.addptr %22, %10 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc18)
    %24 = tt.load %23, %14, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc19)
    %25 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc20)
    %26 = tt.addptr %25, %18 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc20)
    %27 = tt.load %26, %14, %cst_3 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc21)
    %28 = arith.addf %15, %21 : tensor<1x2048xf32> loc(#loc22)
    %29 = arith.addf %24, %27 : tensor<1x2048xf32> loc(#loc23)
    %30 = arith.addf %28, %29 : tensor<1x2048xf32> loc(#loc24)
    %31 = arith.select %14, %30, %cst_3 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc25)
    %32 = arith.select %14, %cst_0, %cst_3 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc26)
    tt.store %12, %30, %14 : tensor<1x2048x!tt.ptr<f32>> loc(#loc27)
    %33:3 = "tt.reduce"(%31, %cst_3, %32) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc29)), %arg9: f32 loc(callsite(#loc1 at #loc29)), %arg10: f32 loc(callsite(#loc1 at #loc29)), %arg11: f32 loc(callsite(#loc1 at #loc29)), %arg12: f32 loc(callsite(#loc1 at #loc29)), %arg13: f32 loc(callsite(#loc1 at #loc29))):
      %43 = arith.subf %arg11, %arg8 : f32 loc(#loc67)
      %44 = arith.addf %arg10, %arg13 : f32 loc(#loc68)
      %45 = arith.cmpf oeq, %44, %cst : f32 loc(#loc69)
      %46 = arith.divf %arg13, %44 : f32 loc(#loc70)
      %47 = arith.select %45, %cst, %46 : f32 loc(#loc71)
      %48 = arith.mulf %43, %47 : f32 loc(#loc72)
      %49 = arith.addf %arg8, %48 : f32 loc(#loc73)
      %50 = arith.addf %arg9, %arg12 : f32 loc(#loc74)
      %51 = arith.mulf %43, %43 : f32 loc(#loc75)
      %52 = arith.mulf %51, %arg10 : f32 loc(#loc76)
      %53 = arith.mulf %52, %47 : f32 loc(#loc77)
      %54 = arith.addf %50, %53 : f32 loc(#loc78)
      tt.reduce.return %49, %54, %44 : f32, f32, f32 loc(#loc53)
    }) : (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) -> (tensor<1xf32>, tensor<1xf32>, tensor<1xf32>) loc(#loc53)
    %34 = tt.expand_dims %33#0 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc42)
    %35 = tt.expand_dims %33#1 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc43)
    %36 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc44)
    %37 = tt.splat %36 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc44)
    tt.store %37, %34, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc45)
    %38 = arith.divf %35, %cst_2 : tensor<1x1xf32> loc(#loc46)
    %39 = arith.addf %38, %cst_1 : tensor<1x1xf32> loc(#loc47)
    %40 = tt.extern_elementwise %39 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc48)
    gpu.barrier loc(#loc49)
    %41 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc50)
    %42 = tt.splat %41 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc50)
    tt.store %42, %40, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc51)
    tt.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":22:28)
#loc3 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":24:21)
#loc4 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":25:25)
#loc5 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":25:33)
#loc6 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":27:19)
#loc7 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":33:25)
#loc8 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":35:23)
#loc9 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":36:48)
#loc10 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":36:43)
#loc11 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":36:38)
#loc12 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":36:61)
#loc13 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":36:53)
#loc14 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":37:41)
#loc15 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":37:39)
#loc16 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":37:34)
#loc17 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":37:46)
#loc18 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":38:34)
#loc19 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":38:49)
#loc20 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":39:34)
#loc21 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":39:46)
#loc22 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":40:22)
#loc23 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":41:22)
#loc24 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":42:22)
#loc25 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":47:60)
#loc26 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":49:64)
#loc27 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":50:53)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc42 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":54:20)
#loc43 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":55:20)
#loc44 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":57:25)
#loc45 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":57:36)
#loc46 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":59:19)
#loc47 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":61:20)
#loc48 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":62:28)
#loc49 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":63:4)
#loc50 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":64:28)
#loc51 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":64:40)
#loc52 = loc("inductor_cache/sk/cskxrensetejlz5vnnmz3hfhx2fp7h2tra5vdvlsckr6x33w2arv.py":64:4)
#loc53 = loc(callsite(#loc28 at #loc29))
#loc55 = loc(callsite(#loc30 at #loc28))
#loc56 = loc(callsite(#loc31 at #loc28))
#loc57 = loc(callsite(#loc32 at #loc28))
#loc58 = loc(callsite(#loc33 at #loc28))
#loc59 = loc(callsite(#loc34 at #loc28))
#loc60 = loc(callsite(#loc35 at #loc28))
#loc61 = loc(callsite(#loc36 at #loc28))
#loc62 = loc(callsite(#loc37 at #loc28))
#loc63 = loc(callsite(#loc38 at #loc28))
#loc64 = loc(callsite(#loc39 at #loc28))
#loc65 = loc(callsite(#loc40 at #loc28))
#loc66 = loc(callsite(#loc41 at #loc28))
#loc67 = loc(callsite(#loc55 at #loc29))
#loc68 = loc(callsite(#loc56 at #loc29))
#loc69 = loc(callsite(#loc57 at #loc29))
#loc70 = loc(callsite(#loc58 at #loc29))
#loc71 = loc(callsite(#loc59 at #loc29))
#loc72 = loc(callsite(#loc60 at #loc29))
#loc73 = loc(callsite(#loc61 at #loc29))
#loc74 = loc(callsite(#loc62 at #loc29))
#loc75 = loc(callsite(#loc63 at #loc29))
#loc76 = loc(callsite(#loc64 at #loc29))
#loc77 = loc(callsite(#loc65 at #loc29))
#loc78 = loc(callsite(#loc66 at #loc29))
