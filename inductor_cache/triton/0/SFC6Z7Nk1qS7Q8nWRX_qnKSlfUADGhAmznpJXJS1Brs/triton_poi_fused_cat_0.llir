; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 512, !dbg !14
  %13 = sdiv i32 %11, 8, !dbg !15
  %14 = sdiv i32 %11, 128, !dbg !16
  %15 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !17
  %16 = insertelement <2 x i32> %15, i32 %11, i64 1, !dbg !17
  %17 = srem <2 x i32> %16, <i32 16, i32 8>, !dbg !17
  %18 = extractelement <2 x i32> %17, i64 0, !dbg !18
  %19 = icmp slt i32 %18, 8, !dbg !19
  %20 = add nsw <2 x i32> %17, splat (i32 -2), !dbg !20
  %shift = shufflevector <2 x i32> %20, <2 x i32> poison, <2 x i32> <i32 1, i32 poison>, !dbg !21
  %21 = or <2 x i32> %20, %shift, !dbg !21
  %22 = extractelement <2 x i32> %21, i64 0, !dbg !21
  %23 = icmp ult i32 %22, 4, !dbg !21
  %24 = and i1 %19, %23, !dbg !22
  %25 = extractelement <2 x i32> %17, i64 1, !dbg !18
  %26 = add nsw i32 %25, -10, !dbg !23
  %27 = shl nsw i32 %18, 2, !dbg !24
  %28 = shl nsw i32 %14, 4, !dbg !25
  %29 = add nsw i32 %26, %28, !dbg !26
  %30 = add nsw i32 %29, %27, !dbg !27
  %31 = sext i32 %30 to i64, !dbg !28
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !28
  %33 = and i1 %12, %24, !dbg !29
  %34 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %32, i1 %33, i32 0, i1 %33, i32 0, i1 %33) #1, !dbg !30
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !30
  %36 = extractvalue { i32, i32 } %34, 1, !dbg !30
  %37 = icmp sgt i32 %18, 7, !dbg !31
  %38 = shl nsw i32 %18, 3, !dbg !18
  %39 = shl nsw i32 %14, 6, !dbg !32
  %40 = add nsw i32 %25, -64, !dbg !18
  %41 = add nsw i32 %40, %39, !dbg !33
  %42 = add nsw i32 %41, %38, !dbg !34
  %43 = sext i32 %42 to i64, !dbg !35
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !35
  %45 = and i1 %12, %37, !dbg !36
  %46 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %44, i1 %45, i32 0, i1 %45, i32 0, i1 %45) #1, !dbg !37
  %47 = extractvalue { i32, i32 } %46, 0, !dbg !37
  %48 = extractvalue { i32, i32 } %46, 1, !dbg !37
  %49 = bitcast i32 %47 to float, !dbg !37
  %50 = bitcast i32 %48 to float, !dbg !37
  %51 = sext i32 %14 to i64, !dbg !38
  %52 = getelementptr float, ptr addrspace(1) %2, i64 %51, !dbg !38
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %45, i32 0, i1 %45) #1, !dbg !39
  %54 = bitcast i32 %53 to float, !dbg !39
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %45, i32 0, i1 %45) #1, !dbg !39
  %56 = bitcast i32 %55 to float, !dbg !39
  %57 = fadd float %49, %54, !dbg !40
  %58 = fadd float %50, %56, !dbg !40
  %59 = sext i32 %11 to i64, !dbg !41
  %60 = getelementptr float, ptr addrspace(1) %3, i64 %59, !dbg !41
  %61 = bitcast float %57 to i32, !dbg !42
  %62 = select i1 %19, i32 %35, i32 %61, !dbg !43
  %63 = bitcast float %58 to i32, !dbg !42
  %64 = select i1 %19, i32 %36, i32 %63, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %62, i32 %64, ptr addrspace(1) %60, i1 %12) #1, !dbg !42
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chijacihox3g4atriux6sejcdnd4qykoelhbqgzaykte6azukrqe.py", directory: "inductor_cache/hi")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 24, column: 26, scope: !7)
!18 = !DILocation(line: 51, column: 39, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 41, column: 19, scope: !7)
!21 = !DILocation(line: 43, column: 20, scope: !7)
!22 = !DILocation(line: 44, column: 20, scope: !7)
!23 = !DILocation(line: 45, column: 39, scope: !7)
!24 = !DILocation(line: 45, column: 47, scope: !7)
!25 = !DILocation(line: 45, column: 56, scope: !7)
!26 = !DILocation(line: 45, column: 44, scope: !7)
!27 = !DILocation(line: 45, column: 53, scope: !7)
!28 = !DILocation(line: 45, column: 31, scope: !7)
!29 = !DILocation(line: 45, column: 69, scope: !7)
!30 = !DILocation(line: 45, column: 61, scope: !7)
!31 = !DILocation(line: 48, column: 20, scope: !7)
!32 = !DILocation(line: 51, column: 55, scope: !7)
!33 = !DILocation(line: 51, column: 36, scope: !7)
!34 = !DILocation(line: 51, column: 52, scope: !7)
!35 = !DILocation(line: 51, column: 31, scope: !7)
!36 = !DILocation(line: 51, column: 68, scope: !7)
!37 = !DILocation(line: 51, column: 60, scope: !7)
!38 = !DILocation(line: 52, column: 31, scope: !7)
!39 = !DILocation(line: 52, column: 36, scope: !7)
!40 = !DILocation(line: 53, column: 20, scope: !7)
!41 = !DILocation(line: 57, column: 25, scope: !7)
!42 = !DILocation(line: 57, column: 37, scope: !7)
!43 = !DILocation(line: 0, scope: !7)
!44 = !DILocation(line: 57, column: 4, scope: !7)
