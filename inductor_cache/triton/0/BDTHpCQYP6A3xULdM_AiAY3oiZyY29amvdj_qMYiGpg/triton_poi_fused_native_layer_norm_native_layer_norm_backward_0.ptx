//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_native_layer_norm_native_layer_norm_backward_0 // -- Begin function triton_poi_fused_native_layer_norm_native_layer_norm_backward_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_native_layer_norm_native_layer_norm_backward_0
.visible .entry triton_poi_fused_native_layer_norm_native_layer_norm_backward_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_native_layer_norm_native_layer_norm_backward_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_native_layer_norm_native_layer_norm_backward_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_native_layer_norm_native_layer_norm_backward_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_native_layer_norm_native_layer_norm_backward_0_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_native_layer_norm_native_layer_norm_backward_0_param_4,
	.param .u32 triton_poi_fused_native_layer_norm_native_layer_norm_backward_0_param_5
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<49>;
	.reg .f32 	%f<53>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd12, [triton_poi_fused_native_layer_norm_native_layer_norm_backward_0_param_0];
	ld.param.u64 	%rd2, [triton_poi_fused_native_layer_norm_native_layer_norm_backward_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:21:33
	shl.b32 	%r32, %r1, 6;
	ld.param.u64 	%rd13, [triton_poi_fused_native_layer_norm_native_layer_norm_backward_0_param_2];
	ld.param.u64 	%rd14, [triton_poi_fused_native_layer_norm_native_layer_norm_backward_0_param_3];
	.loc	1 22 36                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:22:36
	mov.u32 	%r33, %tid.x;
	shl.b32 	%r34, %r33, 1;
	ld.param.u64 	%rd15, [triton_poi_fused_native_layer_norm_native_layer_norm_backward_0_param_4];
	and.b32  	%r35, %r34, 62;
	.loc	1 22 23                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:22:23
	or.b32  	%r36, %r32, %r35;
	.loc	1 23 21                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:23:21
	setp.lt.s32 	%p1, %r36, 64;
	.loc	1 25 19                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:25:19
	shr.s32 	%r38, %r36, 31;
	shr.u32 	%r39, %r38, 28;
	add.s32 	%r40, %r36, %r39;
	.loc	1 24 19                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:24:19
	and.b32  	%r41, %r40, -16;
	sub.s32 	%r42, %r36, %r41;
	.loc	1 27 38                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:27:38
	shl.b32 	%r43, %r40, 2;
	and.b32  	%r44, %r43, -64;
	.loc	1 27 35                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:27:35
	add.s32 	%r45, %r44, %r42;
	.loc	1 27 30                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:27:30
	mul.wide.s32 	%rd16, %r45, 4;
	add.s64 	%rd1, %rd12, %rd16;
	.loc	1 27 43                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:27:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.pred 	%p2, -1;
	.loc	1 28 19                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:28:19
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p2 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	.loc	1 30 40                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:30:40
	add.s32 	%r46, %r45, 16;
	.loc	1 30 30                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:30:30
	mul.wide.s32 	%rd17, %r46, 4;
	add.s64 	%rd3, %rd12, %rd17;
	.loc	1 30 48                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:30:48
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.v2.b32 { %r5, %r6 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r5;
	mov.b32 	%f5, %r6;
	.loc	1 31 30                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:31:30
	add.s64 	%rd4, %rd2, 4;
	.loc	1 31 19                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:31:19
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p2 ld.global.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r7;
	.loc	1 33 40                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:33:40
	add.s32 	%r47, %r45, 32;
	.loc	1 33 30                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:33:30
	mul.wide.s32 	%rd18, %r47, 4;
	add.s64 	%rd5, %rd12, %rd18;
	.loc	1 33 48                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:33:48
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r8, %r9 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r9;
	.loc	1 34 31                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:34:31
	add.s64 	%rd6, %rd2, 8;
	.loc	1 34 20                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:34:20
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p2 ld.global.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	.loc	1 36 41                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:36:41
	add.s32 	%r48, %r45, 48;
	.loc	1 36 31                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:36:31
	mul.wide.s32 	%rd19, %r48, 4;
	add.s64 	%rd7, %rd12, %rd19;
	.loc	1 36 49                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:36:49
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p1 ld.global.v2.b32 { %r11, %r12 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r11;
	mov.b32 	%f11, %r12;
	.loc	1 37 31                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:37:31
	add.s64 	%rd8, %rd2, 12;
	.loc	1 37 20                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:37:20
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p2 ld.global.b32 { %r13 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r13;
	.loc	1 39 18                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:39:18
	add.f32 	%f13, %f1, %f3;
	add.f32 	%f14, %f2, %f3;
	.loc	1 40 18                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:40:18
	add.f32 	%f15, %f4, %f6;
	add.f32 	%f16, %f5, %f6;
	.loc	1 41 18                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:41:18
	add.f32 	%f17, %f13, %f15;
	add.f32 	%f18, %f14, %f16;
	.loc	1 42 19                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:42:19
	add.f32 	%f19, %f7, %f9;
	add.f32 	%f20, %f8, %f9;
	.loc	1 43 19                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:43:19
	add.f32 	%f21, %f17, %f19;
	add.f32 	%f22, %f18, %f20;
	.loc	1 44 20                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:44:20
	add.f32 	%f23, %f10, %f12;
	add.f32 	%f24, %f11, %f12;
	.loc	1 45 20                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:45:20
	add.f32 	%f25, %f21, %f23;
	add.f32 	%f26, %f22, %f24;
	.loc	1 47 20                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:47:20
	mov.b32 	%r15, %f25;
	mov.b32 	%r16, 1082130432;
	// begin inline asm
	div.full.f32 %r26, %r15, %r16;
	// end inline asm
	mov.b32 	%f27, %r26;
	mov.b32 	%r18, %f26;
	// begin inline asm
	div.full.f32 %r27, %r18, %r16;
	// end inline asm
	mov.b32 	%f28, %r27;
	.loc	1 48 19                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:48:19
	sub.f32 	%f29, %f13, %f27;
	sub.f32 	%f30, %f14, %f28;
	.loc	1 50 19                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:50:19
	sub.f32 	%f31, %f15, %f27;
	sub.f32 	%f32, %f16, %f28;
	.loc	1 51 20                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:51:20
	mul.f32 	%f33, %f31, %f31;
	mul.f32 	%f34, %f32, %f32;
	.loc	1 52 20                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:52:20
	fma.rn.f32 	%f35, %f29, %f29, %f33;
	fma.rn.f32 	%f36, %f30, %f30, %f34;
	.loc	1 53 20                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:53:20
	sub.f32 	%f37, %f19, %f27;
	sub.f32 	%f38, %f20, %f28;
	.loc	1 55 20                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:55:20
	fma.rn.f32 	%f39, %f37, %f37, %f35;
	fma.rn.f32 	%f40, %f38, %f38, %f36;
	.loc	1 56 20                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:56:20
	sub.f32 	%f41, %f23, %f27;
	sub.f32 	%f42, %f24, %f28;
	.loc	1 58 20                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:58:20
	fma.rn.f32 	%f43, %f41, %f41, %f39;
	fma.rn.f32 	%f44, %f42, %f42, %f40;
	.loc	1 59 20                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:59:20
	mov.b32 	%r21, %f43;
	// begin inline asm
	div.full.f32 %r28, %r21, %r16;
	// end inline asm
	mov.b32 	%f45, %r28;
	mov.b32 	%r24, %f44;
	// begin inline asm
	div.full.f32 %r29, %r24, %r16;
	// end inline asm
	mov.b32 	%f46, %r29;
	.loc	1 61 20                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:61:20
	add.f32 	%f47, %f45, 0f358637BD;
	add.f32 	%f48, %f46, 0f358637BD;
	.loc	1 62 28                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:62:28
	rsqrt.approx.ftz.f32 	%f49, %f47;
	rsqrt.approx.ftz.f32 	%f50, %f48;
	.loc	1 64 20                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:64:20
	mul.f32 	%f51, %f49, 0f3E800000;
	mul.f32 	%f52, %f50, 0f3E800000;
	.loc	1 65 25                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:65:25
	mul.wide.s32 	%rd20, %r36, 4;
	add.s64 	%rd9, %rd13, %rd20;
	.loc	1 65 37                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:65:37
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd9 + 0 ], { %r26, %r27 };
	// end inline asm
	.loc	1 66 25                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:66:25
	add.s64 	%rd10, %rd14, %rd20;
	.loc	1 66 37                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:66:37
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd10 + 0 ], { %r28, %r29 };
	// end inline asm
	.loc	1 67 25                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:67:25
	add.s64 	%rd11, %rd15, %rd20;
	.loc	1 67 37                         // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:67:37
	mov.b32 	%r30, %f51;
	mov.b32 	%r31, %f52;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd11 + 0 ], { %r30, %r31 };
	// end inline asm
	.loc	1 67 4                          // c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py:67:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/3p/c3pfq4df46jk3zzan3t6k4rjx4v7g6jj6pwff6pt2dvyzgvs5rg7.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 112
.b8 102
.b8 113
.b8 52
.b8 100
.b8 102
.b8 52
.b8 54
.b8 106
.b8 107
.b8 51
.b8 122
.b8 122
.b8 97
.b8 110
.b8 51
.b8 116
.b8 54
.b8 107
.b8 52
.b8 114
.b8 106
.b8 120
.b8 52
.b8 118
.b8 55
.b8 103
.b8 54
.b8 106
.b8 106
.b8 54
.b8 112
.b8 119
.b8 102
.b8 102
.b8 54
.b8 112
.b8 116
.b8 50
.b8 100
.b8 118
.b8 121
.b8 122
.b8 103
.b8 118
.b8 115
.b8 53
.b8 114
.b8 103
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 112
.b8 0
	}
	.section	.debug_macinfo	{	}
