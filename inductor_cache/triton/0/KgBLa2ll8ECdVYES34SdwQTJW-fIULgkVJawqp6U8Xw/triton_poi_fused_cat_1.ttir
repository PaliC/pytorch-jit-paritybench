#loc = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-2> : tensor<64xi32> loc(#loc1)
    %cst_0 = arith.constant dense<1> : tensor<64xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<64xf32> loc(#loc1)
    %cst_2 = arith.constant dense<18> : tensor<64xi32> loc(#loc1)
    %cst_3 = arith.constant dense<9> : tensor<64xi32> loc(#loc1)
    %cst_4 = arith.constant dense<3> : tensor<64xi32> loc(#loc1)
    %cst_5 = arith.constant dense<2> : tensor<64xi64> loc(#loc1)
    %cst_6 = arith.constant dense<16> : tensor<64xi32> loc(#loc1)
    %cst_7 = arith.constant dense<2> : tensor<64xi32> loc(#loc1)
    %cst_8 = arith.constant dense<4> : tensor<64xi32> loc(#loc1)
    %cst_9 = arith.constant dense<64> : tensor<64xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_9 : tensor<64xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_8 : tensor<64xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_8 : tensor<64xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_7 : tensor<64xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_7 : tensor<64xi32> loc(#loc10)
    %10 = arith.remsi %9, %cst_7 : tensor<64xi32> loc(#loc11)
    %11 = arith.divsi %4, %cst_6 : tensor<64xi32> loc(#loc12)
    %12 = arith.extsi %7 : tensor<64xi32> to tensor<64xi64> loc(#loc13)
    %13 = arith.cmpi slt, %12, %cst_5 : tensor<64xi64> loc(#loc13)
    %14 = arith.muli %10, %cst_4 : tensor<64xi32> loc(#loc14)
    %15 = arith.addi %8, %14 : tensor<64xi32> loc(#loc15)
    %16 = arith.muli %7, %cst_3 : tensor<64xi32> loc(#loc16)
    %17 = arith.addi %15, %16 : tensor<64xi32> loc(#loc17)
    %18 = arith.muli %11, %cst_2 : tensor<64xi32> loc(#loc18)
    %19 = arith.addi %17, %18 : tensor<64xi32> loc(#loc19)
    %20 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc20)
    %21 = tt.addptr %20, %19 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc20)
    %22 = arith.andi %13, %5 : tensor<64xi1> loc(#loc21)
    %23 = tt.load %21, %22, %cst_1 : tensor<64x!tt.ptr<f32>> loc(#loc22)
    %24 = arith.addi %8, %cst_0 : tensor<64xi32> loc(#loc23)
    %25 = arith.addi %24, %14 : tensor<64xi32> loc(#loc24)
    %26 = arith.addi %25, %16 : tensor<64xi32> loc(#loc25)
    %27 = arith.addi %26, %18 : tensor<64xi32> loc(#loc26)
    %28 = tt.addptr %20, %27 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc27)
    %29 = tt.load %28, %22, %cst_1 : tensor<64x!tt.ptr<f32>> loc(#loc28)
    %30 = arith.cmpf ogt, %29, %23 : tensor<64xf32> loc(#loc77)
    %31 = arith.cmpf une, %29, %29 : tensor<64xf32> loc(#loc78)
    %32 = arith.ori %30, %31 : tensor<64xi1> loc(#loc79)
    %33 = arith.select %32, %29, %23 : tensor<64xi1>, tensor<64xf32> loc(#loc80)
    %34 = arith.addi %8, %cst_4 : tensor<64xi32> loc(#loc34)
    %35 = arith.addi %34, %14 : tensor<64xi32> loc(#loc35)
    %36 = arith.addi %35, %16 : tensor<64xi32> loc(#loc36)
    %37 = arith.addi %36, %18 : tensor<64xi32> loc(#loc37)
    %38 = tt.addptr %20, %37 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc38)
    %39 = tt.load %38, %22, %cst_1 : tensor<64x!tt.ptr<f32>> loc(#loc39)
    %40 = arith.cmpf ogt, %39, %33 : tensor<64xf32> loc(#loc81)
    %41 = arith.cmpf une, %39, %39 : tensor<64xf32> loc(#loc82)
    %42 = arith.ori %40, %41 : tensor<64xi1> loc(#loc83)
    %43 = arith.select %42, %39, %33 : tensor<64xi1>, tensor<64xf32> loc(#loc84)
    %44 = arith.addi %8, %cst_8 : tensor<64xi32> loc(#loc41)
    %45 = arith.addi %44, %14 : tensor<64xi32> loc(#loc42)
    %46 = arith.addi %45, %16 : tensor<64xi32> loc(#loc43)
    %47 = arith.addi %46, %18 : tensor<64xi32> loc(#loc44)
    %48 = tt.addptr %20, %47 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc45)
    %49 = tt.load %48, %22, %cst_1 : tensor<64x!tt.ptr<f32>> loc(#loc46)
    %50 = arith.cmpf ogt, %49, %43 : tensor<64xf32> loc(#loc85)
    %51 = arith.cmpf une, %49, %49 : tensor<64xf32> loc(#loc86)
    %52 = arith.ori %50, %51 : tensor<64xi1> loc(#loc87)
    %53 = arith.select %52, %49, %43 : tensor<64xi1>, tensor<64xf32> loc(#loc88)
    %54 = arith.cmpi sge, %12, %cst_5 : tensor<64xi64> loc(#loc48)
    %55 = arith.addi %7, %cst : tensor<64xi32> loc(#loc49)
    %56 = arith.muli %55, %cst_3 : tensor<64xi32> loc(#loc50)
    %57 = arith.addi %15, %56 : tensor<64xi32> loc(#loc51)
    %58 = arith.addi %57, %18 : tensor<64xi32> loc(#loc52)
    %59 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc53)
    %60 = tt.addptr %59, %58 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc53)
    %61 = arith.andi %54, %5 : tensor<64xi1> loc(#loc54)
    %62 = tt.load %60, %61, %cst_1 : tensor<64x!tt.ptr<f32>> loc(#loc55)
    %63 = arith.addi %25, %56 : tensor<64xi32> loc(#loc56)
    %64 = arith.addi %63, %18 : tensor<64xi32> loc(#loc57)
    %65 = tt.addptr %59, %64 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc58)
    %66 = tt.load %65, %61, %cst_1 : tensor<64x!tt.ptr<f32>> loc(#loc59)
    %67 = arith.cmpf ogt, %66, %62 : tensor<64xf32> loc(#loc89)
    %68 = arith.cmpf une, %66, %66 : tensor<64xf32> loc(#loc90)
    %69 = arith.ori %67, %68 : tensor<64xi1> loc(#loc91)
    %70 = arith.select %69, %66, %62 : tensor<64xi1>, tensor<64xf32> loc(#loc92)
    %71 = arith.addi %35, %56 : tensor<64xi32> loc(#loc61)
    %72 = arith.addi %71, %18 : tensor<64xi32> loc(#loc62)
    %73 = tt.addptr %59, %72 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc63)
    %74 = tt.load %73, %61, %cst_1 : tensor<64x!tt.ptr<f32>> loc(#loc64)
    %75 = arith.cmpf ogt, %74, %70 : tensor<64xf32> loc(#loc93)
    %76 = arith.cmpf une, %74, %74 : tensor<64xf32> loc(#loc94)
    %77 = arith.ori %75, %76 : tensor<64xi1> loc(#loc95)
    %78 = arith.select %77, %74, %70 : tensor<64xi1>, tensor<64xf32> loc(#loc96)
    %79 = arith.addi %45, %56 : tensor<64xi32> loc(#loc66)
    %80 = arith.addi %79, %18 : tensor<64xi32> loc(#loc67)
    %81 = tt.addptr %59, %80 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc68)
    %82 = tt.load %81, %61, %cst_1 : tensor<64x!tt.ptr<f32>> loc(#loc69)
    %83 = arith.cmpf ogt, %82, %78 : tensor<64xf32> loc(#loc97)
    %84 = arith.cmpf une, %82, %82 : tensor<64xf32> loc(#loc98)
    %85 = arith.ori %83, %84 : tensor<64xi1> loc(#loc99)
    %86 = arith.select %85, %82, %78 : tensor<64xi1>, tensor<64xf32> loc(#loc100)
    %87 = arith.select %54, %86, %cst_1 : tensor<64xi1>, tensor<64xf32> loc(#loc71)
    %88 = arith.select %13, %53, %87 : tensor<64xi1>, tensor<64xf32> loc(#loc101)
    %89 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc74)
    %90 = tt.addptr %89, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc74)
    tt.store %90, %88, %5 : tensor<64x!tt.ptr<f32>> loc(#loc75)
    tt.return loc(#loc76)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":21:28)
#loc3 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":21:33)
#loc4 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":22:36)
#loc5 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":22:23)
#loc6 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":23:21)
#loc7 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":24:21)
#loc8 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":24:26)
#loc9 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":25:19)
#loc10 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":26:21)
#loc11 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":26:26)
#loc12 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":27:19)
#loc13 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":33:18)
#loc14 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":34:37)
#loc15 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":34:35)
#loc16 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":34:45)
#loc17 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":34:42)
#loc18 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":34:54)
#loc19 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":34:51)
#loc20 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":34:30)
#loc21 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":34:66)
#loc22 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":34:59)
#loc23 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":35:34)
#loc24 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":35:39)
#loc25 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":35:46)
#loc26 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":35:55)
#loc27 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":35:30)
#loc28 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":35:63)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc30 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":36:40)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc34 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":37:34)
#loc35 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":37:39)
#loc36 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":37:46)
#loc37 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":37:55)
#loc38 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":37:30)
#loc39 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":37:63)
#loc40 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":38:40)
#loc41 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":39:35)
#loc42 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":39:40)
#loc43 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":39:47)
#loc44 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":39:56)
#loc45 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":39:31)
#loc46 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":39:64)
#loc47 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":40:42)
#loc48 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":43:20)
#loc49 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":46:53)
#loc50 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":46:46)
#loc51 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":46:43)
#loc52 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":46:59)
#loc53 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":46:31)
#loc54 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":46:75)
#loc55 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":46:67)
#loc56 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":47:47)
#loc57 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":47:63)
#loc58 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":47:31)
#loc59 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":47:71)
#loc60 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":48:42)
#loc61 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":49:47)
#loc62 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":49:63)
#loc63 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":49:31)
#loc64 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":49:71)
#loc65 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":50:42)
#loc66 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":51:47)
#loc67 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":51:63)
#loc68 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":51:31)
#loc69 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":51:71)
#loc70 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":52:42)
#loc71 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":54:35)
#loc72 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":55:34)
#loc73 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":42:34)
#loc74 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":56:25)
#loc75 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":56:37)
#loc76 = loc("inductor_cache/np/cnpyji43v5hu5kuo7omcukch4ltqesk7m47fksxe6rvgosgvzddc.py":56:4)
#loc77 = loc(callsite(#loc29 at #loc30))
#loc78 = loc(callsite(#loc31 at #loc30))
#loc79 = loc(callsite(#loc32 at #loc30))
#loc80 = loc(callsite(#loc33 at #loc30))
#loc81 = loc(callsite(#loc29 at #loc40))
#loc82 = loc(callsite(#loc31 at #loc40))
#loc83 = loc(callsite(#loc32 at #loc40))
#loc84 = loc(callsite(#loc33 at #loc40))
#loc85 = loc(callsite(#loc29 at #loc47))
#loc86 = loc(callsite(#loc31 at #loc47))
#loc87 = loc(callsite(#loc32 at #loc47))
#loc88 = loc(callsite(#loc33 at #loc47))
#loc89 = loc(callsite(#loc29 at #loc60))
#loc90 = loc(callsite(#loc31 at #loc60))
#loc91 = loc(callsite(#loc32 at #loc60))
#loc92 = loc(callsite(#loc33 at #loc60))
#loc93 = loc(callsite(#loc29 at #loc65))
#loc94 = loc(callsite(#loc31 at #loc65))
#loc95 = loc(callsite(#loc32 at #loc65))
#loc96 = loc(callsite(#loc33 at #loc65))
#loc97 = loc(callsite(#loc29 at #loc70))
#loc98 = loc(callsite(#loc31 at #loc70))
#loc99 = loc(callsite(#loc32 at #loc70))
#loc100 = loc(callsite(#loc33 at #loc70))
#loc101 = loc(fused[#loc72, #loc73])
