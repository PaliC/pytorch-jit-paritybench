; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 6, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 2, !dbg !12
  %11 = and i32 %9, 62, !dbg !12
  %12 = or disjoint i32 %7, %11, !dbg !13
  %13 = or disjoint i32 %10, %7, !dbg !13
  %14 = or disjoint i32 %13, 1, !dbg !13
  %15 = icmp slt i32 %12, 64, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %16 = sdiv i32 %.frozen, 4, !dbg !15
  %17 = mul i32 %16, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %17, !dbg !16
  %18 = srem i32 %14, 4, !dbg !16
  %19 = srem i32 %16, 4, !dbg !17
  %.frozen1 = freeze i32 %12, !dbg !18
  %20 = sdiv i32 %.frozen1, 16, !dbg !18
  %21 = shl nsw i32 %19, 2, !dbg !19
  %22 = mul i32 %20, 16, !dbg !20
  %srem.decomposed = sub i32 %.frozen1, %22, !dbg !20
  %23 = shl i32 %20, 6, !dbg !21
  %24 = add nsw i32 %21, %20, !dbg !22
  %25 = sdiv i32 %24, 16, !dbg !23
  %26 = add i32 %25, %23, !dbg !24
  %27 = add i32 %26, %srem.decomposed, !dbg !25
  %28 = add i32 %26, %18, !dbg !24
  %29 = add i32 %28, %21, !dbg !25
  %30 = sext i32 %27 to i64, !dbg !26
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !26
  %32 = sext i32 %29 to i64, !dbg !26
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !26
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %15) #1, !dbg !27
  %35 = bitcast i32 %34 to float, !dbg !27
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %15) #1, !dbg !27
  %37 = bitcast i32 %36 to float, !dbg !27
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !28
  %39 = bitcast i32 %38 to float, !dbg !28
  %40 = add i32 %26, 16, !dbg !29
  %41 = add i32 %40, %.decomposed, !dbg !30
  %42 = add i32 %41, %21, !dbg !31
  %43 = add i32 %40, %18, !dbg !30
  %44 = add i32 %43, %21, !dbg !31
  %45 = sext i32 %42 to i64, !dbg !32
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !32
  %47 = sext i32 %44 to i64, !dbg !32
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !32
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %15) #1, !dbg !33
  %50 = bitcast i32 %49 to float, !dbg !33
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %15) #1, !dbg !33
  %52 = bitcast i32 %51 to float, !dbg !33
  %53 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !34
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 true) #1, !dbg !35
  %55 = bitcast i32 %54 to float, !dbg !35
  %56 = add i32 %26, 32, !dbg !36
  %57 = add i32 %56, %.decomposed, !dbg !37
  %58 = add i32 %57, %21, !dbg !38
  %59 = add i32 %56, %18, !dbg !37
  %60 = add i32 %59, %21, !dbg !38
  %61 = sext i32 %58 to i64, !dbg !39
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !39
  %63 = sext i32 %60 to i64, !dbg !39
  %64 = getelementptr float, ptr addrspace(1) %0, i64 %63, !dbg !39
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 %15) #1, !dbg !40
  %66 = bitcast i32 %65 to float, !dbg !40
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 %15) #1, !dbg !40
  %68 = bitcast i32 %67 to float, !dbg !40
  %69 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !41
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %69, i1 true) #1, !dbg !42
  %71 = bitcast i32 %70 to float, !dbg !42
  %72 = add i32 %26, 48, !dbg !43
  %73 = add i32 %72, %.decomposed, !dbg !44
  %74 = add i32 %73, %21, !dbg !45
  %75 = add i32 %72, %18, !dbg !44
  %76 = add i32 %75, %21, !dbg !45
  %77 = sext i32 %74 to i64, !dbg !46
  %78 = getelementptr float, ptr addrspace(1) %0, i64 %77, !dbg !46
  %79 = sext i32 %76 to i64, !dbg !46
  %80 = getelementptr float, ptr addrspace(1) %0, i64 %79, !dbg !46
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %78, i1 %15) #1, !dbg !47
  %82 = bitcast i32 %81 to float, !dbg !47
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 %15) #1, !dbg !47
  %84 = bitcast i32 %83 to float, !dbg !47
  %85 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !48
  %86 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %85, i1 true) #1, !dbg !49
  %87 = bitcast i32 %86 to float, !dbg !49
  %88 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #1, !dbg !50
  %89 = bitcast i32 %88 to float, !dbg !50
  %90 = fmul float %35, %39, !dbg !51
  %91 = fmul float %37, %39, !dbg !51
  %92 = fmul float %50, %55, !dbg !52
  %93 = fmul float %52, %55, !dbg !52
  %94 = fadd float %90, %92, !dbg !53
  %95 = fadd float %91, %93, !dbg !53
  %96 = fmul float %66, %71, !dbg !54
  %97 = fmul float %68, %71, !dbg !54
  %98 = fadd float %94, %96, !dbg !55
  %99 = fadd float %95, %97, !dbg !55
  %100 = fmul float %82, %87, !dbg !56
  %101 = fmul float %84, %87, !dbg !56
  %102 = fadd float %98, %100, !dbg !57
  %103 = fadd float %99, %101, !dbg !57
  %104 = fadd float %102, %89, !dbg !58
  %105 = fadd float %103, %89, !dbg !58
  %106 = sext i32 %12 to i64, !dbg !59
  %107 = getelementptr float, ptr addrspace(1) %3, i64 %106, !dbg !59
  %108 = bitcast float %104 to i32, !dbg !60
  %109 = bitcast float %105 to i32, !dbg !60
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %108, i32 %109, ptr addrspace(1) %107, i1 %15) #1, !dbg !60
  ret void, !dbg !61
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2wuivhwvoojo3flzkcugstynvpsefzkbckiq3a33zokearhi2iu.py", directory: "inductor_cache/2w")
!4 = !{ptr @triton_poi_fused_add_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_2", linkageName: "triton_poi_fused_add_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 26, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 37, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 45, scope: !7)
!22 = !DILocation(line: 28, column: 57, scope: !7)
!23 = !DILocation(line: 28, column: 66, scope: !7)
!24 = !DILocation(line: 28, column: 42, scope: !7)
!25 = !DILocation(line: 28, column: 51, scope: !7)
!26 = !DILocation(line: 28, column: 30, scope: !7)
!27 = !DILocation(line: 28, column: 72, scope: !7)
!28 = !DILocation(line: 29, column: 19, scope: !7)
!29 = !DILocation(line: 31, column: 40, scope: !7)
!30 = !DILocation(line: 31, column: 47, scope: !7)
!31 = !DILocation(line: 31, column: 56, scope: !7)
!32 = !DILocation(line: 31, column: 30, scope: !7)
!33 = !DILocation(line: 31, column: 77, scope: !7)
!34 = !DILocation(line: 32, column: 30, scope: !7)
!35 = !DILocation(line: 32, column: 19, scope: !7)
!36 = !DILocation(line: 34, column: 40, scope: !7)
!37 = !DILocation(line: 34, column: 47, scope: !7)
!38 = !DILocation(line: 34, column: 56, scope: !7)
!39 = !DILocation(line: 34, column: 30, scope: !7)
!40 = !DILocation(line: 34, column: 77, scope: !7)
!41 = !DILocation(line: 35, column: 31, scope: !7)
!42 = !DILocation(line: 35, column: 20, scope: !7)
!43 = !DILocation(line: 37, column: 41, scope: !7)
!44 = !DILocation(line: 37, column: 48, scope: !7)
!45 = !DILocation(line: 37, column: 57, scope: !7)
!46 = !DILocation(line: 37, column: 31, scope: !7)
!47 = !DILocation(line: 37, column: 78, scope: !7)
!48 = !DILocation(line: 38, column: 31, scope: !7)
!49 = !DILocation(line: 38, column: 20, scope: !7)
!50 = !DILocation(line: 40, column: 20, scope: !7)
!51 = !DILocation(line: 42, column: 18, scope: !7)
!52 = !DILocation(line: 43, column: 18, scope: !7)
!53 = !DILocation(line: 44, column: 18, scope: !7)
!54 = !DILocation(line: 45, column: 19, scope: !7)
!55 = !DILocation(line: 46, column: 19, scope: !7)
!56 = !DILocation(line: 47, column: 20, scope: !7)
!57 = !DILocation(line: 48, column: 20, scope: !7)
!58 = !DILocation(line: 49, column: 20, scope: !7)
!59 = !DILocation(line: 50, column: 25, scope: !7)
!60 = !DILocation(line: 50, column: 37, scope: !7)
!61 = !DILocation(line: 50, column: 4, scope: !7)
