; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_relu_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 28800, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %13 = sdiv i32 %.frozen, 15, !dbg !15
  %14 = mul i32 %13, 15, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %.frozen2 = freeze i32 %11, !dbg !15
  %15 = sdiv i32 %.frozen2, 15, !dbg !15
  %16 = mul i32 %15, 15, !dbg !16
  %.decomposed3 = sub i32 %.frozen2, %16, !dbg !16
  %.frozen4 = freeze i32 %10, !dbg !17
  %17 = sdiv i32 %.frozen4, 7200, !dbg !17
  %18 = mul i32 %17, 7200, !dbg !18
  %.decomposed5 = sub i32 %.frozen4, %18, !dbg !18
  %19 = shl nsw i32 %.decomposed, 1, !dbg !19
  %20 = shl nsw i32 %.decomposed3, 1, !dbg !19
  %21 = mul i32 %13, 60, !dbg !20
  %22 = mul i32 %15, 60, !dbg !20
  %23 = add i32 %19, %21, !dbg !21
  %24 = add i32 %20, %22, !dbg !21
  %25 = sext i32 %23 to i64, !dbg !22
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !22
  %27 = sext i32 %24 to i64, !dbg !22
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !22
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %12) #1, !dbg !23
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %12) #1, !dbg !23
  %31 = or disjoint i32 %23, 1, !dbg !24
  %32 = or disjoint i32 %24, 1, !dbg !24
  %33 = sext i32 %31 to i64, !dbg !25
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !25
  %35 = sext i32 %32 to i64, !dbg !25
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !25
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %12) #1, !dbg !26
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %12) #1, !dbg !26
  %39 = add i32 %23, 30, !dbg !27
  %40 = add i32 %24, 30, !dbg !27
  %41 = sext i32 %39 to i64, !dbg !28
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !28
  %43 = sext i32 %40 to i64, !dbg !28
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !28
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %12) #1, !dbg !29
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %12) #1, !dbg !29
  %47 = add i32 %23, 31, !dbg !30
  %48 = add i32 %24, 31, !dbg !30
  %49 = sext i32 %47 to i64, !dbg !31
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !31
  %51 = sext i32 %48 to i64, !dbg !31
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !31
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %12) #1, !dbg !32
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %12) #1, !dbg !32
  %55 = insertelement <2 x i32> poison, i32 %29, i64 0, !dbg !23
  %56 = insertelement <2 x i32> %55, i32 %30, i64 1, !dbg !23
  %57 = bitcast <2 x i32> %56 to <2 x float>, !dbg !23
  %58 = insertelement <2 x i32> poison, i32 %37, i64 0, !dbg !26
  %59 = insertelement <2 x i32> %58, i32 %38, i64 1, !dbg !26
  %60 = bitcast <2 x i32> %59 to <2 x float>, !dbg !26
  %61 = insertelement <2 x i32> poison, i32 %45, i64 0, !dbg !29
  %62 = insertelement <2 x i32> %61, i32 %46, i64 1, !dbg !29
  %63 = bitcast <2 x i32> %62 to <2 x float>, !dbg !29
  %64 = insertelement <2 x i32> poison, i32 %53, i64 0, !dbg !32
  %65 = insertelement <2 x i32> %64, i32 %54, i64 1, !dbg !32
  %66 = bitcast <2 x i32> %65 to <2 x float>, !dbg !32
  %67 = fcmp ogt <2 x float> %60, %57, !dbg !33
  %68 = zext <2 x i1> %67 to <2 x i8>, !dbg !34
  %69 = fcmp uno <2 x float> %60, zeroinitializer, !dbg !35
  %70 = or <2 x i1> %67, %69, !dbg !39
  %.v = select <2 x i1> %70, <2 x i32> %59, <2 x i32> %56, !dbg !40
  %71 = bitcast <2 x i32> %.v to <2 x float>, !dbg !40
  %72 = fcmp olt <2 x float> %71, %63, !dbg !41
  %73 = select <2 x i1> %72, <2 x i8> splat (i8 2), <2 x i8> %68, !dbg !42
  %74 = fcmp uno <2 x float> %63, zeroinitializer, !dbg !43
  %75 = or <2 x i1> %74, %72, !dbg !45
  %.v1 = select <2 x i1> %75, <2 x i32> %62, <2 x i32> %.v, !dbg !46
  %76 = bitcast <2 x i32> %.v1 to <2 x float>, !dbg !46
  %77 = fcmp olt <2 x float> %76, %66, !dbg !47
  %78 = select <2 x i1> %77, <2 x i8> splat (i8 3), <2 x i8> %73, !dbg !48
  %79 = bitcast i32 %53 to float, !dbg !49
  %80 = fcmp uno float %79, 0.000000e+00, !dbg !49
  %81 = bitcast i32 %54 to float, !dbg !49
  %82 = fcmp uno float %81, 0.000000e+00, !dbg !49
  %83 = extractelement <2 x i1> %77, i64 0, !dbg !51
  %84 = or i1 %80, %83, !dbg !51
  %85 = extractelement <2 x i1> %77, i64 1, !dbg !51
  %86 = or i1 %82, %85, !dbg !51
  %87 = extractelement <2 x float> %76, i64 0, !dbg !52
  %88 = select i1 %84, float %79, float %87, !dbg !52
  %89 = extractelement <2 x float> %76, i64 1, !dbg !52
  %90 = select i1 %86, float %81, float %89, !dbg !52
  %91 = fcmp olt float %88, 0.000000e+00, !dbg !53
  %92 = fcmp olt float %90, 0.000000e+00, !dbg !53
  %93 = select i1 %91, float 0.000000e+00, float %88, !dbg !55
  %94 = select i1 %92, float 0.000000e+00, float %90, !dbg !55
  %95 = mul i32 %17, 7296, !dbg !56
  %96 = add i32 %95, %.decomposed5, !dbg !57
  %97 = sext i32 %96 to i64, !dbg !58
  %98 = getelementptr i8, ptr addrspace(1) %1, i64 %97, !dbg !58
  %99 = bitcast <2 x i8> %78 to i16, !dbg !59
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %99, ptr addrspace(1) %98, i1 %12) #1, !dbg !59
  %100 = sext i32 %10 to i64, !dbg !60
  %101 = getelementptr float, ptr addrspace(1) %2, i64 %100, !dbg !60
  %102 = bitcast float %93 to i32, !dbg !61
  %103 = bitcast float %94 to i32, !dbg !61
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %102, i32 %103, ptr addrspace(1) %101, i1 %12) #1, !dbg !61
  ret void, !dbg !62
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdgh5sjbgcq5iqt6dboyvz3uopdap4cn3i46mclcijduhzslpsqn.py", directory: "inductor_cache/dg")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_relu_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_relu_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_relu_1", linkageName: "triton_poi_fused_max_pool2d_with_indices_relu_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 27, column: 19, scope: !7)
!19 = !DILocation(line: 29, column: 32, scope: !7)
!20 = !DILocation(line: 29, column: 40, scope: !7)
!21 = !DILocation(line: 29, column: 37, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 45, scope: !7)
!24 = !DILocation(line: 30, column: 41, scope: !7)
!25 = !DILocation(line: 30, column: 30, scope: !7)
!26 = !DILocation(line: 30, column: 49, scope: !7)
!27 = !DILocation(line: 31, column: 42, scope: !7)
!28 = !DILocation(line: 31, column: 30, scope: !7)
!29 = !DILocation(line: 31, column: 50, scope: !7)
!30 = !DILocation(line: 32, column: 43, scope: !7)
!31 = !DILocation(line: 32, column: 31, scope: !7)
!32 = !DILocation(line: 32, column: 51, scope: !7)
!33 = !DILocation(line: 33, column: 18, scope: !7)
!34 = !DILocation(line: 36, column: 32, scope: !7)
!35 = !DILocation(line: 120, column: 21, scope: !36, inlinedAt: !38)
!36 = distinct !DILexicalBlockFile(scope: !7, file: !37, discriminator: 0)
!37 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!38 = !DILocation(line: 37, column: 40, scope: !7)
!39 = !DILocation(line: 120, column: 16, scope: !36, inlinedAt: !38)
!40 = !DILocation(line: 121, column: 29, scope: !36, inlinedAt: !38)
!41 = !DILocation(line: 38, column: 18, scope: !7)
!42 = !DILocation(line: 40, column: 33, scope: !7)
!43 = !DILocation(line: 120, column: 21, scope: !36, inlinedAt: !44)
!44 = !DILocation(line: 41, column: 41, scope: !7)
!45 = !DILocation(line: 120, column: 16, scope: !36, inlinedAt: !44)
!46 = !DILocation(line: 121, column: 29, scope: !36, inlinedAt: !44)
!47 = !DILocation(line: 42, column: 20, scope: !7)
!48 = !DILocation(line: 44, column: 35, scope: !7)
!49 = !DILocation(line: 120, column: 21, scope: !36, inlinedAt: !50)
!50 = !DILocation(line: 45, column: 42, scope: !7)
!51 = !DILocation(line: 120, column: 16, scope: !36, inlinedAt: !50)
!52 = !DILocation(line: 121, column: 29, scope: !36, inlinedAt: !50)
!53 = !DILocation(line: 118, column: 15, scope: !36, inlinedAt: !54)
!54 = !DILocation(line: 47, column: 42, scope: !7)
!55 = !DILocation(line: 121, column: 29, scope: !36, inlinedAt: !54)
!56 = !DILocation(line: 48, column: 35, scope: !7)
!57 = !DILocation(line: 48, column: 30, scope: !7)
!58 = !DILocation(line: 48, column: 25, scope: !7)
!59 = !DILocation(line: 48, column: 47, scope: !7)
!60 = !DILocation(line: 49, column: 25, scope: !7)
!61 = !DILocation(line: 49, column: 37, scope: !7)
!62 = !DILocation(line: 49, column: 4, scope: !7)
