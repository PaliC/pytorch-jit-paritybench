; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_cat_elu_20(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 9, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 2, !dbg !12
  %11 = and i32 %10, 508, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %.frozen = freeze i32 %12, !dbg !14
  %13 = sdiv i32 %.frozen, 256, !dbg !14
  %14 = mul i32 %13, 256, !dbg !15
  %.decomposed = sub i32 %.frozen, %14, !dbg !15
  %15 = icmp slt i32 %.decomposed, 128, !dbg !16
  %16 = shl nsw i32 %13, 7, !dbg !17
  %17 = add nsw i32 %16, %.decomposed, !dbg !18
  %18 = sext i32 %17 to i64, !dbg !19
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !19
  %20 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %19, i1 %15, i32 0, i1 %15, i32 0, i1 %15, i32 0, i1 %15, i32 0, i1 %15) #3, !dbg !20
  %21 = extractvalue { i32, i32, i32, i32 } %20, 0, !dbg !20
  %22 = extractvalue { i32, i32, i32, i32 } %20, 1, !dbg !20
  %23 = extractvalue { i32, i32, i32, i32 } %20, 2, !dbg !20
  %24 = extractvalue { i32, i32, i32, i32 } %20, 3, !dbg !20
  %25 = sext i32 %.decomposed to i64, !dbg !21
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !21
  %27 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %26, i1 %15, i32 0, i1 %15, i32 0, i1 %15, i32 0, i1 %15, i32 0, i1 %15) #3, !dbg !22
  %28 = extractvalue { i32, i32, i32, i32 } %27, 0, !dbg !22
  %29 = extractvalue { i32, i32, i32, i32 } %27, 1, !dbg !22
  %30 = extractvalue { i32, i32, i32, i32 } %27, 2, !dbg !22
  %31 = extractvalue { i32, i32, i32, i32 } %27, 3, !dbg !22
  %32 = icmp sgt i32 %.decomposed, 127, !dbg !23
  %33 = add nsw i32 %.decomposed, -128, !dbg !24
  %34 = add nsw i32 %16, %33, !dbg !25
  %35 = sext i32 %34 to i64, !dbg !26
  %36 = getelementptr float, ptr addrspace(1) %2, i64 %35, !dbg !26
  %37 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %36, i1 %32, i32 0, i1 %32, i32 0, i1 %32, i32 0, i1 %32, i32 0, i1 %32) #3, !dbg !27
  %38 = extractvalue { i32, i32, i32, i32 } %37, 0, !dbg !27
  %39 = extractvalue { i32, i32, i32, i32 } %37, 1, !dbg !27
  %40 = extractvalue { i32, i32, i32, i32 } %37, 2, !dbg !27
  %41 = extractvalue { i32, i32, i32, i32 } %37, 3, !dbg !27
  %42 = sext i32 %33 to i64, !dbg !28
  %43 = getelementptr float, ptr addrspace(1) %3, i64 %42, !dbg !28
  %44 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %43, i1 %32, i32 0, i1 %32, i32 0, i1 %32, i32 0, i1 %32, i32 0, i1 %32) #3, !dbg !29
  %45 = extractvalue { i32, i32, i32, i32 } %44, 0, !dbg !29
  %46 = extractvalue { i32, i32, i32, i32 } %44, 1, !dbg !29
  %47 = extractvalue { i32, i32, i32, i32 } %44, 2, !dbg !29
  %48 = extractvalue { i32, i32, i32, i32 } %44, 3, !dbg !29
  %49 = insertelement <4 x i32> poison, i32 %24, i64 0, !dbg !20
  %50 = insertelement <4 x i32> %49, i32 %21, i64 1, !dbg !20
  %51 = insertelement <4 x i32> %50, i32 %22, i64 2, !dbg !20
  %52 = insertelement <4 x i32> %51, i32 %23, i64 3, !dbg !20
  %53 = bitcast <4 x i32> %52 to <4 x float>, !dbg !20
  %54 = insertelement <4 x i32> poison, i32 %31, i64 0, !dbg !22
  %55 = insertelement <4 x i32> %54, i32 %28, i64 1, !dbg !22
  %56 = insertelement <4 x i32> %55, i32 %29, i64 2, !dbg !22
  %57 = insertelement <4 x i32> %56, i32 %30, i64 3, !dbg !22
  %58 = bitcast <4 x i32> %57 to <4 x float>, !dbg !22
  %59 = fadd <4 x float> %53, %58, !dbg !30
  %60 = insertelement <4 x i32> poison, i32 %41, i64 0, !dbg !27
  %61 = insertelement <4 x i32> %60, i32 %38, i64 1, !dbg !27
  %62 = insertelement <4 x i32> %61, i32 %39, i64 2, !dbg !27
  %63 = insertelement <4 x i32> %62, i32 %40, i64 3, !dbg !27
  %64 = bitcast <4 x i32> %63 to <4 x float>, !dbg !27
  %65 = insertelement <4 x i32> poison, i32 %48, i64 0, !dbg !29
  %66 = insertelement <4 x i32> %65, i32 %45, i64 1, !dbg !29
  %67 = insertelement <4 x i32> %66, i32 %46, i64 2, !dbg !29
  %68 = insertelement <4 x i32> %67, i32 %47, i64 3, !dbg !29
  %69 = bitcast <4 x i32> %68 to <4 x float>, !dbg !29
  %70 = fadd <4 x float> %64, %69, !dbg !31
  %71 = insertelement <4 x i1> poison, i1 %15, i64 0, !dbg !32
  %72 = shufflevector <4 x i1> %71, <4 x i1> poison, <4 x i32> zeroinitializer, !dbg !32
  %73 = select <4 x i1> %72, <4 x float> %59, <4 x float> %70, !dbg !32
  %74 = extractelement <4 x float> %73, i64 1, !dbg !33
  %75 = fmul float %74, 0x3FF7154760000000, !dbg !33
  %76 = tail call float @llvm.nvvm.round.f(float %75) #3, !dbg !33
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not.i = icmp eq i32 %77, 0, !dbg !33
  %78 = tail call float @llvm.nvvm.fabs.ftz.f(float %74) #3, !dbg !33
  %79 = tail call float @llvm.nvvm.fabs.f(float %74) #3, !dbg !33
  %.03.i = select i1 %.not.i, float %79, float %78, !dbg !33
  %80 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !33
  %t.0.i = select i1 %80, float 0.000000e+00, float %76, !dbg !33
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %83 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !33
  %j.0.i = select i1 %83, float 1.270000e+02, float %t.0.i, !dbg !33
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not8.i = icmp eq i32 %89, 0, !dbg !33
  br i1 %.not8.i, label %92, label %90, !dbg !33

90:                                               ; preds = %6
  %91 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !33
  br label %__nv_expm1f.exit, !dbg !33

92:                                               ; preds = %6
  %93 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !33
  br label %__nv_expm1f.exit, !dbg !33

__nv_expm1f.exit:                                 ; preds = %90, %92
  %.0.i = phi float [ %91, %90 ], [ %93, %92 ], !dbg !33
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %95 = extractelement <4 x float> %73, i64 2, !dbg !33
  %96 = fmul float %95, 0x3FF7154760000000, !dbg !33
  %97 = tail call float @llvm.nvvm.round.f(float %96) #3, !dbg !33
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not.i1 = icmp eq i32 %98, 0, !dbg !33
  %99 = tail call float @llvm.nvvm.fabs.ftz.f(float %95) #3, !dbg !33
  %100 = tail call float @llvm.nvvm.fabs.f(float %95) #3, !dbg !33
  %.03.i2 = select i1 %.not.i1, float %100, float %99, !dbg !33
  %101 = fcmp olt float %.03.i2, 0x3FDA3D70A0000000, !dbg !33
  %t.0.i3 = select i1 %101, float 0.000000e+00, float %97, !dbg !33
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %104 = fcmp oeq float %t.0.i3, 1.280000e+02, !dbg !33
  %j.0.i4 = select i1 %104, float 1.270000e+02, float %t.0.i3, !dbg !33
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not8.i5 = icmp eq i32 %110, 0, !dbg !33
  br i1 %.not8.i5, label %113, label %111, !dbg !33

111:                                              ; preds = %__nv_expm1f.exit
  %112 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i4) #3, !dbg !33
  br label %__nv_expm1f.exit27, !dbg !33

113:                                              ; preds = %__nv_expm1f.exit
  %114 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i4) #3, !dbg !33
  br label %__nv_expm1f.exit27, !dbg !33

__nv_expm1f.exit27:                               ; preds = %111, %113
  %.0.i6 = phi float [ %112, %111 ], [ %114, %113 ], !dbg !33
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %116 = extractelement <4 x float> %73, i64 3, !dbg !33
  %117 = fmul float %116, 0x3FF7154760000000, !dbg !33
  %118 = tail call float @llvm.nvvm.round.f(float %117) #3, !dbg !33
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not.i28 = icmp eq i32 %119, 0, !dbg !33
  %120 = tail call float @llvm.nvvm.fabs.ftz.f(float %116) #3, !dbg !33
  %121 = tail call float @llvm.nvvm.fabs.f(float %116) #3, !dbg !33
  %.03.i29 = select i1 %.not.i28, float %121, float %120, !dbg !33
  %122 = fcmp olt float %.03.i29, 0x3FDA3D70A0000000, !dbg !33
  %t.0.i30 = select i1 %122, float 0.000000e+00, float %118, !dbg !33
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %125 = fcmp oeq float %t.0.i30, 1.280000e+02, !dbg !33
  %j.0.i31 = select i1 %125, float 1.270000e+02, float %t.0.i30, !dbg !33
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not8.i32 = icmp eq i32 %131, 0, !dbg !33
  br i1 %.not8.i32, label %134, label %132, !dbg !33

132:                                              ; preds = %__nv_expm1f.exit27
  %133 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i31) #3, !dbg !33
  br label %__nv_expm1f.exit54, !dbg !33

134:                                              ; preds = %__nv_expm1f.exit27
  %135 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i31) #3, !dbg !33
  br label %__nv_expm1f.exit54, !dbg !33

__nv_expm1f.exit54:                               ; preds = %132, %134
  %.0.i33 = phi float [ %133, %132 ], [ %135, %134 ], !dbg !33
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %137 = extractelement <4 x float> %73, i64 0, !dbg !33
  %138 = fmul float %137, 0x3FF7154760000000, !dbg !33
  %139 = tail call float @llvm.nvvm.round.f(float %138) #3, !dbg !33
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not.i55 = icmp eq i32 %140, 0, !dbg !33
  %141 = tail call float @llvm.nvvm.fabs.ftz.f(float %137) #3, !dbg !33
  %142 = tail call float @llvm.nvvm.fabs.f(float %137) #3, !dbg !33
  %.03.i56 = select i1 %.not.i55, float %142, float %141, !dbg !33
  %143 = fcmp olt float %.03.i56, 0x3FDA3D70A0000000, !dbg !33
  %t.0.i57 = select i1 %143, float 0.000000e+00, float %139, !dbg !33
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %146 = fcmp oeq float %t.0.i57, 1.280000e+02, !dbg !33
  %j.0.i58 = select i1 %146, float 1.270000e+02, float %t.0.i57, !dbg !33
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not8.i59 = icmp eq i32 %152, 0, !dbg !33
  br i1 %.not8.i59, label %155, label %153, !dbg !33

153:                                              ; preds = %__nv_expm1f.exit54
  %154 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i58) #3, !dbg !33
  br label %__nv_expm1f.exit81, !dbg !33

155:                                              ; preds = %__nv_expm1f.exit54
  %156 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i58) #3, !dbg !33
  br label %__nv_expm1f.exit81, !dbg !33

__nv_expm1f.exit81:                               ; preds = %153, %155
  %.0.i60 = phi float [ %154, %153 ], [ %156, %155 ], !dbg !33
  %157 = fcmp oeq <4 x float> %73, zeroinitializer, !dbg !33
  %158 = fadd float %116, %116, !dbg !33
  %159 = fcmp olt float %j.0.i31, -2.500000e+01, !dbg !33
  %160 = fcmp ogt float %j.0.i31, 1.280000e+02, !dbg !33
  %.not9.i48 = icmp eq i32 %136, 0, !dbg !33
  %.not7.i34 = icmp eq i32 %130, 0, !dbg !33
  %.not6.i35 = icmp eq i32 %129, 0, !dbg !33
  %.not5.i36 = icmp eq i32 %128, 0, !dbg !33
  %.not4.i37 = icmp eq i32 %127, 0, !dbg !33
  %.not3.i38 = icmp eq i32 %126, 0, !dbg !33
  %.not2.i39 = icmp eq i32 %124, 0, !dbg !33
  %161 = fneg float %t.0.i30, !dbg !33
  %.not1.i40 = icmp eq i32 %123, 0, !dbg !33
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %161, float 0x3FE62E4000000000, float %116) #3, !dbg !33
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %161, float 0x3FE62E4000000000, float %116) #3, !dbg !33
  %.04.i41 = select i1 %.not1.i40, float %162, float %163, !dbg !33
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %161, float 0x3EB7F7D1C0000000, float %.04.i41) #3, !dbg !33
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %161, float 0x3EB7F7D1C0000000, float %.04.i41) #3, !dbg !33
  %.05.i42 = select i1 %.not2.i39, float %164, float %165, !dbg !33
  %166 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i42, float 0x3F812ACC60000000) #3, !dbg !33
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i42, float 0x3F812ACC60000000) #3, !dbg !33
  %.07.i43 = select i1 %.not3.i38, float %166, float %167, !dbg !33
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i43, float %.05.i42, float 0x3FA5557C60000000) #3, !dbg !33
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i43, float %.05.i42, float 0x3FA5557C60000000) #3, !dbg !33
  %.08.i44 = select i1 %.not4.i37, float %168, float %169, !dbg !33
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i44, float %.05.i42, float 0x3FC5553EC0000000) #3, !dbg !33
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i44, float %.05.i42, float 0x3FC5553EC0000000) #3, !dbg !33
  %.09.i45 = select i1 %.not5.i36, float %170, float %171, !dbg !33
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i45, float %.05.i42, float 0x3FDFFFFFC0000000) #3, !dbg !33
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i45, float %.05.i42, float 0x3FDFFFFFC0000000) #3, !dbg !33
  %.06.i46 = select i1 %.not6.i35, float %172, float %173, !dbg !33
  %174 = fmul float %.05.i42, %.06.i46, !dbg !33
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %174, float %.05.i42, float %.05.i42) #3, !dbg !33
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %174, float %.05.i42, float %.05.i42) #3, !dbg !33
  %.01.i47 = select i1 %.not7.i34, float %175, float %176, !dbg !33
  %177 = fadd float %.0.i33, -1.000000e+00, !dbg !33
  %178 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i47, float %.0.i33, float %177) #3, !dbg !33
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i47, float %.0.i33, float %177) #3, !dbg !33
  %.02.i49 = select i1 %.not9.i48, float %178, float %179, !dbg !33
  %180 = fadd float %.02.i49, %.02.i49, !dbg !33
  %u.0.i50 = select i1 %125, float %180, float %.02.i49, !dbg !33
  %u.1.i51 = select i1 %160, float 0x7FF0000000000000, float %u.0.i50, !dbg !33
  %u.2.i52 = select i1 %159, float -1.000000e+00, float %u.1.i51, !dbg !33
  %181 = extractelement <4 x i1> %157, i64 3, !dbg !33
  %u.3.i53 = select i1 %181, float %158, float %u.2.i52, !dbg !33
  %182 = fadd float %95, %95, !dbg !33
  %183 = fcmp olt float %j.0.i4, -2.500000e+01, !dbg !33
  %184 = fcmp ogt float %j.0.i4, 1.280000e+02, !dbg !33
  %.not9.i21 = icmp eq i32 %115, 0, !dbg !33
  %.not7.i7 = icmp eq i32 %109, 0, !dbg !33
  %.not6.i8 = icmp eq i32 %108, 0, !dbg !33
  %.not5.i9 = icmp eq i32 %107, 0, !dbg !33
  %.not4.i10 = icmp eq i32 %106, 0, !dbg !33
  %.not3.i11 = icmp eq i32 %105, 0, !dbg !33
  %.not2.i12 = icmp eq i32 %103, 0, !dbg !33
  %185 = fneg float %t.0.i3, !dbg !33
  %.not1.i13 = icmp eq i32 %102, 0, !dbg !33
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %185, float 0x3FE62E4000000000, float %95) #3, !dbg !33
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %185, float 0x3FE62E4000000000, float %95) #3, !dbg !33
  %.04.i14 = select i1 %.not1.i13, float %186, float %187, !dbg !33
  %188 = tail call float @llvm.nvvm.fma.rn.f(float %185, float 0x3EB7F7D1C0000000, float %.04.i14) #3, !dbg !33
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %185, float 0x3EB7F7D1C0000000, float %.04.i14) #3, !dbg !33
  %.05.i15 = select i1 %.not2.i12, float %188, float %189, !dbg !33
  %190 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i15, float 0x3F812ACC60000000) #3, !dbg !33
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i15, float 0x3F812ACC60000000) #3, !dbg !33
  %.07.i16 = select i1 %.not3.i11, float %190, float %191, !dbg !33
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i16, float %.05.i15, float 0x3FA5557C60000000) #3, !dbg !33
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i16, float %.05.i15, float 0x3FA5557C60000000) #3, !dbg !33
  %.08.i17 = select i1 %.not4.i10, float %192, float %193, !dbg !33
  %194 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i17, float %.05.i15, float 0x3FC5553EC0000000) #3, !dbg !33
  %195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i17, float %.05.i15, float 0x3FC5553EC0000000) #3, !dbg !33
  %.09.i18 = select i1 %.not5.i9, float %194, float %195, !dbg !33
  %196 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i18, float %.05.i15, float 0x3FDFFFFFC0000000) #3, !dbg !33
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i18, float %.05.i15, float 0x3FDFFFFFC0000000) #3, !dbg !33
  %.06.i19 = select i1 %.not6.i8, float %196, float %197, !dbg !33
  %198 = fmul float %.05.i15, %.06.i19, !dbg !33
  %199 = tail call float @llvm.nvvm.fma.rn.f(float %198, float %.05.i15, float %.05.i15) #3, !dbg !33
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %198, float %.05.i15, float %.05.i15) #3, !dbg !33
  %.01.i20 = select i1 %.not7.i7, float %199, float %200, !dbg !33
  %201 = fadd float %.0.i6, -1.000000e+00, !dbg !33
  %202 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i20, float %.0.i6, float %201) #3, !dbg !33
  %203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i20, float %.0.i6, float %201) #3, !dbg !33
  %.02.i22 = select i1 %.not9.i21, float %202, float %203, !dbg !33
  %204 = fadd float %.02.i22, %.02.i22, !dbg !33
  %u.0.i23 = select i1 %104, float %204, float %.02.i22, !dbg !33
  %u.1.i24 = select i1 %184, float 0x7FF0000000000000, float %u.0.i23, !dbg !33
  %u.2.i25 = select i1 %183, float -1.000000e+00, float %u.1.i24, !dbg !33
  %205 = extractelement <4 x i1> %157, i64 2, !dbg !33
  %u.3.i26 = select i1 %205, float %182, float %u.2.i25, !dbg !33
  %206 = fadd float %74, %74, !dbg !33
  %207 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !33
  %208 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !33
  %.not9.i = icmp eq i32 %94, 0, !dbg !33
  %.not7.i = icmp eq i32 %88, 0, !dbg !33
  %.not6.i = icmp eq i32 %87, 0, !dbg !33
  %.not5.i = icmp eq i32 %86, 0, !dbg !33
  %.not4.i = icmp eq i32 %85, 0, !dbg !33
  %.not3.i = icmp eq i32 %84, 0, !dbg !33
  %.not2.i = icmp eq i32 %82, 0, !dbg !33
  %209 = fneg float %t.0.i, !dbg !33
  %.not1.i = icmp eq i32 %81, 0, !dbg !33
  %210 = tail call float @llvm.nvvm.fma.rn.f(float %209, float 0x3FE62E4000000000, float %74) #3, !dbg !33
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %209, float 0x3FE62E4000000000, float %74) #3, !dbg !33
  %.04.i = select i1 %.not1.i, float %210, float %211, !dbg !33
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %209, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !33
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %209, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !33
  %.05.i = select i1 %.not2.i, float %212, float %213, !dbg !33
  %214 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !33
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !33
  %.07.i = select i1 %.not3.i, float %214, float %215, !dbg !33
  %216 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !33
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !33
  %.08.i = select i1 %.not4.i, float %216, float %217, !dbg !33
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !33
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !33
  %.09.i = select i1 %.not5.i, float %218, float %219, !dbg !33
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !33
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !33
  %.06.i = select i1 %.not6.i, float %220, float %221, !dbg !33
  %222 = fmul float %.05.i, %.06.i, !dbg !33
  %223 = tail call float @llvm.nvvm.fma.rn.f(float %222, float %.05.i, float %.05.i) #3, !dbg !33
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %222, float %.05.i, float %.05.i) #3, !dbg !33
  %.01.i = select i1 %.not7.i, float %223, float %224, !dbg !33
  %225 = fadd float %.0.i, -1.000000e+00, !dbg !33
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i, float %225) #3, !dbg !33
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i, float %225) #3, !dbg !33
  %.02.i = select i1 %.not9.i, float %226, float %227, !dbg !33
  %228 = fadd float %.02.i, %.02.i, !dbg !33
  %u.0.i = select i1 %83, float %228, float %.02.i, !dbg !33
  %u.1.i = select i1 %208, float 0x7FF0000000000000, float %u.0.i, !dbg !33
  %u.2.i = select i1 %207, float -1.000000e+00, float %u.1.i, !dbg !33
  %229 = extractelement <4 x i1> %157, i64 1, !dbg !33
  %u.3.i = select i1 %229, float %206, float %u.2.i, !dbg !33
  %230 = fcmp ogt float %137, 0.000000e+00, !dbg !34
  %231 = fcmp ogt float %116, 0.000000e+00, !dbg !34
  %232 = fcmp ogt float %95, 0.000000e+00, !dbg !34
  %233 = fcmp ogt float %74, 0.000000e+00, !dbg !34
  %.not7.i61 = icmp eq i32 %151, 0, !dbg !33
  %.not6.i62 = icmp eq i32 %150, 0, !dbg !33
  %.not5.i63 = icmp eq i32 %149, 0, !dbg !33
  %.not4.i64 = icmp eq i32 %148, 0, !dbg !33
  %.not3.i65 = icmp eq i32 %147, 0, !dbg !33
  %.not2.i66 = icmp eq i32 %145, 0, !dbg !33
  %234 = fneg float %t.0.i57, !dbg !33
  %.not1.i67 = icmp eq i32 %144, 0, !dbg !33
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %234, float 0x3FE62E4000000000, float %137) #3, !dbg !33
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %234, float 0x3FE62E4000000000, float %137) #3, !dbg !33
  %.04.i68 = select i1 %.not1.i67, float %235, float %236, !dbg !33
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %234, float 0x3EB7F7D1C0000000, float %.04.i68) #3, !dbg !33
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %234, float 0x3EB7F7D1C0000000, float %.04.i68) #3, !dbg !33
  %.05.i69 = select i1 %.not2.i66, float %237, float %238, !dbg !33
  %239 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i69, float 0x3F812ACC60000000) #3, !dbg !33
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i69, float 0x3F812ACC60000000) #3, !dbg !33
  %.07.i70 = select i1 %.not3.i65, float %239, float %240, !dbg !33
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i70, float %.05.i69, float 0x3FA5557C60000000) #3, !dbg !33
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i70, float %.05.i69, float 0x3FA5557C60000000) #3, !dbg !33
  %.08.i71 = select i1 %.not4.i64, float %241, float %242, !dbg !33
  %243 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i71, float %.05.i69, float 0x3FC5553EC0000000) #3, !dbg !33
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i71, float %.05.i69, float 0x3FC5553EC0000000) #3, !dbg !33
  %.09.i72 = select i1 %.not5.i63, float %243, float %244, !dbg !33
  %245 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %.05.i69, float 0x3FDFFFFFC0000000) #3, !dbg !33
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %.05.i69, float 0x3FDFFFFFC0000000) #3, !dbg !33
  %.06.i73 = select i1 %.not6.i62, float %245, float %246, !dbg !33
  %247 = fmul float %.05.i69, %.06.i73, !dbg !33
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %247, float %.05.i69, float %.05.i69) #3, !dbg !33
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %247, float %.05.i69, float %.05.i69) #3, !dbg !33
  %.01.i74 = select i1 %.not7.i61, float %248, float %249, !dbg !33
  %250 = fadd float %.0.i60, -1.000000e+00, !dbg !33
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not9.i75 = icmp eq i32 %251, 0, !dbg !33
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i74, float %.0.i60, float %250) #3, !dbg !33
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i74, float %.0.i60, float %250) #3, !dbg !33
  %.02.i76 = select i1 %.not9.i75, float %253, float %252, !dbg !33
  %254 = fadd float %.02.i76, %.02.i76, !dbg !33
  %u.0.i77 = select i1 %146, float %254, float %.02.i76, !dbg !33
  %255 = fcmp ogt float %j.0.i58, 1.280000e+02, !dbg !33
  %u.1.i78 = select i1 %255, float 0x7FF0000000000000, float %u.0.i77, !dbg !33
  %256 = fcmp olt float %j.0.i58, -2.500000e+01, !dbg !33
  %u.2.i79 = select i1 %256, float -1.000000e+00, float %u.1.i78, !dbg !33
  %257 = fadd float %137, %137, !dbg !33
  %258 = extractelement <4 x i1> %157, i64 0, !dbg !33
  %u.3.i80 = select i1 %258, float %257, float %u.2.i79, !dbg !33
  %259 = select i1 %233, float %74, float %u.3.i, !dbg !35
  %260 = select i1 %232, float %95, float %u.3.i26, !dbg !35
  %261 = select i1 %231, float %116, float %u.3.i53, !dbg !35
  %262 = select i1 %230, float %137, float %u.3.i80, !dbg !35
  %263 = sext i32 %12 to i64, !dbg !36
  %264 = getelementptr float, ptr addrspace(1) %4, i64 %263, !dbg !36
  %265 = bitcast float %259 to i32, !dbg !37
  %266 = bitcast float %260 to i32, !dbg !37
  %267 = bitcast float %261 to i32, !dbg !37
  %268 = bitcast float %262 to i32, !dbg !37
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %265, i32 %266, i32 %267, i32 %268, ptr addrspace(1) %264, i1 true) #3, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ccyfg4si7yucdtlzdcpjwkhq725exht5irtzfovrisv4v3djbm2h.py", directory: "inductor_cache/cy")
!4 = !{ptr @triton_poi_fused_cat_elu_20, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_elu_20, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_elu_20", linkageName: "triton_poi_fused_cat_elu_20", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 31, column: 18, scope: !7)
!17 = !DILocation(line: 32, column: 34, scope: !7)
!18 = !DILocation(line: 32, column: 40, scope: !7)
!19 = !DILocation(line: 32, column: 30, scope: !7)
!20 = !DILocation(line: 32, column: 46, scope: !7)
!21 = !DILocation(line: 33, column: 30, scope: !7)
!22 = !DILocation(line: 33, column: 35, scope: !7)
!23 = !DILocation(line: 37, column: 20, scope: !7)
!24 = !DILocation(line: 40, column: 50, scope: !7)
!25 = !DILocation(line: 40, column: 41, scope: !7)
!26 = !DILocation(line: 40, column: 31, scope: !7)
!27 = !DILocation(line: 40, column: 56, scope: !7)
!28 = !DILocation(line: 41, column: 31, scope: !7)
!29 = !DILocation(line: 41, column: 45, scope: !7)
!30 = !DILocation(line: 34, column: 18, scope: !7)
!31 = !DILocation(line: 42, column: 20, scope: !7)
!32 = !DILocation(line: 0, scope: !7)
!33 = !DILocation(line: 50, column: 28, scope: !7)
!34 = !DILocation(line: 47, column: 20, scope: !7)
!35 = !DILocation(line: 52, column: 35, scope: !7)
!36 = !DILocation(line: 53, column: 25, scope: !7)
!37 = !DILocation(line: 53, column: 37, scope: !7)
!38 = !DILocation(line: 53, column: 4, scope: !7)
