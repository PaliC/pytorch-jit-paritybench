#loc = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":19:0)
#loc1 = loc(unknown)
#loc42 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":49:41)
#loc97 = loc(callsite(#loc1 at #loc42))
module {
  tt.func public @triton_red_fused_convolution_native_layer_norm_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<64x4xf32> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c96_i32 = arith.constant 96 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<9.99999997E-7> : tensor<64x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<9.600000e+01> : tensor<64x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x4xf32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<64x4xf32> loc(#loc1)
    %cst_5 = arith.constant dense<96> : tensor<64x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<96> : tensor<1x4xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_7 = arith.constant dense<256> : tensor<64x1xi32> loc(#loc1)
    %cst_8 = arith.constant dense<16> : tensor<64x1xi32> loc(#loc1)
    %cst_9 = arith.constant dense<1024> : tensor<64x1xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<64x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_9 : tensor<64x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<4xi32> -> tensor<1x4xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_8 : tensor<64x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_8 : tensor<64x1xi32> loc(#loc11)
    %11 = arith.remsi %10, %cst_8 : tensor<64x1xi32> loc(#loc12)
    %12 = arith.divsi %5, %cst_7 : tensor<64x1xi32> loc(#loc13)
    %13 = arith.muli %5, %cst_5 : tensor<64x1xi32> loc(#loc14)
    %14 = tt.broadcast %13 : tensor<64x1xi32> -> tensor<64x4xi32> loc(#loc15)
    %15 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x4x!tt.ptr<f32>> loc(#loc16)
    %16 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x4xi1> loc(#loc17)
    %17 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>> loc(#loc18)
    %18:3 = scf.for %arg9 = %c0_i32 to %c96_i32 step %c4_i32 iter_args(%arg10 = %cst_4, %arg11 = %cst_4, %arg12 = %cst_4) -> (tensor<64x4xf32>, tensor<64x4xf32>, tensor<64x4xf32>)  : i32 {
      %42 = tt.splat %arg9 : i32 -> tensor<1x4xi32> loc(#loc20)
      %43 = arith.addi %42, %8 : tensor<1x4xi32> loc(#loc20)
      %44 = arith.cmpi slt, %43, %cst_6 : tensor<1x4xi32> loc(#loc21)
      %45 = tt.broadcast %43 : tensor<1x4xi32> -> tensor<64x4xi32> loc(#loc15)
      %46 = arith.addi %45, %14 : tensor<64x4xi32> loc(#loc15)
      %47 = tt.addptr %15, %46 : tensor<64x4x!tt.ptr<f32>>, tensor<64x4xi32> loc(#loc16)
      %48 = tt.broadcast %44 : tensor<1x4xi1> -> tensor<64x4xi1> loc(#loc17)
      %49 = arith.andi %48, %16 : tensor<64x4xi1> loc(#loc17)
      %50 = tt.load %47, %49, %cst_4 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<f32>> loc(#loc22)
      %51 = tt.addptr %17, %43 : tensor<1x4x!tt.ptr<f32>>, tensor<1x4xi32> loc(#loc18)
      %52 = tt.load %51, %44, %cst_3 evictionPolicy = evict_last : tensor<1x4x!tt.ptr<f32>> loc(#loc23)
      %53 = tt.broadcast %52 : tensor<1x4xf32> -> tensor<64x4xf32> loc(#loc24)
      %54 = arith.addf %50, %53 : tensor<64x4xf32> loc(#loc24)
      %55 = arith.cmpi eq, %arg9, %c0_i32 : i32 loc(#loc25)
      %56:3 = scf.if %55 -> (tensor<64x4xf32>, tensor<64x4xf32>, tensor<64x4xf32>) {
        scf.yield %cst_4, %54, %cst_0 : tensor<64x4xf32>, tensor<64x4xf32>, tensor<64x4xf32> loc(#loc88)
      } else {
        %60 = arith.subf %54, %arg10 : tensor<64x4xf32> loc(#loc89)
        %61 = arith.addf %arg12, %cst_0 : tensor<64x4xf32> loc(#loc90)
        %62 = arith.divf %60, %61 : tensor<64x4xf32> loc(#loc91)
        %63 = arith.addf %arg10, %62 : tensor<64x4xf32> loc(#loc92)
        %64 = arith.subf %54, %63 : tensor<64x4xf32> loc(#loc93)
        %65 = arith.mulf %60, %64 : tensor<64x4xf32> loc(#loc94)
        %66 = arith.addf %arg11, %65 : tensor<64x4xf32> loc(#loc95)
        scf.yield %66, %63, %61 : tensor<64x4xf32>, tensor<64x4xf32>, tensor<64x4xf32> loc(#loc95)
      } loc(#loc87)
      %57 = arith.select %49, %56#1, %arg10 : tensor<64x4xi1>, tensor<64x4xf32> loc(#loc36)
      %58 = arith.select %49, %56#0, %arg11 : tensor<64x4xi1>, tensor<64x4xf32> loc(#loc37)
      %59 = arith.select %49, %56#2, %arg12 : tensor<64x4xi1>, tensor<64x4xf32> loc(#loc38)
      tt.store %47, %54, %49 : tensor<64x4x!tt.ptr<f32>> loc(#loc39)
      scf.yield %57, %58, %59 : tensor<64x4xf32>, tensor<64x4xf32>, tensor<64x4xf32> loc(#loc40)
    } loc(#loc19)
    %19:3 = "tt.reduce"(%18#0, %18#1, %18#2) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc42)), %arg10: f32 loc(callsite(#loc1 at #loc42)), %arg11: f32 loc(callsite(#loc1 at #loc42)), %arg12: f32 loc(callsite(#loc1 at #loc42)), %arg13: f32 loc(callsite(#loc1 at #loc42)), %arg14: f32 loc(callsite(#loc1 at #loc42))):
      %42 = arith.subf %arg12, %arg9 : f32 loc(#loc110)
      %43 = arith.addf %arg11, %arg14 : f32 loc(#loc111)
      %44 = arith.cmpf oeq, %43, %cst : f32 loc(#loc112)
      %45 = arith.divf %arg14, %43 : f32 loc(#loc113)
      %46 = arith.select %44, %cst, %45 : f32 loc(#loc114)
      %47 = arith.mulf %42, %46 : f32 loc(#loc115)
      %48 = arith.addf %arg9, %47 : f32 loc(#loc116)
      %49 = arith.addf %arg10, %arg13 : f32 loc(#loc117)
      %50 = arith.mulf %42, %42 : f32 loc(#loc118)
      %51 = arith.mulf %50, %arg11 : f32 loc(#loc119)
      %52 = arith.mulf %51, %46 : f32 loc(#loc120)
      %53 = arith.addf %49, %52 : f32 loc(#loc121)
      tt.reduce.return %48, %53, %43 : f32, f32, f32 loc(#loc96)
    }) : (tensor<64x4xf32>, tensor<64x4xf32>, tensor<64x4xf32>) -> (tensor<64xf32>, tensor<64xf32>, tensor<64xf32>) loc(#loc96)
    %20 = tt.expand_dims %19#0 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc55)
    %21 = tt.expand_dims %19#1 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc56)
    %22 = arith.muli %9, %cst_8 : tensor<64x1xi32> loc(#loc57)
    %23 = arith.addi %11, %22 : tensor<64x1xi32> loc(#loc58)
    %24 = arith.muli %12, %cst_7 : tensor<64x1xi32> loc(#loc59)
    %25 = arith.addi %23, %24 : tensor<64x1xi32> loc(#loc60)
    %26 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>> loc(#loc61)
    %27 = tt.addptr %26, %25 : tensor<64x1x!tt.ptr<f32>>, tensor<64x1xi32> loc(#loc61)
    tt.store %27, %20, %6 : tensor<64x1x!tt.ptr<f32>> loc(#loc62)
    %28 = arith.divf %21, %cst_2 : tensor<64x1xf32> loc(#loc63)
    %29 = arith.addf %28, %cst_1 : tensor<64x1xf32> loc(#loc64)
    %30 = tt.extern_elementwise %29 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<64x1xf32>) -> tensor<64x1xf32> loc(#loc65)
    %31 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>> loc(#loc66)
    %32 = tt.addptr %31, %25 : tensor<64x1x!tt.ptr<f32>>, tensor<64x1xi32> loc(#loc66)
    tt.store %32, %30, %6 : tensor<64x1x!tt.ptr<f32>> loc(#loc67)
    %33 = arith.muli %5, %cst_5 : tensor<64x1xi32> loc(#loc68)
    %34 = tt.broadcast %33 : tensor<64x1xi32> -> tensor<64x4xi32> loc(#loc69)
    %35 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x4x!tt.ptr<f32>> loc(#loc70)
    %36 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x4xi1> loc(#loc71)
    %37 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>> loc(#loc72)
    %38 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>> loc(#loc73)
    %39 = tt.broadcast %20 : tensor<64x1xf32> -> tensor<64x4xf32> loc(#loc74)
    %40 = tt.broadcast %30 : tensor<64x1xf32> -> tensor<64x4xf32> loc(#loc75)
    %41 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<64x4x!tt.ptr<f32>> loc(#loc76)
    scf.for %arg9 = %c0_i32 to %c96_i32 step %c4_i32  : i32 {
      %42 = tt.splat %arg9 : i32 -> tensor<1x4xi32> loc(#loc78)
      %43 = arith.addi %42, %8 : tensor<1x4xi32> loc(#loc78)
      %44 = arith.cmpi slt, %43, %cst_6 : tensor<1x4xi32> loc(#loc79)
      %45 = tt.broadcast %43 : tensor<1x4xi32> -> tensor<64x4xi32> loc(#loc69)
      %46 = arith.addi %45, %34 : tensor<64x4xi32> loc(#loc69)
      %47 = tt.addptr %35, %46 : tensor<64x4x!tt.ptr<f32>>, tensor<64x4xi32> loc(#loc70)
      %48 = tt.broadcast %44 : tensor<1x4xi1> -> tensor<64x4xi1> loc(#loc71)
      %49 = arith.andi %48, %36 : tensor<64x4xi1> loc(#loc71)
      %50 = tt.load %47, %49, %cst_4 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<f32>> loc(#loc80)
      %51 = tt.addptr %37, %43 : tensor<1x4x!tt.ptr<f32>>, tensor<1x4xi32> loc(#loc72)
      %52 = tt.load %51, %44, %cst_3 evictionPolicy = evict_last : tensor<1x4x!tt.ptr<f32>> loc(#loc81)
      %53 = tt.addptr %38, %43 : tensor<1x4x!tt.ptr<f32>>, tensor<1x4xi32> loc(#loc73)
      %54 = tt.load %53, %44, %cst_3 evictionPolicy = evict_last : tensor<1x4x!tt.ptr<f32>> loc(#loc82)
      %55 = arith.subf %50, %39 : tensor<64x4xf32> loc(#loc74)
      %56 = arith.mulf %55, %40 : tensor<64x4xf32> loc(#loc75)
      %57 = tt.broadcast %52 : tensor<1x4xf32> -> tensor<64x4xf32> loc(#loc83)
      %58 = arith.mulf %56, %57 : tensor<64x4xf32> loc(#loc83)
      %59 = tt.broadcast %54 : tensor<1x4xf32> -> tensor<64x4xf32> loc(#loc84)
      %60 = arith.addf %58, %59 : tensor<64x4xf32> loc(#loc84)
      %61 = tt.addptr %41, %46 : tensor<64x4x!tt.ptr<f32>>, tensor<64x4xi32> loc(#loc76)
      tt.store %61, %60, %49 : tensor<64x4x!tt.ptr<f32>> loc(#loc85)
    } loc(#loc77)
    tt.return loc(#loc86)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":22:28)
#loc3 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":22:33)
#loc4 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":23:36)
#loc5 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":23:44)
#loc6 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":23:23)
#loc7 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":24:21)
#loc8 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":25:25)
#loc9 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":25:33)
#loc10 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":30:19)
#loc11 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":31:21)
#loc12 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":31:27)
#loc13 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":32:19)
#loc14 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":37:46)
#loc15 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":37:43)
#loc16 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":37:38)
#loc17 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":37:59)
#loc18 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":38:34)
#loc19 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":33:36)
#loc20 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":34:27)
#loc21 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":35:25)
#loc22 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":37:51)
#loc23 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":38:39)
#loc24 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":39:22)
#loc25 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":42:62)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc27 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":42:51)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc36 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":44:60)
#loc37 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":45:56)
#loc38 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":46:64)
#loc39 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":47:51)
#loc40 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":47:8)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc55 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":51:20)
#loc56 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":52:20)
#loc57 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":54:33)
#loc58 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":54:30)
#loc59 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":54:42)
#loc60 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":54:38)
#loc61 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":54:25)
#loc62 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":54:53)
#loc63 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":56:18)
#loc64 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":58:19)
#loc65 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":59:28)
#loc66 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":60:25)
#loc67 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":60:54)
#loc68 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":65:47)
#loc69 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":65:44)
#loc70 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":65:39)
#loc71 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":65:60)
#loc72 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":66:35)
#loc73 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":67:35)
#loc74 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":68:24)
#loc75 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":69:24)
#loc76 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":72:29)
#loc77 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":61:36)
#loc78 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":62:27)
#loc79 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":63:25)
#loc80 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":65:52)
#loc81 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":66:40)
#loc82 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":67:40)
#loc83 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":70:24)
#loc84 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":71:24)
#loc85 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":72:49)
#loc86 = loc("inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py":61:4)
#loc87 = loc(callsite(#loc26 at #loc27))
#loc88 = loc(callsite(#loc28 at #loc27))
#loc89 = loc(callsite(#loc29 at #loc27))
#loc90 = loc(callsite(#loc30 at #loc27))
#loc91 = loc(callsite(#loc31 at #loc27))
#loc92 = loc(callsite(#loc32 at #loc27))
#loc93 = loc(callsite(#loc33 at #loc27))
#loc94 = loc(callsite(#loc34 at #loc27))
#loc95 = loc(callsite(#loc35 at #loc27))
#loc96 = loc(callsite(#loc41 at #loc42))
#loc98 = loc(callsite(#loc43 at #loc41))
#loc99 = loc(callsite(#loc44 at #loc41))
#loc100 = loc(callsite(#loc45 at #loc41))
#loc101 = loc(callsite(#loc46 at #loc41))
#loc102 = loc(callsite(#loc47 at #loc41))
#loc103 = loc(callsite(#loc48 at #loc41))
#loc104 = loc(callsite(#loc49 at #loc41))
#loc105 = loc(callsite(#loc50 at #loc41))
#loc106 = loc(callsite(#loc51 at #loc41))
#loc107 = loc(callsite(#loc52 at #loc41))
#loc108 = loc(callsite(#loc53 at #loc41))
#loc109 = loc(callsite(#loc54 at #loc41))
#loc110 = loc(callsite(#loc98 at #loc42))
#loc111 = loc(callsite(#loc99 at #loc42))
#loc112 = loc(callsite(#loc100 at #loc42))
#loc113 = loc(callsite(#loc101 at #loc42))
#loc114 = loc(callsite(#loc102 at #loc42))
#loc115 = loc(callsite(#loc103 at #loc42))
#loc116 = loc(callsite(#loc104 at #loc42))
#loc117 = loc(callsite(#loc105 at #loc42))
#loc118 = loc(callsite(#loc106 at #loc42))
#loc119 = loc(callsite(#loc107 at #loc42))
#loc120 = loc(callsite(#loc108 at #loc42))
#loc121 = loc(callsite(#loc109 at #loc42))
