; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_cos_div_mul_sin_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, i32 %10) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i329 = alloca [7 x i32], align 4
  %result.i.i.i.i274 = alloca [7 x i32], align 4
  %result.i.i.i.i219 = alloca [7 x i32], align 4
  %result.i.i.i.i166 = alloca [7 x i32], align 4
  %result.i.i.i.i111 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %13 = shl i32 %12, 7, !dbg !11
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %15 = and i32 %14, 127, !dbg !12
  %16 = or disjoint i32 %13, %15, !dbg !13
  %17 = icmp slt i32 %16, 256, !dbg !14
  %18 = sext i32 %16 to i64, !dbg !15
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !15
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %17) #4, !dbg !16
  %21 = bitcast i32 %20 to float, !dbg !16
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !17
  %22 = fmul float %21, 0x3FE45F3060000000, !dbg !17
  %23 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not.i = icmp eq i32 %23, 0, !dbg !17
  %24 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %22) #4, !dbg !17
  %25 = tail call i32 @llvm.nvvm.f2i.rn(float %22) #4, !dbg !17
  %.01.i = select i1 %.not.i, i32 %25, i32 %24, !dbg !17
  %26 = sitofp i32 %.01.i to float, !dbg !17
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not15.i = icmp eq i32 %27, 0, !dbg !17
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %26, float 0xBFF921FB40000000, float %21) #4, !dbg !17
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %26, float 0xBFF921FB40000000, float %21) #4, !dbg !17
  %.02.i = select i1 %.not15.i, float %29, float %28, !dbg !17
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not16.i = icmp eq i32 %30, 0, !dbg !17
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %26, float 0xBE74442D00000000, float %.02.i) #4, !dbg !17
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %26, float 0xBE74442D00000000, float %.02.i) #4, !dbg !17
  %.03.i = select i1 %.not16.i, float %32, float %31, !dbg !17
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not17.i = icmp eq i32 %33, 0, !dbg !17
  %34 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %26, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !17
  %35 = tail call float @llvm.nvvm.fma.rn.f(float %26, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !17
  %.04.i = select i1 %.not17.i, float %35, float %34, !dbg !17
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not18.i = icmp eq i32 %36, 0, !dbg !17
  %37 = tail call float @llvm.nvvm.fabs.ftz.f(float %21) #4, !dbg !17
  %38 = tail call float @llvm.nvvm.fabs.f(float %21) #4, !dbg !17
  %.06.i = select i1 %.not18.i, float %38, float %37, !dbg !17
  %39 = fcmp ult float %.06.i, 1.056150e+05, !dbg !17
  br i1 %39, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !17

__nv_isinff.exit.i.i.i:                           ; preds = %11
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not19.i = icmp eq i32 %40, 0, !dbg !17
  %.07.i = select i1 %.not19.i, float %38, float %37, !dbg !17
  %41 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !17
  br i1 %41, label %__nv_fmul_rn.exit.i.i.i, label %45, !dbg !17

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not27.i = icmp eq i32 %42, 0, !dbg !17
  %43 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %21, float 0.000000e+00) #4, !dbg !17
  %44 = tail call float @llvm.nvvm.mul.rn.f(float %21, float 0.000000e+00) #4, !dbg !17
  %.08.i = select i1 %.not27.i, float %44, float %43, !dbg !17
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !17

45:                                               ; preds = %__nv_isinff.exit.i.i.i
  %46 = lshr i32 %20, 23, !dbg !17
  %47 = and i32 %46, 224, !dbg !17
  %48 = add nsw i32 %47, -128, !dbg !17
  %49 = shl i32 %20, 8, !dbg !17
  %50 = or i32 %49, -2147483648, !dbg !17
  %51 = lshr exact i32 %48, 5, !dbg !17
  br label %52, !dbg !17

52:                                               ; preds = %45, %52
  %indvars.iv = phi i64 [ 0, %45 ], [ %indvars.iv.next, %52 ]
  %hi.i.i.i.0.i384 = phi i32 [ 0, %45 ], [ %57, %52 ]
  %53 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !17
  %54 = load i32, ptr addrspace(1) %53, align 4, !dbg !17
  %55 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %54, i32 %50, i32 %hi.i.i.i.0.i384) #5, !dbg !17, !srcloc !18
  %56 = extractvalue { i32, i32 } %55, 0, !dbg !17
  %57 = extractvalue { i32, i32 } %55, 1, !dbg !17
  %58 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !17
  store i32 %56, ptr %58, align 4, !dbg !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !17
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !17
  br i1 %exitcond.not, label %59, label %52, !dbg !17, !llvm.loop !19

59:                                               ; preds = %52
  %60 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !17
  store i32 %57, ptr %60, align 4, !dbg !17
  %61 = and i32 %46, 31, !dbg !17
  %62 = sub nsw i32 6, %51, !dbg !17
  %63 = sext i32 %62 to i64, !dbg !17
  %64 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %63, !dbg !17
  %65 = load i32, ptr %64, align 4, !dbg !17
  %66 = sub nsw i32 5, %51, !dbg !17
  %67 = sext i32 %66 to i64, !dbg !17
  %68 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %67, !dbg !17
  %69 = load i32, ptr %68, align 4, !dbg !17
  %.not20.i = icmp eq i32 %61, 0, !dbg !17
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %70, !dbg !17

70:                                               ; preds = %59
  %71 = sub nsw i32 4, %51, !dbg !17
  %72 = sub nuw nsw i32 32, %61, !dbg !17
  %73 = shl i32 %65, %61, !dbg !17
  %74 = lshr i32 %69, %72, !dbg !17
  %75 = add i32 %74, %73, !dbg !17
  %76 = shl i32 %69, %61, !dbg !17
  %77 = sext i32 %71 to i64, !dbg !17
  %78 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %77, !dbg !17
  %79 = load i32, ptr %78, align 4, !dbg !17
  %80 = lshr i32 %79, %72, !dbg !17
  %81 = add i32 %80, %76, !dbg !17
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !17

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %70, %59
  %hi.i.i.i.1.i = phi i32 [ %75, %70 ], [ %65, %59 ], !dbg !17
  %lo.i.i.i.0.i = phi i32 [ %81, %70 ], [ %69, %59 ], !dbg !17
  %82 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !17
  %83 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !17
  %84 = shl i32 %lo.i.i.i.0.i, 2, !dbg !17
  %85 = lshr i32 %83, 31, !dbg !17
  %86 = add nuw nsw i32 %85, %82, !dbg !17
  %87 = sub nsw i32 0, %86, !dbg !17
  %.not2123.i = icmp slt i32 %20, 0, !dbg !17
  %spec.select.i = select i1 %.not2123.i, i32 %87, i32 %86, !dbg !17
  %88 = xor i32 %83, %20, !dbg !17
  %.lobit.i = ashr i32 %83, 31, !dbg !17
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %83, !dbg !17
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %84, !dbg !17
  %89 = zext i32 %hi.i.i.i.2.i to i64, !dbg !17
  %90 = shl nuw i64 %89, 32, !dbg !17
  %91 = zext i32 %lo.i.i.i.1.i to i64, !dbg !17
  %92 = or disjoint i64 %90, %91, !dbg !17
  %93 = sitofp i64 %92 to double, !dbg !17
  %94 = fmul double %93, 0x3BF921FB54442D19, !dbg !17
  %95 = fptrunc double %94 to float, !dbg !17
  %96 = fneg float %95, !dbg !17
  %.not2526.i = icmp slt i32 %88, 0, !dbg !17
  %r.i.i.i.0.i = select i1 %.not2526.i, float %96, float %95, !dbg !17
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !17

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %11
  %i.i.1.i = phi i32 [ %.01.i, %11 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !17
  %t.i.i.1.i = phi float [ %.04.i, %11 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !17
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not28.i = icmp eq i32 %97, 0, !dbg !17
  %98 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !17
  %99 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !17
  %.011.i = select i1 %.not28.i, float %99, float %98, !dbg !17
  %100 = and i32 %i.i.1.i, 1, !dbg !17
  %.not29.i = icmp eq i32 %100, 0, !dbg !17
  %101 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !17
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not30.i = icmp eq i32 %102, 0, !dbg !17
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %101, float 0.000000e+00) #4, !dbg !17
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %101, float 0.000000e+00) #4, !dbg !17
  %.012.i = select i1 %.not30.i, float %104, float %103, !dbg !17
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !17

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not31.i = icmp eq i32 %105, 0, !dbg !17
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !17
  %107 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !17
  %.013.i = select i1 %.not31.i, float %107, float %106, !dbg !17
  br label %__internal_fmad.exit2.i.i.i, !dbg !17

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %108 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !17
  %109 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !17
  %110 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !17
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not32.i = icmp eq i32 %111, 0, !dbg !17
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %110, float %.011.i, float %109) #4, !dbg !17
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %110, float %.011.i, float %109) #4, !dbg !17
  %.010.i = select i1 %.not32.i, float %113, float %112, !dbg !17
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not33.i = icmp eq i32 %114, 0, !dbg !17
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %108) #4, !dbg !17
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %108) #4, !dbg !17
  %.09.i = select i1 %.not33.i, float %116, float %115, !dbg !17
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not34.i = icmp eq i32 %117, 0, !dbg !17
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %101) #4, !dbg !17
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %101) #4, !dbg !17
  %.05.i = select i1 %.not34.i, float %119, float %118, !dbg !17
  %120 = and i32 %i.i.1.i, 2, !dbg !17
  %.not35.i = icmp eq i32 %120, 0, !dbg !17
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !17

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not36.i = icmp eq i32 %121, 0, !dbg !17
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !17
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !17
  %.0.i = select i1 %.not36.i, float %123, float %122, !dbg !17
  br label %__nv_sinf.exit, !dbg !17

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !17
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !17
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !21
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not.i167 = icmp eq i32 %124, 0, !dbg !21
  %.01.i168 = select i1 %.not.i167, i32 %25, i32 %24, !dbg !21
  %125 = sitofp i32 %.01.i168 to float, !dbg !21
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not15.i169 = icmp eq i32 %126, 0, !dbg !21
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %125, float 0xBFF921FB40000000, float %21) #4, !dbg !21
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %125, float 0xBFF921FB40000000, float %21) #4, !dbg !21
  %.02.i170 = select i1 %.not15.i169, float %128, float %127, !dbg !21
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not16.i171 = icmp eq i32 %129, 0, !dbg !21
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %125, float 0xBE74442D00000000, float %.02.i170) #4, !dbg !21
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %125, float 0xBE74442D00000000, float %.02.i170) #4, !dbg !21
  %.03.i172 = select i1 %.not16.i171, float %131, float %130, !dbg !21
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not17.i173 = icmp eq i32 %132, 0, !dbg !21
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %125, float 0xBCF84698A0000000, float %.03.i172) #4, !dbg !21
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %125, float 0xBCF84698A0000000, float %.03.i172) #4, !dbg !21
  %.04.i174 = select i1 %.not17.i173, float %134, float %133, !dbg !21
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not18.i175 = icmp eq i32 %135, 0, !dbg !21
  %.06.i176 = select i1 %.not18.i175, float %38, float %37, !dbg !21
  %136 = fcmp ult float %.06.i176, 1.056150e+05, !dbg !21
  br i1 %136, label %__internal_trig_reduction_kernel.exit.i.i194, label %__nv_isinff.exit.i.i.i177, !dbg !21

__nv_isinff.exit.i.i.i177:                        ; preds = %__nv_sinf.exit
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not19.i178 = icmp eq i32 %137, 0, !dbg !21
  %.07.i179 = select i1 %.not19.i178, float %38, float %37, !dbg !21
  %138 = fcmp oeq float %.07.i179, 0x7FF0000000000000, !dbg !21
  br i1 %138, label %__nv_fmul_rn.exit.i.i.i216, label %142, !dbg !21

__nv_fmul_rn.exit.i.i.i216:                       ; preds = %__nv_isinff.exit.i.i.i177
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not27.i217 = icmp eq i32 %139, 0, !dbg !21
  %140 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %21, float 0.000000e+00) #4, !dbg !21
  %141 = tail call float @llvm.nvvm.mul.rn.f(float %21, float 0.000000e+00) #4, !dbg !21
  %.08.i218 = select i1 %.not27.i217, float %141, float %140, !dbg !21
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !21

142:                                              ; preds = %__nv_isinff.exit.i.i.i177
  %143 = lshr i32 %20, 23, !dbg !21
  %144 = and i32 %143, 224, !dbg !21
  %145 = add nsw i32 %144, -128, !dbg !21
  %146 = shl i32 %20, 8, !dbg !21
  %147 = or i32 %146, -2147483648, !dbg !21
  %148 = lshr exact i32 %145, 5, !dbg !21
  br label %149, !dbg !21

149:                                              ; preds = %142, %149
  %indvars.iv415 = phi i64 [ 0, %142 ], [ %indvars.iv.next416, %149 ]
  %hi.i.i.i.0.i180386 = phi i32 [ 0, %142 ], [ %154, %149 ]
  %150 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv415, !dbg !21
  %151 = load i32, ptr addrspace(1) %150, align 4, !dbg !21
  %152 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %151, i32 %147, i32 %hi.i.i.i.0.i180386) #5, !dbg !21, !srcloc !18
  %153 = extractvalue { i32, i32 } %152, 0, !dbg !21
  %154 = extractvalue { i32, i32 } %152, 1, !dbg !21
  %155 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %indvars.iv415, !dbg !21
  store i32 %153, ptr %155, align 4, !dbg !21
  %indvars.iv.next416 = add nuw nsw i64 %indvars.iv415, 1, !dbg !21
  %exitcond417.not = icmp eq i64 %indvars.iv.next416, 6, !dbg !21
  br i1 %exitcond417.not, label %156, label %149, !dbg !21, !llvm.loop !22

156:                                              ; preds = %149
  %157 = getelementptr inbounds i8, ptr %result.i.i.i.i166, i64 24, !dbg !21
  store i32 %154, ptr %157, align 4, !dbg !21
  %158 = and i32 %143, 31, !dbg !21
  %159 = sub nsw i32 6, %148, !dbg !21
  %160 = sext i32 %159 to i64, !dbg !21
  %161 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %160, !dbg !21
  %162 = load i32, ptr %161, align 4, !dbg !21
  %163 = sub nsw i32 5, %148, !dbg !21
  %164 = sext i32 %163 to i64, !dbg !21
  %165 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %164, !dbg !21
  %166 = load i32, ptr %165, align 4, !dbg !21
  %.not20.i182 = icmp eq i32 %158, 0, !dbg !21
  br i1 %.not20.i182, label %__internal_trig_reduction_slowpath.exit.i.i.i183, label %167, !dbg !21

167:                                              ; preds = %156
  %168 = sub nsw i32 4, %148, !dbg !21
  %169 = sub nuw nsw i32 32, %158, !dbg !21
  %170 = shl i32 %162, %158, !dbg !21
  %171 = lshr i32 %166, %169, !dbg !21
  %172 = add i32 %171, %170, !dbg !21
  %173 = shl i32 %166, %158, !dbg !21
  %174 = sext i32 %168 to i64, !dbg !21
  %175 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %174, !dbg !21
  %176 = load i32, ptr %175, align 4, !dbg !21
  %177 = lshr i32 %176, %169, !dbg !21
  %178 = add i32 %177, %173, !dbg !21
  br label %__internal_trig_reduction_slowpath.exit.i.i.i183, !dbg !21

__internal_trig_reduction_slowpath.exit.i.i.i183: ; preds = %167, %156
  %hi.i.i.i.1.i184 = phi i32 [ %172, %167 ], [ %162, %156 ], !dbg !21
  %lo.i.i.i.0.i185 = phi i32 [ %178, %167 ], [ %166, %156 ], !dbg !21
  %179 = lshr i32 %hi.i.i.i.1.i184, 30, !dbg !21
  %180 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i184, i32 %lo.i.i.i.0.i185, i32 2), !dbg !21
  %181 = shl i32 %lo.i.i.i.0.i185, 2, !dbg !21
  %182 = lshr i32 %180, 31, !dbg !21
  %183 = add nuw nsw i32 %182, %179, !dbg !21
  %184 = sub nsw i32 0, %183, !dbg !21
  %.not2123.i186 = icmp slt i32 %20, 0, !dbg !21
  %spec.select.i187 = select i1 %.not2123.i186, i32 %184, i32 %183, !dbg !21
  %185 = xor i32 %180, %20, !dbg !21
  %.lobit.i188 = ashr i32 %180, 31, !dbg !21
  %hi.i.i.i.2.i189 = xor i32 %.lobit.i188, %180, !dbg !21
  %lo.i.i.i.1.i191 = xor i32 %.lobit.i188, %181, !dbg !21
  %186 = zext i32 %hi.i.i.i.2.i189 to i64, !dbg !21
  %187 = shl nuw i64 %186, 32, !dbg !21
  %188 = zext i32 %lo.i.i.i.1.i191 to i64, !dbg !21
  %189 = or disjoint i64 %187, %188, !dbg !21
  %190 = sitofp i64 %189 to double, !dbg !21
  %191 = fmul double %190, 0x3BF921FB54442D19, !dbg !21
  %192 = fptrunc double %191 to float, !dbg !21
  %193 = fneg float %192, !dbg !21
  %.not2526.i192 = icmp slt i32 %185, 0, !dbg !21
  %r.i.i.i.0.i193 = select i1 %.not2526.i192, float %193, float %192, !dbg !21
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !21

__internal_trig_reduction_kernel.exit.i.i194:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i183, %__nv_fmul_rn.exit.i.i.i216, %__nv_sinf.exit
  %i.i.1.i195 = phi i32 [ %.01.i168, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i216 ], [ %spec.select.i187, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !21
  %t.i.i.1.i196 = phi float [ %.04.i174, %__nv_sinf.exit ], [ %.08.i218, %__nv_fmul_rn.exit.i.i.i216 ], [ %r.i.i.i.0.i193, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !21
  %194 = add i32 %i.i.1.i195, 1, !dbg !21
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not28.i197 = icmp eq i32 %195, 0, !dbg !21
  %196 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #4, !dbg !21
  %197 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #4, !dbg !21
  %.011.i198 = select i1 %.not28.i197, float %197, float %196, !dbg !21
  %198 = and i32 %i.i.1.i195, 1, !dbg !21
  %.not29.not.i = icmp eq i32 %198, 0, !dbg !21
  %199 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i196, !dbg !21
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not30.i199 = icmp eq i32 %200, 0, !dbg !21
  %201 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i198, float %199, float 0.000000e+00) #4, !dbg !21
  %202 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i198, float %199, float 0.000000e+00) #4, !dbg !21
  %.012.i200 = select i1 %.not30.i199, float %202, float %201, !dbg !21
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i213, label %__internal_fmad.exit2.i.i.i201, !dbg !21

__internal_fmad.exit1.i.i.i213:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i194
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not31.i214 = icmp eq i32 %203, 0, !dbg !21
  %204 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #4, !dbg !21
  %205 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #4, !dbg !21
  %.013.i215 = select i1 %.not31.i214, float %205, float %204, !dbg !21
  br label %__internal_fmad.exit2.i.i.i201, !dbg !21

__internal_fmad.exit2.i.i.i201:                   ; preds = %__internal_fmad.exit1.i.i.i213, %__internal_trig_reduction_kernel.exit.i.i194
  %206 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i213 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !21
  %207 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i213 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !21
  %208 = phi float [ %.013.i215, %__internal_fmad.exit1.i.i.i213 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !21
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not32.i202 = icmp eq i32 %209, 0, !dbg !21
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %208, float %.011.i198, float %207) #4, !dbg !21
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %208, float %.011.i198, float %207) #4, !dbg !21
  %.010.i203 = select i1 %.not32.i202, float %211, float %210, !dbg !21
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not33.i204 = icmp eq i32 %212, 0, !dbg !21
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i203, float %.011.i198, float %206) #4, !dbg !21
  %214 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i203, float %.011.i198, float %206) #4, !dbg !21
  %.09.i205 = select i1 %.not33.i204, float %214, float %213, !dbg !21
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not34.i206 = icmp eq i32 %215, 0, !dbg !21
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i205, float %.012.i200, float %199) #4, !dbg !21
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i205, float %.012.i200, float %199) #4, !dbg !21
  %.05.i207 = select i1 %.not34.i206, float %217, float %216, !dbg !21
  %218 = and i32 %194, 2, !dbg !21
  %.not35.i208 = icmp eq i32 %218, 0, !dbg !21
  br i1 %.not35.i208, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i209, !dbg !21

__internal_fmad.exit5.i.i.i209:                   ; preds = %__internal_fmad.exit2.i.i.i201
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not36.i210 = icmp eq i32 %219, 0, !dbg !21
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i207, float -1.000000e+00, float 0.000000e+00) #4, !dbg !21
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i207, float -1.000000e+00, float 0.000000e+00) #4, !dbg !21
  %.0.i211 = select i1 %.not36.i210, float %221, float %220, !dbg !21
  br label %__nv_cosf.exit, !dbg !21

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i201, %__internal_fmad.exit5.i.i.i209
  %z.i.i.0.i212 = phi float [ %.0.i211, %__internal_fmad.exit5.i.i.i209 ], [ %.05.i207, %__internal_fmad.exit2.i.i.i201 ], !dbg !21
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !21
  %222 = fmul float %21, 0x400428A300000000, !dbg !23
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !24
  %223 = fmul float %222, 0x3FE45F3060000000, !dbg !24
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !24
  %.not.i2 = icmp eq i32 %224, 0, !dbg !24
  %225 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %223) #4, !dbg !24
  %226 = tail call i32 @llvm.nvvm.f2i.rn(float %223) #4, !dbg !24
  %.01.i3 = select i1 %.not.i2, i32 %226, i32 %225, !dbg !24
  %227 = sitofp i32 %.01.i3 to float, !dbg !24
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !24
  %.not15.i4 = icmp eq i32 %228, 0, !dbg !24
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %227, float 0xBFF921FB40000000, float %222) #4, !dbg !24
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %227, float 0xBFF921FB40000000, float %222) #4, !dbg !24
  %.02.i5 = select i1 %.not15.i4, float %230, float %229, !dbg !24
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !24
  %.not16.i6 = icmp eq i32 %231, 0, !dbg !24
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %227, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !24
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %227, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !24
  %.03.i7 = select i1 %.not16.i6, float %233, float %232, !dbg !24
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !24
  %.not17.i8 = icmp eq i32 %234, 0, !dbg !24
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %227, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !24
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %227, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !24
  %.04.i9 = select i1 %.not17.i8, float %236, float %235, !dbg !24
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !24
  %.not18.i10 = icmp eq i32 %237, 0, !dbg !24
  %238 = tail call float @llvm.nvvm.fabs.ftz.f(float %222) #4, !dbg !24
  %239 = tail call float @llvm.nvvm.fabs.f(float %222) #4, !dbg !24
  %.06.i11 = select i1 %.not18.i10, float %239, float %238, !dbg !24
  %240 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !24
  br i1 %240, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !24

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_cosf.exit
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !24
  %.not19.i13 = icmp eq i32 %241, 0, !dbg !24
  %.07.i14 = select i1 %.not19.i13, float %239, float %238, !dbg !24
  %242 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !24
  br i1 %242, label %__nv_fmul_rn.exit.i.i.i52, label %246, !dbg !24

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !24
  %.not27.i53 = icmp eq i32 %243, 0, !dbg !24
  %244 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %222, float 0.000000e+00) #4, !dbg !24
  %245 = tail call float @llvm.nvvm.mul.rn.f(float %222, float 0.000000e+00) #4, !dbg !24
  %.08.i54 = select i1 %.not27.i53, float %245, float %244, !dbg !24
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !24

246:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %247 = bitcast float %222 to i32, !dbg !24
  %248 = lshr i32 %247, 23, !dbg !24
  %249 = and i32 %248, 224, !dbg !24
  %250 = add nsw i32 %249, -128, !dbg !24
  %251 = shl i32 %247, 8, !dbg !24
  %252 = or i32 %251, -2147483648, !dbg !24
  %253 = lshr exact i32 %250, 5, !dbg !24
  br label %254, !dbg !24

254:                                              ; preds = %246, %254
  %indvars.iv418 = phi i64 [ 0, %246 ], [ %indvars.iv.next419, %254 ]
  %hi.i.i.i.0.i15388 = phi i32 [ 0, %246 ], [ %259, %254 ]
  %255 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv418, !dbg !24
  %256 = load i32, ptr addrspace(1) %255, align 4, !dbg !24
  %257 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %256, i32 %252, i32 %hi.i.i.i.0.i15388) #5, !dbg !24, !srcloc !18
  %258 = extractvalue { i32, i32 } %257, 0, !dbg !24
  %259 = extractvalue { i32, i32 } %257, 1, !dbg !24
  %260 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv418, !dbg !24
  store i32 %258, ptr %260, align 4, !dbg !24
  %indvars.iv.next419 = add nuw nsw i64 %indvars.iv418, 1, !dbg !24
  %exitcond420.not = icmp eq i64 %indvars.iv.next419, 6, !dbg !24
  br i1 %exitcond420.not, label %261, label %254, !dbg !24, !llvm.loop !25

261:                                              ; preds = %254
  %262 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !24
  store i32 %259, ptr %262, align 4, !dbg !24
  %263 = and i32 %248, 31, !dbg !24
  %264 = sub nsw i32 6, %253, !dbg !24
  %265 = sext i32 %264 to i64, !dbg !24
  %266 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %265, !dbg !24
  %267 = load i32, ptr %266, align 4, !dbg !24
  %268 = sub nsw i32 5, %253, !dbg !24
  %269 = sext i32 %268 to i64, !dbg !24
  %270 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %269, !dbg !24
  %271 = load i32, ptr %270, align 4, !dbg !24
  %.not20.i17 = icmp eq i32 %263, 0, !dbg !24
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %272, !dbg !24

272:                                              ; preds = %261
  %273 = sub nsw i32 4, %253, !dbg !24
  %274 = sub nuw nsw i32 32, %263, !dbg !24
  %275 = shl i32 %267, %263, !dbg !24
  %276 = lshr i32 %271, %274, !dbg !24
  %277 = add i32 %276, %275, !dbg !24
  %278 = shl i32 %271, %263, !dbg !24
  %279 = sext i32 %273 to i64, !dbg !24
  %280 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %279, !dbg !24
  %281 = load i32, ptr %280, align 4, !dbg !24
  %282 = lshr i32 %281, %274, !dbg !24
  %283 = add i32 %282, %278, !dbg !24
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !24

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %272, %261
  %hi.i.i.i.1.i19 = phi i32 [ %277, %272 ], [ %267, %261 ], !dbg !24
  %lo.i.i.i.0.i20 = phi i32 [ %283, %272 ], [ %271, %261 ], !dbg !24
  %284 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !24
  %285 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !24
  %286 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !24
  %287 = lshr i32 %285, 31, !dbg !24
  %288 = add nuw nsw i32 %287, %284, !dbg !24
  %289 = sub nsw i32 0, %288, !dbg !24
  %.not2123.i21 = icmp slt i32 %247, 0, !dbg !24
  %spec.select.i22 = select i1 %.not2123.i21, i32 %289, i32 %288, !dbg !24
  %290 = xor i32 %285, %247, !dbg !24
  %.lobit.i23 = ashr i32 %285, 31, !dbg !24
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %285, !dbg !24
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %286, !dbg !24
  %291 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !24
  %292 = shl nuw i64 %291, 32, !dbg !24
  %293 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !24
  %294 = or disjoint i64 %292, %293, !dbg !24
  %295 = sitofp i64 %294 to double, !dbg !24
  %296 = fmul double %295, 0x3BF921FB54442D19, !dbg !24
  %297 = fptrunc double %296 to float, !dbg !24
  %298 = fneg float %297, !dbg !24
  %.not2526.i27 = icmp slt i32 %290, 0, !dbg !24
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %298, float %297, !dbg !24
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !24

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_cosf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !24
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_cosf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !24
  %299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !24
  %.not28.i32 = icmp eq i32 %299, 0, !dbg !24
  %300 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !24
  %301 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !24
  %.011.i33 = select i1 %.not28.i32, float %301, float %300, !dbg !24
  %302 = and i32 %i.i.1.i30, 1, !dbg !24
  %.not29.i34 = icmp eq i32 %302, 0, !dbg !24
  %303 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !24
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !24
  %.not30.i35 = icmp eq i32 %304, 0, !dbg !24
  %305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %303, float 0.000000e+00) #4, !dbg !24
  %306 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %303, float 0.000000e+00) #4, !dbg !24
  %.012.i36 = select i1 %.not30.i35, float %306, float %305, !dbg !24
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !24

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !24
  %.not31.i38 = icmp eq i32 %307, 0, !dbg !24
  %308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !24
  %309 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !24
  %.013.i39 = select i1 %.not31.i38, float %309, float %308, !dbg !24
  br label %__internal_fmad.exit2.i.i.i40, !dbg !24

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %310 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !24
  %311 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !24
  %312 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !24
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !24
  %.not32.i41 = icmp eq i32 %313, 0, !dbg !24
  %314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %312, float %.011.i33, float %311) #4, !dbg !24
  %315 = tail call float @llvm.nvvm.fma.rn.f(float %312, float %.011.i33, float %311) #4, !dbg !24
  %.010.i42 = select i1 %.not32.i41, float %315, float %314, !dbg !24
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !24
  %.not33.i43 = icmp eq i32 %316, 0, !dbg !24
  %317 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %310) #4, !dbg !24
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %310) #4, !dbg !24
  %.09.i44 = select i1 %.not33.i43, float %318, float %317, !dbg !24
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !24
  %.not34.i45 = icmp eq i32 %319, 0, !dbg !24
  %320 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %303) #4, !dbg !24
  %321 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %303) #4, !dbg !24
  %.05.i46 = select i1 %.not34.i45, float %321, float %320, !dbg !24
  %322 = and i32 %i.i.1.i30, 2, !dbg !24
  %.not35.i47 = icmp eq i32 %322, 0, !dbg !24
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !24

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !24
  %.not36.i49 = icmp eq i32 %323, 0, !dbg !24
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !24
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !24
  %.0.i50 = select i1 %.not36.i49, float %325, float %324, !dbg !24
  br label %__nv_sinf.exit55, !dbg !24

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !24
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !24
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i219), !dbg !26
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i220 = icmp eq i32 %326, 0, !dbg !26
  %.01.i221 = select i1 %.not.i220, i32 %226, i32 %225, !dbg !26
  %327 = sitofp i32 %.01.i221 to float, !dbg !26
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not15.i222 = icmp eq i32 %328, 0, !dbg !26
  %329 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %327, float 0xBFF921FB40000000, float %222) #4, !dbg !26
  %330 = tail call float @llvm.nvvm.fma.rn.f(float %327, float 0xBFF921FB40000000, float %222) #4, !dbg !26
  %.02.i223 = select i1 %.not15.i222, float %330, float %329, !dbg !26
  %331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not16.i224 = icmp eq i32 %331, 0, !dbg !26
  %332 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %327, float 0xBE74442D00000000, float %.02.i223) #4, !dbg !26
  %333 = tail call float @llvm.nvvm.fma.rn.f(float %327, float 0xBE74442D00000000, float %.02.i223) #4, !dbg !26
  %.03.i225 = select i1 %.not16.i224, float %333, float %332, !dbg !26
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not17.i226 = icmp eq i32 %334, 0, !dbg !26
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %327, float 0xBCF84698A0000000, float %.03.i225) #4, !dbg !26
  %336 = tail call float @llvm.nvvm.fma.rn.f(float %327, float 0xBCF84698A0000000, float %.03.i225) #4, !dbg !26
  %.04.i227 = select i1 %.not17.i226, float %336, float %335, !dbg !26
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not18.i228 = icmp eq i32 %337, 0, !dbg !26
  %.06.i229 = select i1 %.not18.i228, float %239, float %238, !dbg !26
  %338 = fcmp ult float %.06.i229, 1.056150e+05, !dbg !26
  br i1 %338, label %__internal_trig_reduction_kernel.exit.i.i247, label %__nv_isinff.exit.i.i.i230, !dbg !26

__nv_isinff.exit.i.i.i230:                        ; preds = %__nv_sinf.exit55
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not19.i231 = icmp eq i32 %339, 0, !dbg !26
  %.07.i232 = select i1 %.not19.i231, float %239, float %238, !dbg !26
  %340 = fcmp oeq float %.07.i232, 0x7FF0000000000000, !dbg !26
  br i1 %340, label %__nv_fmul_rn.exit.i.i.i270, label %344, !dbg !26

__nv_fmul_rn.exit.i.i.i270:                       ; preds = %__nv_isinff.exit.i.i.i230
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not27.i271 = icmp eq i32 %341, 0, !dbg !26
  %342 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %222, float 0.000000e+00) #4, !dbg !26
  %343 = tail call float @llvm.nvvm.mul.rn.f(float %222, float 0.000000e+00) #4, !dbg !26
  %.08.i272 = select i1 %.not27.i271, float %343, float %342, !dbg !26
  br label %__internal_trig_reduction_kernel.exit.i.i247, !dbg !26

344:                                              ; preds = %__nv_isinff.exit.i.i.i230
  %345 = bitcast float %222 to i32, !dbg !26
  %346 = lshr i32 %345, 23, !dbg !26
  %347 = and i32 %346, 224, !dbg !26
  %348 = add nsw i32 %347, -128, !dbg !26
  %349 = shl i32 %345, 8, !dbg !26
  %350 = or i32 %349, -2147483648, !dbg !26
  %351 = lshr exact i32 %348, 5, !dbg !26
  br label %352, !dbg !26

352:                                              ; preds = %344, %352
  %indvars.iv421 = phi i64 [ 0, %344 ], [ %indvars.iv.next422, %352 ]
  %hi.i.i.i.0.i233390 = phi i32 [ 0, %344 ], [ %357, %352 ]
  %353 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv421, !dbg !26
  %354 = load i32, ptr addrspace(1) %353, align 4, !dbg !26
  %355 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %354, i32 %350, i32 %hi.i.i.i.0.i233390) #5, !dbg !26, !srcloc !18
  %356 = extractvalue { i32, i32 } %355, 0, !dbg !26
  %357 = extractvalue { i32, i32 } %355, 1, !dbg !26
  %358 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i219, i64 0, i64 %indvars.iv421, !dbg !26
  store i32 %356, ptr %358, align 4, !dbg !26
  %indvars.iv.next422 = add nuw nsw i64 %indvars.iv421, 1, !dbg !26
  %exitcond423.not = icmp eq i64 %indvars.iv.next422, 6, !dbg !26
  br i1 %exitcond423.not, label %359, label %352, !dbg !26, !llvm.loop !27

359:                                              ; preds = %352
  %360 = getelementptr inbounds i8, ptr %result.i.i.i.i219, i64 24, !dbg !26
  store i32 %357, ptr %360, align 4, !dbg !26
  %361 = and i32 %346, 31, !dbg !26
  %362 = sub nsw i32 6, %351, !dbg !26
  %363 = sext i32 %362 to i64, !dbg !26
  %364 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i219, i64 0, i64 %363, !dbg !26
  %365 = load i32, ptr %364, align 4, !dbg !26
  %366 = sub nsw i32 5, %351, !dbg !26
  %367 = sext i32 %366 to i64, !dbg !26
  %368 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i219, i64 0, i64 %367, !dbg !26
  %369 = load i32, ptr %368, align 4, !dbg !26
  %.not20.i235 = icmp eq i32 %361, 0, !dbg !26
  br i1 %.not20.i235, label %__internal_trig_reduction_slowpath.exit.i.i.i236, label %370, !dbg !26

370:                                              ; preds = %359
  %371 = sub nsw i32 4, %351, !dbg !26
  %372 = sub nuw nsw i32 32, %361, !dbg !26
  %373 = shl i32 %365, %361, !dbg !26
  %374 = lshr i32 %369, %372, !dbg !26
  %375 = add i32 %374, %373, !dbg !26
  %376 = shl i32 %369, %361, !dbg !26
  %377 = sext i32 %371 to i64, !dbg !26
  %378 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i219, i64 0, i64 %377, !dbg !26
  %379 = load i32, ptr %378, align 4, !dbg !26
  %380 = lshr i32 %379, %372, !dbg !26
  %381 = add i32 %380, %376, !dbg !26
  br label %__internal_trig_reduction_slowpath.exit.i.i.i236, !dbg !26

__internal_trig_reduction_slowpath.exit.i.i.i236: ; preds = %370, %359
  %hi.i.i.i.1.i237 = phi i32 [ %375, %370 ], [ %365, %359 ], !dbg !26
  %lo.i.i.i.0.i238 = phi i32 [ %381, %370 ], [ %369, %359 ], !dbg !26
  %382 = lshr i32 %hi.i.i.i.1.i237, 30, !dbg !26
  %383 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i237, i32 %lo.i.i.i.0.i238, i32 2), !dbg !26
  %384 = shl i32 %lo.i.i.i.0.i238, 2, !dbg !26
  %385 = lshr i32 %383, 31, !dbg !26
  %386 = add nuw nsw i32 %385, %382, !dbg !26
  %387 = sub nsw i32 0, %386, !dbg !26
  %.not2123.i239 = icmp slt i32 %345, 0, !dbg !26
  %spec.select.i240 = select i1 %.not2123.i239, i32 %387, i32 %386, !dbg !26
  %388 = xor i32 %383, %345, !dbg !26
  %.lobit.i241 = ashr i32 %383, 31, !dbg !26
  %hi.i.i.i.2.i242 = xor i32 %.lobit.i241, %383, !dbg !26
  %lo.i.i.i.1.i244 = xor i32 %.lobit.i241, %384, !dbg !26
  %389 = zext i32 %hi.i.i.i.2.i242 to i64, !dbg !26
  %390 = shl nuw i64 %389, 32, !dbg !26
  %391 = zext i32 %lo.i.i.i.1.i244 to i64, !dbg !26
  %392 = or disjoint i64 %390, %391, !dbg !26
  %393 = sitofp i64 %392 to double, !dbg !26
  %394 = fmul double %393, 0x3BF921FB54442D19, !dbg !26
  %395 = fptrunc double %394 to float, !dbg !26
  %396 = fneg float %395, !dbg !26
  %.not2526.i245 = icmp slt i32 %388, 0, !dbg !26
  %r.i.i.i.0.i246 = select i1 %.not2526.i245, float %396, float %395, !dbg !26
  br label %__internal_trig_reduction_kernel.exit.i.i247, !dbg !26

__internal_trig_reduction_kernel.exit.i.i247:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i236, %__nv_fmul_rn.exit.i.i.i270, %__nv_sinf.exit55
  %i.i.1.i248 = phi i32 [ %.01.i221, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i270 ], [ %spec.select.i240, %__internal_trig_reduction_slowpath.exit.i.i.i236 ], !dbg !26
  %t.i.i.1.i249 = phi float [ %.04.i227, %__nv_sinf.exit55 ], [ %.08.i272, %__nv_fmul_rn.exit.i.i.i270 ], [ %r.i.i.i.0.i246, %__internal_trig_reduction_slowpath.exit.i.i.i236 ], !dbg !26
  %397 = add i32 %i.i.1.i248, 1, !dbg !26
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not28.i250 = icmp eq i32 %398, 0, !dbg !26
  %399 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i249, float %t.i.i.1.i249) #4, !dbg !26
  %400 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i249, float %t.i.i.1.i249) #4, !dbg !26
  %.011.i251 = select i1 %.not28.i250, float %400, float %399, !dbg !26
  %401 = and i32 %i.i.1.i248, 1, !dbg !26
  %.not29.not.i252 = icmp eq i32 %401, 0, !dbg !26
  %402 = select i1 %.not29.not.i252, float 1.000000e+00, float %t.i.i.1.i249, !dbg !26
  %403 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not30.i253 = icmp eq i32 %403, 0, !dbg !26
  %404 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i251, float %402, float 0.000000e+00) #4, !dbg !26
  %405 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i251, float %402, float 0.000000e+00) #4, !dbg !26
  %.012.i254 = select i1 %.not30.i253, float %405, float %404, !dbg !26
  br i1 %.not29.not.i252, label %__internal_fmad.exit1.i.i.i267, label %__internal_fmad.exit2.i.i.i255, !dbg !26

__internal_fmad.exit1.i.i.i267:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i247
  %406 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not31.i268 = icmp eq i32 %406, 0, !dbg !26
  %407 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i251, float 0xBF56C0FDA0000000) #4, !dbg !26
  %408 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i251, float 0xBF56C0FDA0000000) #4, !dbg !26
  %.013.i269 = select i1 %.not31.i268, float %408, float %407, !dbg !26
  br label %__internal_fmad.exit2.i.i.i255, !dbg !26

__internal_fmad.exit2.i.i.i255:                   ; preds = %__internal_fmad.exit1.i.i.i267, %__internal_trig_reduction_kernel.exit.i.i247
  %409 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i267 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i247 ], !dbg !26
  %410 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i267 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i247 ], !dbg !26
  %411 = phi float [ %.013.i269, %__internal_fmad.exit1.i.i.i267 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i247 ], !dbg !26
  %412 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not32.i256 = icmp eq i32 %412, 0, !dbg !26
  %413 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %411, float %.011.i251, float %410) #4, !dbg !26
  %414 = tail call float @llvm.nvvm.fma.rn.f(float %411, float %.011.i251, float %410) #4, !dbg !26
  %.010.i257 = select i1 %.not32.i256, float %414, float %413, !dbg !26
  %415 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not33.i258 = icmp eq i32 %415, 0, !dbg !26
  %416 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i257, float %.011.i251, float %409) #4, !dbg !26
  %417 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i257, float %.011.i251, float %409) #4, !dbg !26
  %.09.i259 = select i1 %.not33.i258, float %417, float %416, !dbg !26
  %418 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not34.i260 = icmp eq i32 %418, 0, !dbg !26
  %419 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i259, float %.012.i254, float %402) #4, !dbg !26
  %420 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i259, float %.012.i254, float %402) #4, !dbg !26
  %.05.i261 = select i1 %.not34.i260, float %420, float %419, !dbg !26
  %421 = and i32 %397, 2, !dbg !26
  %.not35.i262 = icmp eq i32 %421, 0, !dbg !26
  br i1 %.not35.i262, label %__nv_cosf.exit273, label %__internal_fmad.exit5.i.i.i263, !dbg !26

__internal_fmad.exit5.i.i.i263:                   ; preds = %__internal_fmad.exit2.i.i.i255
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not36.i264 = icmp eq i32 %422, 0, !dbg !26
  %423 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i261, float -1.000000e+00, float 0.000000e+00) #4, !dbg !26
  %424 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i261, float -1.000000e+00, float 0.000000e+00) #4, !dbg !26
  %.0.i265 = select i1 %.not36.i264, float %424, float %423, !dbg !26
  br label %__nv_cosf.exit273, !dbg !26

__nv_cosf.exit273:                                ; preds = %__internal_fmad.exit2.i.i.i255, %__internal_fmad.exit5.i.i.i263
  %z.i.i.0.i266 = phi float [ %.0.i265, %__internal_fmad.exit5.i.i.i263 ], [ %.05.i261, %__internal_fmad.exit2.i.i.i255 ], !dbg !26
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i219), !dbg !26
  %425 = fmul float %21, 0x401965FE80000000, !dbg !28
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !29
  %426 = fmul float %425, 0x3FE45F3060000000, !dbg !29
  %427 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i57 = icmp eq i32 %427, 0, !dbg !29
  %428 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %426) #4, !dbg !29
  %429 = tail call i32 @llvm.nvvm.f2i.rn(float %426) #4, !dbg !29
  %.01.i58 = select i1 %.not.i57, i32 %429, i32 %428, !dbg !29
  %430 = sitofp i32 %.01.i58 to float, !dbg !29
  %431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not15.i59 = icmp eq i32 %431, 0, !dbg !29
  %432 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %430, float 0xBFF921FB40000000, float %425) #4, !dbg !29
  %433 = tail call float @llvm.nvvm.fma.rn.f(float %430, float 0xBFF921FB40000000, float %425) #4, !dbg !29
  %.02.i60 = select i1 %.not15.i59, float %433, float %432, !dbg !29
  %434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not16.i61 = icmp eq i32 %434, 0, !dbg !29
  %435 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %430, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !29
  %436 = tail call float @llvm.nvvm.fma.rn.f(float %430, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !29
  %.03.i62 = select i1 %.not16.i61, float %436, float %435, !dbg !29
  %437 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not17.i63 = icmp eq i32 %437, 0, !dbg !29
  %438 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %430, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !29
  %439 = tail call float @llvm.nvvm.fma.rn.f(float %430, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !29
  %.04.i64 = select i1 %.not17.i63, float %439, float %438, !dbg !29
  %440 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not18.i65 = icmp eq i32 %440, 0, !dbg !29
  %441 = tail call float @llvm.nvvm.fabs.ftz.f(float %425) #4, !dbg !29
  %442 = tail call float @llvm.nvvm.fabs.f(float %425) #4, !dbg !29
  %.06.i66 = select i1 %.not18.i65, float %442, float %441, !dbg !29
  %443 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !29
  br i1 %443, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !29

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_cosf.exit273
  %444 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not19.i68 = icmp eq i32 %444, 0, !dbg !29
  %.07.i69 = select i1 %.not19.i68, float %442, float %441, !dbg !29
  %445 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !29
  br i1 %445, label %__nv_fmul_rn.exit.i.i.i107, label %449, !dbg !29

__nv_fmul_rn.exit.i.i.i107:                       ; preds = %__nv_isinff.exit.i.i.i67
  %446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not27.i108 = icmp eq i32 %446, 0, !dbg !29
  %447 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %425, float 0.000000e+00) #4, !dbg !29
  %448 = tail call float @llvm.nvvm.mul.rn.f(float %425, float 0.000000e+00) #4, !dbg !29
  %.08.i109 = select i1 %.not27.i108, float %448, float %447, !dbg !29
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !29

449:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %450 = bitcast float %425 to i32, !dbg !29
  %451 = lshr i32 %450, 23, !dbg !29
  %452 = and i32 %451, 224, !dbg !29
  %453 = add nsw i32 %452, -128, !dbg !29
  %454 = shl i32 %450, 8, !dbg !29
  %455 = or i32 %454, -2147483648, !dbg !29
  %456 = lshr exact i32 %453, 5, !dbg !29
  br label %457, !dbg !29

457:                                              ; preds = %449, %457
  %indvars.iv424 = phi i64 [ 0, %449 ], [ %indvars.iv.next425, %457 ]
  %hi.i.i.i.0.i70392 = phi i32 [ 0, %449 ], [ %462, %457 ]
  %458 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv424, !dbg !29
  %459 = load i32, ptr addrspace(1) %458, align 4, !dbg !29
  %460 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %459, i32 %455, i32 %hi.i.i.i.0.i70392) #5, !dbg !29, !srcloc !18
  %461 = extractvalue { i32, i32 } %460, 0, !dbg !29
  %462 = extractvalue { i32, i32 } %460, 1, !dbg !29
  %463 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv424, !dbg !29
  store i32 %461, ptr %463, align 4, !dbg !29
  %indvars.iv.next425 = add nuw nsw i64 %indvars.iv424, 1, !dbg !29
  %exitcond426.not = icmp eq i64 %indvars.iv.next425, 6, !dbg !29
  br i1 %exitcond426.not, label %464, label %457, !dbg !29, !llvm.loop !30

464:                                              ; preds = %457
  %465 = getelementptr inbounds i8, ptr %result.i.i.i.i56, i64 24, !dbg !29
  store i32 %462, ptr %465, align 4, !dbg !29
  %466 = and i32 %451, 31, !dbg !29
  %467 = sub nsw i32 6, %456, !dbg !29
  %468 = sext i32 %467 to i64, !dbg !29
  %469 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %468, !dbg !29
  %470 = load i32, ptr %469, align 4, !dbg !29
  %471 = sub nsw i32 5, %456, !dbg !29
  %472 = sext i32 %471 to i64, !dbg !29
  %473 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %472, !dbg !29
  %474 = load i32, ptr %473, align 4, !dbg !29
  %.not20.i72 = icmp eq i32 %466, 0, !dbg !29
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %475, !dbg !29

475:                                              ; preds = %464
  %476 = sub nsw i32 4, %456, !dbg !29
  %477 = sub nuw nsw i32 32, %466, !dbg !29
  %478 = shl i32 %470, %466, !dbg !29
  %479 = lshr i32 %474, %477, !dbg !29
  %480 = add i32 %479, %478, !dbg !29
  %481 = shl i32 %474, %466, !dbg !29
  %482 = sext i32 %476 to i64, !dbg !29
  %483 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %482, !dbg !29
  %484 = load i32, ptr %483, align 4, !dbg !29
  %485 = lshr i32 %484, %477, !dbg !29
  %486 = add i32 %485, %481, !dbg !29
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !29

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %475, %464
  %hi.i.i.i.1.i74 = phi i32 [ %480, %475 ], [ %470, %464 ], !dbg !29
  %lo.i.i.i.0.i75 = phi i32 [ %486, %475 ], [ %474, %464 ], !dbg !29
  %487 = lshr i32 %hi.i.i.i.1.i74, 30, !dbg !29
  %488 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i74, i32 %lo.i.i.i.0.i75, i32 2), !dbg !29
  %489 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !29
  %490 = lshr i32 %488, 31, !dbg !29
  %491 = add nuw nsw i32 %490, %487, !dbg !29
  %492 = sub nsw i32 0, %491, !dbg !29
  %.not2123.i76 = icmp slt i32 %450, 0, !dbg !29
  %spec.select.i77 = select i1 %.not2123.i76, i32 %492, i32 %491, !dbg !29
  %493 = xor i32 %488, %450, !dbg !29
  %.lobit.i78 = ashr i32 %488, 31, !dbg !29
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %488, !dbg !29
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %489, !dbg !29
  %494 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !29
  %495 = shl nuw i64 %494, 32, !dbg !29
  %496 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !29
  %497 = or disjoint i64 %495, %496, !dbg !29
  %498 = sitofp i64 %497 to double, !dbg !29
  %499 = fmul double %498, 0x3BF921FB54442D19, !dbg !29
  %500 = fptrunc double %499 to float, !dbg !29
  %501 = fneg float %500, !dbg !29
  %.not2526.i82 = icmp slt i32 %493, 0, !dbg !29
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %501, float %500, !dbg !29
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !29

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i107, %__nv_cosf.exit273
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_cosf.exit273 ], [ 0, %__nv_fmul_rn.exit.i.i.i107 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !29
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_cosf.exit273 ], [ %.08.i109, %__nv_fmul_rn.exit.i.i.i107 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !29
  %502 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not28.i87 = icmp eq i32 %502, 0, !dbg !29
  %503 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !29
  %504 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !29
  %.011.i88 = select i1 %.not28.i87, float %504, float %503, !dbg !29
  %505 = and i32 %i.i.1.i85, 1, !dbg !29
  %.not29.i89 = icmp eq i32 %505, 0, !dbg !29
  %506 = select i1 %.not29.i89, float %t.i.i.1.i86, float 1.000000e+00, !dbg !29
  %507 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not30.i90 = icmp eq i32 %507, 0, !dbg !29
  %508 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %506, float 0.000000e+00) #4, !dbg !29
  %509 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %506, float 0.000000e+00) #4, !dbg !29
  %.012.i91 = select i1 %.not30.i90, float %509, float %508, !dbg !29
  br i1 %.not29.i89, label %__internal_fmad.exit2.i.i.i95, label %__internal_fmad.exit1.i.i.i92, !dbg !29

__internal_fmad.exit1.i.i.i92:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %510 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not31.i93 = icmp eq i32 %510, 0, !dbg !29
  %511 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !29
  %512 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !29
  %.013.i94 = select i1 %.not31.i93, float %512, float %511, !dbg !29
  br label %__internal_fmad.exit2.i.i.i95, !dbg !29

__internal_fmad.exit2.i.i.i95:                    ; preds = %__internal_fmad.exit1.i.i.i92, %__internal_trig_reduction_kernel.exit.i.i84
  %513 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i92 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !29
  %514 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i92 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !29
  %515 = phi float [ %.013.i94, %__internal_fmad.exit1.i.i.i92 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !29
  %516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not32.i96 = icmp eq i32 %516, 0, !dbg !29
  %517 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %515, float %.011.i88, float %514) #4, !dbg !29
  %518 = tail call float @llvm.nvvm.fma.rn.f(float %515, float %.011.i88, float %514) #4, !dbg !29
  %.010.i97 = select i1 %.not32.i96, float %518, float %517, !dbg !29
  %519 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not33.i98 = icmp eq i32 %519, 0, !dbg !29
  %520 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i97, float %.011.i88, float %513) #4, !dbg !29
  %521 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i97, float %.011.i88, float %513) #4, !dbg !29
  %.09.i99 = select i1 %.not33.i98, float %521, float %520, !dbg !29
  %522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not34.i100 = icmp eq i32 %522, 0, !dbg !29
  %523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i99, float %.012.i91, float %506) #4, !dbg !29
  %524 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i99, float %.012.i91, float %506) #4, !dbg !29
  %.05.i101 = select i1 %.not34.i100, float %524, float %523, !dbg !29
  %525 = and i32 %i.i.1.i85, 2, !dbg !29
  %.not35.i102 = icmp eq i32 %525, 0, !dbg !29
  br i1 %.not35.i102, label %__nv_sinf.exit110, label %__internal_fmad.exit5.i.i.i103, !dbg !29

__internal_fmad.exit5.i.i.i103:                   ; preds = %__internal_fmad.exit2.i.i.i95
  %526 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not36.i104 = icmp eq i32 %526, 0, !dbg !29
  %527 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #4, !dbg !29
  %528 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #4, !dbg !29
  %.0.i105 = select i1 %.not36.i104, float %528, float %527, !dbg !29
  br label %__nv_sinf.exit110, !dbg !29

__nv_sinf.exit110:                                ; preds = %__internal_fmad.exit2.i.i.i95, %__internal_fmad.exit5.i.i.i103
  %z.i.i.0.i106 = phi float [ %.0.i105, %__internal_fmad.exit5.i.i.i103 ], [ %.05.i101, %__internal_fmad.exit2.i.i.i95 ], !dbg !29
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !29
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i274), !dbg !31
  %529 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not.i275 = icmp eq i32 %529, 0, !dbg !31
  %.01.i276 = select i1 %.not.i275, i32 %429, i32 %428, !dbg !31
  %530 = sitofp i32 %.01.i276 to float, !dbg !31
  %531 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not15.i277 = icmp eq i32 %531, 0, !dbg !31
  %532 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %530, float 0xBFF921FB40000000, float %425) #4, !dbg !31
  %533 = tail call float @llvm.nvvm.fma.rn.f(float %530, float 0xBFF921FB40000000, float %425) #4, !dbg !31
  %.02.i278 = select i1 %.not15.i277, float %533, float %532, !dbg !31
  %534 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not16.i279 = icmp eq i32 %534, 0, !dbg !31
  %535 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %530, float 0xBE74442D00000000, float %.02.i278) #4, !dbg !31
  %536 = tail call float @llvm.nvvm.fma.rn.f(float %530, float 0xBE74442D00000000, float %.02.i278) #4, !dbg !31
  %.03.i280 = select i1 %.not16.i279, float %536, float %535, !dbg !31
  %537 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not17.i281 = icmp eq i32 %537, 0, !dbg !31
  %538 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %530, float 0xBCF84698A0000000, float %.03.i280) #4, !dbg !31
  %539 = tail call float @llvm.nvvm.fma.rn.f(float %530, float 0xBCF84698A0000000, float %.03.i280) #4, !dbg !31
  %.04.i282 = select i1 %.not17.i281, float %539, float %538, !dbg !31
  %540 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not18.i283 = icmp eq i32 %540, 0, !dbg !31
  %.06.i284 = select i1 %.not18.i283, float %442, float %441, !dbg !31
  %541 = fcmp ult float %.06.i284, 1.056150e+05, !dbg !31
  br i1 %541, label %__internal_trig_reduction_kernel.exit.i.i302, label %__nv_isinff.exit.i.i.i285, !dbg !31

__nv_isinff.exit.i.i.i285:                        ; preds = %__nv_sinf.exit110
  %542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not19.i286 = icmp eq i32 %542, 0, !dbg !31
  %.07.i287 = select i1 %.not19.i286, float %442, float %441, !dbg !31
  %543 = fcmp oeq float %.07.i287, 0x7FF0000000000000, !dbg !31
  br i1 %543, label %__nv_fmul_rn.exit.i.i.i325, label %547, !dbg !31

__nv_fmul_rn.exit.i.i.i325:                       ; preds = %__nv_isinff.exit.i.i.i285
  %544 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not27.i326 = icmp eq i32 %544, 0, !dbg !31
  %545 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %425, float 0.000000e+00) #4, !dbg !31
  %546 = tail call float @llvm.nvvm.mul.rn.f(float %425, float 0.000000e+00) #4, !dbg !31
  %.08.i327 = select i1 %.not27.i326, float %546, float %545, !dbg !31
  br label %__internal_trig_reduction_kernel.exit.i.i302, !dbg !31

547:                                              ; preds = %__nv_isinff.exit.i.i.i285
  %548 = bitcast float %425 to i32, !dbg !31
  %549 = lshr i32 %548, 23, !dbg !31
  %550 = and i32 %549, 224, !dbg !31
  %551 = add nsw i32 %550, -128, !dbg !31
  %552 = shl i32 %548, 8, !dbg !31
  %553 = or i32 %552, -2147483648, !dbg !31
  %554 = lshr exact i32 %551, 5, !dbg !31
  br label %555, !dbg !31

555:                                              ; preds = %547, %555
  %indvars.iv427 = phi i64 [ 0, %547 ], [ %indvars.iv.next428, %555 ]
  %hi.i.i.i.0.i288394 = phi i32 [ 0, %547 ], [ %560, %555 ]
  %556 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv427, !dbg !31
  %557 = load i32, ptr addrspace(1) %556, align 4, !dbg !31
  %558 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %557, i32 %553, i32 %hi.i.i.i.0.i288394) #5, !dbg !31, !srcloc !18
  %559 = extractvalue { i32, i32 } %558, 0, !dbg !31
  %560 = extractvalue { i32, i32 } %558, 1, !dbg !31
  %561 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i274, i64 0, i64 %indvars.iv427, !dbg !31
  store i32 %559, ptr %561, align 4, !dbg !31
  %indvars.iv.next428 = add nuw nsw i64 %indvars.iv427, 1, !dbg !31
  %exitcond429.not = icmp eq i64 %indvars.iv.next428, 6, !dbg !31
  br i1 %exitcond429.not, label %562, label %555, !dbg !31, !llvm.loop !32

562:                                              ; preds = %555
  %563 = getelementptr inbounds i8, ptr %result.i.i.i.i274, i64 24, !dbg !31
  store i32 %560, ptr %563, align 4, !dbg !31
  %564 = and i32 %549, 31, !dbg !31
  %565 = sub nsw i32 6, %554, !dbg !31
  %566 = sext i32 %565 to i64, !dbg !31
  %567 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i274, i64 0, i64 %566, !dbg !31
  %568 = load i32, ptr %567, align 4, !dbg !31
  %569 = sub nsw i32 5, %554, !dbg !31
  %570 = sext i32 %569 to i64, !dbg !31
  %571 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i274, i64 0, i64 %570, !dbg !31
  %572 = load i32, ptr %571, align 4, !dbg !31
  %.not20.i290 = icmp eq i32 %564, 0, !dbg !31
  br i1 %.not20.i290, label %__internal_trig_reduction_slowpath.exit.i.i.i291, label %573, !dbg !31

573:                                              ; preds = %562
  %574 = sub nsw i32 4, %554, !dbg !31
  %575 = sub nuw nsw i32 32, %564, !dbg !31
  %576 = shl i32 %568, %564, !dbg !31
  %577 = lshr i32 %572, %575, !dbg !31
  %578 = add i32 %577, %576, !dbg !31
  %579 = shl i32 %572, %564, !dbg !31
  %580 = sext i32 %574 to i64, !dbg !31
  %581 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i274, i64 0, i64 %580, !dbg !31
  %582 = load i32, ptr %581, align 4, !dbg !31
  %583 = lshr i32 %582, %575, !dbg !31
  %584 = add i32 %583, %579, !dbg !31
  br label %__internal_trig_reduction_slowpath.exit.i.i.i291, !dbg !31

__internal_trig_reduction_slowpath.exit.i.i.i291: ; preds = %573, %562
  %hi.i.i.i.1.i292 = phi i32 [ %578, %573 ], [ %568, %562 ], !dbg !31
  %lo.i.i.i.0.i293 = phi i32 [ %584, %573 ], [ %572, %562 ], !dbg !31
  %585 = lshr i32 %hi.i.i.i.1.i292, 30, !dbg !31
  %586 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i292, i32 %lo.i.i.i.0.i293, i32 2), !dbg !31
  %587 = shl i32 %lo.i.i.i.0.i293, 2, !dbg !31
  %588 = lshr i32 %586, 31, !dbg !31
  %589 = add nuw nsw i32 %588, %585, !dbg !31
  %590 = sub nsw i32 0, %589, !dbg !31
  %.not2123.i294 = icmp slt i32 %548, 0, !dbg !31
  %spec.select.i295 = select i1 %.not2123.i294, i32 %590, i32 %589, !dbg !31
  %591 = xor i32 %586, %548, !dbg !31
  %.lobit.i296 = ashr i32 %586, 31, !dbg !31
  %hi.i.i.i.2.i297 = xor i32 %.lobit.i296, %586, !dbg !31
  %lo.i.i.i.1.i299 = xor i32 %.lobit.i296, %587, !dbg !31
  %592 = zext i32 %hi.i.i.i.2.i297 to i64, !dbg !31
  %593 = shl nuw i64 %592, 32, !dbg !31
  %594 = zext i32 %lo.i.i.i.1.i299 to i64, !dbg !31
  %595 = or disjoint i64 %593, %594, !dbg !31
  %596 = sitofp i64 %595 to double, !dbg !31
  %597 = fmul double %596, 0x3BF921FB54442D19, !dbg !31
  %598 = fptrunc double %597 to float, !dbg !31
  %599 = fneg float %598, !dbg !31
  %.not2526.i300 = icmp slt i32 %591, 0, !dbg !31
  %r.i.i.i.0.i301 = select i1 %.not2526.i300, float %599, float %598, !dbg !31
  br label %__internal_trig_reduction_kernel.exit.i.i302, !dbg !31

__internal_trig_reduction_kernel.exit.i.i302:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i291, %__nv_fmul_rn.exit.i.i.i325, %__nv_sinf.exit110
  %i.i.1.i303 = phi i32 [ %.01.i276, %__nv_sinf.exit110 ], [ 0, %__nv_fmul_rn.exit.i.i.i325 ], [ %spec.select.i295, %__internal_trig_reduction_slowpath.exit.i.i.i291 ], !dbg !31
  %t.i.i.1.i304 = phi float [ %.04.i282, %__nv_sinf.exit110 ], [ %.08.i327, %__nv_fmul_rn.exit.i.i.i325 ], [ %r.i.i.i.0.i301, %__internal_trig_reduction_slowpath.exit.i.i.i291 ], !dbg !31
  %600 = add i32 %i.i.1.i303, 1, !dbg !31
  %601 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not28.i305 = icmp eq i32 %601, 0, !dbg !31
  %602 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i304, float %t.i.i.1.i304) #4, !dbg !31
  %603 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i304, float %t.i.i.1.i304) #4, !dbg !31
  %.011.i306 = select i1 %.not28.i305, float %603, float %602, !dbg !31
  %604 = and i32 %i.i.1.i303, 1, !dbg !31
  %.not29.not.i307 = icmp eq i32 %604, 0, !dbg !31
  %605 = select i1 %.not29.not.i307, float 1.000000e+00, float %t.i.i.1.i304, !dbg !31
  %606 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not30.i308 = icmp eq i32 %606, 0, !dbg !31
  %607 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i306, float %605, float 0.000000e+00) #4, !dbg !31
  %608 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i306, float %605, float 0.000000e+00) #4, !dbg !31
  %.012.i309 = select i1 %.not30.i308, float %608, float %607, !dbg !31
  br i1 %.not29.not.i307, label %__internal_fmad.exit1.i.i.i322, label %__internal_fmad.exit2.i.i.i310, !dbg !31

__internal_fmad.exit1.i.i.i322:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i302
  %609 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not31.i323 = icmp eq i32 %609, 0, !dbg !31
  %610 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i306, float 0xBF56C0FDA0000000) #4, !dbg !31
  %611 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i306, float 0xBF56C0FDA0000000) #4, !dbg !31
  %.013.i324 = select i1 %.not31.i323, float %611, float %610, !dbg !31
  br label %__internal_fmad.exit2.i.i.i310, !dbg !31

__internal_fmad.exit2.i.i.i310:                   ; preds = %__internal_fmad.exit1.i.i.i322, %__internal_trig_reduction_kernel.exit.i.i302
  %612 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i322 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i302 ], !dbg !31
  %613 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i322 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i302 ], !dbg !31
  %614 = phi float [ %.013.i324, %__internal_fmad.exit1.i.i.i322 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i302 ], !dbg !31
  %615 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not32.i311 = icmp eq i32 %615, 0, !dbg !31
  %616 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %614, float %.011.i306, float %613) #4, !dbg !31
  %617 = tail call float @llvm.nvvm.fma.rn.f(float %614, float %.011.i306, float %613) #4, !dbg !31
  %.010.i312 = select i1 %.not32.i311, float %617, float %616, !dbg !31
  %618 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not33.i313 = icmp eq i32 %618, 0, !dbg !31
  %619 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i312, float %.011.i306, float %612) #4, !dbg !31
  %620 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i312, float %.011.i306, float %612) #4, !dbg !31
  %.09.i314 = select i1 %.not33.i313, float %620, float %619, !dbg !31
  %621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not34.i315 = icmp eq i32 %621, 0, !dbg !31
  %622 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i314, float %.012.i309, float %605) #4, !dbg !31
  %623 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i314, float %.012.i309, float %605) #4, !dbg !31
  %.05.i316 = select i1 %.not34.i315, float %623, float %622, !dbg !31
  %624 = and i32 %600, 2, !dbg !31
  %.not35.i317 = icmp eq i32 %624, 0, !dbg !31
  br i1 %.not35.i317, label %__nv_cosf.exit328, label %__internal_fmad.exit5.i.i.i318, !dbg !31

__internal_fmad.exit5.i.i.i318:                   ; preds = %__internal_fmad.exit2.i.i.i310
  %625 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not36.i319 = icmp eq i32 %625, 0, !dbg !31
  %626 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i316, float -1.000000e+00, float 0.000000e+00) #4, !dbg !31
  %627 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i316, float -1.000000e+00, float 0.000000e+00) #4, !dbg !31
  %.0.i320 = select i1 %.not36.i319, float %627, float %626, !dbg !31
  br label %__nv_cosf.exit328, !dbg !31

__nv_cosf.exit328:                                ; preds = %__internal_fmad.exit2.i.i.i310, %__internal_fmad.exit5.i.i.i318
  %z.i.i.0.i321 = phi float [ %.0.i320, %__internal_fmad.exit5.i.i.i318 ], [ %.05.i316, %__internal_fmad.exit2.i.i.i310 ], !dbg !31
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i274), !dbg !31
  %628 = fmul float %21, 1.600000e+01, !dbg !33
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !34
  %629 = fmul float %628, 0x3FE45F3060000000, !dbg !34
  %630 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not.i112 = icmp eq i32 %630, 0, !dbg !34
  %631 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %629) #4, !dbg !34
  %632 = tail call i32 @llvm.nvvm.f2i.rn(float %629) #4, !dbg !34
  %.01.i113 = select i1 %.not.i112, i32 %632, i32 %631, !dbg !34
  %633 = sitofp i32 %.01.i113 to float, !dbg !34
  %634 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not15.i114 = icmp eq i32 %634, 0, !dbg !34
  %635 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %633, float 0xBFF921FB40000000, float %628) #4, !dbg !34
  %636 = tail call float @llvm.nvvm.fma.rn.f(float %633, float 0xBFF921FB40000000, float %628) #4, !dbg !34
  %.02.i115 = select i1 %.not15.i114, float %636, float %635, !dbg !34
  %637 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not16.i116 = icmp eq i32 %637, 0, !dbg !34
  %638 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %633, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !34
  %639 = tail call float @llvm.nvvm.fma.rn.f(float %633, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !34
  %.03.i117 = select i1 %.not16.i116, float %639, float %638, !dbg !34
  %640 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not17.i118 = icmp eq i32 %640, 0, !dbg !34
  %641 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %633, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !34
  %642 = tail call float @llvm.nvvm.fma.rn.f(float %633, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !34
  %.04.i119 = select i1 %.not17.i118, float %642, float %641, !dbg !34
  %643 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not18.i120 = icmp eq i32 %643, 0, !dbg !34
  %644 = tail call float @llvm.nvvm.fabs.ftz.f(float %628) #4, !dbg !34
  %645 = tail call float @llvm.nvvm.fabs.f(float %628) #4, !dbg !34
  %.06.i121 = select i1 %.not18.i120, float %645, float %644, !dbg !34
  %646 = fcmp ult float %.06.i121, 1.056150e+05, !dbg !34
  br i1 %646, label %__internal_trig_reduction_kernel.exit.i.i139, label %__nv_isinff.exit.i.i.i122, !dbg !34

__nv_isinff.exit.i.i.i122:                        ; preds = %__nv_cosf.exit328
  %647 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not19.i123 = icmp eq i32 %647, 0, !dbg !34
  %.07.i124 = select i1 %.not19.i123, float %645, float %644, !dbg !34
  %648 = fcmp oeq float %.07.i124, 0x7FF0000000000000, !dbg !34
  br i1 %648, label %__nv_fmul_rn.exit.i.i.i162, label %652, !dbg !34

__nv_fmul_rn.exit.i.i.i162:                       ; preds = %__nv_isinff.exit.i.i.i122
  %649 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not27.i163 = icmp eq i32 %649, 0, !dbg !34
  %650 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %628, float 0.000000e+00) #4, !dbg !34
  %651 = tail call float @llvm.nvvm.mul.rn.f(float %628, float 0.000000e+00) #4, !dbg !34
  %.08.i164 = select i1 %.not27.i163, float %651, float %650, !dbg !34
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !34

652:                                              ; preds = %__nv_isinff.exit.i.i.i122
  %653 = bitcast float %628 to i32, !dbg !34
  %654 = lshr i32 %653, 23, !dbg !34
  %655 = and i32 %654, 224, !dbg !34
  %656 = add nsw i32 %655, -128, !dbg !34
  %657 = shl i32 %653, 8, !dbg !34
  %658 = or i32 %657, -2147483648, !dbg !34
  %659 = lshr exact i32 %656, 5, !dbg !34
  br label %660, !dbg !34

660:                                              ; preds = %652, %660
  %indvars.iv430 = phi i64 [ 0, %652 ], [ %indvars.iv.next431, %660 ]
  %hi.i.i.i.0.i125396 = phi i32 [ 0, %652 ], [ %665, %660 ]
  %661 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv430, !dbg !34
  %662 = load i32, ptr addrspace(1) %661, align 4, !dbg !34
  %663 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %662, i32 %658, i32 %hi.i.i.i.0.i125396) #5, !dbg !34, !srcloc !18
  %664 = extractvalue { i32, i32 } %663, 0, !dbg !34
  %665 = extractvalue { i32, i32 } %663, 1, !dbg !34
  %666 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %indvars.iv430, !dbg !34
  store i32 %664, ptr %666, align 4, !dbg !34
  %indvars.iv.next431 = add nuw nsw i64 %indvars.iv430, 1, !dbg !34
  %exitcond432.not = icmp eq i64 %indvars.iv.next431, 6, !dbg !34
  br i1 %exitcond432.not, label %667, label %660, !dbg !34, !llvm.loop !35

667:                                              ; preds = %660
  %668 = getelementptr inbounds i8, ptr %result.i.i.i.i111, i64 24, !dbg !34
  store i32 %665, ptr %668, align 4, !dbg !34
  %669 = and i32 %654, 31, !dbg !34
  %670 = sub nsw i32 6, %659, !dbg !34
  %671 = sext i32 %670 to i64, !dbg !34
  %672 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %671, !dbg !34
  %673 = load i32, ptr %672, align 4, !dbg !34
  %674 = sub nsw i32 5, %659, !dbg !34
  %675 = sext i32 %674 to i64, !dbg !34
  %676 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %675, !dbg !34
  %677 = load i32, ptr %676, align 4, !dbg !34
  %.not20.i127 = icmp eq i32 %669, 0, !dbg !34
  br i1 %.not20.i127, label %__internal_trig_reduction_slowpath.exit.i.i.i128, label %678, !dbg !34

678:                                              ; preds = %667
  %679 = sub nsw i32 4, %659, !dbg !34
  %680 = sub nuw nsw i32 32, %669, !dbg !34
  %681 = shl i32 %673, %669, !dbg !34
  %682 = lshr i32 %677, %680, !dbg !34
  %683 = add i32 %682, %681, !dbg !34
  %684 = shl i32 %677, %669, !dbg !34
  %685 = sext i32 %679 to i64, !dbg !34
  %686 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %685, !dbg !34
  %687 = load i32, ptr %686, align 4, !dbg !34
  %688 = lshr i32 %687, %680, !dbg !34
  %689 = add i32 %688, %684, !dbg !34
  br label %__internal_trig_reduction_slowpath.exit.i.i.i128, !dbg !34

__internal_trig_reduction_slowpath.exit.i.i.i128: ; preds = %678, %667
  %hi.i.i.i.1.i129 = phi i32 [ %683, %678 ], [ %673, %667 ], !dbg !34
  %lo.i.i.i.0.i130 = phi i32 [ %689, %678 ], [ %677, %667 ], !dbg !34
  %690 = lshr i32 %hi.i.i.i.1.i129, 30, !dbg !34
  %691 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i129, i32 %lo.i.i.i.0.i130, i32 2), !dbg !34
  %692 = shl i32 %lo.i.i.i.0.i130, 2, !dbg !34
  %693 = lshr i32 %691, 31, !dbg !34
  %694 = add nuw nsw i32 %693, %690, !dbg !34
  %695 = sub nsw i32 0, %694, !dbg !34
  %.not2123.i131 = icmp slt i32 %653, 0, !dbg !34
  %spec.select.i132 = select i1 %.not2123.i131, i32 %695, i32 %694, !dbg !34
  %696 = xor i32 %691, %653, !dbg !34
  %.lobit.i133 = ashr i32 %691, 31, !dbg !34
  %hi.i.i.i.2.i134 = xor i32 %.lobit.i133, %691, !dbg !34
  %lo.i.i.i.1.i136 = xor i32 %.lobit.i133, %692, !dbg !34
  %697 = zext i32 %hi.i.i.i.2.i134 to i64, !dbg !34
  %698 = shl nuw i64 %697, 32, !dbg !34
  %699 = zext i32 %lo.i.i.i.1.i136 to i64, !dbg !34
  %700 = or disjoint i64 %698, %699, !dbg !34
  %701 = sitofp i64 %700 to double, !dbg !34
  %702 = fmul double %701, 0x3BF921FB54442D19, !dbg !34
  %703 = fptrunc double %702 to float, !dbg !34
  %704 = fneg float %703, !dbg !34
  %.not2526.i137 = icmp slt i32 %696, 0, !dbg !34
  %r.i.i.i.0.i138 = select i1 %.not2526.i137, float %704, float %703, !dbg !34
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !34

__internal_trig_reduction_kernel.exit.i.i139:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i128, %__nv_fmul_rn.exit.i.i.i162, %__nv_cosf.exit328
  %i.i.1.i140 = phi i32 [ %.01.i113, %__nv_cosf.exit328 ], [ 0, %__nv_fmul_rn.exit.i.i.i162 ], [ %spec.select.i132, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !34
  %t.i.i.1.i141 = phi float [ %.04.i119, %__nv_cosf.exit328 ], [ %.08.i164, %__nv_fmul_rn.exit.i.i.i162 ], [ %r.i.i.i.0.i138, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !34
  %705 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not28.i142 = icmp eq i32 %705, 0, !dbg !34
  %706 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !34
  %707 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !34
  %.011.i143 = select i1 %.not28.i142, float %707, float %706, !dbg !34
  %708 = and i32 %i.i.1.i140, 1, !dbg !34
  %.not29.i144 = icmp eq i32 %708, 0, !dbg !34
  %709 = select i1 %.not29.i144, float %t.i.i.1.i141, float 1.000000e+00, !dbg !34
  %710 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not30.i145 = icmp eq i32 %710, 0, !dbg !34
  %711 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i143, float %709, float 0.000000e+00) #4, !dbg !34
  %712 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i143, float %709, float 0.000000e+00) #4, !dbg !34
  %.012.i146 = select i1 %.not30.i145, float %712, float %711, !dbg !34
  br i1 %.not29.i144, label %__internal_fmad.exit2.i.i.i150, label %__internal_fmad.exit1.i.i.i147, !dbg !34

__internal_fmad.exit1.i.i.i147:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i139
  %713 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not31.i148 = icmp eq i32 %713, 0, !dbg !34
  %714 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !34
  %715 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !34
  %.013.i149 = select i1 %.not31.i148, float %715, float %714, !dbg !34
  br label %__internal_fmad.exit2.i.i.i150, !dbg !34

__internal_fmad.exit2.i.i.i150:                   ; preds = %__internal_fmad.exit1.i.i.i147, %__internal_trig_reduction_kernel.exit.i.i139
  %716 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i147 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !34
  %717 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i147 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !34
  %718 = phi float [ %.013.i149, %__internal_fmad.exit1.i.i.i147 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !34
  %719 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not32.i151 = icmp eq i32 %719, 0, !dbg !34
  %720 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %718, float %.011.i143, float %717) #4, !dbg !34
  %721 = tail call float @llvm.nvvm.fma.rn.f(float %718, float %.011.i143, float %717) #4, !dbg !34
  %.010.i152 = select i1 %.not32.i151, float %721, float %720, !dbg !34
  %722 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not33.i153 = icmp eq i32 %722, 0, !dbg !34
  %723 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i152, float %.011.i143, float %716) #4, !dbg !34
  %724 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i152, float %.011.i143, float %716) #4, !dbg !34
  %.09.i154 = select i1 %.not33.i153, float %724, float %723, !dbg !34
  %725 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not34.i155 = icmp eq i32 %725, 0, !dbg !34
  %726 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i154, float %.012.i146, float %709) #4, !dbg !34
  %727 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i154, float %.012.i146, float %709) #4, !dbg !34
  %.05.i156 = select i1 %.not34.i155, float %727, float %726, !dbg !34
  %728 = and i32 %i.i.1.i140, 2, !dbg !34
  %.not35.i157 = icmp eq i32 %728, 0, !dbg !34
  br i1 %.not35.i157, label %__nv_sinf.exit165, label %__internal_fmad.exit5.i.i.i158, !dbg !34

__internal_fmad.exit5.i.i.i158:                   ; preds = %__internal_fmad.exit2.i.i.i150
  %729 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not36.i159 = icmp eq i32 %729, 0, !dbg !34
  %730 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #4, !dbg !34
  %731 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #4, !dbg !34
  %.0.i160 = select i1 %.not36.i159, float %731, float %730, !dbg !34
  br label %__nv_sinf.exit165, !dbg !34

__nv_sinf.exit165:                                ; preds = %__internal_fmad.exit2.i.i.i150, %__internal_fmad.exit5.i.i.i158
  %z.i.i.0.i161 = phi float [ %.0.i160, %__internal_fmad.exit5.i.i.i158 ], [ %.05.i156, %__internal_fmad.exit2.i.i.i150 ], !dbg !34
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !34
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i329), !dbg !36
  %732 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not.i330 = icmp eq i32 %732, 0, !dbg !36
  %.01.i331 = select i1 %.not.i330, i32 %632, i32 %631, !dbg !36
  %733 = sitofp i32 %.01.i331 to float, !dbg !36
  %734 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not15.i332 = icmp eq i32 %734, 0, !dbg !36
  %735 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %733, float 0xBFF921FB40000000, float %628) #4, !dbg !36
  %736 = tail call float @llvm.nvvm.fma.rn.f(float %733, float 0xBFF921FB40000000, float %628) #4, !dbg !36
  %.02.i333 = select i1 %.not15.i332, float %736, float %735, !dbg !36
  %737 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not16.i334 = icmp eq i32 %737, 0, !dbg !36
  %738 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %733, float 0xBE74442D00000000, float %.02.i333) #4, !dbg !36
  %739 = tail call float @llvm.nvvm.fma.rn.f(float %733, float 0xBE74442D00000000, float %.02.i333) #4, !dbg !36
  %.03.i335 = select i1 %.not16.i334, float %739, float %738, !dbg !36
  %740 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not17.i336 = icmp eq i32 %740, 0, !dbg !36
  %741 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %733, float 0xBCF84698A0000000, float %.03.i335) #4, !dbg !36
  %742 = tail call float @llvm.nvvm.fma.rn.f(float %733, float 0xBCF84698A0000000, float %.03.i335) #4, !dbg !36
  %.04.i337 = select i1 %.not17.i336, float %742, float %741, !dbg !36
  %743 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not18.i338 = icmp eq i32 %743, 0, !dbg !36
  %.06.i339 = select i1 %.not18.i338, float %645, float %644, !dbg !36
  %744 = fcmp ult float %.06.i339, 1.056150e+05, !dbg !36
  br i1 %744, label %__internal_trig_reduction_kernel.exit.i.i357, label %__nv_isinff.exit.i.i.i340, !dbg !36

__nv_isinff.exit.i.i.i340:                        ; preds = %__nv_sinf.exit165
  %745 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not19.i341 = icmp eq i32 %745, 0, !dbg !36
  %.07.i342 = select i1 %.not19.i341, float %645, float %644, !dbg !36
  %746 = fcmp oeq float %.07.i342, 0x7FF0000000000000, !dbg !36
  br i1 %746, label %__nv_fmul_rn.exit.i.i.i380, label %750, !dbg !36

__nv_fmul_rn.exit.i.i.i380:                       ; preds = %__nv_isinff.exit.i.i.i340
  %747 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not27.i381 = icmp eq i32 %747, 0, !dbg !36
  %748 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %628, float 0.000000e+00) #4, !dbg !36
  %749 = tail call float @llvm.nvvm.mul.rn.f(float %628, float 0.000000e+00) #4, !dbg !36
  %.08.i382 = select i1 %.not27.i381, float %749, float %748, !dbg !36
  br label %__internal_trig_reduction_kernel.exit.i.i357, !dbg !36

750:                                              ; preds = %__nv_isinff.exit.i.i.i340
  %751 = bitcast float %628 to i32, !dbg !36
  %752 = lshr i32 %751, 23, !dbg !36
  %753 = and i32 %752, 224, !dbg !36
  %754 = add nsw i32 %753, -128, !dbg !36
  %755 = shl i32 %751, 8, !dbg !36
  %756 = or i32 %755, -2147483648, !dbg !36
  %757 = lshr exact i32 %754, 5, !dbg !36
  br label %758, !dbg !36

758:                                              ; preds = %750, %758
  %indvars.iv433 = phi i64 [ 0, %750 ], [ %indvars.iv.next434, %758 ]
  %hi.i.i.i.0.i343398 = phi i32 [ 0, %750 ], [ %763, %758 ]
  %759 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv433, !dbg !36
  %760 = load i32, ptr addrspace(1) %759, align 4, !dbg !36
  %761 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %760, i32 %756, i32 %hi.i.i.i.0.i343398) #5, !dbg !36, !srcloc !18
  %762 = extractvalue { i32, i32 } %761, 0, !dbg !36
  %763 = extractvalue { i32, i32 } %761, 1, !dbg !36
  %764 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i329, i64 0, i64 %indvars.iv433, !dbg !36
  store i32 %762, ptr %764, align 4, !dbg !36
  %indvars.iv.next434 = add nuw nsw i64 %indvars.iv433, 1, !dbg !36
  %exitcond435.not = icmp eq i64 %indvars.iv.next434, 6, !dbg !36
  br i1 %exitcond435.not, label %765, label %758, !dbg !36, !llvm.loop !37

765:                                              ; preds = %758
  %766 = getelementptr inbounds i8, ptr %result.i.i.i.i329, i64 24, !dbg !36
  store i32 %763, ptr %766, align 4, !dbg !36
  %767 = and i32 %752, 31, !dbg !36
  %768 = sub nsw i32 6, %757, !dbg !36
  %769 = sext i32 %768 to i64, !dbg !36
  %770 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i329, i64 0, i64 %769, !dbg !36
  %771 = load i32, ptr %770, align 4, !dbg !36
  %772 = sub nsw i32 5, %757, !dbg !36
  %773 = sext i32 %772 to i64, !dbg !36
  %774 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i329, i64 0, i64 %773, !dbg !36
  %775 = load i32, ptr %774, align 4, !dbg !36
  %.not20.i345 = icmp eq i32 %767, 0, !dbg !36
  br i1 %.not20.i345, label %__internal_trig_reduction_slowpath.exit.i.i.i346, label %776, !dbg !36

776:                                              ; preds = %765
  %777 = sub nsw i32 4, %757, !dbg !36
  %778 = sub nuw nsw i32 32, %767, !dbg !36
  %779 = shl i32 %771, %767, !dbg !36
  %780 = lshr i32 %775, %778, !dbg !36
  %781 = add i32 %780, %779, !dbg !36
  %782 = shl i32 %775, %767, !dbg !36
  %783 = sext i32 %777 to i64, !dbg !36
  %784 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i329, i64 0, i64 %783, !dbg !36
  %785 = load i32, ptr %784, align 4, !dbg !36
  %786 = lshr i32 %785, %778, !dbg !36
  %787 = add i32 %786, %782, !dbg !36
  br label %__internal_trig_reduction_slowpath.exit.i.i.i346, !dbg !36

__internal_trig_reduction_slowpath.exit.i.i.i346: ; preds = %776, %765
  %hi.i.i.i.1.i347 = phi i32 [ %781, %776 ], [ %771, %765 ], !dbg !36
  %lo.i.i.i.0.i348 = phi i32 [ %787, %776 ], [ %775, %765 ], !dbg !36
  %788 = lshr i32 %hi.i.i.i.1.i347, 30, !dbg !36
  %789 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i347, i32 %lo.i.i.i.0.i348, i32 2), !dbg !36
  %790 = shl i32 %lo.i.i.i.0.i348, 2, !dbg !36
  %791 = lshr i32 %789, 31, !dbg !36
  %792 = add nuw nsw i32 %791, %788, !dbg !36
  %793 = sub nsw i32 0, %792, !dbg !36
  %.not2123.i349 = icmp slt i32 %751, 0, !dbg !36
  %spec.select.i350 = select i1 %.not2123.i349, i32 %793, i32 %792, !dbg !36
  %794 = xor i32 %789, %751, !dbg !36
  %.lobit.i351 = ashr i32 %789, 31, !dbg !36
  %hi.i.i.i.2.i352 = xor i32 %.lobit.i351, %789, !dbg !36
  %lo.i.i.i.1.i354 = xor i32 %.lobit.i351, %790, !dbg !36
  %795 = zext i32 %hi.i.i.i.2.i352 to i64, !dbg !36
  %796 = shl nuw i64 %795, 32, !dbg !36
  %797 = zext i32 %lo.i.i.i.1.i354 to i64, !dbg !36
  %798 = or disjoint i64 %796, %797, !dbg !36
  %799 = sitofp i64 %798 to double, !dbg !36
  %800 = fmul double %799, 0x3BF921FB54442D19, !dbg !36
  %801 = fptrunc double %800 to float, !dbg !36
  %802 = fneg float %801, !dbg !36
  %.not2526.i355 = icmp slt i32 %794, 0, !dbg !36
  %r.i.i.i.0.i356 = select i1 %.not2526.i355, float %802, float %801, !dbg !36
  br label %__internal_trig_reduction_kernel.exit.i.i357, !dbg !36

__internal_trig_reduction_kernel.exit.i.i357:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i346, %__nv_fmul_rn.exit.i.i.i380, %__nv_sinf.exit165
  %i.i.1.i358 = phi i32 [ %.01.i331, %__nv_sinf.exit165 ], [ 0, %__nv_fmul_rn.exit.i.i.i380 ], [ %spec.select.i350, %__internal_trig_reduction_slowpath.exit.i.i.i346 ], !dbg !36
  %t.i.i.1.i359 = phi float [ %.04.i337, %__nv_sinf.exit165 ], [ %.08.i382, %__nv_fmul_rn.exit.i.i.i380 ], [ %r.i.i.i.0.i356, %__internal_trig_reduction_slowpath.exit.i.i.i346 ], !dbg !36
  %803 = add i32 %i.i.1.i358, 1, !dbg !36
  %804 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not28.i360 = icmp eq i32 %804, 0, !dbg !36
  %805 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i359, float %t.i.i.1.i359) #4, !dbg !36
  %806 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i359, float %t.i.i.1.i359) #4, !dbg !36
  %.011.i361 = select i1 %.not28.i360, float %806, float %805, !dbg !36
  %807 = and i32 %i.i.1.i358, 1, !dbg !36
  %.not29.not.i362 = icmp eq i32 %807, 0, !dbg !36
  %808 = select i1 %.not29.not.i362, float 1.000000e+00, float %t.i.i.1.i359, !dbg !36
  %809 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not30.i363 = icmp eq i32 %809, 0, !dbg !36
  %810 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i361, float %808, float 0.000000e+00) #4, !dbg !36
  %811 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i361, float %808, float 0.000000e+00) #4, !dbg !36
  %.012.i364 = select i1 %.not30.i363, float %811, float %810, !dbg !36
  br i1 %.not29.not.i362, label %__internal_fmad.exit1.i.i.i377, label %__internal_fmad.exit2.i.i.i365, !dbg !36

__internal_fmad.exit1.i.i.i377:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i357
  %812 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not31.i378 = icmp eq i32 %812, 0, !dbg !36
  %813 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i361, float 0xBF56C0FDA0000000) #4, !dbg !36
  %814 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i361, float 0xBF56C0FDA0000000) #4, !dbg !36
  %.013.i379 = select i1 %.not31.i378, float %814, float %813, !dbg !36
  br label %__internal_fmad.exit2.i.i.i365, !dbg !36

__internal_fmad.exit2.i.i.i365:                   ; preds = %__internal_fmad.exit1.i.i.i377, %__internal_trig_reduction_kernel.exit.i.i357
  %815 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i377 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i357 ], !dbg !36
  %816 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i377 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i357 ], !dbg !36
  %817 = phi float [ %.013.i379, %__internal_fmad.exit1.i.i.i377 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i357 ], !dbg !36
  %818 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not32.i366 = icmp eq i32 %818, 0, !dbg !36
  %819 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %817, float %.011.i361, float %816) #4, !dbg !36
  %820 = tail call float @llvm.nvvm.fma.rn.f(float %817, float %.011.i361, float %816) #4, !dbg !36
  %.010.i367 = select i1 %.not32.i366, float %820, float %819, !dbg !36
  %821 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not33.i368 = icmp eq i32 %821, 0, !dbg !36
  %822 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i367, float %.011.i361, float %815) #4, !dbg !36
  %823 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i367, float %.011.i361, float %815) #4, !dbg !36
  %.09.i369 = select i1 %.not33.i368, float %823, float %822, !dbg !36
  %824 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not34.i370 = icmp eq i32 %824, 0, !dbg !36
  %825 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i369, float %.012.i364, float %808) #4, !dbg !36
  %826 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i369, float %.012.i364, float %808) #4, !dbg !36
  %.05.i371 = select i1 %.not34.i370, float %826, float %825, !dbg !36
  %827 = and i32 %803, 2, !dbg !36
  %.not35.i372 = icmp eq i32 %827, 0, !dbg !36
  br i1 %.not35.i372, label %__nv_cosf.exit383, label %__internal_fmad.exit5.i.i.i373, !dbg !36

__internal_fmad.exit5.i.i.i373:                   ; preds = %__internal_fmad.exit2.i.i.i365
  %828 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not36.i374 = icmp eq i32 %828, 0, !dbg !36
  %829 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i371, float -1.000000e+00, float 0.000000e+00) #4, !dbg !36
  %830 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i371, float -1.000000e+00, float 0.000000e+00) #4, !dbg !36
  %.0.i375 = select i1 %.not36.i374, float %830, float %829, !dbg !36
  br label %__nv_cosf.exit383, !dbg !36

__nv_cosf.exit383:                                ; preds = %__internal_fmad.exit2.i.i.i365, %__internal_fmad.exit5.i.i.i373
  %z.i.i.0.i376 = phi float [ %.0.i375, %__internal_fmad.exit5.i.i.i373 ], [ %.05.i371, %__internal_fmad.exit2.i.i.i365 ], !dbg !36
  %.frozen = freeze i32 %16, !dbg !38
  %831 = sdiv i32 %.frozen, 4, !dbg !38
  %832 = mul i32 %831, 4, !dbg !39
  %.decomposed = sub i32 %.frozen, %832, !dbg !39
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i329), !dbg !36
  %833 = mul i32 %831, 36, !dbg !40
  %834 = add i32 %833, %.decomposed, !dbg !41
  %835 = sext i32 %834 to i64, !dbg !42
  %836 = getelementptr float, ptr addrspace(1) %1, i64 %835, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %20, ptr addrspace(1) %836, i1 %17) #4, !dbg !43
  %837 = getelementptr float, ptr addrspace(1) %2, i64 %835, !dbg !44
  %838 = bitcast float %z.i.i.0.i to i32, !dbg !45
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %838, ptr addrspace(1) %837, i1 %17) #4, !dbg !45
  %839 = getelementptr float, ptr addrspace(1) %3, i64 %835, !dbg !46
  %840 = bitcast float %z.i.i.0.i212 to i32, !dbg !47
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %840, ptr addrspace(1) %839, i1 %17) #4, !dbg !47
  %841 = getelementptr float, ptr addrspace(1) %4, i64 %835, !dbg !48
  %842 = bitcast float %z.i.i.0.i51 to i32, !dbg !49
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %842, ptr addrspace(1) %841, i1 %17) #4, !dbg !49
  %843 = getelementptr float, ptr addrspace(1) %5, i64 %835, !dbg !50
  %844 = bitcast float %z.i.i.0.i266 to i32, !dbg !51
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %844, ptr addrspace(1) %843, i1 %17) #4, !dbg !51
  %845 = getelementptr float, ptr addrspace(1) %6, i64 %835, !dbg !52
  %846 = bitcast float %z.i.i.0.i106 to i32, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %846, ptr addrspace(1) %845, i1 %17) #4, !dbg !53
  %847 = getelementptr float, ptr addrspace(1) %7, i64 %835, !dbg !54
  %848 = bitcast float %z.i.i.0.i321 to i32, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %848, ptr addrspace(1) %847, i1 %17) #4, !dbg !55
  %849 = getelementptr float, ptr addrspace(1) %8, i64 %835, !dbg !56
  %850 = bitcast float %z.i.i.0.i161 to i32, !dbg !57
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %850, ptr addrspace(1) %849, i1 %17) #4, !dbg !57
  %851 = getelementptr float, ptr addrspace(1) %9, i64 %835, !dbg !58
  %852 = bitcast float %z.i.i.0.i376 to i32, !dbg !59
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %852, ptr addrspace(1) %851, i1 %17) #4, !dbg !59
  ret void, !dbg !60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdwrcjjnxuk2gycct5remiksa4qtmbsz6kak42u6bzjstsxwgowl.py", directory: "inductor_cache/dw")
!4 = !{ptr @triton_poi_fused_cos_div_mul_sin_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cos_div_mul_sin_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cos_div_mul_sin_0", linkageName: "triton_poi_fused_cos_div_mul_sin_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 27, column: 30, scope: !7)
!16 = !DILocation(line: 27, column: 35, scope: !7)
!17 = !DILocation(line: 30, column: 23, scope: !7)
!18 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.count", i32 1}
!21 = !DILocation(line: 31, column: 23, scope: !7)
!22 = distinct !{!22, !20}
!23 = !DILocation(line: 33, column: 18, scope: !7)
!24 = !DILocation(line: 34, column: 23, scope: !7)
!25 = distinct !{!25, !20}
!26 = !DILocation(line: 35, column: 23, scope: !7)
!27 = distinct !{!27, !20}
!28 = !DILocation(line: 37, column: 19, scope: !7)
!29 = !DILocation(line: 38, column: 24, scope: !7)
!30 = distinct !{!30, !20}
!31 = !DILocation(line: 39, column: 24, scope: !7)
!32 = distinct !{!32, !20}
!33 = !DILocation(line: 41, column: 19, scope: !7)
!34 = !DILocation(line: 42, column: 24, scope: !7)
!35 = distinct !{!35, !20}
!36 = !DILocation(line: 43, column: 24, scope: !7)
!37 = distinct !{!37, !20}
!38 = !DILocation(line: 26, column: 19, scope: !7)
!39 = !DILocation(line: 25, column: 19, scope: !7)
!40 = !DILocation(line: 44, column: 33, scope: !7)
!41 = !DILocation(line: 44, column: 30, scope: !7)
!42 = !DILocation(line: 44, column: 25, scope: !7)
!43 = !DILocation(line: 44, column: 44, scope: !7)
!44 = !DILocation(line: 45, column: 25, scope: !7)
!45 = !DILocation(line: 45, column: 44, scope: !7)
!46 = !DILocation(line: 46, column: 25, scope: !7)
!47 = !DILocation(line: 46, column: 44, scope: !7)
!48 = !DILocation(line: 47, column: 25, scope: !7)
!49 = !DILocation(line: 47, column: 44, scope: !7)
!50 = !DILocation(line: 48, column: 25, scope: !7)
!51 = !DILocation(line: 48, column: 44, scope: !7)
!52 = !DILocation(line: 49, column: 25, scope: !7)
!53 = !DILocation(line: 49, column: 45, scope: !7)
!54 = !DILocation(line: 50, column: 25, scope: !7)
!55 = !DILocation(line: 50, column: 45, scope: !7)
!56 = !DILocation(line: 51, column: 25, scope: !7)
!57 = !DILocation(line: 51, column: 45, scope: !7)
!58 = !DILocation(line: 52, column: 25, scope: !7)
!59 = !DILocation(line: 52, column: 45, scope: !7)
!60 = !DILocation(line: 52, column: 4, scope: !7)
