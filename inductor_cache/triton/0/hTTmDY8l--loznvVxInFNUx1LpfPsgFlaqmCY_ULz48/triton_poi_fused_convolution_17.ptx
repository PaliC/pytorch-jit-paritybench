//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_17 // -- Begin function triton_poi_fused_convolution_17
                                        // @triton_poi_fused_convolution_17
.visible .entry triton_poi_fused_convolution_17(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_17_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_17_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_17_param_2,
	.param .u32 triton_poi_fused_convolution_17_param_3,
	.param .u32 triton_poi_fused_convolution_17_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<52>;
	.reg .f32 	%f<21>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_poi_fused_convolution_17_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused_convolution_17_param_1];
$L__tmp0:
	.loc	1 22 28                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:22:33
	shl.b32 	%r23, %r1, 2;
	ld.param.u64 	%rd14, [triton_poi_fused_convolution_17_param_2];
	.loc	1 25 28                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:25:33
	shl.b32 	%r24, %r2, 8;
	.loc	1 26 44                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:26:44
	mov.u32 	%r25, %tid.x;
	and.b32  	%r26, %r25, 127;
	.loc	1 26 23                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:26:23
	or.b32  	%r27, %r24, %r26;
	or.b32  	%r28, %r27, 128;
	.loc	1 27 21                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:27:21
	setp.lt.s32 	%p1, %r27, 225;
	setp.lt.s32 	%p2, %r28, 225;
	.loc	1 30 19                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:30:19
	bfe.s32 	%r29, %r1, 29, 1;
	shr.u32 	%r30, %r29, 24;
	add.s32 	%r31, %r23, %r30;
	shr.s32 	%r32, %r31, 8;
	.loc	1 29 19                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:29:19
	and.b32  	%r33, %r31, -256;
	sub.s32 	%r34, %r23, %r33;
	.loc	1 32 39                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:32:39
	shl.b32 	%r35, %r27, 8;
	shl.b32 	%r36, %r28, 8;
	.loc	1 32 35                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:32:35
	mad.lo.s32 	%r37, %r32, 57600, %r34;
	.loc	1 32 44                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:32:44
	add.s32 	%r38, %r37, %r35;
	add.s32 	%r39, %r37, %r36;
	.loc	1 32 30                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:32:30
	mul.wide.s32 	%rd15, %r38, 4;
	add.s64 	%rd1, %rd12, %rd15;
	mul.wide.s32 	%rd16, %r39, 4;
	add.s64 	%rd2, %rd12, %rd16;
	.loc	1 32 55                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:32:55
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	.loc	1 33 30                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:33:30
	mul.wide.s32 	%rd17, %r34, 4;
	add.s64 	%rd3, %rd13, %rd17;
	mov.pred 	%p3, -1;
	.loc	1 33 35                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:33:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r14;
	.loc	1 34 18                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:34:18
	add.f32 	%f13, %f1, %f9;
	add.f32 	%f14, %f2, %f10;
	add.f32 	%f15, %f3, %f11;
	add.f32 	%f16, %f4, %f12;
	add.f32 	%f17, %f5, %f9;
	add.f32 	%f18, %f6, %f10;
	add.f32 	%f19, %f7, %f11;
	add.f32 	%f20, %f8, %f12;
	.loc	1 35 34                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:35:34
	mul.lo.s32 	%r40, %r1, 900;
	add.s32 	%r41, %r40, 225;
	add.s32 	%r42, %r40, 450;
	add.s32 	%r43, %r40, 675;
	.loc	1 35 30                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:35:30
	add.s32 	%r44, %r27, %r40;
	add.s32 	%r45, %r40, %r28;
	add.s32 	%r46, %r27, %r41;
	add.s32 	%r47, %r41, %r28;
	add.s32 	%r48, %r27, %r42;
	add.s32 	%r49, %r42, %r28;
	add.s32 	%r50, %r27, %r43;
	add.s32 	%r51, %r43, %r28;
	.loc	1 35 25                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:35:25
	mul.wide.s32 	%rd18, %r44, 4;
	add.s64 	%rd4, %rd14, %rd18;
	mul.wide.s32 	%rd19, %r45, 4;
	add.s64 	%rd5, %rd14, %rd19;
	mul.wide.s32 	%rd20, %r46, 4;
	add.s64 	%rd6, %rd14, %rd20;
	mul.wide.s32 	%rd21, %r47, 4;
	add.s64 	%rd7, %rd14, %rd21;
	mul.wide.s32 	%rd22, %r48, 4;
	add.s64 	%rd8, %rd14, %rd22;
	mul.wide.s32 	%rd23, %r49, 4;
	add.s64 	%rd9, %rd14, %rd23;
	mul.wide.s32 	%rd24, %r50, 4;
	add.s64 	%rd10, %rd14, %rd24;
	mul.wide.s32 	%rd25, %r51, 4;
	add.s64 	%rd11, %rd14, %rd25;
	.loc	1 35 45                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:35:45
	mov.b32 	%r15, %f13;
	// begin inline asm
	@%p1 st.global.b32 [ %rd4 + 0 ], { %r15 };
	// end inline asm
	mov.b32 	%r16, %f17;
	// begin inline asm
	@%p2 st.global.b32 [ %rd5 + 0 ], { %r16 };
	// end inline asm
	mov.b32 	%r17, %f14;
	// begin inline asm
	@%p1 st.global.b32 [ %rd6 + 0 ], { %r17 };
	// end inline asm
	mov.b32 	%r18, %f18;
	// begin inline asm
	@%p2 st.global.b32 [ %rd7 + 0 ], { %r18 };
	// end inline asm
	mov.b32 	%r19, %f15;
	// begin inline asm
	@%p1 st.global.b32 [ %rd8 + 0 ], { %r19 };
	// end inline asm
	mov.b32 	%r20, %f19;
	// begin inline asm
	@%p2 st.global.b32 [ %rd9 + 0 ], { %r20 };
	// end inline asm
	mov.b32 	%r21, %f16;
	// begin inline asm
	@%p1 st.global.b32 [ %rd10 + 0 ], { %r21 };
	// end inline asm
	mov.b32 	%r22, %f20;
	// begin inline asm
	@%p2 st.global.b32 [ %rd11 + 0 ], { %r22 };
	// end inline asm
	.loc	1 35 4                          // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fm/cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 109
.b8 104
.b8 108
.b8 109
.b8 99
.b8 53
.b8 50
.b8 122
.b8 121
.b8 105
.b8 98
.b8 53
.b8 105
.b8 121
.b8 50
.b8 104
.b8 55
.b8 106
.b8 99
.b8 101
.b8 105
.b8 109
.b8 115
.b8 115
.b8 51
.b8 117
.b8 54
.b8 112
.b8 116
.b8 120
.b8 55
.b8 116
.b8 98
.b8 114
.b8 114
.b8 50
.b8 54
.b8 120
.b8 51
.b8 120
.b8 116
.b8 116
.b8 115
.b8 53
.b8 97
.b8 97
.b8 112
.b8 121
.b8 109
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 109
.b8 0
	}
	.section	.debug_macinfo	{	}
