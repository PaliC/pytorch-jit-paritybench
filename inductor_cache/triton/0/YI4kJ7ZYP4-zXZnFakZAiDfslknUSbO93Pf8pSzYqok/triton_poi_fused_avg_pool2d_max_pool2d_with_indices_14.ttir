#loc = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":19:0)
module {
  tt.func public @triton_poi_fused_avg_pool2d_max_pool2d_with_indices_14(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<256xi8> loc(#loc1)
    %cst_0 = arith.constant dense<9.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<128> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_3 = arith.constant dense<8> : tensor<256xi8> loc(#loc1)
    %cst_4 = arith.constant dense<7> : tensor<256xi8> loc(#loc1)
    %cst_5 = arith.constant dense<6> : tensor<256xi8> loc(#loc1)
    %cst_6 = arith.constant dense<5> : tensor<256xi8> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<256xi8> loc(#loc1)
    %cst_8 = arith.constant dense<3> : tensor<256xi32> loc(#loc1)
    %cst_9 = arith.constant dense<2> : tensor<256xi32> loc(#loc1)
    %cst_10 = arith.constant dense<1> : tensor<256xi32> loc(#loc1)
    %cst_11 = arith.constant dense<0xFF800000> : tensor<256xf32> loc(#loc1)
    %cst_12 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_13 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_14 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_14 : tensor<256xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_13 : tensor<256xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_13 : tensor<256xi32> loc(#loc8)
    %8 = arith.muli %4, %cst_12 : tensor<256xi32> loc(#loc9)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc10)
    %10 = tt.addptr %9, %8 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc10)
    %11 = tt.load %10, %5, %cst_11 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc11)
    %12 = arith.cmpf ogt, %11, %cst_11 : tensor<256xf32> loc(#loc54)
    %13 = arith.cmpf une, %11, %11 : tensor<256xf32> loc(#loc55)
    %14 = arith.ori %12, %13 : tensor<256xi1> loc(#loc56)
    %15 = arith.select %14, %11, %cst_11 : tensor<256xi1>, tensor<256xf32> loc(#loc57)
    %16 = arith.addi %8, %cst_10 : tensor<256xi32> loc(#loc17)
    %17 = tt.addptr %9, %16 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc18)
    %18 = tt.load %17, %5, %cst_11 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc19)
    %19 = arith.cmpf ogt, %18, %15 : tensor<256xf32> loc(#loc58)
    %20 = arith.cmpf une, %18, %18 : tensor<256xf32> loc(#loc59)
    %21 = arith.ori %19, %20 : tensor<256xi1> loc(#loc60)
    %22 = arith.select %21, %18, %15 : tensor<256xi1>, tensor<256xf32> loc(#loc61)
    %23 = arith.cmpf ogt, %cst_11, %22 : tensor<256xf32> loc(#loc62)
    %24 = arith.select %23, %cst_11, %22 : tensor<256xi1>, tensor<256xf32> loc(#loc63)
    %25 = arith.addi %8, %cst_9 : tensor<256xi32> loc(#loc22)
    %26 = tt.addptr %9, %25 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc23)
    %27 = tt.load %26, %5, %cst_11 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc24)
    %28 = arith.cmpf ogt, %27, %24 : tensor<256xf32> loc(#loc64)
    %29 = arith.cmpf une, %27, %27 : tensor<256xf32> loc(#loc65)
    %30 = arith.ori %28, %29 : tensor<256xi1> loc(#loc66)
    %31 = arith.select %30, %27, %24 : tensor<256xi1>, tensor<256xf32> loc(#loc67)
    %32 = arith.addi %8, %cst_8 : tensor<256xi32> loc(#loc26)
    %33 = tt.addptr %9, %32 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc27)
    %34 = tt.load %33, %5, %cst_11 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc28)
    %35 = arith.cmpf ogt, %34, %31 : tensor<256xf32> loc(#loc68)
    %36 = arith.cmpf une, %34, %34 : tensor<256xf32> loc(#loc69)
    %37 = arith.ori %35, %36 : tensor<256xi1> loc(#loc70)
    %38 = arith.select %37, %34, %31 : tensor<256xi1>, tensor<256xf32> loc(#loc71)
    %39 = arith.select %12, %cst_7, %cst : tensor<256xi1>, tensor<256xi8> loc(#loc30)
    %40 = arith.select %19, %cst_6, %39 : tensor<256xi1>, tensor<256xi8> loc(#loc31)
    %41 = arith.select %23, %cst_5, %40 : tensor<256xi1>, tensor<256xi8> loc(#loc32)
    %42 = arith.select %28, %cst_4, %41 : tensor<256xi1>, tensor<256xi8> loc(#loc33)
    %43 = arith.select %35, %cst_3, %42 : tensor<256xi1>, tensor<256xi8> loc(#loc34)
    %44 = tt.load %10, %5, %cst_2 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc35)
    %45 = arith.addf %44, %cst_2 : tensor<256xf32> loc(#loc36)
    %46 = tt.load %17, %5, %cst_2 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc37)
    %47 = arith.addf %46, %45 : tensor<256xf32> loc(#loc38)
    %48 = arith.addf %47, %cst_2 : tensor<256xf32> loc(#loc39)
    %49 = tt.load %26, %5, %cst_2 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc40)
    %50 = arith.addf %49, %48 : tensor<256xf32> loc(#loc41)
    %51 = tt.load %33, %5, %cst_2 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc42)
    %52 = arith.addf %51, %50 : tensor<256xf32> loc(#loc43)
    %53 = arith.divf %52, %cst_0 : tensor<256xf32> loc(#loc44)
    %54 = arith.muli %7, %cst_1 : tensor<256xi32> loc(#loc45)
    %55 = arith.addi %6, %54 : tensor<256xi32> loc(#loc46)
    %56 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc47)
    %57 = tt.addptr %56, %55 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc47)
    tt.store %57, %38, %5 : tensor<256x!tt.ptr<f32>> loc(#loc48)
    %58 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<256x!tt.ptr<i8>> loc(#loc49)
    %59 = tt.addptr %58, %4 : tensor<256x!tt.ptr<i8>>, tensor<256xi32> loc(#loc49)
    tt.store %59, %43, %5 : tensor<256x!tt.ptr<i8>> loc(#loc50)
    %60 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc51)
    %61 = tt.addptr %60, %55 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc51)
    tt.store %61, %53, %5 : tensor<256x!tt.ptr<f32>> loc(#loc52)
    tt.return loc(#loc53)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":21:28)
#loc3 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":21:33)
#loc4 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":22:36)
#loc5 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":22:23)
#loc6 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":23:21)
#loc7 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":25:19)
#loc8 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":26:19)
#loc9 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":52:33)
#loc10 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":52:31)
#loc11 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":52:38)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc13 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":53:42)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc17 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":55:35)
#loc18 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":55:31)
#loc19 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":55:42)
#loc20 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":56:42)
#loc21 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":59:42)
#loc22 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":61:35)
#loc23 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":61:31)
#loc24 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":61:42)
#loc25 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":62:42)
#loc26 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":64:35)
#loc27 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":64:31)
#loc28 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":64:42)
#loc29 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":65:42)
#loc30 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":78:35)
#loc31 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":81:35)
#loc32 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":84:35)
#loc33 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":87:35)
#loc34 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":90:35)
#loc35 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":98:38)
#loc36 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":99:20)
#loc37 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":100:42)
#loc38 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":101:20)
#loc39 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":103:20)
#loc40 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":104:42)
#loc41 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":105:20)
#loc42 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":106:42)
#loc43 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":107:20)
#loc44 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":109:20)
#loc45 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":110:34)
#loc46 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":110:30)
#loc47 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":110:25)
#loc48 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":110:46)
#loc49 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":111:25)
#loc50 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":111:37)
#loc51 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":112:25)
#loc52 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":112:46)
#loc53 = loc("inductor_cache/tg/ctghik24xu35wacv5xrnjzss6pm3f3ckzr5hev6merq6v642ifyu.py":112:4)
#loc54 = loc(callsite(#loc12 at #loc13))
#loc55 = loc(callsite(#loc14 at #loc13))
#loc56 = loc(callsite(#loc15 at #loc13))
#loc57 = loc(callsite(#loc16 at #loc13))
#loc58 = loc(callsite(#loc12 at #loc20))
#loc59 = loc(callsite(#loc14 at #loc20))
#loc60 = loc(callsite(#loc15 at #loc20))
#loc61 = loc(callsite(#loc16 at #loc20))
#loc62 = loc(callsite(#loc12 at #loc21))
#loc63 = loc(callsite(#loc16 at #loc21))
#loc64 = loc(callsite(#loc12 at #loc25))
#loc65 = loc(callsite(#loc14 at #loc25))
#loc66 = loc(callsite(#loc15 at #loc25))
#loc67 = loc(callsite(#loc16 at #loc25))
#loc68 = loc(callsite(#loc12 at #loc29))
#loc69 = loc(callsite(#loc14 at #loc29))
#loc70 = loc(callsite(#loc15 at #loc29))
#loc71 = loc(callsite(#loc16 at #loc29))
