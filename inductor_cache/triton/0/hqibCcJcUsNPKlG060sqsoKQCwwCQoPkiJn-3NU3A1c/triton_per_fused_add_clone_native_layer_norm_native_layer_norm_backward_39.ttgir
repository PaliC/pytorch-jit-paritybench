#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":19:0)
#loc1 = loc(unknown)
#loc37 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":50:59)
#loc45 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":58:59)
#loc63 = loc(callsite(#loc1 at #loc37))
#loc67 = loc(callsite(#loc1 at #loc45))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_clone_native_layer_norm_native_layer_norm_backward_39(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":19:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1024xf32, #blocked> loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c768_i32 = arith.constant 768 : i32 loc(#loc1)
    %c5376_i32 = arith.constant 5376 : i32 loc(#loc1)
    %c37632_i32 = arith.constant 37632 : i32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant 7.680000e+02 : f32 loc(#loc1)
    %cst_2 = arith.constant 9.99999997E-7 : f32 loc(#loc1)
    %cst_3 = arith.constant 0.00130208337 : f32 loc(#loc1)
    %cst_4 = arith.constant dense<768> : tensor<1024xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc3)
    %2 = arith.cmpi slt, %1, %cst_4 : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = arith.remsi %0, %c2_i32 : i32 loc(#loc5)
    %4 = arith.divsi %0, %c2_i32 : i32 loc(#loc6)
    %5 = arith.remsi %4, %c2_i32 : i32 loc(#loc7)
    %6 = arith.divsi %0, %c4_i32 : i32 loc(#loc8)
    %7 = arith.muli %0, %c768_i32 : i32 loc(#loc9)
    %8 = tt.splat %7 : i32 -> tensor<1024xi32, #blocked> loc(#loc10)
    %9 = arith.addi %1, %8 : tensor<1024xi32, #blocked> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc11)
    %12 = tt.load %11, %2, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = tt.addptr %13, %9 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc13)
    %15 = tt.load %14, %2, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc14)
    %16 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = tt.addptr %16, %1 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc15)
    %18 = tt.load %17, %2, %cst evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc16)
    %19 = arith.muli %3, %c768_i32 : i32 loc(#loc17)
    %20 = tt.splat %19 : i32 -> tensor<1024xi32, #blocked> loc(#loc18)
    %21 = arith.addi %1, %20 : tensor<1024xi32, #blocked> loc(#loc18)
    %22 = arith.muli %5, %c5376_i32 : i32 loc(#loc19)
    %23 = tt.splat %22 : i32 -> tensor<1024xi32, #blocked> loc(#loc20)
    %24 = arith.addi %21, %23 : tensor<1024xi32, #blocked> loc(#loc20)
    %25 = arith.muli %6, %c37632_i32 : i32 loc(#loc21)
    %26 = tt.splat %25 : i32 -> tensor<1024xi32, #blocked> loc(#loc22)
    %27 = arith.addi %24, %26 : tensor<1024xi32, #blocked> loc(#loc22)
    %28 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc23)
    %29 = tt.addptr %28, %27 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc23)
    %30 = tt.load %29, %2, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc24)
    %31 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc25)
    %32 = tt.addptr %31, %1 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc25)
    %33 = tt.load %32, %2, %cst evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc26)
    %34 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc27)
    %35 = tt.addptr %34, %1 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc27)
    %36 = tt.load %35, %2, %cst evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc28)
    %37 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc29)
    %38 = tt.addptr %37, %1 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc29)
    %39 = tt.load %38, %2, %cst evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc30)
    %40 = arith.addf %15, %18 : tensor<1024xf32, #blocked> loc(#loc31)
    %41 = arith.addf %12, %40 : tensor<1024xf32, #blocked> loc(#loc32)
    %42 = arith.addf %30, %33 : tensor<1024xf32, #blocked> loc(#loc33)
    %43 = arith.addf %41, %42 : tensor<1024xf32, #blocked> loc(#loc34)
    %44 = arith.select %2, %43, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc35)
    %45 = "tt.reduce"(%44) <{axis = 0 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc37)), %arg13: f32 loc(callsite(#loc1 at #loc37))):
      %69 = arith.addf %arg12, %arg13 : f32 loc(#loc69)
      tt.reduce.return %69 : f32 loc(#loc62)
    }) : (tensor<1024xf32, #blocked>) -> f32 loc(#loc62)
    %46 = arith.addf %45, %cst_0 : f32 loc(#loc65)
    %47 = arith.divf %46, %cst_1 : f32 loc(#loc41)
    %48 = tt.splat %47 : f32 -> tensor<1024xf32, #blocked> loc(#loc42)
    %49 = arith.subf %43, %48 : tensor<1024xf32, #blocked> loc(#loc42)
    %50 = arith.mulf %49, %49 : tensor<1024xf32, #blocked> loc(#loc43)
    %51 = arith.select %2, %50, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc44)
    %52 = "tt.reduce"(%51) <{axis = 0 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc45)), %arg13: f32 loc(callsite(#loc1 at #loc45))):
      %69 = arith.addf %arg12, %arg13 : f32 loc(#loc70)
      tt.reduce.return %69 : f32 loc(#loc66)
    }) : (tensor<1024xf32, #blocked>) -> f32 loc(#loc66)
    %53 = arith.addf %52, %cst_0 : f32 loc(#loc68)
    %54 = arith.divf %53, %cst_1 : f32 loc(#loc47)
    %55 = arith.addf %54, %cst_2 : f32 loc(#loc48)
    %56 = tt.extern_elementwise %55 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc49)
    %57 = tt.splat %56 : f32 -> tensor<1024xf32, #blocked> loc(#loc50)
    %58 = arith.mulf %49, %57 : tensor<1024xf32, #blocked> loc(#loc50)
    %59 = arith.mulf %58, %36 : tensor<1024xf32, #blocked> loc(#loc51)
    %60 = arith.addf %59, %39 : tensor<1024xf32, #blocked> loc(#loc52)
    %61 = arith.mulf %56, %cst_3 : f32 loc(#loc53)
    %62 = tt.splat %61 : f32 -> tensor<1xf32, #blocked1> loc(#loc53)
    tt.store %11, %43, %2 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc54)
    %63 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc55)
    %64 = tt.addptr %63, %9 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc55)
    tt.store %64, %58, %2 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc56)
    %65 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc57)
    %66 = tt.addptr %65, %9 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc57)
    tt.store %66, %60, %2 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc58)
    %67 = tt.addptr %arg9, %0 : !tt.ptr<f32>, i32 loc(#loc59)
    %68 = tt.splat %67 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc59)
    tt.store %68, %62 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc60)
    tt.return loc(#loc61)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":24:28)
#loc3 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":27:26)
#loc4 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":29:21)
#loc5 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":32:19)
#loc6 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":33:21)
#loc7 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":33:26)
#loc8 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":34:19)
#loc9 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":35:43)
#loc10 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":35:39)
#loc11 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":35:34)
#loc12 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":35:48)
#loc13 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":36:30)
#loc14 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":36:44)
#loc15 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":37:30)
#loc16 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":37:35)
#loc17 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":38:39)
#loc18 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":38:35)
#loc19 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":38:49)
#loc20 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":38:44)
#loc21 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":38:60)
#loc22 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":38:54)
#loc23 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":38:30)
#loc24 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":38:65)
#loc25 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":39:30)
#loc26 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":39:35)
#loc27 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":40:31)
#loc28 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":40:36)
#loc29 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":41:31)
#loc30 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":41:36)
#loc31 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":42:18)
#loc32 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":43:18)
#loc33 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":44:18)
#loc34 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":45:18)
#loc35 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":49:35)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc40 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":50:45)
#loc41 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":53:20)
#loc42 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":54:19)
#loc43 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":55:20)
#loc44 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":57:35)
#loc46 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":58:45)
#loc47 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":61:20)
#loc48 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":63:20)
#loc49 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":64:28)
#loc50 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":65:20)
#loc51 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":66:20)
#loc52 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":67:20)
#loc53 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":69:20)
#loc54 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":70:48)
#loc55 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":71:25)
#loc56 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":71:46)
#loc57 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":72:25)
#loc58 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":72:46)
#loc59 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":73:25)
#loc60 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":73:37)
#loc61 = loc("inductor_cache/ut/cutkm3ukidrmdmsalxm4btnna4oxkbprmlxool32in2lo5jjshgo.py":73:4)
#loc62 = loc(callsite(#loc36 at #loc37))
#loc64 = loc(callsite(#loc38 at #loc36))
#loc65 = loc(callsite(#loc39 at #loc40))
#loc66 = loc(callsite(#loc36 at #loc45))
#loc68 = loc(callsite(#loc39 at #loc46))
#loc69 = loc(callsite(#loc64 at #loc37))
#loc70 = loc(callsite(#loc64 at #loc45))
