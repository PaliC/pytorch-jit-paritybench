; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_add_mul_pow_sum_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = and i32 %5, 15, !dbg !10
  %7 = zext nneg i32 %6 to i64, !dbg !11
  %8 = getelementptr float, ptr addrspace(1) %1, i64 %7, !dbg !11
  %9 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %8, i1 true) #3, !dbg !12
  %10 = bitcast i32 %9 to float, !dbg !12
  %11 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #3, !dbg !13
  %12 = getelementptr i8, ptr addrspace(1) %2, i64 20, !dbg !14
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 true) #3, !dbg !15
  %14 = getelementptr i8, ptr addrspace(1) %2, i64 40, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 true) #3, !dbg !17
  %16 = getelementptr i8, ptr addrspace(1) %2, i64 60, !dbg !18
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 true) #3, !dbg !19
  %18 = fmul float %10, %10, !dbg !20
  %19 = bitcast float %18 to i32, !dbg !21
  %20 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %19, i32 8, i32 31), !dbg !21
  %21 = bitcast i32 %20 to float, !dbg !21
  %22 = fadd float %18, %21, !dbg !25
  %23 = bitcast float %22 to i32, !dbg !21
  %24 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %23, i32 4, i32 31), !dbg !21
  %25 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !15
  %26 = insertelement <2 x i32> %25, i32 %24, i64 1, !dbg !15
  %27 = bitcast <2 x i32> %26 to <2 x float>, !dbg !15
  %28 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !27
  %29 = bitcast <2 x i32> %28 to <2 x float>, !dbg !27
  %30 = insertelement <2 x float> %29, float %22, i64 1, !dbg !27
  %31 = fadd <2 x float> %30, %27, !dbg !27
  %bc = bitcast <2 x float> %31 to <2 x i32>, !dbg !21
  %32 = extractelement <2 x i32> %bc, i64 1, !dbg !21
  %33 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %32, i32 2, i32 31), !dbg !21
  %34 = insertelement <2 x i32> poison, i32 %15, i64 0, !dbg !17
  %35 = insertelement <2 x i32> %34, i32 %33, i64 1, !dbg !17
  %36 = bitcast <2 x i32> %35 to <2 x float>, !dbg !17
  %37 = fadd <2 x float> %31, %36, !dbg !28
  %bc1 = bitcast <2 x float> %37 to <2 x i32>, !dbg !21
  %38 = extractelement <2 x i32> %bc1, i64 1, !dbg !21
  %39 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %38, i32 1, i32 31), !dbg !21
  %40 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !19
  %41 = insertelement <2 x i32> %40, i32 %39, i64 1, !dbg !19
  %42 = bitcast <2 x i32> %41 to <2 x float>, !dbg !19
  %43 = fadd <2 x float> %37, %42, !dbg !29
  %shift = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !30
  %44 = fadd <2 x float> %43, %shift, !dbg !30
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %45 = and i32 %5, 63, !dbg !32
  %46 = icmp eq i32 %45, 0, !dbg !32
  %bc2 = bitcast <2 x float> %44 to <2 x i32>, !dbg !32
  %47 = extractelement <2 x i32> %bc2, i64 0, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %47, ptr addrspace(1) %0, i1 %46) #3, !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py", directory: "inductor_cache/ck")
!4 = !{ptr @triton_per_fused_add_mul_pow_sum_6, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_mul_pow_sum_6, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_mul_pow_sum_6", linkageName: "triton_per_fused_add_mul_pow_sum_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 30, column: 30, scope: !7)
!12 = !DILocation(line: 30, column: 35, scope: !7)
!13 = !DILocation(line: 31, column: 19, scope: !7)
!14 = !DILocation(line: 33, column: 30, scope: !7)
!15 = !DILocation(line: 33, column: 19, scope: !7)
!16 = !DILocation(line: 35, column: 31, scope: !7)
!17 = !DILocation(line: 35, column: 20, scope: !7)
!18 = !DILocation(line: 37, column: 31, scope: !7)
!19 = !DILocation(line: 37, column: 20, scope: !7)
!20 = !DILocation(line: 39, column: 18, scope: !7)
!21 = !DILocation(line: 267, column: 36, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!24 = !DILocation(line: 41, column: 24, scope: !7)
!25 = !DILocation(line: 256, column: 15, scope: !26, inlinedAt: !24)
!26 = distinct !DILexicalBlockFile(scope: !22, file: !23, discriminator: 0)
!27 = !DILocation(line: 42, column: 18, scope: !7)
!28 = !DILocation(line: 43, column: 19, scope: !7)
!29 = !DILocation(line: 44, column: 20, scope: !7)
!30 = !DILocation(line: 47, column: 20, scope: !7)
!31 = !DILocation(line: 48, column: 4, scope: !7)
!32 = !DILocation(line: 49, column: 71, scope: !7)
!33 = !DILocation(line: 49, column: 4, scope: !7)
