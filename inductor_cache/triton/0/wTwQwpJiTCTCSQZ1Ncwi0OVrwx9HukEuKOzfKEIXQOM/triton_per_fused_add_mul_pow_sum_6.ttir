#loc = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":41:24)
#loc28 = loc(callsite(#loc1 at #loc16))
module {
  tt.func public @triton_per_fused_add_mul_pow_sum_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":19:0)) attributes {noinline = false} {
    %c15_i32 = arith.constant 15 : i32 loc(#loc1)
    %c10_i32 = arith.constant 10 : i32 loc(#loc1)
    %c5_i32 = arith.constant 5 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc3)
    %2 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc4)
    %3 = tt.addptr %2, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc4)
    %4 = tt.load %3 : tensor<1x16x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.addptr %arg2, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc6)
    %6 = tt.load %5 : !tt.ptr<f32> loc(#loc7)
    %7 = tt.addptr %arg2, %c5_i32 : !tt.ptr<f32>, i32 loc(#loc8)
    %8 = tt.load %7 : !tt.ptr<f32> loc(#loc9)
    %9 = tt.addptr %arg2, %c10_i32 : !tt.ptr<f32>, i32 loc(#loc10)
    %10 = tt.load %9 : !tt.ptr<f32> loc(#loc11)
    %11 = tt.addptr %arg2, %c15_i32 : !tt.ptr<f32>, i32 loc(#loc12)
    %12 = tt.load %11 : !tt.ptr<f32> loc(#loc13)
    %13 = arith.mulf %4, %4 : tensor<1x16xf32> loc(#loc14)
    %14 = "tt.reduce"(%13) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc16)), %arg5: f32 loc(callsite(#loc1 at #loc16))):
      %23 = arith.addf %arg4, %arg5 : f32 loc(#loc30)
      tt.reduce.return %23 : f32 loc(#loc27)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc27)
    %15 = tt.expand_dims %14 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc18)
    %16 = arith.addf %6, %8 : f32 loc(#loc19)
    %17 = arith.addf %16, %10 : f32 loc(#loc20)
    %18 = arith.addf %17, %12 : f32 loc(#loc21)
    %19 = tt.splat %18 : f32 -> tensor<1x1xf32> loc(#loc21)
    %20 = arith.addf %19, %15 : tensor<1x1xf32> loc(#loc22)
    gpu.barrier loc(#loc23)
    %21 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc24)
    %22 = tt.splat %21 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc24)
    tt.store %22, %20 : tensor<1x1x!tt.ptr<f32>> loc(#loc25)
    tt.return loc(#loc26)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":26:26)
#loc3 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":26:34)
#loc4 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":30:30)
#loc5 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":30:35)
#loc6 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":31:30)
#loc7 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":31:19)
#loc8 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":33:30)
#loc9 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":33:19)
#loc10 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":35:31)
#loc11 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":35:20)
#loc12 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":37:31)
#loc13 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":37:20)
#loc14 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":39:18)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc18 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":41:27)
#loc19 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":42:18)
#loc20 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":43:19)
#loc21 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":44:20)
#loc22 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":47:20)
#loc23 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":48:4)
#loc24 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":49:28)
#loc25 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":49:71)
#loc26 = loc("inductor_cache/ck/cckmoooxrnim5mymm5i3eb62s6tnx2wvdlave7grinilo5t4fdgu.py":49:4)
#loc27 = loc(callsite(#loc15 at #loc16))
#loc29 = loc(callsite(#loc17 at #loc15))
#loc30 = loc(callsite(#loc29 at #loc16))
