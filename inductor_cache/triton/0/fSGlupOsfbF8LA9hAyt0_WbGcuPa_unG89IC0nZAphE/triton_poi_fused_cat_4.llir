; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 256, !dbg !14
  %14 = srem i32 %12, 64, !dbg !15
  %15 = icmp slt i32 %12, 64, !dbg !16
  %16 = sext i32 %14 to i64, !dbg !17
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !17
  %18 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %17, i1 %15, i32 0, i1 %15, i32 0, i1 %15) #1, !dbg !18
  %19 = extractvalue { i32, i32 } %18, 0, !dbg !18
  %20 = extractvalue { i32, i32 } %18, 1, !dbg !18
  %21 = bitcast i32 %19 to float, !dbg !18
  %22 = bitcast i32 %20 to float, !dbg !18
  %23 = fmul float %21, 2.500000e-01, !dbg !19
  %24 = fmul float %22, 2.500000e-01, !dbg !19
  %25 = and i32 %12, -64, !dbg !20
  %26 = icmp eq i32 %25, 64, !dbg !20
  %27 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !21
  %28 = and i1 %13, %26, !dbg !22
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %27, i1 %28, i32 0, i1 %28, i32 0, i1 %28) #1, !dbg !23
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !23
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !23
  %32 = bitcast i32 %30 to float, !dbg !23
  %33 = bitcast i32 %31 to float, !dbg !23
  %34 = fmul float %32, 2.500000e-01, !dbg !24
  %35 = fmul float %33, 2.500000e-01, !dbg !24
  %36 = icmp eq i32 %25, 128, !dbg !25
  %37 = getelementptr float, ptr addrspace(1) %2, i64 %16, !dbg !26
  %38 = and i1 %13, %36, !dbg !27
  %39 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %37, i1 %38, i32 0, i1 %38, i32 0, i1 %38) #1, !dbg !28
  %40 = extractvalue { i32, i32 } %39, 0, !dbg !28
  %41 = extractvalue { i32, i32 } %39, 1, !dbg !28
  %42 = bitcast i32 %40 to float, !dbg !28
  %43 = bitcast i32 %41 to float, !dbg !28
  %44 = fmul float %42, 2.500000e-01, !dbg !29
  %45 = fmul float %43, 2.500000e-01, !dbg !29
  %46 = icmp sgt i32 %12, 191, !dbg !30
  %47 = getelementptr float, ptr addrspace(1) %3, i64 %16, !dbg !31
  %48 = icmp eq i32 %25, 192, !dbg !32
  %49 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %47, i1 %48, i32 0, i1 %48, i32 0, i1 %48) #1, !dbg !33
  %50 = extractvalue { i32, i32 } %49, 0, !dbg !33
  %51 = extractvalue { i32, i32 } %49, 1, !dbg !33
  %52 = bitcast i32 %50 to float, !dbg !33
  %53 = bitcast i32 %51 to float, !dbg !33
  %54 = fmul float %52, 2.500000e-01, !dbg !34
  %55 = fmul float %53, 2.500000e-01, !dbg !34
  %56 = select i1 %46, float %54, float 0.000000e+00, !dbg !35
  %57 = select i1 %46, float %55, float 0.000000e+00, !dbg !35
  %58 = select i1 %36, float %44, float %56, !dbg !36
  %59 = select i1 %36, float %45, float %57, !dbg !36
  %60 = select i1 %26, float %34, float %58, !dbg !36
  %61 = select i1 %26, float %35, float %59, !dbg !36
  %62 = select i1 %15, float %23, float %60, !dbg !36
  %63 = select i1 %15, float %24, float %61, !dbg !36
  %64 = sext i32 %12 to i64, !dbg !37
  %65 = getelementptr float, ptr addrspace(1) %4, i64 %64, !dbg !37
  %66 = bitcast float %62 to i32, !dbg !38
  %67 = bitcast float %63 to i32, !dbg !38
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %66, i32 %67, ptr addrspace(1) %65, i1 %13) #1, !dbg !38
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnva7xjaeddzru6kg2o67lkoogld7zfmqdls4ehqlm2z72w5bc7u.py", directory: "inductor_cache/nv")
!4 = !{ptr @triton_poi_fused_cat_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_4", linkageName: "triton_poi_fused_cat_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 31, column: 18, scope: !7)
!17 = !DILocation(line: 32, column: 30, scope: !7)
!18 = !DILocation(line: 32, column: 35, scope: !7)
!19 = !DILocation(line: 34, column: 18, scope: !7)
!20 = !DILocation(line: 40, column: 20, scope: !7)
!21 = !DILocation(line: 41, column: 31, scope: !7)
!22 = !DILocation(line: 41, column: 44, scope: !7)
!23 = !DILocation(line: 41, column: 36, scope: !7)
!24 = !DILocation(line: 43, column: 20, scope: !7)
!25 = !DILocation(line: 49, column: 20, scope: !7)
!26 = !DILocation(line: 50, column: 31, scope: !7)
!27 = !DILocation(line: 50, column: 44, scope: !7)
!28 = !DILocation(line: 50, column: 36, scope: !7)
!29 = !DILocation(line: 52, column: 20, scope: !7)
!30 = !DILocation(line: 55, column: 20, scope: !7)
!31 = !DILocation(line: 58, column: 31, scope: !7)
!32 = !DILocation(line: 58, column: 44, scope: !7)
!33 = !DILocation(line: 58, column: 36, scope: !7)
!34 = !DILocation(line: 60, column: 20, scope: !7)
!35 = !DILocation(line: 62, column: 35, scope: !7)
!36 = !DILocation(line: 0, scope: !7)
!37 = !DILocation(line: 66, column: 25, scope: !7)
!38 = !DILocation(line: 66, column: 37, scope: !7)
!39 = !DILocation(line: 66, column: 4, scope: !7)
