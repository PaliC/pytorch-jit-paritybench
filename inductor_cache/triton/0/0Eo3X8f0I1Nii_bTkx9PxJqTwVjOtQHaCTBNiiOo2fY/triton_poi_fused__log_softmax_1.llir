; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused__log_softmax_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 6, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 62, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 64, !dbg !14
  %11 = sdiv i32 %9, 4, !dbg !15
  %12 = sext i32 %9 to i64, !dbg !16
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !16
  %14 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %13, i1 %10) #2, !dbg !17
  %15 = shl nsw i32 %11, 2, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %10) #2, !dbg !20
  %19 = bitcast i32 %18 to float, !dbg !20
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %10) #2, !dbg !20
  %21 = bitcast i32 %20 to float, !dbg !20
  %22 = or disjoint i32 %15, 1, !dbg !21
  %23 = sext i32 %22 to i64, !dbg !22
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !22
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %10) #2, !dbg !23
  %26 = bitcast i32 %25 to float, !dbg !23
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %10) #2, !dbg !23
  %28 = bitcast i32 %27 to float, !dbg !23
  %29 = or disjoint i32 %15, 2, !dbg !24
  %30 = sext i32 %29 to i64, !dbg !25
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !25
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %10) #2, !dbg !26
  %33 = bitcast i32 %32 to float, !dbg !26
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %10) #2, !dbg !26
  %35 = bitcast i32 %34 to float, !dbg !26
  %36 = or disjoint i32 %15, 3, !dbg !27
  %37 = sext i32 %36 to i64, !dbg !28
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !28
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %10) #2, !dbg !29
  %40 = bitcast i32 %39 to float, !dbg !29
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %10) #2, !dbg !29
  %42 = bitcast i32 %41 to float, !dbg !29
  %43 = fmul float %19, 0x3FF7154760000000, !dbg !30
  %44 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %43) #2, !dbg !30
  %45 = fmul float %21, 0x3FF7154760000000, !dbg !30
  %46 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %45) #2, !dbg !30
  %47 = fmul float %26, 0x3FF7154760000000, !dbg !31
  %48 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %47) #2, !dbg !31
  %49 = fmul float %28, 0x3FF7154760000000, !dbg !31
  %50 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %49) #2, !dbg !31
  %51 = fadd float %44, %48, !dbg !32
  %52 = fadd float %46, %50, !dbg !32
  %53 = fmul float %33, 0x3FF7154760000000, !dbg !33
  %54 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %53) #2, !dbg !33
  %55 = fmul float %35, 0x3FF7154760000000, !dbg !33
  %56 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %55) #2, !dbg !33
  %57 = fadd float %51, %54, !dbg !34
  %58 = fadd float %52, %56, !dbg !34
  %59 = fmul float %40, 0x3FF7154760000000, !dbg !35
  %60 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %59) #2, !dbg !35
  %61 = fmul float %42, 0x3FF7154760000000, !dbg !35
  %62 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %61) #2, !dbg !35
  %63 = fadd float %57, %60, !dbg !36
  %64 = fadd float %58, %62, !dbg !36
  %65 = fcmp olt float %63, 0x3810000000000000, !dbg !37
  %66 = fmul float %63, 0x4160000000000000, !dbg !37
  %.02.i = select i1 %65, float %66, float %63, !dbg !37
  %i.i.0.i = select i1 %65, float -2.300000e+01, float 0.000000e+00, !dbg !37
  %67 = bitcast float %.02.i to i32, !dbg !37
  %68 = add i32 %67, -1059760811, !dbg !37
  %69 = and i32 %68, -8388608, !dbg !37
  %70 = sub i32 %67, %69, !dbg !37
  %71 = bitcast i32 %70 to float, !dbg !37
  %72 = sitofp i32 %69 to float, !dbg !37
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not.i = icmp eq i32 %73, 0, !dbg !37
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %72, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !37
  %75 = tail call float @llvm.nvvm.fma.rn.f(float %72, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !37
  %.08.i = select i1 %.not.i, float %75, float %74, !dbg !37
  %76 = fadd float %71, -1.000000e+00, !dbg !37
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not1.i = icmp eq i32 %77, 0, !dbg !37
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %76, float 0x3FC2073EC0000000) #2, !dbg !37
  %79 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %76, float 0x3FC2073EC0000000) #2, !dbg !37
  %.010.i = select i1 %.not1.i, float %79, float %78, !dbg !37
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not2.i = icmp eq i32 %80, 0, !dbg !37
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %76, float 0xBFBF19B980000000) #2, !dbg !37
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %76, float 0xBFBF19B980000000) #2, !dbg !37
  %.011.i = select i1 %.not2.i, float %82, float %81, !dbg !37
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not3.i = icmp eq i32 %83, 0, !dbg !37
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %76, float 0x3FC1E52AA0000000) #2, !dbg !37
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %76, float 0x3FC1E52AA0000000) #2, !dbg !37
  %.012.i = select i1 %.not3.i, float %85, float %84, !dbg !37
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not4.i = icmp eq i32 %86, 0, !dbg !37
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %76, float 0xBFC55B1720000000) #2, !dbg !37
  %88 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %76, float 0xBFC55B1720000000) #2, !dbg !37
  %.09.i = select i1 %.not4.i, float %88, float %87, !dbg !37
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not5.i = icmp eq i32 %89, 0, !dbg !37
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %76, float 0x3FC99DA160000000) #2, !dbg !37
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %76, float 0x3FC99DA160000000) #2, !dbg !37
  %.05.i = select i1 %.not5.i, float %91, float %90, !dbg !37
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not6.i = icmp eq i32 %92, 0, !dbg !37
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %76, float 0xBFCFFFE440000000) #2, !dbg !37
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %76, float 0xBFCFFFE440000000) #2, !dbg !37
  %.01.i = select i1 %.not6.i, float %94, float %93, !dbg !37
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not7.i = icmp eq i32 %95, 0, !dbg !37
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %76, float 0x3FD5554F00000000) #2, !dbg !37
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %76, float 0x3FD5554F00000000) #2, !dbg !37
  %.0.i = select i1 %.not7.i, float %97, float %96, !dbg !37
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not8.i = icmp eq i32 %98, 0, !dbg !37
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %76, float -5.000000e-01) #2, !dbg !37
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %76, float -5.000000e-01) #2, !dbg !37
  %.07.i = select i1 %.not8.i, float %100, float %99, !dbg !37
  %101 = fmul float %76, %.07.i, !dbg !37
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not9.i = icmp eq i32 %102, 0, !dbg !37
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %101, float %76, float %76) #2, !dbg !37
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %101, float %76, float %76) #2, !dbg !37
  %.06.i = select i1 %.not9.i, float %104, float %103, !dbg !37
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not10.i = icmp eq i32 %105, 0, !dbg !37
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !37
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !37
  %.04.i = select i1 %.not10.i, float %107, float %106, !dbg !37
  %108 = icmp ugt i32 %67, 2139095039, !dbg !37
  br i1 %108, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !37

__nv_fmaf_rn.exit.i.i:                            ; preds = %3
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not11.i = icmp eq i32 %109, 0, !dbg !37
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !37
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !37
  %.03.i = select i1 %.not11.i, float %111, float %110, !dbg !37
  br label %__nv_logf.exit, !dbg !37

__nv_logf.exit:                                   ; preds = %3, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %3 ], !dbg !37
  %112 = fcmp olt float %64, 0x3810000000000000, !dbg !37
  %113 = fmul float %64, 0x4160000000000000, !dbg !37
  %.02.i1 = select i1 %112, float %113, float %64, !dbg !37
  %i.i.0.i2 = select i1 %112, float -2.300000e+01, float 0.000000e+00, !dbg !37
  %114 = bitcast float %.02.i1 to i32, !dbg !37
  %115 = add i32 %114, -1059760811, !dbg !37
  %116 = and i32 %115, -8388608, !dbg !37
  %117 = sub i32 %114, %116, !dbg !37
  %118 = bitcast i32 %117 to float, !dbg !37
  %119 = sitofp i32 %116 to float, !dbg !37
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not.i3 = icmp eq i32 %120, 0, !dbg !37
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %119, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !37
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %119, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !37
  %.08.i4 = select i1 %.not.i3, float %122, float %121, !dbg !37
  %123 = fadd float %118, -1.000000e+00, !dbg !37
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not1.i5 = icmp eq i32 %124, 0, !dbg !37
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %123, float 0x3FC2073EC0000000) #2, !dbg !37
  %126 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %123, float 0x3FC2073EC0000000) #2, !dbg !37
  %.010.i6 = select i1 %.not1.i5, float %126, float %125, !dbg !37
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not2.i7 = icmp eq i32 %127, 0, !dbg !37
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %123, float 0xBFBF19B980000000) #2, !dbg !37
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %123, float 0xBFBF19B980000000) #2, !dbg !37
  %.011.i8 = select i1 %.not2.i7, float %129, float %128, !dbg !37
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not3.i9 = icmp eq i32 %130, 0, !dbg !37
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %123, float 0x3FC1E52AA0000000) #2, !dbg !37
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %123, float 0x3FC1E52AA0000000) #2, !dbg !37
  %.012.i10 = select i1 %.not3.i9, float %132, float %131, !dbg !37
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not4.i11 = icmp eq i32 %133, 0, !dbg !37
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %123, float 0xBFC55B1720000000) #2, !dbg !37
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %123, float 0xBFC55B1720000000) #2, !dbg !37
  %.09.i12 = select i1 %.not4.i11, float %135, float %134, !dbg !37
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not5.i13 = icmp eq i32 %136, 0, !dbg !37
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %123, float 0x3FC99DA160000000) #2, !dbg !37
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %123, float 0x3FC99DA160000000) #2, !dbg !37
  %.05.i14 = select i1 %.not5.i13, float %138, float %137, !dbg !37
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not6.i15 = icmp eq i32 %139, 0, !dbg !37
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %123, float 0xBFCFFFE440000000) #2, !dbg !37
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %123, float 0xBFCFFFE440000000) #2, !dbg !37
  %.01.i16 = select i1 %.not6.i15, float %141, float %140, !dbg !37
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not7.i17 = icmp eq i32 %142, 0, !dbg !37
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %123, float 0x3FD5554F00000000) #2, !dbg !37
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %123, float 0x3FD5554F00000000) #2, !dbg !37
  %.0.i18 = select i1 %.not7.i17, float %144, float %143, !dbg !37
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not8.i19 = icmp eq i32 %145, 0, !dbg !37
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %123, float -5.000000e-01) #2, !dbg !37
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %123, float -5.000000e-01) #2, !dbg !37
  %.07.i20 = select i1 %.not8.i19, float %147, float %146, !dbg !37
  %148 = fmul float %123, %.07.i20, !dbg !37
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not9.i21 = icmp eq i32 %149, 0, !dbg !37
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float %123, float %123) #2, !dbg !37
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %148, float %123, float %123) #2, !dbg !37
  %.06.i22 = select i1 %.not9.i21, float %151, float %150, !dbg !37
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not10.i23 = icmp eq i32 %152, 0, !dbg !37
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !37
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !37
  %.04.i24 = select i1 %.not10.i23, float %154, float %153, !dbg !37
  %155 = icmp ugt i32 %114, 2139095039, !dbg !37
  br i1 %155, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !37

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !37
  %.not11.i28 = icmp eq i32 %156, 0, !dbg !37
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !37
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !37
  %.03.i29 = select i1 %.not11.i28, float %158, float %157, !dbg !37
  br label %__nv_logf.exit30, !dbg !37

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !37
  %159 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !37
  %r.i.1.i = select i1 %159, float 0xFFF0000000000000, float %r.i.0.i, !dbg !37
  %160 = extractvalue { i32, i32 } %14, 1, !dbg !17
  %161 = bitcast i32 %160 to float, !dbg !17
  %162 = extractvalue { i32, i32 } %14, 0, !dbg !17
  %163 = bitcast i32 %162 to float, !dbg !17
  %164 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !37
  %r.i.1.i26 = select i1 %164, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !37
  %165 = fsub float %163, %r.i.1.i, !dbg !38
  %166 = fsub float %161, %r.i.1.i26, !dbg !38
  %167 = getelementptr float, ptr addrspace(1) %1, i64 %12, !dbg !39
  %168 = bitcast float %165 to i32, !dbg !40
  %169 = bitcast float %166 to i32, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %168, i32 %169, ptr addrspace(1) %167, i1 %10) #2, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3cvutfgxjjuxbotpufx5syvzbzicc66binfft7mjvi64ccttgiv.py", directory: "inductor_cache/3c")
!4 = !{ptr @triton_poi_fused__log_softmax_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__log_softmax_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__log_softmax_1", linkageName: "triton_poi_fused__log_softmax_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 32, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 37, scope: !7)
!21 = !DILocation(line: 28, column: 34, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 41, scope: !7)
!24 = !DILocation(line: 29, column: 34, scope: !7)
!25 = !DILocation(line: 29, column: 30, scope: !7)
!26 = !DILocation(line: 29, column: 41, scope: !7)
!27 = !DILocation(line: 30, column: 34, scope: !7)
!28 = !DILocation(line: 30, column: 30, scope: !7)
!29 = !DILocation(line: 30, column: 41, scope: !7)
!30 = !DILocation(line: 31, column: 23, scope: !7)
!31 = !DILocation(line: 32, column: 23, scope: !7)
!32 = !DILocation(line: 33, column: 18, scope: !7)
!33 = !DILocation(line: 34, column: 23, scope: !7)
!34 = !DILocation(line: 35, column: 18, scope: !7)
!35 = !DILocation(line: 36, column: 24, scope: !7)
!36 = !DILocation(line: 37, column: 19, scope: !7)
!37 = !DILocation(line: 38, column: 24, scope: !7)
!38 = !DILocation(line: 39, column: 19, scope: !7)
!39 = !DILocation(line: 40, column: 25, scope: !7)
!40 = !DILocation(line: 40, column: 37, scope: !7)
!41 = !DILocation(line: 40, column: 4, scope: !7)
