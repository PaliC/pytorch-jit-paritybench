; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_abs_add_cosh_log_mul_pow_reciprocal_sum_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %9 = shl i32 %8, 6, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 1, !dbg !12
  %12 = and i32 %11, 62, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %14 = icmp slt i32 %13, 64, !dbg !14
  %15 = srem i32 %13, 4, !dbg !15
  %.frozen = freeze i32 %13, !dbg !16
  %16 = sdiv i32 %.frozen, 16, !dbg !16
  %17 = mul i32 %16, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %17, !dbg !17
  %18 = sext i32 %15 to i64, !dbg !18
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !18
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 %14) #4, !dbg !19
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !19
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !19
  %23 = bitcast i32 %21 to float, !dbg !19
  %24 = bitcast i32 %22 to float, !dbg !19
  %25 = shl i32 %16, 6, !dbg !20
  %26 = add i32 %25, %.decomposed, !dbg !21
  %27 = sext i32 %26 to i64, !dbg !22
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !22
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 %14) #4, !dbg !23
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !23
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !23
  %32 = bitcast i32 %30 to float, !dbg !23
  %33 = bitcast i32 %31 to float, !dbg !23
  %34 = add i32 %26, 16, !dbg !24
  %35 = sext i32 %34 to i64, !dbg !25
  %36 = getelementptr float, ptr addrspace(1) %1, i64 %35, !dbg !25
  %37 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %36, i1 %14) #4, !dbg !26
  %38 = extractvalue { i32, i32 } %37, 0, !dbg !26
  %39 = extractvalue { i32, i32 } %37, 1, !dbg !26
  %40 = bitcast i32 %38 to float, !dbg !26
  %41 = bitcast i32 %39 to float, !dbg !26
  %42 = add i32 %26, 32, !dbg !27
  %43 = sext i32 %42 to i64, !dbg !28
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !28
  %45 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %44, i1 %14) #4, !dbg !29
  %46 = extractvalue { i32, i32 } %45, 0, !dbg !29
  %47 = extractvalue { i32, i32 } %45, 1, !dbg !29
  %48 = bitcast i32 %46 to float, !dbg !29
  %49 = bitcast i32 %47 to float, !dbg !29
  %50 = add i32 %26, 48, !dbg !30
  %51 = sext i32 %50 to i64, !dbg !31
  %52 = getelementptr float, ptr addrspace(1) %1, i64 %51, !dbg !31
  %53 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %52, i1 %14) #4, !dbg !32
  %54 = extractvalue { i32, i32 } %53, 0, !dbg !32
  %55 = extractvalue { i32, i32 } %53, 1, !dbg !32
  %56 = bitcast i32 %54 to float, !dbg !32
  %57 = bitcast i32 %55 to float, !dbg !32
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #4, !dbg !33
  %59 = bitcast i32 %58 to float, !dbg !33
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #4, !dbg !34
  %61 = bitcast i32 %60 to float, !dbg !34
  %62 = fmul float %23, %32, !dbg !35
  %63 = fmul float %24, %33, !dbg !35
  %64 = fmul float %23, %40, !dbg !36
  %65 = fmul float %24, %41, !dbg !36
  %66 = fadd float %62, %64, !dbg !37
  %67 = fadd float %63, %65, !dbg !37
  %68 = fmul float %23, %48, !dbg !38
  %69 = fmul float %24, %49, !dbg !38
  %70 = fadd float %66, %68, !dbg !39
  %71 = fadd float %67, %69, !dbg !39
  %72 = fmul float %23, %56, !dbg !40
  %73 = fmul float %24, %57, !dbg !40
  %74 = fadd float %70, %72, !dbg !41
  %75 = fadd float %71, %73, !dbg !41
  %76 = fadd float %74, %59, !dbg !42
  %77 = fadd float %75, %59, !dbg !42
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not.i = icmp eq i32 %78, 0, !dbg !43
  %79 = tail call float @llvm.nvvm.fabs.ftz.f(float %76) #4, !dbg !43
  %80 = tail call float @llvm.nvvm.fabs.f(float %76) #4, !dbg !43
  %.01.i = select i1 %.not.i, float %80, float %79, !dbg !43
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not1.i = icmp eq i32 %81, 0, !dbg !43
  %82 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.01.i, float 0x3FF7154760000000) #4, !dbg !43
  %83 = tail call float @llvm.nvvm.mul.rn.f(float %.01.i, float 0x3FF7154760000000) #4, !dbg !43
  %.06.i = select i1 %.not1.i, float %83, float %82, !dbg !43
  %84 = tail call float @llvm.nvvm.trunc.f(float %.06.i) #4, !dbg !43
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not2.i = icmp eq i32 %85, 0, !dbg !43
  %86 = tail call float @llvm.nvvm.fabs.ftz.f(float %84) #4, !dbg !43
  %87 = tail call float @llvm.nvvm.fabs.f(float %84) #4, !dbg !43
  %.04.i = select i1 %.not2.i, float %87, float %86, !dbg !43
  %88 = fcmp ogt float %.04.i, 1.260000e+02, !dbg !43
  %89 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %84), !dbg !43
  %j.i.0.i = select i1 %88, float %89, float %84, !dbg !43
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not3.i = icmp eq i32 %90, 0, !dbg !43
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.0.i, float 0xBFE62E4300000000, float %.01.i) #4, !dbg !43
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.0.i, float 0xBFE62E4300000000, float %.01.i) #4, !dbg !43
  %.03.i = select i1 %.not3.i, float %92, float %91, !dbg !43
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not4.i = icmp eq i32 %93, 0, !dbg !43
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.0.i, float 0x3E205C6100000000, float %.03.i) #4, !dbg !43
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.0.i, float 0x3E205C6100000000, float %.03.i) #4, !dbg !43
  %.02.i = select i1 %.not4.i, float %95, float %94, !dbg !43
  %96 = fmul float %.02.i, 0x3FF7154760000000, !dbg !43
  %97 = fadd float %j.i.0.i, 0x4168000FA0000000, !dbg !43
  %98 = bitcast float %97 to i32, !dbg !43
  %99 = shl i32 %98, 23, !dbg !43
  %100 = bitcast i32 %99 to float, !dbg !43
  %101 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %96) #4, !dbg !43
  %102 = fmul float %101, %100, !dbg !43
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not5.i = icmp eq i32 %103, 0, !dbg !43
  br i1 %.not5.i, label %106, label %104, !dbg !43

104:                                              ; preds = %7
  %105 = tail call float @llvm.nvvm.div.approx.ftz.f(float 1.250000e-01, float %102) #4, !dbg !43
  br label %__nv_coshf.exit, !dbg !43

106:                                              ; preds = %7
  %107 = tail call float @llvm.nvvm.div.approx.f(float 1.250000e-01, float %102) #4, !dbg !43
  br label %__nv_coshf.exit, !dbg !43

__nv_coshf.exit:                                  ; preds = %104, %106
  %.05.i = phi float [ %105, %104 ], [ %107, %106 ], !dbg !43
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not6.i = icmp eq i32 %108, 0, !dbg !43
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.000000e+00, float %102, float %.05.i) #4, !dbg !43
  %110 = tail call float @llvm.nvvm.fma.rn.f(float 2.000000e+00, float %102, float %.05.i) #4, !dbg !43
  %.0.i = select i1 %.not6.i, float %110, float %109, !dbg !43
  %111 = fcmp oge float %.01.i, 9.000000e+01, !dbg !43
  %z.0.i = select i1 %111, float 0x7FF0000000000000, float %.0.i, !dbg !43
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not.i1 = icmp eq i32 %112, 0, !dbg !43
  %113 = tail call float @llvm.nvvm.fabs.ftz.f(float %77) #4, !dbg !43
  %114 = tail call float @llvm.nvvm.fabs.f(float %77) #4, !dbg !43
  %.01.i2 = select i1 %.not.i1, float %114, float %113, !dbg !43
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not1.i3 = icmp eq i32 %115, 0, !dbg !43
  %116 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.01.i2, float 0x3FF7154760000000) #4, !dbg !43
  %117 = tail call float @llvm.nvvm.mul.rn.f(float %.01.i2, float 0x3FF7154760000000) #4, !dbg !43
  %.06.i4 = select i1 %.not1.i3, float %117, float %116, !dbg !43
  %118 = tail call float @llvm.nvvm.trunc.f(float %.06.i4) #4, !dbg !43
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not2.i5 = icmp eq i32 %119, 0, !dbg !43
  %120 = tail call float @llvm.nvvm.fabs.ftz.f(float %118) #4, !dbg !43
  %121 = tail call float @llvm.nvvm.fabs.f(float %118) #4, !dbg !43
  %.04.i6 = select i1 %.not2.i5, float %121, float %120, !dbg !43
  %122 = fcmp ogt float %.04.i6, 1.260000e+02, !dbg !43
  %123 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %118), !dbg !43
  %j.i.0.i7 = select i1 %122, float %123, float %118, !dbg !43
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not3.i8 = icmp eq i32 %124, 0, !dbg !43
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.0.i7, float 0xBFE62E4300000000, float %.01.i2) #4, !dbg !43
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.0.i7, float 0xBFE62E4300000000, float %.01.i2) #4, !dbg !43
  %.03.i9 = select i1 %.not3.i8, float %126, float %125, !dbg !43
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not4.i10 = icmp eq i32 %127, 0, !dbg !43
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.0.i7, float 0x3E205C6100000000, float %.03.i9) #4, !dbg !43
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.0.i7, float 0x3E205C6100000000, float %.03.i9) #4, !dbg !43
  %.02.i11 = select i1 %.not4.i10, float %129, float %128, !dbg !43
  %130 = fmul float %.02.i11, 0x3FF7154760000000, !dbg !43
  %131 = fadd float %j.i.0.i7, 0x4168000FA0000000, !dbg !43
  %132 = bitcast float %131 to i32, !dbg !43
  %133 = shl i32 %132, 23, !dbg !43
  %134 = bitcast i32 %133 to float, !dbg !43
  %135 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %130) #4, !dbg !43
  %136 = fmul float %135, %134, !dbg !43
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not5.i12 = icmp eq i32 %137, 0, !dbg !43
  br i1 %.not5.i12, label %140, label %138, !dbg !43

138:                                              ; preds = %__nv_coshf.exit
  %139 = tail call float @llvm.nvvm.div.approx.ftz.f(float 1.250000e-01, float %136) #4, !dbg !43
  br label %__nv_coshf.exit17, !dbg !43

140:                                              ; preds = %__nv_coshf.exit
  %141 = tail call float @llvm.nvvm.div.approx.f(float 1.250000e-01, float %136) #4, !dbg !43
  br label %__nv_coshf.exit17, !dbg !43

__nv_coshf.exit17:                                ; preds = %138, %140
  %.05.i13 = phi float [ %139, %138 ], [ %141, %140 ], !dbg !43
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not6.i14 = icmp eq i32 %142, 0, !dbg !43
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.000000e+00, float %136, float %.05.i13) #4, !dbg !43
  %144 = tail call float @llvm.nvvm.fma.rn.f(float 2.000000e+00, float %136, float %.05.i13) #4, !dbg !43
  %.0.i15 = select i1 %.not6.i14, float %144, float %143, !dbg !43
  %145 = fcmp oge float %.01.i2, 9.000000e+01, !dbg !43
  %z.0.i16 = select i1 %145, float 0x7FF0000000000000, float %.0.i15, !dbg !43
  %146 = fmul float %z.0.i, %z.0.i, !dbg !44
  %147 = fmul float %z.0.i16, %z.0.i16, !dbg !44
  %148 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %146) #4, !dbg !45
  %149 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %147) #4, !dbg !45
  %150 = fmul float %148, %61, !dbg !46
  %151 = fmul float %149, %61, !dbg !46
  %152 = fadd float %150, 1.000000e+00, !dbg !47
  %153 = fadd float %151, 1.000000e+00, !dbg !47
  %154 = tail call float @llvm.fabs.f32(float %152), !dbg !48
  %155 = tail call float @llvm.fabs.f32(float %153), !dbg !48
  %156 = fcmp olt float %154, 0x3810000000000000, !dbg !49
  %157 = fmul float %154, 0x4160000000000000, !dbg !49
  %.02.i18 = select i1 %156, float %157, float %154, !dbg !49
  %i.i.0.i = select i1 %156, float -2.300000e+01, float 0.000000e+00, !dbg !49
  %158 = bitcast float %.02.i18 to i32, !dbg !49
  %159 = add i32 %158, -1059760811, !dbg !49
  %160 = and i32 %159, -8388608, !dbg !49
  %161 = sub i32 %158, %160, !dbg !49
  %162 = bitcast i32 %161 to float, !dbg !49
  %163 = sitofp i32 %160 to float, !dbg !49
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not.i19 = icmp eq i32 %164, 0, !dbg !49
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %163, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !49
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %163, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !49
  %.08.i = select i1 %.not.i19, float %166, float %165, !dbg !49
  %167 = fadd float %162, -1.000000e+00, !dbg !49
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not1.i20 = icmp eq i32 %168, 0, !dbg !49
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %167, float 0x3FC2073EC0000000) #4, !dbg !49
  %170 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %167, float 0x3FC2073EC0000000) #4, !dbg !49
  %.010.i = select i1 %.not1.i20, float %170, float %169, !dbg !49
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not2.i21 = icmp eq i32 %171, 0, !dbg !49
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %167, float 0xBFBF19B980000000) #4, !dbg !49
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %167, float 0xBFBF19B980000000) #4, !dbg !49
  %.011.i = select i1 %.not2.i21, float %173, float %172, !dbg !49
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not3.i22 = icmp eq i32 %174, 0, !dbg !49
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %167, float 0x3FC1E52AA0000000) #4, !dbg !49
  %176 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %167, float 0x3FC1E52AA0000000) #4, !dbg !49
  %.012.i = select i1 %.not3.i22, float %176, float %175, !dbg !49
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not4.i23 = icmp eq i32 %177, 0, !dbg !49
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %167, float 0xBFC55B1720000000) #4, !dbg !49
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %167, float 0xBFC55B1720000000) #4, !dbg !49
  %.09.i = select i1 %.not4.i23, float %179, float %178, !dbg !49
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not5.i24 = icmp eq i32 %180, 0, !dbg !49
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %167, float 0x3FC99DA160000000) #4, !dbg !49
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %167, float 0x3FC99DA160000000) #4, !dbg !49
  %.05.i25 = select i1 %.not5.i24, float %182, float %181, !dbg !49
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not6.i26 = icmp eq i32 %183, 0, !dbg !49
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i25, float %167, float 0xBFCFFFE440000000) #4, !dbg !49
  %185 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i25, float %167, float 0xBFCFFFE440000000) #4, !dbg !49
  %.01.i27 = select i1 %.not6.i26, float %185, float %184, !dbg !49
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not7.i = icmp eq i32 %186, 0, !dbg !49
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i27, float %167, float 0x3FD5554F00000000) #4, !dbg !49
  %188 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i27, float %167, float 0x3FD5554F00000000) #4, !dbg !49
  %.0.i28 = select i1 %.not7.i, float %188, float %187, !dbg !49
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not8.i = icmp eq i32 %189, 0, !dbg !49
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i28, float %167, float -5.000000e-01) #4, !dbg !49
  %191 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i28, float %167, float -5.000000e-01) #4, !dbg !49
  %.07.i = select i1 %.not8.i, float %191, float %190, !dbg !49
  %192 = fmul float %167, %.07.i, !dbg !49
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not9.i = icmp eq i32 %193, 0, !dbg !49
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %192, float %167, float %167) #4, !dbg !49
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %192, float %167, float %167) #4, !dbg !49
  %.06.i29 = select i1 %.not9.i, float %195, float %194, !dbg !49
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not10.i = icmp eq i32 %196, 0, !dbg !49
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i29) #4, !dbg !49
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i29) #4, !dbg !49
  %.04.i30 = select i1 %.not10.i, float %198, float %197, !dbg !49
  %199 = icmp ugt i32 %158, 2139095039, !dbg !49
  br i1 %199, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !49

__nv_fmaf_rn.exit.i.i:                            ; preds = %__nv_coshf.exit17
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not11.i = icmp eq i32 %200, 0, !dbg !49
  %201 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i18, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !49
  %202 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i18, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !49
  %.03.i31 = select i1 %.not11.i, float %202, float %201, !dbg !49
  br label %__nv_logf.exit, !dbg !49

__nv_logf.exit:                                   ; preds = %__nv_coshf.exit17, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i31, %__nv_fmaf_rn.exit.i.i ], [ %.04.i30, %__nv_coshf.exit17 ], !dbg !49
  %203 = fcmp olt float %155, 0x3810000000000000, !dbg !49
  %204 = fmul float %155, 0x4160000000000000, !dbg !49
  %.02.i32 = select i1 %203, float %204, float %155, !dbg !49
  %i.i.0.i33 = select i1 %203, float -2.300000e+01, float 0.000000e+00, !dbg !49
  %205 = bitcast float %.02.i32 to i32, !dbg !49
  %206 = add i32 %205, -1059760811, !dbg !49
  %207 = and i32 %206, -8388608, !dbg !49
  %208 = sub i32 %205, %207, !dbg !49
  %209 = bitcast i32 %208 to float, !dbg !49
  %210 = sitofp i32 %207 to float, !dbg !49
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not.i34 = icmp eq i32 %211, 0, !dbg !49
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %210, float 0x3E80000000000000, float %i.i.0.i33) #4, !dbg !49
  %213 = tail call float @llvm.nvvm.fma.rn.f(float %210, float 0x3E80000000000000, float %i.i.0.i33) #4, !dbg !49
  %.08.i35 = select i1 %.not.i34, float %213, float %212, !dbg !49
  %214 = fadd float %209, -1.000000e+00, !dbg !49
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not1.i36 = icmp eq i32 %215, 0, !dbg !49
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %214, float 0x3FC2073EC0000000) #4, !dbg !49
  %217 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %214, float 0x3FC2073EC0000000) #4, !dbg !49
  %.010.i37 = select i1 %.not1.i36, float %217, float %216, !dbg !49
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not2.i38 = icmp eq i32 %218, 0, !dbg !49
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i37, float %214, float 0xBFBF19B980000000) #4, !dbg !49
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i37, float %214, float 0xBFBF19B980000000) #4, !dbg !49
  %.011.i39 = select i1 %.not2.i38, float %220, float %219, !dbg !49
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not3.i40 = icmp eq i32 %221, 0, !dbg !49
  %222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i39, float %214, float 0x3FC1E52AA0000000) #4, !dbg !49
  %223 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i39, float %214, float 0x3FC1E52AA0000000) #4, !dbg !49
  %.012.i41 = select i1 %.not3.i40, float %223, float %222, !dbg !49
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not4.i42 = icmp eq i32 %224, 0, !dbg !49
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i41, float %214, float 0xBFC55B1720000000) #4, !dbg !49
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i41, float %214, float 0xBFC55B1720000000) #4, !dbg !49
  %.09.i43 = select i1 %.not4.i42, float %226, float %225, !dbg !49
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not5.i44 = icmp eq i32 %227, 0, !dbg !49
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i43, float %214, float 0x3FC99DA160000000) #4, !dbg !49
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i43, float %214, float 0x3FC99DA160000000) #4, !dbg !49
  %.05.i45 = select i1 %.not5.i44, float %229, float %228, !dbg !49
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not6.i46 = icmp eq i32 %230, 0, !dbg !49
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i45, float %214, float 0xBFCFFFE440000000) #4, !dbg !49
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i45, float %214, float 0xBFCFFFE440000000) #4, !dbg !49
  %.01.i47 = select i1 %.not6.i46, float %232, float %231, !dbg !49
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not7.i48 = icmp eq i32 %233, 0, !dbg !49
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i47, float %214, float 0x3FD5554F00000000) #4, !dbg !49
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i47, float %214, float 0x3FD5554F00000000) #4, !dbg !49
  %.0.i49 = select i1 %.not7.i48, float %235, float %234, !dbg !49
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not8.i50 = icmp eq i32 %236, 0, !dbg !49
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i49, float %214, float -5.000000e-01) #4, !dbg !49
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i49, float %214, float -5.000000e-01) #4, !dbg !49
  %.07.i51 = select i1 %.not8.i50, float %238, float %237, !dbg !49
  %239 = fmul float %214, %.07.i51, !dbg !49
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not9.i52 = icmp eq i32 %240, 0, !dbg !49
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %239, float %214, float %214) #4, !dbg !49
  %242 = tail call float @llvm.nvvm.fma.rn.f(float %239, float %214, float %214) #4, !dbg !49
  %.06.i53 = select i1 %.not9.i52, float %242, float %241, !dbg !49
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not10.i54 = icmp eq i32 %243, 0, !dbg !49
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i35, float 0x3FE62E4300000000, float %.06.i53) #4, !dbg !49
  %245 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i35, float 0x3FE62E4300000000, float %.06.i53) #4, !dbg !49
  %.04.i55 = select i1 %.not10.i54, float %245, float %244, !dbg !49
  %246 = icmp ugt i32 %205, 2139095039, !dbg !49
  br i1 %246, label %__nv_fmaf_rn.exit.i.i58, label %__nv_logf.exit61, !dbg !49

__nv_fmaf_rn.exit.i.i58:                          ; preds = %__nv_logf.exit
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not11.i59 = icmp eq i32 %247, 0, !dbg !49
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i32, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !49
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i32, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !49
  %.03.i60 = select i1 %.not11.i59, float %249, float %248, !dbg !49
  br label %__nv_logf.exit61, !dbg !49

__nv_logf.exit61:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i58
  %r.i.0.i56 = phi float [ %.03.i60, %__nv_fmaf_rn.exit.i.i58 ], [ %.04.i55, %__nv_logf.exit ], !dbg !49
  %250 = fcmp oeq float %.02.i18, 0.000000e+00, !dbg !49
  %r.i.1.i = select i1 %250, float 0xFFF0000000000000, float %r.i.0.i, !dbg !49
  %251 = fcmp oeq float %.02.i32, 0.000000e+00, !dbg !49
  %r.i.1.i57 = select i1 %251, float 0xFFF0000000000000, float %r.i.0.i56, !dbg !49
  %252 = sext i32 %13 to i64, !dbg !50
  %253 = getelementptr float, ptr addrspace(1) %4, i64 %252, !dbg !50
  %254 = bitcast float %76 to i32, !dbg !51
  %255 = bitcast float %77 to i32, !dbg !51
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %254, i32 %255, ptr addrspace(1) %253, i1 %14) #4, !dbg !51
  %256 = getelementptr float, ptr addrspace(1) %5, i64 %252, !dbg !52
  %257 = bitcast float %r.i.1.i to i32, !dbg !53
  %258 = bitcast float %r.i.1.i57 to i32, !dbg !53
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %257, i32 %258, ptr addrspace(1) %256, i1 %14) #4, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.approx.ftz.f(float, float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.approx.f(float, float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6izywpogqim5aza4nqk2kel4e5szaqkystmexjc7lvbioayosaj.py", directory: "inductor_cache/6i")
!4 = !{ptr @triton_poi_fused_abs_add_cosh_log_mul_pow_reciprocal_sum_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_abs_add_cosh_log_mul_pow_reciprocal_sum_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_abs_add_cosh_log_mul_pow_reciprocal_sum_2", linkageName: "triton_poi_fused_abs_add_cosh_log_mul_pow_reciprocal_sum_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 29, column: 38, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 43, scope: !7)
!24 = !DILocation(line: 30, column: 40, scope: !7)
!25 = !DILocation(line: 30, column: 30, scope: !7)
!26 = !DILocation(line: 30, column: 48, scope: !7)
!27 = !DILocation(line: 31, column: 40, scope: !7)
!28 = !DILocation(line: 31, column: 30, scope: !7)
!29 = !DILocation(line: 31, column: 48, scope: !7)
!30 = !DILocation(line: 32, column: 40, scope: !7)
!31 = !DILocation(line: 32, column: 30, scope: !7)
!32 = !DILocation(line: 32, column: 48, scope: !7)
!33 = !DILocation(line: 33, column: 20, scope: !7)
!34 = !DILocation(line: 35, column: 20, scope: !7)
!35 = !DILocation(line: 37, column: 18, scope: !7)
!36 = !DILocation(line: 38, column: 18, scope: !7)
!37 = !DILocation(line: 39, column: 18, scope: !7)
!38 = !DILocation(line: 40, column: 18, scope: !7)
!39 = !DILocation(line: 41, column: 18, scope: !7)
!40 = !DILocation(line: 42, column: 19, scope: !7)
!41 = !DILocation(line: 43, column: 19, scope: !7)
!42 = !DILocation(line: 44, column: 20, scope: !7)
!43 = !DILocation(line: 45, column: 27, scope: !7)
!44 = !DILocation(line: 46, column: 20, scope: !7)
!45 = !DILocation(line: 48, column: 20, scope: !7)
!46 = !DILocation(line: 51, column: 20, scope: !7)
!47 = !DILocation(line: 52, column: 20, scope: !7)
!48 = !DILocation(line: 53, column: 24, scope: !7)
!49 = !DILocation(line: 54, column: 24, scope: !7)
!50 = !DILocation(line: 55, column: 25, scope: !7)
!51 = !DILocation(line: 55, column: 37, scope: !7)
!52 = !DILocation(line: 56, column: 25, scope: !7)
!53 = !DILocation(line: 56, column: 37, scope: !7)
!54 = !DILocation(line: 56, column: 4, scope: !7)
