//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_linalg_vector_norm_mean_sub_2 // -- Begin function triton_per_fused_linalg_vector_norm_mean_sub_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_linalg_vector_norm_mean_sub_2
.visible .entry triton_per_fused_linalg_vector_norm_mean_sub_2(
	.param .u64 .ptr .global .align 1 triton_per_fused_linalg_vector_norm_mean_sub_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_linalg_vector_norm_mean_sub_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_linalg_vector_norm_mean_sub_2_param_2,
	.param .u32 triton_per_fused_linalg_vector_norm_mean_sub_2_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<15>;
	.reg .b32 	%r<38>;
	.reg .f32 	%f<31>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd10, [triton_per_fused_linalg_vector_norm_mean_sub_2_param_0];
	ld.param.u64 	%rd11, [triton_per_fused_linalg_vector_norm_mean_sub_2_param_1];
$L__tmp0:
	.loc	1 26 34                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:26:34
	mov.u32 	%r16, %tid.x;
	.loc	1 29 19                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:29:19
	and.b32  	%r17, %r16, 15;
	ld.param.u64 	%rd9, [triton_per_fused_linalg_vector_norm_mean_sub_2_param_2];
	.loc	1 31 44                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:31:44
	shl.b32 	%r18, %r16, 2;
	and.b32  	%r19, %r18, 192;
	.loc	1 31 41                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:31:41
	or.b32  	%r20, %r19, %r17;
	.loc	1 31 30                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:31:30
	mul.wide.u32 	%rd12, %r20, 4;
	add.s64 	%rd13, %rd10, %rd12;
	add.s64 	%rd1, %rd13, 1024;
	mov.pred 	%p1, -1;
	.loc	1 31 49                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:31:49
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r1;
	.loc	1 32 30                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:32:30
	add.s64 	%rd2, %rd11, %rd12;
	.loc	1 32 43                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:32:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r2;
	.loc	1 33 30                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:33:30
	add.s64 	%rd3, %rd13, 1088;
	.loc	1 33 49                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:33:49
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r3;
	.loc	1 34 30                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:34:30
	add.s64 	%rd4, %rd2, 64;
	.loc	1 34 48                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:34:48
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r4;
	.loc	1 35 30                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:35:30
	add.s64 	%rd5, %rd13, 1152;
	.loc	1 35 49                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:35:49
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r5;
	.loc	1 36 31                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:36:31
	add.s64 	%rd6, %rd2, 128;
	.loc	1 36 49                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:36:49
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r6;
	.loc	1 37 31                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:37:31
	add.s64 	%rd7, %rd13, 1216;
	.loc	1 37 50                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:37:50
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r7;
	.loc	1 38 31                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:38:31
	add.s64 	%rd8, %rd2, 192;
	.loc	1 38 49                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:38:49
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r8;
	.loc	1 39 18                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:39:18
	sub.f32 	%f9, %f1, %f2;
	.loc	1 41 18                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:41:18
	sub.f32 	%f10, %f3, %f4;
	.loc	1 42 18                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:42:18
	mul.f32 	%f11, %f10, %f10;
	.loc	1 43 18                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:43:18
	fma.rn.f32 	%f12, %f9, %f9, %f11;
	.loc	1 44 19                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:44:19
	sub.f32 	%f13, %f5, %f6;
	.loc	1 46 19                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:46:19
	fma.rn.f32 	%f14, %f13, %f13, %f12;
	.loc	1 47 20                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:47:20
	sub.f32 	%f15, %f7, %f8;
	.loc	1 49 20                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:49:20
	fma.rn.f32 	%f16, %f15, %f15, %f14;
	.loc	1 50 27                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:50:27
	sqrt.approx.ftz.f32 	%f17, %f16;
	.loc	1 26 34                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:26:34
	and.b32  	%r21, %r16, 31;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r22, %f17;
	shfl.sync.bfly.b32	%r23, %r22, 16, 31, -1;
	mov.b32 	%f18, %r23;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f19;
	shfl.sync.bfly.b32	%r25, %r24, 8, 31, -1;
	mov.b32 	%f20, %r25;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r26, %f21;
	shfl.sync.bfly.b32	%r27, %r26, 4, 31, -1;
	mov.b32 	%f22, %r27;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f23;
	shfl.sync.bfly.b32	%r29, %r28, 2, 31, -1;
	mov.b32 	%f24, %r29;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f25;
	shfl.sync.bfly.b32	%r31, %r30, 1, 31, -1;
	mov.b32 	%f26, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p9, %r21, 0;
	shr.u32 	%r32, %r16, 3;
	and.b32  	%r33, %r32, 4;
	mov.u32 	%r34, global_smem;
	add.s32 	%r9, %r34, %r33;
	mov.b32 	%r10, %f27;
	// begin inline asm
	@%p9 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r16, 2;
	add.s32 	%r12, %r34, %r18;
	// begin inline asm
	@%p10 ld.shared.b32 %r11, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r11;
	shfl.sync.bfly.b32	%r35, %r11, 1, 31, -1;
	mov.b32 	%f29, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r36, %r16, 1;
	setp.eq.b32 	%p13, %r36, 1;
	not.pred 	%p14, %p13;
	and.pred  	%p11, %p10, %p14;
	mov.b32 	%r14, %f30;
	// begin inline asm
	@%p11 st.shared.b32 [ %r12 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r15, [global_smem];
$L__tmp2:
	.loc	1 53 68                         // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:53:68
	and.b32  	%r37, %r16, 63;
	setp.eq.s32 	%p12, %r37, 0;
	// begin inline asm
	@%p12 st.global.b32 [ %rd9 + 0 ], { %r15 };
	// end inline asm
	.loc	1 53 4                          // ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py:53:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/t6/ct6ctixwlvfm5vphyy52tb7dijo3pggmknb6tbw6ncue7l5d3m63.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 191                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 54
.b8 99
.b8 116
.b8 105
.b8 120
.b8 119
.b8 108
.b8 118
.b8 102
.b8 109
.b8 53
.b8 118
.b8 112
.b8 104
.b8 121
.b8 121
.b8 53
.b8 50
.b8 116
.b8 98
.b8 55
.b8 100
.b8 105
.b8 106
.b8 111
.b8 51
.b8 112
.b8 103
.b8 103
.b8 109
.b8 107
.b8 110
.b8 98
.b8 54
.b8 116
.b8 98
.b8 119
.b8 54
.b8 110
.b8 99
.b8 117
.b8 101
.b8 55
.b8 108
.b8 53
.b8 100
.b8 51
.b8 109
.b8 54
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 54
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x31 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 108
.b8 105
.b8 110
.b8 97
.b8 108
.b8 103
.b8 95
.b8 118
.b8 101
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x94:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 52                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
