#loc = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":36:24)
#loc20 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":39:24)
#loc23 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":42:26)
#loc35 = loc(callsite(#loc1 at #loc16))
#loc38 = loc(callsite(#loc1 at #loc20))
#loc40 = loc(callsite(#loc1 at #loc23))
module {
  tt.func public @triton_per_fused_add_mul_stack_sub_sum_20(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":19:0), %arg3: !tt.ptr<f32> loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":19:0), %arg4: i32 loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":19:0), %arg5: i32 loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":19:0)) attributes {noinline = false} {
    %c5_i32 = arith.constant 5 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999997E-7> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x2xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2xi32> -> tensor<1x2xi32> loc(#loc5)
    %5 = arith.muli %0, %c2_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x2xi32> loc(#loc7)
    %7 = arith.addi %4, %6 : tensor<1x2xi32> loc(#loc7)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x2x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x2x!tt.ptr<f32>>, tensor<1x2xi32> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x2xi1> loc(#loc9)
    %11 = tt.load %9, %10, %cst_0 : tensor<1x2x!tt.ptr<f32>> loc(#loc9)
    %12 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2x!tt.ptr<f32>> loc(#loc10)
    %13 = tt.addptr %12, %7 : tensor<1x2x!tt.ptr<f32>>, tensor<1x2xi32> loc(#loc10)
    %14 = tt.load %13, %10, %cst_0 : tensor<1x2x!tt.ptr<f32>> loc(#loc11)
    %15 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x2x!tt.ptr<f32>> loc(#loc12)
    %16 = tt.addptr %15, %7 : tensor<1x2x!tt.ptr<f32>>, tensor<1x2xi32> loc(#loc12)
    %17 = tt.load %16, %10, %cst_0 : tensor<1x2x!tt.ptr<f32>> loc(#loc13)
    %18 = arith.select %10, %11, %cst_0 : tensor<1x2xi1>, tensor<1x2xf32> loc(#loc14)
    %19 = "tt.reduce"(%18) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc16)), %arg7: f32 loc(callsite(#loc1 at #loc16))):
      %35 = arith.addf %arg6, %arg7 : f32 loc(#loc41)
      tt.reduce.return %35 : f32 loc(#loc34)
    }) : (tensor<1x2xf32>) -> tensor<1xf32> loc(#loc34)
    %20 = tt.expand_dims %19 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc18)
    %21 = arith.select %10, %14, %cst_0 : tensor<1x2xi1>, tensor<1x2xf32> loc(#loc19)
    %22 = "tt.reduce"(%21) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc20)), %arg7: f32 loc(callsite(#loc1 at #loc20))):
      %35 = arith.addf %arg6, %arg7 : f32 loc(#loc42)
      tt.reduce.return %35 : f32 loc(#loc37)
    }) : (tensor<1x2xf32>) -> tensor<1xf32> loc(#loc37)
    %23 = tt.expand_dims %22 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc21)
    %24 = arith.select %10, %17, %cst_0 : tensor<1x2xi1>, tensor<1x2xf32> loc(#loc22)
    %25 = "tt.reduce"(%24) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc23)), %arg7: f32 loc(callsite(#loc1 at #loc23))):
      %35 = arith.addf %arg6, %arg7 : f32 loc(#loc43)
      tt.reduce.return %35 : f32 loc(#loc39)
    }) : (tensor<1x2xf32>) -> tensor<1xf32> loc(#loc39)
    %26 = tt.expand_dims %25 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc24)
    %27 = arith.addf %20, %cst : tensor<1x1xf32> loc(#loc25)
    %28 = arith.mulf %23, %26 : tensor<1x1xf32> loc(#loc26)
    %29 = tt.extern_elementwise %28 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc27)
    %30 = arith.addf %29, %cst : tensor<1x1xf32> loc(#loc28)
    %31 = arith.divf %27, %30 : tensor<1x1xf32> loc(#loc29)
    %32 = arith.muli %0, %c5_i32 : i32 loc(#loc30)
    %33 = tt.addptr %arg3, %32 : !tt.ptr<f32>, i32 loc(#loc31)
    %34 = tt.splat %33 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc31)
    tt.store %34, %31, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc32)
    tt.return loc(#loc33)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":23:28)
#loc3 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":25:21)
#loc4 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":26:26)
#loc5 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":26:34)
#loc6 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":31:37)
#loc7 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":31:35)
#loc8 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":31:30)
#loc9 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":31:42)
#loc10 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":32:30)
#loc11 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":32:42)
#loc12 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":33:31)
#loc13 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":33:43)
#loc14 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":35:33)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc18 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":36:27)
#loc19 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":38:33)
#loc21 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":39:27)
#loc22 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":41:35)
#loc24 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":42:29)
#loc25 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":44:19)
#loc26 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":45:19)
#loc27 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":46:27)
#loc28 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":47:20)
#loc29 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":48:20)
#loc30 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":49:27)
#loc31 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":49:25)
#loc32 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":49:39)
#loc33 = loc("inductor_cache/7i/c7i667oq44lt437lh7ijd2fawdbunfuyskqyecrkmgjsq6sf3bka.py":49:4)
#loc34 = loc(callsite(#loc15 at #loc16))
#loc36 = loc(callsite(#loc17 at #loc15))
#loc37 = loc(callsite(#loc15 at #loc20))
#loc39 = loc(callsite(#loc15 at #loc23))
#loc41 = loc(callsite(#loc36 at #loc16))
#loc42 = loc(callsite(#loc36 at #loc20))
#loc43 = loc(callsite(#loc36 at #loc23))
