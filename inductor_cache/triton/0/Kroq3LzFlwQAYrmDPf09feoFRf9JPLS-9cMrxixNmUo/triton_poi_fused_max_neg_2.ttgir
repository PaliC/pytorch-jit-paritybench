#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_neg_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<64xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<64xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1> : tensor<64xi64, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<2> : tensor<64xi64, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<3> : tensor<64xi64, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<64> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<1> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<2> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<3> : tensor<64xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_4 : tensor<64xi32, #blocked> loc(#loc6)
    %6 = arith.muli %4, %cst_5 : tensor<64xi32, #blocked> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc8)
    %9 = tt.load %8, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc9)
    %10 = arith.addi %6, %cst_6 : tensor<64xi32, #blocked> loc(#loc10)
    %11 = tt.addptr %7, %10 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc11)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = arith.addi %6, %cst_7 : tensor<64xi32, #blocked> loc(#loc13)
    %14 = tt.addptr %7, %13 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc14)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc15)
    %16 = arith.addi %6, %cst_8 : tensor<64xi32, #blocked> loc(#loc16)
    %17 = tt.addptr %7, %16 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc17)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc18)
    %19 = arith.subf %cst, %9 : tensor<64xf32, #blocked> loc(#loc19)
    %20 = arith.subf %cst, %12 : tensor<64xf32, #blocked> loc(#loc20)
    %21 = arith.cmpf ogt, %19, %20 : tensor<64xf32, #blocked> loc(#loc21)
    %22 = arith.cmpf oeq, %19, %20 : tensor<64xf32, #blocked> loc(#loc22)
    %23 = arith.cmpf une, %19, %19 : tensor<64xf32, #blocked> loc(#loc23)
    %24 = arith.cmpf une, %20, %20 : tensor<64xf32, #blocked> loc(#loc24)
    %25 = arith.cmpi ugt, %23, %24 : tensor<64xi1, #blocked> loc(#loc25)
    %26 = arith.ori %21, %25 : tensor<64xi1, #blocked> loc(#loc26)
    %27 = arith.andi %23, %24 : tensor<64xi1, #blocked> loc(#loc27)
    %28 = arith.ori %22, %27 : tensor<64xi1, #blocked> loc(#loc28)
    %29 = arith.ori %26, %28 : tensor<64xi1, #blocked> loc(#loc29)
    %30 = arith.select %29, %19, %20 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc30)
    %31 = arith.select %29, %cst_0, %cst_1 : tensor<64xi1, #blocked>, tensor<64xi64, #blocked> loc(#loc31)
    %32 = arith.subf %cst, %15 : tensor<64xf32, #blocked> loc(#loc32)
    %33 = arith.cmpf ogt, %30, %32 : tensor<64xf32, #blocked> loc(#loc33)
    %34 = arith.cmpf oeq, %30, %32 : tensor<64xf32, #blocked> loc(#loc34)
    %35 = arith.cmpf une, %30, %30 : tensor<64xf32, #blocked> loc(#loc35)
    %36 = arith.cmpf une, %32, %32 : tensor<64xf32, #blocked> loc(#loc36)
    %37 = arith.cmpi ugt, %35, %36 : tensor<64xi1, #blocked> loc(#loc37)
    %38 = arith.ori %33, %37 : tensor<64xi1, #blocked> loc(#loc38)
    %39 = arith.andi %35, %36 : tensor<64xi1, #blocked> loc(#loc39)
    %40 = arith.ori %34, %39 : tensor<64xi1, #blocked> loc(#loc40)
    %41 = arith.cmpi slt, %31, %cst_2 : tensor<64xi64, #blocked> loc(#loc41)
    %42 = arith.andi %40, %41 : tensor<64xi1, #blocked> loc(#loc42)
    %43 = arith.ori %38, %42 : tensor<64xi1, #blocked> loc(#loc43)
    %44 = arith.select %43, %30, %32 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc44)
    %45 = arith.select %43, %31, %cst_2 : tensor<64xi1, #blocked>, tensor<64xi64, #blocked> loc(#loc45)
    %46 = arith.subf %cst, %18 : tensor<64xf32, #blocked> loc(#loc46)
    %47 = arith.cmpf ogt, %44, %46 : tensor<64xf32, #blocked> loc(#loc47)
    %48 = arith.cmpf oeq, %44, %46 : tensor<64xf32, #blocked> loc(#loc48)
    %49 = arith.cmpf une, %44, %44 : tensor<64xf32, #blocked> loc(#loc49)
    %50 = arith.cmpf une, %46, %46 : tensor<64xf32, #blocked> loc(#loc50)
    %51 = arith.cmpi ugt, %49, %50 : tensor<64xi1, #blocked> loc(#loc51)
    %52 = arith.ori %47, %51 : tensor<64xi1, #blocked> loc(#loc52)
    %53 = arith.andi %49, %50 : tensor<64xi1, #blocked> loc(#loc53)
    %54 = arith.ori %48, %53 : tensor<64xi1, #blocked> loc(#loc54)
    %55 = arith.cmpi slt, %45, %cst_3 : tensor<64xi64, #blocked> loc(#loc55)
    %56 = arith.andi %54, %55 : tensor<64xi1, #blocked> loc(#loc56)
    %57 = arith.ori %52, %56 : tensor<64xi1, #blocked> loc(#loc57)
    %58 = arith.select %57, %45, %cst_3 : tensor<64xi1, #blocked>, tensor<64xi64, #blocked> loc(#loc58)
    %59 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<64x!tt.ptr<i64>, #blocked> loc(#loc59)
    %60 = tt.addptr %59, %4 : tensor<64x!tt.ptr<i64>, #blocked>, tensor<64xi32, #blocked> loc(#loc59)
    tt.store %60, %58, %5 : tensor<64x!tt.ptr<i64>, #blocked> loc(#loc60)
    tt.return loc(#loc61)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":21:28)
#loc3 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":21:33)
#loc4 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":22:36)
#loc5 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":22:23)
#loc6 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":23:21)
#loc7 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":25:32)
#loc8 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":25:30)
#loc9 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":25:37)
#loc10 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":26:34)
#loc11 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":26:30)
#loc12 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":26:41)
#loc13 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":27:35)
#loc14 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":27:31)
#loc15 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":27:42)
#loc16 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":28:35)
#loc17 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":28:31)
#loc18 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":28:42)
#loc19 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":29:12)
#loc20 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":30:12)
#loc21 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":31:18)
#loc22 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":32:19)
#loc23 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":33:19)
#loc24 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":34:19)
#loc25 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":35:18)
#loc26 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":36:18)
#loc27 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":37:19)
#loc28 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":38:19)
#loc29 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":43:19)
#loc30 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":44:34)
#loc31 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":45:35)
#loc32 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":46:13)
#loc33 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":47:20)
#loc34 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":48:21)
#loc35 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":49:21)
#loc36 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":50:21)
#loc37 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":51:20)
#loc38 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":52:20)
#loc39 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":53:20)
#loc40 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":54:20)
#loc41 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":56:20)
#loc42 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":57:20)
#loc43 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":58:20)
#loc44 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":59:35)
#loc45 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":60:35)
#loc46 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":61:13)
#loc47 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":62:20)
#loc48 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":63:21)
#loc49 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":64:21)
#loc50 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":65:21)
#loc51 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":66:20)
#loc52 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":67:20)
#loc53 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":68:20)
#loc54 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":69:20)
#loc55 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":71:20)
#loc56 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":72:20)
#loc57 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":73:20)
#loc58 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":75:35)
#loc59 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":76:25)
#loc60 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":76:37)
#loc61 = loc("inductor_cache/ov/cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py":76:4)
