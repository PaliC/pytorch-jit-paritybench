; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_neg_2(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 6, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 62, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 64, !dbg !14
  %11 = shl i32 %9, 2, !dbg !15
  %12 = or disjoint i32 %11, 4, !dbg !15
  %13 = sext i32 %11 to i64, !dbg !16
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !16
  %15 = sext i32 %12 to i64, !dbg !16
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !16
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 %10) #1, !dbg !17
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %10) #1, !dbg !17
  %19 = or disjoint i32 %11, 1, !dbg !18
  %20 = or disjoint i32 %11, 5, !dbg !18
  %21 = sext i32 %19 to i64, !dbg !19
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !19
  %23 = sext i32 %20 to i64, !dbg !19
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !19
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %10) #1, !dbg !20
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %10) #1, !dbg !20
  %27 = or disjoint i32 %11, 2, !dbg !21
  %28 = or disjoint i32 %11, 6, !dbg !21
  %29 = sext i32 %27 to i64, !dbg !22
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !22
  %31 = sext i32 %28 to i64, !dbg !22
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !22
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %10) #1, !dbg !23
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %10) #1, !dbg !23
  %35 = or disjoint i32 %11, 3, !dbg !24
  %36 = or disjoint i32 %11, 7, !dbg !24
  %37 = sext i32 %35 to i64, !dbg !25
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !25
  %39 = sext i32 %36 to i64, !dbg !25
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !25
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %10) #1, !dbg !26
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %10) #1, !dbg !26
  %43 = insertelement <8 x i32> poison, i32 %42, i64 0, !dbg !26
  %44 = insertelement <8 x i32> %43, i32 %41, i64 1, !dbg !26
  %45 = insertelement <8 x i32> %44, i32 %34, i64 2, !dbg !26
  %46 = insertelement <8 x i32> %45, i32 %33, i64 3, !dbg !26
  %47 = insertelement <8 x i32> %46, i32 %26, i64 4, !dbg !26
  %48 = insertelement <8 x i32> %47, i32 %25, i64 5, !dbg !26
  %49 = insertelement <8 x i32> %48, i32 %18, i64 6, !dbg !26
  %50 = insertelement <8 x i32> %49, i32 %17, i64 7, !dbg !26
  %51 = bitcast <8 x i32> %50 to <8 x float>, !dbg !26
  %52 = fsub <8 x float> zeroinitializer, %51, !dbg !27
  %53 = extractelement <8 x float> %52, i64 5, !dbg !28
  %54 = extractelement <8 x float> %52, i64 7, !dbg !28
  %55 = fcmp ogt float %54, %53, !dbg !29
  %56 = extractelement <8 x float> %52, i64 4, !dbg !28
  %57 = extractelement <8 x float> %52, i64 6, !dbg !28
  %58 = fcmp ogt float %57, %56, !dbg !29
  %59 = fcmp oeq float %54, %53, !dbg !30
  %60 = fcmp oeq float %57, %56, !dbg !30
  %61 = fcmp uno <8 x float> %52, zeroinitializer, !dbg !31
  %62 = extractelement <8 x i1> %61, i64 5, !dbg !32
  %63 = xor i1 %62, true, !dbg !32
  %64 = extractelement <8 x i1> %61, i64 7, !dbg !32
  %65 = and i1 %64, %63, !dbg !32
  %66 = extractelement <8 x i1> %61, i64 4, !dbg !32
  %67 = xor i1 %66, true, !dbg !32
  %68 = extractelement <8 x i1> %61, i64 6, !dbg !32
  %69 = and i1 %68, %67, !dbg !32
  %70 = or i1 %55, %65, !dbg !33
  %71 = or i1 %58, %69, !dbg !33
  %72 = and i1 %64, %62, !dbg !34
  %73 = and i1 %68, %66, !dbg !34
  %74 = or i1 %59, %72, !dbg !35
  %75 = or i1 %60, %73, !dbg !35
  %76 = or i1 %70, %74, !dbg !36
  %77 = or i1 %71, %75, !dbg !36
  %78 = select i1 %76, float %54, float %53, !dbg !28
  %79 = select i1 %77, float %57, float %56, !dbg !28
  %not. = xor i1 %76, true, !dbg !37
  %80 = zext i1 %not. to i64, !dbg !37
  %not.1 = xor i1 %77, true, !dbg !37
  %81 = zext i1 %not.1 to i64, !dbg !37
  %82 = extractelement <8 x float> %52, i64 3, !dbg !38
  %83 = fcmp ogt float %78, %82, !dbg !39
  %84 = extractelement <8 x float> %52, i64 2, !dbg !38
  %85 = fcmp ogt float %79, %84, !dbg !39
  %86 = fcmp oeq float %78, %82, !dbg !40
  %87 = fcmp oeq float %79, %84, !dbg !40
  %88 = fcmp uno float %78, 0.000000e+00, !dbg !41
  %89 = fcmp uno float %79, 0.000000e+00, !dbg !41
  %90 = extractelement <8 x i1> %61, i64 3, !dbg !42
  %91 = xor i1 %90, true, !dbg !42
  %92 = and i1 %88, %91, !dbg !42
  %93 = extractelement <8 x i1> %61, i64 2, !dbg !42
  %94 = xor i1 %93, true, !dbg !42
  %95 = and i1 %89, %94, !dbg !42
  %96 = or i1 %83, %92, !dbg !43
  %97 = or i1 %85, %95, !dbg !43
  %98 = and i1 %90, %88, !dbg !44
  %99 = and i1 %93, %89, !dbg !44
  %100 = or i1 %86, %98, !dbg !45
  %101 = or i1 %87, %99, !dbg !45
  %102 = or i1 %96, %100, !dbg !46
  %103 = or i1 %97, %101, !dbg !46
  %104 = select i1 %102, float %78, float %82, !dbg !38
  %105 = select i1 %103, float %79, float %84, !dbg !38
  %106 = select i1 %102, i64 %80, i64 2, !dbg !47
  %107 = select i1 %103, i64 %81, i64 2, !dbg !47
  %108 = extractelement <8 x float> %52, i64 1, !dbg !48
  %109 = fcmp ogt float %104, %108, !dbg !49
  %110 = extractelement <8 x float> %52, i64 0, !dbg !48
  %111 = fcmp ogt float %105, %110, !dbg !49
  %112 = fcmp oeq float %104, %108, !dbg !48
  %113 = fcmp oeq float %105, %110, !dbg !48
  %114 = fcmp uno float %104, 0.000000e+00, !dbg !50
  %115 = fcmp uno float %105, 0.000000e+00, !dbg !50
  %116 = extractelement <8 x i1> %61, i64 1, !dbg !51
  %117 = xor i1 %116, true, !dbg !51
  %118 = and i1 %114, %117, !dbg !51
  %119 = extractelement <8 x i1> %61, i64 0, !dbg !51
  %120 = xor i1 %119, true, !dbg !51
  %121 = and i1 %115, %120, !dbg !51
  %122 = or i1 %109, %118, !dbg !52
  %123 = or i1 %111, %121, !dbg !52
  %124 = and i1 %116, %114, !dbg !53
  %125 = and i1 %119, %115, !dbg !53
  %126 = or i1 %112, %124, !dbg !54
  %127 = or i1 %113, %125, !dbg !54
  %128 = or i1 %122, %126, !dbg !55
  %129 = or i1 %123, %127, !dbg !55
  %130 = select i1 %128, i64 %106, i64 3, !dbg !56
  %131 = select i1 %129, i64 %107, i64 3, !dbg !56
  %132 = sext i32 %9 to i64, !dbg !57
  %133 = getelementptr i64, ptr addrspace(1) %1, i64 %132, !dbg !57
  tail call void asm sideeffect "@$3 st.global.v2.b64 [ $2 + 0 ], { $0, $1 };", "l,l,l,b"(i64 %130, i64 %131, ptr addrspace(1) %133, i1 %10) #1, !dbg !58
  ret void, !dbg !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cov2bhrmc6rio2hdai6wvxcf2zldhmndxppmjhgq3ohugir5t7lw.py", directory: "inductor_cache/ov")
!4 = !{ptr @triton_poi_fused_max_neg_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_neg_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_neg_2", linkageName: "triton_poi_fused_max_neg_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 26, column: 34, scope: !7)
!19 = !DILocation(line: 26, column: 30, scope: !7)
!20 = !DILocation(line: 26, column: 41, scope: !7)
!21 = !DILocation(line: 27, column: 35, scope: !7)
!22 = !DILocation(line: 27, column: 31, scope: !7)
!23 = !DILocation(line: 27, column: 42, scope: !7)
!24 = !DILocation(line: 28, column: 35, scope: !7)
!25 = !DILocation(line: 28, column: 31, scope: !7)
!26 = !DILocation(line: 28, column: 42, scope: !7)
!27 = !DILocation(line: 61, column: 13, scope: !7)
!28 = !DILocation(line: 44, column: 34, scope: !7)
!29 = !DILocation(line: 31, column: 18, scope: !7)
!30 = !DILocation(line: 32, column: 19, scope: !7)
!31 = !DILocation(line: 65, column: 21, scope: !7)
!32 = !DILocation(line: 35, column: 18, scope: !7)
!33 = !DILocation(line: 36, column: 18, scope: !7)
!34 = !DILocation(line: 37, column: 19, scope: !7)
!35 = !DILocation(line: 38, column: 19, scope: !7)
!36 = !DILocation(line: 43, column: 19, scope: !7)
!37 = !DILocation(line: 45, column: 35, scope: !7)
!38 = !DILocation(line: 59, column: 35, scope: !7)
!39 = !DILocation(line: 47, column: 20, scope: !7)
!40 = !DILocation(line: 48, column: 21, scope: !7)
!41 = !DILocation(line: 49, column: 21, scope: !7)
!42 = !DILocation(line: 51, column: 20, scope: !7)
!43 = !DILocation(line: 52, column: 20, scope: !7)
!44 = !DILocation(line: 53, column: 20, scope: !7)
!45 = !DILocation(line: 54, column: 20, scope: !7)
!46 = !DILocation(line: 58, column: 20, scope: !7)
!47 = !DILocation(line: 60, column: 35, scope: !7)
!48 = !DILocation(line: 63, column: 21, scope: !7)
!49 = !DILocation(line: 62, column: 20, scope: !7)
!50 = !DILocation(line: 64, column: 21, scope: !7)
!51 = !DILocation(line: 66, column: 20, scope: !7)
!52 = !DILocation(line: 67, column: 20, scope: !7)
!53 = !DILocation(line: 68, column: 20, scope: !7)
!54 = !DILocation(line: 69, column: 20, scope: !7)
!55 = !DILocation(line: 73, column: 20, scope: !7)
!56 = !DILocation(line: 75, column: 35, scope: !7)
!57 = !DILocation(line: 76, column: 25, scope: !7)
!58 = !DILocation(line: 76, column: 37, scope: !7)
!59 = !DILocation(line: 76, column: 4, scope: !7)
