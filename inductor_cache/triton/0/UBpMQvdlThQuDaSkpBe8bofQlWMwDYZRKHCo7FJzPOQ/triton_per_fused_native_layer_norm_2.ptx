//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_native_layer_norm_2 // -- Begin function triton_per_fused_native_layer_norm_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_native_layer_norm_2
.visible .entry triton_per_fused_native_layer_norm_2(
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_2_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_2_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_2_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_2_param_5,
	.param .u32 triton_per_fused_native_layer_norm_2_param_6,
	.param .u32 triton_per_fused_native_layer_norm_2_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<38>;
	.reg .b32 	%r<212>;
	.reg .f32 	%f<120>;
	.reg .b64 	%rd<23>;
	.loc	1 19 0                          // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd13, [triton_per_fused_native_layer_norm_2_param_0];
	ld.param.u64 	%rd14, [triton_per_fused_native_layer_norm_2_param_1];
$L__tmp0:
	.loc	1 23 28                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:23:33
	shl.b32 	%r96, %r1, 3;
	ld.param.u64 	%rd15, [triton_per_fused_native_layer_norm_2_param_2];
	ld.param.u64 	%rd16, [triton_per_fused_native_layer_norm_2_param_3];
	.loc	1 24 44                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:24:44
	mov.u32 	%r97, %tid.x;
	and.b32  	%r98, %r97, 31;
	ld.param.u64 	%rd17, [triton_per_fused_native_layer_norm_2_param_4];
	and.b32  	%r99, %r97, 1;
	ld.param.u64 	%rd18, [triton_per_fused_native_layer_norm_2_param_5];
	shl.b32 	%r100, %r99, 2;
	and.b32  	%r101, %r97, 7;
	.loc	1 24 23                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:24:23
	or.b32  	%r102, %r96, %r100;
	.loc	1 25 21                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:25:21
	setp.lt.s32 	%p1, %r102, 256;
	.loc	1 26 34                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:26:34
	bfe.u32 	%r103, %r97, 1, 5;
	.loc	1 31 19                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:31:19
	shr.s32 	%r105, %r102, 31;
	shr.u32 	%r106, %r105, 26;
	add.s32 	%r107, %r102, %r106;
	.loc	1 30 19                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:30:19
	and.b32  	%r108, %r107, -64;
	sub.s32 	%r109, %r102, %r108;
	.loc	1 33 38                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:33:38
	shl.b32 	%r110, %r103, 6;
	.loc	1 33 35                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:33:35
	add.s32 	%r111, %r109, %r110;
	.loc	1 33 48                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:33:48
	shl.b32 	%r112, %r107, 5;
	and.b32  	%r113, %r112, -2048;
	.loc	1 33 43                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:33:43
	add.s32 	%r114, %r111, %r113;
	.loc	1 33 30                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:33:30
	mul.wide.s32 	%rd19, %r114, 4;
	add.s64 	%rd1, %rd14, %rd19;
	mov.b32 	%r6, 0;
	.loc	1 33 53                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:33:53
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 34 31                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:34:31
	mul.wide.u32 	%rd20, %r103, 4;
	add.s64 	%rd2, %rd15, %rd20;
	mov.pred 	%p6, -1;
	.loc	1 34 36                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:34:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r10 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r11 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r12 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r13 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:35:31
	add.s64 	%rd6, %rd16, %rd20;
	.loc	1 35 36                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:35:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r14 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r15 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r16 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r17 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 39 33                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:39:33
	selp.f32 	%f5, %f1, 0f00000000, %p1;
	selp.f32 	%f6, %f2, 0f00000000, %p1;
	selp.f32 	%f7, %f3, 0f00000000, %p1;
	selp.f32 	%f8, %f4, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f5;
	shfl.sync.bfly.b32	%r116, %r115, 16, 31, -1;
	mov.b32 	%f9, %r116;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f5, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r117, %f10;
	shfl.sync.bfly.b32	%r118, %r117, 8, 31, -1;
	mov.b32 	%f11, %r118;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r119, %f12;
	shfl.sync.bfly.b32	%r120, %r119, 4, 31, -1;
	mov.b32 	%f13, %r120;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r121, %f14;
	shfl.sync.bfly.b32	%r122, %r121, 2, 31, -1;
	mov.b32 	%f15, %r122;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r123, %f6;
	shfl.sync.bfly.b32	%r124, %r123, 16, 31, -1;
	mov.b32 	%f17, %r124;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f6, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r125, %f18;
	shfl.sync.bfly.b32	%r126, %r125, 8, 31, -1;
	mov.b32 	%f19, %r126;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r127, %f20;
	shfl.sync.bfly.b32	%r128, %r127, 4, 31, -1;
	mov.b32 	%f21, %r128;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r129, %f22;
	shfl.sync.bfly.b32	%r130, %r129, 2, 31, -1;
	mov.b32 	%f23, %r130;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r131, %f7;
	shfl.sync.bfly.b32	%r132, %r131, 16, 31, -1;
	mov.b32 	%f25, %r132;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f7, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r133, %f26;
	shfl.sync.bfly.b32	%r134, %r133, 8, 31, -1;
	mov.b32 	%f27, %r134;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r135, %f28;
	shfl.sync.bfly.b32	%r136, %r135, 4, 31, -1;
	mov.b32 	%f29, %r136;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r137, %f30;
	shfl.sync.bfly.b32	%r138, %r137, 2, 31, -1;
	mov.b32 	%f31, %r138;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r139, %f8;
	shfl.sync.bfly.b32	%r140, %r139, 16, 31, -1;
	mov.b32 	%f33, %r140;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f8, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r141, %f34;
	shfl.sync.bfly.b32	%r142, %r141, 8, 31, -1;
	mov.b32 	%f35, %r142;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r143, %f36;
	shfl.sync.bfly.b32	%r144, %r143, 4, 31, -1;
	mov.b32 	%f37, %r144;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r145, %f38;
	shfl.sync.bfly.b32	%r146, %r145, 2, 31, -1;
	mov.b32 	%f39, %r146;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	setp.lt.u32 	%p14, %r98, 2;
	shl.b32 	%r147, %r99, 5;
$L__tmp2:
	.loc	1 24 44                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:24:44
	shr.u32 	%r148, %r97, 3;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r149, %r148, 4;
	or.b32  	%r150, %r147, %r149;
	mov.u32 	%r151, global_smem;
	add.s32 	%r18, %r151, %r150;
	mov.b32 	%r19, %f16;
	// begin inline asm
	@%p14 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r18, 8;
	mov.b32 	%r21, %f24;
	// begin inline asm
	@%p14 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	add.s32 	%r22, %r18, 16;
	mov.b32 	%r23, %f32;
	// begin inline asm
	@%p14 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	add.s32 	%r24, %r18, 24;
	mov.b32 	%r25, %f40;
	// begin inline asm
	@%p14 st.shared.b32 [ %r24 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p18, %r97, 16;
	shl.b32 	%r152, %r97, 2;
	add.s32 	%r27, %r151, %r152;
	// begin inline asm
	@%p18 ld.shared.b32 %r26, [ %r27 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r26;
	shfl.sync.bfly.b32	%r153, %r26, 1, 31, -1;
	mov.b32 	%f42, %r153;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p35, %r99, 0;
	and.pred  	%p19, %p18, %p35;
	mov.b32 	%r29, %f43;
	// begin inline asm
	@%p19 st.shared.b32 [ %r27 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r154, %r151, %r147;
$L__tmp4:
	.loc	1 43 19                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:43:19
	ld.shared.u32 	%r31, [%r154];
	ld.shared.u32 	%r32, [%r154+8];
	ld.shared.u32 	%r33, [%r154+16];
	ld.shared.u32 	%r34, [%r154+24];
	bar.sync 	0;
	shl.b32 	%r155, %r99, 4;
	sub.s32 	%r62, %r154, %r155;
	// begin inline asm
	@%p6 st.shared.v4.b32 [ %r62 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r156, %r101, 2;
	add.s32 	%r157, %r151, %r156;
	ld.shared.u32 	%r36, [%r157];
	mov.b32 	%r37, 1107296256;
	// begin inline asm
	div.full.f32 %r95, %r36, %r37;
	// end inline asm
	// begin inline asm
	div.full.f32 %r38, %r31, %r37;
	// end inline asm
	mov.b32 	%f44, %r38;
	// begin inline asm
	div.full.f32 %r41, %r32, %r37;
	// end inline asm
	mov.b32 	%f45, %r41;
	// begin inline asm
	div.full.f32 %r44, %r33, %r37;
	// end inline asm
	mov.b32 	%f46, %r44;
	// begin inline asm
	div.full.f32 %r47, %r34, %r37;
	// end inline asm
	mov.b32 	%f47, %r47;
	.loc	1 44 19                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:44:19
	sub.f32 	%f48, %f1, %f44;
	sub.f32 	%f49, %f2, %f45;
	sub.f32 	%f50, %f3, %f46;
	sub.f32 	%f51, %f4, %f47;
	.loc	1 45 20                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:45:20
	mul.f32 	%f52, %f48, %f48;
	mul.f32 	%f53, %f49, %f49;
	mul.f32 	%f54, %f50, %f50;
	mul.f32 	%f55, %f51, %f51;
	.loc	1 47 35                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:47:35
	selp.f32 	%f56, %f52, 0f00000000, %p1;
	selp.f32 	%f57, %f53, 0f00000000, %p1;
	selp.f32 	%f58, %f54, 0f00000000, %p1;
	selp.f32 	%f59, %f55, 0f00000000, %p1;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r158, %f56;
	shfl.sync.bfly.b32	%r159, %r158, 16, 31, -1;
	mov.b32 	%f60, %r159;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f56, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r160, %f61;
	shfl.sync.bfly.b32	%r161, %r160, 8, 31, -1;
	mov.b32 	%f62, %r161;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r162, %f63;
	shfl.sync.bfly.b32	%r163, %r162, 4, 31, -1;
	mov.b32 	%f64, %r163;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r164, %f65;
	shfl.sync.bfly.b32	%r165, %r164, 2, 31, -1;
	mov.b32 	%f66, %r165;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r166, %f57;
	shfl.sync.bfly.b32	%r167, %r166, 16, 31, -1;
	mov.b32 	%f68, %r167;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f69, %f57, %f68;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r168, %f69;
	shfl.sync.bfly.b32	%r169, %r168, 8, 31, -1;
	mov.b32 	%f70, %r169;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f71, %f69, %f70;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r170, %f71;
	shfl.sync.bfly.b32	%r171, %r170, 4, 31, -1;
	mov.b32 	%f72, %r171;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f73, %f71, %f72;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r172, %f73;
	shfl.sync.bfly.b32	%r173, %r172, 2, 31, -1;
	mov.b32 	%f74, %r173;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f75, %f73, %f74;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r174, %f58;
	shfl.sync.bfly.b32	%r175, %r174, 16, 31, -1;
	mov.b32 	%f76, %r175;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f77, %f58, %f76;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r176, %f77;
	shfl.sync.bfly.b32	%r177, %r176, 8, 31, -1;
	mov.b32 	%f78, %r177;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f79, %f77, %f78;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r178, %f79;
	shfl.sync.bfly.b32	%r179, %r178, 4, 31, -1;
	mov.b32 	%f80, %r179;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f81, %f79, %f80;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r180, %f81;
	shfl.sync.bfly.b32	%r181, %r180, 2, 31, -1;
	mov.b32 	%f82, %r181;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f83, %f81, %f82;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r182, %f59;
	shfl.sync.bfly.b32	%r183, %r182, 16, 31, -1;
	mov.b32 	%f84, %r183;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f85, %f59, %f84;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r184, %f85;
	shfl.sync.bfly.b32	%r185, %r184, 8, 31, -1;
	mov.b32 	%f86, %r185;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f87, %f85, %f86;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r186, %f87;
	shfl.sync.bfly.b32	%r187, %r186, 4, 31, -1;
	mov.b32 	%f88, %r187;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f89, %f87, %f88;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r188, %f89;
	shfl.sync.bfly.b32	%r189, %r188, 2, 31, -1;
	mov.b32 	%f90, %r189;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f91, %f89, %f90;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f67;
	// begin inline asm
	@%p14 st.shared.b32 [ %r18 + 0 ], %r51;
	// end inline asm
	mov.b32 	%r53, %f75;
	// begin inline asm
	@%p14 st.shared.b32 [ %r20 + 0 ], %r53;
	// end inline asm
	mov.b32 	%r55, %f83;
	// begin inline asm
	@%p14 st.shared.b32 [ %r22 + 0 ], %r55;
	// end inline asm
	mov.b32 	%r57, %f91;
	// begin inline asm
	@%p14 st.shared.b32 [ %r24 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p18 ld.shared.b32 %r58, [ %r27 + 0 ];
	// end inline asm
	mov.b32 	%f92, %r58;
	shfl.sync.bfly.b32	%r190, %r58, 1, 31, -1;
	mov.b32 	%f93, %r190;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f94, %f92, %f93;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f94;
	// begin inline asm
	@%p19 st.shared.b32 [ %r27 + 0 ], %r61;
	// end inline asm
	bar.sync 	0;
$L__tmp6:
	.loc	1 53 28                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:53:28
	ld.shared.u32 	%r63, [%r154];
	ld.shared.u32 	%r64, [%r154+8];
	ld.shared.u32 	%r65, [%r154+16];
	ld.shared.u32 	%r66, [%r154+24];
	bar.sync 	0;
	// begin inline asm
	@%p6 st.shared.v4.b32 [ %r62 + 0 ], { %r63, %r64, %r65, %r66 };
	// end inline asm
	bar.sync 	0;
	.loc	1 50 20                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:50:20
	ld.shared.u32 	%r68, [%r157];
	// begin inline asm
	div.full.f32 %r67, %r68, %r37;
	// end inline asm
	mov.b32 	%f95, %r67;
	// begin inline asm
	div.full.f32 %r70, %r63, %r37;
	// end inline asm
	mov.b32 	%f96, %r70;
	// begin inline asm
	div.full.f32 %r73, %r64, %r37;
	// end inline asm
	mov.b32 	%f97, %r73;
	// begin inline asm
	div.full.f32 %r76, %r65, %r37;
	// end inline asm
	mov.b32 	%f98, %r76;
	// begin inline asm
	div.full.f32 %r79, %r66, %r37;
	// end inline asm
	mov.b32 	%f99, %r79;
	.loc	1 52 20                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:52:20
	add.f32 	%f100, %f95, 0f3727C5AC;
	add.f32 	%f101, %f96, 0f3727C5AC;
	add.f32 	%f102, %f97, 0f3727C5AC;
	add.f32 	%f103, %f98, 0f3727C5AC;
	add.f32 	%f104, %f99, 0f3727C5AC;
	.loc	1 53 28                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:53:28
	rsqrt.approx.ftz.f32 	%f105, %f100;
	rsqrt.approx.ftz.f32 	%f106, %f101;
	rsqrt.approx.ftz.f32 	%f107, %f102;
	rsqrt.approx.ftz.f32 	%f108, %f103;
	rsqrt.approx.ftz.f32 	%f109, %f104;
	.loc	1 35 36                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:35:36
	mov.b32 	%f110, %r17;
	.loc	1 34 36                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:34:36
	mov.b32 	%f111, %r13;
	.loc	1 26 34                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:26:34
	and.b32  	%r191, %r152, 28;
	.loc	1 24 44                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:24:44
	bfe.u32 	%r192, %r97, 3, 3;
	.loc	1 24 23                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:24:23
	or.b32  	%r193, %r96, %r192;
	.loc	1 25 21                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:25:21
	setp.lt.s32 	%p33, %r193, 256;
	.loc	1 24 23                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:24:23
	or.b32  	%r194, %r96, %r101;
	.loc	1 25 21                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:25:21
	setp.lt.s32 	%p36, %r194, 256;
	.loc	1 55 20                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:55:20
	mul.f32 	%f112, %f48, %f106;
	mul.f32 	%f113, %f49, %f107;
	mul.f32 	%f114, %f50, %f108;
	mul.f32 	%f115, %f51, %f109;
	.loc	1 57 20                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:57:20
	fma.rn.f32 	%f116, %f112, %f111, %f110;
	fma.rn.f32 	%f117, %f113, %f111, %f110;
	fma.rn.f32 	%f118, %f114, %f111, %f110;
	fma.rn.f32 	%f119, %f115, %f111, %f110;
	.loc	1 58 4                          // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:58:4
	bar.sync 	0;
	.loc	1 59 28                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:59:28
	mul.wide.s32 	%rd21, %r194, 4;
	add.s64 	%rd10, %rd13, %rd21;
	.loc	1 59 40                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:59:40
	bfe.u32 	%r195, %r97, 3, 2;
	or.b32  	%r196, %r149, %r195;
	setp.eq.s32 	%p37, %r196, 0;
	mov.b32 	%r82, %f105;
	and.pred  	%p28, %p37, %p36;
	// begin inline asm
	@%p28 st.global.b32 [ %rd10 + 0 ], { %r82 };
	// end inline asm
	.loc	1 60 33                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:60:33
	shl.b32 	%r197, %r193, 5;
	.loc	1 60 30                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:60:30
	or.b32  	%r198, %r197, %r191;
	.loc	1 60 25                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:60:25
	mul.wide.s32 	%rd22, %r198, 4;
	add.s64 	%rd11, %rd18, %rd22;
	.loc	1 60 45                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:60:45
	shl.b32 	%r199, %r99, 7;
	or.b32  	%r200, %r199, %r103;
	mad.lo.s32 	%r201, %r99, 48, %r62;
	shl.b32 	%r202, %r200, 2;
	add.s32 	%r83, %r201, %r202;
	mov.b32 	%r84, %f116;
	// begin inline asm
	@%p6 st.shared.b32 [ %r83 + 0 ], %r84;
	// end inline asm
	shr.u32 	%r203, %r199, 1;
	add.s32 	%r204, %r151, %r203;
	add.s32 	%r205, %r204, %r202;
	add.s32 	%r85, %r205, 144;
	mov.b32 	%r86, %f117;
	// begin inline asm
	@%p6 st.shared.b32 [ %r85 + 0 ], %r86;
	// end inline asm
	add.s32 	%r87, %r205, 288;
	mov.b32 	%r88, %f118;
	// begin inline asm
	@%p6 st.shared.b32 [ %r87 + 0 ], %r88;
	// end inline asm
	add.s32 	%r89, %r205, 432;
	mov.b32 	%r90, %f119;
	// begin inline asm
	@%p6 st.shared.b32 [ %r89 + 0 ], %r90;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r206, %r97, 1;
	and.b32  	%r207, %r206, 112;
	add.s32 	%r208, %r151, %r207;
	shl.b32 	%r209, %r97, 4;
	and.b32  	%r210, %r209, 1008;
	add.s32 	%r211, %r208, %r210;
	ld.shared.v4.u32 	{%r91, %r92, %r93, %r94}, [%r211];
	// begin inline asm
	@%p33 st.global.v4.b32 [ %rd11 + 0 ], { %r91, %r92, %r93, %r94 };
	// end inline asm
	.loc	1 61 25                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:61:25
	add.s64 	%rd12, %rd17, %rd21;
	.loc	1 61 37                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:61:37
	// begin inline asm
	@%p28 st.global.b32 [ %rd12 + 0 ], { %r95 };
	// end inline asm
	.loc	1 61 4                          // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:61:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vs/cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 205                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 115
.b8 99
.b8 51
.b8 54
.b8 105
.b8 112
.b8 116
.b8 115
.b8 118
.b8 50
.b8 99
.b8 102
.b8 103
.b8 53
.b8 100
.b8 106
.b8 116
.b8 97
.b8 107
.b8 110
.b8 108
.b8 105
.b8 116
.b8 105
.b8 55
.b8 52
.b8 100
.b8 100
.b8 100
.b8 97
.b8 52
.b8 110
.b8 119
.b8 117
.b8 119
.b8 120
.b8 52
.b8 52
.b8 54
.b8 119
.b8 108
.b8 101
.b8 107
.b8 54
.b8 97
.b8 102
.b8 50
.b8 104
.b8 112
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x27 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8a:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9f:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
