#loc = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0)
module {
  tt.func public @triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_10(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0), %arg3: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0), %arg5: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<512> : tensor<256x1xi64> loc(#loc1)
    %cst_0 = arith.constant dense<128> : tensor<256x1xi64> loc(#loc1)
    %cst_1 = arith.constant dense<4> : tensor<256x1xi64> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<256x16xf32> loc(#loc1)
    %cst_3 = arith.constant dense<1.000000e+00> : tensor<256x16xf32> loc(#loc1)
    %cst_4 = arith.constant dense<0> : tensor<256x1xi64> loc(#loc1)
    %cst_5 = arith.constant dense<256> : tensor<1x16xi32> loc(#loc1)
    %cst_6 = arith.constant dense<32768> : tensor<1x16xi32> loc(#loc1)
    %cst_7 = arith.constant dense<128> : tensor<256x1xi32> loc(#loc1)
    %cst_8 = arith.constant dense<2048> : tensor<1x16xi32> loc(#loc1)
    %cst_9 = arith.constant dense<128> : tensor<1x16xi32> loc(#loc1)
    %cst_10 = arith.constant dense<16> : tensor<256x1xi32> loc(#loc1)
    %cst_11 = arith.constant dense<256> : tensor<256x1xi32> loc(#loc1)
    %cst_12 = arith.constant dense<512> : tensor<1x16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x16xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x16xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_12 : tensor<1x16xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.muli %7, %c256_i32 : i32 loc(#loc9)
    %9 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc10)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<256xi32> -> tensor<256x1xi32> loc(#loc11)
    %11 = tt.splat %8 : i32 -> tensor<256x1xi32> loc(#loc12)
    %12 = arith.addi %11, %10 : tensor<256x1xi32> loc(#loc12)
    %13 = arith.cmpi slt, %12, %cst_11 : tensor<256x1xi32> loc(#loc13)
    %14 = arith.divsi %12, %cst_10 : tensor<256x1xi32> loc(#loc14)
    %15 = arith.remsi %12, %cst_10 : tensor<256x1xi32> loc(#loc15)
    %16 = arith.remsi %5, %cst_9 : tensor<1x16xi32> loc(#loc16)
    %17 = arith.divsi %5, %cst_9 : tensor<1x16xi32> loc(#loc17)
    %18 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<256x1x!tt.ptr<i64>> loc(#loc18)
    %19 = tt.addptr %18, %14 : tensor<256x1x!tt.ptr<i64>>, tensor<256x1xi32> loc(#loc18)
    %20 = tt.load %19, %13 evictionPolicy = evict_last : tensor<256x1x!tt.ptr<i64>> loc(#loc19)
    %21 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<256x1x!tt.ptr<i64>> loc(#loc20)
    %22 = tt.addptr %21, %15 : tensor<256x1x!tt.ptr<i64>>, tensor<256x1xi32> loc(#loc20)
    %23 = tt.load %22, %13 evictionPolicy = evict_last : tensor<256x1x!tt.ptr<i64>> loc(#loc21)
    %24 = tt.splat %arg3 : !tt.ptr<i64> -> tensor<256x1x!tt.ptr<i64>> loc(#loc22)
    %25 = tt.addptr %24, %15 : tensor<256x1x!tt.ptr<i64>>, tensor<256x1xi32> loc(#loc22)
    %26 = tt.load %25, %13 evictionPolicy = evict_last : tensor<256x1x!tt.ptr<i64>> loc(#loc23)
    %27 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x1x!tt.ptr<f32>> loc(#loc24)
    %28 = tt.addptr %27, %15 : tensor<256x1x!tt.ptr<f32>>, tensor<256x1xi32> loc(#loc24)
    %29 = tt.load %28, %13 evictionPolicy = evict_last : tensor<256x1x!tt.ptr<f32>> loc(#loc25)
    %30 = tt.splat %arg5 : !tt.ptr<i64> -> tensor<256x1x!tt.ptr<i64>> loc(#loc26)
    %31 = tt.addptr %30, %14 : tensor<256x1x!tt.ptr<i64>>, tensor<256x1xi32> loc(#loc26)
    %32 = tt.load %31, %13 evictionPolicy = evict_last : tensor<256x1x!tt.ptr<i64>> loc(#loc27)
    %33 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x1x!tt.ptr<f32>> loc(#loc28)
    %34 = tt.addptr %33, %14 : tensor<256x1x!tt.ptr<f32>>, tensor<256x1xi32> loc(#loc28)
    %35 = tt.load %34, %13 evictionPolicy = evict_last : tensor<256x1x!tt.ptr<f32>> loc(#loc29)
    %36 = arith.addi %20, %cst_1 : tensor<256x1xi64> loc(#loc30)
    %37 = arith.cmpi slt, %20, %cst_4 : tensor<256x1xi64> loc(#loc31)
    %38 = arith.select %37, %36, %20 : tensor<256x1xi1>, tensor<256x1xi64> loc(#loc32)
    %39 = arith.addi %23, %cst_1 : tensor<256x1xi64> loc(#loc33)
    %40 = arith.cmpi slt, %23, %cst_4 : tensor<256x1xi64> loc(#loc34)
    %41 = arith.select %40, %39, %23 : tensor<256x1xi1>, tensor<256x1xi64> loc(#loc35)
    %42 = arith.muli %41, %cst_0 : tensor<256x1xi64> loc(#loc36)
    %43 = tt.broadcast %42 : tensor<256x1xi64> -> tensor<256x16xi64> loc(#loc36)
    %44 = arith.extsi %16 : tensor<1x16xi32> to tensor<1x16xi64> loc(#loc37)
    %45 = tt.broadcast %44 : tensor<1x16xi64> -> tensor<256x16xi64> loc(#loc37)
    %46 = arith.addi %45, %43 : tensor<256x16xi64> loc(#loc37)
    %47 = arith.muli %38, %cst : tensor<256x1xi64> loc(#loc38)
    %48 = tt.broadcast %47 : tensor<256x1xi64> -> tensor<256x16xi64> loc(#loc38)
    %49 = arith.addi %46, %48 : tensor<256x16xi64> loc(#loc39)
    %50 = arith.muli %17, %cst_8 : tensor<1x16xi32> loc(#loc40)
    %51 = arith.extsi %50 : tensor<1x16xi32> to tensor<1x16xi64> loc(#loc41)
    %52 = tt.broadcast %51 : tensor<1x16xi64> -> tensor<256x16xi64> loc(#loc41)
    %53 = arith.addi %49, %52 : tensor<256x16xi64> loc(#loc41)
    %54 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x16x!tt.ptr<f32>> loc(#loc42)
    %55 = tt.addptr %54, %53 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi64> loc(#loc42)
    %56 = tt.broadcast %13 : tensor<256x1xi1> -> tensor<256x16xi1> loc(#loc43)
    %57 = tt.broadcast %6 : tensor<1x16xi1> -> tensor<256x16xi1> loc(#loc43)
    %58 = arith.andi %56, %57 : tensor<256x16xi1> loc(#loc43)
    %59 = tt.load %55, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc44)
    %60 = arith.addi %26, %cst_1 : tensor<256x1xi64> loc(#loc45)
    %61 = arith.cmpi slt, %26, %cst_4 : tensor<256x1xi64> loc(#loc46)
    %62 = arith.select %61, %60, %26 : tensor<256x1xi1>, tensor<256x1xi64> loc(#loc47)
    %63 = arith.muli %62, %cst_0 : tensor<256x1xi64> loc(#loc48)
    %64 = tt.broadcast %63 : tensor<256x1xi64> -> tensor<256x16xi64> loc(#loc48)
    %65 = arith.addi %45, %64 : tensor<256x16xi64> loc(#loc49)
    %66 = arith.addi %65, %48 : tensor<256x16xi64> loc(#loc50)
    %67 = arith.addi %66, %52 : tensor<256x16xi64> loc(#loc51)
    %68 = tt.addptr %54, %67 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi64> loc(#loc52)
    %69 = tt.load %68, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc53)
    %70 = arith.subf %69, %59 : tensor<256x16xf32> loc(#loc54)
    %71 = tt.broadcast %29 : tensor<256x1xf32> -> tensor<256x16xf32> loc(#loc55)
    %72 = arith.mulf %70, %71 : tensor<256x16xf32> loc(#loc55)
    %73 = arith.addf %59, %72 : tensor<256x16xf32> loc(#loc56)
    %74 = arith.addi %32, %cst_1 : tensor<256x1xi64> loc(#loc57)
    %75 = arith.cmpi slt, %32, %cst_4 : tensor<256x1xi64> loc(#loc58)
    %76 = arith.select %75, %74, %32 : tensor<256x1xi1>, tensor<256x1xi64> loc(#loc59)
    %77 = arith.muli %76, %cst : tensor<256x1xi64> loc(#loc60)
    %78 = tt.broadcast %77 : tensor<256x1xi64> -> tensor<256x16xi64> loc(#loc60)
    %79 = arith.addi %46, %78 : tensor<256x16xi64> loc(#loc61)
    %80 = arith.addi %79, %52 : tensor<256x16xi64> loc(#loc62)
    %81 = tt.addptr %54, %80 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi64> loc(#loc63)
    %82 = tt.load %81, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc64)
    %83 = arith.addi %65, %78 : tensor<256x16xi64> loc(#loc65)
    %84 = arith.addi %83, %52 : tensor<256x16xi64> loc(#loc66)
    %85 = tt.addptr %54, %84 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi64> loc(#loc67)
    %86 = tt.load %85, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc68)
    %87 = arith.subf %86, %82 : tensor<256x16xf32> loc(#loc69)
    %88 = arith.mulf %87, %71 : tensor<256x16xf32> loc(#loc70)
    %89 = arith.addf %82, %88 : tensor<256x16xf32> loc(#loc71)
    %90 = arith.subf %89, %73 : tensor<256x16xf32> loc(#loc72)
    %91 = tt.broadcast %35 : tensor<256x1xf32> -> tensor<256x16xf32> loc(#loc73)
    %92 = arith.mulf %90, %91 : tensor<256x16xf32> loc(#loc73)
    %93 = arith.addf %73, %92 : tensor<256x16xf32> loc(#loc74)
    %94 = arith.subf %cst_2, %93 : tensor<256x16xf32> loc(#loc124)
    %95 = math.exp %94 : tensor<256x16xf32> loc(#loc125)
    %96 = arith.addf %95, %cst_3 : tensor<256x16xf32> loc(#loc126)
    %97 = arith.divf %cst_3, %96 : tensor<256x16xf32> loc(#loc127)
    %98 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x16x!tt.ptr<f32>> loc(#loc80)
    %99 = tt.addptr %98, %53 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi64> loc(#loc80)
    %100 = tt.load %99, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc81)
    %101 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<256x16x!tt.ptr<f32>> loc(#loc82)
    %102 = tt.addptr %101, %53 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi64> loc(#loc82)
    %103 = tt.load %102, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc83)
    %104 = arith.subf %cst_2, %103 : tensor<256x16xf32> loc(#loc128)
    %105 = math.exp %104 : tensor<256x16xf32> loc(#loc129)
    %106 = arith.addf %105, %cst_3 : tensor<256x16xf32> loc(#loc130)
    %107 = arith.divf %cst_3, %106 : tensor<256x16xf32> loc(#loc131)
    %108 = arith.mulf %100, %107 : tensor<256x16xf32> loc(#loc85)
    %109 = tt.addptr %98, %67 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi64> loc(#loc86)
    %110 = tt.load %109, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc87)
    %111 = tt.addptr %101, %67 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi64> loc(#loc88)
    %112 = tt.load %111, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc89)
    %113 = arith.subf %cst_2, %112 : tensor<256x16xf32> loc(#loc132)
    %114 = math.exp %113 : tensor<256x16xf32> loc(#loc133)
    %115 = arith.addf %114, %cst_3 : tensor<256x16xf32> loc(#loc134)
    %116 = arith.divf %cst_3, %115 : tensor<256x16xf32> loc(#loc135)
    %117 = arith.mulf %110, %116 : tensor<256x16xf32> loc(#loc91)
    %118 = arith.subf %117, %108 : tensor<256x16xf32> loc(#loc92)
    %119 = arith.mulf %118, %71 : tensor<256x16xf32> loc(#loc93)
    %120 = arith.addf %108, %119 : tensor<256x16xf32> loc(#loc94)
    %121 = tt.addptr %98, %80 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi64> loc(#loc95)
    %122 = tt.load %121, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc96)
    %123 = tt.addptr %101, %80 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi64> loc(#loc97)
    %124 = tt.load %123, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc98)
    %125 = arith.subf %cst_2, %124 : tensor<256x16xf32> loc(#loc136)
    %126 = math.exp %125 : tensor<256x16xf32> loc(#loc137)
    %127 = arith.addf %126, %cst_3 : tensor<256x16xf32> loc(#loc138)
    %128 = arith.divf %cst_3, %127 : tensor<256x16xf32> loc(#loc139)
    %129 = arith.mulf %122, %128 : tensor<256x16xf32> loc(#loc100)
    %130 = tt.addptr %98, %84 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi64> loc(#loc101)
    %131 = tt.load %130, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc102)
    %132 = tt.addptr %101, %84 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi64> loc(#loc103)
    %133 = tt.load %132, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc104)
    %134 = arith.subf %cst_2, %133 : tensor<256x16xf32> loc(#loc140)
    %135 = math.exp %134 : tensor<256x16xf32> loc(#loc141)
    %136 = arith.addf %135, %cst_3 : tensor<256x16xf32> loc(#loc142)
    %137 = arith.divf %cst_3, %136 : tensor<256x16xf32> loc(#loc143)
    %138 = arith.mulf %131, %137 : tensor<256x16xf32> loc(#loc106)
    %139 = arith.subf %138, %129 : tensor<256x16xf32> loc(#loc107)
    %140 = arith.mulf %139, %71 : tensor<256x16xf32> loc(#loc108)
    %141 = arith.addf %129, %140 : tensor<256x16xf32> loc(#loc109)
    %142 = arith.subf %141, %120 : tensor<256x16xf32> loc(#loc110)
    %143 = arith.muli %12, %cst_7 : tensor<256x1xi32> loc(#loc111)
    %144 = tt.broadcast %16 : tensor<1x16xi32> -> tensor<256x16xi32> loc(#loc112)
    %145 = tt.broadcast %143 : tensor<256x1xi32> -> tensor<256x16xi32> loc(#loc112)
    %146 = arith.addi %144, %145 : tensor<256x16xi32> loc(#loc112)
    %147 = arith.muli %17, %cst_6 : tensor<1x16xi32> loc(#loc113)
    %148 = tt.broadcast %147 : tensor<1x16xi32> -> tensor<256x16xi32> loc(#loc114)
    %149 = arith.addi %146, %148 : tensor<256x16xi32> loc(#loc114)
    %150 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<256x16x!tt.ptr<f32>> loc(#loc115)
    %151 = tt.addptr %150, %149 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi32> loc(#loc115)
    tt.store %151, %97, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc116)
    %152 = arith.muli %5, %cst_5 : tensor<1x16xi32> loc(#loc117)
    %153 = tt.broadcast %12 : tensor<256x1xi32> -> tensor<256x16xi32> loc(#loc118)
    %154 = tt.broadcast %152 : tensor<1x16xi32> -> tensor<256x16xi32> loc(#loc118)
    %155 = arith.addi %153, %154 : tensor<256x16xi32> loc(#loc118)
    %156 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<256x16x!tt.ptr<f32>> loc(#loc119)
    %157 = tt.addptr %156, %155 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi32> loc(#loc119)
    tt.store %157, %120, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc120)
    %158 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<256x16x!tt.ptr<f32>> loc(#loc121)
    %159 = tt.addptr %158, %155 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi32> loc(#loc121)
    tt.store %159, %142, %58 : tensor<256x16x!tt.ptr<f32>> loc(#loc122)
    tt.return loc(#loc123)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":22:28)
#loc3 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":22:33)
#loc4 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":23:36)
#loc5 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":23:44)
#loc6 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":23:23)
#loc7 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":24:21)
#loc8 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":25:28)
#loc9 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":25:33)
#loc10 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":26:36)
#loc11 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":26:44)
#loc12 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":26:23)
#loc13 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":27:21)
#loc14 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":28:19)
#loc15 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":29:19)
#loc16 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":30:19)
#loc17 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":31:19)
#loc18 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":34:30)
#loc19 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":34:35)
#loc20 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":35:30)
#loc21 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":35:35)
#loc22 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":36:31)
#loc23 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":36:36)
#loc24 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":37:31)
#loc25 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":37:36)
#loc26 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":38:31)
#loc27 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":38:36)
#loc28 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":39:31)
#loc29 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":39:36)
#loc30 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":41:18)
#loc31 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":42:18)
#loc32 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":43:32)
#loc33 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":44:18)
#loc34 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":45:18)
#loc35 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":46:32)
#loc36 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":47:39)
#loc37 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":47:35)
#loc38 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":47:50)
#loc39 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":47:46)
#loc40 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":47:62)
#loc41 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":47:57)
#loc42 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":47:30)
#loc43 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":47:75)
#loc44 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":47:67)
#loc45 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":48:20)
#loc46 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":49:20)
#loc47 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":50:35)
#loc48 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":51:40)
#loc49 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":51:36)
#loc50 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":51:48)
#loc51 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":51:59)
#loc52 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":51:31)
#loc53 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":51:69)
#loc54 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":52:20)
#loc55 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":53:20)
#loc56 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":54:19)
#loc57 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":55:20)
#loc58 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":56:20)
#loc59 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":57:35)
#loc60 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":58:51)
#loc61 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":58:47)
#loc62 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":58:59)
#loc63 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":58:31)
#loc64 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":58:69)
#loc65 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":59:48)
#loc66 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":59:60)
#loc67 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":59:31)
#loc68 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":59:70)
#loc69 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":60:20)
#loc70 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":61:20)
#loc71 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":62:20)
#loc72 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":63:20)
#loc73 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":64:20)
#loc74 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":65:20)
#loc75 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc76 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":66:23)
#loc77 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc78 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc79 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc80 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":67:31)
#loc81 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":67:68)
#loc82 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":68:31)
#loc83 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":68:68)
#loc84 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":69:23)
#loc85 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":70:20)
#loc86 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":71:31)
#loc87 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":71:69)
#loc88 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":72:31)
#loc89 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":72:69)
#loc90 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":73:23)
#loc91 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":74:20)
#loc92 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":75:20)
#loc93 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":76:20)
#loc94 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":77:20)
#loc95 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":78:31)
#loc96 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":78:69)
#loc97 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":79:31)
#loc98 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":79:69)
#loc99 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":80:23)
#loc100 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":81:20)
#loc101 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":82:31)
#loc102 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":82:70)
#loc103 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":83:31)
#loc104 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":83:70)
#loc105 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":84:23)
#loc106 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":85:20)
#loc107 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":86:20)
#loc108 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":87:20)
#loc109 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":88:20)
#loc110 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":89:20)
#loc111 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":90:34)
#loc112 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":90:30)
#loc113 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":90:45)
#loc114 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":90:39)
#loc115 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":90:25)
#loc116 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":90:57)
#loc117 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":91:34)
#loc118 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":91:30)
#loc119 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":91:25)
#loc120 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":91:46)
#loc121 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":92:25)
#loc122 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":92:46)
#loc123 = loc("inductor_cache/47/c4773rirsg53iqndd6lz6saegyyjbmo4hselkks5m6cybbynco7f.py":92:4)
#loc124 = loc(callsite(#loc75 at #loc76))
#loc125 = loc(callsite(#loc77 at #loc76))
#loc126 = loc(callsite(#loc78 at #loc76))
#loc127 = loc(callsite(#loc79 at #loc76))
#loc128 = loc(callsite(#loc75 at #loc84))
#loc129 = loc(callsite(#loc77 at #loc84))
#loc130 = loc(callsite(#loc78 at #loc84))
#loc131 = loc(callsite(#loc79 at #loc84))
#loc132 = loc(callsite(#loc75 at #loc90))
#loc133 = loc(callsite(#loc77 at #loc90))
#loc134 = loc(callsite(#loc78 at #loc90))
#loc135 = loc(callsite(#loc79 at #loc90))
#loc136 = loc(callsite(#loc75 at #loc99))
#loc137 = loc(callsite(#loc77 at #loc99))
#loc138 = loc(callsite(#loc78 at #loc99))
#loc139 = loc(callsite(#loc79 at #loc99))
#loc140 = loc(callsite(#loc75 at #loc105))
#loc141 = loc(callsite(#loc77 at #loc105))
#loc142 = loc(callsite(#loc78 at #loc105))
#loc143 = loc(callsite(#loc79 at #loc105))
