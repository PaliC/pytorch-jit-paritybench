#loc = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":19:0)
#loc1 = loc(unknown)
#loc40 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":59:59)
#loc76 = loc(callsite(#loc1 at #loc40))
module {
  tt.func public @triton_per_fused_add_clamp_log_mul_neg_pow_rsub_sigmoid_sub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<9.99999993E-9> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_3 = arith.constant dense<5.000000e-02> : tensor<256xf32> loc(#loc1)
    %cst_4 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>> loc(#loc6)
    %7 = arith.subf %cst_4, %3 : tensor<256xf32> loc(#loc7)
    %8 = arith.subf %cst_1, %6 : tensor<256xf32> loc(#loc59)
    %9 = math.exp %8 : tensor<256xf32> loc(#loc60)
    %10 = arith.addf %9, %cst_4 : tensor<256xf32> loc(#loc61)
    %11 = arith.divf %cst_4, %10 : tensor<256xf32> loc(#loc62)
    %12 = arith.mulf %11, %3 : tensor<256xf32> loc(#loc13)
    %13 = arith.subf %cst_4, %11 : tensor<256xf32> loc(#loc14)
    %14 = arith.addf %13, %cst_3 : tensor<256xf32> loc(#loc15)
    %15 = arith.cmpf olt, %14, %cst_4 : tensor<256xf32> loc(#loc63)
    %16 = arith.cmpf une, %14, %14 : tensor<256xf32> loc(#loc64)
    %17 = arith.ori %15, %16 : tensor<256xi1> loc(#loc65)
    %18 = arith.select %17, %14, %cst_4 : tensor<256xi1>, tensor<256xf32> loc(#loc66)
    %19 = arith.mulf %18, %7 : tensor<256xf32> loc(#loc21)
    %20 = arith.subf %cst_4, %12 : tensor<256xf32> loc(#loc22)
    %21 = arith.subf %20, %19 : tensor<256xf32> loc(#loc23)
    %22 = arith.mulf %7, %cst_2 : tensor<256xf32> loc(#loc24)
    %23 = arith.addf %3, %22 : tensor<256xf32> loc(#loc25)
    %24 = tt.extern_elementwise %21, %23 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<256xf32>, tensor<256xf32>) -> tensor<256xf32> loc(#loc26)
    %25 = arith.cmpf ogt, %11, %cst_0 : tensor<256xf32> loc(#loc67)
    %26 = arith.cmpf une, %11, %11 : tensor<256xf32> loc(#loc68)
    %27 = arith.ori %25, %26 : tensor<256xi1> loc(#loc69)
    %28 = arith.select %27, %11, %cst_0 : tensor<256xi1>, tensor<256xf32> loc(#loc70)
    %29 = math.log %28 : tensor<256xf32> loc(#loc32)
    %30 = arith.mulf %3, %29 : tensor<256xf32> loc(#loc33)
    %31 = arith.cmpf ogt, %18, %cst_0 : tensor<256xf32> loc(#loc71)
    %32 = arith.cmpf une, %18, %18 : tensor<256xf32> loc(#loc72)
    %33 = arith.ori %31, %32 : tensor<256xi1> loc(#loc73)
    %34 = arith.select %33, %18, %cst_0 : tensor<256xi1>, tensor<256xf32> loc(#loc74)
    %35 = math.log %34 : tensor<256xf32> loc(#loc35)
    %36 = arith.mulf %7, %35 : tensor<256xf32> loc(#loc36)
    %37 = arith.addf %30, %36 : tensor<256xf32> loc(#loc37)
    %38 = arith.mulf %37, %24 : tensor<256xf32> loc(#loc38)
    %39 = "tt.reduce"(%38) <{axis = 0 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc40)), %arg10: f32 loc(callsite(#loc1 at #loc40))):
      %55 = arith.addf %arg9, %arg10 : f32 loc(#loc79)
      tt.reduce.return %55 : f32 loc(#loc75)
    }) : (tensor<256xf32>) -> f32 loc(#loc75)
    %40 = arith.addf %39, %cst : f32 loc(#loc78)
    %41 = arith.subf %cst, %40 : f32 loc(#loc44)
    %42 = tt.splat %41 : f32 -> tensor<1xf32> loc(#loc44)
    %43 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc45)
    %44 = tt.addptr %43, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc45)
    tt.store %44, %7 : tensor<256x!tt.ptr<f32>> loc(#loc46)
    %45 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc47)
    %46 = tt.addptr %45, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc47)
    tt.store %46, %12 : tensor<256x!tt.ptr<f32>> loc(#loc48)
    %47 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc49)
    %48 = tt.addptr %47, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc49)
    tt.store %48, %19 : tensor<256x!tt.ptr<f32>> loc(#loc50)
    %49 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc51)
    %50 = tt.addptr %49, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc51)
    tt.store %50, %24 : tensor<256x!tt.ptr<f32>> loc(#loc52)
    %51 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc53)
    %52 = tt.addptr %51, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc53)
    tt.store %52, %38 : tensor<256x!tt.ptr<f32>> loc(#loc54)
    gpu.barrier loc(#loc55)
    %53 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc56)
    %54 = tt.splat %53 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc56)
    tt.store %54, %42 : tensor<1x!tt.ptr<f32>> loc(#loc57)
    tt.return loc(#loc58)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":27:26)
#loc3 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":31:30)
#loc4 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":31:35)
#loc5 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":32:30)
#loc6 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":32:35)
#loc7 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":34:18)
#loc8 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc9 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":35:22)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc13 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":36:18)
#loc14 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":37:18)
#loc15 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":39:18)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc17 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":40:40)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc21 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":41:19)
#loc22 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":42:19)
#loc23 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":43:20)
#loc24 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":46:19)
#loc25 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":47:20)
#loc26 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":48:33)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc28 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":50:41)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc32 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":51:24)
#loc33 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":52:19)
#loc34 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":53:41)
#loc35 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":54:24)
#loc36 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":55:19)
#loc37 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":56:20)
#loc38 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":57:20)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc43 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":59:45)
#loc44 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":60:13)
#loc45 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":61:25)
#loc46 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":61:63)
#loc47 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":62:25)
#loc48 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":62:63)
#loc49 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":63:25)
#loc50 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":63:64)
#loc51 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":64:25)
#loc52 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":64:64)
#loc53 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":65:25)
#loc54 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":65:64)
#loc55 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":66:4)
#loc56 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":67:28)
#loc57 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":67:63)
#loc58 = loc("inductor_cache/j2/cj2mo5kh7doddtigqpkitqnxnyyocf6zdwtyrcldnexavzw3jqew.py":67:4)
#loc59 = loc(callsite(#loc8 at #loc9))
#loc60 = loc(callsite(#loc10 at #loc9))
#loc61 = loc(callsite(#loc11 at #loc9))
#loc62 = loc(callsite(#loc12 at #loc9))
#loc63 = loc(callsite(#loc16 at #loc17))
#loc64 = loc(callsite(#loc18 at #loc17))
#loc65 = loc(callsite(#loc19 at #loc17))
#loc66 = loc(callsite(#loc20 at #loc17))
#loc67 = loc(callsite(#loc27 at #loc28))
#loc68 = loc(callsite(#loc29 at #loc28))
#loc69 = loc(callsite(#loc30 at #loc28))
#loc70 = loc(callsite(#loc31 at #loc28))
#loc71 = loc(callsite(#loc27 at #loc34))
#loc72 = loc(callsite(#loc29 at #loc34))
#loc73 = loc(callsite(#loc30 at #loc34))
#loc74 = loc(callsite(#loc31 at #loc34))
#loc75 = loc(callsite(#loc39 at #loc40))
#loc77 = loc(callsite(#loc41 at #loc39))
#loc78 = loc(callsite(#loc42 at #loc43))
#loc79 = loc(callsite(#loc77 at #loc40))
