; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused_add_div_linalg_vector_norm_mean_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 4, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 15, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 16, !dbg !14
  %10 = sdiv i32 %8, 4, !dbg !15
  %11 = sext i32 %8 to i64, !dbg !16
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !16
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 %9) #3, !dbg !17
  %14 = bitcast i32 %13 to float, !dbg !17
  %15 = shl nsw i32 %10, 2, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %9) #3, !dbg !20
  %19 = bitcast i32 %18 to float, !dbg !20
  %20 = or disjoint i32 %15, 1, !dbg !21
  %21 = sext i32 %20 to i64, !dbg !22
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !22
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %9) #3, !dbg !23
  %24 = bitcast i32 %23 to float, !dbg !23
  %25 = or disjoint i32 %15, 2, !dbg !24
  %26 = sext i32 %25 to i64, !dbg !25
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !25
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %9) #3, !dbg !26
  %29 = bitcast i32 %28 to float, !dbg !26
  %30 = or disjoint i32 %15, 3, !dbg !27
  %31 = sext i32 %30 to i64, !dbg !28
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !28
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %9) #3, !dbg !29
  %34 = bitcast i32 %33 to float, !dbg !29
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i = icmp eq i32 %35, 0, !dbg !30
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !30
  %.not1.i = icmp eq i32 %36, 0, !dbg !30
  br i1 %.not.i, label %42, label %37, !dbg !30

37:                                               ; preds = %3
  br i1 %.not1.i, label %40, label %38, !dbg !30

38:                                               ; preds = %37
  %39 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %14) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

40:                                               ; preds = %37
  %41 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %14) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

42:                                               ; preds = %3
  br i1 %.not1.i, label %45, label %43, !dbg !30

43:                                               ; preds = %42
  %44 = tail call float @llvm.nvvm.sqrt.rn.f(float %14) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

45:                                               ; preds = %42
  %46 = tail call float @llvm.nvvm.sqrt.approx.f(float %14) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

__nv_sqrtf.exit:                                  ; preds = %38, %40, %43, %45
  %.0.i = phi float [ %39, %38 ], [ %41, %40 ], [ %44, %43 ], [ %46, %45 ], !dbg !30
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i1 = icmp eq i32 %47, 0, !dbg !31
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i4 = icmp eq i32 %48, 0, !dbg !31
  br i1 %.not.i1, label %54, label %49, !dbg !31

49:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %52, label %50, !dbg !31

50:                                               ; preds = %49
  %51 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %19) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

52:                                               ; preds = %49
  %53 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %19) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

54:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %57, label %55, !dbg !31

55:                                               ; preds = %54
  %56 = tail call float @llvm.nvvm.sqrt.rn.f(float %19) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

57:                                               ; preds = %54
  %58 = tail call float @llvm.nvvm.sqrt.approx.f(float %19) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

__nv_sqrtf.exit5:                                 ; preds = %50, %52, %55, %57
  %.0.i3 = phi float [ %51, %50 ], [ %53, %52 ], [ %56, %55 ], [ %58, %57 ], !dbg !31
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not.i6 = icmp eq i32 %59, 0, !dbg !32
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !32
  %.not1.i9 = icmp eq i32 %60, 0, !dbg !32
  br i1 %.not.i6, label %66, label %61, !dbg !32

61:                                               ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %64, label %62, !dbg !32

62:                                               ; preds = %61
  %63 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %24) #3, !dbg !32
  br label %__nv_sqrtf.exit10, !dbg !32

64:                                               ; preds = %61
  %65 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %24) #3, !dbg !32
  br label %__nv_sqrtf.exit10, !dbg !32

66:                                               ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %69, label %67, !dbg !32

67:                                               ; preds = %66
  %68 = tail call float @llvm.nvvm.sqrt.rn.f(float %24) #3, !dbg !32
  br label %__nv_sqrtf.exit10, !dbg !32

69:                                               ; preds = %66
  %70 = tail call float @llvm.nvvm.sqrt.approx.f(float %24) #3, !dbg !32
  br label %__nv_sqrtf.exit10, !dbg !32

__nv_sqrtf.exit10:                                ; preds = %62, %64, %67, %69
  %.0.i8 = phi float [ %63, %62 ], [ %65, %64 ], [ %68, %67 ], [ %70, %69 ], !dbg !32
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not.i11 = icmp eq i32 %71, 0, !dbg !33
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !33
  %.not1.i14 = icmp eq i32 %72, 0, !dbg !33
  br i1 %.not.i11, label %78, label %73, !dbg !33

73:                                               ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %76, label %74, !dbg !33

74:                                               ; preds = %73
  %75 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %29) #3, !dbg !33
  br label %__nv_sqrtf.exit15, !dbg !33

76:                                               ; preds = %73
  %77 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %29) #3, !dbg !33
  br label %__nv_sqrtf.exit15, !dbg !33

78:                                               ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %81, label %79, !dbg !33

79:                                               ; preds = %78
  %80 = tail call float @llvm.nvvm.sqrt.rn.f(float %29) #3, !dbg !33
  br label %__nv_sqrtf.exit15, !dbg !33

81:                                               ; preds = %78
  %82 = tail call float @llvm.nvvm.sqrt.approx.f(float %29) #3, !dbg !33
  br label %__nv_sqrtf.exit15, !dbg !33

__nv_sqrtf.exit15:                                ; preds = %74, %76, %79, %81
  %.0.i13 = phi float [ %75, %74 ], [ %77, %76 ], [ %80, %79 ], [ %82, %81 ], !dbg !33
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i16 = icmp eq i32 %83, 0, !dbg !34
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !34
  %.not1.i19 = icmp eq i32 %84, 0, !dbg !34
  br i1 %.not.i16, label %90, label %85, !dbg !34

85:                                               ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %88, label %86, !dbg !34

86:                                               ; preds = %85
  %87 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %34) #3, !dbg !34
  br label %__nv_sqrtf.exit20, !dbg !34

88:                                               ; preds = %85
  %89 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %34) #3, !dbg !34
  br label %__nv_sqrtf.exit20, !dbg !34

90:                                               ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %93, label %91, !dbg !34

91:                                               ; preds = %90
  %92 = tail call float @llvm.nvvm.sqrt.rn.f(float %34) #3, !dbg !34
  br label %__nv_sqrtf.exit20, !dbg !34

93:                                               ; preds = %90
  %94 = tail call float @llvm.nvvm.sqrt.approx.f(float %34) #3, !dbg !34
  br label %__nv_sqrtf.exit20, !dbg !34

__nv_sqrtf.exit20:                                ; preds = %86, %88, %91, %93
  %.0.i18 = phi float [ %87, %86 ], [ %89, %88 ], [ %92, %91 ], [ %94, %93 ], !dbg !34
  %95 = fadd float %.0.i3, %.0.i8, !dbg !35
  %96 = fadd float %95, %.0.i13, !dbg !36
  %97 = and i32 %6, 16, !dbg !12
  %98 = fadd float %96, %.0.i18, !dbg !37
  %99 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %98, float 4.000000e+00) #3, !dbg !38
  %100 = fadd float %99, 0x3EB0C6F7A0000000, !dbg !39
  %101 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %.0.i, float %100) #3, !dbg !40
  %102 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !41
  %103 = icmp eq i32 %97, 0, !dbg !42
  %104 = bitcast float %101 to i32, !dbg !42
  %105 = and i1 %103, %9, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %104, ptr addrspace(1) %102, i1 %105) #3, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cb6dlgwkz3qlyrexoo4dcjujf2i53hzoq4k43lqpdz6oar7hmr3p.py", directory: "inductor_cache/b6")
!4 = !{ptr @triton_poi_fused_add_div_linalg_vector_norm_mean_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_linalg_vector_norm_mean_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_linalg_vector_norm_mean_1", linkageName: "triton_poi_fused_add_div_linalg_vector_norm_mean_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 32, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 37, scope: !7)
!21 = !DILocation(line: 28, column: 34, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 41, scope: !7)
!24 = !DILocation(line: 29, column: 34, scope: !7)
!25 = !DILocation(line: 29, column: 30, scope: !7)
!26 = !DILocation(line: 29, column: 41, scope: !7)
!27 = !DILocation(line: 30, column: 35, scope: !7)
!28 = !DILocation(line: 30, column: 31, scope: !7)
!29 = !DILocation(line: 30, column: 42, scope: !7)
!30 = !DILocation(line: 31, column: 26, scope: !7)
!31 = !DILocation(line: 32, column: 26, scope: !7)
!32 = !DILocation(line: 33, column: 26, scope: !7)
!33 = !DILocation(line: 35, column: 26, scope: !7)
!34 = !DILocation(line: 37, column: 27, scope: !7)
!35 = !DILocation(line: 34, column: 18, scope: !7)
!36 = !DILocation(line: 36, column: 18, scope: !7)
!37 = !DILocation(line: 38, column: 19, scope: !7)
!38 = !DILocation(line: 40, column: 20, scope: !7)
!39 = !DILocation(line: 42, column: 20, scope: !7)
!40 = !DILocation(line: 43, column: 19, scope: !7)
!41 = !DILocation(line: 44, column: 25, scope: !7)
!42 = !DILocation(line: 44, column: 37, scope: !7)
!43 = !DILocation(line: 44, column: 4, scope: !7)
