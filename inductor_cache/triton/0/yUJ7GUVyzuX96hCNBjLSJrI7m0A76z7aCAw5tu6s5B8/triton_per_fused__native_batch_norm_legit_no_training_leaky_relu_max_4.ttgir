#blocked = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [2, 16], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 4], order = [0, 1]}>
#loc = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0)
#loc1 = loc(unknown)
#loc31 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":54:39)
#loc38 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":56:71)
#loc60 = loc(callsite(#loc1 at #loc31))
#loc66 = loc(callsite(#loc1 at #loc38))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__native_batch_norm_legit_no_training_leaky_relu_max_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg6: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<8x64xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<2.000000e-01> : tensor<8x64xf32, #blocked> loc(#loc1)
    %true = arith.constant true loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<1024> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<64> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<9.99999974E-6> : tensor<8x1xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1.000000e+00> : tensor<8x1xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<8x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<8x1xi32, #blocked1> loc(#loc5)
    %10 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc6)
    %11 = tt.expand_dims %10 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc6)
    %12 = arith.remsi %8, %cst_1 : tensor<8x1xi32, #blocked> loc(#loc7)
    %13 = arith.muli %8, %cst_2 : tensor<8x1xi32, #blocked> loc(#loc8)
    %14 = tt.broadcast %11 : tensor<1x64xi32, #blocked> -> tensor<8x64xi32, #blocked> loc(#loc9)
    %15 = tt.broadcast %13 : tensor<8x1xi32, #blocked> -> tensor<8x64xi32, #blocked> loc(#loc9)
    %16 = arith.addi %14, %15 : tensor<8x64xi32, #blocked> loc(#loc9)
    %17 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x64x!tt.ptr<f32>, #blocked> loc(#loc10)
    %18 = tt.addptr %17, %16 : tensor<8x64x!tt.ptr<f32>, #blocked>, tensor<8x64xi32, #blocked> loc(#loc10)
    %19 = tt.load %18 : tensor<8x64x!tt.ptr<f32>, #blocked> loc(#loc11)
    %20 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc12)
    %21 = tt.addptr %20, %12 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc12)
    %22 = tt.load %21 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc13)
    %23 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc14)
    %24 = tt.addptr %23, %12 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc14)
    %25 = tt.load %24 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc15)
    %26 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc16)
    %27 = tt.addptr %26, %12 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc16)
    %28 = tt.load %27 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc17)
    %29 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc18)
    %30 = tt.addptr %29, %12 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc18)
    %31 = tt.load %30 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc19)
    %32 = tt.broadcast %22 : tensor<8x1xf32, #blocked> -> tensor<8x64xf32, #blocked> loc(#loc20)
    %33 = arith.subf %19, %32 : tensor<8x64xf32, #blocked> loc(#loc20)
    %34 = arith.addf %25, %cst_3 : tensor<8x1xf32, #blocked> loc(#loc21)
    %35 = tt.extern_elementwise %34 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<8x1xf32, #blocked>) -> tensor<8x1xf32, #blocked> loc(#loc22)
    %36 = arith.divf %cst_4, %35 : tensor<8x1xf32, #blocked> loc(#loc23)
    %37 = tt.broadcast %36 : tensor<8x1xf32, #blocked> -> tensor<8x64xf32, #blocked> loc(#loc24)
    %38 = arith.mulf %33, %37 : tensor<8x64xf32, #blocked> loc(#loc24)
    %39 = tt.broadcast %28 : tensor<8x1xf32, #blocked> -> tensor<8x64xf32, #blocked> loc(#loc25)
    %40 = arith.mulf %38, %39 : tensor<8x64xf32, #blocked> loc(#loc25)
    %41 = tt.broadcast %31 : tensor<8x1xf32, #blocked> -> tensor<8x64xf32, #blocked> loc(#loc26)
    %42 = arith.addf %40, %41 : tensor<8x64xf32, #blocked> loc(#loc26)
    %43 = arith.cmpf ogt, %42, %cst : tensor<8x64xf32, #blocked> loc(#loc27)
    %44 = arith.mulf %42, %cst_0 : tensor<8x64xf32, #blocked> loc(#loc28)
    %45 = arith.select %43, %42, %44 : tensor<8x64xi1, #blocked>, tensor<8x64xf32, #blocked> loc(#loc29)
    %46 = "tt.reduce"(%45) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc31)), %arg10: f32 loc(callsite(#loc1 at #loc31))):
      %57 = arith.cmpf ogt, %arg9, %arg10 : f32 loc(#loc81)
      %58 = arith.cmpf une, %arg9, %arg9 : f32 loc(#loc82)
      %59 = arith.ori %57, %58 : i1 loc(#loc83)
      %60 = arith.select %59, %arg9, %arg10 : f32 loc(#loc84)
      tt.reduce.return %60 : f32 loc(#loc59)
    }) : (tensor<8x64xf32, #blocked>) -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc59)
    %47 = triton_gpu.convert_layout %46 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc36)
    %48 = tt.expand_dims %47 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xf32, #blocked1> loc(#loc36)
    %49:2 = "tt.reduce"(%45, %14) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc38)), %arg10: i32 loc(callsite(#loc1 at #loc38)), %arg11: f32 loc(callsite(#loc1 at #loc38)), %arg12: i32 loc(callsite(#loc1 at #loc38))):
      %57 = arith.cmpf ogt, %arg9, %arg11 : f32 loc(#loc85)
      %58 = arith.cmpf oeq, %arg9, %arg11 : f32 loc(#loc86)
      %59 = arith.cmpf une, %arg9, %arg9 : f32 loc(#loc87)
      %60 = arith.cmpf une, %arg11, %arg11 : f32 loc(#loc88)
      %61 = arith.xori %60, %true : i1 loc(#loc89)
      %62 = arith.andi %59, %61 : i1 loc(#loc90)
      %63 = arith.ori %57, %62 : i1 loc(#loc91)
      %64 = arith.andi %59, %60 : i1 loc(#loc92)
      %65 = arith.ori %58, %64 : i1 loc(#loc93)
      %66 = arith.cmpi slt, %arg10, %arg12 : i32 loc(#loc94)
      %67 = arith.andi %65, %66 : i1 loc(#loc95)
      %68 = arith.ori %63, %67 : i1 loc(#loc96)
      %69 = arith.select %68, %arg9, %arg11 : f32 loc(#loc97)
      %70 = arith.select %68, %arg10, %arg12 : i32 loc(#loc98)
      tt.reduce.return %69, %70 : f32, i32 loc(#loc65)
    }) : (tensor<8x64xf32, #blocked>, tensor<8x64xi32, #blocked>) -> (tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>) loc(#loc65)
    %50 = tt.expand_dims %49#1 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc53)
    %51 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked1> loc(#loc54)
    %52 = tt.addptr %51, %9 : tensor<8x1x!tt.ptr<f32>, #blocked1>, tensor<8x1xi32, #blocked1> loc(#loc54)
    tt.store %52, %48 : tensor<8x1x!tt.ptr<f32>, #blocked1> loc(#loc55)
    %53 = tt.splat %arg6 : !tt.ptr<i64> -> tensor<8x1x!tt.ptr<i64>, #blocked1> loc(#loc56)
    %54 = tt.addptr %53, %9 : tensor<8x1x!tt.ptr<i64>, #blocked1>, tensor<8x1xi32, #blocked1> loc(#loc56)
    %55 = triton_gpu.convert_layout %50 : tensor<8x1xi32, #blocked> -> tensor<8x1xi32, #blocked1> loc(#loc57)
    %56 = arith.extsi %55 : tensor<8x1xi32, #blocked1> to tensor<8x1xi64, #blocked1> loc(#loc57)
    tt.store %54, %56 : tensor<8x1x!tt.ptr<i64>, #blocked1> loc(#loc57)
    tt.return loc(#loc58)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":23:28)
#loc3 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":23:33)
#loc4 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":24:44)
#loc5 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":24:23)
#loc6 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":26:34)
#loc7 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":31:19)
#loc8 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":32:38)
#loc9 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":32:35)
#loc10 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":32:30)
#loc11 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":32:43)
#loc12 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":33:30)
#loc13 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":33:35)
#loc14 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":34:30)
#loc15 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":34:35)
#loc16 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":35:31)
#loc17 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":35:36)
#loc18 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":36:31)
#loc19 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":36:36)
#loc20 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":37:18)
#loc21 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":39:18)
#loc22 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":40:26)
#loc23 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":42:18)
#loc24 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":45:19)
#loc25 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":46:20)
#loc26 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":47:20)
#loc27 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":49:20)
#loc28 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":51:20)
#loc29 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":52:35)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc36 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":54:42)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":173:42)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":152:21)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":153:23)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":155:29)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":156:29)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:32)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:28)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:16)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":159:29)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":159:17)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:31)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:21)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:12)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":163:35)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":163:69)
#loc53 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":57:22)
#loc54 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":58:25)
#loc55 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":58:37)
#loc56 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":59:25)
#loc57 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":59:37)
#loc58 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":59:4)
#loc59 = loc(callsite(#loc30 at #loc31))
#loc61 = loc(callsite(#loc32 at #loc30))
#loc62 = loc(callsite(#loc33 at #loc30))
#loc63 = loc(callsite(#loc34 at #loc30))
#loc64 = loc(callsite(#loc35 at #loc30))
#loc65 = loc(callsite(#loc37 at #loc38))
#loc67 = loc(callsite(#loc39 at #loc37))
#loc68 = loc(callsite(#loc40 at #loc37))
#loc69 = loc(callsite(#loc41 at #loc37))
#loc70 = loc(callsite(#loc42 at #loc37))
#loc71 = loc(callsite(#loc43 at #loc37))
#loc72 = loc(callsite(#loc44 at #loc37))
#loc73 = loc(callsite(#loc45 at #loc37))
#loc74 = loc(callsite(#loc46 at #loc37))
#loc75 = loc(callsite(#loc47 at #loc37))
#loc76 = loc(callsite(#loc48 at #loc37))
#loc77 = loc(callsite(#loc49 at #loc37))
#loc78 = loc(callsite(#loc50 at #loc37))
#loc79 = loc(callsite(#loc51 at #loc37))
#loc80 = loc(callsite(#loc52 at #loc37))
#loc81 = loc(callsite(#loc61 at #loc31))
#loc82 = loc(callsite(#loc62 at #loc31))
#loc83 = loc(callsite(#loc63 at #loc31))
#loc84 = loc(callsite(#loc64 at #loc31))
#loc85 = loc(callsite(#loc67 at #loc38))
#loc86 = loc(callsite(#loc68 at #loc38))
#loc87 = loc(callsite(#loc69 at #loc38))
#loc88 = loc(callsite(#loc70 at #loc38))
#loc89 = loc(callsite(#loc71 at #loc38))
#loc90 = loc(callsite(#loc72 at #loc38))
#loc91 = loc(callsite(#loc73 at #loc38))
#loc92 = loc(callsite(#loc74 at #loc38))
#loc93 = loc(callsite(#loc75 at #loc38))
#loc94 = loc(callsite(#loc76 at #loc38))
#loc95 = loc(callsite(#loc77 at #loc38))
#loc96 = loc(callsite(#loc78 at #loc38))
#loc97 = loc(callsite(#loc79 at #loc38))
#loc98 = loc(callsite(#loc80 at #loc38))
