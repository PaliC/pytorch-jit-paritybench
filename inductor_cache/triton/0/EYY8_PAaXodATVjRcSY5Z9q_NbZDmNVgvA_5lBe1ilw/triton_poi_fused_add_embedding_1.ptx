//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_embedding_1 // -- Begin function triton_poi_fused_add_embedding_1
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_3[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_3[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 118, 54, 47, 99, 118, 54, 55, 50, 114, 116, 52, 101, 102, 113, 102, 108, 102, 101, 110, 107, 118, 120, 116, 108, 106, 116, 55, 55, 119, 116, 104, 107, 98, 103, 97, 105, 120, 120, 101, 114, 101, 119, 114, 122, 53, 53, 101, 105, 52, 103, 55, 54, 112, 114, 99, 46, 112, 121};
.global .align 1 .b8 assertMessage_3[37] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 51, 50, 32, 60, 32, 49, 51};
.global .align 1 .b8 assertFunc_2[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_2[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 118, 54, 47, 99, 118, 54, 55, 50, 114, 116, 52, 101, 102, 113, 102, 108, 102, 101, 110, 107, 118, 120, 116, 108, 106, 116, 55, 55, 119, 116, 104, 107, 98, 103, 97, 105, 120, 120, 101, 114, 101, 119, 114, 122, 53, 53, 101, 105, 52, 103, 55, 54, 112, 114, 99, 46, 112, 121};
.global .align 1 .b8 assertMessage_2[37] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 50, 51, 32, 60, 32, 51, 50};
.global .align 1 .b8 assertFunc_1[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_1[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 118, 54, 47, 99, 118, 54, 55, 50, 114, 116, 52, 101, 102, 113, 102, 108, 102, 101, 110, 107, 118, 120, 116, 108, 106, 116, 55, 55, 119, 116, 104, 107, 98, 103, 97, 105, 120, 120, 101, 114, 101, 119, 114, 122, 53, 53, 101, 105, 52, 103, 55, 54, 112, 114, 99, 46, 112, 121};
.global .align 1 .b8 assertMessage_1[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 49, 52, 32, 60, 32, 55};
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 118, 54, 47, 99, 118, 54, 55, 50, 114, 116, 52, 101, 102, 113, 102, 108, 102, 101, 110, 107, 118, 120, 116, 108, 106, 116, 55, 55, 119, 116, 104, 107, 98, 103, 97, 105, 120, 120, 101, 114, 101, 119, 114, 122, 53, 53, 101, 105, 52, 103, 55, 54, 112, 114, 99, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 54, 32, 60, 32, 50, 52};
                                        // @triton_poi_fused_add_embedding_1
.visible .entry triton_poi_fused_add_embedding_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_1_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_1_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_1_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_1_param_5,
	.param .u32 triton_poi_fused_add_embedding_1_param_6
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<34>;
	.reg .b32 	%r<69>;
	.reg .f32 	%f<29>;
	.reg .b64 	%rd<110>;
	.loc	1 19 0                          // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:19:0

// %bb.0:
	ld.param.u64 	%rd24, [triton_poi_fused_add_embedding_1_param_0];
	ld.param.u64 	%rd25, [triton_poi_fused_add_embedding_1_param_1];
$L__tmp0:
	.loc	1 21 28                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:21:28
	// begin inline asm
	mov.u32 %r13, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:21:33
	shl.b32 	%r24, %r13, 6;
	.loc	1 22 36                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:22:36
	mov.u32 	%r25, %tid.x;
	shl.b32 	%r26, %r25, 1;
	and.b32  	%r27, %r26, 2;
	and.b32  	%r28, %r26, 62;
	.loc	1 22 23                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:22:23
	or.b32  	%r1, %r24, %r28;
	or.b32  	%r29, %r27, %r24;
	or.b32  	%r30, %r29, 1;
	.loc	1 23 21                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:23:21
	setp.lt.s32 	%p9, %r1, 64;
	.loc	1 27 21                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:27:21
	shr.s32 	%r32, %r1, 31;
	shr.u32 	%r33, %r32, 30;
	add.s32 	%r34, %r1, %r33;
	.loc	1 25 19                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:25:19
	and.b32  	%r35, %r34, 1073741820;
	sub.s32 	%r36, %r1, %r35;
	bfe.s32 	%r37, %r13, 25, 1;
	shr.u32 	%r38, %r37, 30;
	add.s32 	%r39, %r30, %r38;
	and.b32  	%r40, %r39, 1073741764;
	sub.s32 	%r41, %r30, %r40;
	.loc	1 26 19                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:26:19
	shr.u32 	%r42, %r37, 28;
	add.s32 	%r43, %r1, %r42;
	.loc	1 28 34                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:28:34
	mul.wide.s32 	%rd26, %r1, 4;
	add.s64 	%rd15, %rd24, %rd26;
	.loc	1 28 39                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:28:39
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p9 ld.global.v2.b32 { %r14, %r15 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 29 36                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:29:36
	shl.b32 	%r44, %r36, 2;
	shl.b32 	%r45, %r41, 2;
	.loc	1 29 44                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:29:44
	and.b32  	%r46, %r43, -16;
	.loc	1 32 38                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:32:38
	add.s32 	%r47, %r44, %r46;
	.loc	1 29 41                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:29:41
	or.b32  	%r48, %r47, 3;
	.loc	1 32 38                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:32:38
	add.s32 	%r49, %r45, %r46;
	.loc	1 29 41                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:29:41
	or.b32  	%r50, %r49, 3;
	.loc	1 29 30                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:29:30
	mul.wide.s32 	%rd27, %r48, 4;
	add.s64 	%rd16, %rd25, %rd27;
	mul.wide.s32 	%rd28, %r50, 4;
	add.s64 	%rd17, %rd25, %rd28;
	.loc	1 29 49                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:29:49
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r16 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r17 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 30 41                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:30:41
	or.b32  	%r51, %r47, 2;
	or.b32  	%r52, %r49, 2;
	.loc	1 30 30                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:30:30
	mul.wide.s32 	%rd29, %r51, 4;
	add.s64 	%rd18, %rd25, %rd29;
	mul.wide.s32 	%rd30, %r52, 4;
	add.s64 	%rd19, %rd25, %rd30;
	.loc	1 30 49                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:30:49
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r18 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r19 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 31 42                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:31:42
	or.b32  	%r53, %r47, 1;
	or.b32  	%r54, %r49, 1;
	.loc	1 31 31                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:31:31
	mul.wide.s32 	%rd31, %r53, 4;
	add.s64 	%rd20, %rd25, %rd31;
	mul.wide.s32 	%rd32, %r54, 4;
	add.s64 	%rd21, %rd25, %rd32;
	.loc	1 31 50                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:31:50
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r20 }, [ %rd20 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r21 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 32 31                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:32:31
	mul.wide.s32 	%rd33, %r47, 4;
	add.s64 	%rd22, %rd25, %rd33;
	mul.wide.s32 	%rd34, %r49, 4;
	add.s64 	%rd23, %rd25, %rd34;
	.loc	1 32 46                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:32:46
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r22 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r23 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 29 49                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:29:49
	mov.b32 	%f5, %r17;
	mov.b32 	%f6, %r16;
	.loc	1 33 19                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:33:19
	cvt.rzi.s64.f32 	%rd35, %f6;
	cvt.rzi.s64.f32 	%rd36, %f5;
	.loc	1 35 18                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:35:18
	add.s64 	%rd37, %rd36, 24;
	add.s64 	%rd38, %rd35, 24;
	.loc	1 36 18                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:36:18
	setp.lt.s64 	%p10, %rd36, 0;
	setp.lt.s64 	%p11, %rd35, 0;
	.loc	1 37 32                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:37:32
	selp.b64 	%rd2, %rd38, %rd35, %p11;
	selp.b64 	%rd3, %rd37, %rd36, %p10;
	.loc	1 38 61                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:38:61
	max.u64 	%rd39, %rd2, %rd3;
	setp.gt.u64 	%p12, %rd39, 23;
	and.pred  	%p13, %p9, %p12;
	@!%p13 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 61                          // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:0:61
	ld.param.u64 	%rd11, [triton_poi_fused_add_embedding_1_param_2];
	shr.s32 	%r2, %r34, 2;
	.loc	1 30 49                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:30:49
	mov.b32 	%f7, %r18;
	mov.b32 	%f8, %r19;
	.loc	1 27 26                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:27:26
	shr.u32 	%r57, %r2, 30;
	add.s32 	%r58, %r2, %r57;
	and.b32  	%r59, %r58, -4;
	sub.s32 	%r60, %r2, %r59;
	.loc	1 38 61                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:38:61
	bar.sync 	0;
	.loc	1 39 30                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:39:30
	shl.b64 	%rd42, %rd2, 4;
	add.s64 	%rd43, %rd11, %rd42;
	mul.wide.s32 	%rd44, %r60, 4;
	add.s64 	%rd40, %rd43, %rd44;
	shl.b64 	%rd45, %rd3, 4;
	add.s64 	%rd46, %rd11, %rd45;
	add.s64 	%rd41, %rd46, %rd44;
	.loc	1 39 44                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:39:44
	// begin inline asm
	mov.u32 %r55, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r55 }, [ %rd40 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r56, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r56 }, [ %rd41 + 0 ];
	// end inline asm
	.loc	1 40 20                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:40:20
	cvt.rzi.s64.f32 	%rd47, %f8;
	cvt.rzi.s64.f32 	%rd48, %f7;
	.loc	1 42 20                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:42:20
	add.s64 	%rd49, %rd48, 7;
	add.s64 	%rd50, %rd47, 7;
	.loc	1 43 20                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:43:20
	setp.lt.s64 	%p16, %rd48, 0;
	setp.lt.s64 	%p17, %rd47, 0;
	.loc	1 44 35                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:44:35
	selp.b64 	%rd6, %rd50, %rd47, %p17;
	selp.b64 	%rd5, %rd49, %rd48, %p16;
	.loc	1 45 62                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:45:62
	max.u64 	%rd51, %rd5, %rd6;
	setp.gt.u64 	%p18, %rd51, 6;
	and.pred  	%p19, %p9, %p18;
	@!%p19 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:
	.loc	1 0 62                          // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:0:62
	ld.param.u64 	%rd12, [triton_poi_fused_add_embedding_1_param_3];
	mov.b32 	%f2, %r20;
	mov.b32 	%f1, %r21;
	cvt.s64.s32 	%rd4, %r60;
	.loc	1 23 21                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:23:21
	setp.gt.s32 	%p22, %r1, 63;
	.loc	1 45 62                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:45:62
	bar.sync 	0;
	.loc	1 46 31                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:46:31
	shl.b64 	%rd54, %rd5, 4;
	add.s64 	%rd55, %rd12, %rd54;
	shl.b64 	%rd56, %rd4, 2;
	add.s64 	%rd52, %rd55, %rd56;
	shl.b64 	%rd57, %rd6, 4;
	add.s64 	%rd58, %rd12, %rd57;
	add.s64 	%rd53, %rd58, %rd56;
	.loc	1 46 46                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:46:46
	// begin inline asm
	mov.u32 %r61, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r61 }, [ %rd52 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r62, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r62 }, [ %rd53 + 0 ];
	// end inline asm
	.loc	1 48 21                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:48:21
	cvt.rzi.s64.f32 	%rd59, %f2;
	cvt.rzi.s64.f32 	%rd60, %f1;
	.loc	1 52 35                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:52:35
	shr.u64 	%rd61, %rd60, 58;
	shr.u64 	%rd62, %rd59, 58;
	and.b64  	%rd63, %rd62, 32;
	and.b64  	%rd64, %rd61, 32;
	add.s64 	%rd7, %rd64, %rd60;
	add.s64 	%rd8, %rd63, %rd59;
	.loc	1 53 63                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:53:63
	or.b64  	%rd65, %rd7, %rd8;
	setp.lt.u64 	%p23, %rd65, 32;
	or.pred  	%p24, %p22, %p23;
	@%p24 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_5;
$L__BB0_6:
	.loc	1 0 63                          // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:0:63
	ld.param.u64 	%rd13, [triton_poi_fused_add_embedding_1_param_4];
	mov.b32 	%f3, %r22;
	mov.b32 	%f4, %r23;
	.loc	1 53 63                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:53:63
	bar.sync 	0;
	.loc	1 54 31                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:54:31
	shl.b64 	%rd68, %rd8, 4;
	add.s64 	%rd69, %rd13, %rd68;
	add.s64 	%rd66, %rd69, %rd56;
	shl.b64 	%rd71, %rd7, 4;
	add.s64 	%rd72, %rd13, %rd71;
	add.s64 	%rd67, %rd72, %rd56;
	.loc	1 54 46                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:54:46
	// begin inline asm
	mov.u32 %r63, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r63 }, [ %rd66 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r64, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r64 }, [ %rd67 + 0 ];
	// end inline asm
	.loc	1 56 21                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:56:21
	cvt.rzi.s64.f32 	%rd73, %f3;
	cvt.rzi.s64.f32 	%rd74, %f4;
	.loc	1 58 20                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:58:20
	add.s64 	%rd75, %rd74, 13;
	add.s64 	%rd76, %rd73, 13;
	.loc	1 59 20                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:59:20
	setp.lt.s64 	%p27, %rd74, 0;
	setp.lt.s64 	%p28, %rd73, 0;
	.loc	1 60 35                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:60:35
	selp.b64 	%rd9, %rd76, %rd73, %p28;
	selp.b64 	%rd10, %rd75, %rd74, %p27;
	.loc	1 61 63                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:61:63
	max.u64 	%rd77, %rd9, %rd10;
	setp.gt.u64 	%p29, %rd77, 12;
	and.pred  	%p30, %p9, %p29;
	@!%p30 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:
	.loc	1 0 63                          // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:0:63
	ld.param.u64 	%rd14, [triton_poi_fused_add_embedding_1_param_5];
	.loc	1 39 44                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:39:44
	mov.b32 	%f9, %r56;
	.loc	1 46 46                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:46:46
	mov.b32 	%f10, %r62;
	.loc	1 47 19                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:47:19
	add.f32 	%f11, %f9, %f10;
	.loc	1 54 46                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:54:46
	mov.b32 	%f12, %r64;
	.loc	1 55 20                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:55:20
	add.f32 	%f13, %f11, %f12;
	.loc	1 39 44                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:39:44
	mov.b32 	%f14, %r55;
	.loc	1 46 46                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:46:46
	mov.b32 	%f15, %r61;
	.loc	1 47 19                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:47:19
	add.f32 	%f16, %f14, %f15;
	.loc	1 54 46                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:54:46
	mov.b32 	%f17, %r63;
	.loc	1 55 20                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:55:20
	add.f32 	%f18, %f16, %f17;
	.loc	1 28 39                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:28:39
	mov.b32 	%f19, %r15;
	mov.b32 	%f20, %r14;
	.loc	1 61 63                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:61:63
	bar.sync 	0;
	.loc	1 62 31                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:62:31
	shl.b64 	%rd81, %rd9, 4;
	add.s64 	%rd82, %rd14, %rd81;
	add.s64 	%rd78, %rd82, %rd56;
	shl.b64 	%rd84, %rd10, 4;
	add.s64 	%rd85, %rd14, %rd84;
	add.s64 	%rd79, %rd85, %rd56;
	.loc	1 62 46                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:62:46
	// begin inline asm
	mov.u32 %r65, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r65 }, [ %rd78 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r65;
	// begin inline asm
	mov.u32 %r66, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r66 }, [ %rd79 + 0 ];
	// end inline asm
	mov.b32 	%f22, %r66;
	.loc	1 63 20                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:63:20
	add.f32 	%f23, %f18, %f21;
	add.f32 	%f24, %f13, %f22;
	.loc	1 65 20                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:65:20
	add.f32 	%f25, %f23, 0f00000000;
	add.f32 	%f26, %f24, 0f00000000;
	.loc	1 66 19                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:66:19
	add.f32 	%f27, %f25, %f20;
	add.f32 	%f28, %f26, %f19;
	.loc	1 67 40                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:67:40
	mov.b32 	%r67, %f27;
	mov.b32 	%r68, %f28;
	// begin inline asm
	@%p9 st.global.v2.b32 [ %rd15 + 0 ], { %r67, %r68 };
	// end inline asm
	.loc	1 67 4                          // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:67:4
	ret;
$L__BB0_1:
	.loc	1 38 61                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:38:61
	mov.u64 	%rd104, assertMessage_0;
	cvta.global.u64 	%rd105, %rd104;
	mov.u64 	%rd106, assertFile_0;
	cvta.global.u64 	%rd107, %rd106;
	mov.u64 	%rd108, assertFunc_0;
	cvta.global.u64 	%rd109, %rd108;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd105;
	.param .b64 param1;
	st.param.b64 	[param1], %rd107;
	.param .b32 param2;
	st.param.b32 	[param2], 38;
	.param .b64 param3;
	st.param.b64 	[param3], %rd109;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 3
	trap;
$L__BB0_3:
	.loc	1 45 62                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:45:62
	mov.u64 	%rd98, assertMessage_1;
	cvta.global.u64 	%rd99, %rd98;
	mov.u64 	%rd100, assertFile_1;
	cvta.global.u64 	%rd101, %rd100;
	mov.u64 	%rd102, assertFunc_1;
	cvta.global.u64 	%rd103, %rd102;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd99;
	.param .b64 param1;
	st.param.b64 	[param1], %rd101;
	.param .b32 param2;
	st.param.b32 	[param2], 45;
	.param .b64 param3;
	st.param.b64 	[param3], %rd103;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 2
	trap;
$L__BB0_5:
	.loc	1 53 63                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:53:63
	mov.u64 	%rd92, assertMessage_2;
	cvta.global.u64 	%rd93, %rd92;
	mov.u64 	%rd94, assertFile_2;
	cvta.global.u64 	%rd95, %rd94;
	mov.u64 	%rd96, assertFunc_2;
	cvta.global.u64 	%rd97, %rd96;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd93;
	.param .b64 param1;
	st.param.b64 	[param1], %rd95;
	.param .b32 param2;
	st.param.b32 	[param2], 53;
	.param .b64 param3;
	st.param.b64 	[param3], %rd97;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__BB0_7:
	.loc	1 61 63                         // cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py:61:63
	mov.u64 	%rd86, assertMessage_3;
	cvta.global.u64 	%rd87, %rd86;
	mov.u64 	%rd88, assertFile_3;
	cvta.global.u64 	%rd89, %rd88;
	mov.u64 	%rd90, assertFunc_3;
	cvta.global.u64 	%rd91, %rd90;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd87;
	.param .b64 param1;
	st.param.b64 	[param1], %rd89;
	.param .b32 param2;
	st.param.b32 	[param2], 61;
	.param .b64 param3;
	st.param.b64 	[param3], %rd91;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/v6/cv672rt4efqflfenkvxtljt77wthkbgaixxerewrz55ei4g76prc.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 54
.b8 55
.b8 50
.b8 114
.b8 116
.b8 52
.b8 101
.b8 102
.b8 113
.b8 102
.b8 108
.b8 102
.b8 101
.b8 110
.b8 107
.b8 118
.b8 120
.b8 116
.b8 108
.b8 106
.b8 116
.b8 55
.b8 55
.b8 119
.b8 116
.b8 104
.b8 107
.b8 98
.b8 103
.b8 97
.b8 105
.b8 120
.b8 120
.b8 101
.b8 114
.b8 101
.b8 119
.b8 114
.b8 122
.b8 53
.b8 53
.b8 101
.b8 105
.b8 52
.b8 103
.b8 55
.b8 54
.b8 112
.b8 114
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 54
.b8 0
	}
	.section	.debug_macinfo	{	}
