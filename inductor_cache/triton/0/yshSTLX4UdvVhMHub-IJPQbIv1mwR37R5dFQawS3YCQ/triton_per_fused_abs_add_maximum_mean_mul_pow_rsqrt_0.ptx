//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0 // -- Begin function triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0
.visible .entry triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_6,
	.param .u32 triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_7,
	.param .u32 triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_8
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<50>;
	.reg .f32 	%f<36>;
	.reg .b64 	%rd<20>;
	.loc	1 19 0                          // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd10, [triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_0];
	ld.param.u64 	%rd11, [triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:25:21
	setp.lt.s32 	%p1, %r1, 16;
	ld.param.u64 	%rd12, [triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_2];
	ld.param.u64 	%rd13, [triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_3];
	.loc	1 26 34                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:26:34
	mov.u32 	%r19, %tid.x;
	and.b32  	%r20, %r19, 15;
	ld.param.u64 	%rd14, [triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_4];
	.loc	1 31 19                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:31:19
	shr.s32 	%r21, %r1, 31;
	shr.u32 	%r22, %r21, 30;
	add.s32 	%r23, %r1, %r22;
	and.b32  	%r24, %r23, -4;
	sub.s32 	%r25, %r1, %r24;
	ld.param.u64 	%rd15, [triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_5];
	.loc	1 32 38                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:32:38
	shl.b32 	%r26, %r1, 4;
	ld.param.u64 	%rd16, [triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0_param_6];
	.loc	1 32 35                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:32:35
	or.b32  	%r27, %r26, %r20;
	.loc	1 32 30                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:32:30
	mul.wide.s32 	%rd17, %r27, 4;
	add.s64 	%rd1, %rd11, %rd17;
	mov.b32 	%r3, 0;
	.loc	1 32 43                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:32:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 33 30                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:33:30
	mul.wide.s32 	%rd18, %r25, 4;
	add.s64 	%rd3, %rd12, %rd18;
	.loc	1 33 35                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:33:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	// end inline asm
	and.b32  	%r28, %r6, 2147483647;
	mov.b32 	%f3, %r28;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd3 + 0 ];
	// end inline asm
	and.b32  	%r29, %r7, 2147483647;
	mov.b32 	%f4, %r29;
	.loc	1 34 31                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:34:31
	add.s64 	%rd5, %rd13, %rd18;
	.loc	1 34 36                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:34:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 35 31                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:35:31
	add.s64 	%rd6, %rd14, %rd18;
	.loc	1 35 36                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:35:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 31                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:36:31
	add.s64 	%rd7, %rd15, %rd18;
	.loc	1 36 36                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:36:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 37 18                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:37:18
	mul.f32 	%f5, %f1, %f1;
	mul.f32 	%f6, %f2, %f2;
	.loc	1 39 33                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:39:33
	selp.f32 	%f7, %f5, 0f00000000, %p1;
	selp.f32 	%f8, %f6, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f7;
	shfl.sync.bfly.b32	%r31, %r30, 8, 31, -1;
	mov.b32 	%f9, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f7, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f10;
	shfl.sync.bfly.b32	%r33, %r32, 4, 31, -1;
	mov.b32 	%f11, %r33;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f12;
	shfl.sync.bfly.b32	%r35, %r34, 2, 31, -1;
	mov.b32 	%f13, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f14;
	shfl.sync.bfly.b32	%r37, %r36, 1, 31, -1;
	mov.b32 	%f15, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f8;
	shfl.sync.bfly.b32	%r39, %r38, 8, 31, -1;
	mov.b32 	%f17, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f8, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f18;
	shfl.sync.bfly.b32	%r41, %r40, 4, 31, -1;
	mov.b32 	%f19, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f20;
	shfl.sync.bfly.b32	%r43, %r42, 2, 31, -1;
	mov.b32 	%f21, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f22;
	shfl.sync.bfly.b32	%r45, %r44, 1, 31, -1;
	mov.b32 	%f23, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
$L__tmp2:
	.loc	1 42 18                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:42:18
	mov.b32 	%r12, %f16;
	mov.b32 	%r13, 1098907648;
	// begin inline asm
	div.full.f32 %r11, %r12, %r13;
	// end inline asm
	mov.b32 	%f25, %r11;
	mov.b32 	%r15, %f24;
	// begin inline asm
	div.full.f32 %r14, %r15, %r13;
	// end inline asm
	mov.b32 	%f26, %r14;
	.loc	1 44 19                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:44:19
	add.f32 	%f27, %f3, %f25;
	add.f32 	%f28, %f4, %f26;
	.loc	1 45 28                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:45:28
	rsqrt.approx.ftz.f32 	%f29, %f27;
	rsqrt.approx.ftz.f32 	%f30, %f28;
	.loc	1 36 36                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:36:36
	mov.b32 	%f31, %r10;
	.loc	1 35 36                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:35:36
	mov.b32 	%f32, %r9;
	.loc	1 34 36                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:34:36
	mov.b32 	%f33, %r8;
	.loc	1 46 19                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:46:19
	mul.f32 	%f34, %f29, %f1;
	.loc	1 48 20                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:48:20
	fma.rn.f32 	%f35, %f34, %f33, %f32;
$L__tmp3:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p12, %f35, %f31;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p13, %f35, %f35;
$L__tmp4:
	.loc	1 50 4                          // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:50:4
	bar.sync 	0;
	.loc	1 51 28                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:51:28
	mul.wide.s32 	%rd19, %r1, 4;
	add.s64 	%rd8, %rd10, %rd19;
	.loc	1 51 40                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:51:40
	and.b32  	%r46, %r19, 63;
	setp.eq.s32 	%p14, %r46, 0;
	mov.b32 	%r17, %f30;
	and.pred  	%p10, %p14, %p1;
	// begin inline asm
	@%p10 st.global.b32 [ %rd8 + 0 ], { %r17 };
	// end inline asm
	.loc	1 52 25                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:52:25
	add.s64 	%rd9, %rd16, %rd17;
	.loc	1 52 45                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:52:45
	and.b32  	%r47, %r19, 48;
	setp.eq.s32 	%p15, %r47, 0;
	mov.b32 	%r48, %f35;
$L__tmp5:
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r49, %r48, %r10, %p13;
	selp.b32 	%r18, %r48, %r49, %p12;
$L__tmp6:
	.loc	1 52 45                         // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:52:45
	and.pred  	%p11, %p15, %p1;
	// begin inline asm
	@%p11 st.global.b32 [ %rd9 + 0 ], { %r18 };
	// end inline asm
	.loc	1 52 4                          // citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py:52:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 222                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 116
.b8 113
.b8 117
.b8 53
.b8 50
.b8 103
.b8 53
.b8 120
.b8 99
.b8 111
.b8 100
.b8 101
.b8 104
.b8 98
.b8 116
.b8 107
.b8 105
.b8 99
.b8 105
.b8 110
.b8 100
.b8 122
.b8 106
.b8 53
.b8 113
.b8 100
.b8 114
.b8 106
.b8 101
.b8 104
.b8 102
.b8 105
.b8 106
.b8 105
.b8 119
.b8 104
.b8 97
.b8 52
.b8 52
.b8 121
.b8 51
.b8 103
.b8 55
.b8 105
.b8 51
.b8 113
.b8 116
.b8 115
.b8 116
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x38 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 98
.b8 115
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 97
.b8 120
.b8 105
.b8 109
.b8 117
.b8 109
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
