#loc = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":19:0)
#loc1 = loc(unknown)
#loc22 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":40:24)
#loc44 = loc(callsite(#loc1 at #loc22))
module {
  tt.func public @triton_per_fused_abs_add_maximum_mean_mul_pow_rsqrt_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":19:0)) attributes {noinline = false} {
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.remsi %0, %c4_i32 : i32 loc(#loc6)
    %6 = arith.muli %0, %c16_i32 : i32 loc(#loc7)
    %7 = tt.splat %6 : i32 -> tensor<1x16xi32> loc(#loc8)
    %8 = arith.addi %4, %7 : tensor<1x16xi32> loc(#loc8)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %8 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc9)
    %11 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc10)
    %12 = tt.load %10, %11, %cst_0 : tensor<1x16x!tt.ptr<f32>> loc(#loc10)
    %13 = tt.addptr %arg2, %5 : !tt.ptr<f32>, i32 loc(#loc11)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc11)
    %15 = tt.load %14, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc12)
    %16 = tt.addptr %arg3, %5 : !tt.ptr<f32>, i32 loc(#loc13)
    %17 = tt.splat %16 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc13)
    %18 = tt.load %17, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc14)
    %19 = tt.addptr %arg4, %5 : !tt.ptr<f32>, i32 loc(#loc15)
    %20 = tt.splat %19 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc15)
    %21 = tt.load %20, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc16)
    %22 = tt.addptr %arg5, %5 : !tt.ptr<f32>, i32 loc(#loc17)
    %23 = tt.splat %22 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc17)
    %24 = tt.load %23, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc18)
    %25 = arith.mulf %12, %12 : tensor<1x16xf32> loc(#loc19)
    %26 = arith.select %11, %25, %cst_0 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc20)
    %27 = "tt.reduce"(%26) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc22)), %arg10: f32 loc(callsite(#loc1 at #loc22))):
      %48 = arith.addf %arg9, %arg10 : f32 loc(#loc50)
      tt.reduce.return %48 : f32 loc(#loc43)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc43)
    %28 = tt.expand_dims %27 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc24)
    %29 = arith.divf %28, %cst : tensor<1x1xf32> loc(#loc25)
    %30 = math.absf %15 : tensor<1x1xf32> loc(#loc26)
    %31 = arith.addf %29, %30 : tensor<1x1xf32> loc(#loc27)
    %32 = tt.extern_elementwise %31 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc28)
    %33 = tt.broadcast %32 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc29)
    %34 = arith.mulf %12, %33 : tensor<1x16xf32> loc(#loc29)
    %35 = tt.broadcast %18 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc30)
    %36 = arith.mulf %35, %34 : tensor<1x16xf32> loc(#loc30)
    %37 = tt.broadcast %21 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc31)
    %38 = arith.addf %36, %37 : tensor<1x16xf32> loc(#loc31)
    %39 = tt.broadcast %24 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc46)
    %40 = arith.cmpf ogt, %38, %39 : tensor<1x16xf32> loc(#loc46)
    %41 = arith.cmpf une, %38, %38 : tensor<1x16xf32> loc(#loc47)
    %42 = arith.ori %40, %41 : tensor<1x16xi1> loc(#loc48)
    %43 = arith.select %42, %38, %39 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc49)
    gpu.barrier loc(#loc37)
    %44 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc38)
    %45 = tt.splat %44 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc38)
    tt.store %45, %32, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc39)
    %46 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc40)
    %47 = tt.addptr %46, %8 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc40)
    tt.store %47, %43, %11 : tensor<1x16x!tt.ptr<f32>> loc(#loc41)
    tt.return loc(#loc42)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":23:28)
#loc3 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":25:21)
#loc4 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":26:26)
#loc5 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":26:34)
#loc6 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":31:19)
#loc7 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":32:38)
#loc8 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":32:35)
#loc9 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":32:30)
#loc10 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":32:43)
#loc11 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":33:30)
#loc12 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":33:35)
#loc13 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":34:31)
#loc14 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":34:36)
#loc15 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":35:31)
#loc16 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":35:36)
#loc17 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":36:31)
#loc18 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":36:36)
#loc19 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":37:18)
#loc20 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":39:33)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc24 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":40:27)
#loc25 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":42:18)
#loc26 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":43:23)
#loc27 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":44:19)
#loc28 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":45:28)
#loc29 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":46:19)
#loc30 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":47:20)
#loc31 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":48:20)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc33 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":49:42)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc37 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":50:4)
#loc38 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":51:28)
#loc39 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":51:40)
#loc40 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":52:25)
#loc41 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":52:45)
#loc42 = loc("inductor_cache/it/citqu52g5xcodehbtkicindzj5qdrjehfijiwha44y3g7i3qtsto.py":52:4)
#loc43 = loc(callsite(#loc21 at #loc22))
#loc45 = loc(callsite(#loc23 at #loc21))
#loc46 = loc(callsite(#loc32 at #loc33))
#loc47 = loc(callsite(#loc34 at #loc33))
#loc48 = loc(callsite(#loc35 at #loc33))
#loc49 = loc(callsite(#loc36 at #loc33))
#loc50 = loc(callsite(#loc45 at #loc22))
