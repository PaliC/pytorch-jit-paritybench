; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_clone_elu_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %11 = shl i32 %10, 8, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = shl i32 %12, 1, !dbg !12
  %14 = and i32 %13, 254, !dbg !12
  %15 = or disjoint i32 %11, %14, !dbg !13
  %16 = icmp slt i32 %15, 512, !dbg !14
  %.frozen = freeze i32 %15, !dbg !15
  %17 = sdiv i32 %.frozen, 128, !dbg !15
  %18 = mul i32 %17, 128, !dbg !16
  %.decomposed = sub i32 %.frozen, %18, !dbg !16
  %19 = sdiv i32 %15, 64, !dbg !17
  %20 = srem i32 %19, 2, !dbg !18
  %21 = add nsw i32 %.decomposed, 256, !dbg !19
  %22 = mul i32 %17, 384, !dbg !20
  %23 = add i32 %21, %22, !dbg !21
  %24 = sext i32 %23 to i64, !dbg !22
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !22
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %25, i1 %16) #3, !dbg !23
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !23
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !23
  %29 = bitcast i32 %27 to float, !dbg !23
  %30 = bitcast i32 %28 to float, !dbg !23
  %31 = sext i32 %20 to i64, !dbg !24
  %32 = getelementptr float, ptr addrspace(1) %2, i64 %31, !dbg !24
  %33 = getelementptr i8, ptr addrspace(1) %32, i64 16, !dbg !24
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %16) #3, !dbg !25
  %35 = bitcast i32 %34 to float, !dbg !25
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %16) #3, !dbg !25
  %37 = bitcast i32 %36 to float, !dbg !25
  %38 = getelementptr float, ptr addrspace(1) %3, i64 %31, !dbg !26
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %16) #3, !dbg !27
  %40 = bitcast i32 %39 to float, !dbg !27
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %16) #3, !dbg !27
  %42 = bitcast i32 %41 to float, !dbg !27
  %43 = getelementptr float, ptr addrspace(1) %4, i64 %31, !dbg !28
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %16) #3, !dbg !29
  %45 = bitcast i32 %44 to float, !dbg !29
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %16) #3, !dbg !29
  %47 = bitcast i32 %46 to float, !dbg !29
  %48 = getelementptr float, ptr addrspace(1) %5, i64 %31, !dbg !30
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %16) #3, !dbg !31
  %50 = bitcast i32 %49 to float, !dbg !31
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %16) #3, !dbg !31
  %52 = bitcast i32 %51 to float, !dbg !31
  %53 = getelementptr float, ptr addrspace(1) %6, i64 %31, !dbg !32
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %16) #3, !dbg !33
  %55 = bitcast i32 %54 to float, !dbg !33
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %16) #3, !dbg !33
  %57 = bitcast i32 %56 to float, !dbg !33
  %58 = fadd float %29, %35, !dbg !34
  %59 = fadd float %30, %37, !dbg !34
  %60 = fsub float %58, %40, !dbg !35
  %61 = fsub float %59, %42, !dbg !35
  %62 = fadd float %45, 0x3F1A36E2E0000000, !dbg !36
  %63 = fadd float %47, 0x3F1A36E2E0000000, !dbg !36
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i = icmp eq i32 %64, 0, !dbg !37
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i = icmp eq i32 %65, 0, !dbg !37
  br i1 %.not.i, label %71, label %66, !dbg !37

66:                                               ; preds = %9
  br i1 %.not1.i, label %69, label %67, !dbg !37

67:                                               ; preds = %66
  %68 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %62) #3, !dbg !37
  br label %__nv_sqrtf.exit, !dbg !37

69:                                               ; preds = %66
  %70 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %62) #3, !dbg !37
  br label %__nv_sqrtf.exit, !dbg !37

71:                                               ; preds = %9
  br i1 %.not1.i, label %74, label %72, !dbg !37

72:                                               ; preds = %71
  %73 = tail call float @llvm.nvvm.sqrt.rn.f(float %62) #3, !dbg !37
  br label %__nv_sqrtf.exit, !dbg !37

74:                                               ; preds = %71
  %75 = tail call float @llvm.nvvm.sqrt.approx.f(float %62) #3, !dbg !37
  br label %__nv_sqrtf.exit, !dbg !37

__nv_sqrtf.exit:                                  ; preds = %67, %69, %72, %74
  %.0.i = phi float [ %68, %67 ], [ %70, %69 ], [ %73, %72 ], [ %75, %74 ], !dbg !37
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i1 = icmp eq i32 %76, 0, !dbg !37
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i4 = icmp eq i32 %77, 0, !dbg !37
  br i1 %.not.i1, label %83, label %78, !dbg !37

78:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %81, label %79, !dbg !37

79:                                               ; preds = %78
  %80 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %63) #3, !dbg !37
  br label %__nv_sqrtf.exit5, !dbg !37

81:                                               ; preds = %78
  %82 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %63) #3, !dbg !37
  br label %__nv_sqrtf.exit5, !dbg !37

83:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %86, label %84, !dbg !37

84:                                               ; preds = %83
  %85 = tail call float @llvm.nvvm.sqrt.rn.f(float %63) #3, !dbg !37
  br label %__nv_sqrtf.exit5, !dbg !37

86:                                               ; preds = %83
  %87 = tail call float @llvm.nvvm.sqrt.approx.f(float %63) #3, !dbg !37
  br label %__nv_sqrtf.exit5, !dbg !37

__nv_sqrtf.exit5:                                 ; preds = %79, %81, %84, %86
  %.0.i3 = phi float [ %80, %79 ], [ %82, %81 ], [ %85, %84 ], [ %87, %86 ], !dbg !37
  %88 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !38
  %89 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !38
  %90 = fmul float %60, %88, !dbg !39
  %91 = fmul float %61, %89, !dbg !39
  %92 = fmul float %90, %50, !dbg !40
  %93 = fmul float %91, %52, !dbg !40
  %94 = fadd float %92, %55, !dbg !41
  %95 = fadd float %93, %57, !dbg !41
  %96 = fmul float %94, 0x3FF7154760000000, !dbg !42
  %97 = tail call float @llvm.nvvm.round.f(float %96) #3, !dbg !42
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not.i6 = icmp eq i32 %98, 0, !dbg !42
  %99 = tail call float @llvm.nvvm.fabs.ftz.f(float %94) #3, !dbg !42
  %100 = tail call float @llvm.nvvm.fabs.f(float %94) #3, !dbg !42
  %.03.i = select i1 %.not.i6, float %100, float %99, !dbg !42
  %101 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !42
  %t.0.i = select i1 %101, float 0.000000e+00, float %97, !dbg !42
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %104 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !42
  %j.0.i = select i1 %104, float 1.270000e+02, float %t.0.i, !dbg !42
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not8.i = icmp eq i32 %110, 0, !dbg !42
  br i1 %.not8.i, label %113, label %111, !dbg !42

111:                                              ; preds = %__nv_sqrtf.exit5
  %112 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !42
  br label %__nv_expm1f.exit, !dbg !42

113:                                              ; preds = %__nv_sqrtf.exit5
  %114 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !42
  br label %__nv_expm1f.exit, !dbg !42

__nv_expm1f.exit:                                 ; preds = %111, %113
  %.0.i7 = phi float [ %112, %111 ], [ %114, %113 ], !dbg !42
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %116 = fmul float %95, 0x3FF7154760000000, !dbg !42
  %117 = tail call float @llvm.nvvm.round.f(float %116) #3, !dbg !42
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not.i10 = icmp eq i32 %118, 0, !dbg !42
  %119 = tail call float @llvm.nvvm.fabs.ftz.f(float %95) #3, !dbg !42
  %120 = tail call float @llvm.nvvm.fabs.f(float %95) #3, !dbg !42
  %.03.i11 = select i1 %.not.i10, float %120, float %119, !dbg !42
  %121 = fcmp olt float %.03.i11, 0x3FDA3D70A0000000, !dbg !42
  %t.0.i12 = select i1 %121, float 0.000000e+00, float %117, !dbg !42
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %124 = fcmp oeq float %t.0.i12, 1.280000e+02, !dbg !42
  %j.0.i13 = select i1 %124, float 1.270000e+02, float %t.0.i12, !dbg !42
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not8.i14 = icmp eq i32 %130, 0, !dbg !42
  br i1 %.not8.i14, label %133, label %131, !dbg !42

131:                                              ; preds = %__nv_expm1f.exit
  %132 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i13) #3, !dbg !42
  br label %__nv_expm1f.exit36, !dbg !42

133:                                              ; preds = %__nv_expm1f.exit
  %134 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i13) #3, !dbg !42
  br label %__nv_expm1f.exit36, !dbg !42

__nv_expm1f.exit36:                               ; preds = %131, %133
  %.0.i15 = phi float [ %132, %131 ], [ %134, %133 ], !dbg !42
  %135 = fcmp oeq float %94, 0.000000e+00, !dbg !42
  %136 = fadd float %94, %94, !dbg !42
  %137 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !42
  %138 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !42
  %.not9.i = icmp eq i32 %115, 0, !dbg !42
  %.not7.i = icmp eq i32 %109, 0, !dbg !42
  %.not6.i = icmp eq i32 %108, 0, !dbg !42
  %.not5.i = icmp eq i32 %107, 0, !dbg !42
  %.not4.i = icmp eq i32 %106, 0, !dbg !42
  %.not3.i = icmp eq i32 %105, 0, !dbg !42
  %.not2.i8 = icmp eq i32 %103, 0, !dbg !42
  %139 = fneg float %t.0.i, !dbg !42
  %.not1.i9 = icmp eq i32 %102, 0, !dbg !42
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %139, float 0x3FE62E4000000000, float %94) #3, !dbg !42
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float 0x3FE62E4000000000, float %94) #3, !dbg !42
  %.04.i = select i1 %.not1.i9, float %140, float %141, !dbg !42
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %139, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !42
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !42
  %.05.i = select i1 %.not2.i8, float %142, float %143, !dbg !42
  %144 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !42
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !42
  %.07.i = select i1 %.not3.i, float %144, float %145, !dbg !42
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !42
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !42
  %.08.i = select i1 %.not4.i, float %146, float %147, !dbg !42
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !42
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !42
  %.09.i = select i1 %.not5.i, float %148, float %149, !dbg !42
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !42
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !42
  %.06.i = select i1 %.not6.i, float %150, float %151, !dbg !42
  %152 = fmul float %.05.i, %.06.i, !dbg !42
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %152, float %.05.i, float %.05.i) #3, !dbg !42
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %152, float %.05.i, float %.05.i) #3, !dbg !42
  %.01.i = select i1 %.not7.i, float %153, float %154, !dbg !42
  %155 = fadd float %.0.i7, -1.000000e+00, !dbg !42
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i7, float %155) #3, !dbg !42
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i7, float %155) #3, !dbg !42
  %.02.i = select i1 %.not9.i, float %156, float %157, !dbg !42
  %158 = fadd float %.02.i, %.02.i, !dbg !42
  %u.0.i = select i1 %104, float %158, float %.02.i, !dbg !42
  %u.1.i = select i1 %138, float 0x7FF0000000000000, float %u.0.i, !dbg !42
  %u.2.i = select i1 %137, float -1.000000e+00, float %u.1.i, !dbg !42
  %u.3.i = select i1 %135, float %136, float %u.2.i, !dbg !42
  %159 = fcmp ogt float %95, 0.000000e+00, !dbg !43
  %160 = fcmp ogt float %94, 0.000000e+00, !dbg !43
  %.not7.i16 = icmp eq i32 %129, 0, !dbg !42
  %.not6.i17 = icmp eq i32 %128, 0, !dbg !42
  %.not5.i18 = icmp eq i32 %127, 0, !dbg !42
  %.not4.i19 = icmp eq i32 %126, 0, !dbg !42
  %.not3.i20 = icmp eq i32 %125, 0, !dbg !42
  %.not2.i21 = icmp eq i32 %123, 0, !dbg !42
  %161 = fneg float %t.0.i12, !dbg !42
  %.not1.i22 = icmp eq i32 %122, 0, !dbg !42
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %161, float 0x3FE62E4000000000, float %95) #3, !dbg !42
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %161, float 0x3FE62E4000000000, float %95) #3, !dbg !42
  %.04.i23 = select i1 %.not1.i22, float %162, float %163, !dbg !42
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %161, float 0x3EB7F7D1C0000000, float %.04.i23) #3, !dbg !42
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %161, float 0x3EB7F7D1C0000000, float %.04.i23) #3, !dbg !42
  %.05.i24 = select i1 %.not2.i21, float %164, float %165, !dbg !42
  %166 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i24, float 0x3F812ACC60000000) #3, !dbg !42
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i24, float 0x3F812ACC60000000) #3, !dbg !42
  %.07.i25 = select i1 %.not3.i20, float %166, float %167, !dbg !42
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i25, float %.05.i24, float 0x3FA5557C60000000) #3, !dbg !42
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i25, float %.05.i24, float 0x3FA5557C60000000) #3, !dbg !42
  %.08.i26 = select i1 %.not4.i19, float %168, float %169, !dbg !42
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i26, float %.05.i24, float 0x3FC5553EC0000000) #3, !dbg !42
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i26, float %.05.i24, float 0x3FC5553EC0000000) #3, !dbg !42
  %.09.i27 = select i1 %.not5.i18, float %170, float %171, !dbg !42
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i27, float %.05.i24, float 0x3FDFFFFFC0000000) #3, !dbg !42
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i27, float %.05.i24, float 0x3FDFFFFFC0000000) #3, !dbg !42
  %.06.i28 = select i1 %.not6.i17, float %172, float %173, !dbg !42
  %174 = fmul float %.05.i24, %.06.i28, !dbg !42
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %174, float %.05.i24, float %.05.i24) #3, !dbg !42
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %174, float %.05.i24, float %.05.i24) #3, !dbg !42
  %.01.i29 = select i1 %.not7.i16, float %175, float %176, !dbg !42
  %177 = fadd float %.0.i15, -1.000000e+00, !dbg !42
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not9.i30 = icmp eq i32 %178, 0, !dbg !42
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i29, float %.0.i15, float %177) #3, !dbg !42
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i29, float %.0.i15, float %177) #3, !dbg !42
  %.02.i31 = select i1 %.not9.i30, float %180, float %179, !dbg !42
  %181 = fadd float %.02.i31, %.02.i31, !dbg !42
  %u.0.i32 = select i1 %124, float %181, float %.02.i31, !dbg !42
  %182 = fcmp ogt float %j.0.i13, 1.280000e+02, !dbg !42
  %u.1.i33 = select i1 %182, float 0x7FF0000000000000, float %u.0.i32, !dbg !42
  %183 = fcmp olt float %j.0.i13, -2.500000e+01, !dbg !42
  %u.2.i34 = select i1 %183, float -1.000000e+00, float %u.1.i33, !dbg !42
  %184 = fcmp oeq float %95, 0.000000e+00, !dbg !42
  %185 = fadd float %95, %95, !dbg !42
  %u.3.i35 = select i1 %184, float %185, float %u.2.i34, !dbg !42
  %186 = select i1 %160, float %94, float %u.3.i, !dbg !44
  %187 = select i1 %159, float %95, float %u.3.i35, !dbg !44
  %188 = sext i32 %15 to i64, !dbg !45
  %189 = getelementptr float, ptr addrspace(1) %7, i64 %188, !dbg !45
  %190 = bitcast float %58 to i32, !dbg !46
  %191 = bitcast float %59 to i32, !dbg !46
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %190, i32 %191, ptr addrspace(1) %189, i1 %16) #3, !dbg !46
  %192 = getelementptr float, ptr addrspace(1) %0, i64 %188, !dbg !47
  %193 = bitcast float %186 to i32, !dbg !48
  %194 = bitcast float %187 to i32, !dbg !48
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %193, i32 %194, ptr addrspace(1) %192, i1 %16) #3, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmvszomg66dofuhxi6vuzm6q34gtndvcqjt7rdyizvi4uj5n7go2.py", directory: "inductor_cache/mv")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_clone_elu_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_clone_elu_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_clone_elu_3", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_clone_elu_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 21, scope: !7)
!18 = !DILocation(line: 26, column: 27, scope: !7)
!19 = !DILocation(line: 28, column: 36, scope: !7)
!20 = !DILocation(line: 28, column: 45, scope: !7)
!21 = !DILocation(line: 28, column: 41, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 50, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 39, scope: !7)
!26 = !DILocation(line: 30, column: 30, scope: !7)
!27 = !DILocation(line: 30, column: 35, scope: !7)
!28 = !DILocation(line: 31, column: 30, scope: !7)
!29 = !DILocation(line: 31, column: 35, scope: !7)
!30 = !DILocation(line: 32, column: 31, scope: !7)
!31 = !DILocation(line: 32, column: 36, scope: !7)
!32 = !DILocation(line: 33, column: 31, scope: !7)
!33 = !DILocation(line: 33, column: 36, scope: !7)
!34 = !DILocation(line: 34, column: 18, scope: !7)
!35 = !DILocation(line: 35, column: 18, scope: !7)
!36 = !DILocation(line: 37, column: 18, scope: !7)
!37 = !DILocation(line: 38, column: 26, scope: !7)
!38 = !DILocation(line: 40, column: 19, scope: !7)
!39 = !DILocation(line: 43, column: 19, scope: !7)
!40 = !DILocation(line: 44, column: 20, scope: !7)
!41 = !DILocation(line: 45, column: 20, scope: !7)
!42 = !DILocation(line: 49, column: 28, scope: !7)
!43 = !DILocation(line: 47, column: 20, scope: !7)
!44 = !DILocation(line: 51, column: 35, scope: !7)
!45 = !DILocation(line: 52, column: 25, scope: !7)
!46 = !DILocation(line: 52, column: 36, scope: !7)
!47 = !DILocation(line: 53, column: 28, scope: !7)
!48 = !DILocation(line: 53, column: 40, scope: !7)
!49 = !DILocation(line: 53, column: 4, scope: !7)
