; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_convolution_softplus_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #3, !dbg !10
  %7 = shl i32 %6, 5, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 2, !dbg !12
  %10 = and i32 %9, 31, !dbg !12
  %11 = shl i32 %8, 2, !dbg !12
  %12 = and i32 %11, 12, !dbg !12
  %13 = or disjoint i32 %7, %10, !dbg !13
  %14 = icmp slt i32 %13, 64, !dbg !14
  %15 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !15
  %16 = shl i32 %15, 4, !dbg !16
  %17 = or disjoint i32 %16, %12, !dbg !17
  %18 = icmp slt i32 %17, 16, !dbg !18
  %19 = shl i32 %13, 4, !dbg !19
  %20 = add i32 %17, %19, !dbg !20
  %21 = sext i32 %20 to i64, !dbg !21
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !21
  %23 = and i1 %14, %18, !dbg !22
  %24 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %22, i1 %23) #3, !dbg !23
  %25 = extractvalue { i32, i32, i32, i32 } %24, 0, !dbg !23
  %26 = extractvalue { i32, i32, i32, i32 } %24, 1, !dbg !23
  %27 = extractvalue { i32, i32, i32, i32 } %24, 2, !dbg !23
  %28 = extractvalue { i32, i32, i32, i32 } %24, 3, !dbg !23
  %29 = sext i32 %17 to i64, !dbg !24
  %30 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !24
  %31 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %30, i1 %18) #3, !dbg !25
  %32 = extractvalue { i32, i32, i32, i32 } %31, 0, !dbg !25
  %33 = extractvalue { i32, i32, i32, i32 } %31, 1, !dbg !25
  %34 = extractvalue { i32, i32, i32, i32 } %31, 2, !dbg !25
  %35 = extractvalue { i32, i32, i32, i32 } %31, 3, !dbg !25
  %36 = insertelement <4 x i32> poison, i32 %25, i64 0, !dbg !23
  %37 = insertelement <4 x i32> %36, i32 %26, i64 1, !dbg !23
  %38 = insertelement <4 x i32> %37, i32 %27, i64 2, !dbg !23
  %39 = insertelement <4 x i32> %38, i32 %28, i64 3, !dbg !23
  %40 = bitcast <4 x i32> %39 to <4 x float>, !dbg !23
  %41 = insertelement <4 x i32> poison, i32 %32, i64 0, !dbg !25
  %42 = insertelement <4 x i32> %41, i32 %33, i64 1, !dbg !25
  %43 = insertelement <4 x i32> %42, i32 %34, i64 2, !dbg !25
  %44 = insertelement <4 x i32> %43, i32 %35, i64 3, !dbg !25
  %45 = bitcast <4 x i32> %44 to <4 x float>, !dbg !25
  %46 = fadd <4 x float> %40, %45, !dbg !26
  %47 = extractelement <4 x float> %46, i64 0, !dbg !27
  %48 = fmul float %47, 0x3FF7154760000000, !dbg !27
  %49 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %48) #3, !dbg !27
  %50 = extractelement <4 x float> %46, i64 1, !dbg !27
  %51 = fmul float %50, 0x3FF7154760000000, !dbg !27
  %52 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %51) #3, !dbg !27
  %53 = extractelement <4 x float> %46, i64 2, !dbg !27
  %54 = fmul float %53, 0x3FF7154760000000, !dbg !27
  %55 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %54) #3, !dbg !27
  %56 = extractelement <4 x float> %46, i64 3, !dbg !27
  %57 = fmul float %56, 0x3FF7154760000000, !dbg !27
  %58 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %57) #3, !dbg !27
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i = icmp eq i32 %59, 0, !dbg !28
  %60 = tail call float @llvm.nvvm.add.rz.ftz.f(float %49, float 1.000000e+00) #3, !dbg !28
  %61 = tail call float @llvm.nvvm.add.rz.f(float %49, float 1.000000e+00) #3, !dbg !28
  %.01.i = select i1 %.not.i, float %61, float %60, !dbg !28
  %62 = bitcast float %.01.i to i32, !dbg !28
  %63 = add i32 %62, -1061158912, !dbg !28
  %64 = and i32 %63, -8388608, !dbg !28
  %65 = bitcast float %49 to i32, !dbg !28
  %66 = sub i32 %65, %64, !dbg !28
  %67 = bitcast i32 %66 to float, !dbg !28
  %68 = sub i32 1082130432, %64, !dbg !28
  %69 = bitcast i32 %68 to float, !dbg !28
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not14.i = icmp eq i32 %70, 0, !dbg !28
  %71 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %69, float -1.000000e+00) #3, !dbg !28
  %72 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %69, float -1.000000e+00) #3, !dbg !28
  %.09.i = select i1 %.not14.i, float %72, float %71, !dbg !28
  %73 = fadd float %.09.i, %67, !dbg !28
  %74 = sitofp i32 %64 to float, !dbg !28
  %75 = fmul float %74, 0x3E80000000000000, !dbg !28
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not15.i = icmp eq i32 %76, 0, !dbg !28
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %73, float 0x3FBB000240000000) #3, !dbg !28
  %78 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %73, float 0x3FBB000240000000) #3, !dbg !28
  %.012.i = select i1 %.not15.i, float %78, float %77, !dbg !28
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not16.i = icmp eq i32 %79, 0, !dbg !28
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %73, float 0xBFC0EF1C00000000) #3, !dbg !28
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %73, float 0xBFC0EF1C00000000) #3, !dbg !28
  %.010.i = select i1 %.not16.i, float %81, float %80, !dbg !28
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not17.i = icmp eq i32 %82, 0, !dbg !28
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %73, float 0x3FC28C8EA0000000) #3, !dbg !28
  %84 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %73, float 0x3FC28C8EA0000000) #3, !dbg !28
  %.06.i = select i1 %.not17.i, float %84, float %83, !dbg !28
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not18.i = icmp eq i32 %85, 0, !dbg !28
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %73, float 0xBFC54D1BA0000000) #3, !dbg !28
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %73, float 0xBFC54D1BA0000000) #3, !dbg !28
  %.02.i = select i1 %.not18.i, float %87, float %86, !dbg !28
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not19.i = icmp eq i32 %88, 0, !dbg !28
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %73, float 0x3FC995F3C0000000) #3, !dbg !28
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %73, float 0x3FC995F3C0000000) #3, !dbg !28
  %.0.i = select i1 %.not19.i, float %90, float %89, !dbg !28
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not20.i = icmp eq i32 %91, 0, !dbg !28
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %73, float 0xBFD0000840000000) #3, !dbg !28
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %73, float 0xBFD0000840000000) #3, !dbg !28
  %.011.i = select i1 %.not20.i, float %93, float %92, !dbg !28
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not21.i = icmp eq i32 %94, 0, !dbg !28
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %73, float 0x3FD5555CC0000000) #3, !dbg !28
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %73, float 0x3FD5555CC0000000) #3, !dbg !28
  %.08.i = select i1 %.not21.i, float %96, float %95, !dbg !28
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not22.i = icmp eq i32 %97, 0, !dbg !28
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %73, float -5.000000e-01) #3, !dbg !28
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %73, float -5.000000e-01) #3, !dbg !28
  %.07.i = select i1 %.not22.i, float %99, float %98, !dbg !28
  %100 = fmul float %73, %.07.i, !dbg !28
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not23.i = icmp eq i32 %101, 0, !dbg !28
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %100, float %73, float %73) #3, !dbg !28
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %100, float %73, float %73) #3, !dbg !28
  %.05.i = select i1 %.not23.i, float %103, float %102, !dbg !28
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not24.i = icmp eq i32 %104, 0, !dbg !28
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %75, float 0x3FE62E4300000000, float %.05.i) #3, !dbg !28
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %75, float 0x3FE62E4300000000, float %.05.i) #3, !dbg !28
  %.04.i = select i1 %.not24.i, float %106, float %105, !dbg !28
  %107 = icmp ugt i32 %65, 2139095039, !dbg !28
  br i1 %107, label %108, label %__nv_log1pf.exit, !dbg !28

108:                                              ; preds = %5
  %109 = icmp sgt i32 %65, -1082130432, !dbg !28
  br i1 %109, label %__nv_fmaf_rn.exit.i, label %113, !dbg !28

__nv_fmaf_rn.exit.i:                              ; preds = %108
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not25.i = icmp eq i32 %110, 0, !dbg !28
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %49, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %49, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %.03.i = select i1 %.not25.i, float %112, float %111, !dbg !28
  br label %113, !dbg !28

113:                                              ; preds = %__nv_fmaf_rn.exit.i, %108
  %r.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i ], [ %.04.i, %108 ], !dbg !28
  %114 = fcmp oeq float %49, 0.000000e+00, !dbg !28
  %r.1.i = select i1 %114, float -0.000000e+00, float %r.0.i, !dbg !28
  br label %__nv_log1pf.exit, !dbg !28

__nv_log1pf.exit:                                 ; preds = %5, %113
  %r.2.i = phi float [ %r.1.i, %113 ], [ %.04.i, %5 ], !dbg !28
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i9 = icmp eq i32 %115, 0, !dbg !28
  %116 = tail call float @llvm.nvvm.add.rz.ftz.f(float %52, float 1.000000e+00) #3, !dbg !28
  %117 = tail call float @llvm.nvvm.add.rz.f(float %52, float 1.000000e+00) #3, !dbg !28
  %.01.i10 = select i1 %.not.i9, float %117, float %116, !dbg !28
  %118 = bitcast float %.01.i10 to i32, !dbg !28
  %119 = add i32 %118, -1061158912, !dbg !28
  %120 = and i32 %119, -8388608, !dbg !28
  %121 = bitcast float %52 to i32, !dbg !28
  %122 = sub i32 %121, %120, !dbg !28
  %123 = bitcast i32 %122 to float, !dbg !28
  %124 = sub i32 1082130432, %120, !dbg !28
  %125 = bitcast i32 %124 to float, !dbg !28
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not14.i11 = icmp eq i32 %126, 0, !dbg !28
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %125, float -1.000000e+00) #3, !dbg !28
  %128 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %125, float -1.000000e+00) #3, !dbg !28
  %.09.i12 = select i1 %.not14.i11, float %128, float %127, !dbg !28
  %129 = fadd float %.09.i12, %123, !dbg !28
  %130 = sitofp i32 %120 to float, !dbg !28
  %131 = fmul float %130, 0x3E80000000000000, !dbg !28
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not15.i13 = icmp eq i32 %132, 0, !dbg !28
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %129, float 0x3FBB000240000000) #3, !dbg !28
  %134 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %129, float 0x3FBB000240000000) #3, !dbg !28
  %.012.i14 = select i1 %.not15.i13, float %134, float %133, !dbg !28
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not16.i15 = icmp eq i32 %135, 0, !dbg !28
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i14, float %129, float 0xBFC0EF1C00000000) #3, !dbg !28
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i14, float %129, float 0xBFC0EF1C00000000) #3, !dbg !28
  %.010.i16 = select i1 %.not16.i15, float %137, float %136, !dbg !28
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not17.i17 = icmp eq i32 %138, 0, !dbg !28
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i16, float %129, float 0x3FC28C8EA0000000) #3, !dbg !28
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i16, float %129, float 0x3FC28C8EA0000000) #3, !dbg !28
  %.06.i18 = select i1 %.not17.i17, float %140, float %139, !dbg !28
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not18.i19 = icmp eq i32 %141, 0, !dbg !28
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i18, float %129, float 0xBFC54D1BA0000000) #3, !dbg !28
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i18, float %129, float 0xBFC54D1BA0000000) #3, !dbg !28
  %.02.i20 = select i1 %.not18.i19, float %143, float %142, !dbg !28
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not19.i21 = icmp eq i32 %144, 0, !dbg !28
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i20, float %129, float 0x3FC995F3C0000000) #3, !dbg !28
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i20, float %129, float 0x3FC995F3C0000000) #3, !dbg !28
  %.0.i22 = select i1 %.not19.i21, float %146, float %145, !dbg !28
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not20.i23 = icmp eq i32 %147, 0, !dbg !28
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i22, float %129, float 0xBFD0000840000000) #3, !dbg !28
  %149 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i22, float %129, float 0xBFD0000840000000) #3, !dbg !28
  %.011.i24 = select i1 %.not20.i23, float %149, float %148, !dbg !28
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not21.i25 = icmp eq i32 %150, 0, !dbg !28
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i24, float %129, float 0x3FD5555CC0000000) #3, !dbg !28
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i24, float %129, float 0x3FD5555CC0000000) #3, !dbg !28
  %.08.i26 = select i1 %.not21.i25, float %152, float %151, !dbg !28
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not22.i27 = icmp eq i32 %153, 0, !dbg !28
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i26, float %129, float -5.000000e-01) #3, !dbg !28
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i26, float %129, float -5.000000e-01) #3, !dbg !28
  %.07.i28 = select i1 %.not22.i27, float %155, float %154, !dbg !28
  %156 = fmul float %129, %.07.i28, !dbg !28
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not23.i29 = icmp eq i32 %157, 0, !dbg !28
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %156, float %129, float %129) #3, !dbg !28
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %156, float %129, float %129) #3, !dbg !28
  %.05.i30 = select i1 %.not23.i29, float %159, float %158, !dbg !28
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not24.i31 = icmp eq i32 %160, 0, !dbg !28
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %131, float 0x3FE62E4300000000, float %.05.i30) #3, !dbg !28
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %131, float 0x3FE62E4300000000, float %.05.i30) #3, !dbg !28
  %.04.i32 = select i1 %.not24.i31, float %162, float %161, !dbg !28
  %163 = icmp ugt i32 %121, 2139095039, !dbg !28
  br i1 %163, label %164, label %__nv_log1pf.exit39, !dbg !28

164:                                              ; preds = %__nv_log1pf.exit
  %165 = icmp sgt i32 %121, -1082130432, !dbg !28
  br i1 %165, label %__nv_fmaf_rn.exit.i36, label %169, !dbg !28

__nv_fmaf_rn.exit.i36:                            ; preds = %164
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not25.i37 = icmp eq i32 %166, 0, !dbg !28
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %52, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %52, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %.03.i38 = select i1 %.not25.i37, float %168, float %167, !dbg !28
  br label %169, !dbg !28

169:                                              ; preds = %__nv_fmaf_rn.exit.i36, %164
  %r.0.i34 = phi float [ %.03.i38, %__nv_fmaf_rn.exit.i36 ], [ %.04.i32, %164 ], !dbg !28
  %170 = fcmp oeq float %52, 0.000000e+00, !dbg !28
  %r.1.i35 = select i1 %170, float -0.000000e+00, float %r.0.i34, !dbg !28
  br label %__nv_log1pf.exit39, !dbg !28

__nv_log1pf.exit39:                               ; preds = %__nv_log1pf.exit, %169
  %r.2.i33 = phi float [ %r.1.i35, %169 ], [ %.04.i32, %__nv_log1pf.exit ], !dbg !28
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i40 = icmp eq i32 %171, 0, !dbg !28
  %172 = tail call float @llvm.nvvm.add.rz.ftz.f(float %55, float 1.000000e+00) #3, !dbg !28
  %173 = tail call float @llvm.nvvm.add.rz.f(float %55, float 1.000000e+00) #3, !dbg !28
  %.01.i41 = select i1 %.not.i40, float %173, float %172, !dbg !28
  %174 = bitcast float %.01.i41 to i32, !dbg !28
  %175 = add i32 %174, -1061158912, !dbg !28
  %176 = and i32 %175, -8388608, !dbg !28
  %177 = bitcast float %55 to i32, !dbg !28
  %178 = sub i32 %177, %176, !dbg !28
  %179 = bitcast i32 %178 to float, !dbg !28
  %180 = sub i32 1082130432, %176, !dbg !28
  %181 = bitcast i32 %180 to float, !dbg !28
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not14.i42 = icmp eq i32 %182, 0, !dbg !28
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %181, float -1.000000e+00) #3, !dbg !28
  %184 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %181, float -1.000000e+00) #3, !dbg !28
  %.09.i43 = select i1 %.not14.i42, float %184, float %183, !dbg !28
  %185 = fadd float %.09.i43, %179, !dbg !28
  %186 = sitofp i32 %176 to float, !dbg !28
  %187 = fmul float %186, 0x3E80000000000000, !dbg !28
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not15.i44 = icmp eq i32 %188, 0, !dbg !28
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %185, float 0x3FBB000240000000) #3, !dbg !28
  %190 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %185, float 0x3FBB000240000000) #3, !dbg !28
  %.012.i45 = select i1 %.not15.i44, float %190, float %189, !dbg !28
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not16.i46 = icmp eq i32 %191, 0, !dbg !28
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i45, float %185, float 0xBFC0EF1C00000000) #3, !dbg !28
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i45, float %185, float 0xBFC0EF1C00000000) #3, !dbg !28
  %.010.i47 = select i1 %.not16.i46, float %193, float %192, !dbg !28
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not17.i48 = icmp eq i32 %194, 0, !dbg !28
  %195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i47, float %185, float 0x3FC28C8EA0000000) #3, !dbg !28
  %196 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i47, float %185, float 0x3FC28C8EA0000000) #3, !dbg !28
  %.06.i49 = select i1 %.not17.i48, float %196, float %195, !dbg !28
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not18.i50 = icmp eq i32 %197, 0, !dbg !28
  %198 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i49, float %185, float 0xBFC54D1BA0000000) #3, !dbg !28
  %199 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i49, float %185, float 0xBFC54D1BA0000000) #3, !dbg !28
  %.02.i51 = select i1 %.not18.i50, float %199, float %198, !dbg !28
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not19.i52 = icmp eq i32 %200, 0, !dbg !28
  %201 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i51, float %185, float 0x3FC995F3C0000000) #3, !dbg !28
  %202 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i51, float %185, float 0x3FC995F3C0000000) #3, !dbg !28
  %.0.i53 = select i1 %.not19.i52, float %202, float %201, !dbg !28
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not20.i54 = icmp eq i32 %203, 0, !dbg !28
  %204 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i53, float %185, float 0xBFD0000840000000) #3, !dbg !28
  %205 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i53, float %185, float 0xBFD0000840000000) #3, !dbg !28
  %.011.i55 = select i1 %.not20.i54, float %205, float %204, !dbg !28
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not21.i56 = icmp eq i32 %206, 0, !dbg !28
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i55, float %185, float 0x3FD5555CC0000000) #3, !dbg !28
  %208 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i55, float %185, float 0x3FD5555CC0000000) #3, !dbg !28
  %.08.i57 = select i1 %.not21.i56, float %208, float %207, !dbg !28
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not22.i58 = icmp eq i32 %209, 0, !dbg !28
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i57, float %185, float -5.000000e-01) #3, !dbg !28
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i57, float %185, float -5.000000e-01) #3, !dbg !28
  %.07.i59 = select i1 %.not22.i58, float %211, float %210, !dbg !28
  %212 = fmul float %185, %.07.i59, !dbg !28
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not23.i60 = icmp eq i32 %213, 0, !dbg !28
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %212, float %185, float %185) #3, !dbg !28
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %212, float %185, float %185) #3, !dbg !28
  %.05.i61 = select i1 %.not23.i60, float %215, float %214, !dbg !28
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not24.i62 = icmp eq i32 %216, 0, !dbg !28
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %187, float 0x3FE62E4300000000, float %.05.i61) #3, !dbg !28
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %187, float 0x3FE62E4300000000, float %.05.i61) #3, !dbg !28
  %.04.i63 = select i1 %.not24.i62, float %218, float %217, !dbg !28
  %219 = icmp ugt i32 %177, 2139095039, !dbg !28
  br i1 %219, label %220, label %__nv_log1pf.exit70, !dbg !28

220:                                              ; preds = %__nv_log1pf.exit39
  %221 = icmp sgt i32 %177, -1082130432, !dbg !28
  br i1 %221, label %__nv_fmaf_rn.exit.i67, label %225, !dbg !28

__nv_fmaf_rn.exit.i67:                            ; preds = %220
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not25.i68 = icmp eq i32 %222, 0, !dbg !28
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %55, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %55, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %.03.i69 = select i1 %.not25.i68, float %224, float %223, !dbg !28
  br label %225, !dbg !28

225:                                              ; preds = %__nv_fmaf_rn.exit.i67, %220
  %r.0.i65 = phi float [ %.03.i69, %__nv_fmaf_rn.exit.i67 ], [ %.04.i63, %220 ], !dbg !28
  %226 = fcmp oeq float %55, 0.000000e+00, !dbg !28
  %r.1.i66 = select i1 %226, float -0.000000e+00, float %r.0.i65, !dbg !28
  br label %__nv_log1pf.exit70, !dbg !28

__nv_log1pf.exit70:                               ; preds = %__nv_log1pf.exit39, %225
  %r.2.i64 = phi float [ %r.1.i66, %225 ], [ %.04.i63, %__nv_log1pf.exit39 ], !dbg !28
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i71 = icmp eq i32 %227, 0, !dbg !28
  %228 = tail call float @llvm.nvvm.add.rz.ftz.f(float %58, float 1.000000e+00) #3, !dbg !28
  %229 = tail call float @llvm.nvvm.add.rz.f(float %58, float 1.000000e+00) #3, !dbg !28
  %.01.i72 = select i1 %.not.i71, float %229, float %228, !dbg !28
  %230 = bitcast float %.01.i72 to i32, !dbg !28
  %231 = add i32 %230, -1061158912, !dbg !28
  %232 = and i32 %231, -8388608, !dbg !28
  %233 = bitcast float %58 to i32, !dbg !28
  %234 = sub i32 %233, %232, !dbg !28
  %235 = bitcast i32 %234 to float, !dbg !28
  %236 = sub i32 1082130432, %232, !dbg !28
  %237 = bitcast i32 %236 to float, !dbg !28
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not14.i73 = icmp eq i32 %238, 0, !dbg !28
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %237, float -1.000000e+00) #3, !dbg !28
  %240 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %237, float -1.000000e+00) #3, !dbg !28
  %.09.i74 = select i1 %.not14.i73, float %240, float %239, !dbg !28
  %241 = fadd float %.09.i74, %235, !dbg !28
  %242 = sitofp i32 %232 to float, !dbg !28
  %243 = fmul float %242, 0x3E80000000000000, !dbg !28
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not15.i75 = icmp eq i32 %244, 0, !dbg !28
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %241, float 0x3FBB000240000000) #3, !dbg !28
  %246 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %241, float 0x3FBB000240000000) #3, !dbg !28
  %.012.i76 = select i1 %.not15.i75, float %246, float %245, !dbg !28
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not16.i77 = icmp eq i32 %247, 0, !dbg !28
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i76, float %241, float 0xBFC0EF1C00000000) #3, !dbg !28
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i76, float %241, float 0xBFC0EF1C00000000) #3, !dbg !28
  %.010.i78 = select i1 %.not16.i77, float %249, float %248, !dbg !28
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not17.i79 = icmp eq i32 %250, 0, !dbg !28
  %251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i78, float %241, float 0x3FC28C8EA0000000) #3, !dbg !28
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i78, float %241, float 0x3FC28C8EA0000000) #3, !dbg !28
  %.06.i80 = select i1 %.not17.i79, float %252, float %251, !dbg !28
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not18.i81 = icmp eq i32 %253, 0, !dbg !28
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i80, float %241, float 0xBFC54D1BA0000000) #3, !dbg !28
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i80, float %241, float 0xBFC54D1BA0000000) #3, !dbg !28
  %.02.i82 = select i1 %.not18.i81, float %255, float %254, !dbg !28
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not19.i83 = icmp eq i32 %256, 0, !dbg !28
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i82, float %241, float 0x3FC995F3C0000000) #3, !dbg !28
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i82, float %241, float 0x3FC995F3C0000000) #3, !dbg !28
  %.0.i84 = select i1 %.not19.i83, float %258, float %257, !dbg !28
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not20.i85 = icmp eq i32 %259, 0, !dbg !28
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i84, float %241, float 0xBFD0000840000000) #3, !dbg !28
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i84, float %241, float 0xBFD0000840000000) #3, !dbg !28
  %.011.i86 = select i1 %.not20.i85, float %261, float %260, !dbg !28
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not21.i87 = icmp eq i32 %262, 0, !dbg !28
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i86, float %241, float 0x3FD5555CC0000000) #3, !dbg !28
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i86, float %241, float 0x3FD5555CC0000000) #3, !dbg !28
  %.08.i88 = select i1 %.not21.i87, float %264, float %263, !dbg !28
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not22.i89 = icmp eq i32 %265, 0, !dbg !28
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i88, float %241, float -5.000000e-01) #3, !dbg !28
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i88, float %241, float -5.000000e-01) #3, !dbg !28
  %.07.i90 = select i1 %.not22.i89, float %267, float %266, !dbg !28
  %268 = fmul float %241, %.07.i90, !dbg !28
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not23.i91 = icmp eq i32 %269, 0, !dbg !28
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %268, float %241, float %241) #3, !dbg !28
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %268, float %241, float %241) #3, !dbg !28
  %.05.i92 = select i1 %.not23.i91, float %271, float %270, !dbg !28
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not24.i93 = icmp eq i32 %272, 0, !dbg !28
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %243, float 0x3FE62E4300000000, float %.05.i92) #3, !dbg !28
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %243, float 0x3FE62E4300000000, float %.05.i92) #3, !dbg !28
  %.04.i94 = select i1 %.not24.i93, float %274, float %273, !dbg !28
  %275 = icmp ugt i32 %233, 2139095039, !dbg !28
  br i1 %275, label %276, label %__nv_log1pf.exit101, !dbg !28

276:                                              ; preds = %__nv_log1pf.exit70
  %277 = icmp sgt i32 %233, -1082130432, !dbg !28
  br i1 %277, label %__nv_fmaf_rn.exit.i98, label %281, !dbg !28

__nv_fmaf_rn.exit.i98:                            ; preds = %276
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not25.i99 = icmp eq i32 %278, 0, !dbg !28
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %58, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %58, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %.03.i100 = select i1 %.not25.i99, float %280, float %279, !dbg !28
  br label %281, !dbg !28

281:                                              ; preds = %__nv_fmaf_rn.exit.i98, %276
  %r.0.i96 = phi float [ %.03.i100, %__nv_fmaf_rn.exit.i98 ], [ %.04.i94, %276 ], !dbg !28
  %282 = fcmp oeq float %58, 0.000000e+00, !dbg !28
  %r.1.i97 = select i1 %282, float -0.000000e+00, float %r.0.i96, !dbg !28
  br label %__nv_log1pf.exit101, !dbg !28

__nv_log1pf.exit101:                              ; preds = %__nv_log1pf.exit70, %281
  %r.2.i95 = phi float [ %r.1.i97, %281 ], [ %.04.i94, %__nv_log1pf.exit70 ], !dbg !28
  %283 = fcmp ogt <4 x float> %46, splat (float 2.000000e+01), !dbg !29
  %284 = lshr i32 %8, 3, !dbg !30
  %285 = and i32 %284, 15, !dbg !30
  %286 = or disjoint i32 %16, %285, !dbg !17
  %287 = icmp slt i32 %286, 16, !dbg !18
  %288 = and i32 %11, 28, !dbg !12
  %289 = or disjoint i32 %7, %288, !dbg !13
  %290 = icmp slt i32 %289, 64, !dbg !14
  %291 = and i1 %290, %287, !dbg !22
  %.frozen = freeze i32 %289, !dbg !31
  %292 = sdiv i32 %.frozen, 16, !dbg !31
  %293 = mul i32 %292, 16, !dbg !32
  %.decomposed = sub i32 %.frozen, %293, !dbg !32
  %294 = extractelement <4 x i1> %283, i64 0, !dbg !33
  %295 = select i1 %294, float %47, float %r.2.i, !dbg !33
  %296 = extractelement <4 x i1> %283, i64 1, !dbg !33
  %297 = select i1 %296, float %50, float %r.2.i33, !dbg !33
  %298 = extractelement <4 x i1> %283, i64 2, !dbg !33
  %299 = select i1 %298, float %53, float %r.2.i64, !dbg !33
  %300 = extractelement <4 x i1> %283, i64 3, !dbg !33
  %301 = select i1 %300, float %56, float %r.2.i95, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !34
  %302 = bitcast float %47 to i32, !dbg !35
  %303 = bitcast float %50 to i32, !dbg !35
  %304 = bitcast float %53 to i32, !dbg !35
  %305 = bitcast float %56 to i32, !dbg !35
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %302, i32 %303, i32 %304, i32 %305, ptr addrspace(1) %22, i1 %23) #3, !dbg !35
  %306 = shl i32 %286, 4, !dbg !36
  %307 = add i32 %306, %.decomposed, !dbg !37
  %308 = shl i32 %292, 8, !dbg !38
  %309 = add i32 %307, %308, !dbg !39
  %310 = sext i32 %309 to i64, !dbg !40
  %311 = getelementptr float, ptr addrspace(1) %2, i64 %310, !dbg !40
  %312 = shl i32 %8, 7, !dbg !41
  %313 = and i32 %312, 384, !dbg !41
  %314 = or disjoint i32 %313, %10, !dbg !41
  %315 = and i32 %11, 508, !dbg !41
  %316 = lshr exact i32 %313, 1, !dbg !41
  %317 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %316, !dbg !41
  %318 = getelementptr float, ptr addrspace(3) %317, i32 %314, !dbg !41
  %319 = bitcast float %295 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %318, <1 x i32> %319, i1 true) #3, !dbg !41
  %320 = or disjoint i32 %314, 32, !dbg !41
  %321 = lshr i32 %320, 3, !dbg !41
  %322 = and i32 %321, 52, !dbg !41
  %323 = getelementptr float, ptr addrspace(3) @global_smem, i32 %322, !dbg !41
  %324 = getelementptr float, ptr addrspace(3) %323, i32 %320, !dbg !41
  %325 = bitcast float %297 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %324, <1 x i32> %325, i1 true) #3, !dbg !41
  %326 = or disjoint i32 %314, 64, !dbg !41
  %327 = lshr i32 %326, 3, !dbg !41
  %328 = and i32 %327, 56, !dbg !41
  %329 = getelementptr float, ptr addrspace(3) @global_smem, i32 %328, !dbg !41
  %330 = getelementptr float, ptr addrspace(3) %329, i32 %326, !dbg !41
  %331 = bitcast float %299 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %330, <1 x i32> %331, i1 true) #3, !dbg !41
  %332 = or disjoint i32 %314, 96, !dbg !41
  %333 = lshr i32 %332, 3, !dbg !41
  %334 = and i32 %333, 60, !dbg !41
  %335 = getelementptr float, ptr addrspace(3) @global_smem, i32 %334, !dbg !41
  %336 = getelementptr float, ptr addrspace(3) %335, i32 %332, !dbg !41
  %337 = bitcast float %301 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %336, <1 x i32> %337, i1 true) #3, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %338 = lshr i32 %11, 3, !dbg !41
  %339 = and i32 %338, 60, !dbg !41
  %340 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %339, !dbg !41
  %341 = getelementptr inbounds float, ptr addrspace(3) %340, i32 %315, !dbg !41
  %.extract = load i32, ptr addrspace(3) %341, align 16, !dbg !41
  %342 = getelementptr inbounds i8, ptr addrspace(3) %341, i32 4, !dbg !41
  %.extract6 = load i32, ptr addrspace(3) %342, align 4, !dbg !41
  %343 = getelementptr inbounds i8, ptr addrspace(3) %341, i32 8, !dbg !41
  %.extract7 = load i32, ptr addrspace(3) %343, align 8, !dbg !41
  %344 = getelementptr inbounds i8, ptr addrspace(3) %341, i32 12, !dbg !41
  %.extract8 = load i32, ptr addrspace(3) %344, align 4, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract6, i32 %.extract7, i32 %.extract8, ptr addrspace(1) %311, i1 %291) #3, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py", directory: "inductor_cache/vu")
!4 = !{ptr @triton_poi_fused_convolution_softplus_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_softplus_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_softplus_2", linkageName: "triton_poi_fused_convolution_softplus_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 32, column: 42, scope: !7)
!20 = !DILocation(line: 32, column: 39, scope: !7)
!21 = !DILocation(line: 32, column: 34, scope: !7)
!22 = !DILocation(line: 32, column: 55, scope: !7)
!23 = !DILocation(line: 32, column: 47, scope: !7)
!24 = !DILocation(line: 33, column: 30, scope: !7)
!25 = !DILocation(line: 33, column: 35, scope: !7)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 39, column: 23, scope: !7)
!28 = !DILocation(line: 40, column: 27, scope: !7)
!29 = !DILocation(line: 38, column: 18, scope: !7)
!30 = !DILocation(line: 26, column: 44, scope: !7)
!31 = !DILocation(line: 31, column: 19, scope: !7)
!32 = !DILocation(line: 30, column: 19, scope: !7)
!33 = !DILocation(line: 42, column: 33, scope: !7)
!34 = !DILocation(line: 43, column: 4, scope: !7)
!35 = !DILocation(line: 44, column: 47, scope: !7)
!36 = !DILocation(line: 45, column: 33, scope: !7)
!37 = !DILocation(line: 45, column: 30, scope: !7)
!38 = !DILocation(line: 45, column: 42, scope: !7)
!39 = !DILocation(line: 45, column: 38, scope: !7)
!40 = !DILocation(line: 45, column: 25, scope: !7)
!41 = !DILocation(line: 45, column: 54, scope: !7)
!42 = !DILocation(line: 45, column: 4, scope: !7)
