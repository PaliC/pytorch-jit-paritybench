; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_native_layer_norm_8(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 4, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 16, !dbg !12
  %11 = and i32 %9, 15, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 16, !dbg !14
  %14 = shl i32 %12, 2, !dbg !15
  %15 = sext i32 %14 to i64, !dbg !16
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !16
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %13) #1, !dbg !17
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !18
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 %13) #1, !dbg !19
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #1, !dbg !20
  %21 = or disjoint i32 %14, 1, !dbg !21
  %22 = sext i32 %21 to i64, !dbg !22
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !22
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %13) #1, !dbg !23
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %22, !dbg !24
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %13) #1, !dbg !25
  %27 = getelementptr i8, ptr addrspace(1) %2, i64 4, !dbg !26
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !27
  %29 = or disjoint i32 %14, 2, !dbg !28
  %30 = sext i32 %29 to i64, !dbg !29
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !29
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %13) #1, !dbg !30
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %30, !dbg !31
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %13) #1, !dbg !32
  %35 = getelementptr i8, ptr addrspace(1) %2, i64 8, !dbg !33
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #1, !dbg !34
  %37 = or disjoint i32 %14, 3, !dbg !35
  %38 = sext i32 %37 to i64, !dbg !36
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !36
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %13) #1, !dbg !37
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !38
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %13) #1, !dbg !39
  %43 = getelementptr i8, ptr addrspace(1) %2, i64 12, !dbg !40
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 true) #1, !dbg !41
  %45 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !17
  %46 = insertelement <2 x i32> %45, i32 %24, i64 1, !dbg !17
  %47 = bitcast <2 x i32> %46 to <2 x float>, !dbg !17
  %48 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !19
  %49 = insertelement <2 x i32> %48, i32 %26, i64 1, !dbg !19
  %50 = bitcast <2 x i32> %49 to <2 x float>, !dbg !19
  %51 = insertelement <2 x i32> poison, i32 %20, i64 0, !dbg !20
  %52 = insertelement <2 x i32> %51, i32 %28, i64 1, !dbg !20
  %53 = bitcast <2 x i32> %52 to <2 x float>, !dbg !20
  %54 = fadd <2 x float> %50, %53, !dbg !42
  %55 = fadd <2 x float> %54, %47, !dbg !43
  %56 = extractelement <2 x float> %55, i64 0, !dbg !44
  %57 = extractelement <2 x float> %55, i64 1, !dbg !45
  %58 = fadd float %56, %57, !dbg !46
  %59 = insertelement <2 x i32> poison, i32 %32, i64 0, !dbg !30
  %60 = insertelement <2 x i32> %59, i32 %40, i64 1, !dbg !30
  %61 = bitcast <2 x i32> %60 to <2 x float>, !dbg !30
  %62 = insertelement <2 x i32> poison, i32 %34, i64 0, !dbg !32
  %63 = insertelement <2 x i32> %62, i32 %42, i64 1, !dbg !32
  %64 = bitcast <2 x i32> %63 to <2 x float>, !dbg !32
  %65 = insertelement <2 x i32> poison, i32 %36, i64 0, !dbg !34
  %66 = insertelement <2 x i32> %65, i32 %44, i64 1, !dbg !34
  %67 = bitcast <2 x i32> %66 to <2 x float>, !dbg !34
  %68 = fadd <2 x float> %64, %67, !dbg !47
  %69 = fadd <2 x float> %68, %61, !dbg !48
  %70 = extractelement <2 x float> %69, i64 0, !dbg !49
  %71 = fadd float %58, %70, !dbg !50
  %72 = extractelement <2 x float> %69, i64 1, !dbg !51
  %73 = fadd float %71, %72, !dbg !52
  %74 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %73, float 4.000000e+00) #1, !dbg !53
  %75 = fsub float %56, %74, !dbg !44
  %76 = fmul float %75, %75, !dbg !54
  %77 = fsub float %57, %74, !dbg !45
  %78 = fmul float %77, %77, !dbg !55
  %79 = fadd float %76, %78, !dbg !56
  %80 = fsub float %70, %74, !dbg !49
  %81 = fmul float %80, %80, !dbg !57
  %82 = fadd float %81, %79, !dbg !58
  %83 = fsub float %72, %74, !dbg !51
  %84 = fmul float %83, %83, !dbg !59
  %85 = fadd float %82, %84, !dbg !60
  %86 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %85, float 4.000000e+00) #1, !dbg !61
  %87 = sext i32 %12 to i64, !dbg !62
  %88 = getelementptr float, ptr addrspace(1) %3, i64 %87, !dbg !62
  %89 = icmp eq i32 %10, 0, !dbg !63
  %90 = bitcast float %74 to i32, !dbg !63
  %91 = and i1 %89, %13, !dbg !63
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %90, ptr addrspace(1) %88, i1 %91) #1, !dbg !63
  %92 = getelementptr float, ptr addrspace(1) %4, i64 %87, !dbg !64
  %93 = bitcast float %86 to i32, !dbg !65
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %93, ptr addrspace(1) %92, i1 %91) #1, !dbg !65
  ret void, !dbg !66
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqsksyyunsuz6kqwbppruagvjfvjhcrxubcavcrqskxix4xyzxfm.py", directory: "inductor_cache/qs")
!4 = !{ptr @triton_poi_fused_add_native_layer_norm_8, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_native_layer_norm_8, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_native_layer_norm_8", linkageName: "triton_poi_fused_add_native_layer_norm_8", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 26, column: 30, scope: !7)
!19 = !DILocation(line: 26, column: 37, scope: !7)
!20 = !DILocation(line: 27, column: 19, scope: !7)
!21 = !DILocation(line: 29, column: 34, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 41, scope: !7)
!24 = !DILocation(line: 30, column: 30, scope: !7)
!25 = !DILocation(line: 30, column: 41, scope: !7)
!26 = !DILocation(line: 31, column: 30, scope: !7)
!27 = !DILocation(line: 31, column: 19, scope: !7)
!28 = !DILocation(line: 33, column: 35, scope: !7)
!29 = !DILocation(line: 33, column: 31, scope: !7)
!30 = !DILocation(line: 33, column: 42, scope: !7)
!31 = !DILocation(line: 34, column: 31, scope: !7)
!32 = !DILocation(line: 34, column: 42, scope: !7)
!33 = !DILocation(line: 35, column: 31, scope: !7)
!34 = !DILocation(line: 35, column: 20, scope: !7)
!35 = !DILocation(line: 37, column: 35, scope: !7)
!36 = !DILocation(line: 37, column: 31, scope: !7)
!37 = !DILocation(line: 37, column: 42, scope: !7)
!38 = !DILocation(line: 38, column: 31, scope: !7)
!39 = !DILocation(line: 38, column: 42, scope: !7)
!40 = !DILocation(line: 39, column: 31, scope: !7)
!41 = !DILocation(line: 39, column: 20, scope: !7)
!42 = !DILocation(line: 41, column: 18, scope: !7)
!43 = !DILocation(line: 42, column: 18, scope: !7)
!44 = !DILocation(line: 54, column: 19, scope: !7)
!45 = !DILocation(line: 56, column: 20, scope: !7)
!46 = !DILocation(line: 45, column: 19, scope: !7)
!47 = !DILocation(line: 46, column: 20, scope: !7)
!48 = !DILocation(line: 47, column: 20, scope: !7)
!49 = !DILocation(line: 59, column: 20, scope: !7)
!50 = !DILocation(line: 48, column: 20, scope: !7)
!51 = !DILocation(line: 62, column: 20, scope: !7)
!52 = !DILocation(line: 51, column: 20, scope: !7)
!53 = !DILocation(line: 53, column: 20, scope: !7)
!54 = !DILocation(line: 55, column: 20, scope: !7)
!55 = !DILocation(line: 57, column: 20, scope: !7)
!56 = !DILocation(line: 58, column: 20, scope: !7)
!57 = !DILocation(line: 60, column: 20, scope: !7)
!58 = !DILocation(line: 61, column: 20, scope: !7)
!59 = !DILocation(line: 63, column: 20, scope: !7)
!60 = !DILocation(line: 64, column: 20, scope: !7)
!61 = !DILocation(line: 65, column: 20, scope: !7)
!62 = !DILocation(line: 66, column: 25, scope: !7)
!63 = !DILocation(line: 66, column: 37, scope: !7)
!64 = !DILocation(line: 67, column: 25, scope: !7)
!65 = !DILocation(line: 67, column: 37, scope: !7)
!66 = !DILocation(line: 67, column: 4, scope: !7)
