; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_leaky_relu_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 2, !dbg !12
  %9 = and i32 %8, 508, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 41472, !dbg !14
  %12 = sdiv i32 %10, 324, !dbg !15
  %13 = srem i32 %12, 32, !dbg !16
  %14 = sext i32 %10 to i64, !dbg !17
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !17
  %16 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %15, i1 %11) #1, !dbg !18
  %17 = extractvalue { i32, i32, i32, i32 } %16, 0, !dbg !18
  %18 = extractvalue { i32, i32, i32, i32 } %16, 1, !dbg !18
  %19 = extractvalue { i32, i32, i32, i32 } %16, 2, !dbg !18
  %20 = extractvalue { i32, i32, i32, i32 } %16, 3, !dbg !18
  %21 = sext i32 %13 to i64, !dbg !19
  %22 = getelementptr float, ptr addrspace(1) %1, i64 %21, !dbg !19
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %11) #1, !dbg !20
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %11) #1, !dbg !20
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %11) #1, !dbg !20
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %11) #1, !dbg !20
  %27 = getelementptr i1, ptr addrspace(1) %2, i64 %14, !dbg !21
  %28 = insertelement <4 x i32> poison, i32 %17, i64 0, !dbg !18
  %29 = insertelement <4 x i32> %28, i32 %18, i64 1, !dbg !18
  %30 = insertelement <4 x i32> %29, i32 %19, i64 2, !dbg !18
  %31 = insertelement <4 x i32> %30, i32 %20, i64 3, !dbg !18
  %32 = bitcast <4 x i32> %31 to <4 x float>, !dbg !18
  %33 = insertelement <4 x i32> poison, i32 %23, i64 0, !dbg !20
  %34 = insertelement <4 x i32> %33, i32 %24, i64 1, !dbg !20
  %35 = insertelement <4 x i32> %34, i32 %25, i64 2, !dbg !20
  %36 = insertelement <4 x i32> %35, i32 %26, i64 3, !dbg !20
  %37 = bitcast <4 x i32> %36 to <4 x float>, !dbg !20
  %38 = fadd <4 x float> %32, %37, !dbg !22
  %39 = fcmp ogt <4 x float> %38, zeroinitializer, !dbg !23
  %40 = extractelement <4 x float> %38, i64 0, !dbg !24
  %41 = fmul float %40, 0x3FB99999A0000000, !dbg !25
  %42 = extractelement <4 x float> %38, i64 1, !dbg !24
  %43 = fmul float %42, 0x3FB99999A0000000, !dbg !25
  %44 = extractelement <4 x float> %38, i64 2, !dbg !24
  %45 = fmul float %44, 0x3FB99999A0000000, !dbg !25
  %46 = extractelement <4 x float> %38, i64 3, !dbg !24
  %47 = fmul float %46, 0x3FB99999A0000000, !dbg !25
  %48 = extractelement <4 x i1> %39, i64 0, !dbg !24
  %49 = select i1 %48, float %40, float %41, !dbg !24
  %50 = extractelement <4 x i1> %39, i64 1, !dbg !24
  %51 = select i1 %50, float %42, float %43, !dbg !24
  %52 = extractelement <4 x i1> %39, i64 2, !dbg !24
  %53 = select i1 %52, float %44, float %45, !dbg !24
  %54 = extractelement <4 x i1> %39, i64 3, !dbg !24
  %55 = select i1 %54, float %46, float %47, !dbg !24
  %56 = zext <4 x i1> %39 to <4 x i8>, !dbg !26
  %57 = bitcast <4 x i8> %56 to i32, !dbg !26
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %57, ptr addrspace(1) %27, i1 %11) #1, !dbg !26
  %58 = bitcast float %49 to i32, !dbg !27
  %59 = bitcast float %51 to i32, !dbg !27
  %60 = bitcast float %53 to i32, !dbg !27
  %61 = bitcast float %55 to i32, !dbg !27
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %58, i32 %59, i32 %60, i32 %61, ptr addrspace(1) %15, i1 %11) #1, !dbg !27
  ret void, !dbg !28
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cksqmkgjwjlvovmi2dalt6pik3ojkqvj7zq2danak3ftuy6w6rhx.py", directory: "inductor_cache/ks")
!4 = !{ptr @triton_poi_fused_convolution_leaky_relu_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_leaky_relu_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_leaky_relu_3", linkageName: "triton_poi_fused_convolution_leaky_relu_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 28, scope: !7)
!17 = !DILocation(line: 26, column: 34, scope: !7)
!18 = !DILocation(line: 26, column: 39, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 34, column: 25, scope: !7)
!22 = !DILocation(line: 28, column: 18, scope: !7)
!23 = !DILocation(line: 30, column: 18, scope: !7)
!24 = !DILocation(line: 33, column: 32, scope: !7)
!25 = !DILocation(line: 32, column: 18, scope: !7)
!26 = !DILocation(line: 34, column: 36, scope: !7)
!27 = !DILocation(line: 35, column: 39, scope: !7)
!28 = !DILocation(line: 35, column: 4, scope: !7)
