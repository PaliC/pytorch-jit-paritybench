//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0 // -- Begin function triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0
.visible .entry triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_6,
	.param .u32 triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_7,
	.param .u32 triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_8
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<60>;
	.reg .f32 	%f<45>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd8, [triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_0];
	ld.param.u64 	%rd9, [triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:25:21
	setp.lt.s32 	%p1, %r1, 4;
	ld.param.u64 	%rd10, [triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_2];
	ld.param.u64 	%rd11, [triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_3];
	.loc	1 26 34                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:26:34
	mov.u32 	%r25, %tid.x;
	and.b32  	%r26, %r25, 31;
	ld.param.u64 	%rd12, [triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_4];
	ld.param.u64 	%rd13, [triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_5];
	.loc	1 31 33                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:31:33
	shl.b32 	%r27, %r1, 4;
	ld.param.u64 	%rd14, [triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0_param_6];
	.loc	1 31 42                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:31:42
	shl.b32 	%r28, %r25, 2;
	and.b32  	%r29, %r28, 192;
	.loc	1 31 38                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:31:38
	add.s32 	%r30, %r27, %r29;
	.loc	1 31 61                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:31:61
	and.b32  	%r31, %r25, 15;
	.loc	1 31 56                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:31:56
	or.b32  	%r32, %r30, %r31;
	.loc	1 31 30                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:31:30
	mul.wide.s32 	%rd15, %r32, 4;
	add.s64 	%rd1, %rd8, %rd15;
	mov.b32 	%r3, 0;
	.loc	1 31 68                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:31:68
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 32 31                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:32:31
	mul.wide.s32 	%rd16, %r1, 4;
	add.s64 	%rd2, %rd9, %rd16;
	.loc	1 32 36                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:32:36
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 31                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:33:31
	add.s64 	%rd3, %rd10, %rd16;
	.loc	1 33 36                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:33:36
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 35 33                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:35:33
	selp.f32 	%f2, %f1, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f2;
	shfl.sync.bfly.b32	%r34, %r33, 16, 31, -1;
	mov.b32 	%f3, %r34;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f4, %f2, %f3;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f4;
	shfl.sync.bfly.b32	%r36, %r35, 8, 31, -1;
	mov.b32 	%f5, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f4, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f6;
	shfl.sync.bfly.b32	%r38, %r37, 4, 31, -1;
	mov.b32 	%f7, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f6, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f8;
	shfl.sync.bfly.b32	%r40, %r39, 2, 31, -1;
	mov.b32 	%f9, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f10;
	shfl.sync.bfly.b32	%r42, %r41, 1, 31, -1;
	mov.b32 	%f11, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p5, %r26, 0;
	shr.u32 	%r43, %r25, 3;
	and.b32  	%r44, %r43, 4;
	mov.u32 	%r45, global_smem;
	add.s32 	%r6, %r45, %r44;
	mov.b32 	%r7, %f12;
	// begin inline asm
	@%p5 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r25, 2;
	add.s32 	%r9, %r45, %r28;
	// begin inline asm
	@%p6 ld.shared.b32 %r8, [ %r9 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r8;
	shfl.sync.bfly.b32	%r46, %r8, 1, 31, -1;
	mov.b32 	%f14, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r47, %r25, 1;
	setp.eq.b32 	%p15, %r47, 1;
	not.pred 	%p16, %p15;
	and.pred  	%p7, %p6, %p16;
	mov.b32 	%r11, %f15;
	// begin inline asm
	@%p7 st.shared.b32 [ %r9 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f16, [global_smem];
$L__tmp2:
	.loc	1 37 18                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:37:18
	mul.f32 	%f17, %f1, %f1;
	.loc	1 39 33                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:39:33
	selp.f32 	%f18, %f17, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r48, %f18;
	shfl.sync.bfly.b32	%r49, %r48, 16, 31, -1;
	mov.b32 	%f19, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f20;
	shfl.sync.bfly.b32	%r51, %r50, 8, 31, -1;
	mov.b32 	%f21, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f22;
	shfl.sync.bfly.b32	%r53, %r52, 4, 31, -1;
	mov.b32 	%f23, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f24;
	shfl.sync.bfly.b32	%r55, %r54, 2, 31, -1;
	mov.b32 	%f25, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f26;
	shfl.sync.bfly.b32	%r57, %r56, 1, 31, -1;
	mov.b32 	%f27, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r13, %f28;
	// begin inline asm
	@%p5 st.shared.b32 [ %r6 + 0 ], %r13;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b32 %r14, [ %r9 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r14;
	shfl.sync.bfly.b32	%r58, %r14, 1, 31, -1;
	mov.b32 	%f30, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r17, %f31;
	// begin inline asm
	@%p7 st.shared.b32 [ %r9 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f32, [global_smem];
$L__tmp4:
	.loc	1 44 19                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:44:19
	mul.f32 	%f33, %f16, 0f3C800000;
	.loc	1 50 19                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:50:19
	neg.f32 	%f34, %f16;
	fma.rn.f32 	%f35, %f34, %f33, %f32;
	.loc	1 57 20                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:57:20
	fma.rn.f32 	%f36, %f35, 0f3C800000, 0f3727C5AC;
	.loc	1 58 27                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:58:27
	sqrt.approx.ftz.f32 	%f37, %f36;
	.loc	1 33 36                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:33:36
	mov.b32 	%f38, %r5;
	.loc	1 52 20                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:52:20
	mul.f32 	%f39, %f35, 0f3C820821;
	.loc	1 53 20                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:53:20
	mul.f32 	%f40, %f39, 0f3DCCCCCD;
	.loc	1 54 20                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:54:20
	fma.rn.f32 	%f41, %f38, 0f3F666666, %f40;
	.loc	1 32 36                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:32:36
	mov.b32 	%f42, %r4;
	.loc	1 46 20                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:46:20
	mul.f32 	%f43, %f33, 0f3DCCCCCD;
	.loc	1 47 20                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:47:20
	fma.rn.f32 	%f44, %f42, 0f3F666666, %f43;
	.loc	1 60 20                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:60:20
	mov.b32 	%r20, %f37;
	mov.b32 	%r19, 1065353216;
	// begin inline asm
	div.full.f32 %r23, %r19, %r20;
	// end inline asm
	.loc	1 63 25                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:63:25
	add.s64 	%rd4, %rd11, %rd16;
	.loc	1 63 37                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:63:37
	and.b32  	%r59, %r25, 63;
	setp.eq.s32 	%p17, %r59, 0;
	mov.b32 	%r21, %f44;
	and.pred  	%p11, %p17, %p1;
	// begin inline asm
	@%p11 st.global.b32 [ %rd4 + 0 ], { %r21 };
	// end inline asm
	.loc	1 64 25                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:64:25
	add.s64 	%rd5, %rd12, %rd16;
	.loc	1 64 37                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:64:37
	mov.b32 	%r22, %f41;
	// begin inline asm
	@%p11 st.global.b32 [ %rd5 + 0 ], { %r22 };
	// end inline asm
	.loc	1 65 25                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:65:25
	add.s64 	%rd6, %rd13, %rd16;
	.loc	1 65 37                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:65:37
	// begin inline asm
	@%p11 st.global.b32 [ %rd6 + 0 ], { %r23 };
	// end inline asm
	.loc	1 66 25                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:66:25
	add.s64 	%rd7, %rd14, %rd16;
	.loc	1 66 37                         // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:66:37
	mov.b32 	%r24, %f33;
	// begin inline asm
	@%p11 st.global.b32 [ %rd7 + 0 ], { %r24 };
	// end inline asm
	.loc	1 66 4                          // cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py:66:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 222                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 110
.b8 109
.b8 103
.b8 106
.b8 115
.b8 103
.b8 101
.b8 50
.b8 103
.b8 107
.b8 104
.b8 119
.b8 111
.b8 51
.b8 51
.b8 115
.b8 100
.b8 120
.b8 102
.b8 53
.b8 104
.b8 105
.b8 106
.b8 119
.b8 113
.b8 53
.b8 116
.b8 98
.b8 108
.b8 55
.b8 116
.b8 104
.b8 108
.b8 115
.b8 114
.b8 108
.b8 97
.b8 118
.b8 105
.b8 112
.b8 122
.b8 107
.b8 104
.b8 50
.b8 101
.b8 119
.b8 51
.b8 120
.b8 52
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x38 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 101
.b8 99
.b8 105
.b8 112
.b8 114
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
