#loc = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":19:0)
#loc1 = loc(unknown)
#loc20 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":36:24)
#loc25 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":40:24)
#loc51 = loc(callsite(#loc1 at #loc20))
#loc54 = loc(callsite(#loc1 at #loc25))
module {
  tt.func public @triton_per_fused_add_div_mul_pow_reciprocal_sub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":19:0), %arg7: i32 loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":19:0)) attributes {noinline = false} {
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<1.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.0158730168> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e-01> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<1.562500e-02> : tensor<1x1xf32> loc(#loc1)
    %cst_4 = arith.constant dense<0.899999976> : tensor<1x1xf32> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_6 = arith.constant dense<64> : tensor<1x64xi32> loc(#loc1)
    %cst_7 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %5 = arith.muli %0, %c16_i32 : i32 loc(#loc6)
    %6 = arith.divsi %4, %cst_7 : tensor<1x64xi32> loc(#loc7)
    %7 = arith.muli %6, %cst_6 : tensor<1x64xi32> loc(#loc8)
    %8 = tt.splat %5 : i32 -> tensor<1x64xi32> loc(#loc9)
    %9 = arith.addi %8, %7 : tensor<1x64xi32> loc(#loc9)
    %10 = arith.remsi %4, %cst_7 : tensor<1x64xi32> loc(#loc10)
    %11 = arith.addi %9, %10 : tensor<1x64xi32> loc(#loc11)
    %12 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.addptr %12, %11 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc12)
    %14 = tt.splat %1 : i1 -> tensor<1x64xi1> loc(#loc13)
    %15 = tt.load %13, %14, %cst_5 : tensor<1x64x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc14)
    %17 = tt.splat %16 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.load %17, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc16)
    %20 = tt.splat %19 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.load %20, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc17)
    %22 = arith.select %14, %15, %cst_5 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc18)
    %23 = "tt.reduce"(%22) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc20)), %arg10: f32 loc(callsite(#loc1 at #loc20))):
      %51 = arith.addf %arg9, %arg10 : f32 loc(#loc55)
      tt.reduce.return %51 : f32 loc(#loc50)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc50)
    %24 = tt.expand_dims %23 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc22)
    %25 = arith.mulf %15, %15 : tensor<1x64xf32> loc(#loc23)
    %26 = arith.select %14, %25, %cst_5 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc24)
    %27 = "tt.reduce"(%26) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc25)), %arg10: f32 loc(callsite(#loc1 at #loc25))):
      %51 = arith.addf %arg9, %arg10 : f32 loc(#loc56)
      tt.reduce.return %51 : f32 loc(#loc53)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc53)
    %28 = tt.expand_dims %27 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc26)
    %29 = arith.mulf %18, %cst_4 : tensor<1x1xf32> loc(#loc27)
    %30 = arith.mulf %24, %cst_3 : tensor<1x1xf32> loc(#loc28)
    %31 = arith.mulf %30, %cst_2 : tensor<1x1xf32> loc(#loc29)
    %32 = arith.addf %29, %31 : tensor<1x1xf32> loc(#loc30)
    %33 = arith.mulf %21, %cst_4 : tensor<1x1xf32> loc(#loc31)
    %34 = arith.mulf %24, %30 : tensor<1x1xf32> loc(#loc32)
    %35 = arith.subf %28, %34 : tensor<1x1xf32> loc(#loc33)
    %36 = arith.mulf %35, %cst_1 : tensor<1x1xf32> loc(#loc34)
    %37 = arith.mulf %36, %cst_2 : tensor<1x1xf32> loc(#loc35)
    %38 = arith.addf %33, %37 : tensor<1x1xf32> loc(#loc36)
    %39 = arith.mulf %35, %cst_3 : tensor<1x1xf32> loc(#loc37)
    %40 = arith.addf %39, %cst_0 : tensor<1x1xf32> loc(#loc38)
    %41 = tt.extern_elementwise %40 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc39)
    %42 = arith.divf %cst, %41 : tensor<1x1xf32> loc(#loc40)
    %43 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc41)
    %44 = tt.splat %43 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc41)
    tt.store %44, %32, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc42)
    %45 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc43)
    %46 = tt.splat %45 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc43)
    tt.store %46, %38, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc44)
    %47 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc45)
    %48 = tt.splat %47 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc45)
    tt.store %48, %42, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc46)
    %49 = tt.addptr %arg6, %0 : !tt.ptr<f32>, i32 loc(#loc47)
    %50 = tt.splat %49 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc47)
    tt.store %50, %30, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc48)
    tt.return loc(#loc49)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":23:28)
#loc3 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":25:21)
#loc4 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":26:26)
#loc5 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":26:34)
#loc6 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":31:33)
#loc7 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":31:48)
#loc8 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":31:42)
#loc9 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":31:38)
#loc10 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":31:61)
#loc11 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":31:56)
#loc12 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":31:30)
#loc13 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":31:68)
#loc14 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":32:31)
#loc15 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":32:36)
#loc16 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":33:31)
#loc17 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":33:36)
#loc18 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":35:33)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc22 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":36:27)
#loc23 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":37:18)
#loc24 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":39:33)
#loc26 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":40:27)
#loc27 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":42:20)
#loc28 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":44:19)
#loc29 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":46:20)
#loc30 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":47:20)
#loc31 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":48:20)
#loc32 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":49:19)
#loc33 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":50:19)
#loc34 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":52:20)
#loc35 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":53:20)
#loc36 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":54:20)
#loc37 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":55:20)
#loc38 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":57:20)
#loc39 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":58:27)
#loc40 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":60:20)
#loc41 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":63:25)
#loc42 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":63:37)
#loc43 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":64:25)
#loc44 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":64:37)
#loc45 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":65:25)
#loc46 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":65:37)
#loc47 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":66:25)
#loc48 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":66:37)
#loc49 = loc("inductor_cache/zn/cznmgjsge2gkhwo33sdxf5hijwq5tbl7thlsrlavipzkh2ew3x46.py":66:4)
#loc50 = loc(callsite(#loc19 at #loc20))
#loc52 = loc(callsite(#loc21 at #loc19))
#loc53 = loc(callsite(#loc19 at #loc25))
#loc55 = loc(callsite(#loc52 at #loc20))
#loc56 = loc(callsite(#loc52 at #loc25))
