; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__softmax_div_1(ptr addrspace(1) %0, i32 %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = icmp slt i32 %4, 64, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 15, !dbg !12
  %8 = shl i32 %4, 4, !dbg !13
  %9 = or disjoint i32 %8, %7, !dbg !14
  %10 = sext i32 %9 to i64, !dbg !15
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %10, !dbg !15
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %11, i1 %5, i32 0, i1 %5) #2, !dbg !16
  %13 = bitcast i32 %12 to float, !dbg !16
  %14 = fmul float %13, 0x3FE6A09E60000000, !dbg !17
  %15 = select i1 %5, float %14, float 0xFFF0000000000000, !dbg !18
  %16 = bitcast float %15 to i32, !dbg !19
  %17 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %16, i32 8, i32 31), !dbg !19
  %18 = bitcast i32 %17 to float, !dbg !19
  %19 = fcmp ogt float %15, %18, !dbg !23
  %20 = fcmp uno float %15, 0.000000e+00, !dbg !25
  %21 = or i1 %19, %20, !dbg !26
  %22 = select i1 %21, float %15, float %18, !dbg !27
  %23 = bitcast float %22 to i32, !dbg !19
  %24 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %23, i32 4, i32 31), !dbg !19
  %25 = bitcast i32 %24 to float, !dbg !19
  %26 = fcmp ogt float %22, %25, !dbg !23
  %27 = fcmp uno float %22, 0.000000e+00, !dbg !25
  %28 = or i1 %26, %27, !dbg !26
  %29 = select i1 %28, float %22, float %25, !dbg !27
  %30 = bitcast float %29 to i32, !dbg !19
  %31 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %30, i32 2, i32 31), !dbg !19
  %32 = bitcast i32 %31 to float, !dbg !19
  %33 = fcmp ogt float %29, %32, !dbg !23
  %34 = fcmp uno float %29, 0.000000e+00, !dbg !25
  %35 = or i1 %33, %34, !dbg !26
  %36 = select i1 %35, float %29, float %32, !dbg !27
  %37 = bitcast float %36 to i32, !dbg !19
  %38 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %37, i32 1, i32 31), !dbg !19
  %39 = bitcast i32 %38 to float, !dbg !19
  %40 = fcmp ogt float %36, %39, !dbg !23
  %41 = fcmp uno float %36, 0.000000e+00, !dbg !25
  %42 = or i1 %40, %41, !dbg !26
  %43 = select i1 %42, float %36, float %39, !dbg !27
  %44 = fsub float %14, %43, !dbg !28
  %45 = fmul float %44, 2.500000e-01, !dbg !29
  %46 = fmul float %45, 0x3FF7154760000000, !dbg !30
  %47 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %46) #2, !dbg !30
  %48 = select i1 %5, float %47, float 0.000000e+00, !dbg !31
  %49 = bitcast float %48 to i32, !dbg !32
  %50 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 8, i32 31), !dbg !32
  %51 = bitcast i32 %50 to float, !dbg !32
  %52 = fadd float %48, %51, !dbg !36
  %53 = bitcast float %52 to i32, !dbg !32
  %54 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %53, i32 4, i32 31), !dbg !32
  %55 = bitcast i32 %54 to float, !dbg !32
  %56 = fadd float %52, %55, !dbg !36
  %57 = bitcast float %56 to i32, !dbg !32
  %58 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %57, i32 2, i32 31), !dbg !32
  %59 = bitcast i32 %58 to float, !dbg !32
  %60 = fadd float %56, %59, !dbg !36
  %61 = bitcast float %60 to i32, !dbg !32
  %62 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %61, i32 1, i32 31), !dbg !32
  %63 = bitcast i32 %62 to float, !dbg !32
  %64 = fadd float %60, %63, !dbg !36
  %65 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %47, float %64) #2, !dbg !38
  %66 = and i32 %6, 48, !dbg !39
  %67 = icmp eq i32 %66, 0, !dbg !39
  %68 = bitcast float %65 to i32, !dbg !39
  %69 = and i1 %67, %5, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %68, ptr addrspace(1) %11, i1 %69) #2, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbvytcglrdq2g3zpwxv2emfaxpqzczrpvboofrtrbldyoxqne4as.py", directory: "inductor_cache/bv")
!4 = !{ptr @triton_per_fused__softmax_div_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_div_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_div_1", linkageName: "triton_per_fused__softmax_div_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 42, scope: !7)
!14 = !DILocation(line: 31, column: 39, scope: !7)
!15 = !DILocation(line: 31, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 47, scope: !7)
!17 = !DILocation(line: 33, column: 18, scope: !7)
!18 = !DILocation(line: 37, column: 33, scope: !7)
!19 = !DILocation(line: 131, column: 29, scope: !20, inlinedAt: !22)
!20 = distinct !DILexicalBlockFile(scope: !7, file: !21, discriminator: 0)
!21 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!22 = !DILocation(line: 38, column: 37, scope: !7)
!23 = !DILocation(line: 118, column: 15, scope: !24, inlinedAt: !22)
!24 = distinct !DILexicalBlockFile(scope: !20, file: !21, discriminator: 0)
!25 = !DILocation(line: 120, column: 21, scope: !24, inlinedAt: !22)
!26 = !DILocation(line: 120, column: 16, scope: !24, inlinedAt: !22)
!27 = !DILocation(line: 121, column: 29, scope: !24, inlinedAt: !22)
!28 = !DILocation(line: 39, column: 18, scope: !7)
!29 = !DILocation(line: 41, column: 19, scope: !7)
!30 = !DILocation(line: 42, column: 24, scope: !7)
!31 = !DILocation(line: 44, column: 35, scope: !7)
!32 = !DILocation(line: 267, column: 36, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!34 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!35 = !DILocation(line: 45, column: 26, scope: !7)
!36 = !DILocation(line: 256, column: 15, scope: !37, inlinedAt: !35)
!37 = distinct !DILexicalBlockFile(scope: !33, file: !34, discriminator: 0)
!38 = !DILocation(line: 46, column: 20, scope: !7)
!39 = !DILocation(line: 47, column: 48, scope: !7)
!40 = !DILocation(line: 47, column: 4, scope: !7)
