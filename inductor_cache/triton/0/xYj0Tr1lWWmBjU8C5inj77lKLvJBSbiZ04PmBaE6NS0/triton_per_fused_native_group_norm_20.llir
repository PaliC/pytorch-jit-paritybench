; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused_native_group_norm_20(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %9 = and i32 %8, 31, !dbg !11
  %10 = lshr i32 %8, 5, !dbg !11
  %11 = and i32 %8, 63, !dbg !11
  %.frozen = freeze i32 %7, !dbg !12
  %12 = sdiv i32 %.frozen, 48, !dbg !12
  %13 = mul i32 %12, 48, !dbg !13
  %.decomposed = sub i32 %.frozen, %13, !dbg !13
  %14 = srem i32 %12, 64, !dbg !14
  %15 = sdiv i32 %7, 3072, !dbg !15
  %16 = shl nsw i32 %.decomposed, 3, !dbg !16
  %17 = shl nsw i32 %14, 7, !dbg !17
  %18 = or disjoint i32 %17, %11, !dbg !18
  %19 = or disjoint i32 %18, 64, !dbg !18
  %20 = sdiv i32 %18, 1024, !dbg !19
  %21 = mul i32 %20, 1024, !dbg !20
  %.decomposed1 = sub i32 %18, %21, !dbg !20
  %22 = sdiv i32 %19, 1024, !dbg !19
  %23 = mul i32 %22, 1024, !dbg !20
  %.decomposed2 = sub i32 %19, %23, !dbg !20
  %24 = mul nsw i32 %.decomposed1, 384, !dbg !21
  %25 = mul nsw i32 %.decomposed2, 384, !dbg !21
  %26 = mul i32 %15, 393216, !dbg !22
  %27 = add i32 %26, %16, !dbg !23
  %28 = add i32 %27, %20, !dbg !24
  %29 = add i32 %28, %24, !dbg !25
  %30 = add i32 %27, %22, !dbg !24
  %31 = add i32 %30, %25, !dbg !25
  %32 = sext i32 %29 to i64, !dbg !26
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !26
  %34 = sext i32 %31 to i64, !dbg !26
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !26
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #3, !dbg !27
  %37 = bitcast i32 %36 to float, !dbg !27
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #3, !dbg !27
  %39 = bitcast i32 %38 to float, !dbg !27
  %40 = fadd float %37, %39, !dbg !28
  %41 = bitcast float %40 to i32, !dbg !33
  %42 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %41, i32 16, i32 31), !dbg !33
  %43 = bitcast i32 %42 to float, !dbg !33
  %44 = fadd float %40, %43, !dbg !28
  %45 = bitcast float %44 to i32, !dbg !33
  %46 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %45, i32 8, i32 31), !dbg !33
  %47 = bitcast i32 %46 to float, !dbg !33
  %48 = fadd float %44, %47, !dbg !28
  %49 = bitcast float %48 to i32, !dbg !33
  %50 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 4, i32 31), !dbg !33
  %51 = bitcast i32 %50 to float, !dbg !33
  %52 = fadd float %48, %51, !dbg !28
  %53 = bitcast float %52 to i32, !dbg !33
  %54 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %53, i32 2, i32 31), !dbg !33
  %55 = bitcast i32 %54 to float, !dbg !33
  %56 = fadd float %52, %55, !dbg !28
  %57 = bitcast float %56 to i32, !dbg !33
  %58 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %57, i32 1, i32 31), !dbg !33
  %59 = bitcast i32 %58 to float, !dbg !33
  %60 = fadd float %56, %59, !dbg !28
  %61 = icmp eq i32 %9, 0, !dbg !33
  %62 = and i32 %10, 1, !dbg !33
  %63 = zext nneg i32 %62 to i64, !dbg !33
  %64 = getelementptr float, ptr addrspace(3) @global_smem, i64 %63, !dbg !33
  %65 = bitcast float %60 to <1 x i32>, !dbg !33
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %64, <1 x i32> %65, i1 %61) #3, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %66 = icmp slt i32 %8, 2, !dbg !33
  %67 = sext i32 %8 to i64, !dbg !33
  %68 = getelementptr float, ptr addrspace(3) @global_smem, i64 %67, !dbg !33
  %69 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %68, i1 %66) #3, !dbg !33
  %70 = bitcast i32 %69 to float, !dbg !33
  %71 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %69, i32 1, i32 31), !dbg !33
  %72 = bitcast i32 %71 to float, !dbg !33
  %73 = fadd float %70, %72, !dbg !28
  %74 = and i32 %8, 1, !dbg !33
  %75 = icmp eq i32 %74, 0, !dbg !33
  %76 = and i1 %66, %75, !dbg !33
  %77 = bitcast float %73 to <1 x i32>, !dbg !33
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %68, <1 x i32> %77, i1 %76) #3, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %78 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !33
  %79 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %78, float 1.280000e+02) #3, !dbg !34
  %80 = fsub float %37, %79, !dbg !35
  %81 = fsub float %39, %79, !dbg !35
  %82 = fmul float %80, %80, !dbg !36
  %83 = fmul float %81, %81, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %84 = fadd float %82, %83, !dbg !39
  %85 = bitcast float %84 to i32, !dbg !37
  %86 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %85, i32 16, i32 31), !dbg !37
  %87 = bitcast i32 %86 to float, !dbg !37
  %88 = fadd float %84, %87, !dbg !39
  %89 = bitcast float %88 to i32, !dbg !37
  %90 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %89, i32 8, i32 31), !dbg !37
  %91 = bitcast i32 %90 to float, !dbg !37
  %92 = fadd float %88, %91, !dbg !39
  %93 = bitcast float %92 to i32, !dbg !37
  %94 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 4, i32 31), !dbg !37
  %95 = bitcast i32 %94 to float, !dbg !37
  %96 = fadd float %92, %95, !dbg !39
  %97 = bitcast float %96 to i32, !dbg !37
  %98 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %97, i32 2, i32 31), !dbg !37
  %99 = bitcast i32 %98 to float, !dbg !37
  %100 = fadd float %96, %99, !dbg !39
  %101 = bitcast float %100 to i32, !dbg !37
  %102 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %101, i32 1, i32 31), !dbg !37
  %103 = bitcast i32 %102 to float, !dbg !37
  %104 = fadd float %100, %103, !dbg !39
  %105 = bitcast float %104 to <1 x i32>, !dbg !37
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %64, <1 x i32> %105, i1 %61) #3, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %106 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %68, i1 %66) #3, !dbg !37
  %107 = bitcast i32 %106 to float, !dbg !37
  %108 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %106, i32 1, i32 31), !dbg !37
  %109 = bitcast i32 %108 to float, !dbg !37
  %110 = fadd float %107, %109, !dbg !39
  %111 = bitcast float %110 to <1 x i32>, !dbg !37
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %68, <1 x i32> %111, i1 %76) #3, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %112 = load i32, ptr addrspace(3) @global_smem, align 16, !dbg !37
  %113 = sext i32 %7 to i64, !dbg !40
  %114 = getelementptr float, ptr addrspace(1) %1, i64 %113, !dbg !40
  %115 = icmp eq i32 %11, 0, !dbg !41
  %116 = bitcast float %79 to i32, !dbg !41
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %116, ptr addrspace(1) %114, i1 %115) #3, !dbg !41
  %117 = getelementptr float, ptr addrspace(1) %2, i64 %113, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %112, ptr addrspace(1) %117, i1 %115) #3, !dbg !43
  %118 = getelementptr float, ptr addrspace(1) %3, i64 %113, !dbg !44
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 1124073472, ptr addrspace(1) %118, i1 %115) #3, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cb5hsmlnd4x7ghe4mx4ltc4yx6qud27lvx3qyygmn4tnptoht5ha.py", directory: "inductor_cache/b5")
!4 = !{ptr @triton_per_fused_native_group_norm_20, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_native_group_norm_20, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_native_group_norm_20", linkageName: "triton_per_fused_native_group_norm_20", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 26, column: 34, scope: !7)
!12 = !DILocation(line: 31, column: 21, scope: !7)
!13 = !DILocation(line: 30, column: 19, scope: !7)
!14 = !DILocation(line: 31, column: 27, scope: !7)
!15 = !DILocation(line: 32, column: 19, scope: !7)
!16 = !DILocation(line: 34, column: 32, scope: !7)
!17 = !DILocation(line: 34, column: 53, scope: !7)
!18 = !DILocation(line: 34, column: 49, scope: !7)
!19 = !DILocation(line: 34, column: 98, scope: !7)
!20 = !DILocation(line: 34, column: 59, scope: !7)
!21 = !DILocation(line: 34, column: 43, scope: !7)
!22 = !DILocation(line: 34, column: 75, scope: !7)
!23 = !DILocation(line: 34, column: 37, scope: !7)
!24 = !DILocation(line: 34, column: 68, scope: !7)
!25 = !DILocation(line: 34, column: 81, scope: !7)
!26 = !DILocation(line: 34, column: 30, scope: !7)
!27 = !DILocation(line: 34, column: 106, scope: !7)
!28 = !DILocation(line: 256, column: 15, scope: !29, inlinedAt: !32)
!29 = distinct !DILexicalBlockFile(scope: !31, file: !30, discriminator: 0)
!30 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!31 = distinct !DILexicalBlockFile(scope: !7, file: !30, discriminator: 0)
!32 = !DILocation(line: 37, column: 24, scope: !7)
!33 = !DILocation(line: 267, column: 36, scope: !31, inlinedAt: !32)
!34 = !DILocation(line: 40, column: 18, scope: !7)
!35 = !DILocation(line: 41, column: 18, scope: !7)
!36 = !DILocation(line: 42, column: 19, scope: !7)
!37 = !DILocation(line: 267, column: 36, scope: !31, inlinedAt: !38)
!38 = !DILocation(line: 44, column: 26, scope: !7)
!39 = !DILocation(line: 256, column: 15, scope: !29, inlinedAt: !38)
!40 = !DILocation(line: 45, column: 25, scope: !7)
!41 = !DILocation(line: 45, column: 36, scope: !7)
!42 = !DILocation(line: 46, column: 25, scope: !7)
!43 = !DILocation(line: 46, column: 37, scope: !7)
!44 = !DILocation(line: 47, column: 25, scope: !7)
!45 = !DILocation(line: 47, column: 36, scope: !7)
!46 = !DILocation(line: 47, column: 4, scope: !7)
