//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_log_mse_loss_mul_1 // -- Begin function triton_per_fused_add_log_mse_loss_mul_1
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_log_mse_loss_mul_1
.visible .entry triton_per_fused_add_log_mse_loss_mul_1(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_log_mse_loss_mul_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_log_mse_loss_mul_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_log_mse_loss_mul_1_param_2,
	.param .u32 triton_per_fused_add_log_mse_loss_mul_1_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b16 	%rs<13>;
	.reg .b32 	%r<60>;
	.reg .f32 	%f<101>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:19:0

// %bb.0:
	ld.param.u64 	%rd30, [triton_per_fused_add_log_mse_loss_mul_1_param_0];
	ld.param.u64 	%rd11, [triton_per_fused_add_log_mse_loss_mul_1_param_1];
$L__tmp0:
	.loc	1 26 34                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:26:34
	mov.u32 	%r28, %tid.x;
	and.b32  	%r29, %r28, 31;
	ld.param.u64 	%rd12, [triton_per_fused_add_log_mse_loss_mul_1_param_2];
	and.b32  	%r1, %r28, 63;
	.loc	1 30 19                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:30:19
	cvt.u16.u32 	%rs1, %r1;
	mul.lo.s16 	%rs2, %rs1, 86;
	shr.u16 	%rs3, %rs2, 8;
	cvt.u32.u16 	%r30, %rs3;
	or.b16  	%rs4, %rs1, 64;
	mul.lo.s16 	%rs5, %rs4, 86;
	shr.u16 	%rs6, %rs5, 8;
	or.b16  	%rs7, %rs1, 128;
	mul.lo.s16 	%rs8, %rs7, 171;
	shr.u16 	%rs9, %rs8, 9;
	or.b16  	%rs10, %rs1, 192;
	mul.lo.s16 	%rs11, %rs10, 171;
	shr.u16 	%rs12, %rs11, 9;
	.loc	1 31 35                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:31:35
	add.s32 	%r31, %r1, %r30;
	.loc	1 31 30                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:31:30
	mul.wide.u32 	%rd13, %r31, 4;
	add.s64 	%rd2, %rd11, %rd13;
	cvt.u64.u16 	%rd14, %rs6;
	cvt.u64.u32 	%rd15, %r1;
	add.s64 	%rd16, %rd15, %rd14;
	shl.b64 	%rd17, %rd16, 2;
	add.s64 	%rd18, %rd11, %rd17;
	add.s64 	%rd3, %rd18, 256;
	cvt.u64.u16 	%rd19, %rs9;
	add.s64 	%rd20, %rd15, %rd19;
	shl.b64 	%rd21, %rd20, 2;
	add.s64 	%rd22, %rd11, %rd21;
	add.s64 	%rd4, %rd22, 512;
	cvt.u64.u16 	%rd23, %rs12;
	add.s64 	%rd24, %rd15, %rd23;
	shl.b64 	%rd25, %rd24, 2;
	add.s64 	%rd26, %rd11, %rd25;
	add.s64 	%rd5, %rd26, 768;
	mov.b32 	%r3, 0;
	mov.pred 	%p1, -1;
	.loc	1 31 42                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:31:42
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f10, %r4;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r6, %r3;
	// end inline asm
	mov.pred 	%p7, 0;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.b32 { %r8 }, [ %rd5 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	.loc	1 32 30                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:32:30
	add.s64 	%rd6, %rd12, %rd13;
	add.s64 	%rd27, %rd12, %rd17;
	add.s64 	%rd7, %rd27, 256;
	add.s64 	%rd28, %rd12, %rd21;
	add.s64 	%rd8, %rd28, 512;
	add.s64 	%rd29, %rd12, %rd25;
	add.s64 	%rd9, %rd29, 768;
	.loc	1 32 42                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:32:42
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.b32 { %r10 }, [ %rd6 + 0 ];
	@!%p1 mov.u32 %r10, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.b32 { %r12 }, [ %rd7 + 0 ];
	@!%p1 mov.u32 %r12, %r3;
	// end inline asm
	mov.b32 	%f11, %r12;
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.b32 { %r14 }, [ %rd8 + 0 ];
	@!%p1 mov.u32 %r14, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p7 ld.global.b32 { %r16 }, [ %rd9 + 0 ];
	@!%p7 mov.u32 %r16, %r3;
	// end inline asm
	.loc	1 33 19                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:33:19
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.b32 { %r18 }, [ %rd30 + 0 ];
	// end inline asm
	.loc	1 35 18                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:35:18
	sub.f32 	%f12, %f10, %f11;
	.loc	1 31 42                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:31:42
	mov.b32 	%f13, %r2;
	mov.b32 	%f14, %r6;
	.loc	1 32 42                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:32:42
	mov.b32 	%f15, %r10;
	mov.b32 	%f16, %r14;
	.loc	1 35 18                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:35:18
	sub.f32 	%f17, %f14, %f16;
	sub.f32 	%f18, %f13, %f15;
	.loc	1 36 18                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:36:18
	mul.f32 	%f19, %f18, %f18;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f20, %f12, %f12, %f19;
	fma.rn.f32 	%f21, %f17, %f17, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f21;
	shfl.sync.bfly.b32	%r33, %r32, 16, 31, -1;
	mov.b32 	%f22, %r33;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f23;
	shfl.sync.bfly.b32	%r35, %r34, 8, 31, -1;
	mov.b32 	%f24, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f25;
	shfl.sync.bfly.b32	%r37, %r36, 4, 31, -1;
	mov.b32 	%f26, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f27;
	shfl.sync.bfly.b32	%r39, %r38, 2, 31, -1;
	mov.b32 	%f28, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f29;
	shfl.sync.bfly.b32	%r41, %r40, 1, 31, -1;
	mov.b32 	%f30, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p18, %r29, 0;
	shr.u32 	%r42, %r28, 3;
	and.b32  	%r43, %r42, 4;
	mov.u32 	%r44, global_smem;
	add.s32 	%r19, %r44, %r43;
	mov.b32 	%r20, %f31;
	// begin inline asm
	@%p18 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p19, %r28, 2;
	shl.b32 	%r45, %r28, 2;
	add.s32 	%r22, %r44, %r45;
	// begin inline asm
	@%p19 ld.shared.b32 %r21, [ %r22 + 0 ];
	// end inline asm
	mov.b32 	%f32, %r21;
	shfl.sync.bfly.b32	%r46, %r21, 1, 31, -1;
	mov.b32 	%f33, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r47, %r28, 1;
	setp.eq.b32 	%p21, %r47, 1;
	not.pred 	%p22, %p21;
	and.pred  	%p20, %p19, %p22;
	mov.b32 	%r24, %f34;
	// begin inline asm
	@%p20 st.shared.b32 [ %r22 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f1, [global_smem];
	mov.b32 	%r27, 1115684864;
$L__tmp2:
	.loc	1 41 19                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:41:19
	// begin inline asm
	div.full.f32 %r25, %r18, %r27;
	// end inline asm
	mov.b32 	%f35, %r25;
	.loc	1 43 20                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:43:20
	add.f32 	%f36, %f35, 0f3F800000;
	.loc	1 44 24                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:44:24
	setp.lt.f32 	%p23, %f36, 0f00800000;
	mul.f32 	%f37, %f36, 0f4B000000;
	selp.f32 	%f2, %f37, %f36, %p23;
	selp.f32 	%f38, 0fC1B80000, 0f00000000, %p23;
	mov.b32 	%r48, %f2;
	add.s32 	%r49, %r48, -1059760811;
	and.b32  	%r50, %r49, -8388608;
	sub.s32 	%r51, %r48, %r50;
	mov.b32 	%f39, %r51;
	cvt.rn.f32.s32 	%f40, %r50;
	mov.f32 	%f41, 0f34000000;
	fma.rn.ftz.f32 	%f42, %f40, %f41, %f38;
	add.f32 	%f43, %f39, 0fBF800000;
	mov.f32 	%f44, 0f3E1039F6;
	mov.f32 	%f45, 0fBE055027;
	fma.rn.ftz.f32 	%f46, %f45, %f43, %f44;
	mov.f32 	%f47, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f48, %f46, %f43, %f47;
	mov.f32 	%f49, 0f3E0F2955;
	fma.rn.ftz.f32 	%f50, %f48, %f43, %f49;
	mov.f32 	%f51, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f52, %f50, %f43, %f51;
	mov.f32 	%f53, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f54, %f52, %f43, %f53;
	mov.f32 	%f55, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f56, %f54, %f43, %f55;
	mov.f32 	%f57, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f58, %f56, %f43, %f57;
	mov.f32 	%f59, 0fBF000000;
	fma.rn.ftz.f32 	%f60, %f58, %f43, %f59;
	mul.f32 	%f61, %f43, %f60;
	fma.rn.ftz.f32 	%f62, %f61, %f43, %f43;
	mov.f32 	%f63, 0f3F317218;
	fma.rn.ftz.f32 	%f99, %f42, %f63, %f62;
	setp.lt.u32 	%p24, %r48, 2139095040;
	mov.f32 	%f64, 0f7F800000;
	@%p24 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:0:24
	fma.rn.ftz.f32 	%f99, %f2, %f64, %f64;
$L__BB0_2:                              // %__nv_logf.exit
	.loc	1 46 19                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:46:19
	mov.b32 	%r53, %f1;
	mov.b32 	%r54, 1128267776;
	// begin inline asm
	div.full.f32 %r52, %r53, %r54;
	// end inline asm
	mov.b32 	%f65, %r52;
	.loc	1 47 20                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:47:20
	add.f32 	%f66, %f65, 0f3F800000;
	.loc	1 48 24                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:48:24
	setp.lt.f32 	%p25, %f66, 0f00800000;
	mul.f32 	%f67, %f66, 0f4B000000;
	selp.f32 	%f6, %f67, %f66, %p25;
	selp.f32 	%f68, 0fC1B80000, 0f00000000, %p25;
	mov.b32 	%r55, %f6;
	add.s32 	%r56, %r55, -1059760811;
	and.b32  	%r57, %r56, -8388608;
	sub.s32 	%r58, %r55, %r57;
	mov.b32 	%f69, %r58;
	cvt.rn.f32.s32 	%f70, %r57;
	fma.rn.ftz.f32 	%f72, %f70, %f41, %f68;
	add.f32 	%f73, %f69, 0fBF800000;
	fma.rn.ftz.f32 	%f76, %f45, %f73, %f44;
	fma.rn.ftz.f32 	%f78, %f76, %f73, %f47;
	fma.rn.ftz.f32 	%f80, %f78, %f73, %f49;
	fma.rn.ftz.f32 	%f82, %f80, %f73, %f51;
	fma.rn.ftz.f32 	%f84, %f82, %f73, %f53;
	fma.rn.ftz.f32 	%f86, %f84, %f73, %f55;
	fma.rn.ftz.f32 	%f88, %f86, %f73, %f57;
	fma.rn.ftz.f32 	%f90, %f88, %f73, %f59;
	mul.f32 	%f91, %f73, %f90;
	fma.rn.ftz.f32 	%f92, %f91, %f73, %f73;
	fma.rn.ftz.f32 	%f100, %f72, %f63, %f92;
	setp.lt.u32 	%p26, %r55, 2139095040;
	@%p26 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i27
	.loc	1 0 24                          // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:0:24
	fma.rn.ftz.f32 	%f100, %f6, %f64, %f64;
$L__BB0_4:                              // %__nv_logf.exit30
	.loc	1 44 24                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:44:24
	setp.eq.f32 	%p28, %f2, 0f00000000;
	selp.f32 	%f95, 0fFF800000, %f99, %p28;
	.loc	1 48 24                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:48:24
	setp.eq.f32 	%p29, %f6, 0f00000000;
	.loc	1 50 20                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:50:20
	mul.f32 	%f96, %f100, 0f3E99999A;
	.loc	1 48 24                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:48:24
	selp.f32 	%f97, 0fFF800000, %f96, %p29;
	.loc	1 51 20                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:51:20
	add.f32 	%f98, %f95, %f97;
	.loc	1 52 4                          // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:52:4
	bar.sync 	0;
	.loc	1 53 71                         // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:53:71
	setp.eq.s32 	%p27, %r1, 0;
	mov.b32 	%r59, %f98;
	// begin inline asm
	@%p27 st.global.b32 [ %rd30 + 0 ], { %r59 };
	// end inline asm
	.loc	1 53 4                          // c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py:53:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/3b/c3bvm3xcgpigixlwfzwjxiiwk3aenrjznx66c5ehbiod3xvc2mpn.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 184                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 98
.b8 118
.b8 109
.b8 51
.b8 120
.b8 99
.b8 103
.b8 112
.b8 105
.b8 103
.b8 105
.b8 120
.b8 108
.b8 119
.b8 102
.b8 122
.b8 119
.b8 106
.b8 120
.b8 105
.b8 105
.b8 119
.b8 107
.b8 51
.b8 97
.b8 101
.b8 110
.b8 114
.b8 106
.b8 122
.b8 110
.b8 120
.b8 54
.b8 54
.b8 99
.b8 53
.b8 101
.b8 104
.b8 98
.b8 105
.b8 111
.b8 100
.b8 51
.b8 120
.b8 118
.b8 99
.b8 50
.b8 109
.b8 112
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 98
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 109
.b8 115
.b8 101
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8d:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
