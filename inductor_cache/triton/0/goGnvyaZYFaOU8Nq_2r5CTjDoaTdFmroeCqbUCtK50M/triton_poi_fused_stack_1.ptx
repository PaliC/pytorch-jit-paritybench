//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_stack_1 // -- Begin function triton_poi_fused_stack_1
                                        // @triton_poi_fused_stack_1
.visible .entry triton_poi_fused_stack_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_stack_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_stack_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_stack_1_param_2,
	.param .u32 triton_poi_fused_stack_1_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<47>;
	.reg .f32 	%f<11>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_stack_1_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_stack_1_param_1];
$L__tmp0:
	.loc	1 21 28                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:21:33
	shl.b32 	%r20, %r1, 8;
	ld.param.u64 	%rd12, [triton_poi_fused_stack_1_param_2];
	.loc	1 22 36                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:22:36
	mov.u32 	%r21, %tid.x;
	shl.b32 	%r22, %r21, 1;
	and.b32  	%r23, %r22, 254;
	.loc	1 22 23                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:22:23
	or.b32  	%r24, %r20, %r23;
	or.b32  	%r25, %r20, 1;
	.loc	1 23 21                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:23:21
	setp.lt.s32 	%p1, %r24, 256;
	.loc	1 24 19                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:24:19
	bfe.u32 	%r26, %r1, 23, 1;
	add.s32 	%r27, %r25, %r26;
	and.b32  	%r28, %r27, -254;
	sub.s32 	%r29, %r25, %r28;
	.loc	1 25 21                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:25:21
	shr.s32 	%r30, %r24, 1;
	.loc	1 25 26                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:25:26
	add.s32 	%r31, %r30, %r26;
	and.b32  	%r32, %r31, -2;
	sub.s32 	%r33, %r30, %r32;
	.loc	1 26 19                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:26:19
	bfe.s32 	%r34, %r1, 23, 1;
	shr.u32 	%r35, %r34, 30;
	add.s32 	%r36, %r24, %r35;
	.loc	1 27 21                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:27:21
	shr.u32 	%r37, %r34, 28;
	add.s32 	%r38, %r24, %r37;
	shr.s32 	%r39, %r38, 4;
	.loc	1 27 27                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:27:27
	shr.u32 	%r40, %r39, 30;
	add.s32 	%r41, %r39, %r40;
	and.b32  	%r42, %r41, -4;
	sub.s32 	%r43, %r39, %r42;
	.loc	1 33 18                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:33:18
	setp.lt.s32 	%p18, %r29, 1;
	.loc	1 34 37                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:34:37
	and.b32  	%r44, %r36, -4;
	.loc	1 34 35                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:34:35
	add.s32 	%r45, %r33, %r44;
	.loc	1 34 30                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:34:30
	mul.wide.s32 	%rd13, %r45, 4;
	add.s64 	%rd1, %rd10, %rd13;
	.loc	1 34 49                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:34:49
	and.pred  	%p3, %p1, %p18;
	mov.b32 	%r3, 0;
	.loc	1 34 42                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:34:42
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 35 30                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:35:30
	mul.wide.s32 	%rd14, %r43, 4;
	add.s64 	%rd3, %rd11, %rd14;
	.loc	1 35 35                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:35:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r6, %r3;
	// end inline asm
	mov.b32 	%f3, %r6;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r8 }, [ %rd3 + 0 ];
	@!%p3 mov.u32 %r8, %r3;
	// end inline asm
	mov.b32 	%f4, %r8;
	.loc	1 36 18                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:36:18
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 39 20                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:39:20
	setp.gt.s32 	%p19, %r29, 0;
	.loc	1 42 40                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:42:40
	add.s32 	%r46, %r45, 2;
	.loc	1 42 31                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:42:31
	mul.wide.s32 	%rd15, %r46, 4;
	add.s64 	%rd5, %rd10, %rd15;
	.loc	1 42 55                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:42:55
	and.pred  	%p11, %p1, %p19;
	mov.pred 	%p9, 0;
	.loc	1 42 47                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:42:47
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p9 mov.u32 %r10, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r12 }, [ %rd5 + 0 ];
	@!%p11 mov.u32 %r12, %r3;
	// end inline asm
	mov.b32 	%f7, %r12;
	.loc	1 43 36                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:43:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r14 }, [ %rd3 + 0 ];
	@!%p9 mov.u32 %r14, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r16 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r16, %r3;
	// end inline asm
	mov.b32 	%f8, %r16;
	.loc	1 44 20                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:44:20
	add.f32 	%f9, %f7, %f8;
	.loc	1 0 0                           // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:0:0
	selp.f32 	%f10, %f6, %f9, %p18;
	.loc	1 48 25                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:48:25
	mul.wide.s32 	%rd16, %r24, 4;
	add.s64 	%rd9, %rd12, %rd16;
	.loc	1 48 37                         // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:48:37
	mov.b32 	%r18, %f5;
	mov.b32 	%r19, %f10;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd9 + 0 ], { %r18, %r19 };
	// end inline asm
	.loc	1 48 4                          // civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py:48:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/iv/civl73umtbch65g4agsup7s7j5et5mcx2kbqkfznghl4ktkpctwd.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 118
.b8 108
.b8 55
.b8 51
.b8 117
.b8 109
.b8 116
.b8 98
.b8 99
.b8 104
.b8 54
.b8 53
.b8 103
.b8 52
.b8 97
.b8 103
.b8 115
.b8 117
.b8 112
.b8 55
.b8 115
.b8 55
.b8 106
.b8 53
.b8 101
.b8 116
.b8 53
.b8 109
.b8 99
.b8 120
.b8 50
.b8 107
.b8 98
.b8 113
.b8 107
.b8 102
.b8 122
.b8 110
.b8 103
.b8 104
.b8 108
.b8 52
.b8 107
.b8 116
.b8 107
.b8 112
.b8 99
.b8 116
.b8 119
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 118
.b8 0
	}
	.section	.debug_macinfo	{	}
