#loc = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":19:0)
module {
  tt.func public @triton_poi_fused__softmax_11(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":19:0), %arg2: i32 loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<256> : tensor<1x8xi32> loc(#loc1)
    %cst_0 = arith.constant dense<1> : tensor<128x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<512> : tensor<1x8xi32> loc(#loc1)
    %cst_2 = arith.constant dense<2> : tensor<128x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<1x8xi32> loc(#loc1)
    %cst_4 = arith.constant dense<256> : tensor<128x1xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %cst_5 = arith.constant dense<8> : tensor<1x8xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<8xi32> -> tensor<1x8xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x8xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x8xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_5 : tensor<1x8xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.muli %7, %c128_i32 : i32 loc(#loc9)
    %9 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc10)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc11)
    %11 = tt.splat %8 : i32 -> tensor<128x1xi32> loc(#loc12)
    %12 = arith.addi %11, %10 : tensor<128x1xi32> loc(#loc12)
    %13 = arith.cmpi slt, %12, %cst_4 : tensor<128x1xi32> loc(#loc13)
    %14 = arith.remsi %5, %cst_3 : tensor<1x8xi32> loc(#loc14)
    %15 = arith.divsi %5, %cst_3 : tensor<1x8xi32> loc(#loc15)
    %16 = arith.muli %12, %cst_2 : tensor<128x1xi32> loc(#loc16)
    %17 = tt.broadcast %14 : tensor<1x8xi32> -> tensor<128x8xi32> loc(#loc17)
    %18 = tt.broadcast %16 : tensor<128x1xi32> -> tensor<128x8xi32> loc(#loc17)
    %19 = arith.addi %17, %18 : tensor<128x8xi32> loc(#loc17)
    %20 = arith.muli %15, %cst_1 : tensor<1x8xi32> loc(#loc18)
    %21 = tt.broadcast %20 : tensor<1x8xi32> -> tensor<128x8xi32> loc(#loc19)
    %22 = arith.addi %19, %21 : tensor<128x8xi32> loc(#loc19)
    %23 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x8x!tt.ptr<f32>> loc(#loc20)
    %24 = tt.addptr %23, %22 : tensor<128x8x!tt.ptr<f32>>, tensor<128x8xi32> loc(#loc20)
    %25 = tt.broadcast %13 : tensor<128x1xi1> -> tensor<128x8xi1> loc(#loc21)
    %26 = tt.broadcast %6 : tensor<1x8xi1> -> tensor<128x8xi1> loc(#loc21)
    %27 = arith.andi %25, %26 : tensor<128x8xi1> loc(#loc21)
    %28 = tt.load %24, %27 evictionPolicy = evict_last : tensor<128x8x!tt.ptr<f32>> loc(#loc22)
    %29 = arith.addi %18, %21 : tensor<128x8xi32> loc(#loc23)
    %30 = tt.addptr %23, %29 : tensor<128x8x!tt.ptr<f32>>, tensor<128x8xi32> loc(#loc24)
    %31 = tt.load %30, %27 evictionPolicy = evict_last : tensor<128x8x!tt.ptr<f32>> loc(#loc25)
    %32 = arith.addi %16, %cst_0 : tensor<128x1xi32> loc(#loc26)
    %33 = tt.broadcast %32 : tensor<128x1xi32> -> tensor<128x8xi32> loc(#loc27)
    %34 = arith.addi %33, %21 : tensor<128x8xi32> loc(#loc27)
    %35 = tt.addptr %23, %34 : tensor<128x8x!tt.ptr<f32>>, tensor<128x8xi32> loc(#loc28)
    %36 = tt.load %35, %27 evictionPolicy = evict_last : tensor<128x8x!tt.ptr<f32>> loc(#loc29)
    %37 = arith.cmpf ogt, %31, %36 : tensor<128x8xf32> loc(#loc48)
    %38 = arith.cmpf une, %31, %31 : tensor<128x8xf32> loc(#loc49)
    %39 = arith.ori %37, %38 : tensor<128x8xi1> loc(#loc50)
    %40 = arith.select %39, %31, %36 : tensor<128x8xi1>, tensor<128x8xf32> loc(#loc51)
    %41 = arith.subf %28, %40 : tensor<128x8xf32> loc(#loc35)
    %42 = math.exp %41 : tensor<128x8xf32> loc(#loc36)
    %43 = arith.subf %31, %40 : tensor<128x8xf32> loc(#loc37)
    %44 = math.exp %43 : tensor<128x8xf32> loc(#loc38)
    %45 = arith.subf %36, %40 : tensor<128x8xf32> loc(#loc39)
    %46 = math.exp %45 : tensor<128x8xf32> loc(#loc40)
    %47 = arith.addf %44, %46 : tensor<128x8xf32> loc(#loc41)
    %48 = arith.divf %42, %47 : tensor<128x8xf32> loc(#loc42)
    %49 = arith.muli %5, %cst : tensor<1x8xi32> loc(#loc43)
    %50 = tt.broadcast %12 : tensor<128x1xi32> -> tensor<128x8xi32> loc(#loc44)
    %51 = tt.broadcast %49 : tensor<1x8xi32> -> tensor<128x8xi32> loc(#loc44)
    %52 = arith.addi %50, %51 : tensor<128x8xi32> loc(#loc44)
    %53 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x8x!tt.ptr<f32>> loc(#loc45)
    %54 = tt.addptr %53, %52 : tensor<128x8x!tt.ptr<f32>>, tensor<128x8xi32> loc(#loc45)
    tt.store %54, %48, %27 : tensor<128x8x!tt.ptr<f32>> loc(#loc46)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":22:28)
#loc3 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":22:33)
#loc4 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":23:36)
#loc5 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":23:44)
#loc6 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":23:23)
#loc7 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":24:21)
#loc8 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":25:28)
#loc9 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":25:33)
#loc10 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":26:36)
#loc11 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":26:44)
#loc12 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":26:23)
#loc13 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":27:21)
#loc14 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":29:19)
#loc15 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":30:19)
#loc16 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":32:37)
#loc17 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":32:35)
#loc18 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":32:46)
#loc19 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":32:42)
#loc20 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":32:30)
#loc21 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":32:59)
#loc22 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":32:51)
#loc23 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":33:37)
#loc24 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":33:30)
#loc25 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":33:46)
#loc26 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":34:34)
#loc27 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":34:41)
#loc28 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":34:30)
#loc29 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":34:50)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc31 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":35:40)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc35 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":36:18)
#loc36 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":37:23)
#loc37 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":38:18)
#loc38 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":39:23)
#loc39 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":40:18)
#loc40 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":41:23)
#loc41 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":42:19)
#loc42 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":43:19)
#loc43 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":44:34)
#loc44 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":44:30)
#loc45 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":44:25)
#loc46 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":44:46)
#loc47 = loc("inductor_cache/gp/cgpuydnvf62rk3odopurlnijasx3f44xkcznxf4hmlegs6ntapl3.py":44:4)
#loc48 = loc(callsite(#loc30 at #loc31))
#loc49 = loc(callsite(#loc32 at #loc31))
#loc50 = loc(callsite(#loc33 at #loc31))
#loc51 = loc(callsite(#loc34 at #loc31))
