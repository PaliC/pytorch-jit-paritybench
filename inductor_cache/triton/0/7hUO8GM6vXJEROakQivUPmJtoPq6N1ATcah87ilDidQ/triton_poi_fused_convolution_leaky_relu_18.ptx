//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_leaky_relu_18 // -- Begin function triton_poi_fused_convolution_leaky_relu_18
                                        // @triton_poi_fused_convolution_leaky_relu_18
.visible .entry triton_poi_fused_convolution_leaky_relu_18(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_18_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_18_param_1,
	.param .u32 triton_poi_fused_convolution_leaky_relu_18_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<48>;
	.reg .f32 	%f<41>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:19:0

// %bb.0:
	ld.param.u64 	%rd13, [triton_poi_fused_convolution_leaky_relu_18_param_0];
	ld.param.u64 	%rd14, [triton_poi_fused_convolution_leaky_relu_18_param_1];
$L__tmp0:
	.loc	1 21 28                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:21:33
	shl.b32 	%r26, %r1, 10;
	.loc	1 22 36                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:22:36
	mov.u32 	%r27, %tid.x;
	shl.b32 	%r28, %r27, 2;
	and.b32  	%r29, %r28, 508;
	.loc	1 22 23                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:22:23
	or.b32  	%r30, %r26, %r29;
	or.b32  	%r31, %r30, 512;
	.loc	1 23 21                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:23:21
	setp.lt.s32 	%p1, %r30, 100352;
	setp.lt.s32 	%p2, %r31, 100352;
	.loc	1 25 21                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:25:21
	mul.hi.s32 	%r32, %r30, 1402438301;
	shr.u32 	%r33, %r32, 31;
	shr.s32 	%r34, %r32, 8;
	add.s32 	%r35, %r34, %r33;
	mul.hi.s32 	%r36, %r31, 1402438301;
	shr.u32 	%r37, %r36, 31;
	shr.s32 	%r38, %r36, 8;
	add.s32 	%r39, %r38, %r37;
	.loc	1 25 28                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:25:28
	shr.u32 	%r40, %r35, 27;
	add.s32 	%r41, %r35, %r40;
	and.b32  	%r42, %r41, -32;
	sub.s32 	%r43, %r35, %r42;
	shr.u32 	%r44, %r39, 27;
	add.s32 	%r45, %r39, %r44;
	and.b32  	%r46, %r45, -32;
	sub.s32 	%r47, %r39, %r46;
	.loc	1 26 34                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:26:34
	mul.wide.s32 	%rd15, %r30, 4;
	add.s64 	%rd1, %rd13, %rd15;
	add.s64 	%rd2, %rd1, 2048;
	.loc	1 26 39                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:26:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p2 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 27 30                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:27:30
	mul.wide.s32 	%rd16, %r43, 4;
	add.s64 	%rd3, %rd14, %rd16;
	mul.wide.s32 	%rd17, %r47, 4;
	add.s64 	%rd7, %rd14, %rd17;
	.loc	1 27 35                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:27:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r15 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r16 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r17 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 26 39                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:26:39
	mov.b32 	%f1, %r9;
	mov.b32 	%f2, %r8;
	mov.b32 	%f3, %r7;
	mov.b32 	%f4, %r6;
	mov.b32 	%f5, %r5;
	mov.b32 	%f6, %r4;
	mov.b32 	%f7, %r3;
	mov.b32 	%f8, %r2;
	.loc	1 27 35                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:27:35
	mov.b32 	%f9, %r17;
	mov.b32 	%f10, %r16;
	mov.b32 	%f11, %r15;
	mov.b32 	%f12, %r14;
	mov.b32 	%f13, %r13;
	mov.b32 	%f14, %r12;
	mov.b32 	%f15, %r11;
	mov.b32 	%f16, %r10;
	.loc	1 28 18                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:28:18
	add.f32 	%f17, %f8, %f16;
	add.f32 	%f18, %f7, %f15;
	add.f32 	%f19, %f6, %f14;
	add.f32 	%f20, %f5, %f13;
	add.f32 	%f21, %f4, %f12;
	add.f32 	%f22, %f3, %f11;
	add.f32 	%f23, %f2, %f10;
	add.f32 	%f24, %f1, %f9;
	.loc	1 30 18                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:30:18
	setp.gt.f32 	%p13, %f24, 0f00000000;
	setp.gt.f32 	%p14, %f23, 0f00000000;
	setp.gt.f32 	%p15, %f22, 0f00000000;
	setp.gt.f32 	%p16, %f21, 0f00000000;
	setp.gt.f32 	%p17, %f20, 0f00000000;
	setp.gt.f32 	%p18, %f19, 0f00000000;
	setp.gt.f32 	%p19, %f18, 0f00000000;
	setp.gt.f32 	%p20, %f17, 0f00000000;
	.loc	1 32 18                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:32:18
	mul.f32 	%f25, %f17, 0f3E4CCCCD;
	mul.f32 	%f26, %f18, 0f3E4CCCCD;
	mul.f32 	%f27, %f19, 0f3E4CCCCD;
	mul.f32 	%f28, %f20, 0f3E4CCCCD;
	mul.f32 	%f29, %f21, 0f3E4CCCCD;
	mul.f32 	%f30, %f22, 0f3E4CCCCD;
	mul.f32 	%f31, %f23, 0f3E4CCCCD;
	mul.f32 	%f32, %f24, 0f3E4CCCCD;
	.loc	1 33 32                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:33:32
	selp.f32 	%f33, %f17, %f25, %p20;
	selp.f32 	%f34, %f18, %f26, %p19;
	selp.f32 	%f35, %f19, %f27, %p18;
	selp.f32 	%f36, %f20, %f28, %p17;
	selp.f32 	%f37, %f21, %f29, %p16;
	selp.f32 	%f38, %f22, %f30, %p15;
	selp.f32 	%f39, %f23, %f31, %p14;
	selp.f32 	%f40, %f24, %f32, %p13;
	.loc	1 34 39                         // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:34:39
	mov.b32 	%r18, %f33;
	mov.b32 	%r19, %f34;
	mov.b32 	%r20, %f35;
	mov.b32 	%r21, %f36;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r18, %r19, %r20, %r21 };
	// end inline asm
	mov.b32 	%r22, %f37;
	mov.b32 	%r23, %f38;
	mov.b32 	%r24, %f39;
	mov.b32 	%r25, %f40;
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd2 + 0 ], { %r22, %r23, %r24, %r25 };
	// end inline asm
	.loc	1 34 4                          // c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py:34:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/5z/c5zuiniolflhpjgcumngdm7tl6mpcyh2nr4ojo64xweaac4r5a72.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 122
.b8 117
.b8 105
.b8 110
.b8 105
.b8 111
.b8 108
.b8 102
.b8 108
.b8 104
.b8 112
.b8 106
.b8 103
.b8 99
.b8 117
.b8 109
.b8 110
.b8 103
.b8 100
.b8 109
.b8 55
.b8 116
.b8 108
.b8 54
.b8 109
.b8 112
.b8 99
.b8 121
.b8 104
.b8 50
.b8 110
.b8 114
.b8 52
.b8 111
.b8 106
.b8 111
.b8 54
.b8 52
.b8 120
.b8 119
.b8 101
.b8 97
.b8 97
.b8 99
.b8 52
.b8 114
.b8 53
.b8 97
.b8 55
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 122
.b8 0
	}
	.section	.debug_macinfo	{	}
