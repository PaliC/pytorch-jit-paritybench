#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_cat_19(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<6.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<984064> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<256> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<128> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<128> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<-128> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_1 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_2 : tensor<512xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_2 : tensor<512xi32, #blocked> loc(#loc8)
    %8 = arith.extsi %6 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_3 : tensor<512xi64, #blocked> loc(#loc9)
    %10 = arith.muli %7, %cst_4 : tensor<512xi32, #blocked> loc(#loc10)
    %11 = arith.addi %10, %6 : tensor<512xi32, #blocked> loc(#loc11)
    %12 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = tt.addptr %12, %11 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc12)
    %14 = arith.andi %9, %5 : tensor<512xi1, #blocked> loc(#loc13)
    %15 = tt.load %13, %14, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc14)
    %16 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = tt.addptr %16, %6 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc15)
    %18 = tt.load %17, %14, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc16)
    %19 = arith.addf %15, %18 : tensor<512xf32, #blocked> loc(#loc17)
    %20 = arith.cmpf ogt, %19, %cst : tensor<512xf32, #blocked> loc(#loc45)
    %21 = arith.cmpf une, %19, %19 : tensor<512xf32, #blocked> loc(#loc46)
    %22 = arith.ori %20, %21 : tensor<512xi1, #blocked> loc(#loc47)
    %23 = arith.select %22, %19, %cst : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc48)
    %24 = arith.cmpf olt, %23, %cst_0 : tensor<512xf32, #blocked> loc(#loc49)
    %25 = arith.cmpf une, %23, %23 : tensor<512xf32, #blocked> loc(#loc50)
    %26 = arith.ori %24, %25 : tensor<512xi1, #blocked> loc(#loc51)
    %27 = arith.select %26, %23, %cst_0 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc52)
    %28 = arith.cmpi sge, %8, %cst_3 : tensor<512xi64, #blocked> loc(#loc28)
    %29 = arith.addi %6, %cst_5 : tensor<512xi32, #blocked> loc(#loc29)
    %30 = arith.addi %10, %29 : tensor<512xi32, #blocked> loc(#loc30)
    %31 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc31)
    %32 = tt.addptr %31, %30 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc31)
    %33 = arith.andi %28, %5 : tensor<512xi1, #blocked> loc(#loc32)
    %34 = tt.load %32, %33, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc33)
    %35 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc34)
    %36 = tt.addptr %35, %29 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc34)
    %37 = tt.load %36, %33, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc35)
    %38 = arith.addf %34, %37 : tensor<512xf32, #blocked> loc(#loc36)
    %39 = arith.cmpf ogt, %38, %cst : tensor<512xf32, #blocked> loc(#loc53)
    %40 = arith.cmpf une, %38, %38 : tensor<512xf32, #blocked> loc(#loc54)
    %41 = arith.ori %39, %40 : tensor<512xi1, #blocked> loc(#loc55)
    %42 = arith.select %41, %38, %cst : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc56)
    %43 = arith.cmpf olt, %42, %cst_0 : tensor<512xf32, #blocked> loc(#loc57)
    %44 = arith.cmpf une, %42, %42 : tensor<512xf32, #blocked> loc(#loc58)
    %45 = arith.ori %43, %44 : tensor<512xi1, #blocked> loc(#loc59)
    %46 = arith.select %45, %42, %cst_0 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc60)
    %47 = arith.select %28, %46, %cst : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc39)
    %48 = arith.select %9, %27, %47 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc61)
    %49 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc42)
    %50 = tt.addptr %49, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc42)
    tt.store %50, %48, %5 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc43)
    tt.return loc(#loc44)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":21:28)
#loc3 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":21:33)
#loc4 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":22:36)
#loc5 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":22:23)
#loc6 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":23:21)
#loc7 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":24:19)
#loc8 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":25:19)
#loc9 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":31:18)
#loc10 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":32:34)
#loc11 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":32:40)
#loc12 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":32:30)
#loc13 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":32:53)
#loc14 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":32:46)
#loc15 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":33:30)
#loc16 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":33:35)
#loc17 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":34:18)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc19 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":36:40)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc24 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":38:41)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc28 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":41:20)
#loc29 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":44:50)
#loc30 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":44:41)
#loc31 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":44:31)
#loc32 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":44:64)
#loc33 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":44:56)
#loc34 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":45:31)
#loc35 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":45:45)
#loc36 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":46:20)
#loc37 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":48:42)
#loc38 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":50:42)
#loc39 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":52:35)
#loc40 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":53:34)
#loc41 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":40:34)
#loc42 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":54:25)
#loc43 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":54:37)
#loc44 = loc("inductor_cache/x5/cx5o2yw4pg7ahulsq5b7rcc5abbzgxymruznxzdtzffwneucj3t5.py":54:4)
#loc45 = loc(callsite(#loc18 at #loc19))
#loc46 = loc(callsite(#loc20 at #loc19))
#loc47 = loc(callsite(#loc21 at #loc19))
#loc48 = loc(callsite(#loc22 at #loc19))
#loc49 = loc(callsite(#loc23 at #loc24))
#loc50 = loc(callsite(#loc25 at #loc24))
#loc51 = loc(callsite(#loc26 at #loc24))
#loc52 = loc(callsite(#loc27 at #loc24))
#loc53 = loc(callsite(#loc18 at #loc37))
#loc54 = loc(callsite(#loc20 at #loc37))
#loc55 = loc(callsite(#loc21 at #loc37))
#loc56 = loc(callsite(#loc22 at #loc37))
#loc57 = loc(callsite(#loc23 at #loc38))
#loc58 = loc(callsite(#loc25 at #loc38))
#loc59 = loc(callsite(#loc26 at #loc38))
#loc60 = loc(callsite(#loc27 at #loc38))
#loc61 = loc(fused[#loc40, #loc41])
