; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_native_layer_norm_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 5, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 31, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 32, !dbg !14
  %12 = shl i32 %10, 2, !dbg !15
  %13 = sext i32 %12 to i64, !dbg !16
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 %11) #1, !dbg !17
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !18
  %17 = or disjoint i32 %12, 1, !dbg !19
  %18 = sext i32 %17 to i64, !dbg !20
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !20
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %11) #1, !dbg !21
  %21 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !22
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !23
  %23 = or disjoint i32 %12, 2, !dbg !24
  %24 = sext i32 %23 to i64, !dbg !25
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !25
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %11) #1, !dbg !26
  %27 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !27
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !28
  %29 = or disjoint i32 %12, 3, !dbg !29
  %30 = sext i32 %29 to i64, !dbg !30
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !30
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %11) #1, !dbg !31
  %33 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !32
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #1, !dbg !33
  %35 = insertelement <2 x i32> poison, i32 %15, i64 0, !dbg !17
  %36 = insertelement <2 x i32> %35, i32 %20, i64 1, !dbg !17
  %37 = bitcast <2 x i32> %36 to <2 x float>, !dbg !17
  %38 = insertelement <2 x i32> poison, i32 %16, i64 0, !dbg !18
  %39 = insertelement <2 x i32> %38, i32 %22, i64 1, !dbg !18
  %40 = bitcast <2 x i32> %39 to <2 x float>, !dbg !18
  %41 = fadd <2 x float> %37, %40, !dbg !34
  %42 = extractelement <2 x float> %41, i64 0, !dbg !35
  %43 = extractelement <2 x float> %41, i64 1, !dbg !36
  %44 = fadd float %42, %43, !dbg !37
  %45 = insertelement <2 x i32> poison, i32 %26, i64 0, !dbg !26
  %46 = insertelement <2 x i32> %45, i32 %32, i64 1, !dbg !26
  %47 = bitcast <2 x i32> %46 to <2 x float>, !dbg !26
  %48 = insertelement <2 x i32> poison, i32 %28, i64 0, !dbg !28
  %49 = insertelement <2 x i32> %48, i32 %34, i64 1, !dbg !28
  %50 = bitcast <2 x i32> %49 to <2 x float>, !dbg !28
  %51 = fadd <2 x float> %47, %50, !dbg !38
  %52 = extractelement <2 x float> %51, i64 0, !dbg !39
  %53 = fadd float %44, %52, !dbg !40
  %54 = extractelement <2 x float> %51, i64 1, !dbg !41
  %55 = fadd float %53, %54, !dbg !42
  %56 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %55, float 4.000000e+00) #1, !dbg !43
  %57 = fsub float %42, %56, !dbg !35
  %58 = fmul float %57, %57, !dbg !44
  %59 = fsub float %43, %56, !dbg !36
  %60 = fmul float %59, %59, !dbg !45
  %61 = fadd float %58, %60, !dbg !46
  %62 = fsub float %52, %56, !dbg !39
  %63 = fmul float %62, %62, !dbg !47
  %64 = fadd float %63, %61, !dbg !48
  %65 = fsub float %54, %56, !dbg !41
  %66 = fmul float %65, %65, !dbg !49
  %67 = fadd float %66, %64, !dbg !50
  %68 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %67, float 4.000000e+00) #1, !dbg !51
  %69 = sext i32 %10 to i64, !dbg !52
  %70 = getelementptr float, ptr addrspace(1) %2, i64 %69, !dbg !52
  %71 = bitcast float %56 to i32, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %71, ptr addrspace(1) %70, i1 %11) #1, !dbg !53
  %72 = getelementptr float, ptr addrspace(1) %3, i64 %69, !dbg !54
  %73 = bitcast float %68 to i32, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %73, ptr addrspace(1) %72, i1 %11) #1, !dbg !55
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbzivr6dxtzeaaioojars5n2bmmvhhnnlehvnj45f4tzt2n6lgsr.py", directory: "inductor_cache/bz")
!4 = !{ptr @triton_poi_fused_add_native_layer_norm_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_native_layer_norm_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_native_layer_norm_1", linkageName: "triton_poi_fused_add_native_layer_norm_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 34, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 41, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 19, scope: !7)
!24 = !DILocation(line: 31, column: 34, scope: !7)
!25 = !DILocation(line: 31, column: 30, scope: !7)
!26 = !DILocation(line: 31, column: 41, scope: !7)
!27 = !DILocation(line: 32, column: 31, scope: !7)
!28 = !DILocation(line: 32, column: 20, scope: !7)
!29 = !DILocation(line: 34, column: 35, scope: !7)
!30 = !DILocation(line: 34, column: 31, scope: !7)
!31 = !DILocation(line: 34, column: 42, scope: !7)
!32 = !DILocation(line: 35, column: 31, scope: !7)
!33 = !DILocation(line: 35, column: 20, scope: !7)
!34 = !DILocation(line: 37, column: 18, scope: !7)
!35 = !DILocation(line: 46, column: 19, scope: !7)
!36 = !DILocation(line: 48, column: 19, scope: !7)
!37 = !DILocation(line: 39, column: 18, scope: !7)
!38 = !DILocation(line: 40, column: 19, scope: !7)
!39 = !DILocation(line: 51, column: 20, scope: !7)
!40 = !DILocation(line: 41, column: 19, scope: !7)
!41 = !DILocation(line: 54, column: 20, scope: !7)
!42 = !DILocation(line: 43, column: 20, scope: !7)
!43 = !DILocation(line: 45, column: 20, scope: !7)
!44 = !DILocation(line: 47, column: 20, scope: !7)
!45 = !DILocation(line: 49, column: 20, scope: !7)
!46 = !DILocation(line: 50, column: 20, scope: !7)
!47 = !DILocation(line: 52, column: 20, scope: !7)
!48 = !DILocation(line: 53, column: 20, scope: !7)
!49 = !DILocation(line: 55, column: 20, scope: !7)
!50 = !DILocation(line: 56, column: 20, scope: !7)
!51 = !DILocation(line: 57, column: 20, scope: !7)
!52 = !DILocation(line: 58, column: 25, scope: !7)
!53 = !DILocation(line: 58, column: 37, scope: !7)
!54 = !DILocation(line: 59, column: 25, scope: !7)
!55 = !DILocation(line: 59, column: 37, scope: !7)
!56 = !DILocation(line: 59, column: 4, scope: !7)
