#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_add_argmax_diag_embed_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":19:0), %arg2: i32 loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<3> : tensor<4xi64, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<2> : tensor<4xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1> : tensor<4xi64, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<-1000000000> : tensor<4xi64, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<0> : tensor<4xi64, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<3> : tensor<4xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<2> : tensor<4xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<1> : tensor<4xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<4xi32, #blocked> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<4xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<4xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_7 : tensor<4xi32, #blocked> loc(#loc6)
    %6 = arith.muli %4, %cst_7 : tensor<4xi32, #blocked> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>, #blocked> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<4x!tt.ptr<f32>, #blocked>, tensor<4xi32, #blocked> loc(#loc8)
    %9 = tt.load %8, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>, #blocked> loc(#loc9)
    %10 = arith.addi %6, %cst_6 : tensor<4xi32, #blocked> loc(#loc10)
    %11 = tt.addptr %7, %10 : tensor<4x!tt.ptr<f32>, #blocked>, tensor<4xi32, #blocked> loc(#loc11)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = arith.addi %6, %cst_5 : tensor<4xi32, #blocked> loc(#loc13)
    %14 = tt.addptr %7, %13 : tensor<4x!tt.ptr<f32>, #blocked>, tensor<4xi32, #blocked> loc(#loc14)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>, #blocked> loc(#loc15)
    %16 = arith.addi %6, %cst_4 : tensor<4xi32, #blocked> loc(#loc16)
    %17 = tt.addptr %7, %16 : tensor<4x!tt.ptr<f32>, #blocked>, tensor<4xi32, #blocked> loc(#loc17)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>, #blocked> loc(#loc18)
    %19 = arith.extsi %4 : tensor<4xi32, #blocked> to tensor<4xi64, #blocked> loc(#loc19)
    %20 = arith.cmpi eq, %19, %cst_3 : tensor<4xi64, #blocked> loc(#loc19)
    %21 = arith.select %20, %cst_2, %cst_3 : tensor<4xi1, #blocked>, tensor<4xi64, #blocked> loc(#loc20)
    %22 = arith.sitofp %21 : tensor<4xi64, #blocked> to tensor<4xf32, #blocked> loc(#loc21)
    %23 = arith.addf %9, %22 : tensor<4xf32, #blocked> loc(#loc22)
    %24 = arith.cmpi eq, %19, %cst_1 : tensor<4xi64, #blocked> loc(#loc23)
    %25 = arith.select %24, %cst_2, %cst_3 : tensor<4xi1, #blocked>, tensor<4xi64, #blocked> loc(#loc24)
    %26 = arith.sitofp %25 : tensor<4xi64, #blocked> to tensor<4xf32, #blocked> loc(#loc25)
    %27 = arith.addf %12, %26 : tensor<4xf32, #blocked> loc(#loc26)
    %28 = arith.cmpf ogt, %23, %27 : tensor<4xf32, #blocked> loc(#loc27)
    %29 = arith.cmpf oeq, %23, %27 : tensor<4xf32, #blocked> loc(#loc28)
    %30 = arith.cmpf une, %23, %23 : tensor<4xf32, #blocked> loc(#loc29)
    %31 = arith.cmpf une, %27, %27 : tensor<4xf32, #blocked> loc(#loc30)
    %32 = arith.cmpi ugt, %30, %31 : tensor<4xi1, #blocked> loc(#loc31)
    %33 = arith.ori %28, %32 : tensor<4xi1, #blocked> loc(#loc32)
    %34 = arith.andi %30, %31 : tensor<4xi1, #blocked> loc(#loc33)
    %35 = arith.ori %29, %34 : tensor<4xi1, #blocked> loc(#loc34)
    %36 = arith.ori %33, %35 : tensor<4xi1, #blocked> loc(#loc35)
    %37 = arith.select %36, %23, %27 : tensor<4xi1, #blocked>, tensor<4xf32, #blocked> loc(#loc36)
    %38 = arith.select %36, %cst_3, %cst_1 : tensor<4xi1, #blocked>, tensor<4xi64, #blocked> loc(#loc37)
    %39 = arith.cmpi eq, %19, %cst_0 : tensor<4xi64, #blocked> loc(#loc38)
    %40 = arith.select %39, %cst_2, %cst_3 : tensor<4xi1, #blocked>, tensor<4xi64, #blocked> loc(#loc39)
    %41 = arith.sitofp %40 : tensor<4xi64, #blocked> to tensor<4xf32, #blocked> loc(#loc40)
    %42 = arith.addf %15, %41 : tensor<4xf32, #blocked> loc(#loc41)
    %43 = arith.cmpf ogt, %37, %42 : tensor<4xf32, #blocked> loc(#loc42)
    %44 = arith.cmpf oeq, %37, %42 : tensor<4xf32, #blocked> loc(#loc43)
    %45 = arith.cmpf une, %37, %37 : tensor<4xf32, #blocked> loc(#loc44)
    %46 = arith.cmpf une, %42, %42 : tensor<4xf32, #blocked> loc(#loc45)
    %47 = arith.cmpi ugt, %45, %46 : tensor<4xi1, #blocked> loc(#loc46)
    %48 = arith.ori %43, %47 : tensor<4xi1, #blocked> loc(#loc47)
    %49 = arith.andi %45, %46 : tensor<4xi1, #blocked> loc(#loc48)
    %50 = arith.ori %44, %49 : tensor<4xi1, #blocked> loc(#loc49)
    %51 = arith.cmpi slt, %38, %cst_0 : tensor<4xi64, #blocked> loc(#loc50)
    %52 = arith.andi %50, %51 : tensor<4xi1, #blocked> loc(#loc51)
    %53 = arith.ori %48, %52 : tensor<4xi1, #blocked> loc(#loc52)
    %54 = arith.select %53, %37, %42 : tensor<4xi1, #blocked>, tensor<4xf32, #blocked> loc(#loc53)
    %55 = arith.select %53, %38, %cst_0 : tensor<4xi1, #blocked>, tensor<4xi64, #blocked> loc(#loc54)
    %56 = arith.cmpi eq, %19, %cst : tensor<4xi64, #blocked> loc(#loc55)
    %57 = arith.select %56, %cst_2, %cst_3 : tensor<4xi1, #blocked>, tensor<4xi64, #blocked> loc(#loc56)
    %58 = arith.sitofp %57 : tensor<4xi64, #blocked> to tensor<4xf32, #blocked> loc(#loc57)
    %59 = arith.addf %18, %58 : tensor<4xf32, #blocked> loc(#loc58)
    %60 = arith.cmpf ogt, %54, %59 : tensor<4xf32, #blocked> loc(#loc59)
    %61 = arith.cmpf oeq, %54, %59 : tensor<4xf32, #blocked> loc(#loc60)
    %62 = arith.cmpf une, %54, %54 : tensor<4xf32, #blocked> loc(#loc61)
    %63 = arith.cmpf une, %59, %59 : tensor<4xf32, #blocked> loc(#loc62)
    %64 = arith.cmpi ugt, %62, %63 : tensor<4xi1, #blocked> loc(#loc63)
    %65 = arith.ori %60, %64 : tensor<4xi1, #blocked> loc(#loc64)
    %66 = arith.andi %62, %63 : tensor<4xi1, #blocked> loc(#loc65)
    %67 = arith.ori %61, %66 : tensor<4xi1, #blocked> loc(#loc66)
    %68 = arith.cmpi slt, %55, %cst : tensor<4xi64, #blocked> loc(#loc67)
    %69 = arith.andi %67, %68 : tensor<4xi1, #blocked> loc(#loc68)
    %70 = arith.ori %65, %69 : tensor<4xi1, #blocked> loc(#loc69)
    %71 = arith.select %70, %55, %cst : tensor<4xi1, #blocked>, tensor<4xi64, #blocked> loc(#loc70)
    %72 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<4x!tt.ptr<i64>, #blocked> loc(#loc71)
    %73 = tt.addptr %72, %4 : tensor<4x!tt.ptr<i64>, #blocked>, tensor<4xi32, #blocked> loc(#loc71)
    tt.store %73, %71, %5 : tensor<4x!tt.ptr<i64>, #blocked> loc(#loc72)
    tt.return loc(#loc73)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":21:28)
#loc3 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":21:33)
#loc4 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":22:36)
#loc5 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":22:23)
#loc6 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":23:21)
#loc7 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":25:32)
#loc8 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":25:30)
#loc9 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":25:37)
#loc10 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":26:34)
#loc11 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":26:30)
#loc12 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":26:41)
#loc13 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":27:35)
#loc14 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":27:31)
#loc15 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":27:42)
#loc16 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":28:35)
#loc17 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":28:31)
#loc18 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":28:42)
#loc19 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":31:19)
#loc20 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":33:32)
#loc21 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":34:19)
#loc22 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":35:18)
#loc23 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":37:20)
#loc24 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":38:34)
#loc25 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":39:21)
#loc26 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":40:19)
#loc27 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":41:19)
#loc28 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":42:20)
#loc29 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":43:20)
#loc30 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":44:21)
#loc31 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":45:20)
#loc32 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":46:20)
#loc33 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":47:20)
#loc34 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":48:20)
#loc35 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":51:20)
#loc36 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":52:34)
#loc37 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":53:34)
#loc38 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":55:21)
#loc39 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":56:34)
#loc40 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":57:21)
#loc41 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":58:20)
#loc42 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":59:20)
#loc43 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":60:21)
#loc44 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":61:21)
#loc45 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":62:21)
#loc46 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":63:20)
#loc47 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":64:20)
#loc48 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":65:20)
#loc49 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":66:20)
#loc50 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":67:20)
#loc51 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":68:20)
#loc52 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":69:20)
#loc53 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":70:35)
#loc54 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":71:35)
#loc55 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":73:21)
#loc56 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":74:34)
#loc57 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":75:21)
#loc58 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":76:20)
#loc59 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":77:20)
#loc60 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":78:21)
#loc61 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":79:21)
#loc62 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":80:21)
#loc63 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":81:20)
#loc64 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":82:20)
#loc65 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":83:20)
#loc66 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":84:20)
#loc67 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":85:20)
#loc68 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":86:20)
#loc69 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":87:20)
#loc70 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":89:35)
#loc71 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":90:25)
#loc72 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":90:37)
#loc73 = loc("inductor_cache/zm/czmpcckzs74wqcdeo64nirgwz65nsfvrvxi7jmuxgotnyg5qsoqa.py":90:4)
