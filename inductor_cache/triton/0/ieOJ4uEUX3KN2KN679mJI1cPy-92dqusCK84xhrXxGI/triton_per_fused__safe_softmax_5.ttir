#loc = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":36:37)
#loc26 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":41:25)
#loc35 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":49:38)
#loc49 = loc(callsite(#loc1 at #loc16))
#loc55 = loc(callsite(#loc1 at #loc26))
#loc58 = loc(callsite(#loc1 at #loc35))
module {
  tt.func public @triton_per_fused__safe_softmax_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0), %arg3: i32 loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0)) attributes {noinline = false} {
    %c1184_i32 = arith.constant 1184 : i32 loc(#loc1)
    %c17_i32 = arith.constant 17 : i32 loc(#loc1)
    %c68_i32 = arith.constant 68 : i32 loc(#loc1)
    %c272_i32 = arith.constant 272 : i32 loc(#loc1)
    %cst = arith.constant dense<0> : tensor<1x32xi64> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1x32xi32> loc(#loc1)
    %cst_2 = arith.constant dense<0xFF800000> : tensor<1x32xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x32xf32> loc(#loc1)
    %cst_4 = arith.constant dense<17> : tensor<1x32xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c272_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc5)
    %4 = arith.cmpi slt, %3, %cst_4 : tensor<1x32xi32> loc(#loc6)
    %5 = arith.remsi %0, %c68_i32 : i32 loc(#loc7)
    %6 = arith.divsi %0, %c68_i32 : i32 loc(#loc8)
    %7 = arith.muli %0, %c17_i32 : i32 loc(#loc9)
    %8 = tt.splat %7 : i32 -> tensor<1x32xi32> loc(#loc10)
    %9 = arith.addi %3, %8 : tensor<1x32xi32> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc11)
    %12 = tt.splat %1 : i1 -> tensor<1x32xi1> loc(#loc12)
    %13 = arith.andi %4, %12 : tensor<1x32xi1> loc(#loc12)
    %14 = tt.load %11, %13, %cst_3 : tensor<1x32x!tt.ptr<f32>> loc(#loc13)
    %15 = arith.select %13, %14, %cst_2 : tensor<1x32xi1>, tensor<1x32xf32> loc(#loc14)
    %16 = "tt.reduce"(%15) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc16)), %arg5: f32 loc(callsite(#loc1 at #loc16))):
      %46 = arith.cmpf ogt, %arg4, %arg5 : f32 loc(#loc60)
      %47 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc61)
      %48 = arith.ori %46, %47 : i1 loc(#loc62)
      %49 = arith.select %48, %arg4, %arg5 : f32 loc(#loc63)
      tt.reduce.return %49 : f32 loc(#loc48)
    }) : (tensor<1x32xf32>) -> tensor<1xf32> loc(#loc48)
    %17 = tt.expand_dims %16 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc21)
    %18 = tt.broadcast %17 : tensor<1x1xf32> -> tensor<1x32xf32> loc(#loc22)
    %19 = arith.subf %14, %18 : tensor<1x32xf32> loc(#loc22)
    %20 = math.exp %19 : tensor<1x32xf32> loc(#loc23)
    %21 = arith.select %13, %20, %cst_3 : tensor<1x32xi1>, tensor<1x32xf32> loc(#loc24)
    %22 = "tt.reduce"(%21) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc26)), %arg5: f32 loc(callsite(#loc1 at #loc26))):
      %46 = arith.addf %arg4, %arg5 : f32 loc(#loc64)
      tt.reduce.return %46 : f32 loc(#loc54)
    }) : (tensor<1x32xf32>) -> tensor<1xf32> loc(#loc54)
    %23 = tt.expand_dims %22 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc28)
    %24 = arith.cmpf oeq, %14, %cst_2 : tensor<1x32xf32> loc(#loc29)
    %25 = arith.extui %24 : tensor<1x32xi1> to tensor<1x32xi32> loc(#loc30)
    %26 = arith.cmpi eq, %25, %cst_1 : tensor<1x32xi32> loc(#loc30)
    %27 = arith.extui %26 : tensor<1x32xi1> to tensor<1x32xi64> loc(#loc31)
    %28 = arith.cmpi ne, %27, %cst : tensor<1x32xi64> loc(#loc32)
    %29 = arith.extui %28 : tensor<1x32xi1> to tensor<1x32xi32> loc(#loc33)
    %30 = arith.select %13, %29, %cst_1 : tensor<1x32xi1>, tensor<1x32xi32> loc(#loc33)
    %31 = "tt.reduce"(%30) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc1 at #loc35)), %arg5: i32 loc(callsite(#loc1 at #loc35))):
      %46 = arith.ori %arg4, %arg5 : i32 loc(#loc65)
      tt.reduce.return %46 : i32 loc(#loc57)
    }) : (tensor<1x32xi32>) -> tensor<1xi32> loc(#loc57)
    %32 = tt.expand_dims %31 {axis = 1 : i32} : tensor<1xi32> -> tensor<1x1xi32> loc(#loc37)
    %33 = arith.cmpi eq, %32, %cst_0 : tensor<1x1xi32> loc(#loc38)
    %34 = tt.broadcast %23 : tensor<1x1xf32> -> tensor<1x32xf32> loc(#loc39)
    %35 = arith.divf %20, %34 : tensor<1x32xf32> loc(#loc39)
    %36 = tt.broadcast %33 : tensor<1x1xi1> -> tensor<1x32xi1> loc(#loc40)
    %37 = arith.select %36, %cst_3, %35 : tensor<1x32xi1>, tensor<1x32xf32> loc(#loc40)
    %38 = arith.muli %5, %c17_i32 : i32 loc(#loc41)
    %39 = tt.splat %38 : i32 -> tensor<1x32xi32> loc(#loc42)
    %40 = arith.addi %3, %39 : tensor<1x32xi32> loc(#loc42)
    %41 = arith.muli %6, %c1184_i32 : i32 loc(#loc43)
    %42 = tt.splat %41 : i32 -> tensor<1x32xi32> loc(#loc44)
    %43 = arith.addi %40, %42 : tensor<1x32xi32> loc(#loc44)
    %44 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc45)
    %45 = tt.addptr %44, %43 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc45)
    tt.store %45, %37, %13 : tensor<1x32x!tt.ptr<f32>> loc(#loc46)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":23:28)
#loc3 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":25:21)
#loc4 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":26:26)
#loc5 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":26:34)
#loc6 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":28:21)
#loc7 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":31:19)
#loc8 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":32:19)
#loc9 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:38)
#loc10 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:35)
#loc11 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:30)
#loc12 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:51)
#loc13 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:43)
#loc14 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":35:41)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc21 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":36:40)
#loc22 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":37:18)
#loc23 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":38:23)
#loc24 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":40:41)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc28 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":41:28)
#loc29 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":43:20)
#loc30 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":44:21)
#loc31 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":45:21)
#loc32 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":46:22)
#loc33 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":48:43)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":232:29)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":227:15)
#loc37 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":49:41)
#loc38 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":50:21)
#loc39 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":51:19)
#loc40 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":53:35)
#loc41 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:33)
#loc42 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:30)
#loc43 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:43)
#loc44 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:38)
#loc45 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:25)
#loc46 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:55)
#loc47 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:4)
#loc48 = loc(callsite(#loc15 at #loc16))
#loc50 = loc(callsite(#loc17 at #loc15))
#loc51 = loc(callsite(#loc18 at #loc15))
#loc52 = loc(callsite(#loc19 at #loc15))
#loc53 = loc(callsite(#loc20 at #loc15))
#loc54 = loc(callsite(#loc25 at #loc26))
#loc56 = loc(callsite(#loc27 at #loc25))
#loc57 = loc(callsite(#loc34 at #loc35))
#loc59 = loc(callsite(#loc36 at #loc34))
#loc60 = loc(callsite(#loc50 at #loc16))
#loc61 = loc(callsite(#loc51 at #loc16))
#loc62 = loc(callsite(#loc52 at #loc16))
#loc63 = loc(callsite(#loc53 at #loc16))
#loc64 = loc(callsite(#loc56 at #loc26))
#loc65 = loc(callsite(#loc59 at #loc35))
