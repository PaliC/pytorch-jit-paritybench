; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 576, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 144, !dbg !15
  %12 = mul i32 %11, 144, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %13 = icmp slt i32 %.decomposed, 16, !dbg !17
  %14 = shl nsw i32 %11, 4, !dbg !18
  %15 = add nsw i32 %14, %.decomposed, !dbg !19
  %16 = sext i32 %15 to i64, !dbg !20
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !20
  %18 = and i1 %10, %13, !dbg !21
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %18, i32 0, i1 %18) #4, !dbg !22
  %20 = add nsw i32 %.decomposed, -16, !dbg !23
  %21 = icmp ult i32 %20, 64, !dbg !24
  %.lhs.trunc = trunc nsw i32 %20 to i16, !dbg !25
  %22 = sdiv i16 %.lhs.trunc, 16, !dbg !26
  %23 = mul i16 %22, 16, !dbg !25
  %.decomposed72 = sub i16 %.lhs.trunc, %23, !dbg !25
  %.sext = sext i16 %.decomposed72 to i32, !dbg !25
  %24 = add nsw i32 %14, %.sext, !dbg !27
  %25 = sext i32 %24 to i64, !dbg !28
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !28
  %27 = and i1 %10, %21, !dbg !29
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %27, i32 0, i1 %27) #4, !dbg !30
  %29 = bitcast i32 %28 to float, !dbg !30
  %.lhs.trunc56 = trunc nsw i16 %22 to i8, !dbg !31
  %30 = srem i8 %.lhs.trunc56, 4, !dbg !31
  %31 = sext i8 %30 to i64, !dbg !32
  %32 = getelementptr float, ptr addrspace(1) %1, i64 %31, !dbg !32
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %27, i32 0, i1 %27) #4, !dbg !33
  %34 = bitcast i32 %33 to float, !dbg !33
  %35 = fmul float %29, %34, !dbg !34
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !35
  %36 = fmul float %35, 0x3FE45F3060000000, !dbg !35
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not.i = icmp eq i32 %37, 0, !dbg !35
  %38 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %36) #4, !dbg !35
  %39 = tail call i32 @llvm.nvvm.f2i.rn(float %36) #4, !dbg !35
  %.01.i = select i1 %.not.i, i32 %39, i32 %38, !dbg !35
  %40 = sitofp i32 %.01.i to float, !dbg !35
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not15.i = icmp eq i32 %41, 0, !dbg !35
  %42 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %40, float 0xBFF921FB40000000, float %35) #4, !dbg !35
  %43 = tail call float @llvm.nvvm.fma.rn.f(float %40, float 0xBFF921FB40000000, float %35) #4, !dbg !35
  %.02.i = select i1 %.not15.i, float %43, float %42, !dbg !35
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not16.i = icmp eq i32 %44, 0, !dbg !35
  %45 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %40, float 0xBE74442D00000000, float %.02.i) #4, !dbg !35
  %46 = tail call float @llvm.nvvm.fma.rn.f(float %40, float 0xBE74442D00000000, float %.02.i) #4, !dbg !35
  %.03.i = select i1 %.not16.i, float %46, float %45, !dbg !35
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not17.i = icmp eq i32 %47, 0, !dbg !35
  %48 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %40, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !35
  %49 = tail call float @llvm.nvvm.fma.rn.f(float %40, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !35
  %.04.i = select i1 %.not17.i, float %49, float %48, !dbg !35
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not18.i = icmp eq i32 %50, 0, !dbg !35
  %51 = tail call float @llvm.nvvm.fabs.ftz.f(float %35) #4, !dbg !35
  %52 = tail call float @llvm.nvvm.fabs.f(float %35) #4, !dbg !35
  %.06.i = select i1 %.not18.i, float %52, float %51, !dbg !35
  %53 = fcmp ult float %.06.i, 1.056150e+05, !dbg !35
  br i1 %53, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !35

__nv_isinff.exit.i.i.i:                           ; preds = %4
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not19.i = icmp eq i32 %54, 0, !dbg !35
  %.07.i = select i1 %.not19.i, float %52, float %51, !dbg !35
  %55 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !35
  br i1 %55, label %__nv_fmul_rn.exit.i.i.i, label %59, !dbg !35

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not27.i = icmp eq i32 %56, 0, !dbg !35
  %57 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %35, float 0.000000e+00) #4, !dbg !35
  %58 = tail call float @llvm.nvvm.mul.rn.f(float %35, float 0.000000e+00) #4, !dbg !35
  %.08.i = select i1 %.not27.i, float %58, float %57, !dbg !35
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !35

59:                                               ; preds = %__nv_isinff.exit.i.i.i
  %60 = bitcast float %35 to i32, !dbg !35
  %61 = lshr i32 %60, 23, !dbg !35
  %62 = and i32 %61, 224, !dbg !35
  %63 = add nsw i32 %62, -128, !dbg !35
  %64 = shl i32 %60, 8, !dbg !35
  %65 = or i32 %64, -2147483648, !dbg !35
  %66 = lshr exact i32 %63, 5, !dbg !35
  br label %67, !dbg !35

67:                                               ; preds = %59, %67
  %indvars.iv = phi i64 [ 0, %59 ], [ %indvars.iv.next, %67 ]
  %hi.i.i.i.0.i58 = phi i32 [ 0, %59 ], [ %72, %67 ]
  %68 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !35
  %69 = load i32, ptr addrspace(1) %68, align 4, !dbg !35
  %70 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %69, i32 %65, i32 %hi.i.i.i.0.i58) #5, !dbg !35, !srcloc !36
  %71 = extractvalue { i32, i32 } %70, 0, !dbg !35
  %72 = extractvalue { i32, i32 } %70, 1, !dbg !35
  %73 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !35
  store i32 %71, ptr %73, align 4, !dbg !35
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !35
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !35
  br i1 %exitcond.not, label %74, label %67, !dbg !35, !llvm.loop !37

74:                                               ; preds = %67
  %75 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !35
  store i32 %72, ptr %75, align 4, !dbg !35
  %76 = and i32 %61, 31, !dbg !35
  %77 = sub nsw i32 6, %66, !dbg !35
  %78 = sext i32 %77 to i64, !dbg !35
  %79 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %78, !dbg !35
  %80 = load i32, ptr %79, align 4, !dbg !35
  %81 = sub nsw i32 5, %66, !dbg !35
  %82 = sext i32 %81 to i64, !dbg !35
  %83 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %82, !dbg !35
  %84 = load i32, ptr %83, align 4, !dbg !35
  %.not20.i = icmp eq i32 %76, 0, !dbg !35
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %85, !dbg !35

85:                                               ; preds = %74
  %86 = sub nsw i32 4, %66, !dbg !35
  %87 = sub nuw nsw i32 32, %76, !dbg !35
  %88 = shl i32 %80, %76, !dbg !35
  %89 = lshr i32 %84, %87, !dbg !35
  %90 = add i32 %89, %88, !dbg !35
  %91 = shl i32 %84, %76, !dbg !35
  %92 = sext i32 %86 to i64, !dbg !35
  %93 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %92, !dbg !35
  %94 = load i32, ptr %93, align 4, !dbg !35
  %95 = lshr i32 %94, %87, !dbg !35
  %96 = add i32 %95, %91, !dbg !35
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !35

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %85, %74
  %hi.i.i.i.1.i = phi i32 [ %90, %85 ], [ %80, %74 ], !dbg !35
  %lo.i.i.i.0.i = phi i32 [ %96, %85 ], [ %84, %74 ], !dbg !35
  %97 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !35
  %98 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !35
  %99 = shl i32 %lo.i.i.i.0.i, 2, !dbg !35
  %100 = lshr i32 %98, 31, !dbg !35
  %101 = add nuw nsw i32 %100, %97, !dbg !35
  %102 = sub nsw i32 0, %101, !dbg !35
  %.not2123.i = icmp slt i32 %60, 0, !dbg !35
  %spec.select.i = select i1 %.not2123.i, i32 %102, i32 %101, !dbg !35
  %103 = xor i32 %98, %60, !dbg !35
  %.lobit.i = ashr i32 %98, 31, !dbg !35
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %98, !dbg !35
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %99, !dbg !35
  %104 = zext i32 %hi.i.i.i.2.i to i64, !dbg !35
  %105 = shl nuw i64 %104, 32, !dbg !35
  %106 = zext i32 %lo.i.i.i.1.i to i64, !dbg !35
  %107 = or disjoint i64 %105, %106, !dbg !35
  %108 = sitofp i64 %107 to double, !dbg !35
  %109 = fmul double %108, 0x3BF921FB54442D19, !dbg !35
  %110 = fptrunc double %109 to float, !dbg !35
  %111 = fneg float %110, !dbg !35
  %.not2526.i = icmp slt i32 %103, 0, !dbg !35
  %r.i.i.i.0.i = select i1 %.not2526.i, float %111, float %110, !dbg !35
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !35

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %4
  %i.i.1.i = phi i32 [ %.01.i, %4 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !35
  %t.i.i.1.i = phi float [ %.04.i, %4 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !35
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not28.i = icmp eq i32 %112, 0, !dbg !35
  %113 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !35
  %114 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !35
  %.011.i = select i1 %.not28.i, float %114, float %113, !dbg !35
  %115 = and i32 %i.i.1.i, 1, !dbg !35
  %.not29.i = icmp eq i32 %115, 0, !dbg !35
  %116 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !35
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not30.i = icmp eq i32 %117, 0, !dbg !35
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %116, float 0.000000e+00) #4, !dbg !35
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %116, float 0.000000e+00) #4, !dbg !35
  %.012.i = select i1 %.not30.i, float %119, float %118, !dbg !35
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !35

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not31.i = icmp eq i32 %120, 0, !dbg !35
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !35
  %122 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !35
  %.013.i = select i1 %.not31.i, float %122, float %121, !dbg !35
  br label %__internal_fmad.exit2.i.i.i, !dbg !35

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %123 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !35
  %124 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !35
  %125 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !35
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not32.i = icmp eq i32 %126, 0, !dbg !35
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %125, float %.011.i, float %124) #4, !dbg !35
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %125, float %.011.i, float %124) #4, !dbg !35
  %.010.i = select i1 %.not32.i, float %128, float %127, !dbg !35
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not33.i = icmp eq i32 %129, 0, !dbg !35
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %123) #4, !dbg !35
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %123) #4, !dbg !35
  %.09.i = select i1 %.not33.i, float %131, float %130, !dbg !35
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not34.i = icmp eq i32 %132, 0, !dbg !35
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %116) #4, !dbg !35
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %116) #4, !dbg !35
  %.05.i = select i1 %.not34.i, float %134, float %133, !dbg !35
  %135 = and i32 %i.i.1.i, 2, !dbg !35
  %.not35.i = icmp eq i32 %135, 0, !dbg !35
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !35

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not36.i = icmp eq i32 %136, 0, !dbg !35
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !35
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !35
  %.0.i = select i1 %.not36.i, float %138, float %137, !dbg !35
  br label %__nv_sinf.exit, !dbg !35

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !35
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !35
  %139 = icmp sgt i32 %.decomposed, 79, !dbg !39
  %140 = add nsw i32 %.decomposed, -80, !dbg !40
  %141 = sdiv i32 %140, 16, !dbg !41
  %142 = mul i32 %141, 16, !dbg !42
  %.decomposed73 = sub i32 %140, %142, !dbg !42
  %143 = add nsw i32 %.decomposed73, %14, !dbg !43
  %144 = sext i32 %143 to i64, !dbg !44
  %145 = getelementptr float, ptr addrspace(1) %0, i64 %144, !dbg !44
  %146 = and i1 %10, %139, !dbg !45
  %147 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %145, i1 %146, i32 0, i1 %146) #4, !dbg !46
  %148 = bitcast i32 %147 to float, !dbg !46
  %149 = srem i32 %141, 4, !dbg !47
  %150 = sext i32 %149 to i64, !dbg !48
  %151 = getelementptr float, ptr addrspace(1) %1, i64 %150, !dbg !48
  %152 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %151, i1 %146, i32 0, i1 %146) #4, !dbg !49
  %153 = bitcast i32 %152 to float, !dbg !49
  %154 = fmul float %148, %153, !dbg !50
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !51
  %155 = fmul float %154, 0x3FE45F3060000000, !dbg !51
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !51
  %.not.i2 = icmp eq i32 %156, 0, !dbg !51
  %157 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %155) #4, !dbg !51
  %158 = tail call i32 @llvm.nvvm.f2i.rn(float %155) #4, !dbg !51
  %.01.i3 = select i1 %.not.i2, i32 %158, i32 %157, !dbg !51
  %159 = sitofp i32 %.01.i3 to float, !dbg !51
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !51
  %.not15.i4 = icmp eq i32 %160, 0, !dbg !51
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %159, float 0xBFF921FB40000000, float %154) #4, !dbg !51
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %159, float 0xBFF921FB40000000, float %154) #4, !dbg !51
  %.02.i5 = select i1 %.not15.i4, float %162, float %161, !dbg !51
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !51
  %.not16.i6 = icmp eq i32 %163, 0, !dbg !51
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %159, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !51
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %159, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !51
  %.03.i7 = select i1 %.not16.i6, float %165, float %164, !dbg !51
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !51
  %.not17.i8 = icmp eq i32 %166, 0, !dbg !51
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %159, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !51
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %159, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !51
  %.04.i9 = select i1 %.not17.i8, float %168, float %167, !dbg !51
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !51
  %.not18.i10 = icmp eq i32 %169, 0, !dbg !51
  %170 = tail call float @llvm.nvvm.fabs.ftz.f(float %154) #4, !dbg !51
  %171 = tail call float @llvm.nvvm.fabs.f(float %154) #4, !dbg !51
  %.06.i11 = select i1 %.not18.i10, float %171, float %170, !dbg !51
  %172 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !51
  br i1 %172, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !51

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !51
  %.not19.i13 = icmp eq i32 %173, 0, !dbg !51
  %.07.i14 = select i1 %.not19.i13, float %171, float %170, !dbg !51
  %174 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !51
  br i1 %174, label %__nv_fmul_rn.exit.i.i.i51, label %178, !dbg !51

__nv_fmul_rn.exit.i.i.i51:                        ; preds = %__nv_isinff.exit.i.i.i12
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !51
  %.not27.i52 = icmp eq i32 %175, 0, !dbg !51
  %176 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %154, float 0.000000e+00) #4, !dbg !51
  %177 = tail call float @llvm.nvvm.mul.rn.f(float %154, float 0.000000e+00) #4, !dbg !51
  %.08.i53 = select i1 %.not27.i52, float %177, float %176, !dbg !51
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !51

178:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %179 = bitcast float %154 to i32, !dbg !51
  %180 = lshr i32 %179, 23, !dbg !51
  %181 = and i32 %180, 224, !dbg !51
  %182 = add nsw i32 %181, -128, !dbg !51
  %183 = shl i32 %179, 8, !dbg !51
  %184 = or i32 %183, -2147483648, !dbg !51
  %185 = lshr exact i32 %182, 5, !dbg !51
  br label %186, !dbg !51

186:                                              ; preds = %178, %186
  %indvars.iv65 = phi i64 [ 0, %178 ], [ %indvars.iv.next66, %186 ]
  %hi.i.i.i.0.i1560 = phi i32 [ 0, %178 ], [ %191, %186 ]
  %187 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv65, !dbg !51
  %188 = load i32, ptr addrspace(1) %187, align 4, !dbg !51
  %189 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %188, i32 %184, i32 %hi.i.i.i.0.i1560) #5, !dbg !51, !srcloc !36
  %190 = extractvalue { i32, i32 } %189, 0, !dbg !51
  %191 = extractvalue { i32, i32 } %189, 1, !dbg !51
  %192 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv65, !dbg !51
  store i32 %190, ptr %192, align 4, !dbg !51
  %indvars.iv.next66 = add nuw nsw i64 %indvars.iv65, 1, !dbg !51
  %exitcond67.not = icmp eq i64 %indvars.iv.next66, 6, !dbg !51
  br i1 %exitcond67.not, label %193, label %186, !dbg !51, !llvm.loop !52

193:                                              ; preds = %186
  %194 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !51
  store i32 %191, ptr %194, align 4, !dbg !51
  %195 = and i32 %180, 31, !dbg !51
  %196 = sub nsw i32 6, %185, !dbg !51
  %197 = sext i32 %196 to i64, !dbg !51
  %198 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %197, !dbg !51
  %199 = load i32, ptr %198, align 4, !dbg !51
  %200 = sub nsw i32 5, %185, !dbg !51
  %201 = sext i32 %200 to i64, !dbg !51
  %202 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %201, !dbg !51
  %203 = load i32, ptr %202, align 4, !dbg !51
  %.not20.i17 = icmp eq i32 %195, 0, !dbg !51
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %204, !dbg !51

204:                                              ; preds = %193
  %205 = sub nsw i32 4, %185, !dbg !51
  %206 = sub nuw nsw i32 32, %195, !dbg !51
  %207 = shl i32 %199, %195, !dbg !51
  %208 = lshr i32 %203, %206, !dbg !51
  %209 = add i32 %208, %207, !dbg !51
  %210 = shl i32 %203, %195, !dbg !51
  %211 = sext i32 %205 to i64, !dbg !51
  %212 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %211, !dbg !51
  %213 = load i32, ptr %212, align 4, !dbg !51
  %214 = lshr i32 %213, %206, !dbg !51
  %215 = add i32 %214, %210, !dbg !51
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !51

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %204, %193
  %hi.i.i.i.1.i19 = phi i32 [ %209, %204 ], [ %199, %193 ], !dbg !51
  %lo.i.i.i.0.i20 = phi i32 [ %215, %204 ], [ %203, %193 ], !dbg !51
  %216 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !51
  %217 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !51
  %218 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !51
  %219 = lshr i32 %217, 31, !dbg !51
  %220 = add nuw nsw i32 %219, %216, !dbg !51
  %221 = sub nsw i32 0, %220, !dbg !51
  %.not2123.i21 = icmp slt i32 %179, 0, !dbg !51
  %spec.select.i22 = select i1 %.not2123.i21, i32 %221, i32 %220, !dbg !51
  %222 = xor i32 %217, %179, !dbg !51
  %.lobit.i23 = ashr i32 %217, 31, !dbg !51
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %217, !dbg !51
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %218, !dbg !51
  %223 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !51
  %224 = shl nuw i64 %223, 32, !dbg !51
  %225 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !51
  %226 = or disjoint i64 %224, %225, !dbg !51
  %227 = sitofp i64 %226 to double, !dbg !51
  %228 = fmul double %227, 0x3BF921FB54442D19, !dbg !51
  %229 = fptrunc double %228 to float, !dbg !51
  %230 = fneg float %229, !dbg !51
  %.not2526.i27 = icmp slt i32 %222, 0, !dbg !51
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %230, float %229, !dbg !51
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !51

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i51, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i51 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !51
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i53, %__nv_fmul_rn.exit.i.i.i51 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !51
  %231 = add i32 %i.i.1.i30, 1, !dbg !51
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !51
  %.not28.i32 = icmp eq i32 %232, 0, !dbg !51
  %233 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !51
  %234 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !51
  %.011.i33 = select i1 %.not28.i32, float %234, float %233, !dbg !51
  %235 = and i32 %i.i.1.i30, 1, !dbg !51
  %.not29.not.i = icmp eq i32 %235, 0, !dbg !51
  %236 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i31, !dbg !51
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !51
  %.not30.i34 = icmp eq i32 %237, 0, !dbg !51
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %236, float 0.000000e+00) #4, !dbg !51
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %236, float 0.000000e+00) #4, !dbg !51
  %.012.i35 = select i1 %.not30.i34, float %239, float %238, !dbg !51
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i48, label %__internal_fmad.exit2.i.i.i36, !dbg !51

__internal_fmad.exit1.i.i.i48:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !51
  %.not31.i49 = icmp eq i32 %240, 0, !dbg !51
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !51
  %242 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !51
  %.013.i50 = select i1 %.not31.i49, float %242, float %241, !dbg !51
  br label %__internal_fmad.exit2.i.i.i36, !dbg !51

__internal_fmad.exit2.i.i.i36:                    ; preds = %__internal_fmad.exit1.i.i.i48, %__internal_trig_reduction_kernel.exit.i.i29
  %243 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i48 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !51
  %244 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i48 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !51
  %245 = phi float [ %.013.i50, %__internal_fmad.exit1.i.i.i48 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !51
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !51
  %.not32.i37 = icmp eq i32 %246, 0, !dbg !51
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %245, float %.011.i33, float %244) #4, !dbg !51
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %245, float %.011.i33, float %244) #4, !dbg !51
  %.010.i38 = select i1 %.not32.i37, float %248, float %247, !dbg !51
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !51
  %.not33.i39 = icmp eq i32 %249, 0, !dbg !51
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i38, float %.011.i33, float %243) #4, !dbg !51
  %251 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i38, float %.011.i33, float %243) #4, !dbg !51
  %.09.i40 = select i1 %.not33.i39, float %251, float %250, !dbg !51
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !51
  %.not34.i41 = icmp eq i32 %252, 0, !dbg !51
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i40, float %.012.i35, float %236) #4, !dbg !51
  %254 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i40, float %.012.i35, float %236) #4, !dbg !51
  %.05.i42 = select i1 %.not34.i41, float %254, float %253, !dbg !51
  %255 = and i32 %231, 2, !dbg !51
  %.not35.i43 = icmp eq i32 %255, 0, !dbg !51
  br i1 %.not35.i43, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i44, !dbg !51

__internal_fmad.exit5.i.i.i44:                    ; preds = %__internal_fmad.exit2.i.i.i36
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !51
  %.not36.i45 = icmp eq i32 %256, 0, !dbg !51
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #4, !dbg !51
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #4, !dbg !51
  %.0.i46 = select i1 %.not36.i45, float %258, float %257, !dbg !51
  br label %__nv_cosf.exit, !dbg !51

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i36, %__internal_fmad.exit5.i.i.i44
  %z.i.i.0.i47 = phi float [ %.0.i46, %__internal_fmad.exit5.i.i.i44 ], [ %.05.i42, %__internal_fmad.exit2.i.i.i36 ], !dbg !51
  %259 = select i1 %21, float %z.i.i.0.i, float 0.000000e+00, !dbg !53
  %260 = icmp slt i32 %.decomposed, 80, !dbg !54
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !51
  %261 = select i1 %260, float %259, float %z.i.i.0.i47, !dbg !55
  %262 = sext i32 %9 to i64, !dbg !56
  %263 = getelementptr float, ptr addrspace(1) %2, i64 %262, !dbg !56
  %264 = bitcast float %261 to i32, !dbg !57
  %265 = select i1 %13, i32 %19, i32 %264, !dbg !58
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %265, ptr addrspace(1) %263, i1 %10) #4, !dbg !57
  ret void, !dbg !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chbzwvcnfcfwjzbwxzotlgqt2csdjgnzps7n4wwzzgtnwd7d344s.py", directory: "inductor_cache/hb")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 33, scope: !7)
!19 = !DILocation(line: 32, column: 39, scope: !7)
!20 = !DILocation(line: 32, column: 30, scope: !7)
!21 = !DILocation(line: 32, column: 52, scope: !7)
!22 = !DILocation(line: 32, column: 45, scope: !7)
!23 = !DILocation(line: 36, column: 19, scope: !7)
!24 = !DILocation(line: 41, column: 20, scope: !7)
!25 = !DILocation(line: 42, column: 56, scope: !7)
!26 = !DILocation(line: 43, column: 49, scope: !7)
!27 = !DILocation(line: 42, column: 41, scope: !7)
!28 = !DILocation(line: 42, column: 31, scope: !7)
!29 = !DILocation(line: 42, column: 71, scope: !7)
!30 = !DILocation(line: 42, column: 63, scope: !7)
!31 = !DILocation(line: 43, column: 55, scope: !7)
!32 = !DILocation(line: 43, column: 32, scope: !7)
!33 = !DILocation(line: 43, column: 60, scope: !7)
!34 = !DILocation(line: 44, column: 20, scope: !7)
!35 = !DILocation(line: 45, column: 24, scope: !7)
!36 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!37 = distinct !{!37, !38}
!38 = !{!"llvm.loop.unroll.count", i32 1}
!39 = !DILocation(line: 48, column: 20, scope: !7)
!40 = !DILocation(line: 52, column: 51, scope: !7)
!41 = !DILocation(line: 53, column: 59, scope: !7)
!42 = !DILocation(line: 52, column: 66, scope: !7)
!43 = !DILocation(line: 52, column: 41, scope: !7)
!44 = !DILocation(line: 52, column: 31, scope: !7)
!45 = !DILocation(line: 52, column: 81, scope: !7)
!46 = !DILocation(line: 52, column: 73, scope: !7)
!47 = !DILocation(line: 53, column: 65, scope: !7)
!48 = !DILocation(line: 53, column: 32, scope: !7)
!49 = !DILocation(line: 53, column: 70, scope: !7)
!50 = !DILocation(line: 54, column: 20, scope: !7)
!51 = !DILocation(line: 55, column: 24, scope: !7)
!52 = distinct !{!52, !38}
!53 = !DILocation(line: 47, column: 35, scope: !7)
!54 = !DILocation(line: 40, column: 19, scope: !7)
!55 = !DILocation(line: 58, column: 35, scope: !7)
!56 = !DILocation(line: 62, column: 25, scope: !7)
!57 = !DILocation(line: 62, column: 37, scope: !7)
!58 = !DILocation(line: 61, column: 33, scope: !7)
!59 = !DILocation(line: 62, column: 4, scope: !7)
