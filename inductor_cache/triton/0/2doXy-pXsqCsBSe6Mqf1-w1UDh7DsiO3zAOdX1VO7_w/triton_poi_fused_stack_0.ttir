#loc = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":19:0)
module {
  tt.func public @triton_poi_fused_stack_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-8> : tensor<256xi32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999993E-9> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<-4> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<8> : tensor<256xi64> loc(#loc1)
    %cst_4 = arith.constant dense<0.159154937> : tensor<256xf32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_5 = arith.constant dense<6.28318548> : tensor<256xf32> loc(#loc1)
    %cst_6 = arith.constant 6.28318548 : f32 loc(#loc1)
    %cst_7 = arith.constant dense<2.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_8 = arith.constant dense<1.73205078> : tensor<256xf32> loc(#loc1)
    %cst_9 = arith.constant dense<32> : tensor<256xi32> loc(#loc1)
    %cst_10 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_11 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_12 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_13 = arith.constant dense<4> : tensor<256xi64> loc(#loc1)
    %cst_14 = arith.constant dense<48> : tensor<256xi32> loc(#loc1)
    %cst_15 = arith.constant dense<12> : tensor<256xi32> loc(#loc1)
    %cst_16 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_17 = arith.constant dense<192> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_17 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_16 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_15 : tensor<256xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_16 : tensor<256xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_14 : tensor<256xi32> loc(#loc10)
    %10 = arith.extsi %7 : tensor<256xi32> to tensor<256xi64> loc(#loc11)
    %11 = arith.cmpi slt, %10, %cst_13 : tensor<256xi64> loc(#loc11)
    %12 = arith.addi %8, %cst_12 : tensor<256xi32> loc(#loc12)
    %13 = arith.muli %7, %cst_16 : tensor<256xi32> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<256xi32> loc(#loc14)
    %15 = arith.muli %9, %cst_11 : tensor<256xi32> loc(#loc15)
    %16 = arith.addi %14, %15 : tensor<256xi32> loc(#loc16)
    %17 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc17)
    %18 = tt.addptr %17, %16 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc17)
    %19 = arith.andi %11, %5 : tensor<256xi1> loc(#loc18)
    %20 = tt.load %18, %19, %cst_10 : tensor<256x!tt.ptr<f32>> loc(#loc19)
    %21 = arith.addi %8, %cst_9 : tensor<256xi32> loc(#loc20)
    %22 = arith.addi %21, %13 : tensor<256xi32> loc(#loc21)
    %23 = arith.addi %22, %15 : tensor<256xi32> loc(#loc22)
    %24 = tt.addptr %17, %23 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc23)
    %25 = tt.load %24, %19, %cst_10 : tensor<256x!tt.ptr<f32>> loc(#loc24)
    %26 = arith.subf %20, %25 : tensor<256xf32> loc(#loc25)
    %27 = arith.mulf %26, %cst_8 : tensor<256xf32> loc(#loc26)
    %28 = arith.addi %8, %13 : tensor<256xi32> loc(#loc27)
    %29 = arith.addi %28, %15 : tensor<256xi32> loc(#loc28)
    %30 = tt.addptr %17, %29 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc29)
    %31 = tt.load %30, %19, %cst_10 : tensor<256x!tt.ptr<f32>> loc(#loc30)
    %32 = arith.mulf %31, %cst_7 : tensor<256xf32> loc(#loc31)
    %33 = arith.subf %32, %20 : tensor<256xf32> loc(#loc32)
    %34 = arith.subf %33, %25 : tensor<256xf32> loc(#loc33)
    %35 = tt.extern_elementwise %27, %34 {libname = "", libpath = "", pure = true, symbol = "__nv_atan2f"} : (tensor<256xf32>, tensor<256xf32>) -> tensor<256xf32> loc(#loc34)
    %36 = arith.divf %35, %cst_5 : tensor<256xf32> loc(#loc35)
    %37 = math.floor %36 : tensor<256xf32> loc(#loc35)
    %38 = arith.mulf %37, %cst_5 : tensor<256xf32> loc(#loc35)
    %39 = arith.subf %35, %38 : tensor<256xf32> loc(#loc35)
    %40 = arith.cmpf une, %39, %cst_10 : tensor<256xf32> loc(#loc36)
    %41 = arith.cmpf olt, %39, %cst_10 : tensor<256xf32> loc(#loc37)
    %42 = tt.extern_elementwise %cst_6 {libname = "", libpath = "", pure = true, symbol = "__nv_signbitf"} : (f32) -> i32 loc(#loc38)
    %43 = arith.cmpi ne, %42, %c0_i32 : i32 loc(#loc39)
    %44 = tt.splat %43 : i1 -> tensor<256xi1> loc(#loc40)
    %45 = arith.cmpi ne, %41, %44 : tensor<256xi1> loc(#loc40)
    %46 = arith.andi %40, %45 : tensor<256xi1> loc(#loc41)
    %47 = arith.addf %39, %cst_5 : tensor<256xf32> loc(#loc42)
    %48 = arith.select %46, %47, %39 : tensor<256xi1>, tensor<256xf32> loc(#loc43)
    %49 = arith.mulf %48, %cst_4 : tensor<256xf32> loc(#loc44)
    %50 = arith.cmpi sge, %10, %cst_13 : tensor<256xi64> loc(#loc45)
    %51 = arith.cmpi slt, %10, %cst_3 : tensor<256xi64> loc(#loc46)
    %52 = arith.andi %50, %51 : tensor<256xi1> loc(#loc47)
    %53 = arith.addi %7, %cst_2 : tensor<256xi32> loc(#loc48)
    %54 = arith.muli %53, %cst_16 : tensor<256xi32> loc(#loc49)
    %55 = arith.addi %8, %54 : tensor<256xi32> loc(#loc50)
    %56 = arith.addi %55, %15 : tensor<256xi32> loc(#loc51)
    %57 = tt.addptr %17, %56 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc52)
    %58 = arith.andi %52, %5 : tensor<256xi1> loc(#loc53)
    %59 = tt.load %57, %58, %cst_10 : tensor<256x!tt.ptr<f32>> loc(#loc54)
    %60 = arith.addi %12, %54 : tensor<256xi32> loc(#loc55)
    %61 = arith.addi %60, %15 : tensor<256xi32> loc(#loc56)
    %62 = tt.addptr %17, %61 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc57)
    %63 = tt.load %62, %58, %cst_10 : tensor<256x!tt.ptr<f32>> loc(#loc58)
    %64 = arith.cmpf olt, %59, %63 : tensor<256xf32> loc(#loc116)
    %65 = arith.cmpf une, %59, %59 : tensor<256xf32> loc(#loc117)
    %66 = arith.ori %64, %65 : tensor<256xi1> loc(#loc118)
    %67 = arith.select %66, %59, %63 : tensor<256xi1>, tensor<256xf32> loc(#loc119)
    %68 = arith.addi %21, %54 : tensor<256xi32> loc(#loc64)
    %69 = arith.addi %68, %15 : tensor<256xi32> loc(#loc65)
    %70 = tt.addptr %17, %69 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc66)
    %71 = tt.load %70, %58, %cst_10 : tensor<256x!tt.ptr<f32>> loc(#loc67)
    %72 = arith.cmpf olt, %67, %71 : tensor<256xf32> loc(#loc120)
    %73 = arith.cmpf une, %67, %67 : tensor<256xf32> loc(#loc121)
    %74 = arith.ori %72, %73 : tensor<256xi1> loc(#loc122)
    %75 = arith.select %74, %67, %71 : tensor<256xi1>, tensor<256xf32> loc(#loc123)
    %76 = arith.addi %8, %cst_14 : tensor<256xi32> loc(#loc69)
    %77 = arith.addi %76, %54 : tensor<256xi32> loc(#loc70)
    %78 = arith.addi %77, %15 : tensor<256xi32> loc(#loc71)
    %79 = tt.addptr %17, %78 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc72)
    %80 = tt.load %79, %58, %cst_10 : tensor<256x!tt.ptr<f32>> loc(#loc73)
    %81 = arith.cmpf olt, %75, %80 : tensor<256xf32> loc(#loc124)
    %82 = arith.cmpf une, %75, %75 : tensor<256xf32> loc(#loc125)
    %83 = arith.ori %81, %82 : tensor<256xi1> loc(#loc126)
    %84 = arith.select %83, %75, %80 : tensor<256xi1>, tensor<256xf32> loc(#loc127)
    %85 = arith.cmpf ogt, %59, %63 : tensor<256xf32> loc(#loc128)
    %86 = arith.ori %85, %65 : tensor<256xi1> loc(#loc129)
    %87 = arith.select %86, %59, %63 : tensor<256xi1>, tensor<256xf32> loc(#loc130)
    %88 = arith.cmpf ogt, %87, %71 : tensor<256xf32> loc(#loc131)
    %89 = arith.cmpf une, %87, %87 : tensor<256xf32> loc(#loc132)
    %90 = arith.ori %88, %89 : tensor<256xi1> loc(#loc133)
    %91 = arith.select %90, %87, %71 : tensor<256xi1>, tensor<256xf32> loc(#loc134)
    %92 = arith.cmpf ogt, %91, %80 : tensor<256xf32> loc(#loc135)
    %93 = arith.cmpf une, %91, %91 : tensor<256xf32> loc(#loc136)
    %94 = arith.ori %92, %93 : tensor<256xi1> loc(#loc137)
    %95 = arith.select %94, %91, %80 : tensor<256xi1>, tensor<256xf32> loc(#loc138)
    %96 = arith.addf %95, %cst_1 : tensor<256xf32> loc(#loc82)
    %97 = arith.divf %84, %96 : tensor<256xf32> loc(#loc83)
    %98 = arith.subf %cst_0, %97 : tensor<256xf32> loc(#loc84)
    %99 = arith.cmpi sge, %10, %cst_3 : tensor<256xi64> loc(#loc85)
    %100 = arith.addi %7, %cst : tensor<256xi32> loc(#loc86)
    %101 = arith.muli %100, %cst_16 : tensor<256xi32> loc(#loc87)
    %102 = arith.addi %8, %101 : tensor<256xi32> loc(#loc88)
    %103 = arith.addi %102, %15 : tensor<256xi32> loc(#loc89)
    %104 = tt.addptr %17, %103 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc90)
    %105 = arith.andi %99, %5 : tensor<256xi1> loc(#loc91)
    %106 = tt.load %104, %105, %cst_10 : tensor<256x!tt.ptr<f32>> loc(#loc92)
    %107 = arith.addi %12, %101 : tensor<256xi32> loc(#loc93)
    %108 = arith.addi %107, %15 : tensor<256xi32> loc(#loc94)
    %109 = tt.addptr %17, %108 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc95)
    %110 = tt.load %109, %105, %cst_10 : tensor<256x!tt.ptr<f32>> loc(#loc96)
    %111 = arith.cmpf ogt, %106, %110 : tensor<256xf32> loc(#loc139)
    %112 = arith.cmpf une, %106, %106 : tensor<256xf32> loc(#loc140)
    %113 = arith.ori %111, %112 : tensor<256xi1> loc(#loc141)
    %114 = arith.select %113, %106, %110 : tensor<256xi1>, tensor<256xf32> loc(#loc142)
    %115 = arith.addi %21, %101 : tensor<256xi32> loc(#loc98)
    %116 = arith.addi %115, %15 : tensor<256xi32> loc(#loc99)
    %117 = tt.addptr %17, %116 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc100)
    %118 = tt.load %117, %105, %cst_10 : tensor<256x!tt.ptr<f32>> loc(#loc101)
    %119 = arith.cmpf ogt, %114, %118 : tensor<256xf32> loc(#loc143)
    %120 = arith.cmpf une, %114, %114 : tensor<256xf32> loc(#loc144)
    %121 = arith.ori %119, %120 : tensor<256xi1> loc(#loc145)
    %122 = arith.select %121, %114, %118 : tensor<256xi1>, tensor<256xf32> loc(#loc146)
    %123 = arith.addi %76, %101 : tensor<256xi32> loc(#loc103)
    %124 = arith.addi %123, %15 : tensor<256xi32> loc(#loc104)
    %125 = tt.addptr %17, %124 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc105)
    %126 = tt.load %125, %105, %cst_10 : tensor<256x!tt.ptr<f32>> loc(#loc106)
    %127 = arith.cmpf ogt, %122, %126 : tensor<256xf32> loc(#loc147)
    %128 = arith.cmpf une, %122, %122 : tensor<256xf32> loc(#loc148)
    %129 = arith.ori %127, %128 : tensor<256xi1> loc(#loc149)
    %130 = arith.select %129, %122, %126 : tensor<256xi1>, tensor<256xf32> loc(#loc150)
    %131 = arith.select %99, %130, %cst_10 : tensor<256xi1>, tensor<256xf32> loc(#loc108)
    %132 = arith.select %52, %98, %131 : tensor<256xi1>, tensor<256xf32> loc(#loc151)
    %133 = arith.select %11, %49, %132 : tensor<256xi1>, tensor<256xf32> loc(#loc152)
    %134 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc113)
    %135 = tt.addptr %134, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc113)
    tt.store %135, %133, %5 : tensor<256x!tt.ptr<f32>> loc(#loc114)
    tt.return loc(#loc115)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":21:28)
#loc3 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":21:33)
#loc4 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":22:36)
#loc5 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":22:23)
#loc6 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":23:21)
#loc7 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":24:21)
#loc8 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":24:26)
#loc9 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":25:19)
#loc10 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":26:19)
#loc11 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":32:18)
#loc12 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":33:35)
#loc13 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":33:43)
#loc14 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":33:40)
#loc15 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":33:52)
#loc16 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":33:49)
#loc17 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":33:30)
#loc18 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":33:64)
#loc19 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":33:57)
#loc20 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":34:35)
#loc21 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":34:40)
#loc22 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":34:49)
#loc23 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":34:30)
#loc24 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":34:57)
#loc25 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":35:18)
#loc26 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":37:18)
#loc27 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":38:36)
#loc28 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":38:45)
#loc29 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":38:31)
#loc30 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":38:53)
#loc31 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":40:20)
#loc32 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":41:20)
#loc33 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":42:20)
#loc34 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":43:34)
#loc35 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":45:20)
#loc36 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":47:21)
#loc37 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":48:88)
#loc38 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":49:31)
#loc39 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":49:41)
#loc40 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":50:21)
#loc41 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":51:20)
#loc42 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":52:20)
#loc43 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":53:35)
#loc44 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":55:20)
#loc45 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":58:20)
#loc46 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":60:19)
#loc47 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":61:20)
#loc48 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":62:46)
#loc49 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":62:39)
#loc50 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":62:36)
#loc51 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":62:52)
#loc52 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":62:31)
#loc53 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":62:68)
#loc54 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":62:60)
#loc55 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":63:41)
#loc56 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":63:57)
#loc57 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":63:31)
#loc58 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":63:65)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc60 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":64:42)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc64 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":65:41)
#loc65 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":65:57)
#loc66 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":65:31)
#loc67 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":65:65)
#loc68 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":66:42)
#loc69 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":67:36)
#loc70 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":67:41)
#loc71 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":67:57)
#loc72 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":67:31)
#loc73 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":67:65)
#loc74 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":68:42)
#loc75 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc76 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":69:42)
#loc77 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc78 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc79 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":70:42)
#loc80 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc81 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":71:42)
#loc82 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":73:20)
#loc83 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":74:20)
#loc84 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":76:20)
#loc85 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":79:20)
#loc86 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":82:46)
#loc87 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":82:39)
#loc88 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":82:36)
#loc89 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":82:52)
#loc90 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":82:31)
#loc91 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":82:68)
#loc92 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":82:60)
#loc93 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":83:41)
#loc94 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":83:57)
#loc95 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":83:31)
#loc96 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":83:65)
#loc97 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":84:42)
#loc98 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":85:41)
#loc99 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":85:57)
#loc100 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":85:31)
#loc101 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":85:65)
#loc102 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":86:42)
#loc103 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":87:41)
#loc104 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":87:57)
#loc105 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":87:31)
#loc106 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":87:65)
#loc107 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":88:42)
#loc108 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":90:35)
#loc109 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":91:35)
#loc110 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":78:35)
#loc111 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":92:34)
#loc112 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":57:34)
#loc113 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":93:25)
#loc114 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":93:37)
#loc115 = loc("inductor_cache/py/cpy3dtspa76vnxf7yr2srtqup3sgm6ki7rxft3ta6itk34x3l5rq.py":93:4)
#loc116 = loc(callsite(#loc59 at #loc60))
#loc117 = loc(callsite(#loc61 at #loc60))
#loc118 = loc(callsite(#loc62 at #loc60))
#loc119 = loc(callsite(#loc63 at #loc60))
#loc120 = loc(callsite(#loc59 at #loc68))
#loc121 = loc(callsite(#loc61 at #loc68))
#loc122 = loc(callsite(#loc62 at #loc68))
#loc123 = loc(callsite(#loc63 at #loc68))
#loc124 = loc(callsite(#loc59 at #loc74))
#loc125 = loc(callsite(#loc61 at #loc74))
#loc126 = loc(callsite(#loc62 at #loc74))
#loc127 = loc(callsite(#loc63 at #loc74))
#loc128 = loc(callsite(#loc75 at #loc76))
#loc129 = loc(callsite(#loc77 at #loc76))
#loc130 = loc(callsite(#loc78 at #loc76))
#loc131 = loc(callsite(#loc75 at #loc79))
#loc132 = loc(callsite(#loc80 at #loc79))
#loc133 = loc(callsite(#loc77 at #loc79))
#loc134 = loc(callsite(#loc78 at #loc79))
#loc135 = loc(callsite(#loc75 at #loc81))
#loc136 = loc(callsite(#loc80 at #loc81))
#loc137 = loc(callsite(#loc77 at #loc81))
#loc138 = loc(callsite(#loc78 at #loc81))
#loc139 = loc(callsite(#loc75 at #loc97))
#loc140 = loc(callsite(#loc80 at #loc97))
#loc141 = loc(callsite(#loc77 at #loc97))
#loc142 = loc(callsite(#loc78 at #loc97))
#loc143 = loc(callsite(#loc75 at #loc102))
#loc144 = loc(callsite(#loc80 at #loc102))
#loc145 = loc(callsite(#loc77 at #loc102))
#loc146 = loc(callsite(#loc78 at #loc102))
#loc147 = loc(callsite(#loc75 at #loc107))
#loc148 = loc(callsite(#loc80 at #loc107))
#loc149 = loc(callsite(#loc77 at #loc107))
#loc150 = loc(callsite(#loc78 at #loc107))
#loc151 = loc(fused[#loc109, #loc110])
#loc152 = loc(fused[#loc111, #loc112])
