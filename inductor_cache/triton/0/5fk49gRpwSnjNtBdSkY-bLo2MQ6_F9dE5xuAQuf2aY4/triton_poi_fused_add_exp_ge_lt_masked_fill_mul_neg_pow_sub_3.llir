; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_exp_ge_lt_masked_fill_mul_neg_pow_sub_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %11 = shl i32 %10, 8, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = shl i32 %12, 1, !dbg !12
  %14 = and i32 %13, 254, !dbg !12
  %15 = or disjoint i32 %11, %14, !dbg !13
  %16 = icmp slt i32 %15, 256, !dbg !14
  %17 = sext i32 %15 to i64, !dbg !15
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !15
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %18, i1 %16) #1, !dbg !16
  %20 = extractvalue { i32, i32 } %19, 0, !dbg !16
  %21 = extractvalue { i32, i32 } %19, 1, !dbg !16
  %22 = bitcast i32 %20 to float, !dbg !16
  %23 = bitcast i32 %21 to float, !dbg !16
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !17
  %25 = bitcast i32 %24 to float, !dbg !17
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #1, !dbg !18
  %27 = bitcast i32 %26 to float, !dbg !18
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #1, !dbg !19
  %29 = bitcast i32 %28 to float, !dbg !19
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %4, i1 true) #1, !dbg !20
  %31 = bitcast i32 %30 to float, !dbg !20
  %32 = fcmp olt float %22, %25, !dbg !21
  %33 = fcmp olt float %23, %25, !dbg !21
  %34 = fcmp oge float %22, %25, !dbg !22
  %35 = fcmp oge float %23, %25, !dbg !22
  %36 = fsub float 0.000000e+00, %29, !dbg !23
  %37 = fsub float %22, %25, !dbg !24
  %38 = fsub float %23, %25, !dbg !24
  %39 = fmul float %37, %37, !dbg !25
  %40 = fmul float %38, %38, !dbg !25
  %41 = fmul float %39, %36, !dbg !26
  %42 = fmul float %40, %36, !dbg !26
  %43 = fmul float %41, 0x3FF7154760000000, !dbg !27
  %44 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %43) #1, !dbg !27
  %45 = fmul float %42, 0x3FF7154760000000, !dbg !27
  %46 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %45) #1, !dbg !27
  %47 = fmul float %44, %27, !dbg !28
  %48 = fmul float %46, %27, !dbg !28
  %49 = select i1 %34, float 0.000000e+00, float %47, !dbg !29
  %50 = select i1 %35, float 0.000000e+00, float %48, !dbg !29
  %51 = fadd float %27, -1.000000e+00, !dbg !30
  %52 = fsub float 0.000000e+00, %31, !dbg !31
  %53 = fmul float %39, %52, !dbg !32
  %54 = fmul float %40, %52, !dbg !32
  %55 = fmul float %53, 0x3FF7154760000000, !dbg !33
  %56 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %55) #1, !dbg !33
  %57 = fmul float %54, 0x3FF7154760000000, !dbg !33
  %58 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %57) #1, !dbg !33
  %59 = fmul float %51, %56, !dbg !34
  %60 = fmul float %51, %58, !dbg !34
  %61 = fadd float %59, 1.000000e+00, !dbg !35
  %62 = fadd float %60, 1.000000e+00, !dbg !35
  %63 = select i1 %32, float 0.000000e+00, float %61, !dbg !36
  %64 = select i1 %33, float 0.000000e+00, float %62, !dbg !36
  %65 = fadd float %49, %63, !dbg !37
  %66 = fadd float %50, %64, !dbg !37
  %67 = getelementptr i1, ptr addrspace(1) %5, i64 %17, !dbg !38
  %68 = zext i1 %32 to i8, !dbg !39
  %69 = zext i1 %33 to i8, !dbg !39
  %70 = insertelement <2 x i8> poison, i8 %68, i64 0, !dbg !39
  %71 = insertelement <2 x i8> %70, i8 %69, i64 1, !dbg !39
  %72 = bitcast <2 x i8> %71 to i16, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %72, ptr addrspace(1) %67, i1 %16) #1, !dbg !39
  %73 = getelementptr i1, ptr addrspace(1) %6, i64 %17, !dbg !40
  %74 = zext i1 %34 to i8, !dbg !41
  %75 = zext i1 %35 to i8, !dbg !41
  %76 = insertelement <2 x i8> poison, i8 %74, i64 0, !dbg !41
  %77 = insertelement <2 x i8> %76, i8 %75, i64 1, !dbg !41
  %78 = bitcast <2 x i8> %77 to i16, !dbg !41
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %78, ptr addrspace(1) %73, i1 %16) #1, !dbg !41
  %79 = getelementptr float, ptr addrspace(1) %7, i64 %17, !dbg !42
  %80 = bitcast float %65 to i32, !dbg !43
  %81 = bitcast float %66 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %80, i32 %81, ptr addrspace(1) %79, i1 %16) #1, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ckgs4brcu5b5tny5qkv7wwo5rcscscqwf3shg5rywo45v3hjqxkv.py", directory: "inductor_cache/kg")
!4 = !{ptr @triton_poi_fused_add_exp_ge_lt_masked_fill_mul_neg_pow_sub_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_exp_ge_lt_masked_fill_mul_neg_pow_sub_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_exp_ge_lt_masked_fill_mul_neg_pow_sub_3", linkageName: "triton_poi_fused_add_exp_ge_lt_masked_fill_mul_neg_pow_sub_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 19, scope: !7)
!19 = !DILocation(line: 30, column: 19, scope: !7)
!20 = !DILocation(line: 32, column: 20, scope: !7)
!21 = !DILocation(line: 34, column: 18, scope: !7)
!22 = !DILocation(line: 35, column: 19, scope: !7)
!23 = !DILocation(line: 36, column: 12, scope: !7)
!24 = !DILocation(line: 37, column: 19, scope: !7)
!25 = !DILocation(line: 38, column: 20, scope: !7)
!26 = !DILocation(line: 39, column: 19, scope: !7)
!27 = !DILocation(line: 40, column: 24, scope: !7)
!28 = !DILocation(line: 41, column: 19, scope: !7)
!29 = !DILocation(line: 43, column: 34, scope: !7)
!30 = !DILocation(line: 45, column: 19, scope: !7)
!31 = !DILocation(line: 46, column: 13, scope: !7)
!32 = !DILocation(line: 47, column: 20, scope: !7)
!33 = !DILocation(line: 48, column: 24, scope: !7)
!34 = !DILocation(line: 49, column: 20, scope: !7)
!35 = !DILocation(line: 50, column: 20, scope: !7)
!36 = !DILocation(line: 51, column: 34, scope: !7)
!37 = !DILocation(line: 52, column: 20, scope: !7)
!38 = !DILocation(line: 53, column: 25, scope: !7)
!39 = !DILocation(line: 53, column: 36, scope: !7)
!40 = !DILocation(line: 54, column: 25, scope: !7)
!41 = !DILocation(line: 54, column: 36, scope: !7)
!42 = !DILocation(line: 55, column: 25, scope: !7)
!43 = !DILocation(line: 55, column: 37, scope: !7)
!44 = !DILocation(line: 55, column: 4, scope: !7)
