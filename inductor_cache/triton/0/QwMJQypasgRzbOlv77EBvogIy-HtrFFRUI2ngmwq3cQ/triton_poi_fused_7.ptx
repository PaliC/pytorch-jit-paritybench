//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_7      // -- Begin function triton_poi_fused_7
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_7
.visible .entry triton_poi_fused_7(
	.param .u64 .ptr .global .align 1 triton_poi_fused_7_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_7_param_1,
	.param .u32 triton_poi_fused_7_param_2,
	.param .u32 triton_poi_fused_7_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<59>;
	.reg .b32 	%r<161>;
	.reg .b64 	%rd<43>;
	.loc	1 19 0                          // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:19:0

// %bb.0:
	ld.param.u64 	%rd21, [triton_poi_fused_7_param_0];
	ld.param.u64 	%rd22, [triton_poi_fused_7_param_1];
$L__tmp0:
	.loc	1 22 29                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:22:29
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 48                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:22:48
	// begin inline asm
	mov.u32 %r2, %ctaid.z;
	// end inline asm
	.loc	1 22 69                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:22:69
	// begin inline asm
	mov.u32 %r3, %nctaid.y;
	// end inline asm
	.loc	1 22 34                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:22:34
	mad.lo.s32 	%r69, %r3, %r2, %r1;
	.loc	1 22 75                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:22:75
	shl.b32 	%r70, %r69, 8;
	.loc	1 23 44                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:23:44
	mov.u32 	%r71, %tid.x;
	shr.u32 	%r72, %r71, 4;
	bfe.u32 	%r73, %r71, 4, 4;
	shl.b32 	%r74, %r71, 2;
	and.b32  	%r75, %r74, 252;
	.loc	1 23 23                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:23:23
	or.b32  	%r76, %r70, %r73;
	or.b32  	%r77, %r76, 16;
	or.b32  	%r78, %r76, 32;
	or.b32  	%r79, %r76, 48;
	or.b32  	%r80, %r76, 64;
	or.b32  	%r81, %r76, 80;
	or.b32  	%r82, %r76, 96;
	or.b32  	%r83, %r76, 112;
	or.b32  	%r84, %r76, 128;
	or.b32  	%r85, %r76, 144;
	or.b32  	%r86, %r76, 160;
	or.b32  	%r87, %r76, 176;
	or.b32  	%r88, %r76, 192;
	or.b32  	%r89, %r76, 208;
	or.b32  	%r90, %r76, 224;
	or.b32  	%r91, %r76, 240;
	or.b32  	%r92, %r70, %r75;
	.loc	1 24 21                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:24:21
	setp.lt.s32 	%p37, %r76, 8388608;
	setp.lt.s32 	%p38, %r77, 8388608;
	setp.lt.s32 	%p39, %r78, 8388608;
	setp.lt.s32 	%p40, %r79, 8388608;
	setp.lt.s32 	%p41, %r80, 8388608;
	setp.lt.s32 	%p42, %r81, 8388608;
	setp.lt.s32 	%p43, %r82, 8388608;
	setp.lt.s32 	%p44, %r83, 8388608;
	setp.lt.s32 	%p45, %r84, 8388608;
	setp.lt.s32 	%p46, %r85, 8388608;
	setp.lt.s32 	%p47, %r86, 8388608;
	setp.lt.s32 	%p48, %r87, 8388608;
	setp.lt.s32 	%p49, %r88, 8388608;
	setp.lt.s32 	%p50, %r89, 8388608;
	setp.lt.s32 	%p51, %r90, 8388608;
	setp.lt.s32 	%p52, %r91, 8388608;
	setp.lt.s32 	%p53, %r92, 8388608;
	.loc	1 25 28                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:25:28
	// begin inline asm
	mov.u32 %r4, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:25:33
	shl.b32 	%r93, %r4, 4;
	.loc	1 26 44                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:26:44
	and.b32  	%r94, %r71, 15;
	bfe.u32 	%r95, %r71, 6, 2;
	.loc	1 26 23                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:26:23
	or.b32  	%r96, %r93, %r94;
	or.b32  	%r97, %r93, %r95;
	or.b32  	%r98, %r97, 4;
	or.b32  	%r99, %r97, 8;
	.loc	1 27 21                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:27:21
	setp.lt.s32 	%p54, %r96, 9;
	setp.lt.s32 	%p55, %r97, 9;
	setp.lt.s32 	%p56, %r98, 9;
	setp.lt.s32 	%p57, %r99, 9;
	setp.lt.s32 	%p58, %r93, 0;
	.loc	1 31 19                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:31:19
	shr.s32 	%r101, %r92, 31;
	shr.u32 	%r102, %r101, 21;
	add.s32 	%r103, %r92, %r102;
	shr.s32 	%r104, %r103, 11;
	.loc	1 30 19                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:30:19
	and.b32  	%r105, %r103, -2048;
	sub.s32 	%r106, %r92, %r105;
	.loc	1 32 37                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:32:37
	mad.lo.s32 	%r107, %r76, 9, %r96;
	.loc	1 32 35                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:32:35
	add.s32 	%r108, %r107, 144;
	add.s32 	%r109, %r107, 288;
	add.s32 	%r110, %r107, 432;
	add.s32 	%r111, %r107, 576;
	add.s32 	%r112, %r107, 720;
	add.s32 	%r113, %r107, 864;
	add.s32 	%r114, %r107, 1008;
	add.s32 	%r115, %r107, 1152;
	add.s32 	%r116, %r107, 1296;
	add.s32 	%r117, %r107, 1440;
	add.s32 	%r118, %r107, 1584;
	add.s32 	%r119, %r107, 1728;
	add.s32 	%r120, %r107, 1872;
	add.s32 	%r121, %r107, 2016;
	add.s32 	%r122, %r107, 2160;
	.loc	1 32 30                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:32:30
	mul.wide.s32 	%rd23, %r107, 4;
	add.s64 	%rd1, %rd21, %rd23;
	mul.wide.s32 	%rd24, %r108, 4;
	add.s64 	%rd2, %rd21, %rd24;
	mul.wide.s32 	%rd25, %r109, 4;
	add.s64 	%rd3, %rd21, %rd25;
	mul.wide.s32 	%rd26, %r110, 4;
	add.s64 	%rd4, %rd21, %rd26;
	mul.wide.s32 	%rd27, %r111, 4;
	add.s64 	%rd5, %rd21, %rd27;
	mul.wide.s32 	%rd28, %r112, 4;
	add.s64 	%rd6, %rd21, %rd28;
	mul.wide.s32 	%rd29, %r113, 4;
	add.s64 	%rd7, %rd21, %rd29;
	mul.wide.s32 	%rd30, %r114, 4;
	add.s64 	%rd8, %rd21, %rd30;
	mul.wide.s32 	%rd31, %r115, 4;
	add.s64 	%rd9, %rd21, %rd31;
	mul.wide.s32 	%rd32, %r116, 4;
	add.s64 	%rd10, %rd21, %rd32;
	mul.wide.s32 	%rd33, %r117, 4;
	add.s64 	%rd11, %rd21, %rd33;
	mul.wide.s32 	%rd34, %r118, 4;
	add.s64 	%rd12, %rd21, %rd34;
	mul.wide.s32 	%rd35, %r119, 4;
	add.s64 	%rd13, %rd21, %rd35;
	mul.wide.s32 	%rd36, %r120, 4;
	add.s64 	%rd14, %rd21, %rd36;
	mul.wide.s32 	%rd37, %r121, 4;
	add.s64 	%rd15, %rd21, %rd37;
	mul.wide.s32 	%rd38, %r122, 4;
	add.s64 	%rd16, %rd21, %rd38;
	.loc	1 32 50                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:32:50
	and.pred  	%p1, %p54, %p37;
	and.pred  	%p2, %p38, %p54;
	and.pred  	%p3, %p39, %p54;
	and.pred  	%p4, %p40, %p54;
	and.pred  	%p5, %p41, %p54;
	and.pred  	%p6, %p42, %p54;
	and.pred  	%p7, %p43, %p54;
	and.pred  	%p8, %p44, %p54;
	and.pred  	%p9, %p45, %p54;
	and.pred  	%p10, %p46, %p54;
	and.pred  	%p11, %p47, %p54;
	and.pred  	%p12, %p48, %p54;
	and.pred  	%p13, %p49, %p54;
	and.pred  	%p14, %p50, %p54;
	and.pred  	%p15, %p51, %p54;
	and.pred  	%p16, %p52, %p54;
	and.pred  	%p33, %p55, %p53;
	and.pred  	%p34, %p56, %p53;
	and.pred  	%p35, %p57, %p53;
	and.pred  	%p36, %p58, %p53;
	.loc	1 32 42                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:32:42
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r24 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r26 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r28 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r30 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r32 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r34 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r36 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r38 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r40 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r42 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p12 ld.global.L1::evict_last.b32 { %r44 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r46 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p14 ld.global.L1::evict_last.b32 { %r48 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r50, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r50 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r52, 0x0;
	@%p16 ld.global.L1::evict_last.b32 { %r52 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 33 35                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:33:35
	shl.b32 	%r123, %r97, 11;
	shl.b32 	%r124, %r98, 11;
	shl.b32 	%r125, %r99, 11;
	.loc	1 33 30                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:33:30
	mad.lo.s32 	%r126, %r104, 18432, %r106;
	.loc	1 33 40                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:33:40
	add.s32 	%r127, %r126, %r123;
	add.s32 	%r128, %r126, %r124;
	add.s32 	%r129, %r126, %r125;
	add.s32 	%r130, %r127, 24576;
	.loc	1 33 25                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:33:25
	mul.wide.s32 	%rd39, %r127, 4;
	add.s64 	%rd17, %rd22, %rd39;
	mul.wide.s32 	%rd40, %r128, 4;
	add.s64 	%rd18, %rd22, %rd40;
	mul.wide.s32 	%rd41, %r129, 4;
	add.s64 	%rd19, %rd22, %rd41;
	mul.wide.s32 	%rd42, %r130, 4;
	add.s64 	%rd20, %rd22, %rd42;
	.loc	1 33 57                         // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:33:57
	shl.b32 	%r131, %r71, 8;
	and.b32  	%r132, %r131, 3840;
	or.b32  	%r133, %r132, %r73;
	and.b32  	%r134, %r74, 1020;
	shr.u32 	%r135, %r132, 6;
	add.s32 	%r136, %r135, %r133;
	shl.b32 	%r137, %r136, 2;
	mov.u32 	%r138, global_smem;
	add.s32 	%r21, %r138, %r137;
	mov.pred 	%p17, -1;
	// begin inline asm
	@%p17 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r21, 64;
	// begin inline asm
	@%p17 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r21, 128;
	// begin inline asm
	@%p17 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r21, 192;
	// begin inline asm
	@%p17 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r21, 256;
	// begin inline asm
	@%p17 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r21, 320;
	// begin inline asm
	@%p17 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r21, 384;
	// begin inline asm
	@%p17 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r21, 448;
	// begin inline asm
	@%p17 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r21, 512;
	// begin inline asm
	@%p17 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r21, 576;
	// begin inline asm
	@%p17 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r21, 640;
	// begin inline asm
	@%p17 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r21, 704;
	// begin inline asm
	@%p17 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r21, 768;
	// begin inline asm
	@%p17 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r21, 832;
	// begin inline asm
	@%p17 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r21, 896;
	// begin inline asm
	@%p17 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	add.s32 	%r51, %r21, 960;
	// begin inline asm
	@%p17 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r139, %r72, 12;
	add.s32 	%r140, %r139, %r134;
	shl.b32 	%r141, %r140, 2;
	add.s32 	%r142, %r138, %r141;
	or.b32  	%r143, %r134, 1024;
	shr.u32 	%r144, %r143, 6;
	and.b32  	%r145, %r144, 28;
	add.s32 	%r146, %r145, %r134;
	shl.b32 	%r147, %r146, 2;
	add.s32 	%r148, %r138, %r147;
	ld.shared.v4.u32 	{%r57, %r58, %r59, %r60}, [%r148+4096];
	or.b32  	%r149, %r134, 2048;
	shr.u32 	%r150, %r149, 6;
	and.b32  	%r151, %r150, 44;
	add.s32 	%r152, %r151, %r134;
	shl.b32 	%r153, %r152, 2;
	add.s32 	%r154, %r138, %r153;
	ld.shared.v4.u32 	{%r61, %r62, %r63, %r64}, [%r154+8192];
	or.b32  	%r155, %r134, 3072;
	shr.u32 	%r156, %r155, 6;
	and.b32  	%r157, %r156, 60;
	add.s32 	%r158, %r157, %r134;
	shl.b32 	%r159, %r158, 2;
	add.s32 	%r160, %r138, %r159;
	ld.shared.v4.u32 	{%r65, %r66, %r67, %r68}, [%r160+12288];
	ld.shared.v4.u32 	{%r53, %r54, %r55, %r56}, [%r142];
	// begin inline asm
	@%p33 st.global.v4.b32 [ %rd17 + 0 ], { %r53, %r54, %r55, %r56 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.v4.b32 [ %rd18 + 0 ], { %r57, %r58, %r59, %r60 };
	// end inline asm
	// begin inline asm
	@%p35 st.global.v4.b32 [ %rd19 + 0 ], { %r61, %r62, %r63, %r64 };
	// end inline asm
	// begin inline asm
	@%p36 st.global.v4.b32 [ %rd20 + 0 ], { %r65, %r66, %r67, %r68 };
	// end inline asm
	.loc	1 33 4                          // cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py:33:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/xj/cxjinqx4r5kkhqielr5jyccg5eaay67tit6mglf364bpyxlip4ab.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 106
.b8 105
.b8 110
.b8 113
.b8 120
.b8 52
.b8 114
.b8 53
.b8 107
.b8 107
.b8 104
.b8 113
.b8 105
.b8 101
.b8 108
.b8 114
.b8 53
.b8 106
.b8 121
.b8 99
.b8 99
.b8 103
.b8 53
.b8 101
.b8 97
.b8 97
.b8 121
.b8 54
.b8 55
.b8 116
.b8 105
.b8 116
.b8 54
.b8 109
.b8 103
.b8 108
.b8 102
.b8 51
.b8 54
.b8 52
.b8 98
.b8 112
.b8 121
.b8 120
.b8 108
.b8 105
.b8 112
.b8 52
.b8 97
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 106
.b8 0
	}
	.section	.debug_macinfo	{	}
