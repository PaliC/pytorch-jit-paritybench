//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__unsafe_index_add_mul_sub_30 // -- Begin function triton_poi_fused__unsafe_index_add_mul_sub_30
                                        // @triton_poi_fused__unsafe_index_add_mul_sub_30
.visible .entry triton_poi_fused__unsafe_index_add_mul_sub_30(
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_30_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_30_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_30_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_30_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_30_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_30_param_5,
	.param .u32 triton_poi_fused__unsafe_index_add_mul_sub_30_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<51>;
	.reg .f32 	%f<21>;
	.reg .b64 	%rd<104>;
	.loc	1 19 0                          // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:19:0

// %bb.0:
	ld.param.u64 	%rd31, [triton_poi_fused__unsafe_index_add_mul_sub_30_param_0];
	ld.param.u64 	%rd32, [triton_poi_fused__unsafe_index_add_mul_sub_30_param_1];
$L__tmp0:
	.loc	1 21 28                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:21:33
	shl.b32 	%r18, %r1, 9;
	ld.param.u64 	%rd33, [triton_poi_fused__unsafe_index_add_mul_sub_30_param_2];
	ld.param.u64 	%rd34, [triton_poi_fused__unsafe_index_add_mul_sub_30_param_3];
	.loc	1 22 36                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:22:36
	mov.u32 	%r19, %tid.x;
	shl.b32 	%r20, %r19, 2;
	ld.param.u64 	%rd35, [triton_poi_fused__unsafe_index_add_mul_sub_30_param_4];
	and.b32  	%r21, %r20, 508;
	ld.param.u64 	%rd36, [triton_poi_fused__unsafe_index_add_mul_sub_30_param_5];
	.loc	1 22 23                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:22:23
	or.b32  	%r22, %r18, %r21;
	or.b32  	%r23, %r22, 2;
	.loc	1 24 21                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:24:21
	shr.s32 	%r25, %r22, 31;
	shr.u32 	%r26, %r25, 29;
	add.s32 	%r27, %r22, %r26;
	shr.s32 	%r28, %r27, 3;
	.loc	1 24 26                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:24:26
	shr.u32 	%r29, %r28, 29;
	add.s32 	%r30, %r28, %r29;
	and.b32  	%r31, %r30, -8;
	sub.s32 	%r32, %r28, %r31;
	.loc	1 25 19                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:25:19
	and.b32  	%r33, %r27, -8;
	sub.s32 	%r34, %r22, %r33;
	bfe.s32 	%r35, %r1, 22, 1;
	shr.u32 	%r36, %r35, 29;
	add.s32 	%r37, %r23, %r36;
	and.b32  	%r38, %r37, -8;
	sub.s32 	%r39, %r23, %r38;
	.loc	1 26 21                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:26:21
	shr.u32 	%r40, %r35, 26;
	add.s32 	%r41, %r22, %r40;
	shr.s32 	%r42, %r41, 6;
	.loc	1 26 27                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:26:27
	shr.s32 	%r43, %r41, 31;
	shr.u32 	%r44, %r43, 24;
	add.s32 	%r45, %r42, %r44;
	and.b32  	%r46, %r45, -256;
	sub.s32 	%r47, %r42, %r46;
	.loc	1 27 19                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:27:19
	shr.u32 	%r48, %r35, 18;
	add.s32 	%r49, %r22, %r48;
	.loc	1 29 30                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:29:30
	mul.wide.s32 	%rd37, %r32, 8;
	add.s64 	%rd2, %rd31, %rd37;
	mov.pred 	%p1, -1;
	.loc	1 29 35                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:29:35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:30:30
	mul.wide.s32 	%rd38, %r34, 8;
	add.s64 	%rd11, %rd32, %rd38;
	mul.wide.s32 	%rd39, %r39, 8;
	add.s64 	%rd14, %rd32, %rd39;
	.loc	1 30 35                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:30:35
	// begin inline asm
	mov.u64 %rd9, 0x0;
	mov.u64 %rd10, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd9, %rd10 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd12, 0x0;
	mov.u64 %rd13, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd12, %rd13 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 31 31                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:31:31
	add.s64 	%rd17, %rd34, %rd38;
	add.s64 	%rd20, %rd34, %rd39;
	.loc	1 31 36                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:31:36
	// begin inline asm
	mov.u64 %rd15, 0x0;
	mov.u64 %rd16, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd15, %rd16 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd18, 0x0;
	mov.u64 %rd19, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd18, %rd19 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 32 31                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:32:31
	mul.wide.s32 	%rd40, %r34, 4;
	add.s64 	%rd21, %rd35, %rd40;
	.loc	1 32 36                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:32:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd21 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 36 32                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:36:32
	shr.u64 	%rd41, %rd1, 60;
	and.b64  	%rd42, %rd41, 8;
	add.s64 	%rd43, %rd42, %rd1;
	.loc	1 39 32                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:39:32
	shr.u64 	%rd44, %rd9, 60;
	and.b64  	%rd45, %rd44, 8;
	add.s64 	%rd46, %rd45, %rd9;
	shr.u64 	%rd47, %rd10, 60;
	and.b64  	%rd48, %rd47, 8;
	add.s64 	%rd49, %rd48, %rd10;
	shr.u64 	%rd50, %rd12, 60;
	and.b64  	%rd51, %rd50, 8;
	add.s64 	%rd52, %rd51, %rd12;
	shr.u64 	%rd53, %rd13, 60;
	and.b64  	%rd54, %rd53, 8;
	add.s64 	%rd55, %rd54, %rd13;
	.loc	1 40 64                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:40:64
	and.b32  	%r50, %r49, -16384;
	.loc	1 40 30                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:40:30
	shl.b64 	%rd56, %rd46, 10;
	add.s64 	%rd57, %rd33, %rd56;
	mul.wide.s32 	%rd58, %r47, 4;
	add.s64 	%rd59, %rd57, %rd58;
	shl.b64 	%rd60, %rd43, 13;
	add.s64 	%rd61, %rd59, %rd60;
	mul.wide.s32 	%rd62, %r50, 4;
	add.s64 	%rd22, %rd61, %rd62;
	shl.b64 	%rd63, %rd49, 10;
	add.s64 	%rd64, %rd33, %rd63;
	add.s64 	%rd65, %rd64, %rd58;
	add.s64 	%rd66, %rd65, %rd60;
	add.s64 	%rd23, %rd66, %rd62;
	shl.b64 	%rd67, %rd52, 10;
	add.s64 	%rd68, %rd33, %rd67;
	add.s64 	%rd69, %rd68, %rd58;
	add.s64 	%rd70, %rd69, %rd60;
	add.s64 	%rd24, %rd70, %rd62;
	shl.b64 	%rd71, %rd55, 10;
	add.s64 	%rd72, %rd33, %rd71;
	add.s64 	%rd73, %rd72, %rd58;
	add.s64 	%rd74, %rd73, %rd60;
	add.s64 	%rd25, %rd74, %rd62;
	.loc	1 40 69                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:40:69
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd22 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd23 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r7;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd24 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd25 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r9;
	.loc	1 43 35                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:43:35
	shr.u64 	%rd75, %rd15, 60;
	and.b64  	%rd76, %rd75, 8;
	add.s64 	%rd77, %rd76, %rd15;
	shr.u64 	%rd78, %rd16, 60;
	and.b64  	%rd79, %rd78, 8;
	add.s64 	%rd80, %rd79, %rd16;
	shr.u64 	%rd81, %rd18, 60;
	and.b64  	%rd82, %rd81, 8;
	add.s64 	%rd83, %rd82, %rd18;
	shr.u64 	%rd84, %rd19, 60;
	and.b64  	%rd85, %rd84, 8;
	add.s64 	%rd86, %rd85, %rd19;
	.loc	1 44 31                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:44:31
	shl.b64 	%rd87, %rd77, 10;
	add.s64 	%rd88, %rd33, %rd87;
	add.s64 	%rd89, %rd88, %rd58;
	add.s64 	%rd90, %rd89, %rd60;
	add.s64 	%rd26, %rd90, %rd62;
	shl.b64 	%rd91, %rd80, 10;
	add.s64 	%rd92, %rd33, %rd91;
	add.s64 	%rd93, %rd92, %rd58;
	add.s64 	%rd94, %rd93, %rd60;
	add.s64 	%rd27, %rd94, %rd62;
	shl.b64 	%rd95, %rd83, 10;
	add.s64 	%rd96, %rd33, %rd95;
	add.s64 	%rd97, %rd96, %rd58;
	add.s64 	%rd98, %rd97, %rd60;
	add.s64 	%rd28, %rd98, %rd62;
	shl.b64 	%rd99, %rd86, 10;
	add.s64 	%rd100, %rd33, %rd99;
	add.s64 	%rd101, %rd100, %rd58;
	add.s64 	%rd102, %rd101, %rd60;
	add.s64 	%rd29, %rd102, %rd62;
	.loc	1 44 71                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:44:71
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd26 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd27 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r11;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd28 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r12;
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd29 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r13;
	.loc	1 45 20                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:45:20
	sub.f32 	%f13, %f9, %f5;
	sub.f32 	%f14, %f10, %f6;
	sub.f32 	%f15, %f11, %f7;
	sub.f32 	%f16, %f12, %f8;
	.loc	1 47 19                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:47:19
	fma.rn.f32 	%f17, %f13, %f1, %f5;
	fma.rn.f32 	%f18, %f14, %f2, %f6;
	fma.rn.f32 	%f19, %f15, %f3, %f7;
	fma.rn.f32 	%f20, %f16, %f4, %f8;
	.loc	1 48 25                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:48:25
	mul.wide.s32 	%rd103, %r22, 4;
	add.s64 	%rd30, %rd36, %rd103;
	.loc	1 48 37                         // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:48:37
	mov.b32 	%r14, %f17;
	mov.b32 	%r15, %f18;
	mov.b32 	%r16, %f19;
	mov.b32 	%r17, %f20;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd30 + 0 ], { %r14, %r15, %r16, %r17 };
	// end inline asm
	.loc	1 48 4                          // cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py:48:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/b3/cb3yqnl462wbdhszr6yi6mci7rah3pbovq3d5y5w4wwksze7l6pi.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 51
.b8 121
.b8 113
.b8 110
.b8 108
.b8 52
.b8 54
.b8 50
.b8 119
.b8 98
.b8 100
.b8 104
.b8 115
.b8 122
.b8 114
.b8 54
.b8 121
.b8 105
.b8 54
.b8 109
.b8 99
.b8 105
.b8 55
.b8 114
.b8 97
.b8 104
.b8 51
.b8 112
.b8 98
.b8 111
.b8 118
.b8 113
.b8 51
.b8 100
.b8 53
.b8 121
.b8 53
.b8 119
.b8 52
.b8 119
.b8 119
.b8 107
.b8 115
.b8 122
.b8 101
.b8 55
.b8 108
.b8 54
.b8 112
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 51
.b8 0
	}
	.section	.debug_macinfo	{	}
