#loc = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":19:0)
#loc1 = loc(unknown)
#loc18 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":37:24)
#loc24 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":44:26)
#loc42 = loc(callsite(#loc1 at #loc18))
#loc45 = loc(callsite(#loc1 at #loc24))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_convolution_relu_39(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<8x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<8x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.600000e+01> : tensor<8x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<8x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<1024> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc7)
    %7 = tt.expand_dims %6 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc8)
    %8 = arith.remsi %5, %cst_3 : tensor<8x1xi32> loc(#loc9)
    %9 = arith.muli %5, %cst_2 : tensor<8x1xi32> loc(#loc10)
    %10 = tt.broadcast %7 : tensor<1x16xi32> -> tensor<8x16xi32> loc(#loc11)
    %11 = tt.broadcast %9 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc11)
    %12 = arith.addi %10, %11 : tensor<8x16xi32> loc(#loc11)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %13, %12 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc12)
    %15 = tt.load %14 : tensor<8x16x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc14)
    %17 = tt.addptr %16, %8 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc14)
    %18 = tt.load %17 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.broadcast %18 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc16)
    %20 = arith.addf %15, %19 : tensor<8x16xf32> loc(#loc16)
    %21 = "tt.reduce"(%20) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc18)), %arg8: f32 loc(callsite(#loc1 at #loc18))):
      %42 = arith.addf %arg7, %arg8 : f32 loc(#loc48)
      tt.reduce.return %42 : f32 loc(#loc41)
    }) : (tensor<8x16xf32>) -> tensor<8xf32> loc(#loc41)
    %22 = tt.expand_dims %21 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc20)
    %23 = arith.divf %22, %cst_1 : tensor<8x1xf32> loc(#loc21)
    %24 = tt.broadcast %23 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc22)
    %25 = arith.subf %20, %24 : tensor<8x16xf32> loc(#loc22)
    %26 = arith.mulf %25, %25 : tensor<8x16xf32> loc(#loc23)
    %27 = "tt.reduce"(%26) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc24)), %arg8: f32 loc(callsite(#loc1 at #loc24))):
      %42 = arith.addf %arg7, %arg8 : f32 loc(#loc49)
      tt.reduce.return %42 : f32 loc(#loc44)
    }) : (tensor<8x16xf32>) -> tensor<8xf32> loc(#loc44)
    %28 = tt.expand_dims %27 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc25)
    %29 = arith.divf %28, %cst_1 : tensor<8x1xf32> loc(#loc26)
    %30 = arith.addf %29, %cst_0 : tensor<8x1xf32> loc(#loc27)
    %31 = tt.extern_elementwise %30 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<8x1xf32>) -> tensor<8x1xf32> loc(#loc28)
    %32 = tt.broadcast %31 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc29)
    %33 = arith.mulf %25, %32 : tensor<8x16xf32> loc(#loc29)
    %34 = arith.cmpf ogt, %cst, %33 : tensor<8x16xf32> loc(#loc46)
    %35 = arith.select %34, %cst, %33 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc47)
    tt.store %14, %20 : tensor<8x16x!tt.ptr<f32>> loc(#loc33)
    %36 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc34)
    %37 = tt.addptr %36, %12 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc34)
    tt.store %37, %35 : tensor<8x16x!tt.ptr<f32>> loc(#loc35)
    %38 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc36)
    %39 = tt.addptr %38, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc36)
    tt.store %39, %31 : tensor<8x1x!tt.ptr<f32>> loc(#loc37)
    %40 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc38)
    %41 = tt.addptr %40, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc38)
    tt.store %41, %23 : tensor<8x1x!tt.ptr<f32>> loc(#loc39)
    tt.return loc(#loc40)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":23:28)
#loc3 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":23:33)
#loc4 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":24:36)
#loc5 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":24:44)
#loc6 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":24:23)
#loc7 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":26:26)
#loc8 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":26:34)
#loc9 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":31:19)
#loc10 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":32:42)
#loc11 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":32:39)
#loc12 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":32:34)
#loc13 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":32:47)
#loc14 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":33:30)
#loc15 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":33:35)
#loc16 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":34:18)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc20 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":37:27)
#loc21 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":40:19)
#loc22 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":41:19)
#loc23 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":42:20)
#loc25 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":44:29)
#loc26 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":47:20)
#loc27 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":49:20)
#loc28 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":50:28)
#loc29 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":51:20)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc31 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":53:42)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc33 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":54:47)
#loc34 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":55:25)
#loc35 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":55:45)
#loc36 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":56:25)
#loc37 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":56:37)
#loc38 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":57:25)
#loc39 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":57:37)
#loc40 = loc("inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py":57:4)
#loc41 = loc(callsite(#loc17 at #loc18))
#loc43 = loc(callsite(#loc19 at #loc17))
#loc44 = loc(callsite(#loc17 at #loc24))
#loc46 = loc(callsite(#loc30 at #loc31))
#loc47 = loc(callsite(#loc32 at #loc31))
#loc48 = loc(callsite(#loc43 at #loc18))
#loc49 = loc(callsite(#loc43 at #loc24))
