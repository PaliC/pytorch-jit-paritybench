//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_convolution_relu_39 // -- Begin function triton_per_fused__native_batch_norm_legit_convolution_relu_39
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_convolution_relu_39
.visible .entry triton_per_fused__native_batch_norm_legit_convolution_relu_39(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_39_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_39_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_39_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_39_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_39_param_4,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_relu_39_param_5,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_relu_39_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<60>;
	.reg .f32 	%f<34>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd8, [triton_per_fused__native_batch_norm_legit_convolution_relu_39_param_0];
	ld.param.u64 	%rd9, [triton_per_fused__native_batch_norm_legit_convolution_relu_39_param_1];
$L__tmp0:
	.loc	1 23 28                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:23:33
	shl.b32 	%r28, %r1, 3;
	ld.param.u64 	%rd10, [triton_per_fused__native_batch_norm_legit_convolution_relu_39_param_2];
	ld.param.u64 	%rd11, [triton_per_fused__native_batch_norm_legit_convolution_relu_39_param_3];
	.loc	1 24 44                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:24:44
	mov.u32 	%r29, %tid.x;
	ld.param.u64 	%rd12, [triton_per_fused__native_batch_norm_legit_convolution_relu_39_param_4];
	bfe.u32 	%r30, %r29, 3, 3;
	and.b32  	%r31, %r29, 7;
	.loc	1 24 23                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:24:23
	or.b32  	%r32, %r28, %r30;
	.loc	1 26 34                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:26:34
	shl.b32 	%r33, %r29, 1;
	and.b32  	%r34, %r33, 14;
	.loc	1 31 19                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:31:19
	bfe.s32 	%r35, %r1, 28, 1;
	shr.u32 	%r36, %r35, 22;
	add.s32 	%r37, %r32, %r36;
	and.b32  	%r38, %r37, -1024;
	sub.s32 	%r39, %r32, %r38;
	.loc	1 32 42                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:32:42
	shl.b32 	%r40, %r32, 4;
	.loc	1 32 39                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:32:39
	or.b32  	%r41, %r40, %r34;
	.loc	1 32 34                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:32:34
	mul.wide.s32 	%rd13, %r41, 4;
	add.s64 	%rd1, %rd8, %rd13;
	mov.pred 	%p1, -1;
	.loc	1 32 47                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 33 30                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:33:30
	mul.wide.s32 	%rd14, %r39, 4;
	add.s64 	%rd2, %rd9, %rd14;
	.loc	1 33 35                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:33:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	.loc	1 34 18                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:34:18
	add.f32 	%f4, %f1, %f3;
	add.f32 	%f5, %f2, %f3;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f4, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f6;
	shfl.sync.bfly.b32	%r43, %r42, 4, 31, -1;
	mov.b32 	%f7, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f6, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f8;
	shfl.sync.bfly.b32	%r45, %r44, 2, 31, -1;
	mov.b32 	%f9, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f10;
	shfl.sync.bfly.b32	%r47, %r46, 1, 31, -1;
	mov.b32 	%f11, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
$L__tmp2:
	.loc	1 40 19                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:40:19
	shl.b32 	%r48, %r30, 2;
	mov.u32 	%r49, global_smem;
	add.s32 	%r6, %r49, %r48;
	mov.b32 	%r7, %f12;
	// begin inline asm
	@%p1 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r50, %r31, 2;
	add.s32 	%r51, %r49, %r50;
	ld.shared.u32 	%r9, [%r51];
	mov.b32 	%r10, 1098907648;
	// begin inline asm
	div.full.f32 %r27, %r9, %r10;
	// end inline asm
	// begin inline asm
	div.full.f32 %r11, %r7, %r10;
	// end inline asm
	mov.b32 	%f13, %r11;
	.loc	1 41 19                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:41:19
	sub.f32 	%f14, %f4, %f13;
	sub.f32 	%f15, %f5, %f13;
	.loc	1 42 20                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:42:20
	mul.f32 	%f16, %f15, %f15;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f17, %f14, %f14, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f17;
	shfl.sync.bfly.b32	%r53, %r52, 4, 31, -1;
	mov.b32 	%f18, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f19;
	shfl.sync.bfly.b32	%r55, %r54, 2, 31, -1;
	mov.b32 	%f20, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f21;
	shfl.sync.bfly.b32	%r57, %r56, 1, 31, -1;
	mov.b32 	%f22, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
$L__tmp4:
	.loc	1 50 28                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:50:28
	bar.sync 	0;
	mov.b32 	%r15, %f23;
	// begin inline asm
	@%p1 st.shared.b32 [ %r6 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	.loc	1 47 20                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:47:20
	ld.shared.u32 	%r17, [%r51];
	// begin inline asm
	div.full.f32 %r16, %r17, %r10;
	// end inline asm
	mov.b32 	%f24, %r16;
	// begin inline asm
	div.full.f32 %r19, %r15, %r10;
	// end inline asm
	mov.b32 	%f25, %r19;
	.loc	1 49 20                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:49:20
	add.f32 	%f26, %f24, 0f3727C5AC;
	add.f32 	%f27, %f25, 0f3727C5AC;
	.loc	1 50 28                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:50:28
	rsqrt.approx.ftz.f32 	%f28, %f26;
	rsqrt.approx.ftz.f32 	%f29, %f27;
	.loc	1 24 23                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:24:23
	or.b32  	%r58, %r28, %r31;
	.loc	1 51 20                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:51:20
	mul.f32 	%f30, %f14, %f29;
	mul.f32 	%f31, %f15, %f29;
$L__tmp5:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p10, %f30, 0f00000000;
	setp.lt.f32 	%p11, %f31, 0f00000000;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f32, 0f00000000, %f30, %p10;
	selp.f32 	%f33, 0f00000000, %f31, %p11;
$L__tmp6:
	.loc	1 54 47                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:54:47
	mov.b32 	%r22, %f4;
	mov.b32 	%r23, %f5;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r22, %r23 };
	// end inline asm
	.loc	1 55 25                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:55:25
	add.s64 	%rd5, %rd11, %rd13;
	.loc	1 55 45                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:55:45
	mov.b32 	%r24, %f32;
	mov.b32 	%r25, %f33;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd5 + 0 ], { %r24, %r25 };
	// end inline asm
	.loc	1 56 25                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:56:25
	mul.wide.s32 	%rd15, %r58, 4;
	add.s64 	%rd6, %rd12, %rd15;
	.loc	1 56 37                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:56:37
	and.b32  	%r59, %r29, 56;
	setp.eq.s32 	%p8, %r59, 0;
	mov.b32 	%r26, %f28;
	// begin inline asm
	@%p8 st.global.b32 [ %rd6 + 0 ], { %r26 };
	// end inline asm
	.loc	1 57 25                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:57:25
	add.s64 	%rd7, %rd10, %rd15;
	.loc	1 57 37                         // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:57:37
	// begin inline asm
	@%p8 st.global.b32 [ %rd7 + 0 ], { %r27 };
	// end inline asm
	.loc	1 57 4                          // ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py:57:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/cw/ccw3zf5lbhgkaokn3uv3lmiuqzeqatlk6jyrhwzlpqjrg4izaagy.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 254                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 119
.b8 51
.b8 122
.b8 102
.b8 53
.b8 108
.b8 98
.b8 104
.b8 103
.b8 107
.b8 97
.b8 111
.b8 107
.b8 110
.b8 51
.b8 117
.b8 118
.b8 51
.b8 108
.b8 109
.b8 105
.b8 117
.b8 113
.b8 122
.b8 101
.b8 113
.b8 97
.b8 116
.b8 108
.b8 107
.b8 54
.b8 106
.b8 121
.b8 114
.b8 104
.b8 119
.b8 122
.b8 108
.b8 112
.b8 113
.b8 106
.b8 114
.b8 103
.b8 52
.b8 105
.b8 122
.b8 97
.b8 97
.b8 103
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 119
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x40 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 51
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa3:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
