; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_leaky_relu_mul_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %12 = shl i32 %11, 4, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = and i32 %13, 16, !dbg !12
  %15 = and i32 %13, 15, !dbg !12
  %16 = or disjoint i32 %12, %15, !dbg !13
  %17 = icmp slt i32 %16, 16, !dbg !14
  %18 = srem i32 %16, 4, !dbg !15
  %19 = sext i32 %16 to i64, !dbg !16
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !16
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %17) #1, !dbg !17
  %22 = bitcast i32 %21 to float, !dbg !17
  %23 = sext i32 %18 to i64, !dbg !18
  %24 = getelementptr float, ptr addrspace(1) %4, i64 %23, !dbg !18
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %17) #1, !dbg !19
  %26 = bitcast i32 %25 to float, !dbg !19
  %27 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !20
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %17) #1, !dbg !21
  %29 = bitcast i32 %28 to float, !dbg !21
  %30 = getelementptr float, ptr addrspace(1) %2, i64 %19, !dbg !22
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %17) #1, !dbg !23
  %32 = bitcast i32 %31 to float, !dbg !23
  %33 = getelementptr float, ptr addrspace(1) %3, i64 %19, !dbg !24
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %17) #1, !dbg !25
  %35 = bitcast i32 %34 to float, !dbg !25
  %36 = fmul float %26, 0x3F847AE140000000, !dbg !26
  %37 = fadd float %36, %22, !dbg !27
  %38 = fcmp ogt float %37, 0.000000e+00, !dbg !28
  %39 = fmul float %37, 0x3FC99999A0000000, !dbg !29
  %40 = select i1 %38, float %37, float %39, !dbg !30
  %41 = fmul float %40, 0x3FF6A09E60000000, !dbg !31
  %42 = fadd float %36, %29, !dbg !32
  %43 = fcmp ogt float %42, 0.000000e+00, !dbg !33
  %44 = fmul float %42, 0x3FC99999A0000000, !dbg !34
  %45 = select i1 %43, float %42, float %44, !dbg !35
  %46 = fmul float %45, 0x3FF6A09E60000000, !dbg !36
  %47 = fadd float %36, %32, !dbg !37
  %48 = fcmp ogt float %47, 0.000000e+00, !dbg !38
  %49 = fmul float %47, 0x3FC99999A0000000, !dbg !39
  %50 = select i1 %48, float %47, float %49, !dbg !40
  %51 = fmul float %50, 0x3FF6A09E60000000, !dbg !41
  %52 = fadd float %36, %35, !dbg !42
  %53 = fcmp ogt float %52, 0.000000e+00, !dbg !43
  %54 = fmul float %52, 0x3FC99999A0000000, !dbg !44
  %55 = select i1 %53, float %52, float %54, !dbg !45
  %56 = fmul float %55, 0x3FF6A09E60000000, !dbg !46
  %57 = getelementptr i1, ptr addrspace(1) %5, i64 %19, !dbg !47
  %58 = zext i1 %38 to i8, !dbg !48
  %59 = icmp eq i32 %14, 0, !dbg !48
  %60 = and i1 %59, %17, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %58, ptr addrspace(1) %57, i1 %60) #1, !dbg !48
  %61 = bitcast float %41 to i32, !dbg !49
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %61, ptr addrspace(1) %20, i1 %60) #1, !dbg !49
  %62 = getelementptr i1, ptr addrspace(1) %6, i64 %19, !dbg !50
  %63 = zext i1 %43 to i8, !dbg !51
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %63, ptr addrspace(1) %62, i1 %60) #1, !dbg !51
  %64 = bitcast float %46 to i32, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %64, ptr addrspace(1) %27, i1 %60) #1, !dbg !52
  %65 = getelementptr i1, ptr addrspace(1) %7, i64 %19, !dbg !53
  %66 = zext i1 %48 to i8, !dbg !54
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %66, ptr addrspace(1) %65, i1 %60) #1, !dbg !54
  %67 = bitcast float %51 to i32, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %67, ptr addrspace(1) %30, i1 %60) #1, !dbg !55
  %68 = getelementptr i1, ptr addrspace(1) %8, i64 %19, !dbg !56
  %69 = zext i1 %53 to i8, !dbg !57
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %69, ptr addrspace(1) %68, i1 %60) #1, !dbg !57
  %70 = bitcast float %56 to i32, !dbg !58
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %70, ptr addrspace(1) %33, i1 %60) #1, !dbg !58
  ret void, !dbg !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "crj5oclm2olcigx3bn7tdlb5n5sjwkpfmjdgfvlchh7qawm33qfy.py", directory: "inductor_cache/rj")
!4 = !{ptr @triton_poi_fused_add_leaky_relu_mul_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_leaky_relu_mul_5, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_leaky_relu_mul_5", linkageName: "triton_poi_fused_add_leaky_relu_mul_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 34, scope: !7)
!17 = !DILocation(line: 26, column: 39, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 40, scope: !7)
!22 = !DILocation(line: 29, column: 35, scope: !7)
!23 = !DILocation(line: 29, column: 40, scope: !7)
!24 = !DILocation(line: 30, column: 35, scope: !7)
!25 = !DILocation(line: 30, column: 40, scope: !7)
!26 = !DILocation(line: 32, column: 18, scope: !7)
!27 = !DILocation(line: 33, column: 18, scope: !7)
!28 = !DILocation(line: 35, column: 18, scope: !7)
!29 = !DILocation(line: 37, column: 18, scope: !7)
!30 = !DILocation(line: 38, column: 32, scope: !7)
!31 = !DILocation(line: 40, column: 19, scope: !7)
!32 = !DILocation(line: 41, column: 20, scope: !7)
!33 = !DILocation(line: 42, column: 20, scope: !7)
!34 = !DILocation(line: 43, column: 20, scope: !7)
!35 = !DILocation(line: 44, column: 35, scope: !7)
!36 = !DILocation(line: 45, column: 20, scope: !7)
!37 = !DILocation(line: 46, column: 20, scope: !7)
!38 = !DILocation(line: 47, column: 20, scope: !7)
!39 = !DILocation(line: 48, column: 20, scope: !7)
!40 = !DILocation(line: 49, column: 35, scope: !7)
!41 = !DILocation(line: 50, column: 20, scope: !7)
!42 = !DILocation(line: 51, column: 20, scope: !7)
!43 = !DILocation(line: 52, column: 20, scope: !7)
!44 = !DILocation(line: 53, column: 20, scope: !7)
!45 = !DILocation(line: 54, column: 35, scope: !7)
!46 = !DILocation(line: 55, column: 20, scope: !7)
!47 = !DILocation(line: 56, column: 25, scope: !7)
!48 = !DILocation(line: 56, column: 36, scope: !7)
!49 = !DILocation(line: 57, column: 40, scope: !7)
!50 = !DILocation(line: 58, column: 25, scope: !7)
!51 = !DILocation(line: 58, column: 37, scope: !7)
!52 = !DILocation(line: 59, column: 40, scope: !7)
!53 = !DILocation(line: 60, column: 25, scope: !7)
!54 = !DILocation(line: 60, column: 37, scope: !7)
!55 = !DILocation(line: 61, column: 40, scope: !7)
!56 = !DILocation(line: 62, column: 25, scope: !7)
!57 = !DILocation(line: 62, column: 37, scope: !7)
!58 = !DILocation(line: 63, column: 40, scope: !7)
!59 = !DILocation(line: 63, column: 4, scope: !7)
