; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__to_copy__unsafe_index_abs_add_arange_clamp_exp_mul_pow_sub_sum_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %8 = shl i32 %7, 7, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = lshr i32 %9, 2, !dbg !12
  %11 = and i32 %10, 63, !dbg !12
  %12 = or disjoint i32 %11, 64, !dbg !12
  %13 = and i32 %9, 127, !dbg !12
  %14 = or disjoint i32 %8, %11, !dbg !13
  %15 = or disjoint i32 %8, %12, !dbg !13
  %16 = or disjoint i32 %8, %13, !dbg !13
  %17 = icmp slt i32 %14, 256, !dbg !14
  %18 = icmp slt i32 %15, 256, !dbg !14
  %19 = icmp slt i32 %16, 256, !dbg !14
  %20 = shl i32 %9, 2, !dbg !15
  %21 = and i32 %20, 12, !dbg !15
  %22 = sdiv i32 %16, 4, !dbg !16
  %23 = sdiv i32 %14, 4, !dbg !16
  %.frozen = freeze i32 %15, !dbg !16
  %24 = sdiv i32 %.frozen, 4, !dbg !16
  %25 = srem i32 %24, 4, !dbg !17
  %26 = mul i32 %24, 4, !dbg !18
  %.decomposed = sub i32 %.frozen, %26, !dbg !18
  %27 = sdiv i32 %16, 16, !dbg !19
  %.frozen222 = freeze i32 %14, !dbg !19
  %28 = sdiv i32 %.frozen222, 16, !dbg !19
  %.frozen224 = freeze i32 %15, !dbg !19
  %29 = sdiv i32 %.frozen224, 16, !dbg !19
  %30 = mul i32 %28, 16, !dbg !20
  %.decomposed223 = sub i32 %.frozen222, %30, !dbg !20
  %31 = mul i32 %29, 16, !dbg !20
  %.decomposed225 = sub i32 %.frozen224, %31, !dbg !20
  %32 = sdiv i32 %14, 64, !dbg !21
  %33 = sdiv i32 %15, 64, !dbg !21
  %34 = shl nsw i32 %.decomposed223, 4, !dbg !22
  %35 = shl nsw i32 %.decomposed225, 4, !dbg !22
  %36 = or disjoint i32 %34, %21, !dbg !23
  %37 = or disjoint i32 %35, %21, !dbg !23
  %38 = shl i32 %32, 8, !dbg !24
  %39 = shl i32 %33, 8, !dbg !24
  %40 = add i32 %36, %38, !dbg !25
  %41 = add i32 %37, %39, !dbg !25
  %42 = sext i32 %40 to i64, !dbg !26
  %43 = getelementptr float, ptr addrspace(1) %3, i64 %42, !dbg !26
  %44 = sext i32 %41 to i64, !dbg !26
  %45 = getelementptr float, ptr addrspace(1) %3, i64 %44, !dbg !26
  %46 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %43, i1 %17, i32 0, i1 %17, i32 0, i1 %17, i32 0, i1 %17, i32 0, i1 %17) #5, !dbg !27
  %47 = extractvalue { i32, i32, i32, i32 } %46, 0, !dbg !27
  %48 = extractvalue { i32, i32, i32, i32 } %46, 1, !dbg !27
  %49 = extractvalue { i32, i32, i32, i32 } %46, 2, !dbg !27
  %50 = extractvalue { i32, i32, i32, i32 } %46, 3, !dbg !27
  %51 = bitcast i32 %47 to float, !dbg !27
  %52 = bitcast i32 %48 to float, !dbg !27
  %53 = bitcast i32 %49 to float, !dbg !27
  %54 = bitcast i32 %50 to float, !dbg !27
  %55 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %45, i1 %18, i32 0, i1 %18, i32 0, i1 %18, i32 0, i1 %18, i32 0, i1 %18) #5, !dbg !27
  %56 = extractvalue { i32, i32, i32, i32 } %55, 0, !dbg !27
  %57 = extractvalue { i32, i32, i32, i32 } %55, 1, !dbg !27
  %58 = extractvalue { i32, i32, i32, i32 } %55, 2, !dbg !27
  %59 = extractvalue { i32, i32, i32, i32 } %55, 3, !dbg !27
  %60 = bitcast i32 %56 to float, !dbg !27
  %61 = bitcast i32 %57 to float, !dbg !27
  %62 = bitcast i32 %58 to float, !dbg !27
  %63 = bitcast i32 %59 to float, !dbg !27
  %64 = tail call i32 @llvm.smax.i32(i32 %25, i32 0), !dbg !28
  %65 = uitofp nneg i32 %64 to float, !dbg !28
  %66 = fptosi float %65 to i32, !dbg !32
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 2), !dbg !33
  %narrow4 = add nsw i32 %67, 1, !dbg !33
  %68 = sext i32 %narrow4 to i64, !dbg !33
  %69 = tail call i32 @llvm.smax.i32(i32 %.decomposed, i32 0), !dbg !35
  %70 = uitofp nneg i32 %69 to float, !dbg !35
  %71 = insertelement <4 x i32> poison, i32 %22, i64 0, !dbg !17
  %72 = insertelement <4 x i32> %71, i32 %16, i64 1, !dbg !17
  %73 = insertelement <4 x i32> %72, i32 %23, i64 2, !dbg !17
  %74 = insertelement <4 x i32> %73, i32 %14, i64 3, !dbg !17
  %75 = srem <4 x i32> %74, splat (i32 4), !dbg !17
  %76 = tail call <4 x i32> @llvm.smax.v4i32(<4 x i32> %75, <4 x i32> zeroinitializer), !dbg !28
  %77 = uitofp nneg <4 x i32> %76 to <4 x float>, !dbg !28
  %78 = fptosi <4 x float> %77 to <4 x i32>, !dbg !32
  %79 = extractelement <4 x i32> %78, i64 0, !dbg !37
  %80 = tail call i32 @llvm.smin.i32(i32 %79, i32 2), !dbg !33
  %narrow = add nsw i32 %80, 1, !dbg !33
  %81 = sext i32 %narrow to i64, !dbg !33
  %82 = extractelement <4 x i32> %78, i64 2, !dbg !37
  %83 = tail call i32 @llvm.smin.i32(i32 %82, i32 2), !dbg !33
  %narrow3 = add nsw i32 %83, 1, !dbg !33
  %84 = sext i32 %narrow3 to i64, !dbg !33
  %85 = fptosi float %70 to i32, !dbg !38
  %86 = shl nsw i64 %81, 2, !dbg !39
  %87 = shl nsw i64 %84, 2, !dbg !39
  %88 = shl nsw i64 %68, 2, !dbg !39
  %89 = extractelement <4 x i32> %78, i64 1, !dbg !40
  %90 = sext i32 %89 to i64, !dbg !41
  %91 = extractelement <4 x i32> %78, i64 3, !dbg !40
  %92 = sext i32 %91 to i64, !dbg !41
  %93 = sext i32 %85 to i64, !dbg !41
  %94 = shl nsw i32 %27, 4, !dbg !42
  %95 = shl nsw i32 %28, 4, !dbg !42
  %96 = shl nsw i32 %29, 4, !dbg !42
  %97 = sext i32 %94 to i64, !dbg !43
  %98 = sext i32 %95 to i64, !dbg !43
  %99 = sext i32 %96 to i64, !dbg !43
  %100 = getelementptr float, ptr addrspace(1) %2, i64 %86, !dbg !44
  %101 = getelementptr float, ptr addrspace(1) %100, i64 %90, !dbg !44
  %102 = getelementptr float, ptr addrspace(1) %101, i64 %97, !dbg !44
  %103 = getelementptr float, ptr addrspace(1) %2, i64 %87, !dbg !44
  %104 = getelementptr float, ptr addrspace(1) %103, i64 %92, !dbg !44
  %105 = getelementptr float, ptr addrspace(1) %104, i64 %98, !dbg !44
  %106 = getelementptr float, ptr addrspace(1) %2, i64 %88, !dbg !44
  %107 = getelementptr float, ptr addrspace(1) %106, i64 %93, !dbg !44
  %108 = getelementptr float, ptr addrspace(1) %107, i64 %99, !dbg !44
  %109 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %102, i1 %19) #5, !dbg !45
  %110 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %105, i1 %17) #5, !dbg !45
  %111 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %105, i1 %17) #5, !dbg !45
  %112 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %105, i1 %17) #5, !dbg !45
  %113 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %105, i1 %17) #5, !dbg !45
  %114 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %108, i1 %18) #5, !dbg !45
  %115 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %108, i1 %18) #5, !dbg !45
  %116 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %108, i1 %18) #5, !dbg !45
  %117 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %108, i1 %18) #5, !dbg !45
  %118 = tail call i64 @llvm.smin.i64(i64 %90, i64 2), !dbg !46
  %119 = tail call i64 @llvm.smin.i64(i64 %92, i64 2), !dbg !46
  %120 = tail call i64 @llvm.smin.i64(i64 %93, i64 2), !dbg !46
  %121 = getelementptr float, ptr addrspace(1) %2, i64 %118, !dbg !48
  %122 = getelementptr i8, ptr addrspace(1) %121, i64 4, !dbg !48
  %123 = getelementptr float, ptr addrspace(1) %122, i64 %86, !dbg !48
  %124 = getelementptr float, ptr addrspace(1) %123, i64 %97, !dbg !48
  %125 = getelementptr float, ptr addrspace(1) %2, i64 %119, !dbg !48
  %126 = getelementptr i8, ptr addrspace(1) %125, i64 4, !dbg !48
  %127 = getelementptr float, ptr addrspace(1) %126, i64 %87, !dbg !48
  %128 = getelementptr float, ptr addrspace(1) %127, i64 %98, !dbg !48
  %129 = getelementptr float, ptr addrspace(1) %2, i64 %120, !dbg !48
  %130 = getelementptr i8, ptr addrspace(1) %129, i64 4, !dbg !48
  %131 = getelementptr float, ptr addrspace(1) %130, i64 %88, !dbg !48
  %132 = getelementptr float, ptr addrspace(1) %131, i64 %99, !dbg !48
  %133 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %124, i1 %19) #5, !dbg !49
  %134 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %128, i1 %17) #5, !dbg !49
  %135 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %128, i1 %17) #5, !dbg !49
  %136 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %128, i1 %17) #5, !dbg !49
  %137 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %128, i1 %17) #5, !dbg !49
  %138 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %132, i1 %18) #5, !dbg !49
  %139 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %132, i1 %18) #5, !dbg !49
  %140 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %132, i1 %18) #5, !dbg !49
  %141 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %132, i1 %18) #5, !dbg !49
  %142 = shl i32 %79, 2, !dbg !37
  %143 = shl i32 %82, 2, !dbg !37
  %144 = shl i32 %66, 2, !dbg !37
  %145 = add i32 %94, %89, !dbg !40
  %146 = add i32 %145, %142, !dbg !50
  %147 = add i32 %95, %91, !dbg !40
  %148 = add i32 %147, %143, !dbg !50
  %149 = add i32 %96, %85, !dbg !40
  %150 = add i32 %149, %144, !dbg !50
  %151 = sext i32 %146 to i64, !dbg !51
  %152 = getelementptr float, ptr addrspace(1) %2, i64 %151, !dbg !51
  %153 = sext i32 %148 to i64, !dbg !51
  %154 = getelementptr float, ptr addrspace(1) %2, i64 %153, !dbg !51
  %155 = sext i32 %150 to i64, !dbg !51
  %156 = getelementptr float, ptr addrspace(1) %2, i64 %155, !dbg !51
  %157 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %152, i1 %19) #5, !dbg !52
  %158 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %154, i1 %17) #5, !dbg !52
  %159 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %154, i1 %17) #5, !dbg !52
  %160 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %154, i1 %17) #5, !dbg !52
  %161 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %154, i1 %17) #5, !dbg !52
  %162 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %156, i1 %18) #5, !dbg !52
  %163 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %156, i1 %18) #5, !dbg !52
  %164 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %156, i1 %18) #5, !dbg !52
  %165 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %156, i1 %18) #5, !dbg !52
  %166 = sext i32 %142 to i64, !dbg !53
  %167 = sext i32 %143 to i64, !dbg !53
  %168 = sext i32 %144 to i64, !dbg !53
  %169 = getelementptr float, ptr addrspace(1) %122, i64 %166, !dbg !54
  %170 = getelementptr float, ptr addrspace(1) %169, i64 %97, !dbg !54
  %171 = getelementptr float, ptr addrspace(1) %126, i64 %167, !dbg !54
  %172 = getelementptr float, ptr addrspace(1) %171, i64 %98, !dbg !54
  %173 = getelementptr float, ptr addrspace(1) %130, i64 %168, !dbg !54
  %174 = getelementptr float, ptr addrspace(1) %173, i64 %99, !dbg !54
  %175 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %170, i1 %19) #5, !dbg !55
  %176 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %172, i1 %17) #5, !dbg !55
  %177 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %172, i1 %17) #5, !dbg !55
  %178 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %172, i1 %17) #5, !dbg !55
  %179 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %172, i1 %17) #5, !dbg !55
  %180 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %174, i1 %18) #5, !dbg !55
  %181 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %174, i1 %18) #5, !dbg !55
  %182 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %174, i1 %18) #5, !dbg !55
  %183 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %174, i1 %18) #5, !dbg !55
  %184 = fmul float %51, 0x3FF7154760000000, !dbg !56
  %185 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %184) #5, !dbg !56
  %186 = fmul float %52, 0x3FF7154760000000, !dbg !56
  %187 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %186) #5, !dbg !56
  %188 = fmul float %53, 0x3FF7154760000000, !dbg !56
  %189 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %188) #5, !dbg !56
  %190 = fmul float %54, 0x3FF7154760000000, !dbg !56
  %191 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %190) #5, !dbg !56
  %192 = fmul float %60, 0x3FF7154760000000, !dbg !56
  %193 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %192) #5, !dbg !56
  %194 = fmul float %61, 0x3FF7154760000000, !dbg !56
  %195 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %194) #5, !dbg !56
  %196 = fmul float %62, 0x3FF7154760000000, !dbg !56
  %197 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %196) #5, !dbg !56
  %198 = fmul float %63, 0x3FF7154760000000, !dbg !56
  %199 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %198) #5, !dbg !56
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not.i = icmp eq i32 %200, 0, !dbg !57
  %201 = tail call float @llvm.nvvm.add.rz.ftz.f(float %185, float 1.000000e+00) #5, !dbg !57
  %202 = tail call float @llvm.nvvm.add.rz.f(float %185, float 1.000000e+00) #5, !dbg !57
  %.01.i = select i1 %.not.i, float %202, float %201, !dbg !57
  %203 = bitcast float %.01.i to i32, !dbg !57
  %204 = add i32 %203, -1061158912, !dbg !57
  %205 = and i32 %204, -8388608, !dbg !57
  %206 = bitcast float %185 to i32, !dbg !57
  %207 = sub i32 %206, %205, !dbg !57
  %208 = bitcast i32 %207 to float, !dbg !57
  %209 = sub i32 1082130432, %205, !dbg !57
  %210 = bitcast i32 %209 to float, !dbg !57
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not14.i = icmp eq i32 %211, 0, !dbg !57
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %210, float -1.000000e+00) #5, !dbg !57
  %213 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %210, float -1.000000e+00) #5, !dbg !57
  %.09.i = select i1 %.not14.i, float %213, float %212, !dbg !57
  %214 = fadd float %.09.i, %208, !dbg !57
  %215 = sitofp i32 %205 to float, !dbg !57
  %216 = fmul float %215, 0x3E80000000000000, !dbg !57
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not15.i = icmp eq i32 %217, 0, !dbg !57
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %214, float 0x3FBB000240000000) #5, !dbg !57
  %219 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %214, float 0x3FBB000240000000) #5, !dbg !57
  %.012.i = select i1 %.not15.i, float %219, float %218, !dbg !57
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not16.i = icmp eq i32 %220, 0, !dbg !57
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %214, float 0xBFC0EF1C00000000) #5, !dbg !57
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %214, float 0xBFC0EF1C00000000) #5, !dbg !57
  %.010.i = select i1 %.not16.i, float %222, float %221, !dbg !57
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not17.i = icmp eq i32 %223, 0, !dbg !57
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %214, float 0x3FC28C8EA0000000) #5, !dbg !57
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %214, float 0x3FC28C8EA0000000) #5, !dbg !57
  %.06.i = select i1 %.not17.i, float %225, float %224, !dbg !57
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not18.i = icmp eq i32 %226, 0, !dbg !57
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %214, float 0xBFC54D1BA0000000) #5, !dbg !57
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %214, float 0xBFC54D1BA0000000) #5, !dbg !57
  %.02.i = select i1 %.not18.i, float %228, float %227, !dbg !57
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not19.i = icmp eq i32 %229, 0, !dbg !57
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %214, float 0x3FC995F3C0000000) #5, !dbg !57
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %214, float 0x3FC995F3C0000000) #5, !dbg !57
  %.0.i = select i1 %.not19.i, float %231, float %230, !dbg !57
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not20.i = icmp eq i32 %232, 0, !dbg !57
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %214, float 0xBFD0000840000000) #5, !dbg !57
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %214, float 0xBFD0000840000000) #5, !dbg !57
  %.011.i = select i1 %.not20.i, float %234, float %233, !dbg !57
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not21.i = icmp eq i32 %235, 0, !dbg !57
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %214, float 0x3FD5555CC0000000) #5, !dbg !57
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %214, float 0x3FD5555CC0000000) #5, !dbg !57
  %.08.i = select i1 %.not21.i, float %237, float %236, !dbg !57
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not22.i = icmp eq i32 %238, 0, !dbg !57
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %214, float -5.000000e-01) #5, !dbg !57
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %214, float -5.000000e-01) #5, !dbg !57
  %.07.i = select i1 %.not22.i, float %240, float %239, !dbg !57
  %241 = fmul float %214, %.07.i, !dbg !57
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not23.i = icmp eq i32 %242, 0, !dbg !57
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %241, float %214, float %214) #5, !dbg !57
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %241, float %214, float %214) #5, !dbg !57
  %.05.i = select i1 %.not23.i, float %244, float %243, !dbg !57
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not24.i = icmp eq i32 %245, 0, !dbg !57
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %216, float 0x3FE62E4300000000, float %.05.i) #5, !dbg !57
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %216, float 0x3FE62E4300000000, float %.05.i) #5, !dbg !57
  %.04.i = select i1 %.not24.i, float %247, float %246, !dbg !57
  %248 = icmp ugt i32 %206, 2139095039, !dbg !57
  br i1 %248, label %249, label %__nv_log1pf.exit, !dbg !57

249:                                              ; preds = %6
  %250 = icmp sgt i32 %206, -1082130432, !dbg !57
  br i1 %250, label %__nv_fmaf_rn.exit.i, label %254, !dbg !57

__nv_fmaf_rn.exit.i:                              ; preds = %249
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not25.i = icmp eq i32 %251, 0, !dbg !57
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %185, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %185, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %.03.i = select i1 %.not25.i, float %253, float %252, !dbg !57
  br label %254, !dbg !57

254:                                              ; preds = %__nv_fmaf_rn.exit.i, %249
  %r.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i ], [ %.04.i, %249 ], !dbg !57
  %255 = fcmp oeq float %185, 0.000000e+00, !dbg !57
  %r.1.i = select i1 %255, float -0.000000e+00, float %r.0.i, !dbg !57
  br label %__nv_log1pf.exit, !dbg !57

__nv_log1pf.exit:                                 ; preds = %6, %254
  %r.2.i = phi float [ %r.1.i, %254 ], [ %.04.i, %6 ], !dbg !57
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not.i5 = icmp eq i32 %256, 0, !dbg !57
  %257 = tail call float @llvm.nvvm.add.rz.ftz.f(float %187, float 1.000000e+00) #5, !dbg !57
  %258 = tail call float @llvm.nvvm.add.rz.f(float %187, float 1.000000e+00) #5, !dbg !57
  %.01.i6 = select i1 %.not.i5, float %258, float %257, !dbg !57
  %259 = bitcast float %.01.i6 to i32, !dbg !57
  %260 = add i32 %259, -1061158912, !dbg !57
  %261 = and i32 %260, -8388608, !dbg !57
  %262 = bitcast float %187 to i32, !dbg !57
  %263 = sub i32 %262, %261, !dbg !57
  %264 = bitcast i32 %263 to float, !dbg !57
  %265 = sub i32 1082130432, %261, !dbg !57
  %266 = bitcast i32 %265 to float, !dbg !57
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not14.i7 = icmp eq i32 %267, 0, !dbg !57
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %266, float -1.000000e+00) #5, !dbg !57
  %269 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %266, float -1.000000e+00) #5, !dbg !57
  %.09.i8 = select i1 %.not14.i7, float %269, float %268, !dbg !57
  %270 = fadd float %.09.i8, %264, !dbg !57
  %271 = sitofp i32 %261 to float, !dbg !57
  %272 = fmul float %271, 0x3E80000000000000, !dbg !57
  %273 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not15.i9 = icmp eq i32 %273, 0, !dbg !57
  %274 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %270, float 0x3FBB000240000000) #5, !dbg !57
  %275 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %270, float 0x3FBB000240000000) #5, !dbg !57
  %.012.i10 = select i1 %.not15.i9, float %275, float %274, !dbg !57
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not16.i11 = icmp eq i32 %276, 0, !dbg !57
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %270, float 0xBFC0EF1C00000000) #5, !dbg !57
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %270, float 0xBFC0EF1C00000000) #5, !dbg !57
  %.010.i12 = select i1 %.not16.i11, float %278, float %277, !dbg !57
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not17.i13 = icmp eq i32 %279, 0, !dbg !57
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i12, float %270, float 0x3FC28C8EA0000000) #5, !dbg !57
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i12, float %270, float 0x3FC28C8EA0000000) #5, !dbg !57
  %.06.i14 = select i1 %.not17.i13, float %281, float %280, !dbg !57
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not18.i15 = icmp eq i32 %282, 0, !dbg !57
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i14, float %270, float 0xBFC54D1BA0000000) #5, !dbg !57
  %284 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i14, float %270, float 0xBFC54D1BA0000000) #5, !dbg !57
  %.02.i16 = select i1 %.not18.i15, float %284, float %283, !dbg !57
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not19.i17 = icmp eq i32 %285, 0, !dbg !57
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i16, float %270, float 0x3FC995F3C0000000) #5, !dbg !57
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i16, float %270, float 0x3FC995F3C0000000) #5, !dbg !57
  %.0.i18 = select i1 %.not19.i17, float %287, float %286, !dbg !57
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not20.i19 = icmp eq i32 %288, 0, !dbg !57
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %270, float 0xBFD0000840000000) #5, !dbg !57
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %270, float 0xBFD0000840000000) #5, !dbg !57
  %.011.i20 = select i1 %.not20.i19, float %290, float %289, !dbg !57
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not21.i21 = icmp eq i32 %291, 0, !dbg !57
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i20, float %270, float 0x3FD5555CC0000000) #5, !dbg !57
  %293 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i20, float %270, float 0x3FD5555CC0000000) #5, !dbg !57
  %.08.i22 = select i1 %.not21.i21, float %293, float %292, !dbg !57
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not22.i23 = icmp eq i32 %294, 0, !dbg !57
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i22, float %270, float -5.000000e-01) #5, !dbg !57
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i22, float %270, float -5.000000e-01) #5, !dbg !57
  %.07.i24 = select i1 %.not22.i23, float %296, float %295, !dbg !57
  %297 = fmul float %270, %.07.i24, !dbg !57
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not23.i25 = icmp eq i32 %298, 0, !dbg !57
  %299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %297, float %270, float %270) #5, !dbg !57
  %300 = tail call float @llvm.nvvm.fma.rn.f(float %297, float %270, float %270) #5, !dbg !57
  %.05.i26 = select i1 %.not23.i25, float %300, float %299, !dbg !57
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not24.i27 = icmp eq i32 %301, 0, !dbg !57
  %302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %272, float 0x3FE62E4300000000, float %.05.i26) #5, !dbg !57
  %303 = tail call float @llvm.nvvm.fma.rn.f(float %272, float 0x3FE62E4300000000, float %.05.i26) #5, !dbg !57
  %.04.i28 = select i1 %.not24.i27, float %303, float %302, !dbg !57
  %304 = icmp ugt i32 %262, 2139095039, !dbg !57
  br i1 %304, label %305, label %__nv_log1pf.exit35, !dbg !57

305:                                              ; preds = %__nv_log1pf.exit
  %306 = icmp sgt i32 %262, -1082130432, !dbg !57
  br i1 %306, label %__nv_fmaf_rn.exit.i32, label %310, !dbg !57

__nv_fmaf_rn.exit.i32:                            ; preds = %305
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not25.i33 = icmp eq i32 %307, 0, !dbg !57
  %308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %187, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %309 = tail call float @llvm.nvvm.fma.rn.f(float %187, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %.03.i34 = select i1 %.not25.i33, float %309, float %308, !dbg !57
  br label %310, !dbg !57

310:                                              ; preds = %__nv_fmaf_rn.exit.i32, %305
  %r.0.i30 = phi float [ %.03.i34, %__nv_fmaf_rn.exit.i32 ], [ %.04.i28, %305 ], !dbg !57
  %311 = fcmp oeq float %187, 0.000000e+00, !dbg !57
  %r.1.i31 = select i1 %311, float -0.000000e+00, float %r.0.i30, !dbg !57
  br label %__nv_log1pf.exit35, !dbg !57

__nv_log1pf.exit35:                               ; preds = %__nv_log1pf.exit, %310
  %r.2.i29 = phi float [ %r.1.i31, %310 ], [ %.04.i28, %__nv_log1pf.exit ], !dbg !57
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not.i36 = icmp eq i32 %312, 0, !dbg !57
  %313 = tail call float @llvm.nvvm.add.rz.ftz.f(float %189, float 1.000000e+00) #5, !dbg !57
  %314 = tail call float @llvm.nvvm.add.rz.f(float %189, float 1.000000e+00) #5, !dbg !57
  %.01.i37 = select i1 %.not.i36, float %314, float %313, !dbg !57
  %315 = bitcast float %.01.i37 to i32, !dbg !57
  %316 = add i32 %315, -1061158912, !dbg !57
  %317 = and i32 %316, -8388608, !dbg !57
  %318 = bitcast float %189 to i32, !dbg !57
  %319 = sub i32 %318, %317, !dbg !57
  %320 = bitcast i32 %319 to float, !dbg !57
  %321 = sub i32 1082130432, %317, !dbg !57
  %322 = bitcast i32 %321 to float, !dbg !57
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not14.i38 = icmp eq i32 %323, 0, !dbg !57
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %322, float -1.000000e+00) #5, !dbg !57
  %325 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %322, float -1.000000e+00) #5, !dbg !57
  %.09.i39 = select i1 %.not14.i38, float %325, float %324, !dbg !57
  %326 = fadd float %.09.i39, %320, !dbg !57
  %327 = sitofp i32 %317 to float, !dbg !57
  %328 = fmul float %327, 0x3E80000000000000, !dbg !57
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not15.i40 = icmp eq i32 %329, 0, !dbg !57
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %326, float 0x3FBB000240000000) #5, !dbg !57
  %331 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %326, float 0x3FBB000240000000) #5, !dbg !57
  %.012.i41 = select i1 %.not15.i40, float %331, float %330, !dbg !57
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not16.i42 = icmp eq i32 %332, 0, !dbg !57
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i41, float %326, float 0xBFC0EF1C00000000) #5, !dbg !57
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i41, float %326, float 0xBFC0EF1C00000000) #5, !dbg !57
  %.010.i43 = select i1 %.not16.i42, float %334, float %333, !dbg !57
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not17.i44 = icmp eq i32 %335, 0, !dbg !57
  %336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i43, float %326, float 0x3FC28C8EA0000000) #5, !dbg !57
  %337 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i43, float %326, float 0x3FC28C8EA0000000) #5, !dbg !57
  %.06.i45 = select i1 %.not17.i44, float %337, float %336, !dbg !57
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not18.i46 = icmp eq i32 %338, 0, !dbg !57
  %339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i45, float %326, float 0xBFC54D1BA0000000) #5, !dbg !57
  %340 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i45, float %326, float 0xBFC54D1BA0000000) #5, !dbg !57
  %.02.i47 = select i1 %.not18.i46, float %340, float %339, !dbg !57
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not19.i48 = icmp eq i32 %341, 0, !dbg !57
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i47, float %326, float 0x3FC995F3C0000000) #5, !dbg !57
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i47, float %326, float 0x3FC995F3C0000000) #5, !dbg !57
  %.0.i49 = select i1 %.not19.i48, float %343, float %342, !dbg !57
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not20.i50 = icmp eq i32 %344, 0, !dbg !57
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i49, float %326, float 0xBFD0000840000000) #5, !dbg !57
  %346 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i49, float %326, float 0xBFD0000840000000) #5, !dbg !57
  %.011.i51 = select i1 %.not20.i50, float %346, float %345, !dbg !57
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not21.i52 = icmp eq i32 %347, 0, !dbg !57
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i51, float %326, float 0x3FD5555CC0000000) #5, !dbg !57
  %349 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i51, float %326, float 0x3FD5555CC0000000) #5, !dbg !57
  %.08.i53 = select i1 %.not21.i52, float %349, float %348, !dbg !57
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not22.i54 = icmp eq i32 %350, 0, !dbg !57
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i53, float %326, float -5.000000e-01) #5, !dbg !57
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i53, float %326, float -5.000000e-01) #5, !dbg !57
  %.07.i55 = select i1 %.not22.i54, float %352, float %351, !dbg !57
  %353 = fmul float %326, %.07.i55, !dbg !57
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not23.i56 = icmp eq i32 %354, 0, !dbg !57
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %353, float %326, float %326) #5, !dbg !57
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %353, float %326, float %326) #5, !dbg !57
  %.05.i57 = select i1 %.not23.i56, float %356, float %355, !dbg !57
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not24.i58 = icmp eq i32 %357, 0, !dbg !57
  %358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %328, float 0x3FE62E4300000000, float %.05.i57) #5, !dbg !57
  %359 = tail call float @llvm.nvvm.fma.rn.f(float %328, float 0x3FE62E4300000000, float %.05.i57) #5, !dbg !57
  %.04.i59 = select i1 %.not24.i58, float %359, float %358, !dbg !57
  %360 = icmp ugt i32 %318, 2139095039, !dbg !57
  br i1 %360, label %361, label %__nv_log1pf.exit66, !dbg !57

361:                                              ; preds = %__nv_log1pf.exit35
  %362 = icmp sgt i32 %318, -1082130432, !dbg !57
  br i1 %362, label %__nv_fmaf_rn.exit.i63, label %366, !dbg !57

__nv_fmaf_rn.exit.i63:                            ; preds = %361
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not25.i64 = icmp eq i32 %363, 0, !dbg !57
  %364 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %189, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %365 = tail call float @llvm.nvvm.fma.rn.f(float %189, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %.03.i65 = select i1 %.not25.i64, float %365, float %364, !dbg !57
  br label %366, !dbg !57

366:                                              ; preds = %__nv_fmaf_rn.exit.i63, %361
  %r.0.i61 = phi float [ %.03.i65, %__nv_fmaf_rn.exit.i63 ], [ %.04.i59, %361 ], !dbg !57
  %367 = fcmp oeq float %189, 0.000000e+00, !dbg !57
  %r.1.i62 = select i1 %367, float -0.000000e+00, float %r.0.i61, !dbg !57
  br label %__nv_log1pf.exit66, !dbg !57

__nv_log1pf.exit66:                               ; preds = %__nv_log1pf.exit35, %366
  %r.2.i60 = phi float [ %r.1.i62, %366 ], [ %.04.i59, %__nv_log1pf.exit35 ], !dbg !57
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not.i67 = icmp eq i32 %368, 0, !dbg !57
  %369 = tail call float @llvm.nvvm.add.rz.ftz.f(float %191, float 1.000000e+00) #5, !dbg !57
  %370 = tail call float @llvm.nvvm.add.rz.f(float %191, float 1.000000e+00) #5, !dbg !57
  %.01.i68 = select i1 %.not.i67, float %370, float %369, !dbg !57
  %371 = bitcast float %.01.i68 to i32, !dbg !57
  %372 = add i32 %371, -1061158912, !dbg !57
  %373 = and i32 %372, -8388608, !dbg !57
  %374 = bitcast float %191 to i32, !dbg !57
  %375 = sub i32 %374, %373, !dbg !57
  %376 = bitcast i32 %375 to float, !dbg !57
  %377 = sub i32 1082130432, %373, !dbg !57
  %378 = bitcast i32 %377 to float, !dbg !57
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not14.i69 = icmp eq i32 %379, 0, !dbg !57
  %380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %378, float -1.000000e+00) #5, !dbg !57
  %381 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %378, float -1.000000e+00) #5, !dbg !57
  %.09.i70 = select i1 %.not14.i69, float %381, float %380, !dbg !57
  %382 = fadd float %.09.i70, %376, !dbg !57
  %383 = sitofp i32 %373 to float, !dbg !57
  %384 = fmul float %383, 0x3E80000000000000, !dbg !57
  %385 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not15.i71 = icmp eq i32 %385, 0, !dbg !57
  %386 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %382, float 0x3FBB000240000000) #5, !dbg !57
  %387 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %382, float 0x3FBB000240000000) #5, !dbg !57
  %.012.i72 = select i1 %.not15.i71, float %387, float %386, !dbg !57
  %388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not16.i73 = icmp eq i32 %388, 0, !dbg !57
  %389 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i72, float %382, float 0xBFC0EF1C00000000) #5, !dbg !57
  %390 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i72, float %382, float 0xBFC0EF1C00000000) #5, !dbg !57
  %.010.i74 = select i1 %.not16.i73, float %390, float %389, !dbg !57
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not17.i75 = icmp eq i32 %391, 0, !dbg !57
  %392 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i74, float %382, float 0x3FC28C8EA0000000) #5, !dbg !57
  %393 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i74, float %382, float 0x3FC28C8EA0000000) #5, !dbg !57
  %.06.i76 = select i1 %.not17.i75, float %393, float %392, !dbg !57
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not18.i77 = icmp eq i32 %394, 0, !dbg !57
  %395 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i76, float %382, float 0xBFC54D1BA0000000) #5, !dbg !57
  %396 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i76, float %382, float 0xBFC54D1BA0000000) #5, !dbg !57
  %.02.i78 = select i1 %.not18.i77, float %396, float %395, !dbg !57
  %397 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not19.i79 = icmp eq i32 %397, 0, !dbg !57
  %398 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i78, float %382, float 0x3FC995F3C0000000) #5, !dbg !57
  %399 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i78, float %382, float 0x3FC995F3C0000000) #5, !dbg !57
  %.0.i80 = select i1 %.not19.i79, float %399, float %398, !dbg !57
  %400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not20.i81 = icmp eq i32 %400, 0, !dbg !57
  %401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i80, float %382, float 0xBFD0000840000000) #5, !dbg !57
  %402 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i80, float %382, float 0xBFD0000840000000) #5, !dbg !57
  %.011.i82 = select i1 %.not20.i81, float %402, float %401, !dbg !57
  %403 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not21.i83 = icmp eq i32 %403, 0, !dbg !57
  %404 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i82, float %382, float 0x3FD5555CC0000000) #5, !dbg !57
  %405 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i82, float %382, float 0x3FD5555CC0000000) #5, !dbg !57
  %.08.i84 = select i1 %.not21.i83, float %405, float %404, !dbg !57
  %406 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not22.i85 = icmp eq i32 %406, 0, !dbg !57
  %407 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i84, float %382, float -5.000000e-01) #5, !dbg !57
  %408 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i84, float %382, float -5.000000e-01) #5, !dbg !57
  %.07.i86 = select i1 %.not22.i85, float %408, float %407, !dbg !57
  %409 = fmul float %382, %.07.i86, !dbg !57
  %410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not23.i87 = icmp eq i32 %410, 0, !dbg !57
  %411 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %409, float %382, float %382) #5, !dbg !57
  %412 = tail call float @llvm.nvvm.fma.rn.f(float %409, float %382, float %382) #5, !dbg !57
  %.05.i88 = select i1 %.not23.i87, float %412, float %411, !dbg !57
  %413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not24.i89 = icmp eq i32 %413, 0, !dbg !57
  %414 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %384, float 0x3FE62E4300000000, float %.05.i88) #5, !dbg !57
  %415 = tail call float @llvm.nvvm.fma.rn.f(float %384, float 0x3FE62E4300000000, float %.05.i88) #5, !dbg !57
  %.04.i90 = select i1 %.not24.i89, float %415, float %414, !dbg !57
  %416 = icmp ugt i32 %374, 2139095039, !dbg !57
  br i1 %416, label %417, label %__nv_log1pf.exit97, !dbg !57

417:                                              ; preds = %__nv_log1pf.exit66
  %418 = icmp sgt i32 %374, -1082130432, !dbg !57
  br i1 %418, label %__nv_fmaf_rn.exit.i94, label %422, !dbg !57

__nv_fmaf_rn.exit.i94:                            ; preds = %417
  %419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not25.i95 = icmp eq i32 %419, 0, !dbg !57
  %420 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %191, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %421 = tail call float @llvm.nvvm.fma.rn.f(float %191, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %.03.i96 = select i1 %.not25.i95, float %421, float %420, !dbg !57
  br label %422, !dbg !57

422:                                              ; preds = %__nv_fmaf_rn.exit.i94, %417
  %r.0.i92 = phi float [ %.03.i96, %__nv_fmaf_rn.exit.i94 ], [ %.04.i90, %417 ], !dbg !57
  %423 = fcmp oeq float %191, 0.000000e+00, !dbg !57
  %r.1.i93 = select i1 %423, float -0.000000e+00, float %r.0.i92, !dbg !57
  br label %__nv_log1pf.exit97, !dbg !57

__nv_log1pf.exit97:                               ; preds = %__nv_log1pf.exit66, %422
  %r.2.i91 = phi float [ %r.1.i93, %422 ], [ %.04.i90, %__nv_log1pf.exit66 ], !dbg !57
  %424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not.i98 = icmp eq i32 %424, 0, !dbg !57
  %425 = tail call float @llvm.nvvm.add.rz.ftz.f(float %193, float 1.000000e+00) #5, !dbg !57
  %426 = tail call float @llvm.nvvm.add.rz.f(float %193, float 1.000000e+00) #5, !dbg !57
  %.01.i99 = select i1 %.not.i98, float %426, float %425, !dbg !57
  %427 = bitcast float %.01.i99 to i32, !dbg !57
  %428 = add i32 %427, -1061158912, !dbg !57
  %429 = and i32 %428, -8388608, !dbg !57
  %430 = bitcast float %193 to i32, !dbg !57
  %431 = sub i32 %430, %429, !dbg !57
  %432 = bitcast i32 %431 to float, !dbg !57
  %433 = sub i32 1082130432, %429, !dbg !57
  %434 = bitcast i32 %433 to float, !dbg !57
  %435 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not14.i100 = icmp eq i32 %435, 0, !dbg !57
  %436 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %434, float -1.000000e+00) #5, !dbg !57
  %437 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %434, float -1.000000e+00) #5, !dbg !57
  %.09.i101 = select i1 %.not14.i100, float %437, float %436, !dbg !57
  %438 = fadd float %.09.i101, %432, !dbg !57
  %439 = sitofp i32 %429 to float, !dbg !57
  %440 = fmul float %439, 0x3E80000000000000, !dbg !57
  %441 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not15.i102 = icmp eq i32 %441, 0, !dbg !57
  %442 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %438, float 0x3FBB000240000000) #5, !dbg !57
  %443 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %438, float 0x3FBB000240000000) #5, !dbg !57
  %.012.i103 = select i1 %.not15.i102, float %443, float %442, !dbg !57
  %444 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not16.i104 = icmp eq i32 %444, 0, !dbg !57
  %445 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i103, float %438, float 0xBFC0EF1C00000000) #5, !dbg !57
  %446 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i103, float %438, float 0xBFC0EF1C00000000) #5, !dbg !57
  %.010.i105 = select i1 %.not16.i104, float %446, float %445, !dbg !57
  %447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not17.i106 = icmp eq i32 %447, 0, !dbg !57
  %448 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i105, float %438, float 0x3FC28C8EA0000000) #5, !dbg !57
  %449 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i105, float %438, float 0x3FC28C8EA0000000) #5, !dbg !57
  %.06.i107 = select i1 %.not17.i106, float %449, float %448, !dbg !57
  %450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not18.i108 = icmp eq i32 %450, 0, !dbg !57
  %451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i107, float %438, float 0xBFC54D1BA0000000) #5, !dbg !57
  %452 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i107, float %438, float 0xBFC54D1BA0000000) #5, !dbg !57
  %.02.i109 = select i1 %.not18.i108, float %452, float %451, !dbg !57
  %453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not19.i110 = icmp eq i32 %453, 0, !dbg !57
  %454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i109, float %438, float 0x3FC995F3C0000000) #5, !dbg !57
  %455 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i109, float %438, float 0x3FC995F3C0000000) #5, !dbg !57
  %.0.i111 = select i1 %.not19.i110, float %455, float %454, !dbg !57
  %456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not20.i112 = icmp eq i32 %456, 0, !dbg !57
  %457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i111, float %438, float 0xBFD0000840000000) #5, !dbg !57
  %458 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i111, float %438, float 0xBFD0000840000000) #5, !dbg !57
  %.011.i113 = select i1 %.not20.i112, float %458, float %457, !dbg !57
  %459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not21.i114 = icmp eq i32 %459, 0, !dbg !57
  %460 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i113, float %438, float 0x3FD5555CC0000000) #5, !dbg !57
  %461 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i113, float %438, float 0x3FD5555CC0000000) #5, !dbg !57
  %.08.i115 = select i1 %.not21.i114, float %461, float %460, !dbg !57
  %462 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not22.i116 = icmp eq i32 %462, 0, !dbg !57
  %463 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i115, float %438, float -5.000000e-01) #5, !dbg !57
  %464 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i115, float %438, float -5.000000e-01) #5, !dbg !57
  %.07.i117 = select i1 %.not22.i116, float %464, float %463, !dbg !57
  %465 = fmul float %438, %.07.i117, !dbg !57
  %466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not23.i118 = icmp eq i32 %466, 0, !dbg !57
  %467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %465, float %438, float %438) #5, !dbg !57
  %468 = tail call float @llvm.nvvm.fma.rn.f(float %465, float %438, float %438) #5, !dbg !57
  %.05.i119 = select i1 %.not23.i118, float %468, float %467, !dbg !57
  %469 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not24.i120 = icmp eq i32 %469, 0, !dbg !57
  %470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %440, float 0x3FE62E4300000000, float %.05.i119) #5, !dbg !57
  %471 = tail call float @llvm.nvvm.fma.rn.f(float %440, float 0x3FE62E4300000000, float %.05.i119) #5, !dbg !57
  %.04.i121 = select i1 %.not24.i120, float %471, float %470, !dbg !57
  %472 = icmp ugt i32 %430, 2139095039, !dbg !57
  br i1 %472, label %473, label %__nv_log1pf.exit128, !dbg !57

473:                                              ; preds = %__nv_log1pf.exit97
  %474 = icmp sgt i32 %430, -1082130432, !dbg !57
  br i1 %474, label %__nv_fmaf_rn.exit.i125, label %478, !dbg !57

__nv_fmaf_rn.exit.i125:                           ; preds = %473
  %475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not25.i126 = icmp eq i32 %475, 0, !dbg !57
  %476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %193, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %477 = tail call float @llvm.nvvm.fma.rn.f(float %193, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %.03.i127 = select i1 %.not25.i126, float %477, float %476, !dbg !57
  br label %478, !dbg !57

478:                                              ; preds = %__nv_fmaf_rn.exit.i125, %473
  %r.0.i123 = phi float [ %.03.i127, %__nv_fmaf_rn.exit.i125 ], [ %.04.i121, %473 ], !dbg !57
  %479 = fcmp oeq float %193, 0.000000e+00, !dbg !57
  %r.1.i124 = select i1 %479, float -0.000000e+00, float %r.0.i123, !dbg !57
  br label %__nv_log1pf.exit128, !dbg !57

__nv_log1pf.exit128:                              ; preds = %__nv_log1pf.exit97, %478
  %r.2.i122 = phi float [ %r.1.i124, %478 ], [ %.04.i121, %__nv_log1pf.exit97 ], !dbg !57
  %480 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not.i129 = icmp eq i32 %480, 0, !dbg !57
  %481 = tail call float @llvm.nvvm.add.rz.ftz.f(float %195, float 1.000000e+00) #5, !dbg !57
  %482 = tail call float @llvm.nvvm.add.rz.f(float %195, float 1.000000e+00) #5, !dbg !57
  %.01.i130 = select i1 %.not.i129, float %482, float %481, !dbg !57
  %483 = bitcast float %.01.i130 to i32, !dbg !57
  %484 = add i32 %483, -1061158912, !dbg !57
  %485 = and i32 %484, -8388608, !dbg !57
  %486 = bitcast float %195 to i32, !dbg !57
  %487 = sub i32 %486, %485, !dbg !57
  %488 = bitcast i32 %487 to float, !dbg !57
  %489 = sub i32 1082130432, %485, !dbg !57
  %490 = bitcast i32 %489 to float, !dbg !57
  %491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not14.i131 = icmp eq i32 %491, 0, !dbg !57
  %492 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %490, float -1.000000e+00) #5, !dbg !57
  %493 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %490, float -1.000000e+00) #5, !dbg !57
  %.09.i132 = select i1 %.not14.i131, float %493, float %492, !dbg !57
  %494 = fadd float %.09.i132, %488, !dbg !57
  %495 = sitofp i32 %485 to float, !dbg !57
  %496 = fmul float %495, 0x3E80000000000000, !dbg !57
  %497 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not15.i133 = icmp eq i32 %497, 0, !dbg !57
  %498 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %494, float 0x3FBB000240000000) #5, !dbg !57
  %499 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %494, float 0x3FBB000240000000) #5, !dbg !57
  %.012.i134 = select i1 %.not15.i133, float %499, float %498, !dbg !57
  %500 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not16.i135 = icmp eq i32 %500, 0, !dbg !57
  %501 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i134, float %494, float 0xBFC0EF1C00000000) #5, !dbg !57
  %502 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i134, float %494, float 0xBFC0EF1C00000000) #5, !dbg !57
  %.010.i136 = select i1 %.not16.i135, float %502, float %501, !dbg !57
  %503 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not17.i137 = icmp eq i32 %503, 0, !dbg !57
  %504 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i136, float %494, float 0x3FC28C8EA0000000) #5, !dbg !57
  %505 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i136, float %494, float 0x3FC28C8EA0000000) #5, !dbg !57
  %.06.i138 = select i1 %.not17.i137, float %505, float %504, !dbg !57
  %506 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not18.i139 = icmp eq i32 %506, 0, !dbg !57
  %507 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i138, float %494, float 0xBFC54D1BA0000000) #5, !dbg !57
  %508 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i138, float %494, float 0xBFC54D1BA0000000) #5, !dbg !57
  %.02.i140 = select i1 %.not18.i139, float %508, float %507, !dbg !57
  %509 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not19.i141 = icmp eq i32 %509, 0, !dbg !57
  %510 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i140, float %494, float 0x3FC995F3C0000000) #5, !dbg !57
  %511 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i140, float %494, float 0x3FC995F3C0000000) #5, !dbg !57
  %.0.i142 = select i1 %.not19.i141, float %511, float %510, !dbg !57
  %512 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not20.i143 = icmp eq i32 %512, 0, !dbg !57
  %513 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i142, float %494, float 0xBFD0000840000000) #5, !dbg !57
  %514 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i142, float %494, float 0xBFD0000840000000) #5, !dbg !57
  %.011.i144 = select i1 %.not20.i143, float %514, float %513, !dbg !57
  %515 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not21.i145 = icmp eq i32 %515, 0, !dbg !57
  %516 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i144, float %494, float 0x3FD5555CC0000000) #5, !dbg !57
  %517 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i144, float %494, float 0x3FD5555CC0000000) #5, !dbg !57
  %.08.i146 = select i1 %.not21.i145, float %517, float %516, !dbg !57
  %518 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not22.i147 = icmp eq i32 %518, 0, !dbg !57
  %519 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i146, float %494, float -5.000000e-01) #5, !dbg !57
  %520 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i146, float %494, float -5.000000e-01) #5, !dbg !57
  %.07.i148 = select i1 %.not22.i147, float %520, float %519, !dbg !57
  %521 = fmul float %494, %.07.i148, !dbg !57
  %522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not23.i149 = icmp eq i32 %522, 0, !dbg !57
  %523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %521, float %494, float %494) #5, !dbg !57
  %524 = tail call float @llvm.nvvm.fma.rn.f(float %521, float %494, float %494) #5, !dbg !57
  %.05.i150 = select i1 %.not23.i149, float %524, float %523, !dbg !57
  %525 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not24.i151 = icmp eq i32 %525, 0, !dbg !57
  %526 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %496, float 0x3FE62E4300000000, float %.05.i150) #5, !dbg !57
  %527 = tail call float @llvm.nvvm.fma.rn.f(float %496, float 0x3FE62E4300000000, float %.05.i150) #5, !dbg !57
  %.04.i152 = select i1 %.not24.i151, float %527, float %526, !dbg !57
  %528 = icmp ugt i32 %486, 2139095039, !dbg !57
  br i1 %528, label %529, label %__nv_log1pf.exit159, !dbg !57

529:                                              ; preds = %__nv_log1pf.exit128
  %530 = icmp sgt i32 %486, -1082130432, !dbg !57
  br i1 %530, label %__nv_fmaf_rn.exit.i156, label %534, !dbg !57

__nv_fmaf_rn.exit.i156:                           ; preds = %529
  %531 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not25.i157 = icmp eq i32 %531, 0, !dbg !57
  %532 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %195, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %533 = tail call float @llvm.nvvm.fma.rn.f(float %195, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %.03.i158 = select i1 %.not25.i157, float %533, float %532, !dbg !57
  br label %534, !dbg !57

534:                                              ; preds = %__nv_fmaf_rn.exit.i156, %529
  %r.0.i154 = phi float [ %.03.i158, %__nv_fmaf_rn.exit.i156 ], [ %.04.i152, %529 ], !dbg !57
  %535 = fcmp oeq float %195, 0.000000e+00, !dbg !57
  %r.1.i155 = select i1 %535, float -0.000000e+00, float %r.0.i154, !dbg !57
  br label %__nv_log1pf.exit159, !dbg !57

__nv_log1pf.exit159:                              ; preds = %__nv_log1pf.exit128, %534
  %r.2.i153 = phi float [ %r.1.i155, %534 ], [ %.04.i152, %__nv_log1pf.exit128 ], !dbg !57
  %536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not.i160 = icmp eq i32 %536, 0, !dbg !57
  %537 = tail call float @llvm.nvvm.add.rz.ftz.f(float %197, float 1.000000e+00) #5, !dbg !57
  %538 = tail call float @llvm.nvvm.add.rz.f(float %197, float 1.000000e+00) #5, !dbg !57
  %.01.i161 = select i1 %.not.i160, float %538, float %537, !dbg !57
  %539 = bitcast float %.01.i161 to i32, !dbg !57
  %540 = add i32 %539, -1061158912, !dbg !57
  %541 = and i32 %540, -8388608, !dbg !57
  %542 = bitcast float %197 to i32, !dbg !57
  %543 = sub i32 %542, %541, !dbg !57
  %544 = bitcast i32 %543 to float, !dbg !57
  %545 = sub i32 1082130432, %541, !dbg !57
  %546 = bitcast i32 %545 to float, !dbg !57
  %547 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not14.i162 = icmp eq i32 %547, 0, !dbg !57
  %548 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %546, float -1.000000e+00) #5, !dbg !57
  %549 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %546, float -1.000000e+00) #5, !dbg !57
  %.09.i163 = select i1 %.not14.i162, float %549, float %548, !dbg !57
  %550 = fadd float %.09.i163, %544, !dbg !57
  %551 = sitofp i32 %541 to float, !dbg !57
  %552 = fmul float %551, 0x3E80000000000000, !dbg !57
  %553 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not15.i164 = icmp eq i32 %553, 0, !dbg !57
  %554 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %550, float 0x3FBB000240000000) #5, !dbg !57
  %555 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %550, float 0x3FBB000240000000) #5, !dbg !57
  %.012.i165 = select i1 %.not15.i164, float %555, float %554, !dbg !57
  %556 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not16.i166 = icmp eq i32 %556, 0, !dbg !57
  %557 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i165, float %550, float 0xBFC0EF1C00000000) #5, !dbg !57
  %558 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i165, float %550, float 0xBFC0EF1C00000000) #5, !dbg !57
  %.010.i167 = select i1 %.not16.i166, float %558, float %557, !dbg !57
  %559 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not17.i168 = icmp eq i32 %559, 0, !dbg !57
  %560 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i167, float %550, float 0x3FC28C8EA0000000) #5, !dbg !57
  %561 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i167, float %550, float 0x3FC28C8EA0000000) #5, !dbg !57
  %.06.i169 = select i1 %.not17.i168, float %561, float %560, !dbg !57
  %562 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not18.i170 = icmp eq i32 %562, 0, !dbg !57
  %563 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i169, float %550, float 0xBFC54D1BA0000000) #5, !dbg !57
  %564 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i169, float %550, float 0xBFC54D1BA0000000) #5, !dbg !57
  %.02.i171 = select i1 %.not18.i170, float %564, float %563, !dbg !57
  %565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not19.i172 = icmp eq i32 %565, 0, !dbg !57
  %566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i171, float %550, float 0x3FC995F3C0000000) #5, !dbg !57
  %567 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i171, float %550, float 0x3FC995F3C0000000) #5, !dbg !57
  %.0.i173 = select i1 %.not19.i172, float %567, float %566, !dbg !57
  %568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not20.i174 = icmp eq i32 %568, 0, !dbg !57
  %569 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i173, float %550, float 0xBFD0000840000000) #5, !dbg !57
  %570 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i173, float %550, float 0xBFD0000840000000) #5, !dbg !57
  %.011.i175 = select i1 %.not20.i174, float %570, float %569, !dbg !57
  %571 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not21.i176 = icmp eq i32 %571, 0, !dbg !57
  %572 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i175, float %550, float 0x3FD5555CC0000000) #5, !dbg !57
  %573 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i175, float %550, float 0x3FD5555CC0000000) #5, !dbg !57
  %.08.i177 = select i1 %.not21.i176, float %573, float %572, !dbg !57
  %574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not22.i178 = icmp eq i32 %574, 0, !dbg !57
  %575 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i177, float %550, float -5.000000e-01) #5, !dbg !57
  %576 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i177, float %550, float -5.000000e-01) #5, !dbg !57
  %.07.i179 = select i1 %.not22.i178, float %576, float %575, !dbg !57
  %577 = fmul float %550, %.07.i179, !dbg !57
  %578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not23.i180 = icmp eq i32 %578, 0, !dbg !57
  %579 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %577, float %550, float %550) #5, !dbg !57
  %580 = tail call float @llvm.nvvm.fma.rn.f(float %577, float %550, float %550) #5, !dbg !57
  %.05.i181 = select i1 %.not23.i180, float %580, float %579, !dbg !57
  %581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not24.i182 = icmp eq i32 %581, 0, !dbg !57
  %582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %552, float 0x3FE62E4300000000, float %.05.i181) #5, !dbg !57
  %583 = tail call float @llvm.nvvm.fma.rn.f(float %552, float 0x3FE62E4300000000, float %.05.i181) #5, !dbg !57
  %.04.i183 = select i1 %.not24.i182, float %583, float %582, !dbg !57
  %584 = icmp ugt i32 %542, 2139095039, !dbg !57
  br i1 %584, label %585, label %__nv_log1pf.exit190, !dbg !57

585:                                              ; preds = %__nv_log1pf.exit159
  %586 = icmp sgt i32 %542, -1082130432, !dbg !57
  br i1 %586, label %__nv_fmaf_rn.exit.i187, label %590, !dbg !57

__nv_fmaf_rn.exit.i187:                           ; preds = %585
  %587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not25.i188 = icmp eq i32 %587, 0, !dbg !57
  %588 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %197, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %589 = tail call float @llvm.nvvm.fma.rn.f(float %197, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %.03.i189 = select i1 %.not25.i188, float %589, float %588, !dbg !57
  br label %590, !dbg !57

590:                                              ; preds = %__nv_fmaf_rn.exit.i187, %585
  %r.0.i185 = phi float [ %.03.i189, %__nv_fmaf_rn.exit.i187 ], [ %.04.i183, %585 ], !dbg !57
  %591 = fcmp oeq float %197, 0.000000e+00, !dbg !57
  %r.1.i186 = select i1 %591, float -0.000000e+00, float %r.0.i185, !dbg !57
  br label %__nv_log1pf.exit190, !dbg !57

__nv_log1pf.exit190:                              ; preds = %__nv_log1pf.exit159, %590
  %r.2.i184 = phi float [ %r.1.i186, %590 ], [ %.04.i183, %__nv_log1pf.exit159 ], !dbg !57
  %592 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not.i191 = icmp eq i32 %592, 0, !dbg !57
  %593 = tail call float @llvm.nvvm.add.rz.ftz.f(float %199, float 1.000000e+00) #5, !dbg !57
  %594 = tail call float @llvm.nvvm.add.rz.f(float %199, float 1.000000e+00) #5, !dbg !57
  %.01.i192 = select i1 %.not.i191, float %594, float %593, !dbg !57
  %595 = bitcast float %.01.i192 to i32, !dbg !57
  %596 = add i32 %595, -1061158912, !dbg !57
  %597 = and i32 %596, -8388608, !dbg !57
  %598 = bitcast float %199 to i32, !dbg !57
  %599 = sub i32 %598, %597, !dbg !57
  %600 = bitcast i32 %599 to float, !dbg !57
  %601 = sub i32 1082130432, %597, !dbg !57
  %602 = bitcast i32 %601 to float, !dbg !57
  %603 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not14.i193 = icmp eq i32 %603, 0, !dbg !57
  %604 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %602, float -1.000000e+00) #5, !dbg !57
  %605 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %602, float -1.000000e+00) #5, !dbg !57
  %.09.i194 = select i1 %.not14.i193, float %605, float %604, !dbg !57
  %606 = fadd float %.09.i194, %600, !dbg !57
  %607 = sitofp i32 %597 to float, !dbg !57
  %608 = fmul float %607, 0x3E80000000000000, !dbg !57
  %609 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not15.i195 = icmp eq i32 %609, 0, !dbg !57
  %610 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %606, float 0x3FBB000240000000) #5, !dbg !57
  %611 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %606, float 0x3FBB000240000000) #5, !dbg !57
  %.012.i196 = select i1 %.not15.i195, float %611, float %610, !dbg !57
  %612 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not16.i197 = icmp eq i32 %612, 0, !dbg !57
  %613 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i196, float %606, float 0xBFC0EF1C00000000) #5, !dbg !57
  %614 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i196, float %606, float 0xBFC0EF1C00000000) #5, !dbg !57
  %.010.i198 = select i1 %.not16.i197, float %614, float %613, !dbg !57
  %615 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not17.i199 = icmp eq i32 %615, 0, !dbg !57
  %616 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i198, float %606, float 0x3FC28C8EA0000000) #5, !dbg !57
  %617 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i198, float %606, float 0x3FC28C8EA0000000) #5, !dbg !57
  %.06.i200 = select i1 %.not17.i199, float %617, float %616, !dbg !57
  %618 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not18.i201 = icmp eq i32 %618, 0, !dbg !57
  %619 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i200, float %606, float 0xBFC54D1BA0000000) #5, !dbg !57
  %620 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i200, float %606, float 0xBFC54D1BA0000000) #5, !dbg !57
  %.02.i202 = select i1 %.not18.i201, float %620, float %619, !dbg !57
  %621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not19.i203 = icmp eq i32 %621, 0, !dbg !57
  %622 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i202, float %606, float 0x3FC995F3C0000000) #5, !dbg !57
  %623 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i202, float %606, float 0x3FC995F3C0000000) #5, !dbg !57
  %.0.i204 = select i1 %.not19.i203, float %623, float %622, !dbg !57
  %624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not20.i205 = icmp eq i32 %624, 0, !dbg !57
  %625 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i204, float %606, float 0xBFD0000840000000) #5, !dbg !57
  %626 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i204, float %606, float 0xBFD0000840000000) #5, !dbg !57
  %.011.i206 = select i1 %.not20.i205, float %626, float %625, !dbg !57
  %627 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not21.i207 = icmp eq i32 %627, 0, !dbg !57
  %628 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i206, float %606, float 0x3FD5555CC0000000) #5, !dbg !57
  %629 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i206, float %606, float 0x3FD5555CC0000000) #5, !dbg !57
  %.08.i208 = select i1 %.not21.i207, float %629, float %628, !dbg !57
  %630 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not22.i209 = icmp eq i32 %630, 0, !dbg !57
  %631 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i208, float %606, float -5.000000e-01) #5, !dbg !57
  %632 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i208, float %606, float -5.000000e-01) #5, !dbg !57
  %.07.i210 = select i1 %.not22.i209, float %632, float %631, !dbg !57
  %633 = fmul float %606, %.07.i210, !dbg !57
  %634 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not23.i211 = icmp eq i32 %634, 0, !dbg !57
  %635 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %633, float %606, float %606) #5, !dbg !57
  %636 = tail call float @llvm.nvvm.fma.rn.f(float %633, float %606, float %606) #5, !dbg !57
  %.05.i212 = select i1 %.not23.i211, float %636, float %635, !dbg !57
  %637 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not24.i213 = icmp eq i32 %637, 0, !dbg !57
  %638 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %608, float 0x3FE62E4300000000, float %.05.i212) #5, !dbg !57
  %639 = tail call float @llvm.nvvm.fma.rn.f(float %608, float 0x3FE62E4300000000, float %.05.i212) #5, !dbg !57
  %.04.i214 = select i1 %.not24.i213, float %639, float %638, !dbg !57
  %640 = icmp ugt i32 %598, 2139095039, !dbg !57
  br i1 %640, label %641, label %__nv_log1pf.exit221, !dbg !57

641:                                              ; preds = %__nv_log1pf.exit190
  %642 = icmp sgt i32 %598, -1082130432, !dbg !57
  br i1 %642, label %__nv_fmaf_rn.exit.i218, label %646, !dbg !57

__nv_fmaf_rn.exit.i218:                           ; preds = %641
  %643 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !57
  %.not25.i219 = icmp eq i32 %643, 0, !dbg !57
  %644 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %199, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %645 = tail call float @llvm.nvvm.fma.rn.f(float %199, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !57
  %.03.i220 = select i1 %.not25.i219, float %645, float %644, !dbg !57
  br label %646, !dbg !57

646:                                              ; preds = %__nv_fmaf_rn.exit.i218, %641
  %r.0.i216 = phi float [ %.03.i220, %__nv_fmaf_rn.exit.i218 ], [ %.04.i214, %641 ], !dbg !57
  %647 = fcmp oeq float %199, 0.000000e+00, !dbg !57
  %r.1.i217 = select i1 %647, float -0.000000e+00, float %r.0.i216, !dbg !57
  br label %__nv_log1pf.exit221, !dbg !57

__nv_log1pf.exit221:                              ; preds = %__nv_log1pf.exit190, %646
  %r.2.i215 = phi float [ %r.1.i217, %646 ], [ %.04.i214, %__nv_log1pf.exit190 ], !dbg !57
  %648 = fcmp ogt float %63, 2.000000e+01, !dbg !58
  %649 = fcmp ogt float %62, 2.000000e+01, !dbg !58
  %650 = fcmp ogt float %61, 2.000000e+01, !dbg !58
  %651 = fcmp ogt float %60, 2.000000e+01, !dbg !58
  %652 = fcmp ogt float %54, 2.000000e+01, !dbg !58
  %653 = fcmp ogt float %53, 2.000000e+01, !dbg !58
  %654 = fcmp ogt float %52, 2.000000e+01, !dbg !58
  %655 = fcmp ogt float %51, 2.000000e+01, !dbg !58
  %656 = insertelement <2 x i32> poison, i32 %141, i64 0, !dbg !49
  %657 = insertelement <2 x i32> %656, i32 %183, i64 1, !dbg !49
  %658 = bitcast <2 x i32> %657 to <2 x float>, !dbg !49
  %659 = insertelement <2 x i32> poison, i32 %117, i64 0, !dbg !45
  %660 = insertelement <2 x i32> %659, i32 %165, i64 1, !dbg !45
  %661 = bitcast <2 x i32> %660 to <2 x float>, !dbg !45
  %662 = sitofp i32 %85 to float, !dbg !59
  %663 = fsub float %70, %662, !dbg !60
  %664 = fcmp ogt float %663, 0.000000e+00, !dbg !61
  %665 = select i1 %664, float %663, float 0.000000e+00, !dbg !63
  %666 = fcmp olt float %665, 1.000000e+00, !dbg !64
  %667 = select i1 %666, float %665, float 1.000000e+00, !dbg !66
  %668 = fsub <2 x float> %658, %661, !dbg !67
  %669 = insertelement <2 x float> poison, float %667, i64 0, !dbg !68
  %670 = shufflevector <2 x float> %669, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !68
  %671 = fmul <2 x float> %670, %668, !dbg !68
  %672 = fadd <2 x float> %671, %661, !dbg !69
  %673 = extractelement <2 x float> %672, i64 0, !dbg !70
  %674 = extractelement <2 x float> %672, i64 1, !dbg !71
  %675 = fsub float %673, %674, !dbg !70
  %676 = sitofp i32 %66 to float, !dbg !72
  %677 = fsub float %65, %676, !dbg !73
  %678 = fcmp ogt float %677, 0.000000e+00, !dbg !74
  %679 = select i1 %678, float %677, float 0.000000e+00, !dbg !76
  %680 = fcmp olt float %679, 1.000000e+00, !dbg !77
  %681 = select i1 %680, float %679, float 1.000000e+00, !dbg !79
  %682 = fmul float %681, %675, !dbg !80
  %683 = fadd float %674, %682, !dbg !71
  %684 = insertelement <2 x i32> poison, i32 %137, i64 0, !dbg !49
  %685 = insertelement <2 x i32> %684, i32 %179, i64 1, !dbg !49
  %686 = bitcast <2 x i32> %685 to <2 x float>, !dbg !49
  %687 = insertelement <2 x i32> poison, i32 %113, i64 0, !dbg !45
  %688 = insertelement <2 x i32> %687, i32 %161, i64 1, !dbg !45
  %689 = bitcast <2 x i32> %688 to <2 x float>, !dbg !45
  %690 = sitofp <4 x i32> %78 to <4 x float>, !dbg !72
  %691 = fsub <2 x float> %686, %689, !dbg !67
  %692 = insertelement <2 x i32> poison, i32 %133, i64 0, !dbg !49
  %693 = insertelement <2 x i32> %692, i32 %175, i64 1, !dbg !49
  %694 = bitcast <2 x i32> %693 to <2 x float>, !dbg !49
  %695 = insertelement <2 x i32> poison, i32 %109, i64 0, !dbg !45
  %696 = insertelement <2 x i32> %695, i32 %157, i64 1, !dbg !45
  %697 = bitcast <2 x i32> %696 to <2 x float>, !dbg !45
  %698 = fsub <2 x float> %694, %697, !dbg !67
  %699 = fsub <4 x float> %77, %690, !dbg !73
  %700 = fcmp ogt <4 x float> %699, zeroinitializer, !dbg !74
  %701 = select <4 x i1> %700, <4 x float> %699, <4 x float> zeroinitializer, !dbg !76
  %702 = fcmp olt <4 x float> %701, splat (float 1.000000e+00), !dbg !77
  %703 = extractelement <4 x i1> %702, i64 3, !dbg !66
  %704 = extractelement <4 x float> %701, i64 3, !dbg !66
  %705 = select i1 %703, float %704, float 1.000000e+00, !dbg !66
  %706 = insertelement <2 x float> poison, float %705, i64 0, !dbg !68
  %707 = shufflevector <2 x float> %706, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !68
  %708 = fmul <2 x float> %707, %691, !dbg !68
  %709 = fadd <2 x float> %708, %689, !dbg !69
  %710 = extractelement <2 x float> %709, i64 0, !dbg !70
  %711 = extractelement <2 x float> %709, i64 1, !dbg !71
  %712 = fsub float %710, %711, !dbg !70
  %713 = extractelement <4 x i1> %702, i64 2, !dbg !79
  %714 = extractelement <4 x float> %701, i64 2, !dbg !79
  %715 = select i1 %713, float %714, float 1.000000e+00, !dbg !79
  %716 = fmul float %715, %712, !dbg !80
  %717 = fadd float %711, %716, !dbg !71
  %718 = extractelement <4 x i1> %702, i64 1, !dbg !66
  %719 = extractelement <4 x float> %701, i64 1, !dbg !66
  %720 = select i1 %718, float %719, float 1.000000e+00, !dbg !66
  %721 = insertelement <2 x float> poison, float %720, i64 0, !dbg !68
  %722 = shufflevector <2 x float> %721, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !68
  %723 = fmul <2 x float> %722, %698, !dbg !68
  %724 = fadd <2 x float> %723, %697, !dbg !69
  %725 = extractelement <2 x float> %724, i64 0, !dbg !70
  %726 = extractelement <2 x float> %724, i64 1, !dbg !71
  %727 = fsub float %725, %726, !dbg !70
  %728 = extractelement <4 x i1> %702, i64 0, !dbg !79
  %729 = extractelement <4 x float> %701, i64 0, !dbg !79
  %730 = select i1 %728, float %729, float 1.000000e+00, !dbg !79
  %731 = fmul float %730, %727, !dbg !80
  %732 = fadd float %726, %731, !dbg !71
  %733 = select i1 %655, float %51, float %r.2.i, !dbg !81
  %734 = select i1 %654, float %52, float %r.2.i29, !dbg !81
  %735 = select i1 %653, float %53, float %r.2.i60, !dbg !81
  %736 = select i1 %652, float %54, float %r.2.i91, !dbg !81
  %737 = select i1 %651, float %60, float %r.2.i122, !dbg !81
  %738 = select i1 %650, float %61, float %r.2.i153, !dbg !81
  %739 = select i1 %649, float %62, float %r.2.i184, !dbg !81
  %740 = select i1 %648, float %63, float %r.2.i215, !dbg !81
  %741 = fsub float %733, %717, !dbg !82
  %742 = fsub float %734, %717, !dbg !82
  %743 = fsub float %735, %717, !dbg !82
  %744 = fsub float %736, %717, !dbg !82
  %745 = fsub float %737, %683, !dbg !82
  %746 = fsub float %738, %683, !dbg !82
  %747 = fsub float %739, %683, !dbg !82
  %748 = fsub float %740, %683, !dbg !82
  %749 = fmul float %741, %741, !dbg !83
  %750 = fmul float %742, %742, !dbg !83
  %751 = fmul float %743, %743, !dbg !83
  %752 = fmul float %744, %744, !dbg !83
  %753 = fmul float %745, %745, !dbg !83
  %754 = fmul float %746, %746, !dbg !83
  %755 = fmul float %747, %747, !dbg !83
  %756 = fmul float %748, %748, !dbg !83
  %757 = fmul float %749, -3.000000e+02, !dbg !84
  %758 = fmul float %750, -3.000000e+02, !dbg !84
  %759 = fmul float %751, -3.000000e+02, !dbg !84
  %760 = fmul float %752, -3.000000e+02, !dbg !84
  %761 = fmul float %753, -3.000000e+02, !dbg !84
  %762 = fmul float %754, -3.000000e+02, !dbg !84
  %763 = fmul float %755, -3.000000e+02, !dbg !84
  %764 = fmul float %756, -3.000000e+02, !dbg !84
  %765 = fmul float %757, 0x3FF7154760000000, !dbg !85
  %766 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %765) #5, !dbg !85
  %767 = fmul float %758, 0x3FF7154760000000, !dbg !85
  %768 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %767) #5, !dbg !85
  %769 = fmul float %759, 0x3FF7154760000000, !dbg !85
  %770 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %769) #5, !dbg !85
  %771 = fmul float %760, 0x3FF7154760000000, !dbg !85
  %772 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %771) #5, !dbg !85
  %773 = fmul float %761, 0x3FF7154760000000, !dbg !85
  %774 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %773) #5, !dbg !85
  %775 = fmul float %762, 0x3FF7154760000000, !dbg !85
  %776 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %775) #5, !dbg !85
  %777 = fmul float %763, 0x3FF7154760000000, !dbg !85
  %778 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %777) #5, !dbg !85
  %779 = fmul float %764, 0x3FF7154760000000, !dbg !85
  %780 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %779) #5, !dbg !85
  %781 = fmul float %741, %766, !dbg !86
  %782 = fmul float %742, %768, !dbg !86
  %783 = fmul float %743, %770, !dbg !86
  %784 = fmul float %744, %772, !dbg !86
  %785 = fmul float %745, %774, !dbg !86
  %786 = fmul float %746, %776, !dbg !86
  %787 = fmul float %747, %778, !dbg !86
  %788 = fmul float %748, %780, !dbg !86
  %789 = fadd float %781, %782, !dbg !87
  %790 = fadd float %789, %783, !dbg !87
  %791 = fadd float %790, %784, !dbg !87
  %792 = select i1 %17, float %791, float 0.000000e+00, !dbg !87
  %793 = fadd float %785, %786, !dbg !87
  %794 = fadd float %793, %787, !dbg !87
  %795 = fadd float %794, %788, !dbg !87
  %796 = select i1 %18, float %795, float 0.000000e+00, !dbg !87
  %797 = bitcast float %792 to i32, !dbg !92
  %798 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %797, i32 2, i32 31), !dbg !92
  %799 = bitcast i32 %798 to float, !dbg !92
  %800 = fadd float %792, %799, !dbg !87
  %801 = bitcast float %800 to i32, !dbg !92
  %802 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %801, i32 1, i32 31), !dbg !92
  %803 = bitcast i32 %802 to float, !dbg !92
  %804 = fadd float %800, %803, !dbg !87
  %805 = bitcast float %796 to i32, !dbg !92
  %806 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %805, i32 2, i32 31), !dbg !92
  %807 = bitcast i32 %806 to float, !dbg !92
  %808 = fadd float %796, %807, !dbg !87
  %809 = bitcast float %808 to i32, !dbg !92
  %810 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %809, i32 1, i32 31), !dbg !92
  %811 = bitcast i32 %810 to float, !dbg !92
  %812 = fadd float %808, %811, !dbg !87
  %813 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %11, !dbg !93
  %814 = bitcast float %804 to <1 x i32>, !dbg !93
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %813, <1 x i32> %814, i1 true) #5, !dbg !93
  %815 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %12, !dbg !93
  %816 = bitcast float %812 to <1 x i32>, !dbg !93
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %815, <1 x i32> %816, i1 true) #5, !dbg !93
  tail call void @llvm.nvvm.barrier0(), !dbg !93
  %817 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %13, !dbg !93
  %818 = load float, ptr addrspace(3) %817, align 4, !dbg !93
  %819 = fadd float %732, %818, !dbg !93
  tail call void @llvm.nvvm.barrier0(), !dbg !94
  %820 = sext i32 %16 to i64, !dbg !95
  %821 = getelementptr float, ptr addrspace(1) %0, i64 %820, !dbg !95
  %822 = and i32 %9, 128, !dbg !96
  %823 = icmp eq i32 %822, 0, !dbg !96
  %824 = bitcast float %732 to i32, !dbg !96
  %825 = and i1 %823, %19, !dbg !96
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %824, ptr addrspace(1) %821, i1 %825) #5, !dbg !96
  tail call void @llvm.nvvm.barrier0(), !dbg !97
  %826 = getelementptr float, ptr addrspace(1) %1, i64 %820, !dbg !98
  %827 = bitcast float %819 to i32, !dbg !99
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %827, ptr addrspace(1) %826, i1 %825) #5, !dbg !99
  ret void, !dbg !100
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i32> @llvm.smax.v4i32(<4 x i32>, <4 x i32>) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmv6kd6j655hmzzrxm6mpooa2c2uuoanqdzqf5pfcl3sneiu4omr.py", directory: "inductor_cache/mv")
!4 = !{ptr @triton_per_fused__to_copy__unsafe_index_abs_add_arange_clamp_exp_mul_pow_sub_sum_3, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__to_copy__unsafe_index_abs_add_arange_clamp_exp_mul_pow_sub_sum_3, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__to_copy__unsafe_index_abs_add_arange_clamp_exp_mul_pow_sub_sum_3", linkageName: "triton_per_fused__to_copy__unsafe_index_abs_add_arange_clamp_exp_mul_pow_sub_sum_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 29, column: 21, scope: !7)
!17 = !DILocation(line: 29, column: 26, scope: !7)
!18 = !DILocation(line: 30, column: 19, scope: !7)
!19 = !DILocation(line: 31, column: 19, scope: !7)
!20 = !DILocation(line: 34, column: 19, scope: !7)
!21 = !DILocation(line: 35, column: 19, scope: !7)
!22 = !DILocation(line: 36, column: 39, scope: !7)
!23 = !DILocation(line: 36, column: 36, scope: !7)
!24 = !DILocation(line: 36, column: 48, scope: !7)
!25 = !DILocation(line: 36, column: 44, scope: !7)
!26 = !DILocation(line: 36, column: 31, scope: !7)
!27 = !DILocation(line: 36, column: 53, scope: !7)
!28 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !31)
!29 = distinct !DILexicalBlockFile(scope: !7, file: !30, discriminator: 0)
!30 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!31 = !DILocation(line: 42, column: 40, scope: !7)
!32 = !DILocation(line: 43, column: 19, scope: !7)
!33 = !DILocation(line: 113, column: 29, scope: !29, inlinedAt: !34)
!34 = !DILocation(line: 47, column: 41, scope: !7)
!35 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !36)
!36 = !DILocation(line: 51, column: 42, scope: !7)
!37 = !DILocation(line: 64, column: 41, scope: !7)
!38 = !DILocation(line: 52, column: 21, scope: !7)
!39 = !DILocation(line: 53, column: 41, scope: !7)
!40 = !DILocation(line: 64, column: 39, scope: !7)
!41 = !DILocation(line: 53, column: 39, scope: !7)
!42 = !DILocation(line: 53, column: 52, scope: !7)
!43 = !DILocation(line: 53, column: 49, scope: !7)
!44 = !DILocation(line: 53, column: 31, scope: !7)
!45 = !DILocation(line: 53, column: 57, scope: !7)
!46 = !DILocation(line: 113, column: 29, scope: !29, inlinedAt: !47)
!47 = !DILocation(line: 55, column: 42, scope: !7)
!48 = !DILocation(line: 56, column: 31, scope: !7)
!49 = !DILocation(line: 56, column: 57, scope: !7)
!50 = !DILocation(line: 64, column: 48, scope: !7)
!51 = !DILocation(line: 64, column: 31, scope: !7)
!52 = !DILocation(line: 64, column: 56, scope: !7)
!53 = !DILocation(line: 65, column: 39, scope: !7)
!54 = !DILocation(line: 65, column: 31, scope: !7)
!55 = !DILocation(line: 65, column: 56, scope: !7)
!56 = !DILocation(line: 79, column: 24, scope: !7)
!57 = !DILocation(line: 80, column: 28, scope: !7)
!58 = !DILocation(line: 78, column: 20, scope: !7)
!59 = !DILocation(line: 58, column: 21, scope: !7)
!60 = !DILocation(line: 59, column: 20, scope: !7)
!61 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !62)
!62 = !DILocation(line: 60, column: 42, scope: !7)
!63 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !62)
!64 = !DILocation(line: 110, column: 15, scope: !29, inlinedAt: !65)
!65 = !DILocation(line: 61, column: 42, scope: !7)
!66 = !DILocation(line: 113, column: 29, scope: !29, inlinedAt: !65)
!67 = !DILocation(line: 57, column: 20, scope: !7)
!68 = !DILocation(line: 62, column: 20, scope: !7)
!69 = !DILocation(line: 63, column: 20, scope: !7)
!70 = !DILocation(line: 69, column: 20, scope: !7)
!71 = !DILocation(line: 75, column: 20, scope: !7)
!72 = !DILocation(line: 70, column: 20, scope: !7)
!73 = !DILocation(line: 71, column: 19, scope: !7)
!74 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !75)
!75 = !DILocation(line: 72, column: 42, scope: !7)
!76 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !75)
!77 = !DILocation(line: 110, column: 15, scope: !29, inlinedAt: !78)
!78 = !DILocation(line: 73, column: 42, scope: !7)
!79 = !DILocation(line: 113, column: 29, scope: !29, inlinedAt: !78)
!80 = !DILocation(line: 74, column: 20, scope: !7)
!81 = !DILocation(line: 82, column: 35, scope: !7)
!82 = !DILocation(line: 83, column: 20, scope: !7)
!83 = !DILocation(line: 85, column: 20, scope: !7)
!84 = !DILocation(line: 87, column: 20, scope: !7)
!85 = !DILocation(line: 88, column: 24, scope: !7)
!86 = !DILocation(line: 89, column: 20, scope: !7)
!87 = !DILocation(line: 256, column: 15, scope: !88, inlinedAt: !91)
!88 = distinct !DILexicalBlockFile(scope: !90, file: !89, discriminator: 0)
!89 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!90 = distinct !DILexicalBlockFile(scope: !7, file: !89, discriminator: 0)
!91 = !DILocation(line: 92, column: 26, scope: !7)
!92 = !DILocation(line: 267, column: 36, scope: !90, inlinedAt: !91)
!93 = !DILocation(line: 93, column: 20, scope: !7)
!94 = !DILocation(line: 94, column: 4, scope: !7)
!95 = !DILocation(line: 95, column: 28, scope: !7)
!96 = !DILocation(line: 95, column: 40, scope: !7)
!97 = !DILocation(line: 96, column: 4, scope: !7)
!98 = !DILocation(line: 97, column: 28, scope: !7)
!99 = !DILocation(line: 97, column: 40, scope: !7)
!100 = !DILocation(line: 97, column: 4, scope: !7)
