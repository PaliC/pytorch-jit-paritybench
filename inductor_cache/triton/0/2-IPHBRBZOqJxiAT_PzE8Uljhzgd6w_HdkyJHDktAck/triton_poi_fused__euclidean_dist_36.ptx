//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__euclidean_dist_36 // -- Begin function triton_poi_fused__euclidean_dist_36
                                        // @triton_poi_fused__euclidean_dist_36
.visible .entry triton_poi_fused__euclidean_dist_36(
	.param .u64 .ptr .global .align 1 triton_poi_fused__euclidean_dist_36_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__euclidean_dist_36_param_1,
	.param .u32 triton_poi_fused__euclidean_dist_36_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<56>;
	.reg .f32 	%f<27>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_poi_fused__euclidean_dist_36_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused__euclidean_dist_36_param_1];
$L__tmp0:
	.loc	1 21 28                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:21:33
	shl.b32 	%r24, %r1, 8;
	.loc	1 22 36                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:22:36
	mov.u32 	%r25, %tid.x;
	shl.b32 	%r26, %r25, 1;
	and.b32  	%r27, %r26, 254;
	.loc	1 22 23                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:22:23
	or.b32  	%r28, %r24, %r27;
	or.b32  	%r29, %r28, 1;
	.loc	1 23 21                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:23:21
	setp.lt.s32 	%p21, %r28, 384;
	.loc	1 25 19                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:25:19
	mul.hi.s32 	%r31, %r28, 715827883;
	shr.u32 	%r32, %r31, 31;
	add.s32 	%r33, %r31, %r32;
	.loc	1 24 19                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:24:19
	mul.lo.s32 	%r34, %r33, 6;
	sub.s32 	%r35, %r28, %r34;
	mul.hi.s32 	%r36, %r29, 715827883;
	shr.u32 	%r37, %r36, 31;
	add.s32 	%r38, %r36, %r37;
	mul.lo.s32 	%r39, %r38, 6;
	sub.s32 	%r40, %r29, %r39;
	.loc	1 31 18                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:31:18
	setp.lt.s32 	%p22, %r35, 4;
	.loc	1 32 34                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:32:34
	shl.b32 	%r41, %r35, 4;
	shl.b32 	%r42, %r40, 4;
	.loc	1 32 50                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:32:50
	shr.u32 	%r45, %r31, 4;
	add.s32 	%r46, %r45, %r32;
	.loc	1 32 44                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:32:44
	shl.b32 	%r47, %r46, 6;
	.loc	1 32 63                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:32:63
	shr.s32 	%r48, %r33, 31;
	shr.u32 	%r49, %r48, 28;
	add.s32 	%r50, %r33, %r49;
	and.b32  	%r51, %r50, -16;
	sub.s32 	%r52, %r33, %r51;
	.loc	1 32 40                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:32:40
	add.s32 	%r53, %r52, %r47;
	.loc	1 32 58                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:32:58
	add.s32 	%r54, %r53, %r41;
	add.s32 	%r55, %r53, %r42;
	.loc	1 32 30                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:32:30
	mul.wide.s32 	%rd14, %r54, 4;
	add.s64 	%rd1, %rd12, %rd14;
	mul.wide.s32 	%rd15, %r55, 4;
	add.s64 	%rd2, %rd12, %rd15;
	.loc	1 32 77                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:32:77
	and.pred  	%p1, %p21, %p22;
	mov.b32 	%r3, 0;
	.loc	1 32 70                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:32:70
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 34 18                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:34:18
	mul.f32 	%f3, %f1, 0fC0000000;
	mul.f32 	%f4, %f2, 0fC0000000;
	.loc	1 37 20                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:37:20
	setp.gt.s32 	%p23, %r35, 3;
	.loc	1 39 19                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:39:19
	setp.lt.s32 	%p24, %r40, 5;
	.loc	1 40 20                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:40:20
	setp.eq.s32 	%p25, %r35, 4;
	and.pred  	%p26, %p24, %p23;
	.loc	1 41 31                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:41:31
	mul.wide.s32 	%rd16, %r53, 4;
	add.s64 	%rd3, %rd12, %rd16;
	.loc	1 41 69                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:41:69
	and.pred  	%p5, %p21, %p25;
	and.pred  	%p7, %p21, %p26;
	.loc	1 41 61                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:41:61
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	mov.b32 	%f5, %r6;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r8 }, [ %rd3 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	mov.b32 	%f6, %r8;
	.loc	1 43 31                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:43:31
	add.s64 	%rd5, %rd3, 64;
	.loc	1 43 66                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:43:66
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p5 mov.u32 %r10, %r3;
	// end inline asm
	mov.b32 	%f7, %r10;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r12 }, [ %rd5 + 0 ];
	@!%p7 mov.u32 %r12, %r3;
	// end inline asm
	mov.b32 	%f8, %r12;
	.loc	1 44 20                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:44:20
	mul.f32 	%f9, %f7, %f7;
	mul.f32 	%f10, %f8, %f8;
	.loc	1 45 20                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:45:20
	fma.rn.f32 	%f11, %f5, %f5, %f9;
	fma.rn.f32 	%f12, %f6, %f6, %f10;
	.loc	1 46 31                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:46:31
	add.s64 	%rd7, %rd3, 128;
	.loc	1 46 66                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:46:66
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	@!%p5 mov.u32 %r14, %r3;
	// end inline asm
	mov.b32 	%f13, %r14;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r16 }, [ %rd7 + 0 ];
	@!%p7 mov.u32 %r16, %r3;
	// end inline asm
	mov.b32 	%f14, %r16;
	.loc	1 48 20                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:48:20
	fma.rn.f32 	%f15, %f13, %f13, %f11;
	fma.rn.f32 	%f16, %f14, %f14, %f12;
	.loc	1 49 31                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:49:31
	add.s64 	%rd9, %rd3, 192;
	.loc	1 49 66                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:49:66
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r18 }, [ %rd9 + 0 ];
	@!%p5 mov.u32 %r18, %r3;
	// end inline asm
	mov.b32 	%f17, %r18;
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r20 }, [ %rd9 + 0 ];
	@!%p7 mov.u32 %r20, %r3;
	// end inline asm
	mov.b32 	%f18, %r20;
	.loc	1 51 20                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:51:20
	fma.rn.f32 	%f19, %f17, %f17, %f15;
	fma.rn.f32 	%f20, %f18, %f18, %f16;
	.loc	1 54 20                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:54:20
	setp.gt.s32 	%p27, %r35, 4;
	setp.gt.s32 	%p28, %r40, 4;
	.loc	1 59 35                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:59:35
	selp.f32 	%f21, 0f3F800000, 0f00000000, %p27;
	selp.f32 	%f22, 0f3F800000, 0f00000000, %p28;
	.loc	1 0 0                           // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:0:0
	selp.f32 	%f23, %f19, %f21, %p25;
	selp.f32 	%f24, %f20, %f22, %p26;
	selp.f32 	%f25, %f3, %f23, %p22;
	selp.f32 	%f26, %f4, %f24, %p22;
	.loc	1 62 25                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:62:25
	mul.wide.s32 	%rd17, %r28, 4;
	add.s64 	%rd11, %rd13, %rd17;
	.loc	1 62 37                         // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:62:37
	mov.b32 	%r22, %f25;
	mov.b32 	%r23, %f26;
	// begin inline asm
	@%p21 st.global.v2.b32 [ %rd11 + 0 ], { %r22, %r23 };
	// end inline asm
	.loc	1 62 4                          // cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py:62:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/nl/cnlb5cisoydgvzllniwjf6s72eltowwdggdnd77wzmt36gepz4jk.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 108
.b8 98
.b8 53
.b8 99
.b8 105
.b8 115
.b8 111
.b8 121
.b8 100
.b8 103
.b8 118
.b8 122
.b8 108
.b8 108
.b8 110
.b8 105
.b8 119
.b8 106
.b8 102
.b8 54
.b8 115
.b8 55
.b8 50
.b8 101
.b8 108
.b8 116
.b8 111
.b8 119
.b8 119
.b8 100
.b8 103
.b8 103
.b8 100
.b8 110
.b8 100
.b8 55
.b8 55
.b8 119
.b8 122
.b8 109
.b8 116
.b8 51
.b8 54
.b8 103
.b8 101
.b8 112
.b8 122
.b8 52
.b8 106
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 108
.b8 0
	}
	.section	.debug_macinfo	{	}
