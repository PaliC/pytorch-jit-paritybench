//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_9,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_10
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<23>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<66>;
	.reg .f32 	%f<31>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_1];
$L__tmp0:
	.loc	1 22 28                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:22:33
	shl.b32 	%r33, %r1, 8;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_2];
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_3];
	.loc	1 23 44                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:23:44
	mov.u32 	%r34, %tid.x;
	shl.b32 	%r35, %r34, 1;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_4];
	and.b32  	%r36, %r35, 254;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_5];
	and.b32  	%r37, %r34, 127;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_6];
	or.b32  	%r38, %r37, 128;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_7];
	.loc	1 23 23                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:23:23
	or.b32  	%r39, %r33, %r36;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_threshold_backward_8_param_8];
	or.b32  	%r40, %r33, %r37;
	or.b32  	%r41, %r33, %r38;
	.loc	1 24 21                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:24:21
	setp.lt.s32 	%p2, %r39, 512;
	setp.lt.s32 	%p16, %r40, 512;
	setp.lt.s32 	%p17, %r41, 512;
	.loc	1 25 28                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 27 21                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:27:21
	setp.lt.s32 	%p18, %r2, 16;
	.loc	1 30 19                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:30:19
	shr.s32 	%r43, %r39, 31;
	shr.u32 	%r44, %r43, 25;
	add.s32 	%r45, %r39, %r44;
	.loc	1 29 19                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:29:19
	and.b32  	%r46, %r45, -128;
	sub.s32 	%r47, %r39, %r46;
	.loc	1 32 39                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:32:39
	shl.b32 	%r48, %r2, 7;
	.loc	1 32 35                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:32:35
	add.s32 	%r49, %r47, %r48;
	.loc	1 32 49                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:32:49
	shl.b32 	%r50, %r45, 4;
	and.b32  	%r51, %r50, -2048;
	.loc	1 32 44                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:32:44
	add.s32 	%r52, %r49, %r51;
	.loc	1 32 30                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:32:30
	cvt.s64.s32 	%rd21, %r52;
	mul.wide.s32 	%rd22, %r52, 4;
	add.s64 	%rd1, %rd12, %rd22;
	.loc	1 32 62                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:32:62
	and.pred  	%p1, %p18, %p2;
	and.pred  	%p6, %p18, %p16;
	and.pred  	%p7, %p18, %p17;
	.loc	1 32 54                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:32:54
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:33:30
	mul.wide.s32 	%rd23, %r47, 4;
	add.s64 	%rd2, %rd13, %rd23;
	.loc	1 33 35                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:33:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:34:30
	add.s64 	%rd3, %rd14, %rd23;
	.loc	1 34 35                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:34:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r7, %r8 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r7;
	mov.b32 	%f2, %r8;
	.loc	1 35 31                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:35:31
	add.s64 	%rd4, %rd15, %rd23;
	.loc	1 35 36                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:35:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:36:31
	add.s64 	%rd5, %rd16, %rd23;
	.loc	1 36 36                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:36:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 37 39                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:37:39
	shl.b32 	%r53, %r40, 4;
	shl.b32 	%r54, %r41, 4;
	.loc	1 37 36                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:37:36
	add.s32 	%r55, %r53, %r2;
	add.s32 	%r56, %r54, %r2;
	.loc	1 37 31                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:37:31
	mul.wide.s32 	%rd24, %r55, 4;
	add.s64 	%rd6, %rd17, %rd24;
	mul.wide.s32 	%rd25, %r56, 4;
	add.s64 	%rd7, %rd17, %rd25;
	.loc	1 37 44                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:37:44
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r13 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 40 18                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:40:18
	add.f32 	%f3, %f1, 0f3727C5AC;
	add.f32 	%f4, %f2, 0f3727C5AC;
	.loc	1 41 26                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:41:26
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 37 44                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:37:44
	mov.b32 	%f7, %r14;
	mov.b32 	%f8, %r13;
	.loc	1 43 18                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:43:18
	mov.b32 	%r17, %f5;
	mov.b32 	%r16, 1065353216;
	// begin inline asm
	div.full.f32 %r15, %r16, %r17;
	// end inline asm
	mov.b32 	%f9, %r15;
	mov.b32 	%r20, %f6;
	// begin inline asm
	div.full.f32 %r18, %r16, %r20;
	// end inline asm
	mov.b32 	%f10, %r18;
$L__tmp1:
	.loc	2 121 29                        // triton_helpers.py:121:29
	shl.b32 	%r57, %r36, 3;
	mov.u32 	%r58, global_smem;
	add.s32 	%r21, %r58, %r57;
	add.s32 	%r23, %r21, 8;
	shl.b32 	%r59, %r37, 3;
	add.s32 	%r60, %r58, %r59;
	shl.b32 	%r61, %r38, 3;
	add.s32 	%r62, %r58, %r61;
$L__tmp2:
	.loc	1 54 25                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:54:25
	add.s64 	%rd8, %rd18, %rd24;
	add.s64 	%rd9, %rd18, %rd25;
	.loc	1 55 25                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:55:25
	add.s64 	%rd10, %rd19, %rd22;
	.loc	1 55 56                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:55:56
	shl.b32 	%r63, %r37, 2;
	sub.s32 	%r27, %r60, %r63;
	add.s32 	%r29, %r27, 512;
	shl.b32 	%r64, %r36, 2;
	sub.s32 	%r65, %r21, %r64;
	.loc	1 56 25                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:56:25
	add.s64 	%rd11, %rd20, %rd21;
	.loc	1 32 54                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:32:54
	mov.b32 	%f11, %r3;
	mov.b32 	%f12, %r4;
	.loc	1 33 35                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:33:35
	mov.b32 	%f13, %r5;
	mov.b32 	%f14, %r6;
	.loc	1 38 18                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:38:18
	sub.f32 	%f15, %f12, %f14;
	sub.f32 	%f16, %f11, %f13;
	.loc	1 36 36                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:36:36
	mov.b32 	%f17, %r11;
	mov.b32 	%f18, %r12;
	.loc	1 35 36                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:35:36
	mov.b32 	%f19, %r9;
	mov.b32 	%f20, %r10;
	.loc	1 46 19                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:46:19
	mul.f32 	%f21, %f16, %f9;
	mul.f32 	%f22, %f15, %f10;
	.loc	1 48 20                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:48:20
	fma.rn.f32 	%f23, %f22, %f20, %f18;
	fma.rn.f32 	%f24, %f21, %f19, %f17;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p19, %f24, 0f00000000;
	setp.lt.f32 	%p20, %f23, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f25, 0f00000000, %f23, %p20;
	mov.b32 	%r24, %f25;
	selp.f32 	%f26, 0f00000000, %f24, %p19;
	mov.b32 	%r22, %f26;
	mov.pred 	%p8, -1;
	// begin inline asm
	@%p8 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	// begin inline asm
	@%p8 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f27, [%r60];
	ld.shared.f32 	%f28, [%r62];
$L__tmp4:
	.loc	1 51 20                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:51:20
	add.f32 	%f29, %f27, %f8;
	add.f32 	%f30, %f28, %f7;
	.loc	1 53 21                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:53:21
	setp.le.f32 	%p21, %f25, 0f00000000;
	setp.le.f32 	%p22, %f26, 0f00000000;
	.loc	1 54 45                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:54:45
	mov.b32 	%r25, %f27;
	// begin inline asm
	@%p6 st.global.b32 [ %rd8 + 0 ], { %r25 };
	// end inline asm
	mov.b32 	%r26, %f28;
	// begin inline asm
	@%p7 st.global.b32 [ %rd9 + 0 ], { %r26 };
	// end inline asm
	.loc	1 55 56                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:55:56
	bar.sync 	0;
	mov.b32 	%r28, %f29;
	// begin inline asm
	@%p8 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	mov.b32 	%r30, %f30;
	// begin inline asm
	@%p8 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.u32 	{%r31, %r32}, [%r65];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd10 + 0 ], { %r31, %r32 };
	// end inline asm
	.loc	1 56 56                         // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:56:56
	selp.u16 	%rs2, 1, 0, %p22;
	selp.u16 	%rs3, 1, 0, %p21;
	shl.b16 	%rs4, %rs3, 8;
	or.b16  	%rs1, %rs2, %rs4;
	// begin inline asm
	@%p1 st.global.b16 [ %rd11 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 56 4                          // cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py:56:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/r3/cr3wh7jwrrgf2e26oaawrjabuarzfl3bjeiohmmeb5ipye3bk55o.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 228                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdd DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 51
.b8 119
.b8 104
.b8 55
.b8 106
.b8 119
.b8 114
.b8 114
.b8 103
.b8 102
.b8 50
.b8 101
.b8 50
.b8 54
.b8 111
.b8 97
.b8 97
.b8 119
.b8 114
.b8 106
.b8 97
.b8 98
.b8 117
.b8 97
.b8 114
.b8 122
.b8 102
.b8 108
.b8 51
.b8 98
.b8 106
.b8 101
.b8 105
.b8 111
.b8 104
.b8 109
.b8 109
.b8 101
.b8 98
.b8 53
.b8 105
.b8 112
.b8 121
.b8 101
.b8 51
.b8 98
.b8 107
.b8 53
.b8 53
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x56 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb9:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xce:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
