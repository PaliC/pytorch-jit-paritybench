#loc = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":19:0)
#loc1 = loc(unknown)
#loc34 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":56:26)
#loc41 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":64:26)
#loc58 = loc(callsite(#loc1 at #loc34))
#loc61 = loc(callsite(#loc1 at #loc41))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit__native_batch_norm_legit_no_training_add_mul_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":19:0), %arg10: i32 loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<1.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999974E-6> : tensor<1x64xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %5 = arith.divsi %4, %cst_4 : tensor<1x64xi32> loc(#loc6)
    %6 = arith.muli %0, %c64_i32 : i32 loc(#loc7)
    %7 = tt.splat %6 : i32 -> tensor<1x64xi32> loc(#loc8)
    %8 = arith.addi %4, %7 : tensor<1x64xi32> loc(#loc8)
    %9 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %8 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc9)
    %11 = tt.splat %1 : i1 -> tensor<1x64xi1> loc(#loc10)
    %12 = tt.load %10, %11, %cst_3 : tensor<1x64x!tt.ptr<f32>> loc(#loc10)
    %13 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc11)
    %14 = tt.addptr %13, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc11)
    %15 = tt.load %14 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc12)
    %16 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc13)
    %17 = tt.addptr %16, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc13)
    %18 = tt.load %17 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc14)
    %19 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc15)
    %20 = tt.addptr %19, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc15)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc16)
    %22 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc17)
    %23 = tt.addptr %22, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc17)
    %24 = tt.load %23 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc18)
    %25 = tt.addptr %arg7, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc19)
    %26 = tt.load %25 : !tt.ptr<f32> loc(#loc20)
    %27 = tt.splat %26 : f32 -> tensor<1x64xf32> loc(#loc21)
    %28 = tt.addptr %arg8, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc22)
    %29 = tt.load %28 : !tt.ptr<f32> loc(#loc23)
    %30 = tt.splat %29 : f32 -> tensor<1x64xf32> loc(#loc24)
    %31 = arith.subf %12, %15 : tensor<1x64xf32> loc(#loc25)
    %32 = arith.addf %18, %cst_2 : tensor<1x64xf32> loc(#loc26)
    %33 = tt.extern_elementwise %32 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x64xf32>) -> tensor<1x64xf32> loc(#loc27)
    %34 = arith.divf %cst, %33 : tensor<1x64xf32> loc(#loc28)
    %35 = arith.mulf %31, %34 : tensor<1x64xf32> loc(#loc29)
    %36 = arith.mulf %35, %21 : tensor<1x64xf32> loc(#loc30)
    %37 = arith.addf %36, %24 : tensor<1x64xf32> loc(#loc31)
    %38 = arith.select %11, %37, %cst_3 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc32)
    %39 = "tt.reduce"(%38) <{axis = 1 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc34)), %arg13: f32 loc(callsite(#loc1 at #loc34))):
      %61 = arith.addf %arg12, %arg13 : f32 loc(#loc62)
      tt.reduce.return %61 : f32 loc(#loc57)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc57)
    %40 = tt.expand_dims %39 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc36)
    %41 = arith.divf %40, %cst_1 : tensor<1x1xf32> loc(#loc37)
    %42 = tt.broadcast %41 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc38)
    %43 = arith.subf %37, %42 : tensor<1x64xf32> loc(#loc38)
    %44 = arith.mulf %43, %43 : tensor<1x64xf32> loc(#loc39)
    %45 = arith.select %11, %44, %cst_3 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc40)
    %46 = "tt.reduce"(%45) <{axis = 1 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc41)), %arg13: f32 loc(callsite(#loc1 at #loc41))):
      %61 = arith.addf %arg12, %arg13 : f32 loc(#loc63)
      tt.reduce.return %61 : f32 loc(#loc60)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc60)
    %47 = tt.expand_dims %46 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc42)
    %48 = arith.divf %47, %cst_1 : tensor<1x1xf32> loc(#loc43)
    %49 = arith.addf %48, %cst_0 : tensor<1x1xf32> loc(#loc44)
    %50 = tt.extern_elementwise %49 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc45)
    %51 = tt.broadcast %50 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc46)
    %52 = arith.mulf %43, %51 : tensor<1x64xf32> loc(#loc46)
    %53 = arith.mulf %27, %52 : tensor<1x64xf32> loc(#loc47)
    %54 = arith.addf %53, %30 : tensor<1x64xf32> loc(#loc48)
    gpu.barrier loc(#loc49)
    %55 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc50)
    %56 = tt.splat %55 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc50)
    tt.store %56, %50, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc51)
    %57 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc52)
    %58 = tt.addptr %57, %8 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc52)
    tt.store %58, %54, %11 : tensor<1x64x!tt.ptr<f32>> loc(#loc53)
    %59 = tt.addptr %arg9, %0 : !tt.ptr<f32>, i32 loc(#loc54)
    %60 = tt.splat %59 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc54)
    tt.store %60, %41, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc55)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":23:28)
#loc3 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":25:21)
#loc4 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":26:26)
#loc5 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":26:34)
#loc6 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":31:19)
#loc7 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":32:38)
#loc8 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":32:35)
#loc9 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":32:30)
#loc10 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":32:43)
#loc11 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":33:30)
#loc12 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":33:35)
#loc13 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":34:30)
#loc14 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":34:35)
#loc15 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":35:31)
#loc16 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":35:36)
#loc17 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":36:31)
#loc18 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":36:36)
#loc19 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":37:31)
#loc20 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":37:20)
#loc21 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":38:35)
#loc22 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":39:31)
#loc23 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":39:20)
#loc24 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":40:35)
#loc25 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":41:18)
#loc26 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":43:18)
#loc27 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":44:26)
#loc28 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":46:18)
#loc29 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":49:19)
#loc30 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":50:20)
#loc31 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":51:20)
#loc32 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":55:35)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc36 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":56:29)
#loc37 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":59:20)
#loc38 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":60:20)
#loc39 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":61:20)
#loc40 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":63:35)
#loc42 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":64:29)
#loc43 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":66:20)
#loc44 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":67:20)
#loc45 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":68:28)
#loc46 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":70:20)
#loc47 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":71:20)
#loc48 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":72:20)
#loc49 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":73:4)
#loc50 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":74:28)
#loc51 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":74:40)
#loc52 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":75:28)
#loc53 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":75:48)
#loc54 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":76:25)
#loc55 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":76:37)
#loc56 = loc("inductor_cache/rc/crczwlgufcmqf57apiwje4worozkxodb463qvtt3c4sjbwremd5y.py":76:4)
#loc57 = loc(callsite(#loc33 at #loc34))
#loc59 = loc(callsite(#loc35 at #loc33))
#loc60 = loc(callsite(#loc33 at #loc41))
#loc62 = loc(callsite(#loc59 at #loc34))
#loc63 = loc(callsite(#loc59 at #loc41))
