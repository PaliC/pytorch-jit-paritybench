#loc = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":19:0)
#loc1 = loc(unknown)
#loc14 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":38:24)
#loc21 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":46:26)
#loc50 = loc(callsite(#loc1 at #loc14))
#loc53 = loc(callsite(#loc1 at #loc21))
module {
  tt.func public @triton_per_fused_eq_lift_fresh_lt_maximum_mul_rsqrt_sub_var_mean_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":19:0), %arg1: i64 {tt.divisibility = 16 : i32} loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":19:0), %arg5: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":19:0), %arg6: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":19:0), %arg8: i32 loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-5> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<6.300000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %5 = arith.muli %0, %c64_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x64xi32> loc(#loc7)
    %7 = arith.addi %4, %6 : tensor<1x64xi32> loc(#loc7)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x64xi1> loc(#loc9)
    %11 = tt.load %9, %10, %cst_2 : tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %12 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc10)
    %13 = tt.splat %12 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc10)
    %14 = tt.load %13, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc11)
    %15 = arith.select %10, %11, %cst_2 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc12)
    %16 = "tt.reduce"(%15) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc14)), %arg11: f32 loc(callsite(#loc1 at #loc14))):
      %56 = arith.addf %arg10, %arg11 : f32 loc(#loc58)
      tt.reduce.return %56 : f32 loc(#loc49)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc49)
    %17 = tt.expand_dims %16 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc16)
    %18 = arith.divf %17, %cst : tensor<1x1xf32> loc(#loc17)
    %19 = tt.broadcast %18 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc18)
    %20 = arith.subf %11, %19 : tensor<1x64xf32> loc(#loc18)
    %21 = arith.mulf %20, %20 : tensor<1x64xf32> loc(#loc19)
    %22 = arith.select %10, %21, %cst_2 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc20)
    %23 = "tt.reduce"(%22) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc21)), %arg11: f32 loc(callsite(#loc1 at #loc21))):
      %56 = arith.addf %arg10, %arg11 : f32 loc(#loc59)
      tt.reduce.return %56 : f32 loc(#loc52)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc52)
    %24 = tt.expand_dims %23 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc22)
    %25 = arith.divf %24, %cst_1 : tensor<1x1xf32> loc(#loc23)
    %26 = arith.sitofp %arg1 : i64 to f32 loc(#loc24)
    %27 = tt.splat %26 : f32 -> tensor<1x1xf32> loc(#loc25)
    %28 = arith.mulf %25, %27 : tensor<1x1xf32> loc(#loc25)
    %29 = arith.cmpf ogt, %28, %cst_0 : tensor<1x1xf32> loc(#loc54)
    %30 = arith.cmpf une, %28, %28 : tensor<1x1xf32> loc(#loc55)
    %31 = arith.ori %29, %30 : tensor<1x1xi1> loc(#loc56)
    %32 = arith.select %31, %28, %cst_0 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc57)
    %33 = tt.extern_elementwise %32 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc31)
    %34 = arith.cmpf oeq, %28, %cst_0 : tensor<1x1xf32> loc(#loc32)
    %35 = arith.cmpf olt, %28, %cst_0 : tensor<1x1xf32> loc(#loc33)
    %36 = arith.mulf %33, %14 : tensor<1x1xf32> loc(#loc34)
    %37 = tt.broadcast %36 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc35)
    %38 = arith.mulf %11, %37 : tensor<1x64xf32> loc(#loc35)
    %39 = arith.mulf %18, %36 : tensor<1x1xf32> loc(#loc36)
    %40 = tt.broadcast %39 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc37)
    %41 = arith.subf %38, %40 : tensor<1x64xf32> loc(#loc37)
    %42 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc38)
    %43 = tt.splat %42 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc38)
    tt.store %43, %33, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc39)
    %44 = tt.addptr %arg5, %0 : !tt.ptr<i1>, i32 loc(#loc40)
    %45 = tt.bitcast %44 : !tt.ptr<i1> -> !tt.ptr<i8> loc(#loc41)
    %46 = tt.splat %45 : !tt.ptr<i8> -> tensor<1x1x!tt.ptr<i8>> loc(#loc41)
    %47 = arith.extui %34 : tensor<1x1xi1> to tensor<1x1xi8> loc(#loc41)
    tt.store %46, %47, %2 : tensor<1x1x!tt.ptr<i8>> loc(#loc41)
    %48 = tt.addptr %arg6, %0 : !tt.ptr<i1>, i32 loc(#loc42)
    %49 = tt.bitcast %48 : !tt.ptr<i1> -> !tt.ptr<i8> loc(#loc43)
    %50 = tt.splat %49 : !tt.ptr<i8> -> tensor<1x1x!tt.ptr<i8>> loc(#loc43)
    %51 = arith.extui %35 : tensor<1x1xi1> to tensor<1x1xi8> loc(#loc43)
    tt.store %50, %51, %2 : tensor<1x1x!tt.ptr<i8>> loc(#loc43)
    %52 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc44)
    %53 = tt.addptr %52, %7 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc44)
    tt.store %53, %41, %10 : tensor<1x64x!tt.ptr<f32>> loc(#loc45)
    %54 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc46)
    %55 = tt.splat %54 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc46)
    tt.store %55, %18, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc47)
    tt.return loc(#loc48)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":23:28)
#loc3 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":25:21)
#loc4 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":26:26)
#loc5 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":26:34)
#loc6 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":31:38)
#loc7 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":31:35)
#loc8 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":31:30)
#loc9 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":31:43)
#loc10 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":33:31)
#loc11 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":33:36)
#loc12 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":37:33)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc16 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":38:27)
#loc17 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":41:19)
#loc18 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":42:19)
#loc19 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":43:20)
#loc20 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":45:35)
#loc22 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":46:29)
#loc23 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":48:20)
#loc24 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":49:21)
#loc25 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":50:20)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc27 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":52:42)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc31 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":53:28)
#loc32 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":54:21)
#loc33 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":55:20)
#loc34 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":56:20)
#loc35 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":57:19)
#loc36 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":58:20)
#loc37 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":59:20)
#loc38 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":60:25)
#loc39 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":60:37)
#loc40 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":61:25)
#loc41 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":61:37)
#loc42 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":62:25)
#loc43 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":62:37)
#loc44 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":63:25)
#loc45 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":63:45)
#loc46 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":64:25)
#loc47 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":64:37)
#loc48 = loc("inductor_cache/h4/ch4kpbqwttbewtwlc62ykwpkylq3p5l6xdtlxnr4jawlqgenpzkp.py":64:4)
#loc49 = loc(callsite(#loc13 at #loc14))
#loc51 = loc(callsite(#loc15 at #loc13))
#loc52 = loc(callsite(#loc13 at #loc21))
#loc54 = loc(callsite(#loc26 at #loc27))
#loc55 = loc(callsite(#loc28 at #loc27))
#loc56 = loc(callsite(#loc29 at #loc27))
#loc57 = loc(callsite(#loc30 at #loc27))
#loc58 = loc(callsite(#loc51 at #loc14))
#loc59 = loc(callsite(#loc51 at #loc21))
