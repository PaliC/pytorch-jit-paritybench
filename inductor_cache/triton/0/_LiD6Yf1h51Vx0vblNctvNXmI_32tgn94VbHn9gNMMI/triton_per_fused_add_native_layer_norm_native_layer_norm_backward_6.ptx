//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6 // -- Begin function triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6
.visible .entry triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_8,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_9,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_10
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<26>;
	.reg .b32 	%r<89>;
	.reg .f32 	%f<65>;
	.reg .b64 	%rd<25>;
	.loc	1 19 0                          // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd11, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_0];
	ld.param.u64 	%rd12, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_1];
$L__tmp0:
	.loc	1 23 28                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:25:21
	setp.lt.s32 	%p1, %r1, 16;
	ld.param.u64 	%rd13, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_2];
	ld.param.u64 	%rd14, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_3];
	.loc	1 26 34                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:26:34
	mov.u32 	%r45, %tid.x;
	and.b32  	%r46, %r45, 31;
	ld.param.u64 	%rd15, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_4];
	ld.param.u64 	%rd16, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_5];
	shl.b32 	%r47, %r45, 1;
	ld.param.u64 	%rd17, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_6];
	and.b32  	%r48, %r47, 126;
	ld.param.u64 	%rd18, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_7];
	ld.param.u64 	%rd19, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_6_param_8];
	.loc	1 30 19                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:30:19
	shr.s32 	%r49, %r1, 31;
	shr.u32 	%r50, %r49, 30;
	add.s32 	%r51, %r1, %r50;
	.loc	1 31 19                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:31:19
	and.b32  	%r52, %r51, 33554428;
	sub.s32 	%r53, %r1, %r52;
	.loc	1 33 39                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:33:39
	shl.b32 	%r54, %r51, 5;
	and.b32  	%r55, %r54, -128;
	.loc	1 33 35                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:33:35
	or.b32  	%r56, %r55, %r48;
	.loc	1 33 30                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:33:30
	mul.wide.s32 	%rd20, %r56, 4;
	add.s64 	%rd1, %rd12, %rd20;
	mov.b32 	%r4, 0;
	.loc	1 33 44                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:33:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	.loc	1 34 30                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:34:30
	mul.wide.u32 	%rd21, %r48, 4;
	add.s64 	%rd2, %rd13, %rd21;
	mov.pred 	%p4, -1;
	.loc	1 34 35                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:34:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 35 39                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:35:39
	shl.b32 	%r57, %r53, 7;
	.loc	1 35 35                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:35:35
	or.b32  	%r58, %r57, %r48;
	.loc	1 35 30                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:35:30
	mul.wide.s32 	%rd22, %r58, 4;
	add.s64 	%rd3, %rd14, %rd22;
	.loc	1 35 44                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:35:44
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r8, %r9 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r8, %r4;
	@!%p1 mov.u32 %r9, %r4;
	// end inline asm
	.loc	1 36 43                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:36:43
	shl.b32 	%r59, %r1, 7;
	.loc	1 36 39                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:36:39
	or.b32  	%r60, %r59, %r48;
	.loc	1 36 34                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:36:34
	mul.wide.s32 	%rd23, %r60, 4;
	add.s64 	%rd4, %rd11, %rd23;
	.loc	1 36 48                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:36:48
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v2.b32 { %r12, %r13 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r12, %r4;
	@!%p1 mov.u32 %r13, %r4;
	// end inline asm
	.loc	1 37 30                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:37:30
	add.s64 	%rd5, %rd15, %rd21;
	.loc	1 37 35                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:37:35
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r16, %r17 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:38:31
	add.s64 	%rd6, %rd16, %rd21;
	.loc	1 38 36                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:38:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r18, %r19 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:39:31
	add.s64 	%rd7, %rd17, %rd21;
	.loc	1 39 36                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:39:36
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r20, %r21 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 33 44                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:33:44
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 34 35                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:34:35
	mov.b32 	%f3, %r6;
	mov.b32 	%f4, %r7;
	.loc	1 35 44                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:35:44
	mov.b32 	%f5, %r9;
	mov.b32 	%f6, %r8;
	.loc	1 36 48                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:36:48
	mov.b32 	%f7, %r13;
	mov.b32 	%f8, %r12;
	.loc	1 37 35                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:37:35
	mov.b32 	%f9, %r17;
	mov.b32 	%f10, %r16;
	.loc	1 40 18                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:40:18
	add.f32 	%f11, %f2, %f4;
	add.f32 	%f12, %f1, %f3;
	.loc	1 41 18                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:41:18
	add.f32 	%f13, %f12, %f6;
	add.f32 	%f14, %f11, %f5;
	.loc	1 42 18                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:42:18
	add.f32 	%f15, %f8, %f10;
	add.f32 	%f16, %f7, %f9;
	.loc	1 43 18                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:43:18
	add.f32 	%f17, %f14, %f16;
	add.f32 	%f18, %f13, %f15;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f18, %f17;
	selp.f32 	%f20, %f19, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f20;
	shfl.sync.bfly.b32	%r62, %r61, 16, 31, -1;
	mov.b32 	%f21, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f22;
	shfl.sync.bfly.b32	%r64, %r63, 8, 31, -1;
	mov.b32 	%f23, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f24;
	shfl.sync.bfly.b32	%r66, %r65, 4, 31, -1;
	mov.b32 	%f25, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f26;
	shfl.sync.bfly.b32	%r68, %r67, 2, 31, -1;
	mov.b32 	%f27, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f28;
	shfl.sync.bfly.b32	%r70, %r69, 1, 31, -1;
	mov.b32 	%f29, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p14, %r46, 0;
	shr.u32 	%r71, %r45, 3;
	and.b32  	%r72, %r71, 4;
	mov.u32 	%r73, global_smem;
	add.s32 	%r22, %r73, %r72;
	mov.b32 	%r23, %f30;
	// begin inline asm
	@%p14 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p15, %r45, 2;
	shl.b32 	%r74, %r45, 2;
	add.s32 	%r25, %r73, %r74;
	// begin inline asm
	@%p15 ld.shared.b32 %r24, [ %r25 + 0 ];
	// end inline asm
	mov.b32 	%f31, %r24;
	shfl.sync.bfly.b32	%r75, %r24, 1, 31, -1;
	mov.b32 	%f32, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r76, %r45, 1;
	setp.eq.b32 	%p23, %r76, 1;
	not.pred 	%p24, %p23;
	and.pred  	%p16, %p15, %p24;
	mov.b32 	%r27, %f33;
	// begin inline asm
	@%p16 st.shared.b32 [ %r25 + 0 ], %r27;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 51 20                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:51:20
	ld.shared.u32 	%r29, [global_smem];
	mov.b32 	%r30, 1124073472;
	// begin inline asm
	div.full.f32 %r28, %r29, %r30;
	// end inline asm
	mov.b32 	%f34, %r28;
	.loc	1 52 19                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:52:19
	sub.f32 	%f35, %f18, %f34;
	sub.f32 	%f36, %f17, %f34;
	.loc	1 53 20                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:53:20
	mul.f32 	%f37, %f36, %f36;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f38, %f35, %f35, %f37;
	selp.f32 	%f39, %f38, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f39;
	shfl.sync.bfly.b32	%r78, %r77, 16, 31, -1;
	mov.b32 	%f40, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f41;
	shfl.sync.bfly.b32	%r80, %r79, 8, 31, -1;
	mov.b32 	%f42, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f43;
	shfl.sync.bfly.b32	%r82, %r81, 4, 31, -1;
	mov.b32 	%f44, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f45;
	shfl.sync.bfly.b32	%r84, %r83, 2, 31, -1;
	mov.b32 	%f46, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f47;
	shfl.sync.bfly.b32	%r86, %r85, 1, 31, -1;
	mov.b32 	%f48, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f49;
	// begin inline asm
	@%p14 st.shared.b32 [ %r22 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p15 ld.shared.b32 %r33, [ %r25 + 0 ];
	// end inline asm
	mov.b32 	%f50, %r33;
	shfl.sync.bfly.b32	%r87, %r33, 1, 31, -1;
	mov.b32 	%f51, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f52;
	// begin inline asm
	@%p16 st.shared.b32 [ %r25 + 0 ], %r36;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 59 20                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:59:20
	ld.shared.u32 	%r38, [global_smem];
	// begin inline asm
	div.full.f32 %r37, %r38, %r30;
	// end inline asm
	mov.b32 	%f53, %r37;
	.loc	1 61 20                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:61:20
	add.f32 	%f54, %f53, 0f3727C5AC;
	.loc	1 62 28                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:62:28
	rsqrt.approx.ftz.f32 	%f55, %f54;
	.loc	1 39 36                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:39:36
	mov.b32 	%f56, %r21;
	mov.b32 	%f57, %r20;
	.loc	1 38 36                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:38:36
	mov.b32 	%f58, %r19;
	mov.b32 	%f59, %r18;
	.loc	1 63 20                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:63:20
	mul.f32 	%f60, %f35, %f55;
	mul.f32 	%f61, %f36, %f55;
	.loc	1 65 20                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:65:20
	fma.rn.f32 	%f62, %f60, %f59, %f57;
	fma.rn.f32 	%f63, %f61, %f58, %f56;
	.loc	1 67 20                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:67:20
	mul.f32 	%f64, %f55, 0f3C000000;
	.loc	1 68 49                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:68:49
	mov.b32 	%r40, %f60;
	mov.b32 	%r41, %f61;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd4 + 0 ], { %r40, %r41 };
	// end inline asm
	.loc	1 69 25                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:69:25
	add.s64 	%rd9, %rd18, %rd23;
	.loc	1 69 46                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:69:46
	mov.b32 	%r42, %f62;
	mov.b32 	%r43, %f63;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd9 + 0 ], { %r42, %r43 };
	// end inline asm
	.loc	1 70 25                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:70:25
	mul.wide.s32 	%rd24, %r1, 4;
	add.s64 	%rd10, %rd19, %rd24;
	.loc	1 70 37                         // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:70:37
	and.b32  	%r88, %r45, 63;
	setp.eq.s32 	%p25, %r88, 0;
	mov.b32 	%r44, %f64;
	and.pred  	%p22, %p25, %p1;
	// begin inline asm
	@%p22 st.global.b32 [ %rd10 + 0 ], { %r44 };
	// end inline asm
	.loc	1 70 4                          // cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py:70:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/jr/cjr6buc5bhqazwfibk34zs3akqourrppbn5mq4sno3v7gktsazp4.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 236                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 114
.b8 54
.b8 98
.b8 117
.b8 99
.b8 53
.b8 98
.b8 104
.b8 113
.b8 97
.b8 122
.b8 119
.b8 102
.b8 105
.b8 98
.b8 107
.b8 51
.b8 52
.b8 122
.b8 115
.b8 51
.b8 97
.b8 107
.b8 113
.b8 111
.b8 117
.b8 114
.b8 114
.b8 112
.b8 112
.b8 98
.b8 110
.b8 53
.b8 109
.b8 113
.b8 52
.b8 115
.b8 110
.b8 111
.b8 51
.b8 118
.b8 55
.b8 103
.b8 107
.b8 116
.b8 115
.b8 97
.b8 122
.b8 112
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x46 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa9:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
