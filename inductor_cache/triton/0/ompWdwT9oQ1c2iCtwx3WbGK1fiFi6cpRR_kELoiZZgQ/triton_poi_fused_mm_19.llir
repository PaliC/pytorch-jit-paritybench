; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mm_19(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 10, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 2, !dbg !12
  %9 = and i32 %8, 508, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = or disjoint i32 %10, 2, !dbg !13
  %13 = or disjoint i32 %10, 3, !dbg !13
  %14 = or disjoint i32 %10, 512, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %15 = sdiv i32 %.frozen, 256, !dbg !14
  %16 = mul i32 %15, 256, !dbg !15
  %.decomposed = sub i32 %.frozen, %16, !dbg !15
  %17 = srem i32 %11, 256, !dbg !15
  %18 = srem i32 %12, 256, !dbg !15
  %19 = srem i32 %13, 256, !dbg !15
  %20 = sdiv i32 %14, 256, !dbg !14
  %21 = shl nsw i32 %15, 6, !dbg !16
  %22 = shl nsw i32 %20, 6, !dbg !16
  %.lhs.trunc = trunc nsw i32 %.decomposed to i16, !dbg !17
  %23 = sdiv i16 %.lhs.trunc, 64, !dbg !17
  %.sext = sext i16 %23 to i32, !dbg !17
  %.lhs.trunc1 = trunc nsw i32 %17 to i16, !dbg !17
  %.lhs.trunc1.frozen = freeze i16 %.lhs.trunc1, !dbg !17
  %24 = sdiv i16 %.lhs.trunc1.frozen, 64, !dbg !17
  %.sext2 = sext i16 %24 to i32, !dbg !17
  %.lhs.trunc3 = trunc nsw i32 %18 to i16, !dbg !17
  %.lhs.trunc3.frozen = freeze i16 %.lhs.trunc3, !dbg !17
  %25 = sdiv i16 %.lhs.trunc3.frozen, 64, !dbg !17
  %.sext4 = sext i16 %25 to i32, !dbg !17
  %.lhs.trunc5 = trunc nsw i32 %19 to i16, !dbg !17
  %.lhs.trunc5.frozen = freeze i16 %.lhs.trunc5, !dbg !17
  %26 = sdiv i16 %.lhs.trunc5.frozen, 64, !dbg !17
  %.sext6 = sext i16 %26 to i32, !dbg !17
  %27 = shl nsw i32 %.sext, 18, !dbg !18
  %28 = shl nsw i32 %.sext2, 18, !dbg !18
  %29 = shl nsw i32 %.sext4, 18, !dbg !18
  %30 = shl nsw i32 %.sext6, 18, !dbg !18
  %31 = mul i16 %23, 64, !dbg !19
  %.decomposed31 = sub i16 %.lhs.trunc, %31, !dbg !19
  %.sext16 = sext i16 %.decomposed31 to i32, !dbg !19
  %32 = mul i16 %24, 64, !dbg !19
  %.decomposed32 = sub i16 %.lhs.trunc1.frozen, %32, !dbg !19
  %.sext18 = sext i16 %.decomposed32 to i32, !dbg !19
  %33 = mul i16 %25, 64, !dbg !19
  %.decomposed33 = sub i16 %.lhs.trunc3.frozen, %33, !dbg !19
  %.sext20 = sext i16 %.decomposed33 to i32, !dbg !19
  %34 = mul i16 %26, 64, !dbg !19
  %.decomposed34 = sub i16 %.lhs.trunc5.frozen, %34, !dbg !19
  %.sext22 = sext i16 %.decomposed34 to i32, !dbg !19
  %35 = add nsw i32 %21, %.sext16, !dbg !20
  %36 = add nsw i32 %35, %27, !dbg !21
  %37 = add nsw i32 %28, %.sext18, !dbg !20
  %38 = add nsw i32 %37, %21, !dbg !21
  %39 = add nsw i32 %29, %.sext20, !dbg !20
  %40 = add nsw i32 %39, %21, !dbg !21
  %41 = add nsw i32 %30, %.sext22, !dbg !20
  %42 = add nsw i32 %41, %21, !dbg !21
  %43 = add nsw i32 %22, %.sext16, !dbg !20
  %44 = add nsw i32 %43, %27, !dbg !21
  %45 = add nsw i32 %22, %.sext18, !dbg !20
  %46 = add nsw i32 %45, %28, !dbg !21
  %47 = add nsw i32 %22, %.sext20, !dbg !20
  %48 = add nsw i32 %47, %29, !dbg !21
  %49 = add nsw i32 %22, %.sext22, !dbg !20
  %50 = add nsw i32 %49, %30, !dbg !21
  %51 = sext i32 %36 to i64, !dbg !22
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !22
  %53 = sext i32 %38 to i64, !dbg !22
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !22
  %55 = sext i32 %40 to i64, !dbg !22
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !22
  %57 = sext i32 %42 to i64, !dbg !22
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !22
  %59 = sext i32 %44 to i64, !dbg !22
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !22
  %61 = sext i32 %46 to i64, !dbg !22
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !22
  %63 = sext i32 %48 to i64, !dbg !22
  %64 = getelementptr float, ptr addrspace(1) %0, i64 %63, !dbg !22
  %65 = sext i32 %50 to i64, !dbg !22
  %66 = getelementptr float, ptr addrspace(1) %0, i64 %65, !dbg !22
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 true) #1, !dbg !23
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 true) #1, !dbg !23
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 true) #1, !dbg !23
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 true) #1, !dbg !23
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 true) #1, !dbg !23
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 true) #1, !dbg !23
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 true) #1, !dbg !23
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %66, i1 true) #1, !dbg !23
  %75 = sext i32 %10 to i64, !dbg !24
  %76 = getelementptr float, ptr addrspace(1) %1, i64 %75, !dbg !24
  %77 = sext i32 %14 to i64, !dbg !24
  %78 = getelementptr float, ptr addrspace(1) %1, i64 %77, !dbg !24
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %67, i32 %68, i32 %69, i32 %70, ptr addrspace(1) %76, i1 true) #1, !dbg !25
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %71, i32 %72, i32 %73, i32 %74, ptr addrspace(1) %78, i1 true) #1, !dbg !25
  %79 = getelementptr float, ptr addrspace(1) %2, i64 %75, !dbg !26
  %80 = getelementptr float, ptr addrspace(1) %2, i64 %77, !dbg !26
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %67, i32 %68, i32 %69, i32 %70, ptr addrspace(1) %79, i1 true) #1, !dbg !27
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %71, i32 %72, i32 %73, i32 %74, ptr addrspace(1) %80, i1 true) #1, !dbg !27
  ret void, !dbg !28
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqv7uj3heekyow3iuw56zkktwkt55hqlc23a7ldid43zk25skaxy.py", directory: "inductor_cache/qv")
!4 = !{ptr @triton_poi_fused_mm_19, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mm_19, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mm_19", linkageName: "triton_poi_fused_mm_19", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 33, scope: !7)
!17 = !DILocation(line: 27, column: 52, scope: !7)
!18 = !DILocation(line: 27, column: 46, scope: !7)
!19 = !DILocation(line: 27, column: 65, scope: !7)
!20 = !DILocation(line: 27, column: 38, scope: !7)
!21 = !DILocation(line: 27, column: 60, scope: !7)
!22 = !DILocation(line: 27, column: 30, scope: !7)
!23 = !DILocation(line: 27, column: 72, scope: !7)
!24 = !DILocation(line: 28, column: 25, scope: !7)
!25 = !DILocation(line: 28, column: 36, scope: !7)
!26 = !DILocation(line: 29, column: 25, scope: !7)
!27 = !DILocation(line: 29, column: 36, scope: !7)
!28 = !DILocation(line: 29, column: 4, scope: !7)
