; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused__softmax_10(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = icmp slt i32 %5, 4, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 31, !dbg !12
  %9 = lshr i32 %7, 5, !dbg !12
  %10 = and i32 %7, 63, !dbg !12
  %11 = shl i32 %5, 6, !dbg !13
  %12 = or disjoint i32 %11, %10, !dbg !14
  %13 = sext i32 %12 to i64, !dbg !15
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !15
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 %6, i32 0, i1 %6) #3, !dbg !16
  %16 = bitcast i32 %15 to float, !dbg !16
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #3, !dbg !17
  %18 = bitcast i32 %17 to float, !dbg !17
  %19 = fadd float %16, %18, !dbg !18
  %20 = select i1 %6, float %19, float 0xFFF0000000000000, !dbg !19
  %21 = bitcast float %20 to i32, !dbg !20
  %22 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %21, i32 16, i32 31), !dbg !20
  %23 = bitcast i32 %22 to float, !dbg !20
  %24 = fcmp ogt float %20, %23, !dbg !24
  %25 = fcmp uno float %20, 0.000000e+00, !dbg !26
  %26 = or i1 %24, %25, !dbg !27
  %27 = select i1 %26, float %20, float %23, !dbg !28
  %28 = bitcast float %27 to i32, !dbg !20
  %29 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %28, i32 8, i32 31), !dbg !20
  %30 = bitcast i32 %29 to float, !dbg !20
  %31 = fcmp ogt float %27, %30, !dbg !24
  %32 = fcmp uno float %27, 0.000000e+00, !dbg !26
  %33 = or i1 %31, %32, !dbg !27
  %34 = select i1 %33, float %27, float %30, !dbg !28
  %35 = bitcast float %34 to i32, !dbg !20
  %36 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %35, i32 4, i32 31), !dbg !20
  %37 = bitcast i32 %36 to float, !dbg !20
  %38 = fcmp ogt float %34, %37, !dbg !24
  %39 = fcmp uno float %34, 0.000000e+00, !dbg !26
  %40 = or i1 %38, %39, !dbg !27
  %41 = select i1 %40, float %34, float %37, !dbg !28
  %42 = bitcast float %41 to i32, !dbg !20
  %43 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %42, i32 2, i32 31), !dbg !20
  %44 = bitcast i32 %43 to float, !dbg !20
  %45 = fcmp ogt float %41, %44, !dbg !24
  %46 = fcmp uno float %41, 0.000000e+00, !dbg !26
  %47 = or i1 %45, %46, !dbg !27
  %48 = select i1 %47, float %41, float %44, !dbg !28
  %49 = bitcast float %48 to i32, !dbg !20
  %50 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 1, i32 31), !dbg !20
  %51 = bitcast i32 %50 to float, !dbg !20
  %52 = fcmp ogt float %48, %51, !dbg !24
  %53 = fcmp uno float %48, 0.000000e+00, !dbg !26
  %54 = or i1 %52, %53, !dbg !27
  %55 = icmp eq i32 %8, 0, !dbg !20
  %56 = and i32 %9, 1, !dbg !20
  %57 = getelementptr float, ptr addrspace(3) @global_smem, i32 %56, !dbg !20
  %58 = select i1 %54, i32 %49, i32 %50, !dbg !28
  %59 = insertelement <1 x i32> poison, i32 %58, i64 0, !dbg !20
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %57, <1 x i32> %59, i1 %55) #3, !dbg !20
  tail call void @llvm.nvvm.barrier0(), !dbg !20
  %60 = icmp slt i32 %7, 2, !dbg !20
  %61 = getelementptr float, ptr addrspace(3) @global_smem, i32 %7, !dbg !20
  %62 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %61, i1 %60) #3, !dbg !20
  %63 = bitcast i32 %62 to float, !dbg !20
  %64 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %62, i32 1, i32 31), !dbg !20
  %65 = bitcast i32 %64 to float, !dbg !20
  %66 = fcmp ogt float %63, %65, !dbg !24
  %67 = fcmp uno float %63, 0.000000e+00, !dbg !26
  %68 = or i1 %67, %66, !dbg !27
  %69 = and i32 %7, 1, !dbg !20
  %70 = icmp eq i32 %69, 0, !dbg !20
  %71 = and i1 %60, %70, !dbg !20
  %72 = select i1 %68, i32 %62, i32 %64, !dbg !28
  %73 = insertelement <1 x i32> poison, i32 %72, i64 0, !dbg !20
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %61, <1 x i32> %73, i1 %71) #3, !dbg !20
  tail call void @llvm.nvvm.barrier0(), !dbg !20
  %74 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !20
  %75 = fsub float %19, %74, !dbg !29
  %76 = fmul float %75, 0x3FF7154760000000, !dbg !30
  %77 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %76) #3, !dbg !30
  %78 = select i1 %6, float %77, float 0.000000e+00, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %79 = bitcast float %78 to i32, !dbg !32
  %80 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %79, i32 16, i32 31), !dbg !32
  %81 = bitcast i32 %80 to float, !dbg !32
  %82 = fadd float %78, %81, !dbg !36
  %83 = bitcast float %82 to i32, !dbg !32
  %84 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %83, i32 8, i32 31), !dbg !32
  %85 = bitcast i32 %84 to float, !dbg !32
  %86 = fadd float %82, %85, !dbg !36
  %87 = bitcast float %86 to i32, !dbg !32
  %88 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %87, i32 4, i32 31), !dbg !32
  %89 = bitcast i32 %88 to float, !dbg !32
  %90 = fadd float %86, %89, !dbg !36
  %91 = bitcast float %90 to i32, !dbg !32
  %92 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %91, i32 2, i32 31), !dbg !32
  %93 = bitcast i32 %92 to float, !dbg !32
  %94 = fadd float %90, %93, !dbg !36
  %95 = bitcast float %94 to i32, !dbg !32
  %96 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %95, i32 1, i32 31), !dbg !32
  %97 = bitcast i32 %96 to float, !dbg !32
  %98 = fadd float %94, %97, !dbg !36
  %99 = bitcast float %98 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %57, <1 x i32> %99, i1 %55) #3, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %100 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %61, i1 %60) #3, !dbg !32
  %101 = bitcast i32 %100 to float, !dbg !32
  %102 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %100, i32 1, i32 31), !dbg !32
  %103 = bitcast i32 %102 to float, !dbg !32
  %104 = fadd float %101, %103, !dbg !36
  %105 = bitcast float %104 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %61, <1 x i32> %105, i1 %71) #3, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %106 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !32
  %107 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %77, float %106) #3, !dbg !38
  %108 = bitcast float %107 to i32, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %108, ptr addrspace(1) %14, i1 %6) #3, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cb7ll5lprjk4uzj3jhxkbtb3uxlwrdyp4zkvv3owuleuxcclch3r.py", directory: "inductor_cache/b7")
!4 = !{ptr @triton_per_fused__softmax_10, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_10, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_10", linkageName: "triton_per_fused__softmax_10", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 42, scope: !7)
!14 = !DILocation(line: 31, column: 39, scope: !7)
!15 = !DILocation(line: 31, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 47, scope: !7)
!17 = !DILocation(line: 32, column: 19, scope: !7)
!18 = !DILocation(line: 34, column: 18, scope: !7)
!19 = !DILocation(line: 36, column: 33, scope: !7)
!20 = !DILocation(line: 131, column: 29, scope: !21, inlinedAt: !23)
!21 = distinct !DILexicalBlockFile(scope: !7, file: !22, discriminator: 0)
!22 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!23 = !DILocation(line: 37, column: 37, scope: !7)
!24 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !23)
!25 = distinct !DILexicalBlockFile(scope: !21, file: !22, discriminator: 0)
!26 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !23)
!27 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !23)
!28 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !23)
!29 = !DILocation(line: 38, column: 18, scope: !7)
!30 = !DILocation(line: 39, column: 23, scope: !7)
!31 = !DILocation(line: 41, column: 35, scope: !7)
!32 = !DILocation(line: 267, column: 36, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!34 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!35 = !DILocation(line: 42, column: 26, scope: !7)
!36 = !DILocation(line: 256, column: 15, scope: !37, inlinedAt: !35)
!37 = distinct !DILexicalBlockFile(scope: !33, file: !34, discriminator: 0)
!38 = !DILocation(line: 43, column: 19, scope: !7)
!39 = !DILocation(line: 44, column: 48, scope: !7)
!40 = !DILocation(line: 44, column: 4, scope: !7)
