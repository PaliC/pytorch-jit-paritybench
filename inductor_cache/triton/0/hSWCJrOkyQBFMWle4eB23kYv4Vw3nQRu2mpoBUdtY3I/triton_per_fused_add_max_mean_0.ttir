#loc = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":19:0)
#loc1 = loc(unknown)
#loc59 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":50:24)
#loc88 = loc(callsite(#loc1 at #loc59))
module {
  tt.func public @triton_per_fused_add_max_mean_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":19:0)) attributes {noinline = false} {
    %c15_i32 = arith.constant 15 : i32 loc(#loc1)
    %c14_i32 = arith.constant 14 : i32 loc(#loc1)
    %c13_i32 = arith.constant 13 : i32 loc(#loc1)
    %c12_i32 = arith.constant 12 : i32 loc(#loc1)
    %c11_i32 = arith.constant 11 : i32 loc(#loc1)
    %c10_i32 = arith.constant 10 : i32 loc(#loc1)
    %c9_i32 = arith.constant 9 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c7_i32 = arith.constant 7 : i32 loc(#loc1)
    %c6_i32 = arith.constant 6 : i32 loc(#loc1)
    %c5_i32 = arith.constant 5 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.muli %0, %c16_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x16xi32> loc(#loc7)
    %7 = arith.addi %4, %6 : tensor<1x16xi32> loc(#loc7)
    %8 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc9)
    %11 = tt.load %9, %10, %cst_0 : tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %12 = tt.addptr %arg1, %5 : !tt.ptr<f32>, i32 loc(#loc10)
    %13 = tt.splat %12 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc10)
    %14 = tt.load %13, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc11)
    %15 = arith.addi %5, %c1_i32 : i32 loc(#loc12)
    %16 = tt.addptr %arg1, %15 : !tt.ptr<f32>, i32 loc(#loc13)
    %17 = tt.splat %16 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc13)
    %18 = tt.load %17, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc14)
    %19 = arith.addi %5, %c2_i32 : i32 loc(#loc15)
    %20 = tt.addptr %arg1, %19 : !tt.ptr<f32>, i32 loc(#loc16)
    %21 = tt.splat %20 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc16)
    %22 = tt.load %21, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc17)
    %23 = arith.addi %5, %c3_i32 : i32 loc(#loc18)
    %24 = tt.addptr %arg1, %23 : !tt.ptr<f32>, i32 loc(#loc19)
    %25 = tt.splat %24 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc19)
    %26 = tt.load %25, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc20)
    %27 = arith.addi %5, %c4_i32 : i32 loc(#loc21)
    %28 = tt.addptr %arg1, %27 : !tt.ptr<f32>, i32 loc(#loc22)
    %29 = tt.splat %28 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc22)
    %30 = tt.load %29, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc23)
    %31 = arith.addi %5, %c5_i32 : i32 loc(#loc24)
    %32 = tt.addptr %arg1, %31 : !tt.ptr<f32>, i32 loc(#loc25)
    %33 = tt.splat %32 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc25)
    %34 = tt.load %33, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc26)
    %35 = arith.addi %5, %c6_i32 : i32 loc(#loc27)
    %36 = tt.addptr %arg1, %35 : !tt.ptr<f32>, i32 loc(#loc28)
    %37 = tt.splat %36 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc28)
    %38 = tt.load %37, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc29)
    %39 = arith.addi %5, %c7_i32 : i32 loc(#loc30)
    %40 = tt.addptr %arg1, %39 : !tt.ptr<f32>, i32 loc(#loc31)
    %41 = tt.splat %40 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc31)
    %42 = tt.load %41, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc32)
    %43 = arith.addi %5, %c8_i32 : i32 loc(#loc33)
    %44 = tt.addptr %arg1, %43 : !tt.ptr<f32>, i32 loc(#loc34)
    %45 = tt.splat %44 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc34)
    %46 = tt.load %45, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc35)
    %47 = arith.addi %5, %c9_i32 : i32 loc(#loc36)
    %48 = tt.addptr %arg1, %47 : !tt.ptr<f32>, i32 loc(#loc37)
    %49 = tt.splat %48 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc37)
    %50 = tt.load %49, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc38)
    %51 = arith.addi %5, %c10_i32 : i32 loc(#loc39)
    %52 = tt.addptr %arg1, %51 : !tt.ptr<f32>, i32 loc(#loc40)
    %53 = tt.splat %52 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc40)
    %54 = tt.load %53, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc41)
    %55 = arith.addi %5, %c11_i32 : i32 loc(#loc42)
    %56 = tt.addptr %arg1, %55 : !tt.ptr<f32>, i32 loc(#loc43)
    %57 = tt.splat %56 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc43)
    %58 = tt.load %57, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc44)
    %59 = arith.addi %5, %c12_i32 : i32 loc(#loc45)
    %60 = tt.addptr %arg1, %59 : !tt.ptr<f32>, i32 loc(#loc46)
    %61 = tt.splat %60 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc46)
    %62 = tt.load %61, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc47)
    %63 = arith.addi %5, %c13_i32 : i32 loc(#loc48)
    %64 = tt.addptr %arg1, %63 : !tt.ptr<f32>, i32 loc(#loc49)
    %65 = tt.splat %64 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc49)
    %66 = tt.load %65, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc50)
    %67 = arith.addi %5, %c14_i32 : i32 loc(#loc51)
    %68 = tt.addptr %arg1, %67 : !tt.ptr<f32>, i32 loc(#loc52)
    %69 = tt.splat %68 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc52)
    %70 = tt.load %69, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc53)
    %71 = arith.addi %5, %c15_i32 : i32 loc(#loc54)
    %72 = tt.addptr %arg1, %71 : !tt.ptr<f32>, i32 loc(#loc55)
    %73 = tt.splat %72 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc55)
    %74 = tt.load %73, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc56)
    %75 = arith.select %10, %11, %cst_0 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc57)
    %76 = "tt.reduce"(%75) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc59)), %arg5: f32 loc(callsite(#loc1 at #loc59))):
      %142 = arith.addf %arg4, %arg5 : f32 loc(#loc150)
      tt.reduce.return %142 : f32 loc(#loc87)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc87)
    %77 = tt.expand_dims %76 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc61)
    %78 = arith.cmpf ogt, %14, %18 : tensor<1x1xf32> loc(#loc90)
    %79 = arith.cmpf une, %14, %14 : tensor<1x1xf32> loc(#loc91)
    %80 = arith.ori %78, %79 : tensor<1x1xi1> loc(#loc92)
    %81 = arith.select %80, %14, %18 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc93)
    %82 = arith.cmpf ogt, %81, %22 : tensor<1x1xf32> loc(#loc94)
    %83 = arith.cmpf une, %81, %81 : tensor<1x1xf32> loc(#loc95)
    %84 = arith.ori %82, %83 : tensor<1x1xi1> loc(#loc96)
    %85 = arith.select %84, %81, %22 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc97)
    %86 = arith.cmpf ogt, %85, %26 : tensor<1x1xf32> loc(#loc98)
    %87 = arith.cmpf une, %85, %85 : tensor<1x1xf32> loc(#loc99)
    %88 = arith.ori %86, %87 : tensor<1x1xi1> loc(#loc100)
    %89 = arith.select %88, %85, %26 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc101)
    %90 = arith.cmpf ogt, %30, %34 : tensor<1x1xf32> loc(#loc102)
    %91 = arith.cmpf une, %30, %30 : tensor<1x1xf32> loc(#loc103)
    %92 = arith.ori %90, %91 : tensor<1x1xi1> loc(#loc104)
    %93 = arith.select %92, %30, %34 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc105)
    %94 = arith.cmpf ogt, %93, %38 : tensor<1x1xf32> loc(#loc106)
    %95 = arith.cmpf une, %93, %93 : tensor<1x1xf32> loc(#loc107)
    %96 = arith.ori %94, %95 : tensor<1x1xi1> loc(#loc108)
    %97 = arith.select %96, %93, %38 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc109)
    %98 = arith.cmpf ogt, %97, %42 : tensor<1x1xf32> loc(#loc110)
    %99 = arith.cmpf une, %97, %97 : tensor<1x1xf32> loc(#loc111)
    %100 = arith.ori %98, %99 : tensor<1x1xi1> loc(#loc112)
    %101 = arith.select %100, %97, %42 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc113)
    %102 = arith.cmpf ogt, %89, %101 : tensor<1x1xf32> loc(#loc114)
    %103 = arith.cmpf une, %89, %89 : tensor<1x1xf32> loc(#loc115)
    %104 = arith.ori %102, %103 : tensor<1x1xi1> loc(#loc116)
    %105 = arith.select %104, %89, %101 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc117)
    %106 = arith.cmpf ogt, %46, %50 : tensor<1x1xf32> loc(#loc118)
    %107 = arith.cmpf une, %46, %46 : tensor<1x1xf32> loc(#loc119)
    %108 = arith.ori %106, %107 : tensor<1x1xi1> loc(#loc120)
    %109 = arith.select %108, %46, %50 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc121)
    %110 = arith.cmpf ogt, %109, %54 : tensor<1x1xf32> loc(#loc122)
    %111 = arith.cmpf une, %109, %109 : tensor<1x1xf32> loc(#loc123)
    %112 = arith.ori %110, %111 : tensor<1x1xi1> loc(#loc124)
    %113 = arith.select %112, %109, %54 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc125)
    %114 = arith.cmpf ogt, %113, %58 : tensor<1x1xf32> loc(#loc126)
    %115 = arith.cmpf une, %113, %113 : tensor<1x1xf32> loc(#loc127)
    %116 = arith.ori %114, %115 : tensor<1x1xi1> loc(#loc128)
    %117 = arith.select %116, %113, %58 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc129)
    %118 = arith.cmpf ogt, %105, %117 : tensor<1x1xf32> loc(#loc130)
    %119 = arith.cmpf une, %105, %105 : tensor<1x1xf32> loc(#loc131)
    %120 = arith.ori %118, %119 : tensor<1x1xi1> loc(#loc132)
    %121 = arith.select %120, %105, %117 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc133)
    %122 = arith.cmpf ogt, %62, %66 : tensor<1x1xf32> loc(#loc134)
    %123 = arith.cmpf une, %62, %62 : tensor<1x1xf32> loc(#loc135)
    %124 = arith.ori %122, %123 : tensor<1x1xi1> loc(#loc136)
    %125 = arith.select %124, %62, %66 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc137)
    %126 = arith.cmpf ogt, %125, %70 : tensor<1x1xf32> loc(#loc138)
    %127 = arith.cmpf une, %125, %125 : tensor<1x1xf32> loc(#loc139)
    %128 = arith.ori %126, %127 : tensor<1x1xi1> loc(#loc140)
    %129 = arith.select %128, %125, %70 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc141)
    %130 = arith.cmpf ogt, %129, %74 : tensor<1x1xf32> loc(#loc142)
    %131 = arith.cmpf une, %129, %129 : tensor<1x1xf32> loc(#loc143)
    %132 = arith.ori %130, %131 : tensor<1x1xi1> loc(#loc144)
    %133 = arith.select %132, %129, %74 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc145)
    %134 = arith.cmpf ogt, %121, %133 : tensor<1x1xf32> loc(#loc146)
    %135 = arith.cmpf une, %121, %121 : tensor<1x1xf32> loc(#loc147)
    %136 = arith.ori %134, %135 : tensor<1x1xi1> loc(#loc148)
    %137 = arith.select %136, %121, %133 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc149)
    %138 = arith.divf %77, %cst : tensor<1x1xf32> loc(#loc81)
    %139 = arith.addf %137, %138 : tensor<1x1xf32> loc(#loc82)
    gpu.barrier loc(#loc83)
    %140 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc84)
    %141 = tt.splat %140 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc84)
    tt.store %141, %139, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc85)
    tt.return loc(#loc86)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":23:28)
#loc3 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":25:21)
#loc4 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":26:26)
#loc5 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":26:34)
#loc6 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":31:38)
#loc7 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":31:35)
#loc8 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":31:30)
#loc9 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":31:43)
#loc10 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":32:30)
#loc11 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":32:38)
#loc12 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":33:34)
#loc13 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":33:30)
#loc14 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":33:42)
#loc15 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":34:34)
#loc16 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":34:30)
#loc17 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":34:42)
#loc18 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":35:35)
#loc19 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":35:31)
#loc20 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":35:43)
#loc21 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":36:35)
#loc22 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":36:31)
#loc23 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":36:43)
#loc24 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":37:35)
#loc25 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":37:31)
#loc26 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":37:43)
#loc27 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":38:35)
#loc28 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":38:31)
#loc29 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":38:43)
#loc30 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":39:35)
#loc31 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":39:31)
#loc32 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":39:43)
#loc33 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":40:35)
#loc34 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":40:31)
#loc35 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":40:43)
#loc36 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":41:35)
#loc37 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":41:31)
#loc38 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":41:43)
#loc39 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":42:36)
#loc40 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":42:31)
#loc41 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":42:44)
#loc42 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":43:36)
#loc43 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":43:31)
#loc44 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":43:44)
#loc45 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":44:36)
#loc46 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":44:31)
#loc47 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":44:44)
#loc48 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":45:36)
#loc49 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":45:31)
#loc50 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":45:44)
#loc51 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":46:36)
#loc52 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":46:31)
#loc53 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":46:44)
#loc54 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":47:36)
#loc55 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":47:31)
#loc56 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":47:44)
#loc57 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":49:33)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc61 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":50:27)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc63 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":51:40)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc67 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":52:40)
#loc68 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":53:41)
#loc69 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":54:42)
#loc70 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":55:42)
#loc71 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":56:42)
#loc72 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":57:42)
#loc73 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":58:42)
#loc74 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":59:42)
#loc75 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":60:42)
#loc76 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":61:42)
#loc77 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":62:42)
#loc78 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":63:42)
#loc79 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":64:42)
#loc80 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":65:42)
#loc81 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":67:19)
#loc82 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":68:20)
#loc83 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":69:4)
#loc84 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":70:28)
#loc85 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":70:40)
#loc86 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":70:4)
#loc87 = loc(callsite(#loc58 at #loc59))
#loc89 = loc(callsite(#loc60 at #loc58))
#loc90 = loc(callsite(#loc62 at #loc63))
#loc91 = loc(callsite(#loc64 at #loc63))
#loc92 = loc(callsite(#loc65 at #loc63))
#loc93 = loc(callsite(#loc66 at #loc63))
#loc94 = loc(callsite(#loc62 at #loc67))
#loc95 = loc(callsite(#loc64 at #loc67))
#loc96 = loc(callsite(#loc65 at #loc67))
#loc97 = loc(callsite(#loc66 at #loc67))
#loc98 = loc(callsite(#loc62 at #loc68))
#loc99 = loc(callsite(#loc64 at #loc68))
#loc100 = loc(callsite(#loc65 at #loc68))
#loc101 = loc(callsite(#loc66 at #loc68))
#loc102 = loc(callsite(#loc62 at #loc69))
#loc103 = loc(callsite(#loc64 at #loc69))
#loc104 = loc(callsite(#loc65 at #loc69))
#loc105 = loc(callsite(#loc66 at #loc69))
#loc106 = loc(callsite(#loc62 at #loc70))
#loc107 = loc(callsite(#loc64 at #loc70))
#loc108 = loc(callsite(#loc65 at #loc70))
#loc109 = loc(callsite(#loc66 at #loc70))
#loc110 = loc(callsite(#loc62 at #loc71))
#loc111 = loc(callsite(#loc64 at #loc71))
#loc112 = loc(callsite(#loc65 at #loc71))
#loc113 = loc(callsite(#loc66 at #loc71))
#loc114 = loc(callsite(#loc62 at #loc72))
#loc115 = loc(callsite(#loc64 at #loc72))
#loc116 = loc(callsite(#loc65 at #loc72))
#loc117 = loc(callsite(#loc66 at #loc72))
#loc118 = loc(callsite(#loc62 at #loc73))
#loc119 = loc(callsite(#loc64 at #loc73))
#loc120 = loc(callsite(#loc65 at #loc73))
#loc121 = loc(callsite(#loc66 at #loc73))
#loc122 = loc(callsite(#loc62 at #loc74))
#loc123 = loc(callsite(#loc64 at #loc74))
#loc124 = loc(callsite(#loc65 at #loc74))
#loc125 = loc(callsite(#loc66 at #loc74))
#loc126 = loc(callsite(#loc62 at #loc75))
#loc127 = loc(callsite(#loc64 at #loc75))
#loc128 = loc(callsite(#loc65 at #loc75))
#loc129 = loc(callsite(#loc66 at #loc75))
#loc130 = loc(callsite(#loc62 at #loc76))
#loc131 = loc(callsite(#loc64 at #loc76))
#loc132 = loc(callsite(#loc65 at #loc76))
#loc133 = loc(callsite(#loc66 at #loc76))
#loc134 = loc(callsite(#loc62 at #loc77))
#loc135 = loc(callsite(#loc64 at #loc77))
#loc136 = loc(callsite(#loc65 at #loc77))
#loc137 = loc(callsite(#loc66 at #loc77))
#loc138 = loc(callsite(#loc62 at #loc78))
#loc139 = loc(callsite(#loc64 at #loc78))
#loc140 = loc(callsite(#loc65 at #loc78))
#loc141 = loc(callsite(#loc66 at #loc78))
#loc142 = loc(callsite(#loc62 at #loc79))
#loc143 = loc(callsite(#loc64 at #loc79))
#loc144 = loc(callsite(#loc65 at #loc79))
#loc145 = loc(callsite(#loc66 at #loc79))
#loc146 = loc(callsite(#loc62 at #loc80))
#loc147 = loc(callsite(#loc64 at #loc80))
#loc148 = loc(callsite(#loc65 at #loc80))
#loc149 = loc(callsite(#loc66 at #loc80))
#loc150 = loc(callsite(#loc89 at #loc59))
