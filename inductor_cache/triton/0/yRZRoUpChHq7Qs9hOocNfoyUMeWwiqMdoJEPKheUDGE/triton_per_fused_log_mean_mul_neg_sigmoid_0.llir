; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_log_mean_mul_neg_sigmoid_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = shl i32 %5, 2, !dbg !10
  %7 = and i32 %6, 252, !dbg !10
  %8 = zext nneg i32 %7 to i64, !dbg !11
  %9 = getelementptr float, ptr addrspace(1) %1, i64 %8, !dbg !11
  %10 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %9, i1 true) #4, !dbg !12
  %11 = extractvalue { i32, i32, i32, i32 } %10, 0, !dbg !12
  %12 = extractvalue { i32, i32, i32, i32 } %10, 1, !dbg !12
  %13 = extractvalue { i32, i32, i32, i32 } %10, 2, !dbg !12
  %14 = extractvalue { i32, i32, i32, i32 } %10, 3, !dbg !12
  %15 = bitcast i32 %11 to float, !dbg !12
  %16 = bitcast i32 %12 to float, !dbg !12
  %17 = bitcast i32 %13 to float, !dbg !12
  %18 = bitcast i32 %14 to float, !dbg !12
  %19 = getelementptr float, ptr addrspace(1) %2, i64 %8, !dbg !13
  %20 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %19, i1 true) #4, !dbg !14
  %21 = extractvalue { i32, i32, i32, i32 } %20, 0, !dbg !14
  %22 = extractvalue { i32, i32, i32, i32 } %20, 1, !dbg !14
  %23 = extractvalue { i32, i32, i32, i32 } %20, 2, !dbg !14
  %24 = extractvalue { i32, i32, i32, i32 } %20, 3, !dbg !14
  %25 = bitcast i32 %21 to float, !dbg !14
  %26 = bitcast i32 %22 to float, !dbg !14
  %27 = bitcast i32 %23 to float, !dbg !14
  %28 = bitcast i32 %24 to float, !dbg !14
  %29 = fmul float %15, %25, !dbg !15
  %30 = fmul float %16, %26, !dbg !15
  %31 = fmul float %17, %27, !dbg !15
  %32 = fmul float %18, %28, !dbg !15
  %33 = fsub float 0.000000e+00, %29, !dbg !16
  %34 = fsub float 0.000000e+00, %30, !dbg !16
  %35 = fsub float 0.000000e+00, %31, !dbg !16
  %36 = fsub float 0.000000e+00, %32, !dbg !16
  %37 = fmul float %33, 0x3FF7154760000000, !dbg !20
  %38 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %37) #4, !dbg !20
  %39 = fmul float %34, 0x3FF7154760000000, !dbg !20
  %40 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %39) #4, !dbg !20
  %41 = fmul float %35, 0x3FF7154760000000, !dbg !20
  %42 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %41) #4, !dbg !20
  %43 = fmul float %36, 0x3FF7154760000000, !dbg !20
  %44 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %43) #4, !dbg !20
  %45 = fadd float %38, 1.000000e+00, !dbg !21
  %46 = fadd float %40, 1.000000e+00, !dbg !21
  %47 = fadd float %42, 1.000000e+00, !dbg !21
  %48 = fadd float %44, 1.000000e+00, !dbg !21
  %49 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %45) #4, !dbg !22
  %50 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %46) #4, !dbg !22
  %51 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %47) #4, !dbg !22
  %52 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %48) #4, !dbg !22
  %53 = fcmp olt float %49, 0x3810000000000000, !dbg !23
  %54 = fmul float %49, 0x4160000000000000, !dbg !23
  %.02.i = select i1 %53, float %54, float %49, !dbg !23
  %i.i.0.i = select i1 %53, float -2.300000e+01, float 0.000000e+00, !dbg !23
  %55 = bitcast float %.02.i to i32, !dbg !23
  %56 = add i32 %55, -1059760811, !dbg !23
  %57 = and i32 %56, -8388608, !dbg !23
  %58 = sub i32 %55, %57, !dbg !23
  %59 = bitcast i32 %58 to float, !dbg !23
  %60 = sitofp i32 %57 to float, !dbg !23
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i = icmp eq i32 %61, 0, !dbg !23
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %60, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !23
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %60, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !23
  %.08.i = select i1 %.not.i, float %63, float %62, !dbg !23
  %64 = fadd float %59, -1.000000e+00, !dbg !23
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i = icmp eq i32 %65, 0, !dbg !23
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %64, float 0x3FC2073EC0000000) #4, !dbg !23
  %67 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %64, float 0x3FC2073EC0000000) #4, !dbg !23
  %.010.i = select i1 %.not1.i, float %67, float %66, !dbg !23
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i = icmp eq i32 %68, 0, !dbg !23
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %64, float 0xBFBF19B980000000) #4, !dbg !23
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %64, float 0xBFBF19B980000000) #4, !dbg !23
  %.011.i = select i1 %.not2.i, float %70, float %69, !dbg !23
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i = icmp eq i32 %71, 0, !dbg !23
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %64, float 0x3FC1E52AA0000000) #4, !dbg !23
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %64, float 0x3FC1E52AA0000000) #4, !dbg !23
  %.012.i = select i1 %.not3.i, float %73, float %72, !dbg !23
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i = icmp eq i32 %74, 0, !dbg !23
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %64, float 0xBFC55B1720000000) #4, !dbg !23
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %64, float 0xBFC55B1720000000) #4, !dbg !23
  %.09.i = select i1 %.not4.i, float %76, float %75, !dbg !23
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i = icmp eq i32 %77, 0, !dbg !23
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %64, float 0x3FC99DA160000000) #4, !dbg !23
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %64, float 0x3FC99DA160000000) #4, !dbg !23
  %.05.i = select i1 %.not5.i, float %79, float %78, !dbg !23
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i = icmp eq i32 %80, 0, !dbg !23
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %64, float 0xBFCFFFE440000000) #4, !dbg !23
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %64, float 0xBFCFFFE440000000) #4, !dbg !23
  %.01.i = select i1 %.not6.i, float %82, float %81, !dbg !23
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not7.i = icmp eq i32 %83, 0, !dbg !23
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %64, float 0x3FD5554F00000000) #4, !dbg !23
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %64, float 0x3FD5554F00000000) #4, !dbg !23
  %.0.i = select i1 %.not7.i, float %85, float %84, !dbg !23
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not8.i = icmp eq i32 %86, 0, !dbg !23
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %64, float -5.000000e-01) #4, !dbg !23
  %88 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %64, float -5.000000e-01) #4, !dbg !23
  %.07.i = select i1 %.not8.i, float %88, float %87, !dbg !23
  %89 = fmul float %64, %.07.i, !dbg !23
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not9.i = icmp eq i32 %90, 0, !dbg !23
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %89, float %64, float %64) #4, !dbg !23
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %89, float %64, float %64) #4, !dbg !23
  %.06.i = select i1 %.not9.i, float %92, float %91, !dbg !23
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not10.i = icmp eq i32 %93, 0, !dbg !23
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !23
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !23
  %.04.i = select i1 %.not10.i, float %95, float %94, !dbg !23
  %96 = icmp ugt i32 %55, 2139095039, !dbg !23
  br i1 %96, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !23

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not11.i = icmp eq i32 %97, 0, !dbg !23
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %.03.i = select i1 %.not11.i, float %99, float %98, !dbg !23
  br label %__nv_logf.exit, !dbg !23

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !23
  %100 = fcmp olt float %50, 0x3810000000000000, !dbg !23
  %101 = fmul float %50, 0x4160000000000000, !dbg !23
  %.02.i1 = select i1 %100, float %101, float %50, !dbg !23
  %i.i.0.i2 = select i1 %100, float -2.300000e+01, float 0.000000e+00, !dbg !23
  %102 = bitcast float %.02.i1 to i32, !dbg !23
  %103 = add i32 %102, -1059760811, !dbg !23
  %104 = and i32 %103, -8388608, !dbg !23
  %105 = sub i32 %102, %104, !dbg !23
  %106 = bitcast i32 %105 to float, !dbg !23
  %107 = sitofp i32 %104 to float, !dbg !23
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i3 = icmp eq i32 %108, 0, !dbg !23
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %107, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !23
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %107, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !23
  %.08.i4 = select i1 %.not.i3, float %110, float %109, !dbg !23
  %111 = fadd float %106, -1.000000e+00, !dbg !23
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i5 = icmp eq i32 %112, 0, !dbg !23
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %111, float 0x3FC2073EC0000000) #4, !dbg !23
  %114 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %111, float 0x3FC2073EC0000000) #4, !dbg !23
  %.010.i6 = select i1 %.not1.i5, float %114, float %113, !dbg !23
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i7 = icmp eq i32 %115, 0, !dbg !23
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %111, float 0xBFBF19B980000000) #4, !dbg !23
  %117 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %111, float 0xBFBF19B980000000) #4, !dbg !23
  %.011.i8 = select i1 %.not2.i7, float %117, float %116, !dbg !23
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i9 = icmp eq i32 %118, 0, !dbg !23
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %111, float 0x3FC1E52AA0000000) #4, !dbg !23
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %111, float 0x3FC1E52AA0000000) #4, !dbg !23
  %.012.i10 = select i1 %.not3.i9, float %120, float %119, !dbg !23
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i11 = icmp eq i32 %121, 0, !dbg !23
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %111, float 0xBFC55B1720000000) #4, !dbg !23
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %111, float 0xBFC55B1720000000) #4, !dbg !23
  %.09.i12 = select i1 %.not4.i11, float %123, float %122, !dbg !23
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i13 = icmp eq i32 %124, 0, !dbg !23
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %111, float 0x3FC99DA160000000) #4, !dbg !23
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %111, float 0x3FC99DA160000000) #4, !dbg !23
  %.05.i14 = select i1 %.not5.i13, float %126, float %125, !dbg !23
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i15 = icmp eq i32 %127, 0, !dbg !23
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %111, float 0xBFCFFFE440000000) #4, !dbg !23
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %111, float 0xBFCFFFE440000000) #4, !dbg !23
  %.01.i16 = select i1 %.not6.i15, float %129, float %128, !dbg !23
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not7.i17 = icmp eq i32 %130, 0, !dbg !23
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %111, float 0x3FD5554F00000000) #4, !dbg !23
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %111, float 0x3FD5554F00000000) #4, !dbg !23
  %.0.i18 = select i1 %.not7.i17, float %132, float %131, !dbg !23
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not8.i19 = icmp eq i32 %133, 0, !dbg !23
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %111, float -5.000000e-01) #4, !dbg !23
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %111, float -5.000000e-01) #4, !dbg !23
  %.07.i20 = select i1 %.not8.i19, float %135, float %134, !dbg !23
  %136 = fmul float %111, %.07.i20, !dbg !23
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not9.i21 = icmp eq i32 %137, 0, !dbg !23
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %136, float %111, float %111) #4, !dbg !23
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %136, float %111, float %111) #4, !dbg !23
  %.06.i22 = select i1 %.not9.i21, float %139, float %138, !dbg !23
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not10.i23 = icmp eq i32 %140, 0, !dbg !23
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !23
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !23
  %.04.i24 = select i1 %.not10.i23, float %142, float %141, !dbg !23
  %143 = icmp ugt i32 %102, 2139095039, !dbg !23
  br i1 %143, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !23

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not11.i28 = icmp eq i32 %144, 0, !dbg !23
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %.03.i29 = select i1 %.not11.i28, float %146, float %145, !dbg !23
  br label %__nv_logf.exit30, !dbg !23

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !23
  %147 = fcmp olt float %51, 0x3810000000000000, !dbg !23
  %148 = fmul float %51, 0x4160000000000000, !dbg !23
  %.02.i31 = select i1 %147, float %148, float %51, !dbg !23
  %i.i.0.i32 = select i1 %147, float -2.300000e+01, float 0.000000e+00, !dbg !23
  %149 = bitcast float %.02.i31 to i32, !dbg !23
  %150 = add i32 %149, -1059760811, !dbg !23
  %151 = and i32 %150, -8388608, !dbg !23
  %152 = sub i32 %149, %151, !dbg !23
  %153 = bitcast i32 %152 to float, !dbg !23
  %154 = sitofp i32 %151 to float, !dbg !23
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i33 = icmp eq i32 %155, 0, !dbg !23
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %154, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !23
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %154, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !23
  %.08.i34 = select i1 %.not.i33, float %157, float %156, !dbg !23
  %158 = fadd float %153, -1.000000e+00, !dbg !23
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i35 = icmp eq i32 %159, 0, !dbg !23
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %158, float 0x3FC2073EC0000000) #4, !dbg !23
  %161 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %158, float 0x3FC2073EC0000000) #4, !dbg !23
  %.010.i36 = select i1 %.not1.i35, float %161, float %160, !dbg !23
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i37 = icmp eq i32 %162, 0, !dbg !23
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %158, float 0xBFBF19B980000000) #4, !dbg !23
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %158, float 0xBFBF19B980000000) #4, !dbg !23
  %.011.i38 = select i1 %.not2.i37, float %164, float %163, !dbg !23
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i39 = icmp eq i32 %165, 0, !dbg !23
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %158, float 0x3FC1E52AA0000000) #4, !dbg !23
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %158, float 0x3FC1E52AA0000000) #4, !dbg !23
  %.012.i40 = select i1 %.not3.i39, float %167, float %166, !dbg !23
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i41 = icmp eq i32 %168, 0, !dbg !23
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %158, float 0xBFC55B1720000000) #4, !dbg !23
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %158, float 0xBFC55B1720000000) #4, !dbg !23
  %.09.i42 = select i1 %.not4.i41, float %170, float %169, !dbg !23
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i43 = icmp eq i32 %171, 0, !dbg !23
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %158, float 0x3FC99DA160000000) #4, !dbg !23
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %158, float 0x3FC99DA160000000) #4, !dbg !23
  %.05.i44 = select i1 %.not5.i43, float %173, float %172, !dbg !23
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i45 = icmp eq i32 %174, 0, !dbg !23
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %158, float 0xBFCFFFE440000000) #4, !dbg !23
  %176 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %158, float 0xBFCFFFE440000000) #4, !dbg !23
  %.01.i46 = select i1 %.not6.i45, float %176, float %175, !dbg !23
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not7.i47 = icmp eq i32 %177, 0, !dbg !23
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %158, float 0x3FD5554F00000000) #4, !dbg !23
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %158, float 0x3FD5554F00000000) #4, !dbg !23
  %.0.i48 = select i1 %.not7.i47, float %179, float %178, !dbg !23
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not8.i49 = icmp eq i32 %180, 0, !dbg !23
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %158, float -5.000000e-01) #4, !dbg !23
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %158, float -5.000000e-01) #4, !dbg !23
  %.07.i50 = select i1 %.not8.i49, float %182, float %181, !dbg !23
  %183 = fmul float %158, %.07.i50, !dbg !23
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not9.i51 = icmp eq i32 %184, 0, !dbg !23
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %183, float %158, float %158) #4, !dbg !23
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %183, float %158, float %158) #4, !dbg !23
  %.06.i52 = select i1 %.not9.i51, float %186, float %185, !dbg !23
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not10.i53 = icmp eq i32 %187, 0, !dbg !23
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !23
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !23
  %.04.i54 = select i1 %.not10.i53, float %189, float %188, !dbg !23
  %190 = icmp ugt i32 %149, 2139095039, !dbg !23
  br i1 %190, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !23

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not11.i58 = icmp eq i32 %191, 0, !dbg !23
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %.03.i59 = select i1 %.not11.i58, float %193, float %192, !dbg !23
  br label %__nv_logf.exit60, !dbg !23

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !23
  %194 = fcmp olt float %52, 0x3810000000000000, !dbg !23
  %195 = fmul float %52, 0x4160000000000000, !dbg !23
  %.02.i61 = select i1 %194, float %195, float %52, !dbg !23
  %i.i.0.i62 = select i1 %194, float -2.300000e+01, float 0.000000e+00, !dbg !23
  %196 = bitcast float %.02.i61 to i32, !dbg !23
  %197 = add i32 %196, -1059760811, !dbg !23
  %198 = and i32 %197, -8388608, !dbg !23
  %199 = sub i32 %196, %198, !dbg !23
  %200 = bitcast i32 %199 to float, !dbg !23
  %201 = sitofp i32 %198 to float, !dbg !23
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i63 = icmp eq i32 %202, 0, !dbg !23
  %203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %201, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !23
  %204 = tail call float @llvm.nvvm.fma.rn.f(float %201, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !23
  %.08.i64 = select i1 %.not.i63, float %204, float %203, !dbg !23
  %205 = fadd float %200, -1.000000e+00, !dbg !23
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i65 = icmp eq i32 %206, 0, !dbg !23
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %205, float 0x3FC2073EC0000000) #4, !dbg !23
  %208 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %205, float 0x3FC2073EC0000000) #4, !dbg !23
  %.010.i66 = select i1 %.not1.i65, float %208, float %207, !dbg !23
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i67 = icmp eq i32 %209, 0, !dbg !23
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %205, float 0xBFBF19B980000000) #4, !dbg !23
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %205, float 0xBFBF19B980000000) #4, !dbg !23
  %.011.i68 = select i1 %.not2.i67, float %211, float %210, !dbg !23
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i69 = icmp eq i32 %212, 0, !dbg !23
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %205, float 0x3FC1E52AA0000000) #4, !dbg !23
  %214 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %205, float 0x3FC1E52AA0000000) #4, !dbg !23
  %.012.i70 = select i1 %.not3.i69, float %214, float %213, !dbg !23
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i71 = icmp eq i32 %215, 0, !dbg !23
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %205, float 0xBFC55B1720000000) #4, !dbg !23
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %205, float 0xBFC55B1720000000) #4, !dbg !23
  %.09.i72 = select i1 %.not4.i71, float %217, float %216, !dbg !23
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i73 = icmp eq i32 %218, 0, !dbg !23
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %205, float 0x3FC99DA160000000) #4, !dbg !23
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %205, float 0x3FC99DA160000000) #4, !dbg !23
  %.05.i74 = select i1 %.not5.i73, float %220, float %219, !dbg !23
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i75 = icmp eq i32 %221, 0, !dbg !23
  %222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %205, float 0xBFCFFFE440000000) #4, !dbg !23
  %223 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %205, float 0xBFCFFFE440000000) #4, !dbg !23
  %.01.i76 = select i1 %.not6.i75, float %223, float %222, !dbg !23
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not7.i77 = icmp eq i32 %224, 0, !dbg !23
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %205, float 0x3FD5554F00000000) #4, !dbg !23
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %205, float 0x3FD5554F00000000) #4, !dbg !23
  %.0.i78 = select i1 %.not7.i77, float %226, float %225, !dbg !23
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not8.i79 = icmp eq i32 %227, 0, !dbg !23
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %205, float -5.000000e-01) #4, !dbg !23
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %205, float -5.000000e-01) #4, !dbg !23
  %.07.i80 = select i1 %.not8.i79, float %229, float %228, !dbg !23
  %230 = fmul float %205, %.07.i80, !dbg !23
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not9.i81 = icmp eq i32 %231, 0, !dbg !23
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %230, float %205, float %205) #4, !dbg !23
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %230, float %205, float %205) #4, !dbg !23
  %.06.i82 = select i1 %.not9.i81, float %233, float %232, !dbg !23
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not10.i83 = icmp eq i32 %234, 0, !dbg !23
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !23
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !23
  %.04.i84 = select i1 %.not10.i83, float %236, float %235, !dbg !23
  %237 = icmp ugt i32 %196, 2139095039, !dbg !23
  br i1 %237, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !23

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not11.i88 = icmp eq i32 %238, 0, !dbg !23
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %.03.i89 = select i1 %.not11.i88, float %240, float %239, !dbg !23
  br label %__nv_logf.exit90, !dbg !23

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !23
  %241 = fcmp oeq float %.02.i31, 0.000000e+00, !dbg !23
  %r.i.1.i56 = select i1 %241, float 0xFFF0000000000000, float %r.i.0.i55, !dbg !23
  %242 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !23
  %r.i.1.i26 = select i1 %242, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !23
  %243 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !23
  %r.i.1.i = select i1 %243, float 0xFFF0000000000000, float %r.i.0.i, !dbg !23
  %244 = lshr i32 %5, 5, !dbg !10
  %245 = and i32 %5, 31, !dbg !10
  %246 = fcmp oeq float %.02.i61, 0.000000e+00, !dbg !23
  %r.i.1.i86 = select i1 %246, float 0xFFF0000000000000, float %r.i.0.i85, !dbg !23
  %247 = fadd float %r.i.1.i, %r.i.1.i26, !dbg !24
  %248 = fadd float %247, %r.i.1.i56, !dbg !24
  %249 = fadd float %248, %r.i.1.i86, !dbg !24
  %250 = bitcast float %249 to i32, !dbg !27
  %251 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %250, i32 16, i32 31), !dbg !27
  %252 = bitcast i32 %251 to float, !dbg !27
  %253 = fadd float %249, %252, !dbg !24
  %254 = bitcast float %253 to i32, !dbg !27
  %255 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %254, i32 8, i32 31), !dbg !27
  %256 = bitcast i32 %255 to float, !dbg !27
  %257 = fadd float %253, %256, !dbg !24
  %258 = bitcast float %257 to i32, !dbg !27
  %259 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %258, i32 4, i32 31), !dbg !27
  %260 = bitcast i32 %259 to float, !dbg !27
  %261 = fadd float %257, %260, !dbg !24
  %262 = bitcast float %261 to i32, !dbg !27
  %263 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %262, i32 2, i32 31), !dbg !27
  %264 = bitcast i32 %263 to float, !dbg !27
  %265 = fadd float %261, %264, !dbg !24
  %266 = bitcast float %265 to i32, !dbg !27
  %267 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %266, i32 1, i32 31), !dbg !27
  %268 = bitcast i32 %267 to float, !dbg !27
  %269 = fadd float %265, %268, !dbg !24
  %270 = icmp eq i32 %245, 0, !dbg !27
  %271 = and i32 %244, 1, !dbg !27
  %272 = zext nneg i32 %271 to i64, !dbg !27
  %273 = getelementptr float, ptr addrspace(3) @global_smem, i64 %272, !dbg !27
  %274 = bitcast float %269 to <1 x i32>, !dbg !27
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %273, <1 x i32> %274, i1 %270) #4, !dbg !27
  tail call void @llvm.nvvm.barrier0(), !dbg !27
  %275 = icmp slt i32 %5, 2, !dbg !27
  %276 = sext i32 %5 to i64, !dbg !27
  %277 = getelementptr float, ptr addrspace(3) @global_smem, i64 %276, !dbg !27
  %278 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %277, i1 %275) #4, !dbg !27
  %279 = bitcast i32 %278 to float, !dbg !27
  %280 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %278, i32 1, i32 31), !dbg !27
  %281 = bitcast i32 %280 to float, !dbg !27
  %282 = fadd float %279, %281, !dbg !24
  %283 = and i32 %5, 1, !dbg !27
  %284 = icmp eq i32 %283, 0, !dbg !27
  %285 = and i1 %275, %284, !dbg !27
  %286 = bitcast float %282 to <1 x i32>, !dbg !27
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %277, <1 x i32> %286, i1 %285) #4, !dbg !27
  tail call void @llvm.nvvm.barrier0(), !dbg !27
  %287 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !27
  %288 = fadd float %287, 0.000000e+00, !dbg !28
  %289 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %288, float 2.560000e+02) #4, !dbg !32
  %290 = fsub float 0.000000e+00, %289, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !34
  %urem = and i32 %5, 63, !dbg !35
  %291 = icmp eq i32 %urem, 0, !dbg !35
  %292 = bitcast float %290 to i32, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %292, ptr addrspace(1) %0, i1 %291) #4, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctdcoxe4ar66vrlrhrt63ide6wu3w4khsdzw6lit4l62t6m4vin7.py", directory: "inductor_cache/td")
!4 = !{ptr @triton_per_fused_log_mean_mul_neg_sigmoid_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_log_mean_mul_neg_sigmoid_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_log_mean_mul_neg_sigmoid_0", linkageName: "triton_per_fused_log_mean_mul_neg_sigmoid_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 30, scope: !7)
!12 = !DILocation(line: 31, column: 35, scope: !7)
!13 = !DILocation(line: 32, column: 30, scope: !7)
!14 = !DILocation(line: 32, column: 35, scope: !7)
!15 = !DILocation(line: 33, column: 18, scope: !7)
!16 = !DILocation(line: 47, column: 30, scope: !17, inlinedAt: !19)
!17 = distinct !DILexicalBlockFile(scope: !7, file: !18, discriminator: 0)
!18 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!19 = !DILocation(line: 34, column: 22, scope: !7)
!20 = !DILocation(line: 47, column: 29, scope: !17, inlinedAt: !19)
!21 = !DILocation(line: 47, column: 20, scope: !17, inlinedAt: !19)
!22 = !DILocation(line: 47, column: 16, scope: !17, inlinedAt: !19)
!23 = !DILocation(line: 35, column: 23, scope: !7)
!24 = !DILocation(line: 256, column: 15, scope: !25, inlinedAt: !26)
!25 = distinct !DILexicalBlockFile(scope: !17, file: !18, discriminator: 0)
!26 = !DILocation(line: 37, column: 57, scope: !7)
!27 = !DILocation(line: 267, column: 36, scope: !17, inlinedAt: !26)
!28 = !DILocation(line: 73, column: 15, scope: !29, inlinedAt: !31)
!29 = distinct !DILexicalBlockFile(scope: !7, file: !30, discriminator: 0)
!30 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!31 = !DILocation(line: 37, column: 44, scope: !7)
!32 = !DILocation(line: 39, column: 18, scope: !7)
!33 = !DILocation(line: 40, column: 13, scope: !7)
!34 = !DILocation(line: 41, column: 4, scope: !7)
!35 = !DILocation(line: 42, column: 63, scope: !7)
!36 = !DILocation(line: 42, column: 4, scope: !7)
