#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#loc = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0)
#loc1 = loc(unknown)
#loc65 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":67:44)
#loc98 = loc(callsite(#loc1 at #loc65))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__unsafe_index_add_convolution_native_group_norm_33(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<32> : tensor<1x2048xi64, #blocked1> loc(#loc1)
    %cst_1 = arith.constant dense<32> : tensor<1x2048xi64, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<1024> : tensor<1x2048xi64, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<0> : tensor<1x2048xi64, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<0> : tensor<1x2048xi64, #blocked1> loc(#loc1)
    %cst_5 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c32768_i32 = arith.constant 32768 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c65536_i32 = arith.constant 65536 : i32 loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32, #blocked1> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_7 = arith.constant dense<4096> : tensor<1x2048xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<64> : tensor<1x2048xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<64> : tensor<1x2048xi32, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x2048xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x2048xi32, #blocked1> loc(#loc4)
    %6 = arith.remsi %0, %c4_i32 : i32 loc(#loc5)
    %7 = arith.divsi %0, %c4_i32 : i32 loc(#loc6)
    %8 = arith.remsi %7, %c32_i32 : i32 loc(#loc7)
    %9 = tt.addptr %arg2, %8 : !tt.ptr<f32>, i32 loc(#loc8)
    %10 = tt.splat %9 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc9)
    %11 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc9)
    %12 = tt.load %10, %11 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc9)
    %13 = arith.muli %6, %c16_i32 : i32 loc(#loc10)
    %14 = tt.splat %13 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc11)
    %15 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<1x2048x!tt.ptr<i64>, #blocked> loc(#loc12)
    %16 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<1x2048x!tt.ptr<i64>, #blocked1> loc(#loc12)
    %17 = tt.splat %1 : i1 -> tensor<1x2048xi1, #blocked> loc(#loc13)
    %18 = arith.muli %0, %c65536_i32 : i32 loc(#loc14)
    %19 = tt.splat %18 : i32 -> tensor<1x2048xi32, #blocked1> loc(#loc15)
    %20 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked1> loc(#loc16)
    %21 = arith.muli %7, %c32768_i32 : i32 loc(#loc17)
    %22 = arith.extsi %21 : i32 to i64 loc(#loc18)
    %23 = tt.splat %22 : i64 -> tensor<1x2048xi64, #blocked1> loc(#loc18)
    %24 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked1> loc(#loc19)
    %25 = tt.broadcast %12 : tensor<1x1xf32, #blocked> -> tensor<1x2048xf32, #blocked> loc(#loc20)
    %26 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked1> loc(#loc21)
    %27:3 = scf.for %arg10 = %c0_i32 to %c65536_i32 step %c2048_i32 iter_args(%arg11 = %cst, %arg12 = %cst, %arg13 = %cst) -> (tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>)  : i32 {
      %38 = tt.splat %arg10 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc23)
      %39 = tt.splat %arg10 : i32 -> tensor<1x2048xi32, #blocked1> loc(#loc23)
      %40 = arith.addi %38, %4 : tensor<1x2048xi32, #blocked> loc(#loc23)
      %41 = arith.addi %39, %5 : tensor<1x2048xi32, #blocked1> loc(#loc23)
      %42 = arith.divsi %40, %cst_7 : tensor<1x2048xi32, #blocked> loc(#loc24)
      %43 = arith.divsi %40, %cst_8 : tensor<1x2048xi32, #blocked> loc(#loc25)
      %44 = arith.remsi %43, %cst_8 : tensor<1x2048xi32, #blocked> loc(#loc26)
      %45 = arith.remsi %41, %cst_9 : tensor<1x2048xi32, #blocked1> loc(#loc27)
      %46 = arith.addi %42, %14 : tensor<1x2048xi32, #blocked> loc(#loc11)
      %47 = tt.addptr %15, %46 : tensor<1x2048x!tt.ptr<i64>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc12)
      %48 = tt.load %47, %17, %cst_3 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<i64>, #blocked> loc(#loc13)
      %49 = tt.addptr %15, %44 : tensor<1x2048x!tt.ptr<i64>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc28)
      %50 = tt.load %49 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<i64>, #blocked> loc(#loc29)
      %51 = tt.addptr %16, %45 : tensor<1x2048x!tt.ptr<i64>, #blocked1>, tensor<1x2048xi32, #blocked1> loc(#loc30)
      %52 = tt.load %51 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<i64>, #blocked1> loc(#loc31)
      %53 = arith.addi %41, %19 : tensor<1x2048xi32, #blocked1> loc(#loc15)
      %54 = tt.addptr %20, %53 : tensor<1x2048x!tt.ptr<f32>, #blocked1>, tensor<1x2048xi32, #blocked1> loc(#loc16)
      %55 = tt.splat %1 : i1 -> tensor<1x2048xi1, #blocked1> loc(#loc32)
      %56 = tt.load %54, %55, %cst_6 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>, #blocked1> loc(#loc32)
      %57 = triton_gpu.convert_layout %56 : tensor<1x2048xf32, #blocked1> -> tensor<1x2048xf32, #blocked> loc(#loc32)
      %58 = arith.addi %48, %cst_1 : tensor<1x2048xi64, #blocked> loc(#loc33)
      %59 = arith.cmpi slt, %48, %cst_3 : tensor<1x2048xi64, #blocked> loc(#loc34)
      %60 = arith.select %59, %58, %48 : tensor<1x2048xi1, #blocked>, tensor<1x2048xi64, #blocked> loc(#loc35)
      %61 = arith.addi %50, %cst_1 : tensor<1x2048xi64, #blocked> loc(#loc36)
      %62 = arith.cmpi slt, %50, %cst_3 : tensor<1x2048xi64, #blocked> loc(#loc37)
      %63 = arith.select %62, %61, %50 : tensor<1x2048xi1, #blocked>, tensor<1x2048xi64, #blocked> loc(#loc38)
      %64 = arith.addi %52, %cst_0 : tensor<1x2048xi64, #blocked1> loc(#loc39)
      %65 = arith.cmpi slt, %52, %cst_4 : tensor<1x2048xi64, #blocked1> loc(#loc40)
      %66 = arith.select %65, %64, %52 : tensor<1x2048xi1, #blocked1>, tensor<1x2048xi64, #blocked1> loc(#loc41)
      %67 = arith.muli %63, %cst_1 : tensor<1x2048xi64, #blocked> loc(#loc42)
      %68 = triton_gpu.convert_layout %67 {overflowFlags = #arith.overflow<none>} : tensor<1x2048xi64, #blocked> -> tensor<1x2048xi64, #blocked1> loc(#loc42)
      %69 = arith.addi %66, %68 : tensor<1x2048xi64, #blocked1> loc(#loc43)
      %70 = arith.muli %60, %cst_2 : tensor<1x2048xi64, #blocked> loc(#loc44)
      %71 = triton_gpu.convert_layout %70 {overflowFlags = #arith.overflow<none>} : tensor<1x2048xi64, #blocked> -> tensor<1x2048xi64, #blocked1> loc(#loc44)
      %72 = arith.addi %69, %71 : tensor<1x2048xi64, #blocked1> loc(#loc45)
      %73 = arith.addi %72, %23 : tensor<1x2048xi64, #blocked1> loc(#loc18)
      %74 = tt.addptr %24, %73 : tensor<1x2048x!tt.ptr<f32>, #blocked1>, tensor<1x2048xi64, #blocked1> loc(#loc19)
      %75 = triton_gpu.convert_layout %74 : tensor<1x2048x!tt.ptr<f32>, #blocked1> -> tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc46)
      %76 = tt.load %75, %17 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc46)
      %77 = arith.addf %76, %25 : tensor<1x2048xf32, #blocked> loc(#loc20)
      %78 = arith.addf %77, %57 : tensor<1x2048xf32, #blocked> loc(#loc47)
      %79 = arith.cmpi eq, %arg10, %c0_i32 : i32 loc(#loc48)
      %80:3 = scf.if %79 -> (tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>) {
        scf.yield %cst, %78, %cst_10 : tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc89)
      } else {
        %86 = arith.subf %78, %arg11 : tensor<1x2048xf32, #blocked> loc(#loc90)
        %87 = arith.addf %arg13, %cst_10 : tensor<1x2048xf32, #blocked> loc(#loc91)
        %88 = arith.divf %86, %87 : tensor<1x2048xf32, #blocked> loc(#loc92)
        %89 = arith.addf %arg11, %88 : tensor<1x2048xf32, #blocked> loc(#loc93)
        %90 = arith.subf %78, %89 : tensor<1x2048xf32, #blocked> loc(#loc94)
        %91 = arith.mulf %86, %90 : tensor<1x2048xf32, #blocked> loc(#loc95)
        %92 = arith.addf %arg12, %91 : tensor<1x2048xf32, #blocked> loc(#loc96)
        scf.yield %92, %89, %87 : tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc96)
      } loc(#loc88)
      %81 = arith.select %17, %80#1, %arg11 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc59)
      %82 = arith.select %17, %80#0, %arg12 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc60)
      %83 = arith.select %17, %80#2, %arg13 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc61)
      %84 = tt.addptr %26, %53 : tensor<1x2048x!tt.ptr<f32>, #blocked1>, tensor<1x2048xi32, #blocked1> loc(#loc21)
      %85 = triton_gpu.convert_layout %78 : tensor<1x2048xf32, #blocked> -> tensor<1x2048xf32, #blocked1> loc(#loc62)
      tt.store %84, %85, %55 : tensor<1x2048x!tt.ptr<f32>, #blocked1> loc(#loc62)
      scf.yield %81, %82, %83 : tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc63)
    } loc(#loc22)
    %28:3 = "tt.reduce"(%27#0, %27#1, %27#2) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc65)), %arg11: f32 loc(callsite(#loc1 at #loc65)), %arg12: f32 loc(callsite(#loc1 at #loc65)), %arg13: f32 loc(callsite(#loc1 at #loc65)), %arg14: f32 loc(callsite(#loc1 at #loc65)), %arg15: f32 loc(callsite(#loc1 at #loc65))):
      %38 = arith.subf %arg13, %arg10 : f32 loc(#loc111)
      %39 = arith.addf %arg12, %arg15 : f32 loc(#loc112)
      %40 = arith.cmpf oeq, %39, %cst_5 : f32 loc(#loc113)
      %41 = arith.divf %arg15, %39 : f32 loc(#loc114)
      %42 = arith.select %40, %cst_5, %41 : f32 loc(#loc115)
      %43 = arith.mulf %38, %42 : f32 loc(#loc116)
      %44 = arith.addf %arg10, %43 : f32 loc(#loc117)
      %45 = arith.addf %arg11, %arg14 : f32 loc(#loc118)
      %46 = arith.mulf %38, %38 : f32 loc(#loc119)
      %47 = arith.mulf %46, %arg12 : f32 loc(#loc120)
      %48 = arith.mulf %47, %42 : f32 loc(#loc121)
      %49 = arith.addf %45, %48 : f32 loc(#loc122)
      tt.reduce.return %44, %49, %39 : f32, f32, f32 loc(#loc97)
    }) : (tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>) -> (tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>) loc(#loc97)
    %29 = tt.expand_dims %28#0 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc78)
    %30 = tt.expand_dims %28#1 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc79)
    %31 = tt.expand_dims %28#2 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc80)
    %32 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc81)
    %33 = tt.splat %32 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc82)
    tt.store %33, %29, %11 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc82)
    %34 = tt.addptr %arg6, %0 : !tt.ptr<f32>, i32 loc(#loc83)
    %35 = tt.splat %34 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc84)
    tt.store %35, %30, %11 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc84)
    %36 = tt.addptr %arg7, %0 : !tt.ptr<f32>, i32 loc(#loc85)
    %37 = tt.splat %36 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc86)
    tt.store %37, %31, %11 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc86)
    tt.return loc(#loc87)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":22:28)
#loc3 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":24:21)
#loc4 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":25:33)
#loc5 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":26:19)
#loc6 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":27:19)
#loc7 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":28:26)
#loc8 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":29:31)
#loc9 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":29:36)
#loc10 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:42)
#loc11 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:39)
#loc12 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:34)
#loc13 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:47)
#loc14 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:46)
#loc15 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:40)
#loc16 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:35)
#loc17 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:71)
#loc18 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:65)
#loc19 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:35)
#loc20 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":56:24)
#loc21 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":65:29)
#loc22 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":34:36)
#loc23 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":35:27)
#loc24 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":37:23)
#loc25 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":38:25)
#loc26 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":38:31)
#loc27 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":39:23)
#loc28 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":42:34)
#loc29 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":42:39)
#loc30 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":43:34)
#loc31 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":43:39)
#loc32 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:51)
#loc33 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":46:22)
#loc34 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":47:22)
#loc35 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":48:36)
#loc36 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":49:22)
#loc37 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":50:22)
#loc38 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":51:36)
#loc39 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":52:23)
#loc40 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":53:23)
#loc41 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":54:39)
#loc42 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:46)
#loc43 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:43)
#loc44 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:58)
#loc45 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:53)
#loc46 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:76)
#loc47 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":57:24)
#loc48 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":60:66)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc50 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":60:55)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc59 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":62:54)
#loc60 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":63:50)
#loc61 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":64:58)
#loc62 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":65:52)
#loc63 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":65:8)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc70 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc72 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc73 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc74 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc75 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc76 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc77 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc78 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":69:22)
#loc79 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":70:22)
#loc80 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":71:22)
#loc81 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":72:25)
#loc82 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":72:37)
#loc83 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":73:25)
#loc84 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":73:37)
#loc85 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":74:25)
#loc86 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":74:37)
#loc87 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":74:4)
#loc88 = loc(callsite(#loc49 at #loc50))
#loc89 = loc(callsite(#loc51 at #loc50))
#loc90 = loc(callsite(#loc52 at #loc50))
#loc91 = loc(callsite(#loc53 at #loc50))
#loc92 = loc(callsite(#loc54 at #loc50))
#loc93 = loc(callsite(#loc55 at #loc50))
#loc94 = loc(callsite(#loc56 at #loc50))
#loc95 = loc(callsite(#loc57 at #loc50))
#loc96 = loc(callsite(#loc58 at #loc50))
#loc97 = loc(callsite(#loc64 at #loc65))
#loc99 = loc(callsite(#loc66 at #loc64))
#loc100 = loc(callsite(#loc67 at #loc64))
#loc101 = loc(callsite(#loc68 at #loc64))
#loc102 = loc(callsite(#loc69 at #loc64))
#loc103 = loc(callsite(#loc70 at #loc64))
#loc104 = loc(callsite(#loc71 at #loc64))
#loc105 = loc(callsite(#loc72 at #loc64))
#loc106 = loc(callsite(#loc73 at #loc64))
#loc107 = loc(callsite(#loc74 at #loc64))
#loc108 = loc(callsite(#loc75 at #loc64))
#loc109 = loc(callsite(#loc76 at #loc64))
#loc110 = loc(callsite(#loc77 at #loc64))
#loc111 = loc(callsite(#loc99 at #loc65))
#loc112 = loc(callsite(#loc100 at #loc65))
#loc113 = loc(callsite(#loc101 at #loc65))
#loc114 = loc(callsite(#loc102 at #loc65))
#loc115 = loc(callsite(#loc103 at #loc65))
#loc116 = loc(callsite(#loc104 at #loc65))
#loc117 = loc(callsite(#loc105 at #loc65))
#loc118 = loc(callsite(#loc106 at #loc65))
#loc119 = loc(callsite(#loc107 at #loc65))
#loc120 = loc(callsite(#loc108 at #loc65))
#loc121 = loc(callsite(#loc109 at #loc65))
#loc122 = loc(callsite(#loc110 at #loc65))
