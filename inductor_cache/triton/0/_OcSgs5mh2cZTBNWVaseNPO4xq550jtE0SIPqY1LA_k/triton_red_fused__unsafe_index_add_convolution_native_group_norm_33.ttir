#loc = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0)
#loc1 = loc(unknown)
#loc66 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":67:44)
#loc99 = loc(callsite(#loc1 at #loc66))
module {
  tt.func public @triton_red_fused__unsafe_index_add_convolution_native_group_norm_33(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0)) attributes {noinline = false} {
    %c32768_i32 = arith.constant 32768 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1x2048xi64> loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c65536_i32 = arith.constant 65536 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<1024> : tensor<1x2048xi64> loc(#loc1)
    %cst_3 = arith.constant dense<32> : tensor<1x2048xi64> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_5 = arith.constant dense<64> : tensor<1x2048xi32> loc(#loc1)
    %cst_6 = arith.constant dense<4096> : tensor<1x2048xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5 = arith.remsi %0, %c4_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c4_i32 : i32 loc(#loc7)
    %7 = arith.remsi %6, %c32_i32 : i32 loc(#loc8)
    %8 = tt.addptr %arg2, %7 : !tt.ptr<f32>, i32 loc(#loc9)
    %9 = tt.splat %8 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.load %9, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc10)
    %11 = arith.muli %5, %c16_i32 : i32 loc(#loc11)
    %12 = tt.splat %11 : i32 -> tensor<1x2048xi32> loc(#loc12)
    %13 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<1x2048x!tt.ptr<i64>> loc(#loc13)
    %14 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc14)
    %15 = arith.muli %0, %c65536_i32 : i32 loc(#loc15)
    %16 = tt.splat %15 : i32 -> tensor<1x2048xi32> loc(#loc16)
    %17 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc17)
    %18 = arith.muli %6, %c32768_i32 : i32 loc(#loc18)
    %19 = arith.extsi %18 : i32 to i64 loc(#loc19)
    %20 = tt.splat %19 : i64 -> tensor<1x2048xi64> loc(#loc19)
    %21 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc20)
    %22 = tt.broadcast %10 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc21)
    %23 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc22)
    %24:3 = scf.for %arg10 = %c0_i32 to %c65536_i32 step %c2048_i32 iter_args(%arg11 = %cst_4, %arg12 = %cst_4, %arg13 = %cst_4) -> (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>)  : i32 {
      %35 = tt.splat %arg10 : i32 -> tensor<1x2048xi32> loc(#loc24)
      %36 = arith.addi %35, %4 : tensor<1x2048xi32> loc(#loc24)
      %37 = arith.divsi %36, %cst_6 : tensor<1x2048xi32> loc(#loc25)
      %38 = arith.divsi %36, %cst_5 : tensor<1x2048xi32> loc(#loc26)
      %39 = arith.remsi %38, %cst_5 : tensor<1x2048xi32> loc(#loc27)
      %40 = arith.remsi %36, %cst_5 : tensor<1x2048xi32> loc(#loc28)
      %41 = arith.addi %37, %12 : tensor<1x2048xi32> loc(#loc12)
      %42 = tt.addptr %13, %41 : tensor<1x2048x!tt.ptr<i64>>, tensor<1x2048xi32> loc(#loc13)
      %43 = tt.load %42, %14, %cst_1 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<i64>> loc(#loc14)
      %44 = tt.addptr %13, %39 : tensor<1x2048x!tt.ptr<i64>>, tensor<1x2048xi32> loc(#loc29)
      %45 = tt.load %44 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<i64>> loc(#loc30)
      %46 = tt.addptr %13, %40 : tensor<1x2048x!tt.ptr<i64>>, tensor<1x2048xi32> loc(#loc31)
      %47 = tt.load %46 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<i64>> loc(#loc32)
      %48 = arith.addi %36, %16 : tensor<1x2048xi32> loc(#loc16)
      %49 = tt.addptr %17, %48 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc17)
      %50 = tt.load %49, %14, %cst_4 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc33)
      %51 = arith.addi %43, %cst_3 : tensor<1x2048xi64> loc(#loc34)
      %52 = arith.cmpi slt, %43, %cst_1 : tensor<1x2048xi64> loc(#loc35)
      %53 = arith.select %52, %51, %43 : tensor<1x2048xi1>, tensor<1x2048xi64> loc(#loc36)
      %54 = arith.addi %45, %cst_3 : tensor<1x2048xi64> loc(#loc37)
      %55 = arith.cmpi slt, %45, %cst_1 : tensor<1x2048xi64> loc(#loc38)
      %56 = arith.select %55, %54, %45 : tensor<1x2048xi1>, tensor<1x2048xi64> loc(#loc39)
      %57 = arith.addi %47, %cst_3 : tensor<1x2048xi64> loc(#loc40)
      %58 = arith.cmpi slt, %47, %cst_1 : tensor<1x2048xi64> loc(#loc41)
      %59 = arith.select %58, %57, %47 : tensor<1x2048xi1>, tensor<1x2048xi64> loc(#loc42)
      %60 = arith.muli %56, %cst_3 : tensor<1x2048xi64> loc(#loc43)
      %61 = arith.addi %59, %60 : tensor<1x2048xi64> loc(#loc44)
      %62 = arith.muli %53, %cst_2 : tensor<1x2048xi64> loc(#loc45)
      %63 = arith.addi %61, %62 : tensor<1x2048xi64> loc(#loc46)
      %64 = arith.addi %63, %20 : tensor<1x2048xi64> loc(#loc19)
      %65 = tt.addptr %21, %64 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi64> loc(#loc20)
      %66 = tt.load %65, %14 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc47)
      %67 = arith.addf %66, %22 : tensor<1x2048xf32> loc(#loc21)
      %68 = arith.addf %67, %50 : tensor<1x2048xf32> loc(#loc48)
      %69 = arith.cmpi eq, %arg10, %c0_i32 : i32 loc(#loc49)
      %70:3 = scf.if %69 -> (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) {
        scf.yield %cst_4, %68, %cst_0 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc90)
      } else {
        %75 = arith.subf %68, %arg11 : tensor<1x2048xf32> loc(#loc91)
        %76 = arith.addf %arg13, %cst_0 : tensor<1x2048xf32> loc(#loc92)
        %77 = arith.divf %75, %76 : tensor<1x2048xf32> loc(#loc93)
        %78 = arith.addf %arg11, %77 : tensor<1x2048xf32> loc(#loc94)
        %79 = arith.subf %68, %78 : tensor<1x2048xf32> loc(#loc95)
        %80 = arith.mulf %75, %79 : tensor<1x2048xf32> loc(#loc96)
        %81 = arith.addf %arg12, %80 : tensor<1x2048xf32> loc(#loc97)
        scf.yield %81, %78, %76 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc97)
      } loc(#loc89)
      %71 = arith.select %14, %70#1, %arg11 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc60)
      %72 = arith.select %14, %70#0, %arg12 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc61)
      %73 = arith.select %14, %70#2, %arg13 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc62)
      %74 = tt.addptr %23, %48 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc22)
      tt.store %74, %68, %14 : tensor<1x2048x!tt.ptr<f32>> loc(#loc63)
      scf.yield %71, %72, %73 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc64)
    } loc(#loc23)
    %25:3 = "tt.reduce"(%24#0, %24#1, %24#2) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc66)), %arg11: f32 loc(callsite(#loc1 at #loc66)), %arg12: f32 loc(callsite(#loc1 at #loc66)), %arg13: f32 loc(callsite(#loc1 at #loc66)), %arg14: f32 loc(callsite(#loc1 at #loc66)), %arg15: f32 loc(callsite(#loc1 at #loc66))):
      %35 = arith.subf %arg13, %arg10 : f32 loc(#loc112)
      %36 = arith.addf %arg12, %arg15 : f32 loc(#loc113)
      %37 = arith.cmpf oeq, %36, %cst : f32 loc(#loc114)
      %38 = arith.divf %arg15, %36 : f32 loc(#loc115)
      %39 = arith.select %37, %cst, %38 : f32 loc(#loc116)
      %40 = arith.mulf %35, %39 : f32 loc(#loc117)
      %41 = arith.addf %arg10, %40 : f32 loc(#loc118)
      %42 = arith.addf %arg11, %arg14 : f32 loc(#loc119)
      %43 = arith.mulf %35, %35 : f32 loc(#loc120)
      %44 = arith.mulf %43, %arg12 : f32 loc(#loc121)
      %45 = arith.mulf %44, %39 : f32 loc(#loc122)
      %46 = arith.addf %42, %45 : f32 loc(#loc123)
      tt.reduce.return %41, %46, %36 : f32, f32, f32 loc(#loc98)
    }) : (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) -> (tensor<1xf32>, tensor<1xf32>, tensor<1xf32>) loc(#loc98)
    %26 = tt.expand_dims %25#0 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc79)
    %27 = tt.expand_dims %25#1 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc80)
    %28 = tt.expand_dims %25#2 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc81)
    %29 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc82)
    %30 = tt.splat %29 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc82)
    tt.store %30, %26, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc83)
    %31 = tt.addptr %arg6, %0 : !tt.ptr<f32>, i32 loc(#loc84)
    %32 = tt.splat %31 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc84)
    tt.store %32, %27, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc85)
    %33 = tt.addptr %arg7, %0 : !tt.ptr<f32>, i32 loc(#loc86)
    %34 = tt.splat %33 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc86)
    tt.store %34, %28, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc87)
    tt.return loc(#loc88)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":22:28)
#loc3 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":24:21)
#loc4 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":25:25)
#loc5 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":25:33)
#loc6 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":26:19)
#loc7 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":27:19)
#loc8 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":28:26)
#loc9 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":29:31)
#loc10 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":29:36)
#loc11 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:42)
#loc12 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:39)
#loc13 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:34)
#loc14 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:47)
#loc15 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:46)
#loc16 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:40)
#loc17 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:35)
#loc18 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:71)
#loc19 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:65)
#loc20 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:35)
#loc21 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":56:24)
#loc22 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":65:29)
#loc23 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":34:36)
#loc24 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":35:27)
#loc25 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":37:23)
#loc26 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":38:25)
#loc27 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":38:31)
#loc28 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":39:23)
#loc29 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":42:34)
#loc30 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":42:39)
#loc31 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":43:34)
#loc32 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":43:39)
#loc33 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:51)
#loc34 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":46:22)
#loc35 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":47:22)
#loc36 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":48:36)
#loc37 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":49:22)
#loc38 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":50:22)
#loc39 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":51:36)
#loc40 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":52:23)
#loc41 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":53:23)
#loc42 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":54:39)
#loc43 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:46)
#loc44 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:43)
#loc45 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:58)
#loc46 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:53)
#loc47 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:76)
#loc48 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":57:24)
#loc49 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":60:66)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc51 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":60:55)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc60 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":62:54)
#loc61 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":63:50)
#loc62 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":64:58)
#loc63 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":65:52)
#loc64 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":65:8)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc70 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc72 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc73 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc74 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc75 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc76 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc77 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc78 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc79 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":69:22)
#loc80 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":70:22)
#loc81 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":71:22)
#loc82 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":72:25)
#loc83 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":72:37)
#loc84 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":73:25)
#loc85 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":73:37)
#loc86 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":74:25)
#loc87 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":74:37)
#loc88 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":74:4)
#loc89 = loc(callsite(#loc50 at #loc51))
#loc90 = loc(callsite(#loc52 at #loc51))
#loc91 = loc(callsite(#loc53 at #loc51))
#loc92 = loc(callsite(#loc54 at #loc51))
#loc93 = loc(callsite(#loc55 at #loc51))
#loc94 = loc(callsite(#loc56 at #loc51))
#loc95 = loc(callsite(#loc57 at #loc51))
#loc96 = loc(callsite(#loc58 at #loc51))
#loc97 = loc(callsite(#loc59 at #loc51))
#loc98 = loc(callsite(#loc65 at #loc66))
#loc100 = loc(callsite(#loc67 at #loc65))
#loc101 = loc(callsite(#loc68 at #loc65))
#loc102 = loc(callsite(#loc69 at #loc65))
#loc103 = loc(callsite(#loc70 at #loc65))
#loc104 = loc(callsite(#loc71 at #loc65))
#loc105 = loc(callsite(#loc72 at #loc65))
#loc106 = loc(callsite(#loc73 at #loc65))
#loc107 = loc(callsite(#loc74 at #loc65))
#loc108 = loc(callsite(#loc75 at #loc65))
#loc109 = loc(callsite(#loc76 at #loc65))
#loc110 = loc(callsite(#loc77 at #loc65))
#loc111 = loc(callsite(#loc78 at #loc65))
#loc112 = loc(callsite(#loc100 at #loc66))
#loc113 = loc(callsite(#loc101 at #loc66))
#loc114 = loc(callsite(#loc102 at #loc66))
#loc115 = loc(callsite(#loc103 at #loc66))
#loc116 = loc(callsite(#loc104 at #loc66))
#loc117 = loc(callsite(#loc105 at #loc66))
#loc118 = loc(callsite(#loc106 at #loc66))
#loc119 = loc(callsite(#loc107 at #loc66))
#loc120 = loc(callsite(#loc108 at #loc66))
#loc121 = loc(callsite(#loc109 at #loc66))
#loc122 = loc(callsite(#loc110 at #loc66))
#loc123 = loc(callsite(#loc111 at #loc66))
