; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = and i32 %5, 31, !dbg !10
  %7 = lshr i32 %5, 5, !dbg !10
  %8 = shl i32 %5, 2, !dbg !10
  %9 = and i32 %8, 252, !dbg !10
  %10 = zext nneg i32 %9 to i64, !dbg !11
  %11 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !11
  %12 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %11, i1 true) #5, !dbg !12
  %13 = extractvalue { i32, i32, i32, i32 } %12, 0, !dbg !12
  %14 = extractvalue { i32, i32, i32, i32 } %12, 1, !dbg !12
  %15 = extractvalue { i32, i32, i32, i32 } %12, 2, !dbg !12
  %16 = extractvalue { i32, i32, i32, i32 } %12, 3, !dbg !12
  %17 = getelementptr float, ptr addrspace(1) %2, i64 %10, !dbg !13
  %18 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %17, i1 true) #5, !dbg !14
  %19 = extractvalue { i32, i32, i32, i32 } %18, 0, !dbg !14
  %20 = extractvalue { i32, i32, i32, i32 } %18, 1, !dbg !14
  %21 = extractvalue { i32, i32, i32, i32 } %18, 2, !dbg !14
  %22 = extractvalue { i32, i32, i32, i32 } %18, 3, !dbg !14
  %23 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !12
  %24 = insertelement <2 x i32> %23, i32 %14, i64 1, !dbg !12
  %25 = bitcast <2 x i32> %24 to <2 x float>, !dbg !12
  %26 = insertelement <2 x i32> poison, i32 %15, i64 0, !dbg !12
  %27 = insertelement <2 x i32> %26, i32 %16, i64 1, !dbg !12
  %28 = bitcast <2 x i32> %27 to <2 x float>, !dbg !12
  %29 = shufflevector <2 x float> %25, <2 x float> %28, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !15
  %30 = fcmp oeq <4 x float> %29, splat (float 1.000000e+00), !dbg !15
  %31 = bitcast <4 x i1> %30 to i4, !dbg !16
  %32 = tail call range(i4 0, 5) i4 @llvm.ctpop.i4(i4 %31), !dbg !16
  %33 = zext nneg i4 %32 to i64, !dbg !16
  %34 = zext nneg i4 %32 to i32, !dbg !21
  %35 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %34, i32 16, i32 31), !dbg !21
  %36 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 0, i32 16, i32 31), !dbg !21
  %37 = insertelement <2 x i32> poison, i32 %35, i64 0, !dbg !21
  %38 = insertelement <2 x i32> %37, i32 %36, i64 1, !dbg !21
  %39 = bitcast <2 x i32> %38 to i64, !dbg !21
  %40 = add i64 %33, %39, !dbg !16
  %extelt.offset = lshr i64 %40, 32, !dbg !21
  %41 = trunc nuw i64 %extelt.offset to i32, !dbg !21
  %42 = trunc i64 %40 to i32, !dbg !21
  %43 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %42, i32 8, i32 31), !dbg !21
  %44 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %41, i32 8, i32 31), !dbg !21
  %45 = insertelement <2 x i32> poison, i32 %43, i64 0, !dbg !21
  %46 = insertelement <2 x i32> %45, i32 %44, i64 1, !dbg !21
  %47 = bitcast <2 x i32> %46 to i64, !dbg !21
  %48 = add i64 %40, %47, !dbg !16
  %extelt.offset1 = lshr i64 %48, 32, !dbg !21
  %49 = trunc nuw i64 %extelt.offset1 to i32, !dbg !21
  %50 = trunc i64 %48 to i32, !dbg !21
  %51 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %50, i32 4, i32 31), !dbg !21
  %52 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 4, i32 31), !dbg !21
  %53 = insertelement <2 x i32> poison, i32 %51, i64 0, !dbg !21
  %54 = insertelement <2 x i32> %53, i32 %52, i64 1, !dbg !21
  %55 = bitcast <2 x i32> %54 to i64, !dbg !21
  %56 = add i64 %48, %55, !dbg !16
  %extelt.offset2 = lshr i64 %56, 32, !dbg !21
  %57 = trunc nuw i64 %extelt.offset2 to i32, !dbg !21
  %58 = trunc i64 %56 to i32, !dbg !21
  %59 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %58, i32 2, i32 31), !dbg !21
  %60 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %57, i32 2, i32 31), !dbg !21
  %61 = insertelement <2 x i32> poison, i32 %59, i64 0, !dbg !21
  %62 = insertelement <2 x i32> %61, i32 %60, i64 1, !dbg !21
  %63 = bitcast <2 x i32> %62 to i64, !dbg !21
  %64 = add i64 %56, %63, !dbg !16
  %extelt.offset3 = lshr i64 %64, 32, !dbg !21
  %65 = trunc nuw i64 %extelt.offset3 to i32, !dbg !21
  %66 = trunc i64 %64 to i32, !dbg !21
  %67 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %66, i32 1, i32 31), !dbg !21
  %68 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %65, i32 1, i32 31), !dbg !21
  %69 = insertelement <2 x i32> poison, i32 %67, i64 0, !dbg !21
  %70 = insertelement <2 x i32> %69, i32 %68, i64 1, !dbg !21
  %71 = bitcast <2 x i32> %70 to i64, !dbg !21
  %72 = add i64 %64, %71, !dbg !16
  %73 = icmp eq i32 %6, 0, !dbg !21
  %74 = and i32 %7, 1, !dbg !21
  %75 = zext nneg i32 %74 to i64, !dbg !21
  %76 = getelementptr i64, ptr addrspace(3) @global_smem, i64 %75, !dbg !21
  %77 = insertelement <1 x i64> poison, i64 %72, i64 0, !dbg !21
  tail call void asm sideeffect "@$2 st.shared.b64 [ $0 + 0 ], $1;", "r,l,b"(ptr addrspace(3) %76, <1 x i64> %77, i1 %73) #5, !dbg !21
  tail call void @llvm.nvvm.barrier0(), !dbg !21
  %78 = icmp slt i32 %5, 2, !dbg !21
  %79 = sext i32 %5 to i64, !dbg !21
  %80 = getelementptr i64, ptr addrspace(3) @global_smem, i64 %79, !dbg !21
  %81 = tail call i64 asm sideeffect "@$2 ld.shared.b64 $0, [ $1 + 0 ];", "=l,r,b"(ptr addrspace(3) %80, i1 %78) #5, !dbg !21
  %extelt.offset4 = lshr i64 %81, 32, !dbg !21
  %82 = trunc nuw i64 %extelt.offset4 to i32, !dbg !21
  %83 = trunc i64 %81 to i32, !dbg !21
  %84 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %83, i32 1, i32 31), !dbg !21
  %85 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %82, i32 1, i32 31), !dbg !21
  %86 = insertelement <2 x i32> poison, i32 %84, i64 0, !dbg !21
  %87 = insertelement <2 x i32> %86, i32 %85, i64 1, !dbg !21
  %88 = bitcast <2 x i32> %87 to i64, !dbg !21
  %89 = add i64 %81, %88, !dbg !16
  %90 = and i32 %5, 1, !dbg !21
  %91 = icmp eq i32 %90, 0, !dbg !21
  %92 = and i1 %78, %91, !dbg !21
  %93 = insertelement <1 x i64> poison, i64 %89, i64 0, !dbg !21
  tail call void asm sideeffect "@$2 st.shared.b64 [ $0 + 0 ], $1;", "r,l,b"(ptr addrspace(3) %80, <1 x i64> %93, i1 %92) #5, !dbg !21
  tail call void @llvm.nvvm.barrier0(), !dbg !21
  %94 = load i64, ptr addrspace(3) @global_smem, align 16, !dbg !21
  %95 = fcmp oeq <4 x float> %29, zeroinitializer, !dbg !22
  tail call void @llvm.nvvm.barrier0(), !dbg !23
  %96 = bitcast <4 x i1> %95 to i4, !dbg !25
  %97 = tail call range(i4 0, 5) i4 @llvm.ctpop.i4(i4 %96), !dbg !25
  %98 = zext nneg i4 %97 to i64, !dbg !25
  %99 = zext nneg i4 %97 to i32, !dbg !23
  %100 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %99, i32 16, i32 31), !dbg !23
  %101 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 0, i32 16, i32 31), !dbg !23
  %102 = insertelement <2 x i32> poison, i32 %100, i64 0, !dbg !23
  %103 = insertelement <2 x i32> %102, i32 %101, i64 1, !dbg !23
  %104 = bitcast <2 x i32> %103 to i64, !dbg !23
  %105 = add i64 %98, %104, !dbg !25
  %extelt.offset6 = lshr i64 %105, 32, !dbg !23
  %106 = trunc nuw i64 %extelt.offset6 to i32, !dbg !23
  %107 = trunc i64 %105 to i32, !dbg !23
  %108 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %107, i32 8, i32 31), !dbg !23
  %109 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %106, i32 8, i32 31), !dbg !23
  %110 = insertelement <2 x i32> poison, i32 %108, i64 0, !dbg !23
  %111 = insertelement <2 x i32> %110, i32 %109, i64 1, !dbg !23
  %112 = bitcast <2 x i32> %111 to i64, !dbg !23
  %113 = add i64 %105, %112, !dbg !25
  %extelt.offset7 = lshr i64 %113, 32, !dbg !23
  %114 = trunc nuw i64 %extelt.offset7 to i32, !dbg !23
  %115 = trunc i64 %113 to i32, !dbg !23
  %116 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %115, i32 4, i32 31), !dbg !23
  %117 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %114, i32 4, i32 31), !dbg !23
  %118 = insertelement <2 x i32> poison, i32 %116, i64 0, !dbg !23
  %119 = insertelement <2 x i32> %118, i32 %117, i64 1, !dbg !23
  %120 = bitcast <2 x i32> %119 to i64, !dbg !23
  %121 = add i64 %113, %120, !dbg !25
  %extelt.offset8 = lshr i64 %121, 32, !dbg !23
  %122 = trunc nuw i64 %extelt.offset8 to i32, !dbg !23
  %123 = trunc i64 %121 to i32, !dbg !23
  %124 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %123, i32 2, i32 31), !dbg !23
  %125 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %122, i32 2, i32 31), !dbg !23
  %126 = insertelement <2 x i32> poison, i32 %124, i64 0, !dbg !23
  %127 = insertelement <2 x i32> %126, i32 %125, i64 1, !dbg !23
  %128 = bitcast <2 x i32> %127 to i64, !dbg !23
  %129 = add i64 %121, %128, !dbg !25
  %extelt.offset9 = lshr i64 %129, 32, !dbg !23
  %130 = trunc nuw i64 %extelt.offset9 to i32, !dbg !23
  %131 = trunc i64 %129 to i32, !dbg !23
  %132 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %131, i32 1, i32 31), !dbg !23
  %133 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %130, i32 1, i32 31), !dbg !23
  %134 = insertelement <2 x i32> poison, i32 %132, i64 0, !dbg !23
  %135 = insertelement <2 x i32> %134, i32 %133, i64 1, !dbg !23
  %136 = bitcast <2 x i32> %135 to i64, !dbg !23
  %137 = add i64 %129, %136, !dbg !25
  %138 = insertelement <1 x i64> poison, i64 %137, i64 0, !dbg !23
  tail call void asm sideeffect "@$2 st.shared.b64 [ $0 + 0 ], $1;", "r,l,b"(ptr addrspace(3) %76, <1 x i64> %138, i1 %73) #5, !dbg !23
  tail call void @llvm.nvvm.barrier0(), !dbg !23
  %139 = tail call i64 asm sideeffect "@$2 ld.shared.b64 $0, [ $1 + 0 ];", "=l,r,b"(ptr addrspace(3) %80, i1 %78) #5, !dbg !23
  %extelt.offset10 = lshr i64 %139, 32, !dbg !23
  %140 = trunc nuw i64 %extelt.offset10 to i32, !dbg !23
  %141 = trunc i64 %139 to i32, !dbg !23
  %142 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %141, i32 1, i32 31), !dbg !23
  %143 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %140, i32 1, i32 31), !dbg !23
  %144 = insertelement <2 x i32> poison, i32 %142, i64 0, !dbg !23
  %145 = insertelement <2 x i32> %144, i32 %143, i64 1, !dbg !23
  %146 = bitcast <2 x i32> %145 to i64, !dbg !23
  %147 = add i64 %139, %146, !dbg !25
  %148 = insertelement <1 x i64> poison, i64 %147, i64 0, !dbg !23
  tail call void asm sideeffect "@$2 st.shared.b64 [ $0 + 0 ], $1;", "r,l,b"(ptr addrspace(3) %80, <1 x i64> %148, i1 %92) #5, !dbg !23
  tail call void @llvm.nvvm.barrier0(), !dbg !23
  %149 = load i64, ptr addrspace(3) @global_smem, align 16, !dbg !23
  %150 = sitofp i64 %94 to float, !dbg !26
  %151 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %150) #5, !dbg !27
  %152 = extractelement <4 x i1> %30, i64 0, !dbg !28
  %153 = select i1 %152, float %151, float 0.000000e+00, !dbg !28
  %154 = extractelement <4 x i1> %30, i64 1, !dbg !28
  %155 = select i1 %154, float %151, float 0.000000e+00, !dbg !28
  %156 = extractelement <4 x i1> %30, i64 2, !dbg !28
  %157 = select i1 %156, float %151, float 0.000000e+00, !dbg !28
  %158 = extractelement <4 x i1> %30, i64 3, !dbg !28
  %159 = select i1 %158, float %151, float 0.000000e+00, !dbg !28
  %160 = sitofp i64 %149 to float, !dbg !29
  %161 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %160) #5, !dbg !30
  %162 = extractelement <4 x i1> %95, i64 0, !dbg !31
  %163 = select i1 %162, float %161, float %153, !dbg !31
  %164 = extractelement <4 x i1> %95, i64 1, !dbg !31
  %165 = select i1 %164, float %161, float %155, !dbg !31
  %166 = extractelement <4 x i1> %95, i64 2, !dbg !31
  %167 = select i1 %166, float %161, float %157, !dbg !31
  %168 = extractelement <4 x i1> %95, i64 3, !dbg !31
  %169 = select i1 %168, float %161, float %159, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %170 = fadd float %163, %165, !dbg !34
  %171 = fadd float %167, %170, !dbg !34
  %172 = fadd float %169, %171, !dbg !34
  %173 = bitcast float %172 to i32, !dbg !32
  %174 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %173, i32 16, i32 31), !dbg !32
  %175 = bitcast i32 %174 to float, !dbg !32
  %176 = fadd float %172, %175, !dbg !34
  %177 = bitcast float %176 to i32, !dbg !32
  %178 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %177, i32 8, i32 31), !dbg !32
  %179 = bitcast i32 %178 to float, !dbg !32
  %180 = fadd float %176, %179, !dbg !34
  %181 = bitcast float %180 to i32, !dbg !32
  %182 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %181, i32 4, i32 31), !dbg !32
  %183 = bitcast i32 %182 to float, !dbg !32
  %184 = fadd float %180, %183, !dbg !34
  %185 = bitcast float %184 to i32, !dbg !32
  %186 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %185, i32 2, i32 31), !dbg !32
  %187 = bitcast i32 %186 to float, !dbg !32
  %188 = fadd float %184, %187, !dbg !34
  %189 = bitcast float %188 to i32, !dbg !32
  %190 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %189, i32 1, i32 31), !dbg !32
  %191 = bitcast i32 %190 to float, !dbg !32
  %192 = fadd float %188, %191, !dbg !34
  %193 = getelementptr float, ptr addrspace(3) @global_smem, i64 %75, !dbg !32
  %194 = bitcast float %192 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %193, <1 x i32> %194, i1 %73) #5, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %195 = getelementptr float, ptr addrspace(3) @global_smem, i64 %79, !dbg !32
  %196 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %195, i1 %78) #5, !dbg !32
  %197 = bitcast i32 %196 to float, !dbg !32
  %198 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %196, i32 1, i32 31), !dbg !32
  %199 = bitcast i32 %198 to float, !dbg !32
  %200 = fadd float %197, %199, !dbg !34
  %201 = bitcast float %200 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %195, <1 x i32> %201, i1 %92) #5, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %202 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !32
  %203 = bitcast i32 %19 to float, !dbg !35
  %204 = tail call float @llvm.fabs.f32(float %203), !dbg !35
  %205 = bitcast i32 %20 to float, !dbg !35
  %206 = tail call float @llvm.fabs.f32(float %205), !dbg !35
  %207 = bitcast i32 %21 to float, !dbg !35
  %208 = tail call float @llvm.fabs.f32(float %207), !dbg !35
  %209 = bitcast i32 %22 to float, !dbg !35
  %210 = tail call float @llvm.fabs.f32(float %209), !dbg !35
  %211 = fsub float 0.000000e+00, %204, !dbg !36
  %212 = fsub float 0.000000e+00, %206, !dbg !36
  %213 = fsub float 0.000000e+00, %208, !dbg !36
  %214 = fsub float 0.000000e+00, %210, !dbg !36
  %215 = fmul float %211, 0x3FF7154760000000, !dbg !37
  %216 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %215) #5, !dbg !37
  %217 = fmul float %212, 0x3FF7154760000000, !dbg !37
  %218 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %217) #5, !dbg !37
  %219 = fmul float %213, 0x3FF7154760000000, !dbg !37
  %220 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %219) #5, !dbg !37
  %221 = fmul float %214, 0x3FF7154760000000, !dbg !37
  %222 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %221) #5, !dbg !37
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i = icmp eq i32 %223, 0, !dbg !38
  %224 = tail call float @llvm.nvvm.add.rz.ftz.f(float %216, float 1.000000e+00) #5, !dbg !38
  %225 = tail call float @llvm.nvvm.add.rz.f(float %216, float 1.000000e+00) #5, !dbg !38
  %.01.i = select i1 %.not.i, float %225, float %224, !dbg !38
  %226 = bitcast float %.01.i to i32, !dbg !38
  %227 = add i32 %226, -1061158912, !dbg !38
  %228 = and i32 %227, -8388608, !dbg !38
  %229 = bitcast float %216 to i32, !dbg !38
  %230 = sub i32 %229, %228, !dbg !38
  %231 = bitcast i32 %230 to float, !dbg !38
  %232 = sub i32 1082130432, %228, !dbg !38
  %233 = bitcast i32 %232 to float, !dbg !38
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not14.i = icmp eq i32 %234, 0, !dbg !38
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %233, float -1.000000e+00) #5, !dbg !38
  %236 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %233, float -1.000000e+00) #5, !dbg !38
  %.09.i = select i1 %.not14.i, float %236, float %235, !dbg !38
  %237 = fadd float %.09.i, %231, !dbg !38
  %238 = sitofp i32 %228 to float, !dbg !38
  %239 = fmul float %238, 0x3E80000000000000, !dbg !38
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not15.i = icmp eq i32 %240, 0, !dbg !38
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %237, float 0x3FBB000240000000) #5, !dbg !38
  %242 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %237, float 0x3FBB000240000000) #5, !dbg !38
  %.012.i = select i1 %.not15.i, float %242, float %241, !dbg !38
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not16.i = icmp eq i32 %243, 0, !dbg !38
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %237, float 0xBFC0EF1C00000000) #5, !dbg !38
  %245 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %237, float 0xBFC0EF1C00000000) #5, !dbg !38
  %.010.i = select i1 %.not16.i, float %245, float %244, !dbg !38
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not17.i = icmp eq i32 %246, 0, !dbg !38
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %237, float 0x3FC28C8EA0000000) #5, !dbg !38
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %237, float 0x3FC28C8EA0000000) #5, !dbg !38
  %.06.i = select i1 %.not17.i, float %248, float %247, !dbg !38
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not18.i = icmp eq i32 %249, 0, !dbg !38
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %237, float 0xBFC54D1BA0000000) #5, !dbg !38
  %251 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %237, float 0xBFC54D1BA0000000) #5, !dbg !38
  %.02.i = select i1 %.not18.i, float %251, float %250, !dbg !38
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not19.i = icmp eq i32 %252, 0, !dbg !38
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %237, float 0x3FC995F3C0000000) #5, !dbg !38
  %254 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %237, float 0x3FC995F3C0000000) #5, !dbg !38
  %.0.i = select i1 %.not19.i, float %254, float %253, !dbg !38
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not20.i = icmp eq i32 %255, 0, !dbg !38
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %237, float 0xBFD0000840000000) #5, !dbg !38
  %257 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %237, float 0xBFD0000840000000) #5, !dbg !38
  %.011.i = select i1 %.not20.i, float %257, float %256, !dbg !38
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not21.i = icmp eq i32 %258, 0, !dbg !38
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %237, float 0x3FD5555CC0000000) #5, !dbg !38
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %237, float 0x3FD5555CC0000000) #5, !dbg !38
  %.08.i = select i1 %.not21.i, float %260, float %259, !dbg !38
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not22.i = icmp eq i32 %261, 0, !dbg !38
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %237, float -5.000000e-01) #5, !dbg !38
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %237, float -5.000000e-01) #5, !dbg !38
  %.07.i = select i1 %.not22.i, float %263, float %262, !dbg !38
  %264 = fmul float %237, %.07.i, !dbg !38
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not23.i = icmp eq i32 %265, 0, !dbg !38
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %264, float %237, float %237) #5, !dbg !38
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %264, float %237, float %237) #5, !dbg !38
  %.05.i = select i1 %.not23.i, float %267, float %266, !dbg !38
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not24.i = icmp eq i32 %268, 0, !dbg !38
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %239, float 0x3FE62E4300000000, float %.05.i) #5, !dbg !38
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %239, float 0x3FE62E4300000000, float %.05.i) #5, !dbg !38
  %.04.i = select i1 %.not24.i, float %270, float %269, !dbg !38
  %271 = icmp ugt i32 %229, 2139095039, !dbg !38
  br i1 %271, label %272, label %__nv_log1pf.exit, !dbg !38

272:                                              ; preds = %4
  %273 = icmp sgt i32 %229, -1082130432, !dbg !38
  br i1 %273, label %__nv_fmaf_rn.exit.i, label %277, !dbg !38

__nv_fmaf_rn.exit.i:                              ; preds = %272
  %274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not25.i = icmp eq i32 %274, 0, !dbg !38
  %275 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %216, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !38
  %276 = tail call float @llvm.nvvm.fma.rn.f(float %216, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !38
  %.03.i = select i1 %.not25.i, float %276, float %275, !dbg !38
  br label %277, !dbg !38

277:                                              ; preds = %__nv_fmaf_rn.exit.i, %272
  %r.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i ], [ %.04.i, %272 ], !dbg !38
  %278 = fcmp oeq float %216, 0.000000e+00, !dbg !38
  %r.1.i = select i1 %278, float -0.000000e+00, float %r.0.i, !dbg !38
  br label %__nv_log1pf.exit, !dbg !38

__nv_log1pf.exit:                                 ; preds = %4, %277
  %r.2.i = phi float [ %r.1.i, %277 ], [ %.04.i, %4 ], !dbg !38
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i11 = icmp eq i32 %279, 0, !dbg !38
  %280 = tail call float @llvm.nvvm.add.rz.ftz.f(float %218, float 1.000000e+00) #5, !dbg !38
  %281 = tail call float @llvm.nvvm.add.rz.f(float %218, float 1.000000e+00) #5, !dbg !38
  %.01.i12 = select i1 %.not.i11, float %281, float %280, !dbg !38
  %282 = bitcast float %.01.i12 to i32, !dbg !38
  %283 = add i32 %282, -1061158912, !dbg !38
  %284 = and i32 %283, -8388608, !dbg !38
  %285 = bitcast float %218 to i32, !dbg !38
  %286 = sub i32 %285, %284, !dbg !38
  %287 = bitcast i32 %286 to float, !dbg !38
  %288 = sub i32 1082130432, %284, !dbg !38
  %289 = bitcast i32 %288 to float, !dbg !38
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not14.i13 = icmp eq i32 %290, 0, !dbg !38
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %289, float -1.000000e+00) #5, !dbg !38
  %292 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %289, float -1.000000e+00) #5, !dbg !38
  %.09.i14 = select i1 %.not14.i13, float %292, float %291, !dbg !38
  %293 = fadd float %.09.i14, %287, !dbg !38
  %294 = sitofp i32 %284 to float, !dbg !38
  %295 = fmul float %294, 0x3E80000000000000, !dbg !38
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not15.i15 = icmp eq i32 %296, 0, !dbg !38
  %297 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %293, float 0x3FBB000240000000) #5, !dbg !38
  %298 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %293, float 0x3FBB000240000000) #5, !dbg !38
  %.012.i16 = select i1 %.not15.i15, float %298, float %297, !dbg !38
  %299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not16.i17 = icmp eq i32 %299, 0, !dbg !38
  %300 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i16, float %293, float 0xBFC0EF1C00000000) #5, !dbg !38
  %301 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i16, float %293, float 0xBFC0EF1C00000000) #5, !dbg !38
  %.010.i18 = select i1 %.not16.i17, float %301, float %300, !dbg !38
  %302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not17.i19 = icmp eq i32 %302, 0, !dbg !38
  %303 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i18, float %293, float 0x3FC28C8EA0000000) #5, !dbg !38
  %304 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i18, float %293, float 0x3FC28C8EA0000000) #5, !dbg !38
  %.06.i20 = select i1 %.not17.i19, float %304, float %303, !dbg !38
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not18.i21 = icmp eq i32 %305, 0, !dbg !38
  %306 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i20, float %293, float 0xBFC54D1BA0000000) #5, !dbg !38
  %307 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i20, float %293, float 0xBFC54D1BA0000000) #5, !dbg !38
  %.02.i22 = select i1 %.not18.i21, float %307, float %306, !dbg !38
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not19.i23 = icmp eq i32 %308, 0, !dbg !38
  %309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i22, float %293, float 0x3FC995F3C0000000) #5, !dbg !38
  %310 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i22, float %293, float 0x3FC995F3C0000000) #5, !dbg !38
  %.0.i24 = select i1 %.not19.i23, float %310, float %309, !dbg !38
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not20.i25 = icmp eq i32 %311, 0, !dbg !38
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i24, float %293, float 0xBFD0000840000000) #5, !dbg !38
  %313 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i24, float %293, float 0xBFD0000840000000) #5, !dbg !38
  %.011.i26 = select i1 %.not20.i25, float %313, float %312, !dbg !38
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not21.i27 = icmp eq i32 %314, 0, !dbg !38
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i26, float %293, float 0x3FD5555CC0000000) #5, !dbg !38
  %316 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i26, float %293, float 0x3FD5555CC0000000) #5, !dbg !38
  %.08.i28 = select i1 %.not21.i27, float %316, float %315, !dbg !38
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not22.i29 = icmp eq i32 %317, 0, !dbg !38
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i28, float %293, float -5.000000e-01) #5, !dbg !38
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i28, float %293, float -5.000000e-01) #5, !dbg !38
  %.07.i30 = select i1 %.not22.i29, float %319, float %318, !dbg !38
  %320 = fmul float %293, %.07.i30, !dbg !38
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not23.i31 = icmp eq i32 %321, 0, !dbg !38
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %320, float %293, float %293) #5, !dbg !38
  %323 = tail call float @llvm.nvvm.fma.rn.f(float %320, float %293, float %293) #5, !dbg !38
  %.05.i32 = select i1 %.not23.i31, float %323, float %322, !dbg !38
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not24.i33 = icmp eq i32 %324, 0, !dbg !38
  %325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %295, float 0x3FE62E4300000000, float %.05.i32) #5, !dbg !38
  %326 = tail call float @llvm.nvvm.fma.rn.f(float %295, float 0x3FE62E4300000000, float %.05.i32) #5, !dbg !38
  %.04.i34 = select i1 %.not24.i33, float %326, float %325, !dbg !38
  %327 = icmp ugt i32 %285, 2139095039, !dbg !38
  br i1 %327, label %328, label %__nv_log1pf.exit41, !dbg !38

328:                                              ; preds = %__nv_log1pf.exit
  %329 = icmp sgt i32 %285, -1082130432, !dbg !38
  br i1 %329, label %__nv_fmaf_rn.exit.i38, label %333, !dbg !38

__nv_fmaf_rn.exit.i38:                            ; preds = %328
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not25.i39 = icmp eq i32 %330, 0, !dbg !38
  %331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %218, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !38
  %332 = tail call float @llvm.nvvm.fma.rn.f(float %218, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !38
  %.03.i40 = select i1 %.not25.i39, float %332, float %331, !dbg !38
  br label %333, !dbg !38

333:                                              ; preds = %__nv_fmaf_rn.exit.i38, %328
  %r.0.i36 = phi float [ %.03.i40, %__nv_fmaf_rn.exit.i38 ], [ %.04.i34, %328 ], !dbg !38
  %334 = fcmp oeq float %218, 0.000000e+00, !dbg !38
  %r.1.i37 = select i1 %334, float -0.000000e+00, float %r.0.i36, !dbg !38
  br label %__nv_log1pf.exit41, !dbg !38

__nv_log1pf.exit41:                               ; preds = %__nv_log1pf.exit, %333
  %r.2.i35 = phi float [ %r.1.i37, %333 ], [ %.04.i34, %__nv_log1pf.exit ], !dbg !38
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i42 = icmp eq i32 %335, 0, !dbg !38
  %336 = tail call float @llvm.nvvm.add.rz.ftz.f(float %220, float 1.000000e+00) #5, !dbg !38
  %337 = tail call float @llvm.nvvm.add.rz.f(float %220, float 1.000000e+00) #5, !dbg !38
  %.01.i43 = select i1 %.not.i42, float %337, float %336, !dbg !38
  %338 = bitcast float %.01.i43 to i32, !dbg !38
  %339 = add i32 %338, -1061158912, !dbg !38
  %340 = and i32 %339, -8388608, !dbg !38
  %341 = bitcast float %220 to i32, !dbg !38
  %342 = sub i32 %341, %340, !dbg !38
  %343 = bitcast i32 %342 to float, !dbg !38
  %344 = sub i32 1082130432, %340, !dbg !38
  %345 = bitcast i32 %344 to float, !dbg !38
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not14.i44 = icmp eq i32 %346, 0, !dbg !38
  %347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %345, float -1.000000e+00) #5, !dbg !38
  %348 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %345, float -1.000000e+00) #5, !dbg !38
  %.09.i45 = select i1 %.not14.i44, float %348, float %347, !dbg !38
  %349 = fadd float %.09.i45, %343, !dbg !38
  %350 = sitofp i32 %340 to float, !dbg !38
  %351 = fmul float %350, 0x3E80000000000000, !dbg !38
  %352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not15.i46 = icmp eq i32 %352, 0, !dbg !38
  %353 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %349, float 0x3FBB000240000000) #5, !dbg !38
  %354 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %349, float 0x3FBB000240000000) #5, !dbg !38
  %.012.i47 = select i1 %.not15.i46, float %354, float %353, !dbg !38
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not16.i48 = icmp eq i32 %355, 0, !dbg !38
  %356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i47, float %349, float 0xBFC0EF1C00000000) #5, !dbg !38
  %357 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i47, float %349, float 0xBFC0EF1C00000000) #5, !dbg !38
  %.010.i49 = select i1 %.not16.i48, float %357, float %356, !dbg !38
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not17.i50 = icmp eq i32 %358, 0, !dbg !38
  %359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i49, float %349, float 0x3FC28C8EA0000000) #5, !dbg !38
  %360 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i49, float %349, float 0x3FC28C8EA0000000) #5, !dbg !38
  %.06.i51 = select i1 %.not17.i50, float %360, float %359, !dbg !38
  %361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not18.i52 = icmp eq i32 %361, 0, !dbg !38
  %362 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i51, float %349, float 0xBFC54D1BA0000000) #5, !dbg !38
  %363 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i51, float %349, float 0xBFC54D1BA0000000) #5, !dbg !38
  %.02.i53 = select i1 %.not18.i52, float %363, float %362, !dbg !38
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not19.i54 = icmp eq i32 %364, 0, !dbg !38
  %365 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i53, float %349, float 0x3FC995F3C0000000) #5, !dbg !38
  %366 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i53, float %349, float 0x3FC995F3C0000000) #5, !dbg !38
  %.0.i55 = select i1 %.not19.i54, float %366, float %365, !dbg !38
  %367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not20.i56 = icmp eq i32 %367, 0, !dbg !38
  %368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i55, float %349, float 0xBFD0000840000000) #5, !dbg !38
  %369 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i55, float %349, float 0xBFD0000840000000) #5, !dbg !38
  %.011.i57 = select i1 %.not20.i56, float %369, float %368, !dbg !38
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not21.i58 = icmp eq i32 %370, 0, !dbg !38
  %371 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i57, float %349, float 0x3FD5555CC0000000) #5, !dbg !38
  %372 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i57, float %349, float 0x3FD5555CC0000000) #5, !dbg !38
  %.08.i59 = select i1 %.not21.i58, float %372, float %371, !dbg !38
  %373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not22.i60 = icmp eq i32 %373, 0, !dbg !38
  %374 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i59, float %349, float -5.000000e-01) #5, !dbg !38
  %375 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i59, float %349, float -5.000000e-01) #5, !dbg !38
  %.07.i61 = select i1 %.not22.i60, float %375, float %374, !dbg !38
  %376 = fmul float %349, %.07.i61, !dbg !38
  %377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not23.i62 = icmp eq i32 %377, 0, !dbg !38
  %378 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %376, float %349, float %349) #5, !dbg !38
  %379 = tail call float @llvm.nvvm.fma.rn.f(float %376, float %349, float %349) #5, !dbg !38
  %.05.i63 = select i1 %.not23.i62, float %379, float %378, !dbg !38
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not24.i64 = icmp eq i32 %380, 0, !dbg !38
  %381 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %351, float 0x3FE62E4300000000, float %.05.i63) #5, !dbg !38
  %382 = tail call float @llvm.nvvm.fma.rn.f(float %351, float 0x3FE62E4300000000, float %.05.i63) #5, !dbg !38
  %.04.i65 = select i1 %.not24.i64, float %382, float %381, !dbg !38
  %383 = icmp ugt i32 %341, 2139095039, !dbg !38
  br i1 %383, label %384, label %__nv_log1pf.exit72, !dbg !38

384:                                              ; preds = %__nv_log1pf.exit41
  %385 = icmp sgt i32 %341, -1082130432, !dbg !38
  br i1 %385, label %__nv_fmaf_rn.exit.i69, label %389, !dbg !38

__nv_fmaf_rn.exit.i69:                            ; preds = %384
  %386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not25.i70 = icmp eq i32 %386, 0, !dbg !38
  %387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %220, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !38
  %388 = tail call float @llvm.nvvm.fma.rn.f(float %220, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !38
  %.03.i71 = select i1 %.not25.i70, float %388, float %387, !dbg !38
  br label %389, !dbg !38

389:                                              ; preds = %__nv_fmaf_rn.exit.i69, %384
  %r.0.i67 = phi float [ %.03.i71, %__nv_fmaf_rn.exit.i69 ], [ %.04.i65, %384 ], !dbg !38
  %390 = fcmp oeq float %220, 0.000000e+00, !dbg !38
  %r.1.i68 = select i1 %390, float -0.000000e+00, float %r.0.i67, !dbg !38
  br label %__nv_log1pf.exit72, !dbg !38

__nv_log1pf.exit72:                               ; preds = %__nv_log1pf.exit41, %389
  %r.2.i66 = phi float [ %r.1.i68, %389 ], [ %.04.i65, %__nv_log1pf.exit41 ], !dbg !38
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not.i73 = icmp eq i32 %391, 0, !dbg !38
  %392 = tail call float @llvm.nvvm.add.rz.ftz.f(float %222, float 1.000000e+00) #5, !dbg !38
  %393 = tail call float @llvm.nvvm.add.rz.f(float %222, float 1.000000e+00) #5, !dbg !38
  %.01.i74 = select i1 %.not.i73, float %393, float %392, !dbg !38
  %394 = bitcast float %.01.i74 to i32, !dbg !38
  %395 = add i32 %394, -1061158912, !dbg !38
  %396 = and i32 %395, -8388608, !dbg !38
  %397 = bitcast float %222 to i32, !dbg !38
  %398 = sub i32 %397, %396, !dbg !38
  %399 = bitcast i32 %398 to float, !dbg !38
  %400 = sub i32 1082130432, %396, !dbg !38
  %401 = bitcast i32 %400 to float, !dbg !38
  %402 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not14.i75 = icmp eq i32 %402, 0, !dbg !38
  %403 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %401, float -1.000000e+00) #5, !dbg !38
  %404 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %401, float -1.000000e+00) #5, !dbg !38
  %.09.i76 = select i1 %.not14.i75, float %404, float %403, !dbg !38
  %405 = fadd float %.09.i76, %399, !dbg !38
  %406 = sitofp i32 %396 to float, !dbg !38
  %407 = fmul float %406, 0x3E80000000000000, !dbg !38
  %408 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not15.i77 = icmp eq i32 %408, 0, !dbg !38
  %409 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %405, float 0x3FBB000240000000) #5, !dbg !38
  %410 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %405, float 0x3FBB000240000000) #5, !dbg !38
  %.012.i78 = select i1 %.not15.i77, float %410, float %409, !dbg !38
  %411 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not16.i79 = icmp eq i32 %411, 0, !dbg !38
  %412 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i78, float %405, float 0xBFC0EF1C00000000) #5, !dbg !38
  %413 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i78, float %405, float 0xBFC0EF1C00000000) #5, !dbg !38
  %.010.i80 = select i1 %.not16.i79, float %413, float %412, !dbg !38
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not17.i81 = icmp eq i32 %414, 0, !dbg !38
  %415 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i80, float %405, float 0x3FC28C8EA0000000) #5, !dbg !38
  %416 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i80, float %405, float 0x3FC28C8EA0000000) #5, !dbg !38
  %.06.i82 = select i1 %.not17.i81, float %416, float %415, !dbg !38
  %417 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not18.i83 = icmp eq i32 %417, 0, !dbg !38
  %418 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i82, float %405, float 0xBFC54D1BA0000000) #5, !dbg !38
  %419 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i82, float %405, float 0xBFC54D1BA0000000) #5, !dbg !38
  %.02.i84 = select i1 %.not18.i83, float %419, float %418, !dbg !38
  %420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not19.i85 = icmp eq i32 %420, 0, !dbg !38
  %421 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i84, float %405, float 0x3FC995F3C0000000) #5, !dbg !38
  %422 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i84, float %405, float 0x3FC995F3C0000000) #5, !dbg !38
  %.0.i86 = select i1 %.not19.i85, float %422, float %421, !dbg !38
  %423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not20.i87 = icmp eq i32 %423, 0, !dbg !38
  %424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i86, float %405, float 0xBFD0000840000000) #5, !dbg !38
  %425 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i86, float %405, float 0xBFD0000840000000) #5, !dbg !38
  %.011.i88 = select i1 %.not20.i87, float %425, float %424, !dbg !38
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not21.i89 = icmp eq i32 %426, 0, !dbg !38
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %405, float 0x3FD5555CC0000000) #5, !dbg !38
  %428 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %405, float 0x3FD5555CC0000000) #5, !dbg !38
  %.08.i90 = select i1 %.not21.i89, float %428, float %427, !dbg !38
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not22.i91 = icmp eq i32 %429, 0, !dbg !38
  %430 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i90, float %405, float -5.000000e-01) #5, !dbg !38
  %431 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i90, float %405, float -5.000000e-01) #5, !dbg !38
  %.07.i92 = select i1 %.not22.i91, float %431, float %430, !dbg !38
  %432 = fmul float %405, %.07.i92, !dbg !38
  %433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not23.i93 = icmp eq i32 %433, 0, !dbg !38
  %434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %432, float %405, float %405) #5, !dbg !38
  %435 = tail call float @llvm.nvvm.fma.rn.f(float %432, float %405, float %405) #5, !dbg !38
  %.05.i94 = select i1 %.not23.i93, float %435, float %434, !dbg !38
  %436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not24.i95 = icmp eq i32 %436, 0, !dbg !38
  %437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %407, float 0x3FE62E4300000000, float %.05.i94) #5, !dbg !38
  %438 = tail call float @llvm.nvvm.fma.rn.f(float %407, float 0x3FE62E4300000000, float %.05.i94) #5, !dbg !38
  %.04.i96 = select i1 %.not24.i95, float %438, float %437, !dbg !38
  %439 = icmp ugt i32 %397, 2139095039, !dbg !38
  br i1 %439, label %440, label %__nv_log1pf.exit103, !dbg !38

440:                                              ; preds = %__nv_log1pf.exit72
  %441 = icmp sgt i32 %397, -1082130432, !dbg !38
  br i1 %441, label %__nv_fmaf_rn.exit.i100, label %445, !dbg !38

__nv_fmaf_rn.exit.i100:                           ; preds = %440
  %442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !38
  %.not25.i101 = icmp eq i32 %442, 0, !dbg !38
  %443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %222, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !38
  %444 = tail call float @llvm.nvvm.fma.rn.f(float %222, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !38
  %.03.i102 = select i1 %.not25.i101, float %444, float %443, !dbg !38
  br label %445, !dbg !38

445:                                              ; preds = %__nv_fmaf_rn.exit.i100, %440
  %r.0.i98 = phi float [ %.03.i102, %__nv_fmaf_rn.exit.i100 ], [ %.04.i96, %440 ], !dbg !38
  %446 = fcmp oeq float %222, 0.000000e+00, !dbg !38
  %r.1.i99 = select i1 %446, float -0.000000e+00, float %r.0.i98, !dbg !38
  br label %__nv_log1pf.exit103, !dbg !38

__nv_log1pf.exit103:                              ; preds = %__nv_log1pf.exit72, %445
  %r.2.i97 = phi float [ %r.1.i99, %445 ], [ %.04.i96, %__nv_log1pf.exit72 ], !dbg !38
  %447 = insertelement <2 x i32> poison, i32 %21, i64 0, !dbg !14
  %448 = insertelement <2 x i32> %447, i32 %22, i64 1, !dbg !14
  %449 = bitcast <2 x i32> %448 to <2 x float>, !dbg !14
  %450 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !14
  %451 = insertelement <2 x i32> %450, i32 %20, i64 1, !dbg !14
  %452 = bitcast <2 x i32> %451 to <2 x float>, !dbg !14
  %453 = fcmp ogt <2 x float> %449, zeroinitializer, !dbg !39
  %454 = fcmp ogt <2 x float> %452, zeroinitializer, !dbg !39
  %455 = fsub <2 x float> splat (float 1.000000e+00), %28, !dbg !43
  %456 = fsub <2 x float> splat (float 1.000000e+00), %25, !dbg !43
  %457 = fadd float %202, 0.000000e+00, !dbg !44
  %458 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %163, float %457) #5, !dbg !46
  %459 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %165, float %457) #5, !dbg !46
  %460 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %167, float %457) #5, !dbg !46
  %461 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %169, float %457) #5, !dbg !46
  %462 = select <2 x i1> %454, <2 x float> zeroinitializer, <2 x float> %452, !dbg !47
  %463 = fmul <2 x float> %456, %452, !dbg !48
  %464 = insertelement <2 x float> poison, float %r.2.i, i64 0, !dbg !49
  %465 = insertelement <2 x float> %464, float %r.2.i35, i64 1, !dbg !49
  %466 = fsub <2 x float> %462, %465, !dbg !49
  %467 = fsub <2 x float> %463, %466, !dbg !50
  %468 = insertelement <2 x float> poison, float %458, i64 0, !dbg !51
  %469 = insertelement <2 x float> %468, float %459, i64 1, !dbg !51
  %470 = fmul <2 x float> %467, %469, !dbg !51
  %471 = select <2 x i1> %453, <2 x float> zeroinitializer, <2 x float> %449, !dbg !47
  %472 = fmul <2 x float> %455, %449, !dbg !48
  %473 = insertelement <2 x float> poison, float %r.2.i66, i64 0, !dbg !49
  %474 = insertelement <2 x float> %473, float %r.2.i97, i64 1, !dbg !49
  %475 = fsub <2 x float> %471, %474, !dbg !49
  %476 = fsub <2 x float> %472, %475, !dbg !50
  %477 = insertelement <2 x float> poison, float %460, i64 0, !dbg !51
  %478 = insertelement <2 x float> %477, float %461, i64 1, !dbg !51
  %479 = fmul <2 x float> %476, %478, !dbg !51
  tail call void @llvm.nvvm.barrier0(), !dbg !52
  %shift = shufflevector <2 x float> %470, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !54
  %480 = fadd <2 x float> %470, %shift, !dbg !54
  %481 = fadd <2 x float> %480, %479, !dbg !54
  %shift104 = shufflevector <2 x float> %479, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !54
  %482 = fadd <2 x float> %481, %shift104, !dbg !54
  %483 = extractelement <2 x float> %482, i64 0, !dbg !54
  %484 = bitcast float %483 to i32, !dbg !52
  %485 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %484, i32 16, i32 31), !dbg !52
  %486 = bitcast i32 %485 to float, !dbg !52
  %487 = fadd float %483, %486, !dbg !54
  %488 = bitcast float %487 to i32, !dbg !52
  %489 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %488, i32 8, i32 31), !dbg !52
  %490 = bitcast i32 %489 to float, !dbg !52
  %491 = fadd float %487, %490, !dbg !54
  %492 = bitcast float %491 to i32, !dbg !52
  %493 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %492, i32 4, i32 31), !dbg !52
  %494 = bitcast i32 %493 to float, !dbg !52
  %495 = fadd float %491, %494, !dbg !54
  %496 = bitcast float %495 to i32, !dbg !52
  %497 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %496, i32 2, i32 31), !dbg !52
  %498 = bitcast i32 %497 to float, !dbg !52
  %499 = fadd float %495, %498, !dbg !54
  %500 = bitcast float %499 to i32, !dbg !52
  %501 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %500, i32 1, i32 31), !dbg !52
  %502 = bitcast i32 %501 to float, !dbg !52
  %503 = fadd float %499, %502, !dbg !54
  %504 = bitcast float %503 to <1 x i32>, !dbg !52
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %193, <1 x i32> %504, i1 %73) #5, !dbg !52
  tail call void @llvm.nvvm.barrier0(), !dbg !52
  %505 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %195, i1 %78) #5, !dbg !52
  %506 = bitcast i32 %505 to float, !dbg !52
  %507 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %505, i32 1, i32 31), !dbg !52
  %508 = bitcast i32 %507 to float, !dbg !52
  %509 = fadd float %506, %508, !dbg !54
  %510 = bitcast float %509 to <1 x i32>, !dbg !52
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %195, <1 x i32> %510, i1 %92) #5, !dbg !52
  tail call void @llvm.nvvm.barrier0(), !dbg !52
  %511 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !52
  %512 = fadd float %511, 0.000000e+00, !dbg !55
  %urem = and i32 %5, 63, !dbg !57
  %513 = icmp eq i32 %urem, 0, !dbg !57
  %514 = bitcast float %512 to i32, !dbg !57
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %514, ptr addrspace(1) %0, i1 %513) #5, !dbg !57
  ret void, !dbg !58
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i4 @llvm.ctpop.i4(i4) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py", directory: "inductor_cache/be")
!4 = !{ptr @triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0", linkageName: "triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 30, scope: !7)
!12 = !DILocation(line: 31, column: 35, scope: !7)
!13 = !DILocation(line: 32, column: 31, scope: !7)
!14 = !DILocation(line: 32, column: 36, scope: !7)
!15 = !DILocation(line: 34, column: 19, scope: !7)
!16 = !DILocation(line: 256, column: 15, scope: !17, inlinedAt: !20)
!17 = distinct !DILexicalBlockFile(scope: !19, file: !18, discriminator: 0)
!18 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!19 = distinct !DILexicalBlockFile(scope: !7, file: !18, discriminator: 0)
!20 = !DILocation(line: 37, column: 57, scope: !7)
!21 = !DILocation(line: 267, column: 36, scope: !19, inlinedAt: !20)
!22 = !DILocation(line: 39, column: 19, scope: !7)
!23 = !DILocation(line: 267, column: 36, scope: !19, inlinedAt: !24)
!24 = !DILocation(line: 42, column: 59, scope: !7)
!25 = !DILocation(line: 256, column: 15, scope: !17, inlinedAt: !24)
!26 = !DILocation(line: 43, column: 20, scope: !7)
!27 = !DILocation(line: 45, column: 20, scope: !7)
!28 = !DILocation(line: 47, column: 34, scope: !7)
!29 = !DILocation(line: 48, column: 21, scope: !7)
!30 = !DILocation(line: 49, column: 20, scope: !7)
!31 = !DILocation(line: 52, column: 34, scope: !7)
!32 = !DILocation(line: 267, column: 36, scope: !19, inlinedAt: !33)
!33 = !DILocation(line: 54, column: 59, scope: !7)
!34 = !DILocation(line: 256, column: 15, scope: !17, inlinedAt: !33)
!35 = !DILocation(line: 58, column: 24, scope: !7)
!36 = !DILocation(line: 59, column: 13, scope: !7)
!37 = !DILocation(line: 60, column: 24, scope: !7)
!38 = !DILocation(line: 61, column: 28, scope: !7)
!39 = !DILocation(line: 110, column: 15, scope: !40, inlinedAt: !42)
!40 = distinct !DILexicalBlockFile(scope: !7, file: !41, discriminator: 0)
!41 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!42 = !DILocation(line: 57, column: 41, scope: !7)
!43 = !DILocation(line: 55, column: 19, scope: !7)
!44 = !DILocation(line: 73, column: 15, scope: !40, inlinedAt: !45)
!45 = !DILocation(line: 54, column: 45, scope: !7)
!46 = !DILocation(line: 64, column: 20, scope: !7)
!47 = !DILocation(line: 113, column: 29, scope: !40, inlinedAt: !42)
!48 = !DILocation(line: 56, column: 20, scope: !7)
!49 = !DILocation(line: 62, column: 20, scope: !7)
!50 = !DILocation(line: 63, column: 20, scope: !7)
!51 = !DILocation(line: 65, column: 20, scope: !7)
!52 = !DILocation(line: 267, column: 36, scope: !19, inlinedAt: !53)
!53 = !DILocation(line: 67, column: 59, scope: !7)
!54 = !DILocation(line: 256, column: 15, scope: !17, inlinedAt: !53)
!55 = !DILocation(line: 73, column: 15, scope: !40, inlinedAt: !56)
!56 = !DILocation(line: 67, column: 45, scope: !7)
!57 = !DILocation(line: 68, column: 63, scope: !7)
!58 = !DILocation(line: 68, column: 4, scope: !7)
