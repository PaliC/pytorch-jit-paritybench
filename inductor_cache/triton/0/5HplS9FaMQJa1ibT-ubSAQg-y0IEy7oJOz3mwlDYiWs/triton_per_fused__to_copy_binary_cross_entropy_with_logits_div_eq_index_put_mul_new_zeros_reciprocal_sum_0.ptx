//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0 // -- Begin function triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0
.visible .entry triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0_param_2,
	.param .u32 triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<43>;
	.reg .b16 	%rs<27>;
	.reg .b32 	%r<166>;
	.reg .f32 	%f<259>;
	.reg .b64 	%rd<74>;
$L__func_begin0:

// %bb.0:
	.loc	1 27 26                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:27:26
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd10, [triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0_param_1];
	and.b32  	%r2, %r1, 31;
	ld.param.u64 	%rd11, [triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0_param_2];
	shl.b32 	%r39, %r1, 2;
	and.b32  	%r40, %r39, 252;
	.loc	1 31 30                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:31:30
	mul.wide.u32 	%rd12, %r40, 4;
	add.s64 	%rd2, %rd10, %rd12;
	mov.pred 	%p2, -1;
	.loc	1 31 35                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:31:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p2 ld.global.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 32 31                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:32:31
	add.s64 	%rd3, %rd11, %rd12;
	.loc	1 32 36                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:32:36
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p2 ld.global.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 31 35                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:31:35
	mov.b32 	%f2, %r14;
	mov.b32 	%f1, %r13;
	mov.b32 	%f4, %r16;
	mov.b32 	%f3, %r15;
	.loc	1 34 19                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:34:19
	setp.eq.f32 	%p13, %f3, 0f3F800000;
	selp.u16 	%rs1, 1, 0, %p13;
	shl.b16 	%rs2, %rs1, 2;
	setp.eq.f32 	%p14, %f4, 0f3F800000;
	selp.u16 	%rs3, -1, 0, %p14;
	shl.b16 	%rs4, %rs3, 3;
	or.b16  	%rs5, %rs4, %rs2;
	setp.eq.f32 	%p15, %f1, 0f3F800000;
	selp.u16 	%rs6, 1, 0, %p15;
	setp.eq.f32 	%p16, %f2, 0f3F800000;
	selp.u16 	%rs7, -1, 0, %p16;
	shl.b16 	%rs8, %rs7, 1;
	or.b16  	%rs9, %rs6, %rs8;
	and.b16  	%rs10, %rs9, 3;
	or.b16  	%rs11, %rs10, %rs5;
$L__tmp0:
	.loc	2 256 15                        // standard.py:256:15
	and.b16  	%rs12, %rs11, 15;
	cvt.u32.u16 	%r41, %rs12;
	popc.b32 	%r42, %r41;
	cvt.u16.u32 	%rs13, %r42;
	cvt.u64.u16 	%rd13, %rs13;
	.loc	2 267 36                        // standard.py:267:36
	shfl.sync.bfly.b32	%r43, %r42, 16, 31, -1;
	mov.b32 	%r44, 0;
	shfl.sync.bfly.b32	%r45, %r44, 16, 31, -1;
	cvt.u64.u32 	%rd14, %r43;
	cvt.u64.u32 	%rd15, %r45;
	shl.b64 	%rd16, %rd15, 32;
	or.b64  	%rd17, %rd14, %rd16;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd18, %rd13, %rd17;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r46}, %rd18; }
	cvt.u32.u64 	%r47, %rd18;
	shfl.sync.bfly.b32	%r48, %r47, 8, 31, -1;
	shfl.sync.bfly.b32	%r49, %r46, 8, 31, -1;
	cvt.u64.u32 	%rd19, %r48;
	cvt.u64.u32 	%rd20, %r49;
	shl.b64 	%rd21, %rd20, 32;
	or.b64  	%rd22, %rd19, %rd21;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd23, %rd18, %rd22;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r50}, %rd23; }
	cvt.u32.u64 	%r51, %rd23;
	shfl.sync.bfly.b32	%r52, %r51, 4, 31, -1;
	shfl.sync.bfly.b32	%r53, %r50, 4, 31, -1;
	cvt.u64.u32 	%rd24, %r52;
	cvt.u64.u32 	%rd25, %r53;
	shl.b64 	%rd26, %rd25, 32;
	or.b64  	%rd27, %rd24, %rd26;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd28, %rd23, %rd27;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r54}, %rd28; }
	cvt.u32.u64 	%r55, %rd28;
	shfl.sync.bfly.b32	%r56, %r55, 2, 31, -1;
	shfl.sync.bfly.b32	%r57, %r54, 2, 31, -1;
	cvt.u64.u32 	%rd29, %r56;
	cvt.u64.u32 	%rd30, %r57;
	shl.b64 	%rd31, %rd30, 32;
	or.b64  	%rd32, %rd29, %rd31;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd33, %rd28, %rd32;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r58}, %rd33; }
	cvt.u32.u64 	%r59, %rd33;
	shfl.sync.bfly.b32	%r60, %r59, 1, 31, -1;
	shfl.sync.bfly.b32	%r61, %r58, 1, 31, -1;
	cvt.u64.u32 	%rd34, %r60;
	cvt.u64.u32 	%rd35, %r61;
	shl.b64 	%rd36, %rd35, 32;
	or.b64  	%rd37, %rd34, %rd36;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd4, %rd33, %rd37;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p4, %r2, 0;
	bfe.u32 	%r62, %r1, 5, 1;
	shl.b32 	%r63, %r62, 3;
	mov.u32 	%r64, global_smem;
	add.s32 	%r21, %r64, %r63;
	// begin inline asm
	@%p4 st.shared.b64 [ %r21 + 0 ], %rd4;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p5, %r1, 2;
	shl.b32 	%r65, %r1, 3;
	add.s32 	%r22, %r64, %r65;
	// begin inline asm
	@%p5 ld.shared.b64 %rd5, [ %r22 + 0 ];
	// end inline asm
	{ .reg .b32 tmp; mov.b64 {tmp, %r66}, %rd5; }
	cvt.u32.u64 	%r67, %rd5;
	shfl.sync.bfly.b32	%r68, %r67, 1, 31, -1;
	shfl.sync.bfly.b32	%r69, %r66, 1, 31, -1;
	cvt.u64.u32 	%rd38, %r68;
	cvt.u64.u32 	%rd39, %r69;
	shl.b64 	%rd40, %rd39, 32;
	or.b64  	%rd41, %rd38, %rd40;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd6, %rd5, %rd41;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r70, %r1, 1;
	setp.eq.b32 	%p17, %r70, 1;
	not.pred 	%p18, %p17;
	and.pred  	%p37, %p5, %p18;
	// begin inline asm
	@%p37 st.shared.b64 [ %r22 + 0 ], %rd6;
	// end inline asm
	bar.sync 	0;
	ld.shared.u64 	%rd42, [global_smem];
$L__tmp1:
	.loc	1 39 19                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:39:19
	setp.eq.f32 	%p19, %f3, 0f00000000;
	selp.u16 	%rs14, 1, 0, %p19;
	shl.b16 	%rs15, %rs14, 2;
	setp.eq.f32 	%p20, %f4, 0f00000000;
	selp.u16 	%rs16, -1, 0, %p20;
	shl.b16 	%rs17, %rs16, 3;
	or.b16  	%rs18, %rs17, %rs15;
	setp.eq.f32 	%p21, %f1, 0f00000000;
	selp.u16 	%rs19, 1, 0, %p21;
	setp.eq.f32 	%p22, %f2, 0f00000000;
	selp.u16 	%rs20, -1, 0, %p22;
	shl.b16 	%rs21, %rs20, 1;
	or.b16  	%rs22, %rs19, %rs21;
	and.b16  	%rs23, %rs22, 3;
	or.b16  	%rs24, %rs23, %rs18;
$L__tmp2:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	and.b16  	%rs25, %rs24, 15;
	cvt.u32.u16 	%r71, %rs25;
	popc.b32 	%r72, %r71;
	cvt.u16.u32 	%rs26, %r72;
	cvt.u64.u16 	%rd43, %rs26;
	.loc	2 267 36                        // standard.py:267:36
	shfl.sync.bfly.b32	%r73, %r72, 16, 31, -1;
	shfl.sync.bfly.b32	%r74, %r44, 16, 31, -1;
	cvt.u64.u32 	%rd44, %r73;
	cvt.u64.u32 	%rd45, %r74;
	shl.b64 	%rd46, %rd45, 32;
	or.b64  	%rd47, %rd44, %rd46;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd48, %rd43, %rd47;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r75}, %rd48; }
	cvt.u32.u64 	%r76, %rd48;
	shfl.sync.bfly.b32	%r77, %r76, 8, 31, -1;
	shfl.sync.bfly.b32	%r78, %r75, 8, 31, -1;
	cvt.u64.u32 	%rd49, %r77;
	cvt.u64.u32 	%rd50, %r78;
	shl.b64 	%rd51, %rd50, 32;
	or.b64  	%rd52, %rd49, %rd51;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd53, %rd48, %rd52;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r79}, %rd53; }
	cvt.u32.u64 	%r80, %rd53;
	shfl.sync.bfly.b32	%r81, %r80, 4, 31, -1;
	shfl.sync.bfly.b32	%r82, %r79, 4, 31, -1;
	cvt.u64.u32 	%rd54, %r81;
	cvt.u64.u32 	%rd55, %r82;
	shl.b64 	%rd56, %rd55, 32;
	or.b64  	%rd57, %rd54, %rd56;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd58, %rd53, %rd57;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r83}, %rd58; }
	cvt.u32.u64 	%r84, %rd58;
	shfl.sync.bfly.b32	%r85, %r84, 2, 31, -1;
	shfl.sync.bfly.b32	%r86, %r83, 2, 31, -1;
	cvt.u64.u32 	%rd59, %r85;
	cvt.u64.u32 	%rd60, %r86;
	shl.b64 	%rd61, %rd60, 32;
	or.b64  	%rd62, %rd59, %rd61;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd63, %rd58, %rd62;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r87}, %rd63; }
	cvt.u32.u64 	%r88, %rd63;
	shfl.sync.bfly.b32	%r89, %r88, 1, 31, -1;
	shfl.sync.bfly.b32	%r90, %r87, 1, 31, -1;
	cvt.u64.u32 	%rd64, %r89;
	cvt.u64.u32 	%rd65, %r90;
	shl.b64 	%rd66, %rd65, 32;
	or.b64  	%rd67, %rd64, %rd66;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd7, %rd63, %rd67;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p4 st.shared.b64 [ %r21 + 0 ], %rd7;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 ld.shared.b64 %rd8, [ %r22 + 0 ];
	// end inline asm
	{ .reg .b32 tmp; mov.b64 {tmp, %r91}, %rd8; }
	cvt.u32.u64 	%r92, %rd8;
	shfl.sync.bfly.b32	%r93, %r92, 1, 31, -1;
	shfl.sync.bfly.b32	%r94, %r91, 1, 31, -1;
	cvt.u64.u32 	%rd68, %r93;
	cvt.u64.u32 	%rd69, %r94;
	shl.b64 	%rd70, %rd69, 32;
	or.b64  	%rd71, %rd68, %rd70;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd9, %rd8, %rd71;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p37 st.shared.b64 [ %r22 + 0 ], %rd9;
	// end inline asm
	bar.sync 	0;
	ld.shared.u64 	%rd72, [global_smem];
$L__tmp3:
	.loc	1 43 20                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:43:20
	cvt.rn.f32.s64 	%f42, %rd42;
	.loc	1 45 20                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:45:20
	mov.b32 	%r29, %f42;
	mov.b32 	%r28, 1065353216;
	// begin inline asm
	div.full.f32 %r27, %r28, %r29;
	// end inline asm
	mov.b32 	%f43, %r27;
	.loc	1 47 34                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:47:34
	selp.f32 	%f44, %f43, 0f00000000, %p15;
	selp.f32 	%f45, %f43, 0f00000000, %p16;
	selp.f32 	%f46, %f43, 0f00000000, %p13;
	selp.f32 	%f47, %f43, 0f00000000, %p14;
	.loc	1 48 21                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:48:21
	cvt.rn.f32.s64 	%f48, %rd72;
	.loc	1 49 20                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:49:20
	mov.b32 	%r32, %f48;
	// begin inline asm
	div.full.f32 %r30, %r28, %r32;
	// end inline asm
	mov.b32 	%f49, %r30;
	.loc	1 52 34                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:52:34
	selp.f32 	%f5, %f49, %f44, %p21;
	selp.f32 	%f6, %f49, %f45, %p22;
	selp.f32 	%f7, %f49, %f46, %p19;
	selp.f32 	%f8, %f49, %f47, %p20;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f5, %f6;
	add.f32 	%f51, %f7, %f50;
	add.f32 	%f52, %f8, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r95, %f52;
	shfl.sync.bfly.b32	%r96, %r95, 16, 31, -1;
	mov.b32 	%f53, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f54;
	shfl.sync.bfly.b32	%r98, %r97, 8, 31, -1;
	mov.b32 	%f55, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f56;
	shfl.sync.bfly.b32	%r100, %r99, 4, 31, -1;
	mov.b32 	%f57, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r101, %f58;
	shfl.sync.bfly.b32	%r102, %r101, 2, 31, -1;
	mov.b32 	%f59, %r102;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r103, %f60;
	shfl.sync.bfly.b32	%r104, %r103, 1, 31, -1;
	mov.b32 	%f61, %r104;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 267 36                        // standard.py:267:36
	shl.b32 	%r105, %r62, 2;
	add.s32 	%r147, %r64, %r105;
	mov.b32 	%r34, %f62;
	// begin inline asm
	@%p4 st.shared.b32 [ %r147 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r150, %r64, %r39;
	// begin inline asm
	@%p5 ld.shared.b32 %r35, [ %r150 + 0 ];
	// end inline asm
	mov.b32 	%f63, %r35;
	shfl.sync.bfly.b32	%r106, %r35, 1, 31, -1;
	mov.b32 	%f64, %r106;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f65;
	// begin inline asm
	@%p37 st.shared.b32 [ %r150 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
$L__tmp5:
	.loc	1 58 24                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:58:24
	and.b32  	%r107, %r17, 2147483647;
	mov.b32 	%f66, %r107;
	and.b32  	%r108, %r18, 2147483647;
	mov.b32 	%f67, %r108;
	and.b32  	%r109, %r19, 2147483647;
	mov.b32 	%f68, %r109;
	and.b32  	%r110, %r20, 2147483647;
	mov.b32 	%f69, %r110;
	mov.f32 	%f70, 0f00000000;
	.loc	1 59 13                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:59:13
	sub.f32 	%f71, %f70, %f66;
	sub.f32 	%f72, %f70, %f67;
	sub.f32 	%f73, %f70, %f68;
	sub.f32 	%f74, %f70, %f69;
	.loc	1 60 24                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:60:24
	mul.f32 	%f35, %f71, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f34, %f35;
	// end inline asm
	mul.f32 	%f37, %f72, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f36, %f37;
	// end inline asm
	mul.f32 	%f39, %f73, 0f3FB8AA3B;
	mov.f32 	%f75, 0f3F800000;
	.loc	1 61 28                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:61:28
	add.rz.ftz.f32 	%f76, %f34, %f75;
	mov.b32 	%r111, %f76;
	add.s32 	%r112, %r111, -1061158912;
	and.b32  	%r113, %r112, -8388608;
	mov.b32 	%r9, %f34;
	sub.s32 	%r114, %r9, %r113;
	mov.b32 	%f77, %r114;
	mov.b32 	%r115, 1082130432;
	sub.s32 	%r116, %r115, %r113;
	mov.b32 	%f78, %r116;
	mov.f32 	%f79, 0fBF800000;
	mov.f32 	%f80, 0f3E800000;
	fma.rn.ftz.f32 	%f81, %f80, %f78, %f79;
	add.f32 	%f82, %f81, %f77;
	cvt.rn.f32.s32 	%f83, %r113;
	mul.f32 	%f84, %f83, 0f34000000;
	mov.f32 	%f85, 0f3DD80012;
	mov.f32 	%f86, 0fBD39BF78;
	fma.rn.ftz.f32 	%f87, %f86, %f82, %f85;
	mov.f32 	%f88, 0fBE0778E0;
	fma.rn.ftz.f32 	%f89, %f87, %f82, %f88;
	mov.f32 	%f90, 0f3E146475;
	fma.rn.ftz.f32 	%f91, %f89, %f82, %f90;
	mov.f32 	%f92, 0fBE2A68DD;
	fma.rn.ftz.f32 	%f93, %f91, %f82, %f92;
	mov.f32 	%f94, 0f3E4CAF9E;
	fma.rn.ftz.f32 	%f95, %f93, %f82, %f94;
	mov.f32 	%f96, 0fBE800042;
	fma.rn.ftz.f32 	%f97, %f95, %f82, %f96;
	mov.f32 	%f98, 0f3EAAAAE6;
	fma.rn.ftz.f32 	%f99, %f97, %f82, %f98;
	mov.f32 	%f100, 0fBF000000;
	fma.rn.ftz.f32 	%f101, %f99, %f82, %f100;
	mul.f32 	%f102, %f82, %f101;
	fma.rn.ftz.f32 	%f103, %f102, %f82, %f82;
	mov.f32 	%f104, 0f3F317218;
	fma.rn.ftz.f32 	%f252, %f84, %f104, %f103;
	setp.lt.u32 	%p23, %r9, 2139095040;
	mov.f32 	%f250, 0f7F800000;
	@%p23 bra 	$L__BB0_4;
// %bb.1:
	setp.lt.s32 	%p24, %r9, -1082130431;
	@%p24 bra 	$L__BB0_3;
// %bb.2:                               // %__nv_fmaf_rn.exit.i
	.loc	1 0 28                          // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:0:28
	fma.rn.ftz.f32 	%f252, %f34, %f250, %f250;
$L__BB0_3:
	.loc	1 61 28                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:61:28
	setp.eq.f32 	%p25, %f34, 0f00000000;
	selp.f32 	%f252, 0f80000000, %f252, %p25;
$L__BB0_4:                              // %__nv_log1pf.exit
	.loc	1 0 0                           // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:0:0
	mul.f32 	%f41, %f74, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f38, %f39;
	// end inline asm
	.loc	1 61 28                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:61:28
	add.rz.ftz.f32 	%f107, %f36, %f75;
	mov.b32 	%r117, %f107;
	add.s32 	%r118, %r117, -1061158912;
	and.b32  	%r119, %r118, -8388608;
	mov.b32 	%r10, %f36;
	sub.s32 	%r120, %r10, %r119;
	mov.b32 	%f108, %r120;
	sub.s32 	%r122, %r115, %r119;
	mov.b32 	%f109, %r122;
	fma.rn.ftz.f32 	%f112, %f80, %f109, %f79;
	add.f32 	%f113, %f112, %f108;
	cvt.rn.f32.s32 	%f114, %r119;
	mul.f32 	%f115, %f114, 0f34000000;
	fma.rn.ftz.f32 	%f118, %f86, %f113, %f85;
	fma.rn.ftz.f32 	%f120, %f118, %f113, %f88;
	fma.rn.ftz.f32 	%f122, %f120, %f113, %f90;
	fma.rn.ftz.f32 	%f124, %f122, %f113, %f92;
	fma.rn.ftz.f32 	%f126, %f124, %f113, %f94;
	fma.rn.ftz.f32 	%f128, %f126, %f113, %f96;
	fma.rn.ftz.f32 	%f130, %f128, %f113, %f98;
	fma.rn.ftz.f32 	%f132, %f130, %f113, %f100;
	mul.f32 	%f133, %f113, %f132;
	fma.rn.ftz.f32 	%f134, %f133, %f113, %f113;
	fma.rn.ftz.f32 	%f253, %f115, %f104, %f134;
	setp.lt.u32 	%p26, %r10, 2139095040;
	@%p26 bra 	$L__BB0_8;
// %bb.5:
	setp.lt.s32 	%p27, %r10, -1082130431;
	@%p27 bra 	$L__BB0_7;
// %bb.6:                               // %__nv_fmaf_rn.exit.i38
	.loc	1 0 28                          // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:0:28
	fma.rn.ftz.f32 	%f253, %f36, %f250, %f250;
$L__BB0_7:
	.loc	1 61 28                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:61:28
	setp.eq.f32 	%p28, %f36, 0f00000000;
	selp.f32 	%f253, 0f80000000, %f253, %p28;
$L__BB0_8:                              // %__nv_log1pf.exit41
	.loc	1 0 0                           // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:0:0
	// begin inline asm
	ex2.approx.f32 %f40, %f41;
	// end inline asm
	.loc	1 61 28                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:61:28
	add.rz.ftz.f32 	%f138, %f38, %f75;
	mov.b32 	%r123, %f138;
	add.s32 	%r124, %r123, -1061158912;
	and.b32  	%r125, %r124, -8388608;
	mov.b32 	%r11, %f38;
	sub.s32 	%r126, %r11, %r125;
	mov.b32 	%f139, %r126;
	sub.s32 	%r128, %r115, %r125;
	mov.b32 	%f140, %r128;
	fma.rn.ftz.f32 	%f143, %f80, %f140, %f79;
	add.f32 	%f144, %f143, %f139;
	cvt.rn.f32.s32 	%f145, %r125;
	mul.f32 	%f146, %f145, 0f34000000;
	fma.rn.ftz.f32 	%f149, %f86, %f144, %f85;
	fma.rn.ftz.f32 	%f151, %f149, %f144, %f88;
	fma.rn.ftz.f32 	%f153, %f151, %f144, %f90;
	fma.rn.ftz.f32 	%f155, %f153, %f144, %f92;
	fma.rn.ftz.f32 	%f157, %f155, %f144, %f94;
	fma.rn.ftz.f32 	%f159, %f157, %f144, %f96;
	fma.rn.ftz.f32 	%f161, %f159, %f144, %f98;
	fma.rn.ftz.f32 	%f163, %f161, %f144, %f100;
	mul.f32 	%f164, %f144, %f163;
	fma.rn.ftz.f32 	%f165, %f164, %f144, %f144;
	fma.rn.ftz.f32 	%f255, %f146, %f104, %f165;
	setp.lt.u32 	%p29, %r11, 2139095040;
	@%p29 bra 	$L__BB0_12;
// %bb.9:
	setp.lt.s32 	%p30, %r11, -1082130431;
	@%p30 bra 	$L__BB0_11;
// %bb.10:                              // %__nv_fmaf_rn.exit.i69
	.loc	1 0 28                          // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:0:28
	fma.rn.ftz.f32 	%f255, %f38, %f250, %f250;
$L__BB0_11:
	.loc	1 61 28                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:61:28
	setp.eq.f32 	%p31, %f38, 0f00000000;
	selp.f32 	%f255, 0f80000000, %f255, %p31;
$L__BB0_12:                             // %__nv_log1pf.exit72
	.loc	1 0 28                          // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:0:28
	ld.param.u64 	%rd73, [triton_per_fused__to_copy_binary_cross_entropy_with_logits_div_eq_index_put_mul_new_zeros_reciprocal_sum_0_param_0];
	ld.shared.f32 	%f9, [global_smem];
	.loc	1 61 28                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:61:28
	add.rz.ftz.f32 	%f169, %f40, %f75;
	mov.b32 	%r129, %f169;
	add.s32 	%r130, %r129, -1061158912;
	and.b32  	%r131, %r130, -8388608;
	mov.b32 	%r12, %f40;
	sub.s32 	%r132, %r12, %r131;
	mov.b32 	%f170, %r132;
	sub.s32 	%r134, %r115, %r131;
	mov.b32 	%f171, %r134;
	fma.rn.ftz.f32 	%f174, %f80, %f171, %f79;
	add.f32 	%f175, %f174, %f170;
	cvt.rn.f32.s32 	%f176, %r131;
	mul.f32 	%f177, %f176, 0f34000000;
	fma.rn.ftz.f32 	%f180, %f86, %f175, %f85;
	fma.rn.ftz.f32 	%f182, %f180, %f175, %f88;
	fma.rn.ftz.f32 	%f184, %f182, %f175, %f90;
	fma.rn.ftz.f32 	%f186, %f184, %f175, %f92;
	fma.rn.ftz.f32 	%f188, %f186, %f175, %f94;
	fma.rn.ftz.f32 	%f190, %f188, %f175, %f96;
	fma.rn.ftz.f32 	%f192, %f190, %f175, %f98;
	fma.rn.ftz.f32 	%f194, %f192, %f175, %f100;
	mul.f32 	%f195, %f175, %f194;
	fma.rn.ftz.f32 	%f196, %f195, %f175, %f175;
	fma.rn.ftz.f32 	%f257, %f177, %f104, %f196;
	setp.lt.u32 	%p32, %r12, 2139095040;
	@%p32 bra 	$L__BB0_16;
// %bb.13:
	setp.lt.s32 	%p33, %r12, -1082130431;
	@%p33 bra 	$L__BB0_15;
// %bb.14:                              // %__nv_fmaf_rn.exit.i100
	.loc	1 0 28                          // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:0:28
	fma.rn.ftz.f32 	%f257, %f40, %f250, %f250;
$L__BB0_15:
	.loc	1 61 28                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:61:28
	setp.eq.f32 	%p34, %f40, 0f00000000;
	selp.f32 	%f257, 0f80000000, %f257, %p34;
$L__BB0_16:                             // %__nv_log1pf.exit103
	.loc	1 32 36                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:32:36
	mov.b32 	%f199, %r20;
	mov.b32 	%f200, %r19;
	mov.b32 	%f201, %r17;
	mov.b32 	%f202, %r18;
$L__tmp6:
	.loc	3 110 15                        // triton_helpers.py:110:15
	setp.gt.f32 	%p39, %f200, 0f00000000;
	setp.gt.f32 	%p40, %f199, 0f00000000;
	setp.gt.f32 	%p41, %f202, 0f00000000;
	setp.gt.f32 	%p42, %f201, 0f00000000;
$L__tmp7:
	.loc	1 55 19                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:55:19
	sub.f32 	%f204, %f75, %f3;
	sub.f32 	%f205, %f75, %f4;
	sub.f32 	%f206, %f75, %f2;
	sub.f32 	%f207, %f75, %f1;
$L__tmp8:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f208, %f9, 0f00000000;
$L__tmp9:
	.loc	1 64 20                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:64:20
	mov.b32 	%r136, %f5;
	mov.b32 	%r137, %f208;
	// begin inline asm
	div.full.f32 %r135, %r136, %r137;
	// end inline asm
	mov.b32 	%f209, %r135;
	mov.b32 	%r139, %f6;
	// begin inline asm
	div.full.f32 %r138, %r139, %r137;
	// end inline asm
	mov.b32 	%f210, %r138;
	mov.b32 	%r142, %f7;
	// begin inline asm
	div.full.f32 %r141, %r142, %r137;
	// end inline asm
	mov.b32 	%f211, %r141;
	mov.b32 	%r145, %f8;
	// begin inline asm
	div.full.f32 %r144, %r145, %r137;
	// end inline asm
	mov.b32 	%f212, %r144;
$L__tmp10:
	.loc	3 113 29                        // triton_helpers.py:113:29
	selp.f32 	%f213, 0f00000000, %f201, %p42;
	selp.f32 	%f214, 0f00000000, %f202, %p41;
$L__tmp11:
	.loc	1 62 20                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:62:20
	sub.f32 	%f215, %f214, %f253;
	sub.f32 	%f216, %f213, %f252;
	.loc	1 63 20                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:63:20
	neg.f32 	%f217, %f216;
	fma.rn.f32 	%f218, %f207, %f201, %f217;
	neg.f32 	%f219, %f215;
	fma.rn.f32 	%f220, %f206, %f202, %f219;
	.loc	1 65 20                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:65:20
	mul.f32 	%f221, %f220, %f210;
$L__tmp12:
	.loc	3 113 29                        // triton_helpers.py:113:29
	selp.f32 	%f222, 0f00000000, %f199, %p40;
	selp.f32 	%f223, 0f00000000, %f200, %p39;
$L__tmp13:
	.loc	1 62 20                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:62:20
	sub.f32 	%f224, %f223, %f255;
	sub.f32 	%f225, %f222, %f257;
	.loc	1 63 20                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:63:20
	neg.f32 	%f226, %f225;
	fma.rn.f32 	%f227, %f205, %f199, %f226;
	neg.f32 	%f228, %f224;
	fma.rn.f32 	%f229, %f204, %f200, %f228;
$L__tmp14:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f230, %f218, %f209, %f221;
	fma.rn.f32 	%f231, %f229, %f211, %f230;
	fma.rn.f32 	%f232, %f227, %f212, %f231;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r154, %f232;
	shfl.sync.bfly.b32	%r155, %r154, 16, 31, -1;
	mov.b32 	%f233, %r155;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f234, %f232, %f233;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r156, %f234;
	shfl.sync.bfly.b32	%r157, %r156, 8, 31, -1;
	mov.b32 	%f235, %r157;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f236, %f234, %f235;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r158, %f236;
	shfl.sync.bfly.b32	%r159, %r158, 4, 31, -1;
	mov.b32 	%f237, %r159;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f238, %f236, %f237;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r160, %f238;
	shfl.sync.bfly.b32	%r161, %r160, 2, 31, -1;
	mov.b32 	%f239, %r161;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f240, %f238, %f239;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r162, %f240;
	shfl.sync.bfly.b32	%r163, %r162, 1, 31, -1;
	mov.b32 	%f241, %r163;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f242, %f240, %f241;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r148, %f242;
	// begin inline asm
	@%p4 st.shared.b32 [ %r147 + 0 ], %r148;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 ld.shared.b32 %r149, [ %r150 + 0 ];
	// end inline asm
	mov.b32 	%f243, %r149;
	shfl.sync.bfly.b32	%r164, %r149, 1, 31, -1;
	mov.b32 	%f244, %r164;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f245, %f243, %f244;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r152, %f245;
	// begin inline asm
	@%p37 st.shared.b32 [ %r150 + 0 ], %r152;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f246, [global_smem];
$L__tmp15:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f247, %f246, 0f00000000;
$L__tmp16:
	.loc	1 68 63                         // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:68:63
	and.b32  	%r165, %r1, 63;
	setp.eq.s32 	%p38, %r165, 0;
	mov.b32 	%r153, %f247;
	// begin inline asm
	@%p38 st.global.b32 [ %rd73 + 0 ], { %r153 };
	// end inline asm
	.loc	1 68 4                          // cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py:68:4
	ret;
$L__tmp17:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/be/cbetowq3fqvitxqyvqyumlwplphxp2bke2a5x4igbtmvzp2rrmet.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 395                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x184 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 101
.b8 116
.b8 111
.b8 119
.b8 113
.b8 51
.b8 102
.b8 113
.b8 118
.b8 105
.b8 116
.b8 120
.b8 113
.b8 121
.b8 118
.b8 113
.b8 121
.b8 117
.b8 109
.b8 108
.b8 119
.b8 112
.b8 108
.b8 112
.b8 104
.b8 120
.b8 112
.b8 50
.b8 98
.b8 107
.b8 101
.b8 50
.b8 97
.b8 53
.b8 120
.b8 52
.b8 105
.b8 103
.b8 98
.b8 116
.b8 109
.b8 118
.b8 122
.b8 112
.b8 50
.b8 114
.b8 114
.b8 109
.b8 101
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 101
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x6d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 98
.b8 105
.b8 110
.b8 97
.b8 114
.b8 121
.b8 95
.b8 99
.b8 114
.b8 111
.b8 115
.b8 115
.b8 95
.b8 101
.b8 110
.b8 116
.b8 114
.b8 111
.b8 112
.b8 121
.b8 95
.b8 119
.b8 105
.b8 116
.b8 104
.b8 95
.b8 108
.b8 111
.b8 103
.b8 105
.b8 116
.b8 115
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 101
.b8 113
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 112
.b8 117
.b8 116
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 101
.b8 119
.b8 95
.b8 122
.b8 101
.b8 114
.b8 111
.b8 115
.b8 95
.b8 114
.b8 101
.b8 99
.b8 105
.b8 112
.b8 114
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xd0:0xbe DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xe5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xfd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x115:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x12d:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp6                           // DW_AT_low_pc
.b64 $L__tmp13                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 57                                  // DW_AT_call_line
.b8 41                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x145:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp8                           // DW_AT_low_pc
.b64 $L__tmp9                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x15d:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp14                          // DW_AT_low_pc
.b64 $L__tmp15                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 67                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x175:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp15                          // DW_AT_low_pc
.b64 $L__tmp16                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 67                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
