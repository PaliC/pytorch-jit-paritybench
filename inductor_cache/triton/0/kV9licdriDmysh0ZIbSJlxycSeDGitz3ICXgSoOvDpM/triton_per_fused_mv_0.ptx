//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mv_0   // -- Begin function triton_per_fused_mv_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mv_0
.visible .entry triton_per_fused_mv_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_mv_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mv_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_mv_0_param_2,
	.param .u32 triton_per_fused_mv_0_param_3,
	.param .u32 triton_per_fused_mv_0_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<37>;
	.reg .b32 	%r<111>;
	.reg .f32 	%f<81>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_per_fused_mv_0_param_0];
	ld.param.u64 	%rd8, [triton_per_fused_mv_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:23:33
	shl.b32 	%r51, %r1, 5;
	ld.param.u64 	%rd9, [triton_per_fused_mv_0_param_2];
	.loc	1 24 44                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:24:44
	mov.u32 	%r52, %tid.x;
	bfe.u32 	%r53, %r52, 5, 3;
	and.b32  	%r54, %r52, 31;
	.loc	1 24 23                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:24:23
	or.b32  	%r55, %r51, %r53;
	or.b32  	%r56, %r55, 8;
	or.b32  	%r57, %r55, 16;
	or.b32  	%r58, %r55, 24;
	or.b32  	%r59, %r51, %r54;
	.loc	1 25 21                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:25:21
	setp.lt.s32 	%p31, %r55, 64;
	setp.lt.s32 	%p32, %r56, 64;
	setp.lt.s32 	%p33, %r57, 64;
	setp.lt.s32 	%p34, %r58, 64;
	setp.lt.s32 	%p35, %r59, 64;
	.loc	1 26 34                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:26:34
	shl.b32 	%r60, %r52, 2;
	and.b32  	%r61, %r60, 124;
	.loc	1 28 21                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:28:21
	setp.lt.u32 	%p21, %r61, 108;
	.loc	1 31 35                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:31:35
	mad.lo.s32 	%r62, %r55, 108, %r61;
	mad.lo.s32 	%r63, %r56, 108, %r61;
	mad.lo.s32 	%r64, %r57, 108, %r61;
	mad.lo.s32 	%r65, %r58, 108, %r61;
	.loc	1 31 30                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:31:30
	mul.wide.s32 	%rd10, %r62, 4;
	add.s64 	%rd1, %rd7, %rd10;
	mul.wide.s32 	%rd11, %r63, 4;
	add.s64 	%rd2, %rd7, %rd11;
	mul.wide.s32 	%rd12, %r64, 4;
	add.s64 	%rd3, %rd7, %rd12;
	mul.wide.s32 	%rd13, %r65, 4;
	add.s64 	%rd4, %rd7, %rd13;
	.loc	1 31 52                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:31:52
	and.pred  	%p1, %p21, %p31;
	and.pred  	%p6, %p21, %p32;
	and.pred  	%p11, %p21, %p33;
	and.pred  	%p16, %p21, %p34;
	mov.b32 	%r6, 0;
	.loc	1 31 44                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:31:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p11 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r18, %r6;
	@!%p11 mov.u32 %r19, %r6;
	@!%p11 mov.u32 %r20, %r6;
	@!%p11 mov.u32 %r21, %r6;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p16 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p16 mov.u32 %r26, %r6;
	@!%p16 mov.u32 %r27, %r6;
	@!%p16 mov.u32 %r28, %r6;
	@!%p16 mov.u32 %r29, %r6;
	// end inline asm
	mov.b32 	%f13, %r26;
	mov.b32 	%f14, %r27;
	mov.b32 	%f15, %r28;
	mov.b32 	%f16, %r29;
	.loc	1 32 30                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:32:30
	mul.wide.u32 	%rd14, %r61, 4;
	add.s64 	%rd5, %rd8, %rd14;
	.loc	1 32 35                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:32:35
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p21 ld.global.L1::evict_last.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd5 + 0 ];
	@!%p21 mov.u32 %r34, %r6;
	@!%p21 mov.u32 %r35, %r6;
	@!%p21 mov.u32 %r36, %r6;
	@!%p21 mov.u32 %r37, %r6;
	// end inline asm
	mov.b32 	%f17, %r34;
	mov.b32 	%f18, %r35;
	mov.b32 	%f19, %r36;
	mov.b32 	%f20, %r37;
	.loc	1 33 18                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:33:18
	mul.f32 	%f21, %f2, %f18;
	mul.f32 	%f22, %f6, %f18;
	mul.f32 	%f23, %f10, %f18;
	mul.f32 	%f24, %f14, %f18;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f25, %f1, %f17, %f21;
	fma.rn.f32 	%f26, %f3, %f19, %f25;
	fma.rn.f32 	%f27, %f4, %f20, %f26;
	selp.f32 	%f28, %f27, 0f00000000, %p1;
	fma.rn.f32 	%f29, %f5, %f17, %f22;
	fma.rn.f32 	%f30, %f7, %f19, %f29;
	fma.rn.f32 	%f31, %f8, %f20, %f30;
	selp.f32 	%f32, %f31, 0f00000000, %p6;
	fma.rn.f32 	%f33, %f9, %f17, %f23;
	fma.rn.f32 	%f34, %f11, %f19, %f33;
	fma.rn.f32 	%f35, %f12, %f20, %f34;
	selp.f32 	%f36, %f35, 0f00000000, %p11;
	fma.rn.f32 	%f37, %f13, %f17, %f24;
	fma.rn.f32 	%f38, %f15, %f19, %f37;
	fma.rn.f32 	%f39, %f16, %f20, %f38;
	selp.f32 	%f40, %f39, 0f00000000, %p16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f28;
	shfl.sync.bfly.b32	%r67, %r66, 16, 31, -1;
	mov.b32 	%f41, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f28, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f42;
	shfl.sync.bfly.b32	%r69, %r68, 8, 31, -1;
	mov.b32 	%f43, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f44;
	shfl.sync.bfly.b32	%r71, %r70, 4, 31, -1;
	mov.b32 	%f45, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f46;
	shfl.sync.bfly.b32	%r73, %r72, 2, 31, -1;
	mov.b32 	%f47, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f48;
	shfl.sync.bfly.b32	%r75, %r74, 1, 31, -1;
	mov.b32 	%f49, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f32;
	shfl.sync.bfly.b32	%r77, %r76, 16, 31, -1;
	mov.b32 	%f51, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f32, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f52;
	shfl.sync.bfly.b32	%r79, %r78, 8, 31, -1;
	mov.b32 	%f53, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f54;
	shfl.sync.bfly.b32	%r81, %r80, 4, 31, -1;
	mov.b32 	%f55, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f56;
	shfl.sync.bfly.b32	%r83, %r82, 2, 31, -1;
	mov.b32 	%f57, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f58;
	shfl.sync.bfly.b32	%r85, %r84, 1, 31, -1;
	mov.b32 	%f59, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f36;
	shfl.sync.bfly.b32	%r87, %r86, 16, 31, -1;
	mov.b32 	%f61, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f36, %f61;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f62;
	shfl.sync.bfly.b32	%r89, %r88, 8, 31, -1;
	mov.b32 	%f63, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f64;
	shfl.sync.bfly.b32	%r91, %r90, 4, 31, -1;
	mov.b32 	%f65, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r92, %f66;
	shfl.sync.bfly.b32	%r93, %r92, 2, 31, -1;
	mov.b32 	%f67, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f68;
	shfl.sync.bfly.b32	%r95, %r94, 1, 31, -1;
	mov.b32 	%f69, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f40;
	shfl.sync.bfly.b32	%r97, %r96, 16, 31, -1;
	mov.b32 	%f71, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f40, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f72;
	shfl.sync.bfly.b32	%r99, %r98, 8, 31, -1;
	mov.b32 	%f73, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f74;
	shfl.sync.bfly.b32	%r101, %r100, 4, 31, -1;
	mov.b32 	%f75, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f76;
	shfl.sync.bfly.b32	%r103, %r102, 2, 31, -1;
	mov.b32 	%f77, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f78;
	shfl.sync.bfly.b32	%r105, %r104, 1, 31, -1;
	mov.b32 	%f79, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f80, %f78, %f79;
$L__tmp2:
	.loc	1 36 27                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:36:27
	shl.b32 	%r106, %r53, 2;
	mov.u32 	%r107, global_smem;
	add.s32 	%r42, %r107, %r106;
	mov.b32 	%r43, %f50;
	mov.pred 	%p26, -1;
	// begin inline asm
	@%p26 st.shared.b32 [ %r42 + 0 ], %r43;
	// end inline asm
	add.s32 	%r44, %r42, 32;
	mov.b32 	%r45, %f60;
	// begin inline asm
	@%p26 st.shared.b32 [ %r44 + 0 ], %r45;
	// end inline asm
	add.s32 	%r46, %r42, 64;
	mov.b32 	%r47, %f70;
	// begin inline asm
	@%p26 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r48, %r42, 96;
	mov.b32 	%r49, %f80;
	// begin inline asm
	@%p26 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r108, %r54, 2;
	add.s32 	%r109, %r107, %r108;
	ld.shared.u32 	%r50, [%r109];
	.loc	1 37 25                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:37:25
	mul.wide.s32 	%rd15, %r59, 4;
	add.s64 	%rd6, %rd9, %rd15;
	.loc	1 37 36                         // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:37:36
	and.b32  	%r110, %r52, 224;
	setp.eq.s32 	%p36, %r110, 0;
	and.pred  	%p30, %p36, %p35;
	// begin inline asm
	@%p30 st.global.b32 [ %rd6 + 0 ], { %r50 };
	// end inline asm
	.loc	1 37 4                          // cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py:37:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/gx/cgxinxl3cbfc56zndizzezyosaom4sp2iyfhslwwgkcm33liwfzh.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 166                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x9f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 120
.b8 105
.b8 110
.b8 120
.b8 108
.b8 51
.b8 99
.b8 98
.b8 102
.b8 99
.b8 53
.b8 54
.b8 122
.b8 110
.b8 100
.b8 105
.b8 122
.b8 122
.b8 101
.b8 122
.b8 121
.b8 111
.b8 115
.b8 97
.b8 111
.b8 109
.b8 52
.b8 115
.b8 112
.b8 50
.b8 105
.b8 121
.b8 102
.b8 104
.b8 115
.b8 108
.b8 119
.b8 119
.b8 103
.b8 107
.b8 99
.b8 109
.b8 51
.b8 51
.b8 108
.b8 105
.b8 119
.b8 102
.b8 122
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x18 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 118
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x90:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
