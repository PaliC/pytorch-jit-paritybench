; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_constant_pad_nd_2(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 784, !dbg !14
  %12 = sdiv i32 %9, 7, !dbg !15
  %13 = sdiv i32 %10, 7, !dbg !15
  %14 = sdiv i32 %9, 49, !dbg !16
  %15 = sdiv i32 %10, 49, !dbg !16
  %16 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !17
  %17 = insertelement <2 x i32> %16, i32 %9, i64 1, !dbg !17
  %18 = srem <2 x i32> %17, splat (i32 7), !dbg !17
  %19 = add nsw <2 x i32> %18, splat (i32 -2), !dbg !18
  %shift = shufflevector <2 x i32> %19, <2 x i32> poison, <2 x i32> <i32 1, i32 poison>, !dbg !19
  %20 = or <2 x i32> %19, %shift, !dbg !19
  %21 = extractelement <2 x i32> %20, i64 0, !dbg !19
  %22 = icmp ult i32 %21, 4, !dbg !19
  %23 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !17
  %24 = insertelement <2 x i32> %23, i32 %10, i64 1, !dbg !17
  %25 = srem <2 x i32> %24, splat (i32 7), !dbg !17
  %26 = add nsw <2 x i32> %25, splat (i32 -2), !dbg !18
  %shift1 = shufflevector <2 x i32> %26, <2 x i32> poison, <2 x i32> <i32 1, i32 poison>, !dbg !19
  %27 = or <2 x i32> %26, %shift1, !dbg !19
  %28 = extractelement <2 x i32> %27, i64 0, !dbg !19
  %29 = icmp ult i32 %28, 4, !dbg !19
  %30 = extractelement <2 x i32> %18, i64 1, !dbg !20
  %31 = add nsw i32 %30, -10, !dbg !20
  %32 = extractelement <2 x i32> %25, i64 1, !dbg !20
  %33 = add nsw i32 %32, -10, !dbg !20
  %34 = extractelement <2 x i32> %18, i64 0, !dbg !21
  %35 = shl nsw i32 %34, 2, !dbg !21
  %36 = extractelement <2 x i32> %25, i64 0, !dbg !21
  %37 = shl nsw i32 %36, 2, !dbg !21
  %38 = shl nsw i32 %14, 4, !dbg !22
  %39 = shl nsw i32 %15, 4, !dbg !22
  %40 = add nsw i32 %31, %38, !dbg !23
  %41 = add nsw i32 %40, %35, !dbg !24
  %42 = add nsw i32 %33, %39, !dbg !23
  %43 = add nsw i32 %42, %37, !dbg !24
  %44 = sext i32 %41 to i64, !dbg !25
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !25
  %46 = sext i32 %43 to i64, !dbg !25
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !25
  %48 = and i1 %11, %22, !dbg !26
  %49 = and i1 %29, %11, !dbg !26
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %48, i32 0, i1 %48) #1, !dbg !27
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %49, i32 0, i1 %49) #1, !dbg !27
  %52 = sext i32 %9 to i64, !dbg !28
  %53 = getelementptr float, ptr addrspace(1) %1, i64 %52, !dbg !28
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %50, i32 %51, ptr addrspace(1) %53, i1 %11) #1, !dbg !29
  ret void, !dbg !30
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cwk4dsrcht7kfl7ydd4ldg42skzu5p7pzw3jap6nzgkxeu7ti5hz.py", directory: "inductor_cache/wk")
!4 = !{ptr @triton_poi_fused_constant_pad_nd_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_constant_pad_nd_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_constant_pad_nd_2", linkageName: "triton_poi_fused_constant_pad_nd_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 24, column: 26, scope: !7)
!18 = !DILocation(line: 36, column: 18, scope: !7)
!19 = !DILocation(line: 38, column: 19, scope: !7)
!20 = !DILocation(line: 39, column: 39, scope: !7)
!21 = !DILocation(line: 39, column: 46, scope: !7)
!22 = !DILocation(line: 39, column: 54, scope: !7)
!23 = !DILocation(line: 39, column: 44, scope: !7)
!24 = !DILocation(line: 39, column: 51, scope: !7)
!25 = !DILocation(line: 39, column: 31, scope: !7)
!26 = !DILocation(line: 39, column: 67, scope: !7)
!27 = !DILocation(line: 39, column: 59, scope: !7)
!28 = !DILocation(line: 40, column: 25, scope: !7)
!29 = !DILocation(line: 40, column: 37, scope: !7)
!30 = !DILocation(line: 40, column: 4, scope: !7)
