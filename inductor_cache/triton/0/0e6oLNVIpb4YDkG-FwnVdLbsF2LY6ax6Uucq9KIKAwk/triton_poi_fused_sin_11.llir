; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_sin_11(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i331 = alloca [7 x i32], align 4
  %result.i.i.i.i276 = alloca [7 x i32], align 4
  %result.i.i.i.i221 = alloca [7 x i32], align 4
  %result.i.i.i.i166 = alloca [7 x i32], align 4
  %result.i.i.i.i111 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %5 = shl i32 %4, 10, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 512, !dbg !13
  %11 = sext i32 %9 to i64, !dbg !14
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !14
  %13 = sext i32 %10 to i64, !dbg !14
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !14
  %15 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %12, i1 true) #4, !dbg !15
  %16 = extractvalue { i32, i32, i32, i32 } %15, 0, !dbg !15
  %17 = extractvalue { i32, i32, i32, i32 } %15, 1, !dbg !15
  %18 = extractvalue { i32, i32, i32, i32 } %15, 2, !dbg !15
  %19 = extractvalue { i32, i32, i32, i32 } %15, 3, !dbg !15
  %20 = bitcast i32 %16 to float, !dbg !15
  %21 = bitcast i32 %17 to float, !dbg !15
  %22 = bitcast i32 %18 to float, !dbg !15
  %23 = bitcast i32 %19 to float, !dbg !15
  %24 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %14, i1 true) #4, !dbg !15
  %25 = extractvalue { i32, i32, i32, i32 } %24, 0, !dbg !15
  %26 = extractvalue { i32, i32, i32, i32 } %24, 1, !dbg !15
  %27 = extractvalue { i32, i32, i32, i32 } %24, 2, !dbg !15
  %28 = extractvalue { i32, i32, i32, i32 } %24, 3, !dbg !15
  %29 = bitcast i32 %25 to float, !dbg !15
  %30 = bitcast i32 %26 to float, !dbg !15
  %31 = bitcast i32 %27 to float, !dbg !15
  %32 = bitcast i32 %28 to float, !dbg !15
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !16
  %33 = fmul float %20, 0x3FE45F3060000000, !dbg !16
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i = icmp eq i32 %34, 0, !dbg !16
  %35 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %33) #4, !dbg !16
  %36 = tail call i32 @llvm.nvvm.f2i.rn(float %33) #4, !dbg !16
  %.01.i = select i1 %.not.i, i32 %36, i32 %35, !dbg !16
  %37 = sitofp i32 %.01.i to float, !dbg !16
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not15.i = icmp eq i32 %38, 0, !dbg !16
  %39 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %37, float 0xBFF921FB40000000, float %20) #4, !dbg !16
  %40 = tail call float @llvm.nvvm.fma.rn.f(float %37, float 0xBFF921FB40000000, float %20) #4, !dbg !16
  %.02.i = select i1 %.not15.i, float %40, float %39, !dbg !16
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not16.i = icmp eq i32 %41, 0, !dbg !16
  %42 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %37, float 0xBE74442D00000000, float %.02.i) #4, !dbg !16
  %43 = tail call float @llvm.nvvm.fma.rn.f(float %37, float 0xBE74442D00000000, float %.02.i) #4, !dbg !16
  %.03.i = select i1 %.not16.i, float %43, float %42, !dbg !16
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not17.i = icmp eq i32 %44, 0, !dbg !16
  %45 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %37, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !16
  %46 = tail call float @llvm.nvvm.fma.rn.f(float %37, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !16
  %.04.i = select i1 %.not17.i, float %46, float %45, !dbg !16
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not18.i = icmp eq i32 %47, 0, !dbg !16
  %48 = tail call float @llvm.nvvm.fabs.ftz.f(float %20) #4, !dbg !16
  %49 = tail call float @llvm.nvvm.fabs.f(float %20) #4, !dbg !16
  %.06.i = select i1 %.not18.i, float %49, float %48, !dbg !16
  %50 = fcmp ult float %.06.i, 1.056150e+05, !dbg !16
  br i1 %50, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !16

__nv_isinff.exit.i.i.i:                           ; preds = %3
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not19.i = icmp eq i32 %51, 0, !dbg !16
  %.07.i = select i1 %.not19.i, float %49, float %48, !dbg !16
  %52 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !16
  br i1 %52, label %__nv_fmul_rn.exit.i.i.i, label %56, !dbg !16

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not27.i = icmp eq i32 %53, 0, !dbg !16
  %54 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %20, float 0.000000e+00) #4, !dbg !16
  %55 = tail call float @llvm.nvvm.mul.rn.f(float %20, float 0.000000e+00) #4, !dbg !16
  %.08.i = select i1 %.not27.i, float %55, float %54, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !16

56:                                               ; preds = %__nv_isinff.exit.i.i.i
  %57 = lshr i32 %16, 23, !dbg !16
  %58 = and i32 %57, 224, !dbg !16
  %59 = add nsw i32 %58, -128, !dbg !16
  %60 = shl i32 %16, 8, !dbg !16
  %61 = or i32 %60, -2147483648, !dbg !16
  %62 = lshr exact i32 %59, 5, !dbg !16
  br label %63, !dbg !16

63:                                               ; preds = %56, %63
  %indvars.iv = phi i64 [ 0, %56 ], [ %indvars.iv.next, %63 ]
  %hi.i.i.i.0.i386 = phi i32 [ 0, %56 ], [ %68, %63 ]
  %64 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !16
  %65 = load i32, ptr addrspace(1) %64, align 4, !dbg !16
  %66 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %65, i32 %61, i32 %hi.i.i.i.0.i386) #5, !dbg !16, !srcloc !17
  %67 = extractvalue { i32, i32 } %66, 0, !dbg !16
  %68 = extractvalue { i32, i32 } %66, 1, !dbg !16
  %69 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !16
  store i32 %67, ptr %69, align 4, !dbg !16
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !16
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !16
  br i1 %exitcond.not, label %70, label %63, !dbg !16, !llvm.loop !18

70:                                               ; preds = %63
  %71 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !16
  store i32 %68, ptr %71, align 4, !dbg !16
  %72 = and i32 %57, 31, !dbg !16
  %73 = sub nsw i32 6, %62, !dbg !16
  %74 = sext i32 %73 to i64, !dbg !16
  %75 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %74, !dbg !16
  %76 = load i32, ptr %75, align 4, !dbg !16
  %77 = sub nsw i32 5, %62, !dbg !16
  %78 = sext i32 %77 to i64, !dbg !16
  %79 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %78, !dbg !16
  %80 = load i32, ptr %79, align 4, !dbg !16
  %.not20.i = icmp eq i32 %72, 0, !dbg !16
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %81, !dbg !16

81:                                               ; preds = %70
  %82 = sub nsw i32 4, %62, !dbg !16
  %83 = sub nuw nsw i32 32, %72, !dbg !16
  %84 = shl i32 %76, %72, !dbg !16
  %85 = lshr i32 %80, %83, !dbg !16
  %86 = add i32 %85, %84, !dbg !16
  %87 = shl i32 %80, %72, !dbg !16
  %88 = sext i32 %82 to i64, !dbg !16
  %89 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %88, !dbg !16
  %90 = load i32, ptr %89, align 4, !dbg !16
  %91 = lshr i32 %90, %83, !dbg !16
  %92 = add i32 %91, %87, !dbg !16
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !16

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %81, %70
  %hi.i.i.i.1.i = phi i32 [ %86, %81 ], [ %76, %70 ], !dbg !16
  %lo.i.i.i.0.i = phi i32 [ %92, %81 ], [ %80, %70 ], !dbg !16
  %93 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !16
  %94 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !16
  %95 = shl i32 %lo.i.i.i.0.i, 2, !dbg !16
  %96 = lshr i32 %94, 31, !dbg !16
  %97 = add nuw nsw i32 %96, %93, !dbg !16
  %98 = sub nsw i32 0, %97, !dbg !16
  %.not2123.i = icmp slt i32 %16, 0, !dbg !16
  %spec.select.i = select i1 %.not2123.i, i32 %98, i32 %97, !dbg !16
  %99 = xor i32 %94, %16, !dbg !16
  %.lobit.i = ashr i32 %94, 31, !dbg !16
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %94, !dbg !16
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %95, !dbg !16
  %100 = zext i32 %hi.i.i.i.2.i to i64, !dbg !16
  %101 = shl nuw i64 %100, 32, !dbg !16
  %102 = zext i32 %lo.i.i.i.1.i to i64, !dbg !16
  %103 = or disjoint i64 %101, %102, !dbg !16
  %104 = sitofp i64 %103 to double, !dbg !16
  %105 = fmul double %104, 0x3BF921FB54442D19, !dbg !16
  %106 = fptrunc double %105 to float, !dbg !16
  %107 = fneg float %106, !dbg !16
  %.not2526.i = icmp slt i32 %99, 0, !dbg !16
  %r.i.i.i.0.i = select i1 %.not2526.i, float %107, float %106, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !16

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %3
  %i.i.1.i = phi i32 [ %.01.i, %3 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !16
  %t.i.i.1.i = phi float [ %.04.i, %3 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !16
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not28.i = icmp eq i32 %108, 0, !dbg !16
  %109 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !16
  %110 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !16
  %.011.i = select i1 %.not28.i, float %110, float %109, !dbg !16
  %111 = and i32 %i.i.1.i, 1, !dbg !16
  %.not29.i = icmp eq i32 %111, 0, !dbg !16
  %112 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !16
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not30.i = icmp eq i32 %113, 0, !dbg !16
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %112, float 0.000000e+00) #4, !dbg !16
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %112, float 0.000000e+00) #4, !dbg !16
  %.012.i = select i1 %.not30.i, float %115, float %114, !dbg !16
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !16

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not31.i = icmp eq i32 %116, 0, !dbg !16
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !16
  %118 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !16
  %.013.i = select i1 %.not31.i, float %118, float %117, !dbg !16
  br label %__internal_fmad.exit2.i.i.i, !dbg !16

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %119 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !16
  %120 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !16
  %121 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !16
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not32.i = icmp eq i32 %122, 0, !dbg !16
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %121, float %.011.i, float %120) #4, !dbg !16
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %121, float %.011.i, float %120) #4, !dbg !16
  %.010.i = select i1 %.not32.i, float %124, float %123, !dbg !16
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not33.i = icmp eq i32 %125, 0, !dbg !16
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %119) #4, !dbg !16
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %119) #4, !dbg !16
  %.09.i = select i1 %.not33.i, float %127, float %126, !dbg !16
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not34.i = icmp eq i32 %128, 0, !dbg !16
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %112) #4, !dbg !16
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %112) #4, !dbg !16
  %.05.i = select i1 %.not34.i, float %130, float %129, !dbg !16
  %131 = and i32 %i.i.1.i, 2, !dbg !16
  %.not35.i = icmp eq i32 %131, 0, !dbg !16
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !16

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not36.i = icmp eq i32 %132, 0, !dbg !16
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %.0.i = select i1 %.not36.i, float %134, float %133, !dbg !16
  br label %__nv_sinf.exit, !dbg !16

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !16
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !16
  %135 = fmul float %21, 0x3FE45F3060000000, !dbg !16
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i2 = icmp eq i32 %136, 0, !dbg !16
  %137 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %135) #4, !dbg !16
  %138 = tail call i32 @llvm.nvvm.f2i.rn(float %135) #4, !dbg !16
  %.01.i3 = select i1 %.not.i2, i32 %138, i32 %137, !dbg !16
  %139 = sitofp i32 %.01.i3 to float, !dbg !16
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not15.i4 = icmp eq i32 %140, 0, !dbg !16
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float 0xBFF921FB40000000, float %21) #4, !dbg !16
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %139, float 0xBFF921FB40000000, float %21) #4, !dbg !16
  %.02.i5 = select i1 %.not15.i4, float %142, float %141, !dbg !16
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not16.i6 = icmp eq i32 %143, 0, !dbg !16
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !16
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %139, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !16
  %.03.i7 = select i1 %.not16.i6, float %145, float %144, !dbg !16
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not17.i8 = icmp eq i32 %146, 0, !dbg !16
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !16
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %139, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !16
  %.04.i9 = select i1 %.not17.i8, float %148, float %147, !dbg !16
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not18.i10 = icmp eq i32 %149, 0, !dbg !16
  %150 = tail call float @llvm.nvvm.fabs.ftz.f(float %21) #4, !dbg !16
  %151 = tail call float @llvm.nvvm.fabs.f(float %21) #4, !dbg !16
  %.06.i11 = select i1 %.not18.i10, float %151, float %150, !dbg !16
  %152 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !16
  br i1 %152, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !16

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not19.i13 = icmp eq i32 %153, 0, !dbg !16
  %.07.i14 = select i1 %.not19.i13, float %151, float %150, !dbg !16
  %154 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !16
  br i1 %154, label %__nv_fmul_rn.exit.i.i.i52, label %158, !dbg !16

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not27.i53 = icmp eq i32 %155, 0, !dbg !16
  %156 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %21, float 0.000000e+00) #4, !dbg !16
  %157 = tail call float @llvm.nvvm.mul.rn.f(float %21, float 0.000000e+00) #4, !dbg !16
  %.08.i54 = select i1 %.not27.i53, float %157, float %156, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !16

158:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %159 = lshr i32 %17, 23, !dbg !16
  %160 = and i32 %159, 224, !dbg !16
  %161 = add nsw i32 %160, -128, !dbg !16
  %162 = shl i32 %17, 8, !dbg !16
  %163 = or i32 %162, -2147483648, !dbg !16
  %164 = lshr exact i32 %161, 5, !dbg !16
  br label %165, !dbg !16

165:                                              ; preds = %158, %165
  %indvars.iv417 = phi i64 [ 0, %158 ], [ %indvars.iv.next418, %165 ]
  %hi.i.i.i.0.i15388 = phi i32 [ 0, %158 ], [ %170, %165 ]
  %166 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv417, !dbg !16
  %167 = load i32, ptr addrspace(1) %166, align 4, !dbg !16
  %168 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %167, i32 %163, i32 %hi.i.i.i.0.i15388) #5, !dbg !16, !srcloc !17
  %169 = extractvalue { i32, i32 } %168, 0, !dbg !16
  %170 = extractvalue { i32, i32 } %168, 1, !dbg !16
  %171 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv417, !dbg !16
  store i32 %169, ptr %171, align 4, !dbg !16
  %indvars.iv.next418 = add nuw nsw i64 %indvars.iv417, 1, !dbg !16
  %exitcond419.not = icmp eq i64 %indvars.iv.next418, 6, !dbg !16
  br i1 %exitcond419.not, label %172, label %165, !dbg !16, !llvm.loop !20

172:                                              ; preds = %165
  %173 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !16
  store i32 %170, ptr %173, align 4, !dbg !16
  %174 = and i32 %159, 31, !dbg !16
  %175 = sub nsw i32 6, %164, !dbg !16
  %176 = sext i32 %175 to i64, !dbg !16
  %177 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %176, !dbg !16
  %178 = load i32, ptr %177, align 4, !dbg !16
  %179 = sub nsw i32 5, %164, !dbg !16
  %180 = sext i32 %179 to i64, !dbg !16
  %181 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %180, !dbg !16
  %182 = load i32, ptr %181, align 4, !dbg !16
  %.not20.i17 = icmp eq i32 %174, 0, !dbg !16
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %183, !dbg !16

183:                                              ; preds = %172
  %184 = sub nsw i32 4, %164, !dbg !16
  %185 = sub nuw nsw i32 32, %174, !dbg !16
  %186 = shl i32 %178, %174, !dbg !16
  %187 = lshr i32 %182, %185, !dbg !16
  %188 = add i32 %187, %186, !dbg !16
  %189 = shl i32 %182, %174, !dbg !16
  %190 = sext i32 %184 to i64, !dbg !16
  %191 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %190, !dbg !16
  %192 = load i32, ptr %191, align 4, !dbg !16
  %193 = lshr i32 %192, %185, !dbg !16
  %194 = add i32 %193, %189, !dbg !16
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !16

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %183, %172
  %hi.i.i.i.1.i19 = phi i32 [ %188, %183 ], [ %178, %172 ], !dbg !16
  %lo.i.i.i.0.i20 = phi i32 [ %194, %183 ], [ %182, %172 ], !dbg !16
  %195 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !16
  %196 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !16
  %197 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !16
  %198 = lshr i32 %196, 31, !dbg !16
  %199 = add nuw nsw i32 %198, %195, !dbg !16
  %200 = sub nsw i32 0, %199, !dbg !16
  %.not2123.i21 = icmp slt i32 %17, 0, !dbg !16
  %spec.select.i22 = select i1 %.not2123.i21, i32 %200, i32 %199, !dbg !16
  %201 = xor i32 %196, %17, !dbg !16
  %.lobit.i23 = ashr i32 %196, 31, !dbg !16
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %196, !dbg !16
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %197, !dbg !16
  %202 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !16
  %203 = shl nuw i64 %202, 32, !dbg !16
  %204 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !16
  %205 = or disjoint i64 %203, %204, !dbg !16
  %206 = sitofp i64 %205 to double, !dbg !16
  %207 = fmul double %206, 0x3BF921FB54442D19, !dbg !16
  %208 = fptrunc double %207 to float, !dbg !16
  %209 = fneg float %208, !dbg !16
  %.not2526.i27 = icmp slt i32 %201, 0, !dbg !16
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %209, float %208, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !16

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !16
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !16
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not28.i32 = icmp eq i32 %210, 0, !dbg !16
  %211 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !16
  %212 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !16
  %.011.i33 = select i1 %.not28.i32, float %212, float %211, !dbg !16
  %213 = and i32 %i.i.1.i30, 1, !dbg !16
  %.not29.i34 = icmp eq i32 %213, 0, !dbg !16
  %214 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !16
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not30.i35 = icmp eq i32 %215, 0, !dbg !16
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %214, float 0.000000e+00) #4, !dbg !16
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %214, float 0.000000e+00) #4, !dbg !16
  %.012.i36 = select i1 %.not30.i35, float %217, float %216, !dbg !16
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !16

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not31.i38 = icmp eq i32 %218, 0, !dbg !16
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !16
  %220 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !16
  %.013.i39 = select i1 %.not31.i38, float %220, float %219, !dbg !16
  br label %__internal_fmad.exit2.i.i.i40, !dbg !16

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %221 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !16
  %222 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !16
  %223 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !16
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not32.i41 = icmp eq i32 %224, 0, !dbg !16
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %223, float %.011.i33, float %222) #4, !dbg !16
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %223, float %.011.i33, float %222) #4, !dbg !16
  %.010.i42 = select i1 %.not32.i41, float %226, float %225, !dbg !16
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not33.i43 = icmp eq i32 %227, 0, !dbg !16
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %221) #4, !dbg !16
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %221) #4, !dbg !16
  %.09.i44 = select i1 %.not33.i43, float %229, float %228, !dbg !16
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not34.i45 = icmp eq i32 %230, 0, !dbg !16
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %214) #4, !dbg !16
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %214) #4, !dbg !16
  %.05.i46 = select i1 %.not34.i45, float %232, float %231, !dbg !16
  %233 = and i32 %i.i.1.i30, 2, !dbg !16
  %.not35.i47 = icmp eq i32 %233, 0, !dbg !16
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !16

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not36.i49 = icmp eq i32 %234, 0, !dbg !16
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %.0.i50 = select i1 %.not36.i49, float %236, float %235, !dbg !16
  br label %__nv_sinf.exit55, !dbg !16

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !16
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !16
  %237 = fmul float %22, 0x3FE45F3060000000, !dbg !16
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i57 = icmp eq i32 %238, 0, !dbg !16
  %239 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %237) #4, !dbg !16
  %240 = tail call i32 @llvm.nvvm.f2i.rn(float %237) #4, !dbg !16
  %.01.i58 = select i1 %.not.i57, i32 %240, i32 %239, !dbg !16
  %241 = sitofp i32 %.01.i58 to float, !dbg !16
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not15.i59 = icmp eq i32 %242, 0, !dbg !16
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %241, float 0xBFF921FB40000000, float %22) #4, !dbg !16
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %241, float 0xBFF921FB40000000, float %22) #4, !dbg !16
  %.02.i60 = select i1 %.not15.i59, float %244, float %243, !dbg !16
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not16.i61 = icmp eq i32 %245, 0, !dbg !16
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %241, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !16
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %241, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !16
  %.03.i62 = select i1 %.not16.i61, float %247, float %246, !dbg !16
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not17.i63 = icmp eq i32 %248, 0, !dbg !16
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %241, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !16
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %241, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !16
  %.04.i64 = select i1 %.not17.i63, float %250, float %249, !dbg !16
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not18.i65 = icmp eq i32 %251, 0, !dbg !16
  %252 = tail call float @llvm.nvvm.fabs.ftz.f(float %22) #4, !dbg !16
  %253 = tail call float @llvm.nvvm.fabs.f(float %22) #4, !dbg !16
  %.06.i66 = select i1 %.not18.i65, float %253, float %252, !dbg !16
  %254 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !16
  br i1 %254, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !16

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_sinf.exit55
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not19.i68 = icmp eq i32 %255, 0, !dbg !16
  %.07.i69 = select i1 %.not19.i68, float %253, float %252, !dbg !16
  %256 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !16
  br i1 %256, label %__nv_fmul_rn.exit.i.i.i107, label %260, !dbg !16

__nv_fmul_rn.exit.i.i.i107:                       ; preds = %__nv_isinff.exit.i.i.i67
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not27.i108 = icmp eq i32 %257, 0, !dbg !16
  %258 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %22, float 0.000000e+00) #4, !dbg !16
  %259 = tail call float @llvm.nvvm.mul.rn.f(float %22, float 0.000000e+00) #4, !dbg !16
  %.08.i109 = select i1 %.not27.i108, float %259, float %258, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !16

260:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %261 = lshr i32 %18, 23, !dbg !16
  %262 = and i32 %261, 224, !dbg !16
  %263 = add nsw i32 %262, -128, !dbg !16
  %264 = shl i32 %18, 8, !dbg !16
  %265 = or i32 %264, -2147483648, !dbg !16
  %266 = lshr exact i32 %263, 5, !dbg !16
  br label %267, !dbg !16

267:                                              ; preds = %260, %267
  %indvars.iv420 = phi i64 [ 0, %260 ], [ %indvars.iv.next421, %267 ]
  %hi.i.i.i.0.i70390 = phi i32 [ 0, %260 ], [ %272, %267 ]
  %268 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv420, !dbg !16
  %269 = load i32, ptr addrspace(1) %268, align 4, !dbg !16
  %270 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %269, i32 %265, i32 %hi.i.i.i.0.i70390) #5, !dbg !16, !srcloc !17
  %271 = extractvalue { i32, i32 } %270, 0, !dbg !16
  %272 = extractvalue { i32, i32 } %270, 1, !dbg !16
  %273 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv420, !dbg !16
  store i32 %271, ptr %273, align 4, !dbg !16
  %indvars.iv.next421 = add nuw nsw i64 %indvars.iv420, 1, !dbg !16
  %exitcond422.not = icmp eq i64 %indvars.iv.next421, 6, !dbg !16
  br i1 %exitcond422.not, label %274, label %267, !dbg !16, !llvm.loop !21

274:                                              ; preds = %267
  %275 = getelementptr inbounds i8, ptr %result.i.i.i.i56, i64 24, !dbg !16
  store i32 %272, ptr %275, align 4, !dbg !16
  %276 = and i32 %261, 31, !dbg !16
  %277 = sub nsw i32 6, %266, !dbg !16
  %278 = sext i32 %277 to i64, !dbg !16
  %279 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %278, !dbg !16
  %280 = load i32, ptr %279, align 4, !dbg !16
  %281 = sub nsw i32 5, %266, !dbg !16
  %282 = sext i32 %281 to i64, !dbg !16
  %283 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %282, !dbg !16
  %284 = load i32, ptr %283, align 4, !dbg !16
  %.not20.i72 = icmp eq i32 %276, 0, !dbg !16
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %285, !dbg !16

285:                                              ; preds = %274
  %286 = sub nsw i32 4, %266, !dbg !16
  %287 = sub nuw nsw i32 32, %276, !dbg !16
  %288 = shl i32 %280, %276, !dbg !16
  %289 = lshr i32 %284, %287, !dbg !16
  %290 = add i32 %289, %288, !dbg !16
  %291 = shl i32 %284, %276, !dbg !16
  %292 = sext i32 %286 to i64, !dbg !16
  %293 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %292, !dbg !16
  %294 = load i32, ptr %293, align 4, !dbg !16
  %295 = lshr i32 %294, %287, !dbg !16
  %296 = add i32 %295, %291, !dbg !16
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !16

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %285, %274
  %hi.i.i.i.1.i74 = phi i32 [ %290, %285 ], [ %280, %274 ], !dbg !16
  %lo.i.i.i.0.i75 = phi i32 [ %296, %285 ], [ %284, %274 ], !dbg !16
  %297 = lshr i32 %hi.i.i.i.1.i74, 30, !dbg !16
  %298 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i74, i32 %lo.i.i.i.0.i75, i32 2), !dbg !16
  %299 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !16
  %300 = lshr i32 %298, 31, !dbg !16
  %301 = add nuw nsw i32 %300, %297, !dbg !16
  %302 = sub nsw i32 0, %301, !dbg !16
  %.not2123.i76 = icmp slt i32 %18, 0, !dbg !16
  %spec.select.i77 = select i1 %.not2123.i76, i32 %302, i32 %301, !dbg !16
  %303 = xor i32 %298, %18, !dbg !16
  %.lobit.i78 = ashr i32 %298, 31, !dbg !16
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %298, !dbg !16
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %299, !dbg !16
  %304 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !16
  %305 = shl nuw i64 %304, 32, !dbg !16
  %306 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !16
  %307 = or disjoint i64 %305, %306, !dbg !16
  %308 = sitofp i64 %307 to double, !dbg !16
  %309 = fmul double %308, 0x3BF921FB54442D19, !dbg !16
  %310 = fptrunc double %309 to float, !dbg !16
  %311 = fneg float %310, !dbg !16
  %.not2526.i82 = icmp slt i32 %303, 0, !dbg !16
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %311, float %310, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !16

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i107, %__nv_sinf.exit55
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i107 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !16
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_sinf.exit55 ], [ %.08.i109, %__nv_fmul_rn.exit.i.i.i107 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !16
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not28.i87 = icmp eq i32 %312, 0, !dbg !16
  %313 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !16
  %314 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !16
  %.011.i88 = select i1 %.not28.i87, float %314, float %313, !dbg !16
  %315 = and i32 %i.i.1.i85, 1, !dbg !16
  %.not29.i89 = icmp eq i32 %315, 0, !dbg !16
  %316 = select i1 %.not29.i89, float %t.i.i.1.i86, float 1.000000e+00, !dbg !16
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not30.i90 = icmp eq i32 %317, 0, !dbg !16
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %316, float 0.000000e+00) #4, !dbg !16
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %316, float 0.000000e+00) #4, !dbg !16
  %.012.i91 = select i1 %.not30.i90, float %319, float %318, !dbg !16
  br i1 %.not29.i89, label %__internal_fmad.exit2.i.i.i95, label %__internal_fmad.exit1.i.i.i92, !dbg !16

__internal_fmad.exit1.i.i.i92:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not31.i93 = icmp eq i32 %320, 0, !dbg !16
  %321 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !16
  %322 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !16
  %.013.i94 = select i1 %.not31.i93, float %322, float %321, !dbg !16
  br label %__internal_fmad.exit2.i.i.i95, !dbg !16

__internal_fmad.exit2.i.i.i95:                    ; preds = %__internal_fmad.exit1.i.i.i92, %__internal_trig_reduction_kernel.exit.i.i84
  %323 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i92 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !16
  %324 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i92 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !16
  %325 = phi float [ %.013.i94, %__internal_fmad.exit1.i.i.i92 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !16
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not32.i96 = icmp eq i32 %326, 0, !dbg !16
  %327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %325, float %.011.i88, float %324) #4, !dbg !16
  %328 = tail call float @llvm.nvvm.fma.rn.f(float %325, float %.011.i88, float %324) #4, !dbg !16
  %.010.i97 = select i1 %.not32.i96, float %328, float %327, !dbg !16
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not33.i98 = icmp eq i32 %329, 0, !dbg !16
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i97, float %.011.i88, float %323) #4, !dbg !16
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i97, float %.011.i88, float %323) #4, !dbg !16
  %.09.i99 = select i1 %.not33.i98, float %331, float %330, !dbg !16
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not34.i100 = icmp eq i32 %332, 0, !dbg !16
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i99, float %.012.i91, float %316) #4, !dbg !16
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i99, float %.012.i91, float %316) #4, !dbg !16
  %.05.i101 = select i1 %.not34.i100, float %334, float %333, !dbg !16
  %335 = and i32 %i.i.1.i85, 2, !dbg !16
  %.not35.i102 = icmp eq i32 %335, 0, !dbg !16
  br i1 %.not35.i102, label %__nv_sinf.exit110, label %__internal_fmad.exit5.i.i.i103, !dbg !16

__internal_fmad.exit5.i.i.i103:                   ; preds = %__internal_fmad.exit2.i.i.i95
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not36.i104 = icmp eq i32 %336, 0, !dbg !16
  %337 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %338 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %.0.i105 = select i1 %.not36.i104, float %338, float %337, !dbg !16
  br label %__nv_sinf.exit110, !dbg !16

__nv_sinf.exit110:                                ; preds = %__internal_fmad.exit2.i.i.i95, %__internal_fmad.exit5.i.i.i103
  %z.i.i.0.i106 = phi float [ %.0.i105, %__internal_fmad.exit5.i.i.i103 ], [ %.05.i101, %__internal_fmad.exit2.i.i.i95 ], !dbg !16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !16
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !16
  %339 = fmul float %23, 0x3FE45F3060000000, !dbg !16
  %340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i112 = icmp eq i32 %340, 0, !dbg !16
  %341 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %339) #4, !dbg !16
  %342 = tail call i32 @llvm.nvvm.f2i.rn(float %339) #4, !dbg !16
  %.01.i113 = select i1 %.not.i112, i32 %342, i32 %341, !dbg !16
  %343 = sitofp i32 %.01.i113 to float, !dbg !16
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not15.i114 = icmp eq i32 %344, 0, !dbg !16
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %343, float 0xBFF921FB40000000, float %23) #4, !dbg !16
  %346 = tail call float @llvm.nvvm.fma.rn.f(float %343, float 0xBFF921FB40000000, float %23) #4, !dbg !16
  %.02.i115 = select i1 %.not15.i114, float %346, float %345, !dbg !16
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not16.i116 = icmp eq i32 %347, 0, !dbg !16
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %343, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !16
  %349 = tail call float @llvm.nvvm.fma.rn.f(float %343, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !16
  %.03.i117 = select i1 %.not16.i116, float %349, float %348, !dbg !16
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not17.i118 = icmp eq i32 %350, 0, !dbg !16
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %343, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !16
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %343, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !16
  %.04.i119 = select i1 %.not17.i118, float %352, float %351, !dbg !16
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not18.i120 = icmp eq i32 %353, 0, !dbg !16
  %354 = tail call float @llvm.nvvm.fabs.ftz.f(float %23) #4, !dbg !16
  %355 = tail call float @llvm.nvvm.fabs.f(float %23) #4, !dbg !16
  %.06.i121 = select i1 %.not18.i120, float %355, float %354, !dbg !16
  %356 = fcmp ult float %.06.i121, 1.056150e+05, !dbg !16
  br i1 %356, label %__internal_trig_reduction_kernel.exit.i.i139, label %__nv_isinff.exit.i.i.i122, !dbg !16

__nv_isinff.exit.i.i.i122:                        ; preds = %__nv_sinf.exit110
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not19.i123 = icmp eq i32 %357, 0, !dbg !16
  %.07.i124 = select i1 %.not19.i123, float %355, float %354, !dbg !16
  %358 = fcmp oeq float %.07.i124, 0x7FF0000000000000, !dbg !16
  br i1 %358, label %__nv_fmul_rn.exit.i.i.i162, label %362, !dbg !16

__nv_fmul_rn.exit.i.i.i162:                       ; preds = %__nv_isinff.exit.i.i.i122
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not27.i163 = icmp eq i32 %359, 0, !dbg !16
  %360 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %23, float 0.000000e+00) #4, !dbg !16
  %361 = tail call float @llvm.nvvm.mul.rn.f(float %23, float 0.000000e+00) #4, !dbg !16
  %.08.i164 = select i1 %.not27.i163, float %361, float %360, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !16

362:                                              ; preds = %__nv_isinff.exit.i.i.i122
  %363 = lshr i32 %19, 23, !dbg !16
  %364 = and i32 %363, 224, !dbg !16
  %365 = add nsw i32 %364, -128, !dbg !16
  %366 = shl i32 %19, 8, !dbg !16
  %367 = or i32 %366, -2147483648, !dbg !16
  %368 = lshr exact i32 %365, 5, !dbg !16
  br label %369, !dbg !16

369:                                              ; preds = %362, %369
  %indvars.iv423 = phi i64 [ 0, %362 ], [ %indvars.iv.next424, %369 ]
  %hi.i.i.i.0.i125392 = phi i32 [ 0, %362 ], [ %374, %369 ]
  %370 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv423, !dbg !16
  %371 = load i32, ptr addrspace(1) %370, align 4, !dbg !16
  %372 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %371, i32 %367, i32 %hi.i.i.i.0.i125392) #5, !dbg !16, !srcloc !17
  %373 = extractvalue { i32, i32 } %372, 0, !dbg !16
  %374 = extractvalue { i32, i32 } %372, 1, !dbg !16
  %375 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %indvars.iv423, !dbg !16
  store i32 %373, ptr %375, align 4, !dbg !16
  %indvars.iv.next424 = add nuw nsw i64 %indvars.iv423, 1, !dbg !16
  %exitcond425.not = icmp eq i64 %indvars.iv.next424, 6, !dbg !16
  br i1 %exitcond425.not, label %376, label %369, !dbg !16, !llvm.loop !22

376:                                              ; preds = %369
  %377 = getelementptr inbounds i8, ptr %result.i.i.i.i111, i64 24, !dbg !16
  store i32 %374, ptr %377, align 4, !dbg !16
  %378 = and i32 %363, 31, !dbg !16
  %379 = sub nsw i32 6, %368, !dbg !16
  %380 = sext i32 %379 to i64, !dbg !16
  %381 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %380, !dbg !16
  %382 = load i32, ptr %381, align 4, !dbg !16
  %383 = sub nsw i32 5, %368, !dbg !16
  %384 = sext i32 %383 to i64, !dbg !16
  %385 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %384, !dbg !16
  %386 = load i32, ptr %385, align 4, !dbg !16
  %.not20.i127 = icmp eq i32 %378, 0, !dbg !16
  br i1 %.not20.i127, label %__internal_trig_reduction_slowpath.exit.i.i.i128, label %387, !dbg !16

387:                                              ; preds = %376
  %388 = sub nsw i32 4, %368, !dbg !16
  %389 = sub nuw nsw i32 32, %378, !dbg !16
  %390 = shl i32 %382, %378, !dbg !16
  %391 = lshr i32 %386, %389, !dbg !16
  %392 = add i32 %391, %390, !dbg !16
  %393 = shl i32 %386, %378, !dbg !16
  %394 = sext i32 %388 to i64, !dbg !16
  %395 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %394, !dbg !16
  %396 = load i32, ptr %395, align 4, !dbg !16
  %397 = lshr i32 %396, %389, !dbg !16
  %398 = add i32 %397, %393, !dbg !16
  br label %__internal_trig_reduction_slowpath.exit.i.i.i128, !dbg !16

__internal_trig_reduction_slowpath.exit.i.i.i128: ; preds = %387, %376
  %hi.i.i.i.1.i129 = phi i32 [ %392, %387 ], [ %382, %376 ], !dbg !16
  %lo.i.i.i.0.i130 = phi i32 [ %398, %387 ], [ %386, %376 ], !dbg !16
  %399 = lshr i32 %hi.i.i.i.1.i129, 30, !dbg !16
  %400 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i129, i32 %lo.i.i.i.0.i130, i32 2), !dbg !16
  %401 = shl i32 %lo.i.i.i.0.i130, 2, !dbg !16
  %402 = lshr i32 %400, 31, !dbg !16
  %403 = add nuw nsw i32 %402, %399, !dbg !16
  %404 = sub nsw i32 0, %403, !dbg !16
  %.not2123.i131 = icmp slt i32 %19, 0, !dbg !16
  %spec.select.i132 = select i1 %.not2123.i131, i32 %404, i32 %403, !dbg !16
  %405 = xor i32 %400, %19, !dbg !16
  %.lobit.i133 = ashr i32 %400, 31, !dbg !16
  %hi.i.i.i.2.i134 = xor i32 %.lobit.i133, %400, !dbg !16
  %lo.i.i.i.1.i136 = xor i32 %.lobit.i133, %401, !dbg !16
  %406 = zext i32 %hi.i.i.i.2.i134 to i64, !dbg !16
  %407 = shl nuw i64 %406, 32, !dbg !16
  %408 = zext i32 %lo.i.i.i.1.i136 to i64, !dbg !16
  %409 = or disjoint i64 %407, %408, !dbg !16
  %410 = sitofp i64 %409 to double, !dbg !16
  %411 = fmul double %410, 0x3BF921FB54442D19, !dbg !16
  %412 = fptrunc double %411 to float, !dbg !16
  %413 = fneg float %412, !dbg !16
  %.not2526.i137 = icmp slt i32 %405, 0, !dbg !16
  %r.i.i.i.0.i138 = select i1 %.not2526.i137, float %413, float %412, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !16

__internal_trig_reduction_kernel.exit.i.i139:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i128, %__nv_fmul_rn.exit.i.i.i162, %__nv_sinf.exit110
  %i.i.1.i140 = phi i32 [ %.01.i113, %__nv_sinf.exit110 ], [ 0, %__nv_fmul_rn.exit.i.i.i162 ], [ %spec.select.i132, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !16
  %t.i.i.1.i141 = phi float [ %.04.i119, %__nv_sinf.exit110 ], [ %.08.i164, %__nv_fmul_rn.exit.i.i.i162 ], [ %r.i.i.i.0.i138, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !16
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not28.i142 = icmp eq i32 %414, 0, !dbg !16
  %415 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !16
  %416 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !16
  %.011.i143 = select i1 %.not28.i142, float %416, float %415, !dbg !16
  %417 = and i32 %i.i.1.i140, 1, !dbg !16
  %.not29.i144 = icmp eq i32 %417, 0, !dbg !16
  %418 = select i1 %.not29.i144, float %t.i.i.1.i141, float 1.000000e+00, !dbg !16
  %419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not30.i145 = icmp eq i32 %419, 0, !dbg !16
  %420 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i143, float %418, float 0.000000e+00) #4, !dbg !16
  %421 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i143, float %418, float 0.000000e+00) #4, !dbg !16
  %.012.i146 = select i1 %.not30.i145, float %421, float %420, !dbg !16
  br i1 %.not29.i144, label %__internal_fmad.exit2.i.i.i150, label %__internal_fmad.exit1.i.i.i147, !dbg !16

__internal_fmad.exit1.i.i.i147:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i139
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not31.i148 = icmp eq i32 %422, 0, !dbg !16
  %423 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !16
  %424 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !16
  %.013.i149 = select i1 %.not31.i148, float %424, float %423, !dbg !16
  br label %__internal_fmad.exit2.i.i.i150, !dbg !16

__internal_fmad.exit2.i.i.i150:                   ; preds = %__internal_fmad.exit1.i.i.i147, %__internal_trig_reduction_kernel.exit.i.i139
  %425 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i147 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !16
  %426 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i147 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !16
  %427 = phi float [ %.013.i149, %__internal_fmad.exit1.i.i.i147 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !16
  %428 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not32.i151 = icmp eq i32 %428, 0, !dbg !16
  %429 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %427, float %.011.i143, float %426) #4, !dbg !16
  %430 = tail call float @llvm.nvvm.fma.rn.f(float %427, float %.011.i143, float %426) #4, !dbg !16
  %.010.i152 = select i1 %.not32.i151, float %430, float %429, !dbg !16
  %431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not33.i153 = icmp eq i32 %431, 0, !dbg !16
  %432 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i152, float %.011.i143, float %425) #4, !dbg !16
  %433 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i152, float %.011.i143, float %425) #4, !dbg !16
  %.09.i154 = select i1 %.not33.i153, float %433, float %432, !dbg !16
  %434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not34.i155 = icmp eq i32 %434, 0, !dbg !16
  %435 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i154, float %.012.i146, float %418) #4, !dbg !16
  %436 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i154, float %.012.i146, float %418) #4, !dbg !16
  %.05.i156 = select i1 %.not34.i155, float %436, float %435, !dbg !16
  %437 = and i32 %i.i.1.i140, 2, !dbg !16
  %.not35.i157 = icmp eq i32 %437, 0, !dbg !16
  br i1 %.not35.i157, label %__nv_sinf.exit165, label %__internal_fmad.exit5.i.i.i158, !dbg !16

__internal_fmad.exit5.i.i.i158:                   ; preds = %__internal_fmad.exit2.i.i.i150
  %438 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not36.i159 = icmp eq i32 %438, 0, !dbg !16
  %439 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %440 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %.0.i160 = select i1 %.not36.i159, float %440, float %439, !dbg !16
  br label %__nv_sinf.exit165, !dbg !16

__nv_sinf.exit165:                                ; preds = %__internal_fmad.exit2.i.i.i150, %__internal_fmad.exit5.i.i.i158
  %z.i.i.0.i161 = phi float [ %.0.i160, %__internal_fmad.exit5.i.i.i158 ], [ %.05.i156, %__internal_fmad.exit2.i.i.i150 ], !dbg !16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !16
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !16
  %441 = fmul float %29, 0x3FE45F3060000000, !dbg !16
  %442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i167 = icmp eq i32 %442, 0, !dbg !16
  %443 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %441) #4, !dbg !16
  %444 = tail call i32 @llvm.nvvm.f2i.rn(float %441) #4, !dbg !16
  %.01.i168 = select i1 %.not.i167, i32 %444, i32 %443, !dbg !16
  %445 = sitofp i32 %.01.i168 to float, !dbg !16
  %446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not15.i169 = icmp eq i32 %446, 0, !dbg !16
  %447 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %445, float 0xBFF921FB40000000, float %29) #4, !dbg !16
  %448 = tail call float @llvm.nvvm.fma.rn.f(float %445, float 0xBFF921FB40000000, float %29) #4, !dbg !16
  %.02.i170 = select i1 %.not15.i169, float %448, float %447, !dbg !16
  %449 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not16.i171 = icmp eq i32 %449, 0, !dbg !16
  %450 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %445, float 0xBE74442D00000000, float %.02.i170) #4, !dbg !16
  %451 = tail call float @llvm.nvvm.fma.rn.f(float %445, float 0xBE74442D00000000, float %.02.i170) #4, !dbg !16
  %.03.i172 = select i1 %.not16.i171, float %451, float %450, !dbg !16
  %452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not17.i173 = icmp eq i32 %452, 0, !dbg !16
  %453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %445, float 0xBCF84698A0000000, float %.03.i172) #4, !dbg !16
  %454 = tail call float @llvm.nvvm.fma.rn.f(float %445, float 0xBCF84698A0000000, float %.03.i172) #4, !dbg !16
  %.04.i174 = select i1 %.not17.i173, float %454, float %453, !dbg !16
  %455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not18.i175 = icmp eq i32 %455, 0, !dbg !16
  %456 = tail call float @llvm.nvvm.fabs.ftz.f(float %29) #4, !dbg !16
  %457 = tail call float @llvm.nvvm.fabs.f(float %29) #4, !dbg !16
  %.06.i176 = select i1 %.not18.i175, float %457, float %456, !dbg !16
  %458 = fcmp ult float %.06.i176, 1.056150e+05, !dbg !16
  br i1 %458, label %__internal_trig_reduction_kernel.exit.i.i194, label %__nv_isinff.exit.i.i.i177, !dbg !16

__nv_isinff.exit.i.i.i177:                        ; preds = %__nv_sinf.exit165
  %459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not19.i178 = icmp eq i32 %459, 0, !dbg !16
  %.07.i179 = select i1 %.not19.i178, float %457, float %456, !dbg !16
  %460 = fcmp oeq float %.07.i179, 0x7FF0000000000000, !dbg !16
  br i1 %460, label %__nv_fmul_rn.exit.i.i.i217, label %464, !dbg !16

__nv_fmul_rn.exit.i.i.i217:                       ; preds = %__nv_isinff.exit.i.i.i177
  %461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not27.i218 = icmp eq i32 %461, 0, !dbg !16
  %462 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %29, float 0.000000e+00) #4, !dbg !16
  %463 = tail call float @llvm.nvvm.mul.rn.f(float %29, float 0.000000e+00) #4, !dbg !16
  %.08.i219 = select i1 %.not27.i218, float %463, float %462, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !16

464:                                              ; preds = %__nv_isinff.exit.i.i.i177
  %465 = lshr i32 %25, 23, !dbg !16
  %466 = and i32 %465, 224, !dbg !16
  %467 = add nsw i32 %466, -128, !dbg !16
  %468 = shl i32 %25, 8, !dbg !16
  %469 = or i32 %468, -2147483648, !dbg !16
  %470 = lshr exact i32 %467, 5, !dbg !16
  br label %471, !dbg !16

471:                                              ; preds = %464, %471
  %indvars.iv426 = phi i64 [ 0, %464 ], [ %indvars.iv.next427, %471 ]
  %hi.i.i.i.0.i180394 = phi i32 [ 0, %464 ], [ %476, %471 ]
  %472 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv426, !dbg !16
  %473 = load i32, ptr addrspace(1) %472, align 4, !dbg !16
  %474 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %473, i32 %469, i32 %hi.i.i.i.0.i180394) #5, !dbg !16, !srcloc !17
  %475 = extractvalue { i32, i32 } %474, 0, !dbg !16
  %476 = extractvalue { i32, i32 } %474, 1, !dbg !16
  %477 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %indvars.iv426, !dbg !16
  store i32 %475, ptr %477, align 4, !dbg !16
  %indvars.iv.next427 = add nuw nsw i64 %indvars.iv426, 1, !dbg !16
  %exitcond428.not = icmp eq i64 %indvars.iv.next427, 6, !dbg !16
  br i1 %exitcond428.not, label %478, label %471, !dbg !16, !llvm.loop !23

478:                                              ; preds = %471
  %479 = getelementptr inbounds i8, ptr %result.i.i.i.i166, i64 24, !dbg !16
  store i32 %476, ptr %479, align 4, !dbg !16
  %480 = and i32 %465, 31, !dbg !16
  %481 = sub nsw i32 6, %470, !dbg !16
  %482 = sext i32 %481 to i64, !dbg !16
  %483 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %482, !dbg !16
  %484 = load i32, ptr %483, align 4, !dbg !16
  %485 = sub nsw i32 5, %470, !dbg !16
  %486 = sext i32 %485 to i64, !dbg !16
  %487 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %486, !dbg !16
  %488 = load i32, ptr %487, align 4, !dbg !16
  %.not20.i182 = icmp eq i32 %480, 0, !dbg !16
  br i1 %.not20.i182, label %__internal_trig_reduction_slowpath.exit.i.i.i183, label %489, !dbg !16

489:                                              ; preds = %478
  %490 = sub nsw i32 4, %470, !dbg !16
  %491 = sub nuw nsw i32 32, %480, !dbg !16
  %492 = shl i32 %484, %480, !dbg !16
  %493 = lshr i32 %488, %491, !dbg !16
  %494 = add i32 %493, %492, !dbg !16
  %495 = shl i32 %488, %480, !dbg !16
  %496 = sext i32 %490 to i64, !dbg !16
  %497 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %496, !dbg !16
  %498 = load i32, ptr %497, align 4, !dbg !16
  %499 = lshr i32 %498, %491, !dbg !16
  %500 = add i32 %499, %495, !dbg !16
  br label %__internal_trig_reduction_slowpath.exit.i.i.i183, !dbg !16

__internal_trig_reduction_slowpath.exit.i.i.i183: ; preds = %489, %478
  %hi.i.i.i.1.i184 = phi i32 [ %494, %489 ], [ %484, %478 ], !dbg !16
  %lo.i.i.i.0.i185 = phi i32 [ %500, %489 ], [ %488, %478 ], !dbg !16
  %501 = lshr i32 %hi.i.i.i.1.i184, 30, !dbg !16
  %502 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i184, i32 %lo.i.i.i.0.i185, i32 2), !dbg !16
  %503 = shl i32 %lo.i.i.i.0.i185, 2, !dbg !16
  %504 = lshr i32 %502, 31, !dbg !16
  %505 = add nuw nsw i32 %504, %501, !dbg !16
  %506 = sub nsw i32 0, %505, !dbg !16
  %.not2123.i186 = icmp slt i32 %25, 0, !dbg !16
  %spec.select.i187 = select i1 %.not2123.i186, i32 %506, i32 %505, !dbg !16
  %507 = xor i32 %502, %25, !dbg !16
  %.lobit.i188 = ashr i32 %502, 31, !dbg !16
  %hi.i.i.i.2.i189 = xor i32 %.lobit.i188, %502, !dbg !16
  %lo.i.i.i.1.i191 = xor i32 %.lobit.i188, %503, !dbg !16
  %508 = zext i32 %hi.i.i.i.2.i189 to i64, !dbg !16
  %509 = shl nuw i64 %508, 32, !dbg !16
  %510 = zext i32 %lo.i.i.i.1.i191 to i64, !dbg !16
  %511 = or disjoint i64 %509, %510, !dbg !16
  %512 = sitofp i64 %511 to double, !dbg !16
  %513 = fmul double %512, 0x3BF921FB54442D19, !dbg !16
  %514 = fptrunc double %513 to float, !dbg !16
  %515 = fneg float %514, !dbg !16
  %.not2526.i192 = icmp slt i32 %507, 0, !dbg !16
  %r.i.i.i.0.i193 = select i1 %.not2526.i192, float %515, float %514, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !16

__internal_trig_reduction_kernel.exit.i.i194:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i183, %__nv_fmul_rn.exit.i.i.i217, %__nv_sinf.exit165
  %i.i.1.i195 = phi i32 [ %.01.i168, %__nv_sinf.exit165 ], [ 0, %__nv_fmul_rn.exit.i.i.i217 ], [ %spec.select.i187, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !16
  %t.i.i.1.i196 = phi float [ %.04.i174, %__nv_sinf.exit165 ], [ %.08.i219, %__nv_fmul_rn.exit.i.i.i217 ], [ %r.i.i.i.0.i193, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !16
  %516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not28.i197 = icmp eq i32 %516, 0, !dbg !16
  %517 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #4, !dbg !16
  %518 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #4, !dbg !16
  %.011.i198 = select i1 %.not28.i197, float %518, float %517, !dbg !16
  %519 = and i32 %i.i.1.i195, 1, !dbg !16
  %.not29.i199 = icmp eq i32 %519, 0, !dbg !16
  %520 = select i1 %.not29.i199, float %t.i.i.1.i196, float 1.000000e+00, !dbg !16
  %521 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not30.i200 = icmp eq i32 %521, 0, !dbg !16
  %522 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i198, float %520, float 0.000000e+00) #4, !dbg !16
  %523 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i198, float %520, float 0.000000e+00) #4, !dbg !16
  %.012.i201 = select i1 %.not30.i200, float %523, float %522, !dbg !16
  br i1 %.not29.i199, label %__internal_fmad.exit2.i.i.i205, label %__internal_fmad.exit1.i.i.i202, !dbg !16

__internal_fmad.exit1.i.i.i202:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i194
  %524 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not31.i203 = icmp eq i32 %524, 0, !dbg !16
  %525 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #4, !dbg !16
  %526 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #4, !dbg !16
  %.013.i204 = select i1 %.not31.i203, float %526, float %525, !dbg !16
  br label %__internal_fmad.exit2.i.i.i205, !dbg !16

__internal_fmad.exit2.i.i.i205:                   ; preds = %__internal_fmad.exit1.i.i.i202, %__internal_trig_reduction_kernel.exit.i.i194
  %527 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i202 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !16
  %528 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i202 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !16
  %529 = phi float [ %.013.i204, %__internal_fmad.exit1.i.i.i202 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !16
  %530 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not32.i206 = icmp eq i32 %530, 0, !dbg !16
  %531 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %529, float %.011.i198, float %528) #4, !dbg !16
  %532 = tail call float @llvm.nvvm.fma.rn.f(float %529, float %.011.i198, float %528) #4, !dbg !16
  %.010.i207 = select i1 %.not32.i206, float %532, float %531, !dbg !16
  %533 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not33.i208 = icmp eq i32 %533, 0, !dbg !16
  %534 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i207, float %.011.i198, float %527) #4, !dbg !16
  %535 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i207, float %.011.i198, float %527) #4, !dbg !16
  %.09.i209 = select i1 %.not33.i208, float %535, float %534, !dbg !16
  %536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not34.i210 = icmp eq i32 %536, 0, !dbg !16
  %537 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i209, float %.012.i201, float %520) #4, !dbg !16
  %538 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i209, float %.012.i201, float %520) #4, !dbg !16
  %.05.i211 = select i1 %.not34.i210, float %538, float %537, !dbg !16
  %539 = and i32 %i.i.1.i195, 2, !dbg !16
  %.not35.i212 = icmp eq i32 %539, 0, !dbg !16
  br i1 %.not35.i212, label %__nv_sinf.exit220, label %__internal_fmad.exit5.i.i.i213, !dbg !16

__internal_fmad.exit5.i.i.i213:                   ; preds = %__internal_fmad.exit2.i.i.i205
  %540 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not36.i214 = icmp eq i32 %540, 0, !dbg !16
  %541 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i211, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %542 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i211, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %.0.i215 = select i1 %.not36.i214, float %542, float %541, !dbg !16
  br label %__nv_sinf.exit220, !dbg !16

__nv_sinf.exit220:                                ; preds = %__internal_fmad.exit2.i.i.i205, %__internal_fmad.exit5.i.i.i213
  %z.i.i.0.i216 = phi float [ %.0.i215, %__internal_fmad.exit5.i.i.i213 ], [ %.05.i211, %__internal_fmad.exit2.i.i.i205 ], !dbg !16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !16
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i221), !dbg !16
  %543 = fmul float %30, 0x3FE45F3060000000, !dbg !16
  %544 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i222 = icmp eq i32 %544, 0, !dbg !16
  %545 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %543) #4, !dbg !16
  %546 = tail call i32 @llvm.nvvm.f2i.rn(float %543) #4, !dbg !16
  %.01.i223 = select i1 %.not.i222, i32 %546, i32 %545, !dbg !16
  %547 = sitofp i32 %.01.i223 to float, !dbg !16
  %548 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not15.i224 = icmp eq i32 %548, 0, !dbg !16
  %549 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %547, float 0xBFF921FB40000000, float %30) #4, !dbg !16
  %550 = tail call float @llvm.nvvm.fma.rn.f(float %547, float 0xBFF921FB40000000, float %30) #4, !dbg !16
  %.02.i225 = select i1 %.not15.i224, float %550, float %549, !dbg !16
  %551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not16.i226 = icmp eq i32 %551, 0, !dbg !16
  %552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %547, float 0xBE74442D00000000, float %.02.i225) #4, !dbg !16
  %553 = tail call float @llvm.nvvm.fma.rn.f(float %547, float 0xBE74442D00000000, float %.02.i225) #4, !dbg !16
  %.03.i227 = select i1 %.not16.i226, float %553, float %552, !dbg !16
  %554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not17.i228 = icmp eq i32 %554, 0, !dbg !16
  %555 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %547, float 0xBCF84698A0000000, float %.03.i227) #4, !dbg !16
  %556 = tail call float @llvm.nvvm.fma.rn.f(float %547, float 0xBCF84698A0000000, float %.03.i227) #4, !dbg !16
  %.04.i229 = select i1 %.not17.i228, float %556, float %555, !dbg !16
  %557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not18.i230 = icmp eq i32 %557, 0, !dbg !16
  %558 = tail call float @llvm.nvvm.fabs.ftz.f(float %30) #4, !dbg !16
  %559 = tail call float @llvm.nvvm.fabs.f(float %30) #4, !dbg !16
  %.06.i231 = select i1 %.not18.i230, float %559, float %558, !dbg !16
  %560 = fcmp ult float %.06.i231, 1.056150e+05, !dbg !16
  br i1 %560, label %__internal_trig_reduction_kernel.exit.i.i249, label %__nv_isinff.exit.i.i.i232, !dbg !16

__nv_isinff.exit.i.i.i232:                        ; preds = %__nv_sinf.exit220
  %561 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not19.i233 = icmp eq i32 %561, 0, !dbg !16
  %.07.i234 = select i1 %.not19.i233, float %559, float %558, !dbg !16
  %562 = fcmp oeq float %.07.i234, 0x7FF0000000000000, !dbg !16
  br i1 %562, label %__nv_fmul_rn.exit.i.i.i272, label %566, !dbg !16

__nv_fmul_rn.exit.i.i.i272:                       ; preds = %__nv_isinff.exit.i.i.i232
  %563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not27.i273 = icmp eq i32 %563, 0, !dbg !16
  %564 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %30, float 0.000000e+00) #4, !dbg !16
  %565 = tail call float @llvm.nvvm.mul.rn.f(float %30, float 0.000000e+00) #4, !dbg !16
  %.08.i274 = select i1 %.not27.i273, float %565, float %564, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i249, !dbg !16

566:                                              ; preds = %__nv_isinff.exit.i.i.i232
  %567 = lshr i32 %26, 23, !dbg !16
  %568 = and i32 %567, 224, !dbg !16
  %569 = add nsw i32 %568, -128, !dbg !16
  %570 = shl i32 %26, 8, !dbg !16
  %571 = or i32 %570, -2147483648, !dbg !16
  %572 = lshr exact i32 %569, 5, !dbg !16
  br label %573, !dbg !16

573:                                              ; preds = %566, %573
  %indvars.iv429 = phi i64 [ 0, %566 ], [ %indvars.iv.next430, %573 ]
  %hi.i.i.i.0.i235396 = phi i32 [ 0, %566 ], [ %578, %573 ]
  %574 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv429, !dbg !16
  %575 = load i32, ptr addrspace(1) %574, align 4, !dbg !16
  %576 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %575, i32 %571, i32 %hi.i.i.i.0.i235396) #5, !dbg !16, !srcloc !17
  %577 = extractvalue { i32, i32 } %576, 0, !dbg !16
  %578 = extractvalue { i32, i32 } %576, 1, !dbg !16
  %579 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %indvars.iv429, !dbg !16
  store i32 %577, ptr %579, align 4, !dbg !16
  %indvars.iv.next430 = add nuw nsw i64 %indvars.iv429, 1, !dbg !16
  %exitcond431.not = icmp eq i64 %indvars.iv.next430, 6, !dbg !16
  br i1 %exitcond431.not, label %580, label %573, !dbg !16, !llvm.loop !24

580:                                              ; preds = %573
  %581 = getelementptr inbounds i8, ptr %result.i.i.i.i221, i64 24, !dbg !16
  store i32 %578, ptr %581, align 4, !dbg !16
  %582 = and i32 %567, 31, !dbg !16
  %583 = sub nsw i32 6, %572, !dbg !16
  %584 = sext i32 %583 to i64, !dbg !16
  %585 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %584, !dbg !16
  %586 = load i32, ptr %585, align 4, !dbg !16
  %587 = sub nsw i32 5, %572, !dbg !16
  %588 = sext i32 %587 to i64, !dbg !16
  %589 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %588, !dbg !16
  %590 = load i32, ptr %589, align 4, !dbg !16
  %.not20.i237 = icmp eq i32 %582, 0, !dbg !16
  br i1 %.not20.i237, label %__internal_trig_reduction_slowpath.exit.i.i.i238, label %591, !dbg !16

591:                                              ; preds = %580
  %592 = sub nsw i32 4, %572, !dbg !16
  %593 = sub nuw nsw i32 32, %582, !dbg !16
  %594 = shl i32 %586, %582, !dbg !16
  %595 = lshr i32 %590, %593, !dbg !16
  %596 = add i32 %595, %594, !dbg !16
  %597 = shl i32 %590, %582, !dbg !16
  %598 = sext i32 %592 to i64, !dbg !16
  %599 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %598, !dbg !16
  %600 = load i32, ptr %599, align 4, !dbg !16
  %601 = lshr i32 %600, %593, !dbg !16
  %602 = add i32 %601, %597, !dbg !16
  br label %__internal_trig_reduction_slowpath.exit.i.i.i238, !dbg !16

__internal_trig_reduction_slowpath.exit.i.i.i238: ; preds = %591, %580
  %hi.i.i.i.1.i239 = phi i32 [ %596, %591 ], [ %586, %580 ], !dbg !16
  %lo.i.i.i.0.i240 = phi i32 [ %602, %591 ], [ %590, %580 ], !dbg !16
  %603 = lshr i32 %hi.i.i.i.1.i239, 30, !dbg !16
  %604 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i239, i32 %lo.i.i.i.0.i240, i32 2), !dbg !16
  %605 = shl i32 %lo.i.i.i.0.i240, 2, !dbg !16
  %606 = lshr i32 %604, 31, !dbg !16
  %607 = add nuw nsw i32 %606, %603, !dbg !16
  %608 = sub nsw i32 0, %607, !dbg !16
  %.not2123.i241 = icmp slt i32 %26, 0, !dbg !16
  %spec.select.i242 = select i1 %.not2123.i241, i32 %608, i32 %607, !dbg !16
  %609 = xor i32 %604, %26, !dbg !16
  %.lobit.i243 = ashr i32 %604, 31, !dbg !16
  %hi.i.i.i.2.i244 = xor i32 %.lobit.i243, %604, !dbg !16
  %lo.i.i.i.1.i246 = xor i32 %.lobit.i243, %605, !dbg !16
  %610 = zext i32 %hi.i.i.i.2.i244 to i64, !dbg !16
  %611 = shl nuw i64 %610, 32, !dbg !16
  %612 = zext i32 %lo.i.i.i.1.i246 to i64, !dbg !16
  %613 = or disjoint i64 %611, %612, !dbg !16
  %614 = sitofp i64 %613 to double, !dbg !16
  %615 = fmul double %614, 0x3BF921FB54442D19, !dbg !16
  %616 = fptrunc double %615 to float, !dbg !16
  %617 = fneg float %616, !dbg !16
  %.not2526.i247 = icmp slt i32 %609, 0, !dbg !16
  %r.i.i.i.0.i248 = select i1 %.not2526.i247, float %617, float %616, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i249, !dbg !16

__internal_trig_reduction_kernel.exit.i.i249:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i238, %__nv_fmul_rn.exit.i.i.i272, %__nv_sinf.exit220
  %i.i.1.i250 = phi i32 [ %.01.i223, %__nv_sinf.exit220 ], [ 0, %__nv_fmul_rn.exit.i.i.i272 ], [ %spec.select.i242, %__internal_trig_reduction_slowpath.exit.i.i.i238 ], !dbg !16
  %t.i.i.1.i251 = phi float [ %.04.i229, %__nv_sinf.exit220 ], [ %.08.i274, %__nv_fmul_rn.exit.i.i.i272 ], [ %r.i.i.i.0.i248, %__internal_trig_reduction_slowpath.exit.i.i.i238 ], !dbg !16
  %618 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not28.i252 = icmp eq i32 %618, 0, !dbg !16
  %619 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i251, float %t.i.i.1.i251) #4, !dbg !16
  %620 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i251, float %t.i.i.1.i251) #4, !dbg !16
  %.011.i253 = select i1 %.not28.i252, float %620, float %619, !dbg !16
  %621 = and i32 %i.i.1.i250, 1, !dbg !16
  %.not29.i254 = icmp eq i32 %621, 0, !dbg !16
  %622 = select i1 %.not29.i254, float %t.i.i.1.i251, float 1.000000e+00, !dbg !16
  %623 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not30.i255 = icmp eq i32 %623, 0, !dbg !16
  %624 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i253, float %622, float 0.000000e+00) #4, !dbg !16
  %625 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i253, float %622, float 0.000000e+00) #4, !dbg !16
  %.012.i256 = select i1 %.not30.i255, float %625, float %624, !dbg !16
  br i1 %.not29.i254, label %__internal_fmad.exit2.i.i.i260, label %__internal_fmad.exit1.i.i.i257, !dbg !16

__internal_fmad.exit1.i.i.i257:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i249
  %626 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not31.i258 = icmp eq i32 %626, 0, !dbg !16
  %627 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i253, float 0xBF56C0FDA0000000) #4, !dbg !16
  %628 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i253, float 0xBF56C0FDA0000000) #4, !dbg !16
  %.013.i259 = select i1 %.not31.i258, float %628, float %627, !dbg !16
  br label %__internal_fmad.exit2.i.i.i260, !dbg !16

__internal_fmad.exit2.i.i.i260:                   ; preds = %__internal_fmad.exit1.i.i.i257, %__internal_trig_reduction_kernel.exit.i.i249
  %629 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i257 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !16
  %630 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i257 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !16
  %631 = phi float [ %.013.i259, %__internal_fmad.exit1.i.i.i257 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !16
  %632 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not32.i261 = icmp eq i32 %632, 0, !dbg !16
  %633 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %631, float %.011.i253, float %630) #4, !dbg !16
  %634 = tail call float @llvm.nvvm.fma.rn.f(float %631, float %.011.i253, float %630) #4, !dbg !16
  %.010.i262 = select i1 %.not32.i261, float %634, float %633, !dbg !16
  %635 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not33.i263 = icmp eq i32 %635, 0, !dbg !16
  %636 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i262, float %.011.i253, float %629) #4, !dbg !16
  %637 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i262, float %.011.i253, float %629) #4, !dbg !16
  %.09.i264 = select i1 %.not33.i263, float %637, float %636, !dbg !16
  %638 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not34.i265 = icmp eq i32 %638, 0, !dbg !16
  %639 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i264, float %.012.i256, float %622) #4, !dbg !16
  %640 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i264, float %.012.i256, float %622) #4, !dbg !16
  %.05.i266 = select i1 %.not34.i265, float %640, float %639, !dbg !16
  %641 = and i32 %i.i.1.i250, 2, !dbg !16
  %.not35.i267 = icmp eq i32 %641, 0, !dbg !16
  br i1 %.not35.i267, label %__nv_sinf.exit275, label %__internal_fmad.exit5.i.i.i268, !dbg !16

__internal_fmad.exit5.i.i.i268:                   ; preds = %__internal_fmad.exit2.i.i.i260
  %642 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not36.i269 = icmp eq i32 %642, 0, !dbg !16
  %643 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i266, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %644 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i266, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %.0.i270 = select i1 %.not36.i269, float %644, float %643, !dbg !16
  br label %__nv_sinf.exit275, !dbg !16

__nv_sinf.exit275:                                ; preds = %__internal_fmad.exit2.i.i.i260, %__internal_fmad.exit5.i.i.i268
  %z.i.i.0.i271 = phi float [ %.0.i270, %__internal_fmad.exit5.i.i.i268 ], [ %.05.i266, %__internal_fmad.exit2.i.i.i260 ], !dbg !16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i221), !dbg !16
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i276), !dbg !16
  %645 = fmul float %31, 0x3FE45F3060000000, !dbg !16
  %646 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i277 = icmp eq i32 %646, 0, !dbg !16
  %647 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %645) #4, !dbg !16
  %648 = tail call i32 @llvm.nvvm.f2i.rn(float %645) #4, !dbg !16
  %.01.i278 = select i1 %.not.i277, i32 %648, i32 %647, !dbg !16
  %649 = sitofp i32 %.01.i278 to float, !dbg !16
  %650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not15.i279 = icmp eq i32 %650, 0, !dbg !16
  %651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %649, float 0xBFF921FB40000000, float %31) #4, !dbg !16
  %652 = tail call float @llvm.nvvm.fma.rn.f(float %649, float 0xBFF921FB40000000, float %31) #4, !dbg !16
  %.02.i280 = select i1 %.not15.i279, float %652, float %651, !dbg !16
  %653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not16.i281 = icmp eq i32 %653, 0, !dbg !16
  %654 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %649, float 0xBE74442D00000000, float %.02.i280) #4, !dbg !16
  %655 = tail call float @llvm.nvvm.fma.rn.f(float %649, float 0xBE74442D00000000, float %.02.i280) #4, !dbg !16
  %.03.i282 = select i1 %.not16.i281, float %655, float %654, !dbg !16
  %656 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not17.i283 = icmp eq i32 %656, 0, !dbg !16
  %657 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %649, float 0xBCF84698A0000000, float %.03.i282) #4, !dbg !16
  %658 = tail call float @llvm.nvvm.fma.rn.f(float %649, float 0xBCF84698A0000000, float %.03.i282) #4, !dbg !16
  %.04.i284 = select i1 %.not17.i283, float %658, float %657, !dbg !16
  %659 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not18.i285 = icmp eq i32 %659, 0, !dbg !16
  %660 = tail call float @llvm.nvvm.fabs.ftz.f(float %31) #4, !dbg !16
  %661 = tail call float @llvm.nvvm.fabs.f(float %31) #4, !dbg !16
  %.06.i286 = select i1 %.not18.i285, float %661, float %660, !dbg !16
  %662 = fcmp ult float %.06.i286, 1.056150e+05, !dbg !16
  br i1 %662, label %__internal_trig_reduction_kernel.exit.i.i304, label %__nv_isinff.exit.i.i.i287, !dbg !16

__nv_isinff.exit.i.i.i287:                        ; preds = %__nv_sinf.exit275
  %663 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not19.i288 = icmp eq i32 %663, 0, !dbg !16
  %.07.i289 = select i1 %.not19.i288, float %661, float %660, !dbg !16
  %664 = fcmp oeq float %.07.i289, 0x7FF0000000000000, !dbg !16
  br i1 %664, label %__nv_fmul_rn.exit.i.i.i327, label %668, !dbg !16

__nv_fmul_rn.exit.i.i.i327:                       ; preds = %__nv_isinff.exit.i.i.i287
  %665 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not27.i328 = icmp eq i32 %665, 0, !dbg !16
  %666 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %31, float 0.000000e+00) #4, !dbg !16
  %667 = tail call float @llvm.nvvm.mul.rn.f(float %31, float 0.000000e+00) #4, !dbg !16
  %.08.i329 = select i1 %.not27.i328, float %667, float %666, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i304, !dbg !16

668:                                              ; preds = %__nv_isinff.exit.i.i.i287
  %669 = lshr i32 %27, 23, !dbg !16
  %670 = and i32 %669, 224, !dbg !16
  %671 = add nsw i32 %670, -128, !dbg !16
  %672 = shl i32 %27, 8, !dbg !16
  %673 = or i32 %672, -2147483648, !dbg !16
  %674 = lshr exact i32 %671, 5, !dbg !16
  br label %675, !dbg !16

675:                                              ; preds = %668, %675
  %indvars.iv432 = phi i64 [ 0, %668 ], [ %indvars.iv.next433, %675 ]
  %hi.i.i.i.0.i290398 = phi i32 [ 0, %668 ], [ %680, %675 ]
  %676 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv432, !dbg !16
  %677 = load i32, ptr addrspace(1) %676, align 4, !dbg !16
  %678 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %677, i32 %673, i32 %hi.i.i.i.0.i290398) #5, !dbg !16, !srcloc !17
  %679 = extractvalue { i32, i32 } %678, 0, !dbg !16
  %680 = extractvalue { i32, i32 } %678, 1, !dbg !16
  %681 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %indvars.iv432, !dbg !16
  store i32 %679, ptr %681, align 4, !dbg !16
  %indvars.iv.next433 = add nuw nsw i64 %indvars.iv432, 1, !dbg !16
  %exitcond434.not = icmp eq i64 %indvars.iv.next433, 6, !dbg !16
  br i1 %exitcond434.not, label %682, label %675, !dbg !16, !llvm.loop !25

682:                                              ; preds = %675
  %683 = getelementptr inbounds i8, ptr %result.i.i.i.i276, i64 24, !dbg !16
  store i32 %680, ptr %683, align 4, !dbg !16
  %684 = and i32 %669, 31, !dbg !16
  %685 = sub nsw i32 6, %674, !dbg !16
  %686 = sext i32 %685 to i64, !dbg !16
  %687 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %686, !dbg !16
  %688 = load i32, ptr %687, align 4, !dbg !16
  %689 = sub nsw i32 5, %674, !dbg !16
  %690 = sext i32 %689 to i64, !dbg !16
  %691 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %690, !dbg !16
  %692 = load i32, ptr %691, align 4, !dbg !16
  %.not20.i292 = icmp eq i32 %684, 0, !dbg !16
  br i1 %.not20.i292, label %__internal_trig_reduction_slowpath.exit.i.i.i293, label %693, !dbg !16

693:                                              ; preds = %682
  %694 = sub nsw i32 4, %674, !dbg !16
  %695 = sub nuw nsw i32 32, %684, !dbg !16
  %696 = shl i32 %688, %684, !dbg !16
  %697 = lshr i32 %692, %695, !dbg !16
  %698 = add i32 %697, %696, !dbg !16
  %699 = shl i32 %692, %684, !dbg !16
  %700 = sext i32 %694 to i64, !dbg !16
  %701 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %700, !dbg !16
  %702 = load i32, ptr %701, align 4, !dbg !16
  %703 = lshr i32 %702, %695, !dbg !16
  %704 = add i32 %703, %699, !dbg !16
  br label %__internal_trig_reduction_slowpath.exit.i.i.i293, !dbg !16

__internal_trig_reduction_slowpath.exit.i.i.i293: ; preds = %693, %682
  %hi.i.i.i.1.i294 = phi i32 [ %698, %693 ], [ %688, %682 ], !dbg !16
  %lo.i.i.i.0.i295 = phi i32 [ %704, %693 ], [ %692, %682 ], !dbg !16
  %705 = lshr i32 %hi.i.i.i.1.i294, 30, !dbg !16
  %706 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i294, i32 %lo.i.i.i.0.i295, i32 2), !dbg !16
  %707 = shl i32 %lo.i.i.i.0.i295, 2, !dbg !16
  %708 = lshr i32 %706, 31, !dbg !16
  %709 = add nuw nsw i32 %708, %705, !dbg !16
  %710 = sub nsw i32 0, %709, !dbg !16
  %.not2123.i296 = icmp slt i32 %27, 0, !dbg !16
  %spec.select.i297 = select i1 %.not2123.i296, i32 %710, i32 %709, !dbg !16
  %711 = xor i32 %706, %27, !dbg !16
  %.lobit.i298 = ashr i32 %706, 31, !dbg !16
  %hi.i.i.i.2.i299 = xor i32 %.lobit.i298, %706, !dbg !16
  %lo.i.i.i.1.i301 = xor i32 %.lobit.i298, %707, !dbg !16
  %712 = zext i32 %hi.i.i.i.2.i299 to i64, !dbg !16
  %713 = shl nuw i64 %712, 32, !dbg !16
  %714 = zext i32 %lo.i.i.i.1.i301 to i64, !dbg !16
  %715 = or disjoint i64 %713, %714, !dbg !16
  %716 = sitofp i64 %715 to double, !dbg !16
  %717 = fmul double %716, 0x3BF921FB54442D19, !dbg !16
  %718 = fptrunc double %717 to float, !dbg !16
  %719 = fneg float %718, !dbg !16
  %.not2526.i302 = icmp slt i32 %711, 0, !dbg !16
  %r.i.i.i.0.i303 = select i1 %.not2526.i302, float %719, float %718, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i304, !dbg !16

__internal_trig_reduction_kernel.exit.i.i304:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i293, %__nv_fmul_rn.exit.i.i.i327, %__nv_sinf.exit275
  %i.i.1.i305 = phi i32 [ %.01.i278, %__nv_sinf.exit275 ], [ 0, %__nv_fmul_rn.exit.i.i.i327 ], [ %spec.select.i297, %__internal_trig_reduction_slowpath.exit.i.i.i293 ], !dbg !16
  %t.i.i.1.i306 = phi float [ %.04.i284, %__nv_sinf.exit275 ], [ %.08.i329, %__nv_fmul_rn.exit.i.i.i327 ], [ %r.i.i.i.0.i303, %__internal_trig_reduction_slowpath.exit.i.i.i293 ], !dbg !16
  %720 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not28.i307 = icmp eq i32 %720, 0, !dbg !16
  %721 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i306, float %t.i.i.1.i306) #4, !dbg !16
  %722 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i306, float %t.i.i.1.i306) #4, !dbg !16
  %.011.i308 = select i1 %.not28.i307, float %722, float %721, !dbg !16
  %723 = and i32 %i.i.1.i305, 1, !dbg !16
  %.not29.i309 = icmp eq i32 %723, 0, !dbg !16
  %724 = select i1 %.not29.i309, float %t.i.i.1.i306, float 1.000000e+00, !dbg !16
  %725 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not30.i310 = icmp eq i32 %725, 0, !dbg !16
  %726 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i308, float %724, float 0.000000e+00) #4, !dbg !16
  %727 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i308, float %724, float 0.000000e+00) #4, !dbg !16
  %.012.i311 = select i1 %.not30.i310, float %727, float %726, !dbg !16
  br i1 %.not29.i309, label %__internal_fmad.exit2.i.i.i315, label %__internal_fmad.exit1.i.i.i312, !dbg !16

__internal_fmad.exit1.i.i.i312:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i304
  %728 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not31.i313 = icmp eq i32 %728, 0, !dbg !16
  %729 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i308, float 0xBF56C0FDA0000000) #4, !dbg !16
  %730 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i308, float 0xBF56C0FDA0000000) #4, !dbg !16
  %.013.i314 = select i1 %.not31.i313, float %730, float %729, !dbg !16
  br label %__internal_fmad.exit2.i.i.i315, !dbg !16

__internal_fmad.exit2.i.i.i315:                   ; preds = %__internal_fmad.exit1.i.i.i312, %__internal_trig_reduction_kernel.exit.i.i304
  %731 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i312 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !16
  %732 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i312 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !16
  %733 = phi float [ %.013.i314, %__internal_fmad.exit1.i.i.i312 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !16
  %734 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not32.i316 = icmp eq i32 %734, 0, !dbg !16
  %735 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %733, float %.011.i308, float %732) #4, !dbg !16
  %736 = tail call float @llvm.nvvm.fma.rn.f(float %733, float %.011.i308, float %732) #4, !dbg !16
  %.010.i317 = select i1 %.not32.i316, float %736, float %735, !dbg !16
  %737 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not33.i318 = icmp eq i32 %737, 0, !dbg !16
  %738 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i317, float %.011.i308, float %731) #4, !dbg !16
  %739 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i317, float %.011.i308, float %731) #4, !dbg !16
  %.09.i319 = select i1 %.not33.i318, float %739, float %738, !dbg !16
  %740 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not34.i320 = icmp eq i32 %740, 0, !dbg !16
  %741 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i319, float %.012.i311, float %724) #4, !dbg !16
  %742 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i319, float %.012.i311, float %724) #4, !dbg !16
  %.05.i321 = select i1 %.not34.i320, float %742, float %741, !dbg !16
  %743 = and i32 %i.i.1.i305, 2, !dbg !16
  %.not35.i322 = icmp eq i32 %743, 0, !dbg !16
  br i1 %.not35.i322, label %__nv_sinf.exit330, label %__internal_fmad.exit5.i.i.i323, !dbg !16

__internal_fmad.exit5.i.i.i323:                   ; preds = %__internal_fmad.exit2.i.i.i315
  %744 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not36.i324 = icmp eq i32 %744, 0, !dbg !16
  %745 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i321, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %746 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i321, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %.0.i325 = select i1 %.not36.i324, float %746, float %745, !dbg !16
  br label %__nv_sinf.exit330, !dbg !16

__nv_sinf.exit330:                                ; preds = %__internal_fmad.exit2.i.i.i315, %__internal_fmad.exit5.i.i.i323
  %z.i.i.0.i326 = phi float [ %.0.i325, %__internal_fmad.exit5.i.i.i323 ], [ %.05.i321, %__internal_fmad.exit2.i.i.i315 ], !dbg !16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i276), !dbg !16
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i331), !dbg !16
  %747 = fmul float %32, 0x3FE45F3060000000, !dbg !16
  %748 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i332 = icmp eq i32 %748, 0, !dbg !16
  %749 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %747) #4, !dbg !16
  %750 = tail call i32 @llvm.nvvm.f2i.rn(float %747) #4, !dbg !16
  %.01.i333 = select i1 %.not.i332, i32 %750, i32 %749, !dbg !16
  %751 = sitofp i32 %.01.i333 to float, !dbg !16
  %752 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not15.i334 = icmp eq i32 %752, 0, !dbg !16
  %753 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %751, float 0xBFF921FB40000000, float %32) #4, !dbg !16
  %754 = tail call float @llvm.nvvm.fma.rn.f(float %751, float 0xBFF921FB40000000, float %32) #4, !dbg !16
  %.02.i335 = select i1 %.not15.i334, float %754, float %753, !dbg !16
  %755 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not16.i336 = icmp eq i32 %755, 0, !dbg !16
  %756 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %751, float 0xBE74442D00000000, float %.02.i335) #4, !dbg !16
  %757 = tail call float @llvm.nvvm.fma.rn.f(float %751, float 0xBE74442D00000000, float %.02.i335) #4, !dbg !16
  %.03.i337 = select i1 %.not16.i336, float %757, float %756, !dbg !16
  %758 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not17.i338 = icmp eq i32 %758, 0, !dbg !16
  %759 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %751, float 0xBCF84698A0000000, float %.03.i337) #4, !dbg !16
  %760 = tail call float @llvm.nvvm.fma.rn.f(float %751, float 0xBCF84698A0000000, float %.03.i337) #4, !dbg !16
  %.04.i339 = select i1 %.not17.i338, float %760, float %759, !dbg !16
  %761 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not18.i340 = icmp eq i32 %761, 0, !dbg !16
  %762 = tail call float @llvm.nvvm.fabs.ftz.f(float %32) #4, !dbg !16
  %763 = tail call float @llvm.nvvm.fabs.f(float %32) #4, !dbg !16
  %.06.i341 = select i1 %.not18.i340, float %763, float %762, !dbg !16
  %764 = fcmp ult float %.06.i341, 1.056150e+05, !dbg !16
  br i1 %764, label %__internal_trig_reduction_kernel.exit.i.i359, label %__nv_isinff.exit.i.i.i342, !dbg !16

__nv_isinff.exit.i.i.i342:                        ; preds = %__nv_sinf.exit330
  %765 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not19.i343 = icmp eq i32 %765, 0, !dbg !16
  %.07.i344 = select i1 %.not19.i343, float %763, float %762, !dbg !16
  %766 = fcmp oeq float %.07.i344, 0x7FF0000000000000, !dbg !16
  br i1 %766, label %__nv_fmul_rn.exit.i.i.i382, label %770, !dbg !16

__nv_fmul_rn.exit.i.i.i382:                       ; preds = %__nv_isinff.exit.i.i.i342
  %767 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not27.i383 = icmp eq i32 %767, 0, !dbg !16
  %768 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %32, float 0.000000e+00) #4, !dbg !16
  %769 = tail call float @llvm.nvvm.mul.rn.f(float %32, float 0.000000e+00) #4, !dbg !16
  %.08.i384 = select i1 %.not27.i383, float %769, float %768, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i359, !dbg !16

770:                                              ; preds = %__nv_isinff.exit.i.i.i342
  %771 = lshr i32 %28, 23, !dbg !16
  %772 = and i32 %771, 224, !dbg !16
  %773 = add nsw i32 %772, -128, !dbg !16
  %774 = shl i32 %28, 8, !dbg !16
  %775 = or i32 %774, -2147483648, !dbg !16
  %776 = lshr exact i32 %773, 5, !dbg !16
  br label %777, !dbg !16

777:                                              ; preds = %770, %777
  %indvars.iv435 = phi i64 [ 0, %770 ], [ %indvars.iv.next436, %777 ]
  %hi.i.i.i.0.i345400 = phi i32 [ 0, %770 ], [ %782, %777 ]
  %778 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv435, !dbg !16
  %779 = load i32, ptr addrspace(1) %778, align 4, !dbg !16
  %780 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %779, i32 %775, i32 %hi.i.i.i.0.i345400) #5, !dbg !16, !srcloc !17
  %781 = extractvalue { i32, i32 } %780, 0, !dbg !16
  %782 = extractvalue { i32, i32 } %780, 1, !dbg !16
  %783 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %indvars.iv435, !dbg !16
  store i32 %781, ptr %783, align 4, !dbg !16
  %indvars.iv.next436 = add nuw nsw i64 %indvars.iv435, 1, !dbg !16
  %exitcond437.not = icmp eq i64 %indvars.iv.next436, 6, !dbg !16
  br i1 %exitcond437.not, label %784, label %777, !dbg !16, !llvm.loop !26

784:                                              ; preds = %777
  %785 = getelementptr inbounds i8, ptr %result.i.i.i.i331, i64 24, !dbg !16
  store i32 %782, ptr %785, align 4, !dbg !16
  %786 = and i32 %771, 31, !dbg !16
  %787 = sub nsw i32 6, %776, !dbg !16
  %788 = sext i32 %787 to i64, !dbg !16
  %789 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %788, !dbg !16
  %790 = load i32, ptr %789, align 4, !dbg !16
  %791 = sub nsw i32 5, %776, !dbg !16
  %792 = sext i32 %791 to i64, !dbg !16
  %793 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %792, !dbg !16
  %794 = load i32, ptr %793, align 4, !dbg !16
  %.not20.i347 = icmp eq i32 %786, 0, !dbg !16
  br i1 %.not20.i347, label %__internal_trig_reduction_slowpath.exit.i.i.i348, label %795, !dbg !16

795:                                              ; preds = %784
  %796 = sub nsw i32 4, %776, !dbg !16
  %797 = sub nuw nsw i32 32, %786, !dbg !16
  %798 = shl i32 %790, %786, !dbg !16
  %799 = lshr i32 %794, %797, !dbg !16
  %800 = add i32 %799, %798, !dbg !16
  %801 = shl i32 %794, %786, !dbg !16
  %802 = sext i32 %796 to i64, !dbg !16
  %803 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %802, !dbg !16
  %804 = load i32, ptr %803, align 4, !dbg !16
  %805 = lshr i32 %804, %797, !dbg !16
  %806 = add i32 %805, %801, !dbg !16
  br label %__internal_trig_reduction_slowpath.exit.i.i.i348, !dbg !16

__internal_trig_reduction_slowpath.exit.i.i.i348: ; preds = %795, %784
  %hi.i.i.i.1.i349 = phi i32 [ %800, %795 ], [ %790, %784 ], !dbg !16
  %lo.i.i.i.0.i350 = phi i32 [ %806, %795 ], [ %794, %784 ], !dbg !16
  %807 = lshr i32 %hi.i.i.i.1.i349, 30, !dbg !16
  %808 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i349, i32 %lo.i.i.i.0.i350, i32 2), !dbg !16
  %809 = shl i32 %lo.i.i.i.0.i350, 2, !dbg !16
  %810 = lshr i32 %808, 31, !dbg !16
  %811 = add nuw nsw i32 %810, %807, !dbg !16
  %812 = sub nsw i32 0, %811, !dbg !16
  %.not2123.i351 = icmp slt i32 %28, 0, !dbg !16
  %spec.select.i352 = select i1 %.not2123.i351, i32 %812, i32 %811, !dbg !16
  %813 = xor i32 %808, %28, !dbg !16
  %.lobit.i353 = ashr i32 %808, 31, !dbg !16
  %hi.i.i.i.2.i354 = xor i32 %.lobit.i353, %808, !dbg !16
  %lo.i.i.i.1.i356 = xor i32 %.lobit.i353, %809, !dbg !16
  %814 = zext i32 %hi.i.i.i.2.i354 to i64, !dbg !16
  %815 = shl nuw i64 %814, 32, !dbg !16
  %816 = zext i32 %lo.i.i.i.1.i356 to i64, !dbg !16
  %817 = or disjoint i64 %815, %816, !dbg !16
  %818 = sitofp i64 %817 to double, !dbg !16
  %819 = fmul double %818, 0x3BF921FB54442D19, !dbg !16
  %820 = fptrunc double %819 to float, !dbg !16
  %821 = fneg float %820, !dbg !16
  %.not2526.i357 = icmp slt i32 %813, 0, !dbg !16
  %r.i.i.i.0.i358 = select i1 %.not2526.i357, float %821, float %820, !dbg !16
  br label %__internal_trig_reduction_kernel.exit.i.i359, !dbg !16

__internal_trig_reduction_kernel.exit.i.i359:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i348, %__nv_fmul_rn.exit.i.i.i382, %__nv_sinf.exit330
  %i.i.1.i360 = phi i32 [ %.01.i333, %__nv_sinf.exit330 ], [ 0, %__nv_fmul_rn.exit.i.i.i382 ], [ %spec.select.i352, %__internal_trig_reduction_slowpath.exit.i.i.i348 ], !dbg !16
  %t.i.i.1.i361 = phi float [ %.04.i339, %__nv_sinf.exit330 ], [ %.08.i384, %__nv_fmul_rn.exit.i.i.i382 ], [ %r.i.i.i.0.i358, %__internal_trig_reduction_slowpath.exit.i.i.i348 ], !dbg !16
  %822 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not28.i362 = icmp eq i32 %822, 0, !dbg !16
  %823 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i361, float %t.i.i.1.i361) #4, !dbg !16
  %824 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i361, float %t.i.i.1.i361) #4, !dbg !16
  %.011.i363 = select i1 %.not28.i362, float %824, float %823, !dbg !16
  %825 = and i32 %i.i.1.i360, 1, !dbg !16
  %.not29.i364 = icmp eq i32 %825, 0, !dbg !16
  %826 = select i1 %.not29.i364, float %t.i.i.1.i361, float 1.000000e+00, !dbg !16
  %827 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not30.i365 = icmp eq i32 %827, 0, !dbg !16
  %828 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i363, float %826, float 0.000000e+00) #4, !dbg !16
  %829 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i363, float %826, float 0.000000e+00) #4, !dbg !16
  %.012.i366 = select i1 %.not30.i365, float %829, float %828, !dbg !16
  br i1 %.not29.i364, label %__internal_fmad.exit2.i.i.i370, label %__internal_fmad.exit1.i.i.i367, !dbg !16

__internal_fmad.exit1.i.i.i367:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i359
  %830 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not31.i368 = icmp eq i32 %830, 0, !dbg !16
  %831 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i363, float 0xBF56C0FDA0000000) #4, !dbg !16
  %832 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i363, float 0xBF56C0FDA0000000) #4, !dbg !16
  %.013.i369 = select i1 %.not31.i368, float %832, float %831, !dbg !16
  br label %__internal_fmad.exit2.i.i.i370, !dbg !16

__internal_fmad.exit2.i.i.i370:                   ; preds = %__internal_fmad.exit1.i.i.i367, %__internal_trig_reduction_kernel.exit.i.i359
  %833 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i367 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !16
  %834 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i367 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !16
  %835 = phi float [ %.013.i369, %__internal_fmad.exit1.i.i.i367 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !16
  %836 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not32.i371 = icmp eq i32 %836, 0, !dbg !16
  %837 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %835, float %.011.i363, float %834) #4, !dbg !16
  %838 = tail call float @llvm.nvvm.fma.rn.f(float %835, float %.011.i363, float %834) #4, !dbg !16
  %.010.i372 = select i1 %.not32.i371, float %838, float %837, !dbg !16
  %839 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not33.i373 = icmp eq i32 %839, 0, !dbg !16
  %840 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i372, float %.011.i363, float %833) #4, !dbg !16
  %841 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i372, float %.011.i363, float %833) #4, !dbg !16
  %.09.i374 = select i1 %.not33.i373, float %841, float %840, !dbg !16
  %842 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not34.i375 = icmp eq i32 %842, 0, !dbg !16
  %843 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i374, float %.012.i366, float %826) #4, !dbg !16
  %844 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i374, float %.012.i366, float %826) #4, !dbg !16
  %.05.i376 = select i1 %.not34.i375, float %844, float %843, !dbg !16
  %845 = and i32 %i.i.1.i360, 2, !dbg !16
  %.not35.i377 = icmp eq i32 %845, 0, !dbg !16
  br i1 %.not35.i377, label %__nv_sinf.exit385, label %__internal_fmad.exit5.i.i.i378, !dbg !16

__internal_fmad.exit5.i.i.i378:                   ; preds = %__internal_fmad.exit2.i.i.i370
  %846 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not36.i379 = icmp eq i32 %846, 0, !dbg !16
  %847 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i376, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %848 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i376, float -1.000000e+00, float 0.000000e+00) #4, !dbg !16
  %.0.i380 = select i1 %.not36.i379, float %848, float %847, !dbg !16
  br label %__nv_sinf.exit385, !dbg !16

__nv_sinf.exit385:                                ; preds = %__internal_fmad.exit2.i.i.i370, %__internal_fmad.exit5.i.i.i378
  %z.i.i.0.i381 = phi float [ %.0.i380, %__internal_fmad.exit5.i.i.i378 ], [ %.05.i376, %__internal_fmad.exit2.i.i.i370 ], !dbg !16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i331), !dbg !16
  %849 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !27
  %850 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !27
  %851 = bitcast float %z.i.i.0.i to i32, !dbg !28
  %852 = bitcast float %z.i.i.0.i51 to i32, !dbg !28
  %853 = bitcast float %z.i.i.0.i106 to i32, !dbg !28
  %854 = bitcast float %z.i.i.0.i161 to i32, !dbg !28
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %851, i32 %852, i32 %853, i32 %854, ptr addrspace(1) %849, i1 true) #4, !dbg !28
  %855 = bitcast float %z.i.i.0.i216 to i32, !dbg !28
  %856 = bitcast float %z.i.i.0.i271 to i32, !dbg !28
  %857 = bitcast float %z.i.i.0.i326 to i32, !dbg !28
  %858 = bitcast float %z.i.i.0.i381 to i32, !dbg !28
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %855, i32 %856, i32 %857, i32 %858, ptr addrspace(1) %850, i1 true) #4, !dbg !28
  ret void, !dbg !29
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cds5bjxbkmgi6hqk7j5kl2xhtqsdrs47uihsygizmskye63cfoc3.py", directory: "inductor_cache/ds")
!4 = !{ptr @triton_poi_fused_sin_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_sin_11, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_sin_11", linkageName: "triton_poi_fused_sin_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 30, scope: !7)
!15 = !DILocation(line: 25, column: 35, scope: !7)
!16 = !DILocation(line: 26, column: 23, scope: !7)
!17 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.count", i32 1}
!20 = distinct !{!20, !19}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !19}
!23 = distinct !{!23, !19}
!24 = distinct !{!24, !19}
!25 = distinct !{!25, !19}
!26 = distinct !{!26, !19}
!27 = !DILocation(line: 27, column: 25, scope: !7)
!28 = !DILocation(line: 27, column: 36, scope: !7)
!29 = !DILocation(line: 27, column: 4, scope: !7)
