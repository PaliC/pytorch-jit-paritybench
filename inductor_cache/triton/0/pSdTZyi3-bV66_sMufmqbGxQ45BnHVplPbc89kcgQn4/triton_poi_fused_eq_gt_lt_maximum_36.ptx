//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_eq_gt_lt_maximum_36 // -- Begin function triton_poi_fused_eq_gt_lt_maximum_36
                                        // @triton_poi_fused_eq_gt_lt_maximum_36
.visible .entry triton_poi_fused_eq_gt_lt_maximum_36(
	.param .u64 .ptr .global .align 1 triton_poi_fused_eq_gt_lt_maximum_36_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_eq_gt_lt_maximum_36_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_eq_gt_lt_maximum_36_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_eq_gt_lt_maximum_36_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_eq_gt_lt_maximum_36_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_eq_gt_lt_maximum_36_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_eq_gt_lt_maximum_36_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused_eq_gt_lt_maximum_36_param_7,
	.param .u32 triton_poi_fused_eq_gt_lt_maximum_36_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<27>;
	.reg .b16 	%rs<25>;
	.reg .b32 	%r<27>;
	.reg .f32 	%f<20>;
	.reg .b64 	%rd<24>;
	.loc	1 19 0                          // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:19:0

// %bb.0:
	ld.param.u64 	%rd13, [triton_poi_fused_eq_gt_lt_maximum_36_param_0];
	ld.param.u64 	%rd2, [triton_poi_fused_eq_gt_lt_maximum_36_param_1];
$L__tmp0:
	.loc	1 21 28                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:21:33
	shl.b32 	%r11, %r1, 8;
	ld.param.u64 	%rd14, [triton_poi_fused_eq_gt_lt_maximum_36_param_2];
	ld.param.u64 	%rd15, [triton_poi_fused_eq_gt_lt_maximum_36_param_3];
	.loc	1 22 36                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:22:36
	mov.u32 	%r12, %tid.x;
	shl.b32 	%r13, %r12, 1;
	ld.param.u64 	%rd16, [triton_poi_fused_eq_gt_lt_maximum_36_param_4];
	and.b32  	%r14, %r13, 254;
	ld.param.u64 	%rd17, [triton_poi_fused_eq_gt_lt_maximum_36_param_5];
	.loc	1 22 23                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:22:23
	or.b32  	%r15, %r11, %r14;
	ld.param.u64 	%rd18, [triton_poi_fused_eq_gt_lt_maximum_36_param_6];
	.loc	1 23 21                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:23:21
	setp.lt.s32 	%p1, %r15, 1024;
	ld.param.u64 	%rd19, [triton_poi_fused_eq_gt_lt_maximum_36_param_7];
	.loc	1 25 19                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:25:19
	shr.s32 	%r17, %r15, 31;
	shr.u32 	%r18, %r17, 24;
	add.s32 	%r19, %r15, %r18;
	.loc	1 24 19                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:24:19
	and.b32  	%r20, %r19, -256;
	sub.s32 	%r21, %r15, %r20;
	.loc	1 27 40                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:27:40
	shl.b32 	%r22, %r19, 2;
	and.b32  	%r23, %r22, -1024;
	.loc	1 27 35                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:27:35
	add.s32 	%r24, %r23, %r21;
	.loc	1 27 30                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:27:30
	mul.wide.s32 	%rd20, %r24, 4;
	add.s64 	%rd1, %rd13, %rd20;
	.loc	1 27 45                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:27:45
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.pred 	%p2, -1;
	.loc	1 28 19                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:28:19
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p2 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 30 41                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:30:41
	add.s32 	%r25, %r24, 256;
	.loc	1 30 30                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:30:30
	mul.wide.s32 	%rd21, %r25, 4;
	add.s64 	%rd3, %rd13, %rd21;
	.loc	1 30 51                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:30:51
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.v2.b32 { %r5, %r6 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 31 30                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:31:30
	add.s64 	%rd4, %rd2, 4;
	.loc	1 31 19                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:31:19
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p2 ld.global.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 41                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:33:41
	add.s32 	%r26, %r24, 512;
	.loc	1 33 30                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:33:30
	mul.wide.s32 	%rd22, %r26, 4;
	add.s64 	%rd5, %rd13, %rd22;
	.loc	1 33 51                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:33:51
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r8, %r9 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r8;
	mov.b32 	%f2, %r9;
	.loc	1 34 31                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:34:31
	add.s64 	%rd6, %rd2, 8;
	.loc	1 34 20                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:34:20
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p2 ld.global.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r10;
	.loc	1 39 19                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:39:19
	add.f32 	%f4, %f1, %f3;
	add.f32 	%f5, %f2, %f3;
	.loc	1 46 25                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:46:25
	cvt.s64.s32 	%rd23, %r15;
	add.s64 	%rd7, %rd14, %rd23;
	.loc	1 47 25                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:47:25
	add.s64 	%rd8, %rd15, %rd23;
	.loc	1 48 25                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:48:25
	add.s64 	%rd9, %rd16, %rd23;
	.loc	1 49 25                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:49:25
	add.s64 	%rd10, %rd17, %rd23;
	.loc	1 30 51                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:30:51
	mov.b32 	%f6, %r5;
	mov.b32 	%f7, %r3;
	.loc	1 27 45                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:27:45
	mov.b32 	%f8, %r2;
	mov.b32 	%f9, %r6;
	.loc	1 31 19                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:31:19
	mov.b32 	%f10, %r7;
	mov.b32 	%f11, %r4;
	.loc	1 37 18                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:37:18
	add.f32 	%f12, %f7, %f11;
	add.f32 	%f13, %f6, %f10;
	.loc	1 36 18                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:36:18
	add.f32 	%f14, %f10, %f9;
	add.f32 	%f15, %f11, %f8;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p13, %f15, %f13;
	setp.gt.f32 	%p14, %f12, %f14;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p15, %f15, %f15;
	setp.nan.f32 	%p16, %f12, %f12;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f16, %f15, %f13, %p13;
	selp.f32 	%f17, %f15, %f16, %p15;
	selp.f32 	%f18, %f12, %f14, %p14;
	selp.f32 	%f19, %f12, %f18, %p16;
$L__tmp2:
	.loc	1 40 20                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:40:20
	setp.eq.f32 	%p17, %f17, %f4;
	setp.eq.f32 	%p18, %f19, %f5;
	.loc	1 41 19                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:41:19
	setp.gt.f32 	%p19, %f17, %f4;
	setp.gt.f32 	%p20, %f19, %f5;
	.loc	1 42 19                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:42:19
	setp.lt.f32 	%p21, %f17, %f4;
	setp.lt.f32 	%p22, %f19, %f5;
	.loc	1 43 20                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:43:20
	setp.eq.f32 	%p23, %f12, %f14;
	setp.eq.f32 	%p24, %f13, %f15;
	.loc	1 46 37                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:46:37
	selp.u16 	%rs7, 1, 0, %p17;
	selp.u16 	%rs8, 1, 0, %p18;
	shl.b16 	%rs9, %rs8, 8;
	or.b16  	%rs1, %rs7, %rs9;
	// begin inline asm
	@%p1 st.global.b16 [ %rd7 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 47 37                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:47:37
	selp.u16 	%rs10, 1, 0, %p19;
	selp.u16 	%rs11, 1, 0, %p20;
	shl.b16 	%rs12, %rs11, 8;
	or.b16  	%rs2, %rs10, %rs12;
	// begin inline asm
	@%p1 st.global.b16 [ %rd8 + 0 ], { %rs2 };
	// end inline asm
	.loc	1 48 37                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:48:37
	selp.u16 	%rs13, 1, 0, %p21;
	selp.u16 	%rs14, 1, 0, %p22;
	shl.b16 	%rs15, %rs14, 8;
	or.b16  	%rs3, %rs13, %rs15;
	// begin inline asm
	@%p1 st.global.b16 [ %rd9 + 0 ], { %rs3 };
	// end inline asm
	.loc	1 49 37                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:49:37
	selp.u16 	%rs16, 1, 0, %p24;
	selp.u16 	%rs17, 1, 0, %p23;
	shl.b16 	%rs18, %rs17, 8;
	or.b16  	%rs4, %rs16, %rs18;
	// begin inline asm
	@%p1 st.global.b16 [ %rd10 + 0 ], { %rs4 };
	// end inline asm
	.loc	1 50 25                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:50:25
	add.s64 	%rd11, %rd18, %rd23;
	.loc	1 50 37                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:50:37
	selp.u16 	%rs19, 1, 0, %p13;
	selp.u16 	%rs20, 1, 0, %p14;
	shl.b16 	%rs21, %rs20, 8;
	or.b16  	%rs5, %rs19, %rs21;
	// begin inline asm
	@%p1 st.global.b16 [ %rd11 + 0 ], { %rs5 };
	// end inline asm
	.loc	1 51 25                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:51:25
	add.s64 	%rd12, %rd19, %rd23;
	.loc	1 45 19                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:45:19
	setp.lt.f32 	%p25, %f12, %f14;
	setp.lt.f32 	%p26, %f15, %f13;
	.loc	1 51 37                         // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:51:37
	selp.u16 	%rs22, 1, 0, %p26;
	selp.u16 	%rs23, 1, 0, %p25;
	shl.b16 	%rs24, %rs23, 8;
	or.b16  	%rs6, %rs22, %rs24;
	// begin inline asm
	@%p1 st.global.b16 [ %rd12 + 0 ], { %rs6 };
	// end inline asm
	.loc	1 51 4                          // cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py:51:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 181                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xae DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 109
.b8 112
.b8 107
.b8 100
.b8 52
.b8 119
.b8 100
.b8 50
.b8 107
.b8 97
.b8 53
.b8 54
.b8 99
.b8 121
.b8 52
.b8 103
.b8 99
.b8 52
.b8 117
.b8 99
.b8 97
.b8 120
.b8 114
.b8 105
.b8 54
.b8 111
.b8 97
.b8 98
.b8 121
.b8 53
.b8 121
.b8 112
.b8 107
.b8 50
.b8 109
.b8 101
.b8 55
.b8 113
.b8 106
.b8 107
.b8 100
.b8 119
.b8 97
.b8 103
.b8 97
.b8 55
.b8 107
.b8 103
.b8 101
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x27 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 101
.b8 113
.b8 95
.b8 103
.b8 116
.b8 95
.b8 108
.b8 116
.b8 95
.b8 109
.b8 97
.b8 120
.b8 105
.b8 109
.b8 117
.b8 109
.b8 95
.b8 51
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8a:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9f:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
