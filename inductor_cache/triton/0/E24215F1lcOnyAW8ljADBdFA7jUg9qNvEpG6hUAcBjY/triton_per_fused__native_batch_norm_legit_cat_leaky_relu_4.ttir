#loc = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":19:0)
#loc1 = loc(unknown)
#loc11 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":37:57)
#loc18 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":44:59)
#loc41 = loc(callsite(#loc1 at #loc11))
#loc45 = loc(callsite(#loc1 at #loc18))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":19:0)) attributes {noinline = false} {
    %c131072_i32 = arith.constant 131072 : i32 loc(#loc1)
    %cst = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_0 = arith.constant 1.024000e+03 : f32 loc(#loc1)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<2.000000e-01> : tensor<1024xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1024xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc3)
    %2 = arith.remsi %0, %c64_i32 : i32 loc(#loc4)
    %3 = arith.divsi %0, %c64_i32 : i32 loc(#loc5)
    %4 = arith.muli %0, %c1024_i32 : i32 loc(#loc6)
    %5 = tt.splat %4 : i32 -> tensor<1024xi32> loc(#loc7)
    %6 = arith.addi %1, %5 : tensor<1024xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc8)
    %9 = tt.load %8 : tensor<1024x!tt.ptr<f32>> loc(#loc9)
    %10 = "tt.reduce"(%9) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc11)), %arg8: f32 loc(callsite(#loc1 at #loc11))):
      %42 = arith.addf %arg7, %arg8 : f32 loc(#loc47)
      tt.reduce.return %42 : f32 loc(#loc40)
    }) : (tensor<1024xf32>) -> f32 loc(#loc40)
    %11 = arith.addf %10, %cst_1 : f32 loc(#loc43)
    %12 = arith.divf %11, %cst_0 : f32 loc(#loc15)
    %13 = tt.splat %12 : f32 -> tensor<1xf32> loc(#loc15)
    %14 = tt.splat %12 : f32 -> tensor<1024xf32> loc(#loc16)
    %15 = arith.subf %9, %14 : tensor<1024xf32> loc(#loc16)
    %16 = arith.mulf %15, %15 : tensor<1024xf32> loc(#loc17)
    %17 = "tt.reduce"(%16) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc18)), %arg8: f32 loc(callsite(#loc1 at #loc18))):
      %42 = arith.addf %arg7, %arg8 : f32 loc(#loc48)
      tt.reduce.return %42 : f32 loc(#loc44)
    }) : (tensor<1024xf32>) -> f32 loc(#loc44)
    %18 = arith.addf %17, %cst_1 : f32 loc(#loc46)
    %19 = arith.divf %18, %cst_0 : f32 loc(#loc20)
    %20 = arith.addf %19, %cst : f32 loc(#loc21)
    %21 = tt.extern_elementwise %20 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc22)
    %22 = tt.splat %21 : f32 -> tensor<1xf32> loc(#loc22)
    %23 = tt.splat %21 : f32 -> tensor<1024xf32> loc(#loc23)
    %24 = arith.mulf %15, %23 : tensor<1024xf32> loc(#loc23)
    %25 = arith.cmpf ogt, %24, %cst_3 : tensor<1024xf32> loc(#loc24)
    %26 = arith.mulf %24, %cst_2 : tensor<1024xf32> loc(#loc25)
    %27 = arith.select %25, %24, %26 : tensor<1024xi1>, tensor<1024xf32> loc(#loc26)
    %28 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc27)
    %29 = tt.addptr %28, %6 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc27)
    tt.store %29, %27 : tensor<1024x!tt.ptr<f32>> loc(#loc28)
    %30 = arith.muli %2, %c1024_i32 : i32 loc(#loc29)
    %31 = tt.splat %30 : i32 -> tensor<1024xi32> loc(#loc30)
    %32 = arith.addi %1, %31 : tensor<1024xi32> loc(#loc30)
    %33 = arith.muli %3, %c131072_i32 : i32 loc(#loc31)
    %34 = tt.splat %33 : i32 -> tensor<1024xi32> loc(#loc32)
    %35 = arith.addi %32, %34 : tensor<1024xi32> loc(#loc32)
    %36 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc33)
    %37 = tt.addptr %36, %35 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc33)
    tt.store %37, %27 : tensor<1024x!tt.ptr<f32>> loc(#loc34)
    %38 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc35)
    %39 = tt.splat %38 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc35)
    tt.store %39, %22 : tensor<1x!tt.ptr<f32>> loc(#loc36)
    %40 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc37)
    %41 = tt.splat %40 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc37)
    tt.store %41, %13 : tensor<1x!tt.ptr<f32>> loc(#loc38)
    tt.return loc(#loc39)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":24:28)
#loc3 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":27:26)
#loc4 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":32:19)
#loc5 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":33:19)
#loc6 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":34:40)
#loc7 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":34:35)
#loc8 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":34:30)
#loc9 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":34:45)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc14 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":37:44)
#loc15 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":40:18)
#loc16 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":41:18)
#loc17 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":42:19)
#loc19 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":44:45)
#loc20 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":47:20)
#loc21 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":49:20)
#loc22 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":50:28)
#loc23 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":51:20)
#loc24 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":53:20)
#loc25 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":55:20)
#loc26 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":56:35)
#loc27 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":57:25)
#loc28 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":57:47)
#loc29 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":58:35)
#loc30 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":58:30)
#loc31 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":58:47)
#loc32 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":58:40)
#loc33 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":58:25)
#loc34 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":58:59)
#loc35 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":59:25)
#loc36 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":59:37)
#loc37 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":60:25)
#loc38 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":60:36)
#loc39 = loc("inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py":60:4)
#loc40 = loc(callsite(#loc10 at #loc11))
#loc42 = loc(callsite(#loc12 at #loc10))
#loc43 = loc(callsite(#loc13 at #loc14))
#loc44 = loc(callsite(#loc10 at #loc18))
#loc46 = loc(callsite(#loc13 at #loc19))
#loc47 = loc(callsite(#loc42 at #loc11))
#loc48 = loc(callsite(#loc42 at #loc18))
