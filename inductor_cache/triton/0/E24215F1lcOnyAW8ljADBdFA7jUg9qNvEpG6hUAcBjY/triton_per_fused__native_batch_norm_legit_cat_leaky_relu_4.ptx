//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4 // -- Begin function triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4
.visible .entry triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4_param_4,
	.param .u32 triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4_param_5,
	.param .u32 triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<85>;
	.reg .f32 	%f<70>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd6, [triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4_param_0];
	ld.param.u64 	%rd7, [triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4_param_1];
$L__tmp0:
	.loc	1 24 28                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd8, [triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4_param_2];
	.loc	1 27 26                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:27:26
	mov.u32 	%r34, %tid.x;
	and.b32  	%r35, %r34, 31;
	ld.param.u64 	%rd9, [triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4_param_3];
	ld.param.u64 	%rd10, [triton_per_fused__native_batch_norm_legit_cat_leaky_relu_4_param_4];
	shl.b32 	%r36, %r34, 2;
	and.b32  	%r37, %r36, 1020;
	.loc	1 34 40                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:34:40
	shl.b32 	%r38, %r1, 10;
	.loc	1 34 35                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:34:35
	or.b32  	%r39, %r38, %r37;
	.loc	1 34 30                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:34:30
	mul.wide.s32 	%rd11, %r39, 4;
	add.s64 	%rd1, %rd6, %rd11;
	mov.pred 	%p1, -1;
	.loc	1 34 45                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:34:45
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5, %f1, %f2;
	add.f32 	%f6, %f5, %f3;
	add.f32 	%f7, %f6, %f4;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f7;
	shfl.sync.bfly.b32	%r41, %r40, 16, 31, -1;
	mov.b32 	%f8, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f7, %f8;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f9;
	shfl.sync.bfly.b32	%r43, %r42, 8, 31, -1;
	mov.b32 	%f10, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f9, %f10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f11;
	shfl.sync.bfly.b32	%r45, %r44, 4, 31, -1;
	mov.b32 	%f12, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f11, %f12;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f13;
	shfl.sync.bfly.b32	%r47, %r46, 2, 31, -1;
	mov.b32 	%f14, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f15;
	shfl.sync.bfly.b32	%r49, %r48, 1, 31, -1;
	mov.b32 	%f16, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p2, %r35, 0;
	shr.u32 	%r50, %r34, 3;
	and.b32  	%r51, %r50, 28;
	mov.u32 	%r52, global_smem;
	add.s32 	%r6, %r52, %r51;
	mov.b32 	%r7, %f17;
	// begin inline asm
	@%p2 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p3, %r34, 8;
	add.s32 	%r9, %r52, %r36;
	// begin inline asm
	@%p3 ld.shared.b32 %r8, [ %r9 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r8;
	shfl.sync.bfly.b32	%r53, %r8, 4, 31, -1;
	mov.b32 	%f19, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f20;
	shfl.sync.bfly.b32	%r55, %r54, 2, 31, -1;
	mov.b32 	%f21, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f22;
	shfl.sync.bfly.b32	%r57, %r56, 1, 31, -1;
	mov.b32 	%f23, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r58, %r34, 7;
	setp.eq.s32 	%p12, %r58, 0;
	and.pred  	%p4, %p3, %p12;
	mov.b32 	%r11, %f24;
	// begin inline asm
	@%p4 st.shared.b32 [ %r9 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f25, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f26, %f25, 0f00000000;
$L__tmp3:
	.loc	1 40 18                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:40:18
	mov.b32 	%r13, %f26;
	mov.b32 	%r14, 1149239296;
	// begin inline asm
	div.full.f32 %r33, %r13, %r14;
	// end inline asm
	mov.b32 	%f27, %r33;
	.loc	1 41 18                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:41:18
	sub.f32 	%f28, %f1, %f27;
	sub.f32 	%f29, %f2, %f27;
	sub.f32 	%f30, %f3, %f27;
	sub.f32 	%f31, %f4, %f27;
	.loc	1 42 19                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:42:19
	mul.f32 	%f32, %f29, %f29;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f33, %f28, %f28, %f32;
	fma.rn.f32 	%f34, %f30, %f30, %f33;
	fma.rn.f32 	%f35, %f31, %f31, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f35;
	shfl.sync.bfly.b32	%r60, %r59, 16, 31, -1;
	mov.b32 	%f36, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f37;
	shfl.sync.bfly.b32	%r62, %r61, 8, 31, -1;
	mov.b32 	%f38, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f39;
	shfl.sync.bfly.b32	%r64, %r63, 4, 31, -1;
	mov.b32 	%f40, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f41;
	shfl.sync.bfly.b32	%r66, %r65, 2, 31, -1;
	mov.b32 	%f42, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f43;
	shfl.sync.bfly.b32	%r68, %r67, 1, 31, -1;
	mov.b32 	%f44, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r16, %f45;
	// begin inline asm
	@%p2 st.shared.b32 [ %r6 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p3 ld.shared.b32 %r17, [ %r9 + 0 ];
	// end inline asm
	mov.b32 	%f46, %r17;
	shfl.sync.bfly.b32	%r69, %r17, 4, 31, -1;
	mov.b32 	%f47, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f48;
	shfl.sync.bfly.b32	%r71, %r70, 2, 31, -1;
	mov.b32 	%f49, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f50;
	shfl.sync.bfly.b32	%r73, %r72, 1, 31, -1;
	mov.b32 	%f51, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r20, %f52;
	// begin inline asm
	@%p4 st.shared.b32 [ %r9 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f53, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f54, %f53, 0f00000000;
$L__tmp6:
	.loc	1 47 20                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:47:20
	mov.b32 	%r22, %f54;
	// begin inline asm
	div.full.f32 %r21, %r22, %r14;
	// end inline asm
	mov.b32 	%f55, %r21;
	.loc	1 49 20                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:49:20
	add.f32 	%f56, %f55, 0f3727C5AC;
	.loc	1 50 28                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:50:28
	rsqrt.approx.ftz.f32 	%f57, %f56;
	.loc	1 33 19                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:33:19
	shr.s32 	%r74, %r1, 31;
	shr.u32 	%r75, %r74, 26;
	add.s32 	%r76, %r1, %r75;
	.loc	1 32 19                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:32:19
	and.b32  	%r77, %r76, 4194240;
	sub.s32 	%r78, %r1, %r77;
	.loc	1 51 20                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:51:20
	mul.f32 	%f58, %f28, %f57;
	mul.f32 	%f59, %f29, %f57;
	mul.f32 	%f60, %f30, %f57;
	mul.f32 	%f61, %f31, %f57;
	.loc	1 53 20                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:53:20
	setp.gt.f32 	%p13, %f58, 0f00000000;
	setp.gt.f32 	%p14, %f59, 0f00000000;
	setp.gt.f32 	%p15, %f60, 0f00000000;
	setp.gt.f32 	%p16, %f61, 0f00000000;
	.loc	1 55 20                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:55:20
	mul.f32 	%f62, %f58, 0f3E4CCCCD;
	mul.f32 	%f63, %f59, 0f3E4CCCCD;
	mul.f32 	%f64, %f60, 0f3E4CCCCD;
	mul.f32 	%f65, %f61, 0f3E4CCCCD;
	.loc	1 56 35                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:56:35
	selp.f32 	%f66, %f58, %f62, %p13;
	selp.f32 	%f67, %f59, %f63, %p14;
	selp.f32 	%f68, %f60, %f64, %p15;
	selp.f32 	%f69, %f61, %f65, %p16;
	.loc	1 57 25                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:57:25
	add.s64 	%rd2, %rd8, %rd11;
	.loc	1 57 47                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:57:47
	mov.b32 	%r24, %f66;
	mov.b32 	%r25, %f67;
	mov.b32 	%r26, %f68;
	mov.b32 	%r27, %f69;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r24, %r25, %r26, %r27 };
	// end inline asm
	.loc	1 58 35                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:58:35
	shl.b32 	%r79, %r78, 10;
	.loc	1 58 30                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:58:30
	or.b32  	%r80, %r79, %r37;
	.loc	1 58 47                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:58:47
	shl.b32 	%r81, %r76, 11;
	and.b32  	%r82, %r81, -131072;
	.loc	1 58 40                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:58:40
	add.s32 	%r83, %r80, %r82;
	.loc	1 58 25                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:58:25
	mul.wide.s32 	%rd12, %r83, 4;
	add.s64 	%rd3, %rd9, %rd12;
	.loc	1 58 59                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:58:59
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd3 + 0 ], { %r24, %r25, %r26, %r27 };
	// end inline asm
	.loc	1 59 25                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:59:25
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd4, %rd10, %rd13;
	.loc	1 59 37                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:59:37
	and.b32  	%r84, %r34, 255;
	setp.eq.s32 	%p10, %r84, 0;
	mov.b32 	%r32, %f57;
	// begin inline asm
	@%p10 st.global.b32 [ %rd4 + 0 ], { %r32 };
	// end inline asm
	.loc	1 60 25                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:60:25
	add.s64 	%rd5, %rd7, %rd13;
	.loc	1 60 36                         // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:60:36
	// begin inline asm
	@%p10 st.global.b32 [ %rd5 + 0 ], { %r33 };
	// end inline asm
	.loc	1 60 4                          // cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py:60:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/n4/cn4nw3ck23v6fbnfmflynkdu34gp7k3zohsso6wl5irg3ryzlui3.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 275                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x10c DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 52
.b8 110
.b8 119
.b8 51
.b8 99
.b8 107
.b8 50
.b8 51
.b8 118
.b8 54
.b8 102
.b8 98
.b8 110
.b8 102
.b8 109
.b8 102
.b8 108
.b8 121
.b8 110
.b8 107
.b8 100
.b8 117
.b8 51
.b8 52
.b8 103
.b8 112
.b8 55
.b8 107
.b8 51
.b8 122
.b8 111
.b8 104
.b8 115
.b8 115
.b8 111
.b8 54
.b8 119
.b8 108
.b8 53
.b8 105
.b8 114
.b8 103
.b8 51
.b8 114
.b8 121
.b8 122
.b8 108
.b8 117
.b8 105
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 108
.b8 101
.b8 97
.b8 107
.b8 121
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa0:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xfd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
