; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_avg_pool2d_5(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = sdiv i32 %8, 4, !dbg !14
  %10 = sdiv i32 %8, 16, !dbg !15
  %11 = mul i32 %10, 36, !dbg !16
  %12 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !17
  %13 = insertelement <2 x i32> %12, i32 %9, i64 1, !dbg !17
  %14 = srem <2 x i32> %13, splat (i32 4), !dbg !17
  %15 = extractelement <2 x i32> %14, i64 0, !dbg !17
  %16 = extractelement <2 x i32> %14, i64 1, !dbg !18
  %17 = icmp sgt i32 %16, 0, !dbg !19
  %18 = shl nsw <2 x i32> %14, splat (i32 1), !dbg !20
  %19 = shl nsw i32 %15, 1, !dbg !20
  %20 = icmp sgt i32 %15, 0, !dbg !21
  %21 = and i1 %20, %17, !dbg !22
  %22 = mul nsw i32 %16, 12, !dbg !23
  %23 = add i32 %11, %19, !dbg !24
  %24 = add i32 %23, -7, !dbg !25
  %25 = add i32 %24, %22, !dbg !26
  %26 = sext i32 %25 to i64, !dbg !27
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !27
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %21, i32 0, i1 %21) #1, !dbg !28
  %29 = bitcast i32 %28 to float, !dbg !28
  %30 = icmp ult i32 %15, 3, !dbg !29
  %31 = and i1 %30, %17, !dbg !30
  %32 = add i32 %23, -6, !dbg !31
  %33 = add i32 %32, %22, !dbg !32
  %34 = sext i32 %33 to i64, !dbg !33
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !33
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %31, i32 0, i1 %31) #1, !dbg !34
  %37 = bitcast i32 %36 to float, !dbg !34
  %38 = fadd float %29, %37, !dbg !35
  %39 = icmp ult i32 %16, 3, !dbg !18
  %40 = and i1 %20, %39, !dbg !36
  %41 = add i32 %23, -1, !dbg !37
  %42 = add i32 %41, %22, !dbg !38
  %43 = sext i32 %42 to i64, !dbg !39
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !39
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %44, i1 %40, i32 0, i1 %40) #1, !dbg !40
  %46 = bitcast i32 %45 to float, !dbg !40
  %47 = fadd float %38, %46, !dbg !41
  %48 = and i1 %30, %39, !dbg !42
  %49 = add i32 %23, %22, !dbg !43
  %50 = sext i32 %49 to i64, !dbg !44
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !44
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %48, i32 0, i1 %48) #1, !dbg !45
  %53 = bitcast i32 %52 to float, !dbg !45
  %54 = fadd float %47, %53, !dbg !46
  %55 = mul nsw i32 %15, -2, !dbg !47
  %56 = mul nsw i32 %16, -2, !dbg !48
  %57 = or disjoint <2 x i32> %18, splat (i32 1), !dbg !49
  %58 = icmp sgt <2 x i32> %14, splat (i32 2), !dbg !50
  %59 = select <2 x i1> %58, <2 x i32> splat (i32 7), <2 x i32> zeroinitializer, !dbg !51
  %60 = icmp slt <2 x i32> %57, splat (i32 7), !dbg !52
  %61 = select <2 x i1> %60, <2 x i32> %57, <2 x i32> zeroinitializer, !dbg !53
  %62 = add nsw <2 x i32> %61, %59, !dbg !54
  %63 = extractelement <2 x i32> %62, i64 0, !dbg !55
  %64 = mul nsw i32 %63, %56, !dbg !56
  %65 = shl nsw i32 %15, 2, !dbg !57
  %66 = mul nsw i32 %65, %16, !dbg !58
  %reass.add = add nsw i32 %63, %55
  %67 = extractelement <2 x i32> %62, i64 1, !dbg !59
  %reass.mul = mul nsw i32 %reass.add, %67
  %68 = or disjoint i32 %55, 1, !dbg !60
  %69 = add nsw i32 %68, %56, !dbg !61
  %70 = add nsw i32 %69, %66, !dbg !62
  %71 = add nsw i32 %70, %63, !dbg !55
  %72 = add nsw i32 %71, %64, !dbg !63
  %73 = add i32 %72, %67, !dbg !59
  %74 = add i32 %73, %reass.mul, !dbg !64
  %75 = sitofp i32 %74 to float, !dbg !65
  %76 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %54, float %75) #1, !dbg !65
  %77 = sext i32 %8 to i64, !dbg !66
  %78 = getelementptr float, ptr addrspace(1) %1, i64 %77, !dbg !66
  %79 = bitcast float %76 to i32, !dbg !67
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %79, ptr addrspace(1) %78, i1 true) #1, !dbg !67
  ret void, !dbg !68
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cseqb6adtrh5vnbh6ls2l7bfiiitfhxeygem5blahuqcr2l2bc25.py", directory: "inductor_cache/se")
!4 = !{ptr @triton_poi_fused_avg_pool2d_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_5", linkageName: "triton_poi_fused_avg_pool2d_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 39, column: 56, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 50, column: 20, scope: !7)
!19 = !DILocation(line: 30, column: 19, scope: !7)
!20 = !DILocation(line: 34, column: 20, scope: !7)
!21 = !DILocation(line: 35, column: 19, scope: !7)
!22 = !DILocation(line: 38, column: 19, scope: !7)
!23 = !DILocation(line: 39, column: 48, scope: !7)
!24 = !DILocation(line: 39, column: 38, scope: !7)
!25 = !DILocation(line: 39, column: 45, scope: !7)
!26 = !DILocation(line: 39, column: 53, scope: !7)
!27 = !DILocation(line: 39, column: 31, scope: !7)
!28 = !DILocation(line: 39, column: 61, scope: !7)
!29 = !DILocation(line: 43, column: 20, scope: !7)
!30 = !DILocation(line: 44, column: 19, scope: !7)
!31 = !DILocation(line: 45, column: 45, scope: !7)
!32 = !DILocation(line: 45, column: 53, scope: !7)
!33 = !DILocation(line: 45, column: 31, scope: !7)
!34 = !DILocation(line: 45, column: 61, scope: !7)
!35 = !DILocation(line: 46, column: 20, scope: !7)
!36 = !DILocation(line: 51, column: 20, scope: !7)
!37 = !DILocation(line: 52, column: 45, scope: !7)
!38 = !DILocation(line: 52, column: 53, scope: !7)
!39 = !DILocation(line: 52, column: 31, scope: !7)
!40 = !DILocation(line: 52, column: 61, scope: !7)
!41 = !DILocation(line: 53, column: 20, scope: !7)
!42 = !DILocation(line: 54, column: 20, scope: !7)
!43 = !DILocation(line: 55, column: 46, scope: !7)
!44 = !DILocation(line: 55, column: 31, scope: !7)
!45 = !DILocation(line: 55, column: 54, scope: !7)
!46 = !DILocation(line: 56, column: 20, scope: !7)
!47 = !DILocation(line: 57, column: 22, scope: !7)
!48 = !DILocation(line: 57, column: 34, scope: !7)
!49 = !DILocation(line: 57, column: 60, scope: !7)
!50 = !DILocation(line: 57, column: 56, scope: !7)
!51 = !DILocation(line: 57, column: 48, scope: !7)
!52 = !DILocation(line: 57, column: 97, scope: !7)
!53 = !DILocation(line: 57, column: 83, scope: !7)
!54 = !DILocation(line: 57, column: 69, scope: !7)
!55 = !DILocation(line: 57, column: 241, scope: !7)
!56 = !DILocation(line: 57, column: 250, scope: !7)
!57 = !DILocation(line: 57, column: 316, scope: !7)
!58 = !DILocation(line: 57, column: 319, scope: !7)
!59 = !DILocation(line: 57, column: 325, scope: !7)
!60 = !DILocation(line: 57, column: 29, scope: !7)
!61 = !DILocation(line: 57, column: 40, scope: !7)
!62 = !DILocation(line: 57, column: 167, scope: !7)
!63 = !DILocation(line: 57, column: 314, scope: !7)
!64 = !DILocation(line: 57, column: 389, scope: !7)
!65 = !DILocation(line: 58, column: 20, scope: !7)
!66 = !DILocation(line: 59, column: 25, scope: !7)
!67 = !DILocation(line: 59, column: 37, scope: !7)
!68 = !DILocation(line: 59, column: 4, scope: !7)
