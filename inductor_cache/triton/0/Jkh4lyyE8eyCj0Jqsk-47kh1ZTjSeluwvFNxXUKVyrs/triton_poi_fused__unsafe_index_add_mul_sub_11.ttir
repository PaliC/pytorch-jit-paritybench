#loc = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":19:0)
module {
  tt.func public @triton_poi_fused__unsafe_index_add_mul_sub_11(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":19:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":19:0), %arg3: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":19:0), %arg5: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":19:0), %arg7: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":19:0), %arg8: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<8> : tensor<256xi32> loc(#loc1)
    %cst_0 = arith.constant dense<2> : tensor<256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<2048> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_2 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_1 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_0 : tensor<256xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_0 : tensor<256xi32> loc(#loc9)
    %9 = arith.remsi %8, %cst_0 : tensor<256xi32> loc(#loc10)
    %10 = arith.remsi %4, %cst_0 : tensor<256xi32> loc(#loc11)
    %11 = arith.divsi %4, %cst : tensor<256xi32> loc(#loc12)
    %12 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc13)
    %13 = tt.addptr %12, %11 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc13)
    %14 = tt.load %13, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc14)
    %15 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc15)
    %16 = tt.addptr %15, %10 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc15)
    %17 = tt.load %16, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc16)
    %18 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc17)
    %19 = tt.addptr %18, %9 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc17)
    %20 = tt.load %19, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc18)
    %21 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc19)
    %22 = tt.addptr %21, %7 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc19)
    %23 = tt.load %22, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc20)
    %24 = arith.subf %14, %14 : tensor<256xf32> loc(#loc21)
    %25 = arith.mulf %24, %17 : tensor<256xf32> loc(#loc22)
    %26 = arith.addf %14, %25 : tensor<256xf32> loc(#loc23)
    %27 = arith.subf %26, %26 : tensor<256xf32> loc(#loc24)
    %28 = arith.mulf %27, %20 : tensor<256xf32> loc(#loc25)
    %29 = arith.addf %26, %28 : tensor<256xf32> loc(#loc26)
    %30 = arith.subf %29, %29 : tensor<256xf32> loc(#loc27)
    %31 = arith.mulf %30, %23 : tensor<256xf32> loc(#loc28)
    %32 = arith.addf %29, %31 : tensor<256xf32> loc(#loc29)
    %33 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc30)
    %34 = tt.addptr %33, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc30)
    tt.store %34, %32, %5 : tensor<256x!tt.ptr<f32>> loc(#loc31)
    tt.return loc(#loc32)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":21:28)
#loc3 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":21:33)
#loc4 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":22:36)
#loc5 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":22:23)
#loc6 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":23:21)
#loc7 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":24:21)
#loc8 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":24:26)
#loc9 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":25:21)
#loc10 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":25:26)
#loc11 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":26:19)
#loc12 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":27:19)
#loc13 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":32:31)
#loc14 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":32:36)
#loc15 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":34:31)
#loc16 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":34:36)
#loc17 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":37:31)
#loc18 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":37:36)
#loc19 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":38:31)
#loc20 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":38:36)
#loc21 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":52:20)
#loc22 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":53:20)
#loc23 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":54:20)
#loc24 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":61:20)
#loc25 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":62:20)
#loc26 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":63:20)
#loc27 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":64:20)
#loc28 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":65:20)
#loc29 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":66:20)
#loc30 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":67:28)
#loc31 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":67:40)
#loc32 = loc("inductor_cache/56/c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py":67:4)
