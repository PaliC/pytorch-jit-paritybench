; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_mul_sub_11(ptr addrspace(1) %0, ptr addrspace(1) nocapture readnone %1, ptr addrspace(1) nocapture readnone %2, ptr addrspace(1) nocapture readnone %3, ptr addrspace(1) %4, ptr addrspace(1) nocapture readnone %5, ptr addrspace(1) %6, ptr addrspace(1) nocapture readnone %7, ptr addrspace(1) nocapture readnone %8, ptr addrspace(1) %9, ptr addrspace(1) %10, i32 %11) local_unnamed_addr !dbg !7 {
  %13 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %14 = shl i32 %13, 8, !dbg !11
  %15 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %16 = shl i32 %15, 1, !dbg !12
  %17 = and i32 %16, 254, !dbg !12
  %18 = or disjoint i32 %14, %17, !dbg !13
  %19 = icmp slt i32 %18, 2048, !dbg !14
  %20 = sdiv i32 %18, 4, !dbg !15
  %21 = srem i32 %20, 2, !dbg !16
  %22 = ashr exact i32 %18, 1, !dbg !17
  %23 = srem i32 %22, 2, !dbg !18
  %24 = sdiv i32 %18, 8, !dbg !19
  %25 = sext i32 %24 to i64, !dbg !20
  %26 = getelementptr float, ptr addrspace(1) %4, i64 %25, !dbg !20
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %19) #1, !dbg !21
  %28 = bitcast i32 %27 to float, !dbg !21
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %19) #1, !dbg !21
  %30 = bitcast i32 %29 to float, !dbg !21
  %31 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %6, i1 %19) #1, !dbg !22
  %32 = extractvalue { i32, i32 } %31, 0, !dbg !22
  %33 = extractvalue { i32, i32 } %31, 1, !dbg !22
  %34 = bitcast i32 %32 to float, !dbg !22
  %35 = bitcast i32 %33 to float, !dbg !22
  %36 = sext i32 %23 to i64, !dbg !23
  %37 = getelementptr float, ptr addrspace(1) %9, i64 %36, !dbg !23
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %19) #1, !dbg !24
  %39 = bitcast i32 %38 to float, !dbg !24
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %19) #1, !dbg !24
  %41 = bitcast i32 %40 to float, !dbg !24
  %42 = sext i32 %21 to i64, !dbg !25
  %43 = getelementptr float, ptr addrspace(1) %10, i64 %42, !dbg !25
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %19) #1, !dbg !26
  %45 = bitcast i32 %44 to float, !dbg !26
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %19) #1, !dbg !26
  %47 = bitcast i32 %46 to float, !dbg !26
  %48 = fsub float %28, %28, !dbg !27
  %49 = fsub float %30, %30, !dbg !27
  %50 = fmul float %48, %34, !dbg !28
  %51 = fmul float %49, %35, !dbg !28
  %52 = fadd float %50, %28, !dbg !29
  %53 = fadd float %51, %30, !dbg !29
  %54 = fsub float %52, %52, !dbg !30
  %55 = fsub float %53, %53, !dbg !30
  %56 = fmul float %54, %39, !dbg !31
  %57 = fmul float %55, %41, !dbg !31
  %58 = fadd float %52, %56, !dbg !32
  %59 = fadd float %53, %57, !dbg !32
  %60 = fsub float %58, %58, !dbg !33
  %61 = fsub float %59, %59, !dbg !33
  %62 = fmul float %60, %45, !dbg !34
  %63 = fmul float %61, %47, !dbg !34
  %64 = fadd float %58, %62, !dbg !35
  %65 = fadd float %59, %63, !dbg !35
  %66 = sext i32 %18 to i64, !dbg !36
  %67 = getelementptr float, ptr addrspace(1) %0, i64 %66, !dbg !36
  %68 = bitcast float %64 to i32, !dbg !37
  %69 = bitcast float %65 to i32, !dbg !37
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %68, i32 %69, ptr addrspace(1) %67, i1 %19) #1, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c56fcu46clokm5plkpgww6kldrvr2qpw5qjcruzc3ub5yjvv4fqp.py", directory: "inductor_cache/56")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_11, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_mul_sub_11", linkageName: "triton_poi_fused__unsafe_index_add_mul_sub_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 21, scope: !7)
!18 = !DILocation(line: 25, column: 26, scope: !7)
!19 = !DILocation(line: 27, column: 19, scope: !7)
!20 = !DILocation(line: 32, column: 31, scope: !7)
!21 = !DILocation(line: 32, column: 36, scope: !7)
!22 = !DILocation(line: 34, column: 36, scope: !7)
!23 = !DILocation(line: 37, column: 31, scope: !7)
!24 = !DILocation(line: 37, column: 36, scope: !7)
!25 = !DILocation(line: 38, column: 31, scope: !7)
!26 = !DILocation(line: 38, column: 36, scope: !7)
!27 = !DILocation(line: 52, column: 20, scope: !7)
!28 = !DILocation(line: 53, column: 20, scope: !7)
!29 = !DILocation(line: 54, column: 20, scope: !7)
!30 = !DILocation(line: 61, column: 20, scope: !7)
!31 = !DILocation(line: 62, column: 20, scope: !7)
!32 = !DILocation(line: 63, column: 20, scope: !7)
!33 = !DILocation(line: 64, column: 20, scope: !7)
!34 = !DILocation(line: 65, column: 20, scope: !7)
!35 = !DILocation(line: 66, column: 20, scope: !7)
!36 = !DILocation(line: 67, column: 28, scope: !7)
!37 = !DILocation(line: 67, column: 40, scope: !7)
!38 = !DILocation(line: 67, column: 4, scope: !7)
