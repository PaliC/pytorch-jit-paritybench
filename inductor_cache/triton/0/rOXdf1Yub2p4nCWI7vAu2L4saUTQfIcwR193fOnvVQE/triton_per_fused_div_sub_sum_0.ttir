#loc = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":19:0)
#loc1 = loc(unknown)
#loc56 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":65:26)
#loc73 = loc(callsite(#loc1 at #loc56))
module {
  tt.func public @triton_per_fused_div_sub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999996E-13> : tensor<1x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<6.250000e-02> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<3> : tensor<1x16xi32> loc(#loc1)
    %cst_2 = arith.constant dense<2> : tensor<1x16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<1> : tensor<1x16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<1x16xi32> loc(#loc1)
    %0 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc3)
    %2 = arith.divsi %1, %cst_4 : tensor<1x16xi32> loc(#loc4)
    %3 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc5)
    %4 = tt.addptr %3, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc5)
    %5 = tt.load %4 : tensor<1x16x!tt.ptr<f32>> loc(#loc6)
    %6 = arith.muli %2, %cst_4 : tensor<1x16xi32> loc(#loc7)
    %7 = tt.addptr %3, %6 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc8)
    %8 = tt.load %7 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %9 = arith.addi %6, %cst_3 : tensor<1x16xi32> loc(#loc10)
    %10 = tt.addptr %3, %9 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc11)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc12)
    %12 = arith.addi %6, %cst_2 : tensor<1x16xi32> loc(#loc13)
    %13 = tt.addptr %3, %12 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc14)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc15)
    %15 = arith.addi %6, %cst_1 : tensor<1x16xi32> loc(#loc16)
    %16 = tt.addptr %3, %15 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc17)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc18)
    %18 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc19)
    %19 = tt.addptr %18, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc19)
    %20 = tt.load %19 : tensor<1x16x!tt.ptr<f32>> loc(#loc20)
    %21 = tt.addptr %18, %6 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc21)
    %22 = tt.load %21 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc22)
    %23 = tt.addptr %18, %9 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc23)
    %24 = tt.load %23 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc24)
    %25 = tt.addptr %18, %12 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc25)
    %26 = tt.load %25 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc26)
    %27 = tt.addptr %18, %15 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc27)
    %28 = tt.load %27 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc28)
    %29 = arith.mulf %8, %8 : tensor<1x16xf32> loc(#loc29)
    %30 = arith.mulf %11, %11 : tensor<1x16xf32> loc(#loc30)
    %31 = arith.addf %29, %30 : tensor<1x16xf32> loc(#loc31)
    %32 = arith.mulf %14, %14 : tensor<1x16xf32> loc(#loc32)
    %33 = arith.addf %31, %32 : tensor<1x16xf32> loc(#loc33)
    %34 = arith.mulf %17, %17 : tensor<1x16xf32> loc(#loc34)
    %35 = arith.addf %33, %34 : tensor<1x16xf32> loc(#loc35)
    %36 = tt.extern_elementwise %35 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x16xf32>) -> tensor<1x16xf32> loc(#loc36)
    %37 = arith.cmpf ogt, %36, %cst : tensor<1x16xf32> loc(#loc64)
    %38 = arith.cmpf une, %36, %36 : tensor<1x16xf32> loc(#loc65)
    %39 = arith.ori %37, %38 : tensor<1x16xi1> loc(#loc66)
    %40 = arith.select %39, %36, %cst : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc67)
    %41 = arith.divf %5, %40 : tensor<1x16xf32> loc(#loc42)
    %42 = arith.mulf %22, %22 : tensor<1x16xf32> loc(#loc43)
    %43 = arith.mulf %24, %24 : tensor<1x16xf32> loc(#loc44)
    %44 = arith.addf %42, %43 : tensor<1x16xf32> loc(#loc45)
    %45 = arith.mulf %26, %26 : tensor<1x16xf32> loc(#loc46)
    %46 = arith.addf %44, %45 : tensor<1x16xf32> loc(#loc47)
    %47 = arith.mulf %28, %28 : tensor<1x16xf32> loc(#loc48)
    %48 = arith.addf %46, %47 : tensor<1x16xf32> loc(#loc49)
    %49 = tt.extern_elementwise %48 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x16xf32>) -> tensor<1x16xf32> loc(#loc50)
    %50 = arith.cmpf ogt, %49, %cst : tensor<1x16xf32> loc(#loc68)
    %51 = arith.cmpf une, %49, %49 : tensor<1x16xf32> loc(#loc69)
    %52 = arith.ori %50, %51 : tensor<1x16xi1> loc(#loc70)
    %53 = arith.select %52, %49, %cst : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc71)
    %54 = arith.divf %20, %53 : tensor<1x16xf32> loc(#loc52)
    %55 = arith.subf %41, %54 : tensor<1x16xf32> loc(#loc53)
    %56 = arith.mulf %55, %55 : tensor<1x16xf32> loc(#loc54)
    %57 = "tt.reduce"(%56) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc56)), %arg5: f32 loc(callsite(#loc1 at #loc56))):
      %62 = arith.addf %arg4, %arg5 : f32 loc(#loc75)
      tt.reduce.return %62 : f32 loc(#loc72)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc72)
    %58 = tt.expand_dims %57 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc58)
    %59 = arith.mulf %58, %cst_0 : tensor<1x1xf32> loc(#loc59)
    gpu.barrier loc(#loc60)
    %60 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc61)
    %61 = tt.splat %60 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc61)
    tt.store %61, %59 : tensor<1x1x!tt.ptr<f32>> loc(#loc62)
    tt.return loc(#loc63)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":26:26)
#loc3 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":26:34)
#loc4 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":30:19)
#loc5 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":31:30)
#loc6 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":31:35)
#loc7 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":32:32)
#loc8 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":32:30)
#loc9 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":32:37)
#loc10 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":33:34)
#loc11 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":33:30)
#loc12 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":33:41)
#loc13 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":34:34)
#loc14 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":34:30)
#loc15 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":34:41)
#loc16 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":35:34)
#loc17 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":35:30)
#loc18 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":35:41)
#loc19 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":36:31)
#loc20 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":36:36)
#loc21 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":37:31)
#loc22 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":37:38)
#loc23 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":38:31)
#loc24 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":38:42)
#loc25 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":39:31)
#loc26 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":39:42)
#loc27 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":40:31)
#loc28 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":40:42)
#loc29 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":41:18)
#loc30 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":42:18)
#loc31 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":43:18)
#loc32 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":44:18)
#loc33 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":45:18)
#loc34 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":46:19)
#loc35 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":47:19)
#loc36 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":48:27)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc38 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":50:42)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc42 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":51:19)
#loc43 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":52:20)
#loc44 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":53:20)
#loc45 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":54:20)
#loc46 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":55:20)
#loc47 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":56:20)
#loc48 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":57:20)
#loc49 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":58:20)
#loc50 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":59:27)
#loc51 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":60:42)
#loc52 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":61:20)
#loc53 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":62:20)
#loc54 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":63:20)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc58 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":65:29)
#loc59 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":67:20)
#loc60 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":68:4)
#loc61 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":69:28)
#loc62 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":69:71)
#loc63 = loc("inductor_cache/lu/cluhtplc4b22cvi2g74nsecwm3oguccqtk5ycpt4ct6m3ew6gtnn.py":69:4)
#loc64 = loc(callsite(#loc37 at #loc38))
#loc65 = loc(callsite(#loc39 at #loc38))
#loc66 = loc(callsite(#loc40 at #loc38))
#loc67 = loc(callsite(#loc41 at #loc38))
#loc68 = loc(callsite(#loc37 at #loc51))
#loc69 = loc(callsite(#loc39 at #loc51))
#loc70 = loc(callsite(#loc40 at #loc51))
#loc71 = loc(callsite(#loc41 at #loc51))
#loc72 = loc(callsite(#loc55 at #loc56))
#loc74 = loc(callsite(#loc57 at #loc55))
#loc75 = loc(callsite(#loc74 at #loc56))
