; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__softmax_leaky_relu_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 6, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 62, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 64, !dbg !14
  %11 = srem i32 %9, 16, !dbg !15
  %12 = sext i32 %9 to i64, !dbg !16
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !16
  %14 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %13, i1 %10) #1, !dbg !17
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !17
  %16 = extractvalue { i32, i32 } %14, 1, !dbg !17
  %17 = bitcast i32 %15 to float, !dbg !17
  %18 = bitcast i32 %16 to float, !dbg !17
  %19 = sext i32 %11 to i64, !dbg !18
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !18
  %21 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %20, i1 %10) #1, !dbg !19
  %22 = extractvalue { i32, i32 } %21, 0, !dbg !19
  %23 = extractvalue { i32, i32 } %21, 1, !dbg !19
  %24 = getelementptr i8, ptr addrspace(1) %20, i64 64, !dbg !20
  %25 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %24, i1 %10) #1, !dbg !21
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !21
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !21
  %28 = getelementptr i8, ptr addrspace(1) %20, i64 128, !dbg !22
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 %10) #1, !dbg !23
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !23
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !23
  %32 = bitcast i32 %30 to float, !dbg !23
  %33 = bitcast i32 %31 to float, !dbg !23
  %34 = getelementptr i8, ptr addrspace(1) %20, i64 192, !dbg !24
  %35 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %34, i1 %10) #1, !dbg !25
  %36 = extractvalue { i32, i32 } %35, 0, !dbg !25
  %37 = extractvalue { i32, i32 } %35, 1, !dbg !25
  %38 = bitcast i32 %36 to float, !dbg !25
  %39 = bitcast i32 %37 to float, !dbg !25
  %40 = fcmp ogt float %17, 0.000000e+00, !dbg !26
  %41 = fcmp ogt float %18, 0.000000e+00, !dbg !26
  %42 = fmul float %17, 0x3FC99999A0000000, !dbg !27
  %43 = fmul float %18, 0x3FC99999A0000000, !dbg !27
  %44 = select i1 %40, float %17, float %42, !dbg !28
  %45 = select i1 %41, float %18, float %43, !dbg !28
  %46 = insertelement <2 x i32> poison, i32 %22, i64 0, !dbg !19
  %47 = insertelement <2 x i32> %46, i32 %26, i64 1, !dbg !19
  %48 = bitcast <2 x i32> %47 to <2 x float>, !dbg !19
  %49 = fcmp ogt <2 x float> %48, zeroinitializer, !dbg !29
  %50 = fmul <2 x float> %48, splat (float 0x3FC99999A0000000), !dbg !30
  %51 = select <2 x i1> %49, <2 x float> %48, <2 x float> %50, !dbg !31
  %52 = insertelement <2 x i32> poison, i32 %23, i64 0, !dbg !19
  %53 = insertelement <2 x i32> %52, i32 %27, i64 1, !dbg !19
  %54 = bitcast <2 x i32> %53 to <2 x float>, !dbg !19
  %55 = fcmp ogt <2 x float> %54, zeroinitializer, !dbg !29
  %56 = fmul <2 x float> %54, splat (float 0x3FC99999A0000000), !dbg !30
  %57 = select <2 x i1> %55, <2 x float> %54, <2 x float> %56, !dbg !31
  %58 = extractelement <2 x float> %51, i64 0, !dbg !32
  %59 = extractelement <2 x float> %51, i64 1, !dbg !32
  %60 = fcmp ogt float %58, %59, !dbg !36
  %61 = extractelement <2 x float> %57, i64 0, !dbg !32
  %62 = extractelement <2 x float> %57, i64 1, !dbg !32
  %63 = fcmp ogt float %61, %62, !dbg !36
  %64 = fcmp uno float %58, 0.000000e+00, !dbg !37
  %65 = fcmp uno float %61, 0.000000e+00, !dbg !37
  %66 = or i1 %64, %60, !dbg !38
  %67 = or i1 %65, %63, !dbg !38
  %68 = select i1 %66, float %58, float %59, !dbg !32
  %69 = select i1 %67, float %61, float %62, !dbg !32
  %70 = fcmp ogt float %32, 0.000000e+00, !dbg !39
  %71 = fcmp ogt float %33, 0.000000e+00, !dbg !39
  %72 = fmul float %32, 0x3FC99999A0000000, !dbg !40
  %73 = fmul float %33, 0x3FC99999A0000000, !dbg !40
  %74 = select i1 %70, float %32, float %72, !dbg !41
  %75 = select i1 %71, float %33, float %73, !dbg !41
  %76 = fcmp ogt float %68, %74, !dbg !42
  %77 = fcmp ogt float %69, %75, !dbg !42
  %78 = fcmp uno float %68, 0.000000e+00, !dbg !44
  %79 = fcmp uno float %69, 0.000000e+00, !dbg !44
  %80 = or i1 %76, %78, !dbg !45
  %81 = or i1 %77, %79, !dbg !45
  %82 = select i1 %80, float %68, float %74, !dbg !46
  %83 = select i1 %81, float %69, float %75, !dbg !46
  %84 = fcmp ogt float %38, 0.000000e+00, !dbg !47
  %85 = fcmp ogt float %39, 0.000000e+00, !dbg !47
  %86 = fmul float %38, 0x3FC99999A0000000, !dbg !48
  %87 = fmul float %39, 0x3FC99999A0000000, !dbg !48
  %88 = select i1 %84, float %38, float %86, !dbg !49
  %89 = select i1 %85, float %39, float %87, !dbg !49
  %90 = fcmp ogt float %82, %88, !dbg !50
  %91 = fcmp ogt float %83, %89, !dbg !50
  %92 = fcmp uno float %82, 0.000000e+00, !dbg !52
  %93 = fcmp uno float %83, 0.000000e+00, !dbg !52
  %94 = or i1 %90, %92, !dbg !53
  %95 = or i1 %91, %93, !dbg !53
  %96 = select i1 %94, float %82, float %88, !dbg !54
  %97 = select i1 %95, float %83, float %89, !dbg !54
  %98 = fsub float %44, %96, !dbg !55
  %99 = fsub float %45, %97, !dbg !55
  %100 = fmul float %98, 0x3FF7154760000000, !dbg !56
  %101 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %100) #1, !dbg !56
  %102 = fmul float %99, 0x3FF7154760000000, !dbg !56
  %103 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %102) #1, !dbg !56
  %104 = getelementptr float, ptr addrspace(1) %1, i64 %12, !dbg !57
  %105 = bitcast float %101 to i32, !dbg !58
  %106 = bitcast float %103 to i32, !dbg !58
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %105, i32 %106, ptr addrspace(1) %104, i1 %10) #1, !dbg !58
  ret void, !dbg !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cz6h2qkytbvsc6av4iiaabqywbbyxfoo422wjszo4xybkcb7soit.py", directory: "inductor_cache/z6")
!4 = !{ptr @triton_poi_fused__softmax_leaky_relu_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax_leaky_relu_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax_leaky_relu_1", linkageName: "triton_poi_fused__softmax_leaky_relu_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 31, scope: !7)
!21 = !DILocation(line: 28, column: 41, scope: !7)
!22 = !DILocation(line: 29, column: 31, scope: !7)
!23 = !DILocation(line: 29, column: 41, scope: !7)
!24 = !DILocation(line: 30, column: 31, scope: !7)
!25 = !DILocation(line: 30, column: 41, scope: !7)
!26 = !DILocation(line: 32, column: 18, scope: !7)
!27 = !DILocation(line: 34, column: 18, scope: !7)
!28 = !DILocation(line: 35, column: 32, scope: !7)
!29 = !DILocation(line: 36, column: 18, scope: !7)
!30 = !DILocation(line: 37, column: 18, scope: !7)
!31 = !DILocation(line: 38, column: 32, scope: !7)
!32 = !DILocation(line: 121, column: 29, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!34 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!35 = !DILocation(line: 42, column: 41, scope: !7)
!36 = !DILocation(line: 118, column: 15, scope: !33, inlinedAt: !35)
!37 = !DILocation(line: 120, column: 21, scope: !33, inlinedAt: !35)
!38 = !DILocation(line: 120, column: 16, scope: !33, inlinedAt: !35)
!39 = !DILocation(line: 43, column: 20, scope: !7)
!40 = !DILocation(line: 44, column: 20, scope: !7)
!41 = !DILocation(line: 45, column: 35, scope: !7)
!42 = !DILocation(line: 118, column: 15, scope: !33, inlinedAt: !43)
!43 = !DILocation(line: 46, column: 42, scope: !7)
!44 = !DILocation(line: 120, column: 21, scope: !33, inlinedAt: !43)
!45 = !DILocation(line: 120, column: 16, scope: !33, inlinedAt: !43)
!46 = !DILocation(line: 121, column: 29, scope: !33, inlinedAt: !43)
!47 = !DILocation(line: 47, column: 20, scope: !7)
!48 = !DILocation(line: 48, column: 20, scope: !7)
!49 = !DILocation(line: 49, column: 35, scope: !7)
!50 = !DILocation(line: 118, column: 15, scope: !33, inlinedAt: !51)
!51 = !DILocation(line: 50, column: 42, scope: !7)
!52 = !DILocation(line: 120, column: 21, scope: !33, inlinedAt: !51)
!53 = !DILocation(line: 120, column: 16, scope: !33, inlinedAt: !51)
!54 = !DILocation(line: 121, column: 29, scope: !33, inlinedAt: !51)
!55 = !DILocation(line: 51, column: 19, scope: !7)
!56 = !DILocation(line: 52, column: 24, scope: !7)
!57 = !DILocation(line: 53, column: 25, scope: !7)
!58 = !DILocation(line: 53, column: 37, scope: !7)
!59 = !DILocation(line: 53, column: 4, scope: !7)
