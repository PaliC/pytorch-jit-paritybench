; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mean_sum_48(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %.frozen = freeze i32 %8, !dbg !14
  %9 = sdiv i32 %.frozen, 2048, !dbg !14
  %10 = mul i32 %9, 2048, !dbg !15
  %.decomposed = sub i32 %.frozen, %10, !dbg !15
  %11 = shl i32 %9, 13, !dbg !16
  %12 = add i32 %11, %.decomposed, !dbg !17
  %13 = sext i32 %12 to i64, !dbg !18
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !18
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 true) #1, !dbg !19
  %16 = add i32 %12, 32768, !dbg !20
  %17 = sext i32 %16 to i64, !dbg !21
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !21
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 true) #1, !dbg !22
  %20 = add i32 %12, 2048, !dbg !23
  %21 = sext i32 %20 to i64, !dbg !24
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !24
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 true) #1, !dbg !25
  %24 = add i32 %12, 34816, !dbg !26
  %25 = sext i32 %24 to i64, !dbg !27
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !27
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #1, !dbg !28
  %28 = add i32 %12, 4096, !dbg !29
  %29 = sext i32 %28 to i64, !dbg !30
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !30
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #1, !dbg !31
  %32 = add i32 %12, 36864, !dbg !32
  %33 = sext i32 %32 to i64, !dbg !33
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !33
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #1, !dbg !34
  %36 = add i32 %12, 6144, !dbg !35
  %37 = sext i32 %36 to i64, !dbg !36
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !36
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #1, !dbg !37
  %40 = add i32 %12, 38912, !dbg !38
  %41 = sext i32 %40 to i64, !dbg !39
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !39
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #1, !dbg !40
  %44 = insertelement <2 x i32> poison, i32 %15, i64 0, !dbg !19
  %45 = insertelement <2 x i32> %44, i32 %23, i64 1, !dbg !19
  %46 = bitcast <2 x i32> %45 to <2 x float>, !dbg !19
  %47 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !22
  %48 = insertelement <2 x i32> %47, i32 %27, i64 1, !dbg !22
  %49 = bitcast <2 x i32> %48 to <2 x float>, !dbg !22
  %50 = fadd <2 x float> %46, %49, !dbg !41
  %shift = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !42
  %51 = fadd <2 x float> %50, %shift, !dbg !42
  %52 = insertelement <2 x i32> poison, i32 %31, i64 0, !dbg !31
  %53 = insertelement <2 x i32> %52, i32 %39, i64 1, !dbg !31
  %54 = bitcast <2 x i32> %53 to <2 x float>, !dbg !31
  %55 = insertelement <2 x i32> poison, i32 %35, i64 0, !dbg !34
  %56 = insertelement <2 x i32> %55, i32 %43, i64 1, !dbg !34
  %57 = bitcast <2 x i32> %56 to <2 x float>, !dbg !34
  %58 = fadd <2 x float> %54, %57, !dbg !43
  %59 = fadd <2 x float> %51, %58, !dbg !44
  %shift1 = shufflevector <2 x float> %58, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !45
  %60 = fadd <2 x float> %59, %shift1, !dbg !45
  %61 = extractelement <2 x float> %60, i64 0, !dbg !45
  %62 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %61, float 4.000000e+00) #1, !dbg !46
  %63 = sext i32 %8 to i64, !dbg !47
  %64 = getelementptr float, ptr addrspace(1) %1, i64 %63, !dbg !47
  %65 = bitcast float %62 to i32, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %65, ptr addrspace(1) %64, i1 true) #1, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py", directory: "inductor_cache/73")
!4 = !{ptr @triton_poi_fused_mean_sum_48, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mean_sum_48, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mean_sum_48", linkageName: "triton_poi_fused_mean_sum_48", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 40, scope: !7)
!17 = !DILocation(line: 27, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 45, scope: !7)
!20 = !DILocation(line: 28, column: 43, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 53, scope: !7)
!23 = !DILocation(line: 29, column: 42, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 52, scope: !7)
!26 = !DILocation(line: 30, column: 43, scope: !7)
!27 = !DILocation(line: 30, column: 30, scope: !7)
!28 = !DILocation(line: 30, column: 53, scope: !7)
!29 = !DILocation(line: 31, column: 42, scope: !7)
!30 = !DILocation(line: 31, column: 30, scope: !7)
!31 = !DILocation(line: 31, column: 52, scope: !7)
!32 = !DILocation(line: 32, column: 43, scope: !7)
!33 = !DILocation(line: 32, column: 30, scope: !7)
!34 = !DILocation(line: 32, column: 53, scope: !7)
!35 = !DILocation(line: 33, column: 43, scope: !7)
!36 = !DILocation(line: 33, column: 31, scope: !7)
!37 = !DILocation(line: 33, column: 53, scope: !7)
!38 = !DILocation(line: 34, column: 44, scope: !7)
!39 = !DILocation(line: 34, column: 31, scope: !7)
!40 = !DILocation(line: 34, column: 54, scope: !7)
!41 = !DILocation(line: 35, column: 18, scope: !7)
!42 = !DILocation(line: 37, column: 18, scope: !7)
!43 = !DILocation(line: 38, column: 18, scope: !7)
!44 = !DILocation(line: 39, column: 19, scope: !7)
!45 = !DILocation(line: 41, column: 20, scope: !7)
!46 = !DILocation(line: 43, column: 20, scope: !7)
!47 = !DILocation(line: 44, column: 25, scope: !7)
!48 = !DILocation(line: 44, column: 37, scope: !7)
!49 = !DILocation(line: 44, column: 4, scope: !7)
