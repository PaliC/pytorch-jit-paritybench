; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_reflection_pad2d_relu_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %8 = shl i32 %7, 9, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 510, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = icmp slt i32 %12, 147968, !dbg !14
  %15 = srem i32 %13, 34, !dbg !15
  %16 = sdiv i32 %12, 34, !dbg !16
  %17 = sdiv i32 %12, 1156, !dbg !17
  %18 = add nsw i32 %15, -1, !dbg !18
  %19 = tail call i32 @llvm.abs.i32(i32 %18, i1 true), !dbg !19
  %20 = add nsw i32 %19, -31, !dbg !20
  %21 = tail call i32 @llvm.abs.i32(i32 %20, i1 true), !dbg !21
  %22 = shl nsw i32 %17, 10, !dbg !22
  %reass.sub = or disjoint i32 %22, 1023, !dbg !23
  %23 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !15
  %24 = insertelement <2 x i32> %23, i32 %16, i64 1, !dbg !15
  %25 = srem <2 x i32> %24, splat (i32 34), !dbg !15
  %26 = add nsw <2 x i32> %25, splat (i32 -1), !dbg !18
  %27 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %26, i1 true), !dbg !19
  %28 = add nsw <2 x i32> %27, splat (i32 -31), !dbg !20
  %29 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %28, i1 true), !dbg !21
  %30 = extractelement <2 x i32> %29, i64 0, !dbg !24
  %31 = sub nuw i32 %reass.sub, %30, !dbg !24
  %32 = extractelement <2 x i32> %29, i64 1, !dbg !24
  %33 = mul nsw i32 %32, -32, !dbg !24
  %34 = add i32 %31, %33, !dbg !24
  %35 = sub nuw i32 %reass.sub, %21, !dbg !23
  %36 = add i32 %35, %33, !dbg !24
  %37 = sext i32 %34 to i64, !dbg !25
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !25
  %39 = sext i32 %36 to i64, !dbg !25
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !25
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %14) #2, !dbg !26
  %42 = bitcast i32 %41 to float, !dbg !26
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %14) #2, !dbg !26
  %44 = bitcast i32 %43 to float, !dbg !26
  %45 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !27
  %46 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !27
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %14) #2, !dbg !28
  %48 = bitcast i32 %47 to float, !dbg !28
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %14) #2, !dbg !28
  %50 = bitcast i32 %49 to float, !dbg !28
  %51 = getelementptr float, ptr addrspace(1) %2, i64 %37, !dbg !29
  %52 = getelementptr float, ptr addrspace(1) %2, i64 %39, !dbg !29
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 %14) #2, !dbg !30
  %54 = bitcast i32 %53 to float, !dbg !30
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %14) #2, !dbg !30
  %56 = bitcast i32 %55 to float, !dbg !30
  %57 = getelementptr float, ptr addrspace(1) %3, i64 %37, !dbg !31
  %58 = getelementptr float, ptr addrspace(1) %3, i64 %39, !dbg !31
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 %14) #2, !dbg !32
  %60 = bitcast i32 %59 to float, !dbg !32
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 %14) #2, !dbg !32
  %62 = bitcast i32 %61 to float, !dbg !32
  %63 = fcmp olt float %60, 0.000000e+00, !dbg !33
  %64 = fcmp olt float %62, 0.000000e+00, !dbg !33
  %65 = select i1 %63, float 0.000000e+00, float %60, !dbg !37
  %66 = select i1 %64, float 0.000000e+00, float %62, !dbg !37
  %67 = fadd float %65, %54, !dbg !38
  %68 = fadd float %66, %56, !dbg !38
  %69 = fadd float %67, %48, !dbg !39
  %70 = fadd float %68, %50, !dbg !39
  %71 = fadd float %69, %42, !dbg !40
  %72 = fadd float %70, %44, !dbg !40
  %73 = sext i32 %12 to i64, !dbg !41
  %74 = getelementptr float, ptr addrspace(1) %4, i64 %73, !dbg !41
  %75 = bitcast float %71 to i32, !dbg !42
  %76 = bitcast float %72 to i32, !dbg !42
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %75, i32 %76, ptr addrspace(1) %74, i1 %14) #2, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x i32> @llvm.abs.v2i32(<2 x i32>, i1 immarg) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ca47s6ogqnsc56ojzurcuxjtaipcnzszsjjbphxnzfc4esplgzov.py", directory: "inductor_cache/a4")
!4 = !{ptr @triton_poi_fused_add_reflection_pad2d_relu_7, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_reflection_pad2d_relu_7, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_reflection_pad2d_relu_7", linkageName: "triton_poi_fused_add_reflection_pad2d_relu_7", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 21, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 82, scope: !7)
!19 = !DILocation(line: 28, column: 75, scope: !7)
!20 = !DILocation(line: 28, column: 63, scope: !7)
!21 = !DILocation(line: 28, column: 55, scope: !7)
!22 = !DILocation(line: 28, column: 149, scope: !7)
!23 = !DILocation(line: 28, column: 91, scope: !7)
!24 = !DILocation(line: 28, column: 144, scope: !7)
!25 = !DILocation(line: 28, column: 30, scope: !7)
!26 = !DILocation(line: 28, column: 154, scope: !7)
!27 = !DILocation(line: 29, column: 30, scope: !7)
!28 = !DILocation(line: 29, column: 154, scope: !7)
!29 = !DILocation(line: 30, column: 30, scope: !7)
!30 = !DILocation(line: 30, column: 154, scope: !7)
!31 = !DILocation(line: 31, column: 30, scope: !7)
!32 = !DILocation(line: 31, column: 154, scope: !7)
!33 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !36)
!34 = distinct !DILexicalBlockFile(scope: !7, file: !35, discriminator: 0)
!35 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!36 = !DILocation(line: 33, column: 40, scope: !7)
!37 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !36)
!38 = !DILocation(line: 34, column: 18, scope: !7)
!39 = !DILocation(line: 35, column: 18, scope: !7)
!40 = !DILocation(line: 36, column: 18, scope: !7)
!41 = !DILocation(line: 37, column: 25, scope: !7)
!42 = !DILocation(line: 37, column: 36, scope: !7)
!43 = !DILocation(line: 37, column: 4, scope: !7)
