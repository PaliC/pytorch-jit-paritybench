#loc = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":19:0)
#loc1 = loc(unknown)
#loc51 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":60:26)
#loc60 = loc(callsite(#loc1 at #loc51))
module {
  tt.func public @triton_per_fused__log_softmax_mean_mul_neg_sum_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<48> : tensor<1x64xi32> loc(#loc1)
    %cst_2 = arith.constant dense<32> : tensor<1x64xi32> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<1x64xi32> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc3)
    %2 = arith.remsi %1, %cst_4 : tensor<1x64xi32> loc(#loc4)
    %3 = arith.divsi %1, %cst_4 : tensor<1x64xi32> loc(#loc5)
    %4 = arith.muli %3, %cst_3 : tensor<1x64xi32> loc(#loc6)
    %5 = arith.addi %2, %4 : tensor<1x64xi32> loc(#loc7)
    %6 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc8)
    %7 = tt.addptr %6, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc8)
    %8 = tt.load %7 : tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %9 = arith.addi %2, %cst_4 : tensor<1x64xi32> loc(#loc10)
    %10 = arith.addi %9, %4 : tensor<1x64xi32> loc(#loc11)
    %11 = tt.addptr %6, %10 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc12)
    %12 = tt.load %11 : tensor<1x64x!tt.ptr<f32>> loc(#loc13)
    %13 = arith.addi %2, %cst_2 : tensor<1x64xi32> loc(#loc14)
    %14 = arith.addi %13, %4 : tensor<1x64xi32> loc(#loc15)
    %15 = tt.addptr %6, %14 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc16)
    %16 = tt.load %15 : tensor<1x64x!tt.ptr<f32>> loc(#loc17)
    %17 = arith.addi %2, %cst_1 : tensor<1x64xi32> loc(#loc18)
    %18 = arith.addi %17, %4 : tensor<1x64xi32> loc(#loc19)
    %19 = tt.addptr %6, %18 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc20)
    %20 = tt.load %19 : tensor<1x64x!tt.ptr<f32>> loc(#loc21)
    %21 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc22)
    %22 = tt.addptr %21, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc22)
    %23 = tt.load %22 : tensor<1x64x!tt.ptr<f32>> loc(#loc23)
    %24 = tt.addptr %21, %10 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc24)
    %25 = tt.load %24 : tensor<1x64x!tt.ptr<f32>> loc(#loc25)
    %26 = tt.addptr %21, %14 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc26)
    %27 = tt.load %26 : tensor<1x64x!tt.ptr<f32>> loc(#loc27)
    %28 = tt.addptr %21, %18 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc28)
    %29 = tt.load %28 : tensor<1x64x!tt.ptr<f32>> loc(#loc29)
    %30 = math.exp %8 : tensor<1x64xf32> loc(#loc30)
    %31 = math.exp %12 : tensor<1x64xf32> loc(#loc31)
    %32 = arith.addf %30, %31 : tensor<1x64xf32> loc(#loc32)
    %33 = math.exp %16 : tensor<1x64xf32> loc(#loc33)
    %34 = arith.addf %32, %33 : tensor<1x64xf32> loc(#loc34)
    %35 = math.exp %20 : tensor<1x64xf32> loc(#loc35)
    %36 = arith.addf %34, %35 : tensor<1x64xf32> loc(#loc36)
    %37 = math.log %36 : tensor<1x64xf32> loc(#loc37)
    %38 = arith.subf %8, %37 : tensor<1x64xf32> loc(#loc38)
    %39 = arith.mulf %38, %23 : tensor<1x64xf32> loc(#loc39)
    %40 = arith.subf %12, %37 : tensor<1x64xf32> loc(#loc40)
    %41 = arith.mulf %40, %25 : tensor<1x64xf32> loc(#loc41)
    %42 = arith.addf %39, %41 : tensor<1x64xf32> loc(#loc42)
    %43 = arith.subf %16, %37 : tensor<1x64xf32> loc(#loc43)
    %44 = arith.mulf %43, %27 : tensor<1x64xf32> loc(#loc44)
    %45 = arith.addf %42, %44 : tensor<1x64xf32> loc(#loc45)
    %46 = arith.subf %20, %37 : tensor<1x64xf32> loc(#loc46)
    %47 = arith.mulf %46, %29 : tensor<1x64xf32> loc(#loc47)
    %48 = arith.addf %45, %47 : tensor<1x64xf32> loc(#loc48)
    %49 = arith.subf %cst_0, %48 : tensor<1x64xf32> loc(#loc49)
    %50 = "tt.reduce"(%49) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc51)), %arg5: f32 loc(callsite(#loc1 at #loc51))):
      %55 = arith.addf %arg4, %arg5 : f32 loc(#loc62)
      tt.reduce.return %55 : f32 loc(#loc59)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc59)
    %51 = tt.expand_dims %50 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc53)
    %52 = arith.divf %51, %cst : tensor<1x1xf32> loc(#loc54)
    gpu.barrier loc(#loc55)
    %53 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc56)
    %54 = tt.splat %53 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc56)
    tt.store %54, %52 : tensor<1x1x!tt.ptr<f32>> loc(#loc57)
    tt.return loc(#loc58)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":26:26)
#loc3 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":26:34)
#loc4 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":29:19)
#loc5 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":30:19)
#loc6 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":31:38)
#loc7 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":31:35)
#loc8 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":31:30)
#loc9 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":31:43)
#loc10 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":32:35)
#loc11 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":32:40)
#loc12 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":32:30)
#loc13 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":32:48)
#loc14 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":33:35)
#loc15 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":33:40)
#loc16 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":33:30)
#loc17 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":33:48)
#loc18 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":34:35)
#loc19 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":34:40)
#loc20 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":34:30)
#loc21 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":34:48)
#loc22 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":35:31)
#loc23 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":35:44)
#loc24 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":36:31)
#loc25 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":36:49)
#loc26 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":37:31)
#loc27 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":37:49)
#loc28 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":38:31)
#loc29 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":38:49)
#loc30 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":39:23)
#loc31 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":40:23)
#loc32 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":41:18)
#loc33 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":42:23)
#loc34 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":43:18)
#loc35 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":44:23)
#loc36 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":45:19)
#loc37 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":46:24)
#loc38 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":47:19)
#loc39 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":48:20)
#loc40 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":49:19)
#loc41 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":50:20)
#loc42 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":51:20)
#loc43 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":52:19)
#loc44 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":53:20)
#loc45 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":54:20)
#loc46 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":55:19)
#loc47 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":56:20)
#loc48 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":57:20)
#loc49 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":58:13)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc53 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":60:29)
#loc54 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":62:20)
#loc55 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":65:4)
#loc56 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":66:28)
#loc57 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":66:71)
#loc58 = loc("inductor_cache/mb/cmbwbdekeofvxqtidf7mfaioybw7nlnvu6muvzn3mf3dzlsvhz7q.py":66:4)
#loc59 = loc(callsite(#loc50 at #loc51))
#loc61 = loc(callsite(#loc52 at #loc50))
#loc62 = loc(callsite(#loc61 at #loc51))
