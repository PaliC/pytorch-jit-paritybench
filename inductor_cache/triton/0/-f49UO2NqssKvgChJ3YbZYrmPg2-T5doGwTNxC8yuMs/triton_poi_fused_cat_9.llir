; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_9(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 10, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 2, !dbg !12
  %9 = and i32 %8, 508, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 512, !dbg !13
  %12 = icmp slt i32 %10, 116224, !dbg !14
  %13 = icmp slt i32 %11, 116224, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %14 = sdiv i32 %.frozen, 64, !dbg !15
  %15 = sdiv i32 %11, 64, !dbg !15
  %16 = srem i32 %14, 454, !dbg !16
  %17 = srem i32 %15, 454, !dbg !16
  %18 = mul i32 %14, 64, !dbg !17
  %.decomposed = sub i32 %.frozen, %18, !dbg !17
  %.frozen9 = freeze i32 %10, !dbg !18
  %19 = sdiv i32 %.frozen9, 29056, !dbg !18
  %.frozen10 = freeze i32 %11, !dbg !18
  %20 = sdiv i32 %.frozen10, 29056, !dbg !18
  %21 = icmp slt i32 %16, 379, !dbg !19
  %22 = icmp slt i32 %17, 379, !dbg !19
  %23 = mul i32 %19, 29056, !dbg !20
  %srem.decomposed = sub i32 %.frozen9, %23, !dbg !20
  %24 = mul i32 %20, 29056, !dbg !20
  %srem1.decomposed = sub i32 %.frozen10, %24, !dbg !20
  %25 = mul nsw i32 %19, 24256, !dbg !21
  %26 = mul nsw i32 %20, 24256, !dbg !21
  %27 = add nsw i32 %25, %srem.decomposed, !dbg !22
  %28 = add nsw i32 %26, %srem1.decomposed, !dbg !22
  %29 = sext i32 %27 to i64, !dbg !23
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !23
  %31 = sext i32 %28 to i64, !dbg !23
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !23
  %33 = and i1 %12, %21, !dbg !24
  %34 = and i1 %13, %22, !dbg !24
  %35 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %30, i1 %33, i32 0, i1 %33, i32 0, i1 %33, i32 0, i1 %33, i32 0, i1 %33) #1, !dbg !25
  %36 = extractvalue { i32, i32, i32, i32 } %35, 0, !dbg !25
  %37 = extractvalue { i32, i32, i32, i32 } %35, 1, !dbg !25
  %38 = extractvalue { i32, i32, i32, i32 } %35, 2, !dbg !25
  %39 = extractvalue { i32, i32, i32, i32 } %35, 3, !dbg !25
  %40 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %32, i1 %34, i32 0, i1 %34, i32 0, i1 %34, i32 0, i1 %34, i32 0, i1 %34) #1, !dbg !25
  %41 = extractvalue { i32, i32, i32, i32 } %40, 0, !dbg !25
  %42 = extractvalue { i32, i32, i32, i32 } %40, 1, !dbg !25
  %43 = extractvalue { i32, i32, i32, i32 } %40, 2, !dbg !25
  %44 = extractvalue { i32, i32, i32, i32 } %40, 3, !dbg !25
  %45 = icmp sgt i32 %16, 378, !dbg !26
  %46 = icmp sgt i32 %17, 378, !dbg !26
  %47 = shl nsw i32 %16, 6, !dbg !27
  %48 = shl nsw i32 %17, 6, !dbg !27
  %49 = mul nsw i32 %19, 4800, !dbg !28
  %50 = mul nsw i32 %20, 4800, !dbg !28
  %51 = add nsw i32 %.decomposed, -24256, !dbg !27
  %52 = add nsw i32 %51, %49, !dbg !29
  %53 = add nsw i32 %52, %47, !dbg !30
  %54 = add nsw i32 %51, %50, !dbg !29
  %55 = add nsw i32 %54, %48, !dbg !30
  %56 = sext i32 %53 to i64, !dbg !31
  %57 = getelementptr float, ptr addrspace(1) %1, i64 %56, !dbg !31
  %58 = sext i32 %55 to i64, !dbg !31
  %59 = getelementptr float, ptr addrspace(1) %1, i64 %58, !dbg !31
  %60 = and i1 %12, %45, !dbg !32
  %61 = and i1 %13, %46, !dbg !32
  %62 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %57, i1 %60, i32 0, i1 %60, i32 0, i1 %60, i32 0, i1 %60, i32 0, i1 %60) #1, !dbg !33
  %63 = extractvalue { i32, i32, i32, i32 } %62, 0, !dbg !33
  %64 = extractvalue { i32, i32, i32, i32 } %62, 1, !dbg !33
  %65 = extractvalue { i32, i32, i32, i32 } %62, 2, !dbg !33
  %66 = extractvalue { i32, i32, i32, i32 } %62, 3, !dbg !33
  %67 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %59, i1 %61, i32 0, i1 %61, i32 0, i1 %61, i32 0, i1 %61, i32 0, i1 %61) #1, !dbg !33
  %68 = extractvalue { i32, i32, i32, i32 } %67, 0, !dbg !33
  %69 = extractvalue { i32, i32, i32, i32 } %67, 1, !dbg !33
  %70 = extractvalue { i32, i32, i32, i32 } %67, 2, !dbg !33
  %71 = extractvalue { i32, i32, i32, i32 } %67, 3, !dbg !33
  %.v = select i1 %21, i32 %36, i32 %63, !dbg !34
  %.v2 = select i1 %21, i32 %37, i32 %64, !dbg !34
  %.v3 = select i1 %21, i32 %38, i32 %65, !dbg !34
  %.v4 = select i1 %21, i32 %39, i32 %66, !dbg !34
  %.v5 = select i1 %22, i32 %41, i32 %68, !dbg !34
  %.v6 = select i1 %22, i32 %42, i32 %69, !dbg !34
  %.v7 = select i1 %22, i32 %43, i32 %70, !dbg !34
  %.v8 = select i1 %22, i32 %44, i32 %71, !dbg !34
  %72 = sext i32 %10 to i64, !dbg !35
  %73 = getelementptr float, ptr addrspace(1) %2, i64 %72, !dbg !35
  %74 = sext i32 %11 to i64, !dbg !35
  %75 = getelementptr float, ptr addrspace(1) %2, i64 %74, !dbg !35
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.v, i32 %.v2, i32 %.v3, i32 %.v4, ptr addrspace(1) %73, i1 %12) #1, !dbg !36
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.v5, i32 %.v6, i32 %.v7, i32 %.v8, ptr addrspace(1) %75, i1 %13) #1, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7nklon452oxhfxafof4p32g5ybelxydxldqlwkmp3seybr55ess.py", directory: "inductor_cache/7n")
!4 = !{ptr @triton_poi_fused_cat_9, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_9, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_9", linkageName: "triton_poi_fused_cat_9", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 51, scope: !7)
!22 = !DILocation(line: 33, column: 45, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 63, scope: !7)
!25 = !DILocation(line: 33, column: 56, scope: !7)
!26 = !DILocation(line: 34, column: 19, scope: !7)
!27 = !DILocation(line: 37, column: 39, scope: !7)
!28 = !DILocation(line: 37, column: 59, scope: !7)
!29 = !DILocation(line: 37, column: 35, scope: !7)
!30 = !DILocation(line: 37, column: 54, scope: !7)
!31 = !DILocation(line: 37, column: 30, scope: !7)
!32 = !DILocation(line: 37, column: 71, scope: !7)
!33 = !DILocation(line: 37, column: 64, scope: !7)
!34 = !DILocation(line: 38, column: 33, scope: !7)
!35 = !DILocation(line: 39, column: 25, scope: !7)
!36 = !DILocation(line: 39, column: 37, scope: !7)
!37 = !DILocation(line: 39, column: 4, scope: !7)
