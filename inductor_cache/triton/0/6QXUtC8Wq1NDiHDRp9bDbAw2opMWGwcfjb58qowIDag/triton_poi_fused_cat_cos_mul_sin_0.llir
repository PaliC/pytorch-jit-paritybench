; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_cat_cos_mul_sin_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, ptr addrspace(1) %10, i32 %11) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i769 = alloca [7 x i32], align 4
  %result.i.i.i.i714 = alloca [7 x i32], align 4
  %result.i.i.i.i659 = alloca [7 x i32], align 4
  %result.i.i.i.i604 = alloca [7 x i32], align 4
  %result.i.i.i.i549 = alloca [7 x i32], align 4
  %result.i.i.i.i494 = alloca [7 x i32], align 4
  %result.i.i.i.i439 = alloca [7 x i32], align 4
  %result.i.i.i.i386 = alloca [7 x i32], align 4
  %result.i.i.i.i331 = alloca [7 x i32], align 4
  %result.i.i.i.i276 = alloca [7 x i32], align 4
  %result.i.i.i.i221 = alloca [7 x i32], align 4
  %result.i.i.i.i166 = alloca [7 x i32], align 4
  %result.i.i.i.i111 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %13 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %14 = shl i32 %13, 8, !dbg !11
  %15 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %16 = shl i32 %15, 1, !dbg !12
  %17 = and i32 %16, 254, !dbg !12
  %18 = or disjoint i32 %14, %17, !dbg !13
  %19 = icmp slt i32 %18, 256, !dbg !14
  %20 = sext i32 %18 to i64, !dbg !15
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !15
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %21, i1 %19) #5, !dbg !16
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !16
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !16
  %25 = bitcast i32 %23 to float, !dbg !16
  %26 = bitcast i32 %24 to float, !dbg !16
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #5, !dbg !17
  %28 = bitcast i32 %27 to float, !dbg !17
  %29 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !18
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #5, !dbg !19
  %31 = bitcast i32 %30 to float, !dbg !19
  %32 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !20
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 true) #5, !dbg !21
  %34 = bitcast i32 %33 to float, !dbg !21
  %35 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !22
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #5, !dbg !23
  %37 = bitcast i32 %36 to float, !dbg !23
  %38 = fmul float %28, %25, !dbg !24
  %39 = fmul float %28, %26, !dbg !24
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !25
  %40 = fmul float %38, 0x3FE45F3060000000, !dbg !25
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not.i = icmp eq i32 %41, 0, !dbg !25
  %42 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %40) #5, !dbg !25
  %43 = tail call i32 @llvm.nvvm.f2i.rn(float %40) #5, !dbg !25
  %.01.i = select i1 %.not.i, i32 %43, i32 %42, !dbg !25
  %44 = sitofp i32 %.01.i to float, !dbg !25
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not15.i = icmp eq i32 %45, 0, !dbg !25
  %46 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %44, float 0xBFF921FB40000000, float %38) #5, !dbg !25
  %47 = tail call float @llvm.nvvm.fma.rn.f(float %44, float 0xBFF921FB40000000, float %38) #5, !dbg !25
  %.02.i = select i1 %.not15.i, float %47, float %46, !dbg !25
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not16.i = icmp eq i32 %48, 0, !dbg !25
  %49 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %44, float 0xBE74442D00000000, float %.02.i) #5, !dbg !25
  %50 = tail call float @llvm.nvvm.fma.rn.f(float %44, float 0xBE74442D00000000, float %.02.i) #5, !dbg !25
  %.03.i = select i1 %.not16.i, float %50, float %49, !dbg !25
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not17.i = icmp eq i32 %51, 0, !dbg !25
  %52 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %44, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !25
  %53 = tail call float @llvm.nvvm.fma.rn.f(float %44, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !25
  %.04.i = select i1 %.not17.i, float %53, float %52, !dbg !25
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not18.i = icmp eq i32 %54, 0, !dbg !25
  %55 = tail call float @llvm.nvvm.fabs.ftz.f(float %38) #5, !dbg !25
  %56 = tail call float @llvm.nvvm.fabs.f(float %38) #5, !dbg !25
  %.06.i = select i1 %.not18.i, float %56, float %55, !dbg !25
  %57 = fcmp ult float %.06.i, 1.056150e+05, !dbg !25
  br i1 %57, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !25

__nv_isinff.exit.i.i.i:                           ; preds = %12
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not19.i = icmp eq i32 %58, 0, !dbg !25
  %.07.i = select i1 %.not19.i, float %56, float %55, !dbg !25
  %59 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !25
  br i1 %59, label %__nv_fmul_rn.exit.i.i.i, label %63, !dbg !25

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not27.i = icmp eq i32 %60, 0, !dbg !25
  %61 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %38, float 0.000000e+00) #5, !dbg !25
  %62 = tail call float @llvm.nvvm.mul.rn.f(float %38, float 0.000000e+00) #5, !dbg !25
  %.08.i = select i1 %.not27.i, float %62, float %61, !dbg !25
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !25

63:                                               ; preds = %__nv_isinff.exit.i.i.i
  %64 = bitcast float %38 to i32, !dbg !25
  %65 = lshr i32 %64, 23, !dbg !25
  %66 = and i32 %65, 224, !dbg !25
  %67 = add nsw i32 %66, -128, !dbg !25
  %68 = shl i32 %64, 8, !dbg !25
  %69 = or i32 %68, -2147483648, !dbg !25
  %70 = lshr exact i32 %67, 5, !dbg !25
  br label %71, !dbg !25

71:                                               ; preds = %63, %71
  %indvars.iv = phi i64 [ 0, %63 ], [ %indvars.iv.next, %71 ]
  %hi.i.i.i.0.i824 = phi i32 [ 0, %63 ], [ %76, %71 ]
  %72 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !25
  %73 = load i32, ptr addrspace(1) %72, align 4, !dbg !25
  %74 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %73, i32 %69, i32 %hi.i.i.i.0.i824) #6, !dbg !25, !srcloc !26
  %75 = extractvalue { i32, i32 } %74, 0, !dbg !25
  %76 = extractvalue { i32, i32 } %74, 1, !dbg !25
  %77 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !25
  store i32 %75, ptr %77, align 4, !dbg !25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !25
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !25
  br i1 %exitcond.not, label %78, label %71, !dbg !25, !llvm.loop !27

78:                                               ; preds = %71
  %79 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !25
  store i32 %76, ptr %79, align 4, !dbg !25
  %80 = and i32 %65, 31, !dbg !25
  %81 = sub nsw i32 6, %70, !dbg !25
  %82 = sext i32 %81 to i64, !dbg !25
  %83 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %82, !dbg !25
  %84 = load i32, ptr %83, align 4, !dbg !25
  %85 = sub nsw i32 5, %70, !dbg !25
  %86 = sext i32 %85 to i64, !dbg !25
  %87 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %86, !dbg !25
  %88 = load i32, ptr %87, align 4, !dbg !25
  %.not20.i = icmp eq i32 %80, 0, !dbg !25
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %89, !dbg !25

89:                                               ; preds = %78
  %90 = sub nsw i32 4, %70, !dbg !25
  %91 = sub nuw nsw i32 32, %80, !dbg !25
  %92 = shl i32 %84, %80, !dbg !25
  %93 = lshr i32 %88, %91, !dbg !25
  %94 = add i32 %93, %92, !dbg !25
  %95 = shl i32 %88, %80, !dbg !25
  %96 = sext i32 %90 to i64, !dbg !25
  %97 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %96, !dbg !25
  %98 = load i32, ptr %97, align 4, !dbg !25
  %99 = lshr i32 %98, %91, !dbg !25
  %100 = add i32 %99, %95, !dbg !25
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !25

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %89, %78
  %hi.i.i.i.1.i = phi i32 [ %94, %89 ], [ %84, %78 ], !dbg !25
  %lo.i.i.i.0.i = phi i32 [ %100, %89 ], [ %88, %78 ], !dbg !25
  %101 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !25
  %102 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !25
  %103 = shl i32 %lo.i.i.i.0.i, 2, !dbg !25
  %104 = lshr i32 %102, 31, !dbg !25
  %105 = add nuw nsw i32 %104, %101, !dbg !25
  %106 = sub nsw i32 0, %105, !dbg !25
  %.not2123.i = icmp slt i32 %64, 0, !dbg !25
  %spec.select.i = select i1 %.not2123.i, i32 %106, i32 %105, !dbg !25
  %107 = xor i32 %102, %64, !dbg !25
  %.lobit.i = ashr i32 %102, 31, !dbg !25
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %102, !dbg !25
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %103, !dbg !25
  %108 = zext i32 %hi.i.i.i.2.i to i64, !dbg !25
  %109 = shl nuw i64 %108, 32, !dbg !25
  %110 = zext i32 %lo.i.i.i.1.i to i64, !dbg !25
  %111 = or disjoint i64 %109, %110, !dbg !25
  %112 = sitofp i64 %111 to double, !dbg !25
  %113 = fmul double %112, 0x3BF921FB54442D19, !dbg !25
  %114 = fptrunc double %113 to float, !dbg !25
  %115 = fneg float %114, !dbg !25
  %.not2526.i = icmp slt i32 %107, 0, !dbg !25
  %r.i.i.i.0.i = select i1 %.not2526.i, float %115, float %114, !dbg !25
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !25

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %12
  %i.i.1.i = phi i32 [ %.01.i, %12 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !25
  %t.i.i.1.i = phi float [ %.04.i, %12 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !25
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not28.i = icmp eq i32 %116, 0, !dbg !25
  %117 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !25
  %118 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !25
  %.011.i = select i1 %.not28.i, float %118, float %117, !dbg !25
  %119 = and i32 %i.i.1.i, 1, !dbg !25
  %.not29.i = icmp eq i32 %119, 0, !dbg !25
  %120 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !25
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not30.i = icmp eq i32 %121, 0, !dbg !25
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %120, float 0.000000e+00) #5, !dbg !25
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %120, float 0.000000e+00) #5, !dbg !25
  %.012.i = select i1 %.not30.i, float %123, float %122, !dbg !25
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !25

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not31.i = icmp eq i32 %124, 0, !dbg !25
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !25
  %126 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !25
  %.013.i = select i1 %.not31.i, float %126, float %125, !dbg !25
  br label %__internal_fmad.exit2.i.i.i, !dbg !25

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %127 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !25
  %128 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !25
  %129 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !25
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not32.i = icmp eq i32 %130, 0, !dbg !25
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %129, float %.011.i, float %128) #5, !dbg !25
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %129, float %.011.i, float %128) #5, !dbg !25
  %.010.i = select i1 %.not32.i, float %132, float %131, !dbg !25
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not33.i = icmp eq i32 %133, 0, !dbg !25
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %127) #5, !dbg !25
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %127) #5, !dbg !25
  %.09.i = select i1 %.not33.i, float %135, float %134, !dbg !25
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not34.i = icmp eq i32 %136, 0, !dbg !25
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %120) #5, !dbg !25
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %120) #5, !dbg !25
  %.05.i = select i1 %.not34.i, float %138, float %137, !dbg !25
  %139 = and i32 %i.i.1.i, 2, !dbg !25
  %.not35.i = icmp eq i32 %139, 0, !dbg !25
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !25

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not36.i = icmp eq i32 %140, 0, !dbg !25
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !25
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !25
  %.0.i = select i1 %.not36.i, float %142, float %141, !dbg !25
  br label %__nv_sinf.exit, !dbg !25

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !25
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !25
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !25
  %143 = fmul float %39, 0x3FE45F3060000000, !dbg !25
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not.i2 = icmp eq i32 %144, 0, !dbg !25
  %145 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %143) #5, !dbg !25
  %146 = tail call i32 @llvm.nvvm.f2i.rn(float %143) #5, !dbg !25
  %.01.i3 = select i1 %.not.i2, i32 %146, i32 %145, !dbg !25
  %147 = sitofp i32 %.01.i3 to float, !dbg !25
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not15.i4 = icmp eq i32 %148, 0, !dbg !25
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %147, float 0xBFF921FB40000000, float %39) #5, !dbg !25
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %147, float 0xBFF921FB40000000, float %39) #5, !dbg !25
  %.02.i5 = select i1 %.not15.i4, float %150, float %149, !dbg !25
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not16.i6 = icmp eq i32 %151, 0, !dbg !25
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %147, float 0xBE74442D00000000, float %.02.i5) #5, !dbg !25
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %147, float 0xBE74442D00000000, float %.02.i5) #5, !dbg !25
  %.03.i7 = select i1 %.not16.i6, float %153, float %152, !dbg !25
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not17.i8 = icmp eq i32 %154, 0, !dbg !25
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %147, float 0xBCF84698A0000000, float %.03.i7) #5, !dbg !25
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %147, float 0xBCF84698A0000000, float %.03.i7) #5, !dbg !25
  %.04.i9 = select i1 %.not17.i8, float %156, float %155, !dbg !25
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not18.i10 = icmp eq i32 %157, 0, !dbg !25
  %158 = tail call float @llvm.nvvm.fabs.ftz.f(float %39) #5, !dbg !25
  %159 = tail call float @llvm.nvvm.fabs.f(float %39) #5, !dbg !25
  %.06.i11 = select i1 %.not18.i10, float %159, float %158, !dbg !25
  %160 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !25
  br i1 %160, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !25

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not19.i13 = icmp eq i32 %161, 0, !dbg !25
  %.07.i14 = select i1 %.not19.i13, float %159, float %158, !dbg !25
  %162 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !25
  br i1 %162, label %__nv_fmul_rn.exit.i.i.i52, label %166, !dbg !25

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not27.i53 = icmp eq i32 %163, 0, !dbg !25
  %164 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %39, float 0.000000e+00) #5, !dbg !25
  %165 = tail call float @llvm.nvvm.mul.rn.f(float %39, float 0.000000e+00) #5, !dbg !25
  %.08.i54 = select i1 %.not27.i53, float %165, float %164, !dbg !25
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !25

166:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %167 = bitcast float %39 to i32, !dbg !25
  %168 = lshr i32 %167, 23, !dbg !25
  %169 = and i32 %168, 224, !dbg !25
  %170 = add nsw i32 %169, -128, !dbg !25
  %171 = shl i32 %167, 8, !dbg !25
  %172 = or i32 %171, -2147483648, !dbg !25
  %173 = lshr exact i32 %170, 5, !dbg !25
  br label %174, !dbg !25

174:                                              ; preds = %166, %174
  %indvars.iv887 = phi i64 [ 0, %166 ], [ %indvars.iv.next888, %174 ]
  %hi.i.i.i.0.i15826 = phi i32 [ 0, %166 ], [ %179, %174 ]
  %175 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv887, !dbg !25
  %176 = load i32, ptr addrspace(1) %175, align 4, !dbg !25
  %177 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %176, i32 %172, i32 %hi.i.i.i.0.i15826) #6, !dbg !25, !srcloc !26
  %178 = extractvalue { i32, i32 } %177, 0, !dbg !25
  %179 = extractvalue { i32, i32 } %177, 1, !dbg !25
  %180 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv887, !dbg !25
  store i32 %178, ptr %180, align 4, !dbg !25
  %indvars.iv.next888 = add nuw nsw i64 %indvars.iv887, 1, !dbg !25
  %exitcond889.not = icmp eq i64 %indvars.iv.next888, 6, !dbg !25
  br i1 %exitcond889.not, label %181, label %174, !dbg !25, !llvm.loop !29

181:                                              ; preds = %174
  %182 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !25
  store i32 %179, ptr %182, align 4, !dbg !25
  %183 = and i32 %168, 31, !dbg !25
  %184 = sub nsw i32 6, %173, !dbg !25
  %185 = sext i32 %184 to i64, !dbg !25
  %186 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %185, !dbg !25
  %187 = load i32, ptr %186, align 4, !dbg !25
  %188 = sub nsw i32 5, %173, !dbg !25
  %189 = sext i32 %188 to i64, !dbg !25
  %190 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %189, !dbg !25
  %191 = load i32, ptr %190, align 4, !dbg !25
  %.not20.i17 = icmp eq i32 %183, 0, !dbg !25
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %192, !dbg !25

192:                                              ; preds = %181
  %193 = sub nsw i32 4, %173, !dbg !25
  %194 = sub nuw nsw i32 32, %183, !dbg !25
  %195 = shl i32 %187, %183, !dbg !25
  %196 = lshr i32 %191, %194, !dbg !25
  %197 = add i32 %196, %195, !dbg !25
  %198 = shl i32 %191, %183, !dbg !25
  %199 = sext i32 %193 to i64, !dbg !25
  %200 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %199, !dbg !25
  %201 = load i32, ptr %200, align 4, !dbg !25
  %202 = lshr i32 %201, %194, !dbg !25
  %203 = add i32 %202, %198, !dbg !25
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !25

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %192, %181
  %hi.i.i.i.1.i19 = phi i32 [ %197, %192 ], [ %187, %181 ], !dbg !25
  %lo.i.i.i.0.i20 = phi i32 [ %203, %192 ], [ %191, %181 ], !dbg !25
  %204 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !25
  %205 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !25
  %206 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !25
  %207 = lshr i32 %205, 31, !dbg !25
  %208 = add nuw nsw i32 %207, %204, !dbg !25
  %209 = sub nsw i32 0, %208, !dbg !25
  %.not2123.i21 = icmp slt i32 %167, 0, !dbg !25
  %spec.select.i22 = select i1 %.not2123.i21, i32 %209, i32 %208, !dbg !25
  %210 = xor i32 %205, %167, !dbg !25
  %.lobit.i23 = ashr i32 %205, 31, !dbg !25
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %205, !dbg !25
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %206, !dbg !25
  %211 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !25
  %212 = shl nuw i64 %211, 32, !dbg !25
  %213 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !25
  %214 = or disjoint i64 %212, %213, !dbg !25
  %215 = sitofp i64 %214 to double, !dbg !25
  %216 = fmul double %215, 0x3BF921FB54442D19, !dbg !25
  %217 = fptrunc double %216 to float, !dbg !25
  %218 = fneg float %217, !dbg !25
  %.not2526.i27 = icmp slt i32 %210, 0, !dbg !25
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %218, float %217, !dbg !25
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !25

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !25
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !25
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not28.i32 = icmp eq i32 %219, 0, !dbg !25
  %220 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #5, !dbg !25
  %221 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #5, !dbg !25
  %.011.i33 = select i1 %.not28.i32, float %221, float %220, !dbg !25
  %222 = and i32 %i.i.1.i30, 1, !dbg !25
  %.not29.i34 = icmp eq i32 %222, 0, !dbg !25
  %223 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !25
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not30.i35 = icmp eq i32 %224, 0, !dbg !25
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %223, float 0.000000e+00) #5, !dbg !25
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %223, float 0.000000e+00) #5, !dbg !25
  %.012.i36 = select i1 %.not30.i35, float %226, float %225, !dbg !25
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !25

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not31.i38 = icmp eq i32 %227, 0, !dbg !25
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #5, !dbg !25
  %229 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #5, !dbg !25
  %.013.i39 = select i1 %.not31.i38, float %229, float %228, !dbg !25
  br label %__internal_fmad.exit2.i.i.i40, !dbg !25

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %230 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !25
  %231 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !25
  %232 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !25
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not32.i41 = icmp eq i32 %233, 0, !dbg !25
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %232, float %.011.i33, float %231) #5, !dbg !25
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %232, float %.011.i33, float %231) #5, !dbg !25
  %.010.i42 = select i1 %.not32.i41, float %235, float %234, !dbg !25
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not33.i43 = icmp eq i32 %236, 0, !dbg !25
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %230) #5, !dbg !25
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %230) #5, !dbg !25
  %.09.i44 = select i1 %.not33.i43, float %238, float %237, !dbg !25
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not34.i45 = icmp eq i32 %239, 0, !dbg !25
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %223) #5, !dbg !25
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %223) #5, !dbg !25
  %.05.i46 = select i1 %.not34.i45, float %241, float %240, !dbg !25
  %242 = and i32 %i.i.1.i30, 2, !dbg !25
  %.not35.i47 = icmp eq i32 %242, 0, !dbg !25
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !25

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !25
  %.not36.i49 = icmp eq i32 %243, 0, !dbg !25
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #5, !dbg !25
  %245 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #5, !dbg !25
  %.0.i50 = select i1 %.not36.i49, float %245, float %244, !dbg !25
  br label %__nv_sinf.exit55, !dbg !25

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !25
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !25
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i386), !dbg !30
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not.i387 = icmp eq i32 %246, 0, !dbg !30
  %.01.i388 = select i1 %.not.i387, i32 %43, i32 %42, !dbg !30
  %247 = sitofp i32 %.01.i388 to float, !dbg !30
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not15.i389 = icmp eq i32 %248, 0, !dbg !30
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %247, float 0xBFF921FB40000000, float %38) #5, !dbg !30
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %247, float 0xBFF921FB40000000, float %38) #5, !dbg !30
  %.02.i390 = select i1 %.not15.i389, float %250, float %249, !dbg !30
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not16.i391 = icmp eq i32 %251, 0, !dbg !30
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %247, float 0xBE74442D00000000, float %.02.i390) #5, !dbg !30
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %247, float 0xBE74442D00000000, float %.02.i390) #5, !dbg !30
  %.03.i392 = select i1 %.not16.i391, float %253, float %252, !dbg !30
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not17.i393 = icmp eq i32 %254, 0, !dbg !30
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %247, float 0xBCF84698A0000000, float %.03.i392) #5, !dbg !30
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %247, float 0xBCF84698A0000000, float %.03.i392) #5, !dbg !30
  %.04.i394 = select i1 %.not17.i393, float %256, float %255, !dbg !30
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not18.i395 = icmp eq i32 %257, 0, !dbg !30
  %.06.i396 = select i1 %.not18.i395, float %56, float %55, !dbg !30
  %258 = fcmp ult float %.06.i396, 1.056150e+05, !dbg !30
  br i1 %258, label %__internal_trig_reduction_kernel.exit.i.i414, label %__nv_isinff.exit.i.i.i397, !dbg !30

__nv_isinff.exit.i.i.i397:                        ; preds = %__nv_sinf.exit55
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not19.i398 = icmp eq i32 %259, 0, !dbg !30
  %.07.i399 = select i1 %.not19.i398, float %56, float %55, !dbg !30
  %260 = fcmp oeq float %.07.i399, 0x7FF0000000000000, !dbg !30
  br i1 %260, label %__nv_fmul_rn.exit.i.i.i436, label %264, !dbg !30

__nv_fmul_rn.exit.i.i.i436:                       ; preds = %__nv_isinff.exit.i.i.i397
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not27.i437 = icmp eq i32 %261, 0, !dbg !30
  %262 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %38, float 0.000000e+00) #5, !dbg !30
  %263 = tail call float @llvm.nvvm.mul.rn.f(float %38, float 0.000000e+00) #5, !dbg !30
  %.08.i438 = select i1 %.not27.i437, float %263, float %262, !dbg !30
  br label %__internal_trig_reduction_kernel.exit.i.i414, !dbg !30

264:                                              ; preds = %__nv_isinff.exit.i.i.i397
  %265 = bitcast float %38 to i32, !dbg !30
  %266 = lshr i32 %265, 23, !dbg !30
  %267 = and i32 %266, 224, !dbg !30
  %268 = add nsw i32 %267, -128, !dbg !30
  %269 = shl i32 %265, 8, !dbg !30
  %270 = or i32 %269, -2147483648, !dbg !30
  %271 = lshr exact i32 %268, 5, !dbg !30
  br label %272, !dbg !30

272:                                              ; preds = %264, %272
  %indvars.iv890 = phi i64 [ 0, %264 ], [ %indvars.iv.next891, %272 ]
  %hi.i.i.i.0.i400828 = phi i32 [ 0, %264 ], [ %277, %272 ]
  %273 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv890, !dbg !30
  %274 = load i32, ptr addrspace(1) %273, align 4, !dbg !30
  %275 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %274, i32 %270, i32 %hi.i.i.i.0.i400828) #6, !dbg !30, !srcloc !26
  %276 = extractvalue { i32, i32 } %275, 0, !dbg !30
  %277 = extractvalue { i32, i32 } %275, 1, !dbg !30
  %278 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %indvars.iv890, !dbg !30
  store i32 %276, ptr %278, align 4, !dbg !30
  %indvars.iv.next891 = add nuw nsw i64 %indvars.iv890, 1, !dbg !30
  %exitcond892.not = icmp eq i64 %indvars.iv.next891, 6, !dbg !30
  br i1 %exitcond892.not, label %279, label %272, !dbg !30, !llvm.loop !31

279:                                              ; preds = %272
  %280 = getelementptr inbounds i8, ptr %result.i.i.i.i386, i64 24, !dbg !30
  store i32 %277, ptr %280, align 4, !dbg !30
  %281 = and i32 %266, 31, !dbg !30
  %282 = sub nsw i32 6, %271, !dbg !30
  %283 = sext i32 %282 to i64, !dbg !30
  %284 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %283, !dbg !30
  %285 = load i32, ptr %284, align 4, !dbg !30
  %286 = sub nsw i32 5, %271, !dbg !30
  %287 = sext i32 %286 to i64, !dbg !30
  %288 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %287, !dbg !30
  %289 = load i32, ptr %288, align 4, !dbg !30
  %.not20.i402 = icmp eq i32 %281, 0, !dbg !30
  br i1 %.not20.i402, label %__internal_trig_reduction_slowpath.exit.i.i.i403, label %290, !dbg !30

290:                                              ; preds = %279
  %291 = sub nsw i32 4, %271, !dbg !30
  %292 = sub nuw nsw i32 32, %281, !dbg !30
  %293 = shl i32 %285, %281, !dbg !30
  %294 = lshr i32 %289, %292, !dbg !30
  %295 = add i32 %294, %293, !dbg !30
  %296 = shl i32 %289, %281, !dbg !30
  %297 = sext i32 %291 to i64, !dbg !30
  %298 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %297, !dbg !30
  %299 = load i32, ptr %298, align 4, !dbg !30
  %300 = lshr i32 %299, %292, !dbg !30
  %301 = add i32 %300, %296, !dbg !30
  br label %__internal_trig_reduction_slowpath.exit.i.i.i403, !dbg !30

__internal_trig_reduction_slowpath.exit.i.i.i403: ; preds = %290, %279
  %hi.i.i.i.1.i404 = phi i32 [ %295, %290 ], [ %285, %279 ], !dbg !30
  %lo.i.i.i.0.i405 = phi i32 [ %301, %290 ], [ %289, %279 ], !dbg !30
  %302 = lshr i32 %hi.i.i.i.1.i404, 30, !dbg !30
  %303 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i404, i32 %lo.i.i.i.0.i405, i32 2), !dbg !30
  %304 = shl i32 %lo.i.i.i.0.i405, 2, !dbg !30
  %305 = lshr i32 %303, 31, !dbg !30
  %306 = add nuw nsw i32 %305, %302, !dbg !30
  %307 = sub nsw i32 0, %306, !dbg !30
  %.not2123.i406 = icmp slt i32 %265, 0, !dbg !30
  %spec.select.i407 = select i1 %.not2123.i406, i32 %307, i32 %306, !dbg !30
  %308 = xor i32 %303, %265, !dbg !30
  %.lobit.i408 = ashr i32 %303, 31, !dbg !30
  %hi.i.i.i.2.i409 = xor i32 %.lobit.i408, %303, !dbg !30
  %lo.i.i.i.1.i411 = xor i32 %.lobit.i408, %304, !dbg !30
  %309 = zext i32 %hi.i.i.i.2.i409 to i64, !dbg !30
  %310 = shl nuw i64 %309, 32, !dbg !30
  %311 = zext i32 %lo.i.i.i.1.i411 to i64, !dbg !30
  %312 = or disjoint i64 %310, %311, !dbg !30
  %313 = sitofp i64 %312 to double, !dbg !30
  %314 = fmul double %313, 0x3BF921FB54442D19, !dbg !30
  %315 = fptrunc double %314 to float, !dbg !30
  %316 = fneg float %315, !dbg !30
  %.not2526.i412 = icmp slt i32 %308, 0, !dbg !30
  %r.i.i.i.0.i413 = select i1 %.not2526.i412, float %316, float %315, !dbg !30
  br label %__internal_trig_reduction_kernel.exit.i.i414, !dbg !30

__internal_trig_reduction_kernel.exit.i.i414:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i403, %__nv_fmul_rn.exit.i.i.i436, %__nv_sinf.exit55
  %i.i.1.i415 = phi i32 [ %.01.i388, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i436 ], [ %spec.select.i407, %__internal_trig_reduction_slowpath.exit.i.i.i403 ], !dbg !30
  %t.i.i.1.i416 = phi float [ %.04.i394, %__nv_sinf.exit55 ], [ %.08.i438, %__nv_fmul_rn.exit.i.i.i436 ], [ %r.i.i.i.0.i413, %__internal_trig_reduction_slowpath.exit.i.i.i403 ], !dbg !30
  %317 = add i32 %i.i.1.i415, 1, !dbg !30
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not28.i417 = icmp eq i32 %318, 0, !dbg !30
  %319 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i416, float %t.i.i.1.i416) #5, !dbg !30
  %320 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i416, float %t.i.i.1.i416) #5, !dbg !30
  %.011.i418 = select i1 %.not28.i417, float %320, float %319, !dbg !30
  %321 = and i32 %i.i.1.i415, 1, !dbg !30
  %.not29.not.i = icmp eq i32 %321, 0, !dbg !30
  %322 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i416, !dbg !30
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not30.i419 = icmp eq i32 %323, 0, !dbg !30
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i418, float %322, float 0.000000e+00) #5, !dbg !30
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i418, float %322, float 0.000000e+00) #5, !dbg !30
  %.012.i420 = select i1 %.not30.i419, float %325, float %324, !dbg !30
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i433, label %__internal_fmad.exit2.i.i.i421, !dbg !30

__internal_fmad.exit1.i.i.i433:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i414
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not31.i434 = icmp eq i32 %326, 0, !dbg !30
  %327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i418, float 0xBF56C0FDA0000000) #5, !dbg !30
  %328 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i418, float 0xBF56C0FDA0000000) #5, !dbg !30
  %.013.i435 = select i1 %.not31.i434, float %328, float %327, !dbg !30
  br label %__internal_fmad.exit2.i.i.i421, !dbg !30

__internal_fmad.exit2.i.i.i421:                   ; preds = %__internal_fmad.exit1.i.i.i433, %__internal_trig_reduction_kernel.exit.i.i414
  %329 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i433 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i414 ], !dbg !30
  %330 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i433 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i414 ], !dbg !30
  %331 = phi float [ %.013.i435, %__internal_fmad.exit1.i.i.i433 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i414 ], !dbg !30
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not32.i422 = icmp eq i32 %332, 0, !dbg !30
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %331, float %.011.i418, float %330) #5, !dbg !30
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %331, float %.011.i418, float %330) #5, !dbg !30
  %.010.i423 = select i1 %.not32.i422, float %334, float %333, !dbg !30
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not33.i424 = icmp eq i32 %335, 0, !dbg !30
  %336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i423, float %.011.i418, float %329) #5, !dbg !30
  %337 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i423, float %.011.i418, float %329) #5, !dbg !30
  %.09.i425 = select i1 %.not33.i424, float %337, float %336, !dbg !30
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not34.i426 = icmp eq i32 %338, 0, !dbg !30
  %339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i425, float %.012.i420, float %322) #5, !dbg !30
  %340 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i425, float %.012.i420, float %322) #5, !dbg !30
  %.05.i427 = select i1 %.not34.i426, float %340, float %339, !dbg !30
  %341 = and i32 %317, 2, !dbg !30
  %.not35.i428 = icmp eq i32 %341, 0, !dbg !30
  br i1 %.not35.i428, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i429, !dbg !30

__internal_fmad.exit5.i.i.i429:                   ; preds = %__internal_fmad.exit2.i.i.i421
  %342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not36.i430 = icmp eq i32 %342, 0, !dbg !30
  %343 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i427, float -1.000000e+00, float 0.000000e+00) #5, !dbg !30
  %344 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i427, float -1.000000e+00, float 0.000000e+00) #5, !dbg !30
  %.0.i431 = select i1 %.not36.i430, float %344, float %343, !dbg !30
  br label %__nv_cosf.exit, !dbg !30

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i421, %__internal_fmad.exit5.i.i.i429
  %z.i.i.0.i432 = phi float [ %.0.i431, %__internal_fmad.exit5.i.i.i429 ], [ %.05.i427, %__internal_fmad.exit2.i.i.i421 ], !dbg !30
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i386), !dbg !30
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i439), !dbg !30
  %345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not.i440 = icmp eq i32 %345, 0, !dbg !30
  %.01.i441 = select i1 %.not.i440, i32 %146, i32 %145, !dbg !30
  %346 = sitofp i32 %.01.i441 to float, !dbg !30
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not15.i442 = icmp eq i32 %347, 0, !dbg !30
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %346, float 0xBFF921FB40000000, float %39) #5, !dbg !30
  %349 = tail call float @llvm.nvvm.fma.rn.f(float %346, float 0xBFF921FB40000000, float %39) #5, !dbg !30
  %.02.i443 = select i1 %.not15.i442, float %349, float %348, !dbg !30
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not16.i444 = icmp eq i32 %350, 0, !dbg !30
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %346, float 0xBE74442D00000000, float %.02.i443) #5, !dbg !30
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %346, float 0xBE74442D00000000, float %.02.i443) #5, !dbg !30
  %.03.i445 = select i1 %.not16.i444, float %352, float %351, !dbg !30
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not17.i446 = icmp eq i32 %353, 0, !dbg !30
  %354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %346, float 0xBCF84698A0000000, float %.03.i445) #5, !dbg !30
  %355 = tail call float @llvm.nvvm.fma.rn.f(float %346, float 0xBCF84698A0000000, float %.03.i445) #5, !dbg !30
  %.04.i447 = select i1 %.not17.i446, float %355, float %354, !dbg !30
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not18.i448 = icmp eq i32 %356, 0, !dbg !30
  %.06.i449 = select i1 %.not18.i448, float %159, float %158, !dbg !30
  %357 = fcmp ult float %.06.i449, 1.056150e+05, !dbg !30
  br i1 %357, label %__internal_trig_reduction_kernel.exit.i.i467, label %__nv_isinff.exit.i.i.i450, !dbg !30

__nv_isinff.exit.i.i.i450:                        ; preds = %__nv_cosf.exit
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not19.i451 = icmp eq i32 %358, 0, !dbg !30
  %.07.i452 = select i1 %.not19.i451, float %159, float %158, !dbg !30
  %359 = fcmp oeq float %.07.i452, 0x7FF0000000000000, !dbg !30
  br i1 %359, label %__nv_fmul_rn.exit.i.i.i490, label %363, !dbg !30

__nv_fmul_rn.exit.i.i.i490:                       ; preds = %__nv_isinff.exit.i.i.i450
  %360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not27.i491 = icmp eq i32 %360, 0, !dbg !30
  %361 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %39, float 0.000000e+00) #5, !dbg !30
  %362 = tail call float @llvm.nvvm.mul.rn.f(float %39, float 0.000000e+00) #5, !dbg !30
  %.08.i492 = select i1 %.not27.i491, float %362, float %361, !dbg !30
  br label %__internal_trig_reduction_kernel.exit.i.i467, !dbg !30

363:                                              ; preds = %__nv_isinff.exit.i.i.i450
  %364 = bitcast float %39 to i32, !dbg !30
  %365 = lshr i32 %364, 23, !dbg !30
  %366 = and i32 %365, 224, !dbg !30
  %367 = add nsw i32 %366, -128, !dbg !30
  %368 = shl i32 %364, 8, !dbg !30
  %369 = or i32 %368, -2147483648, !dbg !30
  %370 = lshr exact i32 %367, 5, !dbg !30
  br label %371, !dbg !30

371:                                              ; preds = %363, %371
  %indvars.iv893 = phi i64 [ 0, %363 ], [ %indvars.iv.next894, %371 ]
  %hi.i.i.i.0.i453830 = phi i32 [ 0, %363 ], [ %376, %371 ]
  %372 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv893, !dbg !30
  %373 = load i32, ptr addrspace(1) %372, align 4, !dbg !30
  %374 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %373, i32 %369, i32 %hi.i.i.i.0.i453830) #6, !dbg !30, !srcloc !26
  %375 = extractvalue { i32, i32 } %374, 0, !dbg !30
  %376 = extractvalue { i32, i32 } %374, 1, !dbg !30
  %377 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %indvars.iv893, !dbg !30
  store i32 %375, ptr %377, align 4, !dbg !30
  %indvars.iv.next894 = add nuw nsw i64 %indvars.iv893, 1, !dbg !30
  %exitcond895.not = icmp eq i64 %indvars.iv.next894, 6, !dbg !30
  br i1 %exitcond895.not, label %378, label %371, !dbg !30, !llvm.loop !32

378:                                              ; preds = %371
  %379 = getelementptr inbounds i8, ptr %result.i.i.i.i439, i64 24, !dbg !30
  store i32 %376, ptr %379, align 4, !dbg !30
  %380 = and i32 %365, 31, !dbg !30
  %381 = sub nsw i32 6, %370, !dbg !30
  %382 = sext i32 %381 to i64, !dbg !30
  %383 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %382, !dbg !30
  %384 = load i32, ptr %383, align 4, !dbg !30
  %385 = sub nsw i32 5, %370, !dbg !30
  %386 = sext i32 %385 to i64, !dbg !30
  %387 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %386, !dbg !30
  %388 = load i32, ptr %387, align 4, !dbg !30
  %.not20.i455 = icmp eq i32 %380, 0, !dbg !30
  br i1 %.not20.i455, label %__internal_trig_reduction_slowpath.exit.i.i.i456, label %389, !dbg !30

389:                                              ; preds = %378
  %390 = sub nsw i32 4, %370, !dbg !30
  %391 = sub nuw nsw i32 32, %380, !dbg !30
  %392 = shl i32 %384, %380, !dbg !30
  %393 = lshr i32 %388, %391, !dbg !30
  %394 = add i32 %393, %392, !dbg !30
  %395 = shl i32 %388, %380, !dbg !30
  %396 = sext i32 %390 to i64, !dbg !30
  %397 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %396, !dbg !30
  %398 = load i32, ptr %397, align 4, !dbg !30
  %399 = lshr i32 %398, %391, !dbg !30
  %400 = add i32 %399, %395, !dbg !30
  br label %__internal_trig_reduction_slowpath.exit.i.i.i456, !dbg !30

__internal_trig_reduction_slowpath.exit.i.i.i456: ; preds = %389, %378
  %hi.i.i.i.1.i457 = phi i32 [ %394, %389 ], [ %384, %378 ], !dbg !30
  %lo.i.i.i.0.i458 = phi i32 [ %400, %389 ], [ %388, %378 ], !dbg !30
  %401 = lshr i32 %hi.i.i.i.1.i457, 30, !dbg !30
  %402 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i457, i32 %lo.i.i.i.0.i458, i32 2), !dbg !30
  %403 = shl i32 %lo.i.i.i.0.i458, 2, !dbg !30
  %404 = lshr i32 %402, 31, !dbg !30
  %405 = add nuw nsw i32 %404, %401, !dbg !30
  %406 = sub nsw i32 0, %405, !dbg !30
  %.not2123.i459 = icmp slt i32 %364, 0, !dbg !30
  %spec.select.i460 = select i1 %.not2123.i459, i32 %406, i32 %405, !dbg !30
  %407 = xor i32 %402, %364, !dbg !30
  %.lobit.i461 = ashr i32 %402, 31, !dbg !30
  %hi.i.i.i.2.i462 = xor i32 %.lobit.i461, %402, !dbg !30
  %lo.i.i.i.1.i464 = xor i32 %.lobit.i461, %403, !dbg !30
  %408 = zext i32 %hi.i.i.i.2.i462 to i64, !dbg !30
  %409 = shl nuw i64 %408, 32, !dbg !30
  %410 = zext i32 %lo.i.i.i.1.i464 to i64, !dbg !30
  %411 = or disjoint i64 %409, %410, !dbg !30
  %412 = sitofp i64 %411 to double, !dbg !30
  %413 = fmul double %412, 0x3BF921FB54442D19, !dbg !30
  %414 = fptrunc double %413 to float, !dbg !30
  %415 = fneg float %414, !dbg !30
  %.not2526.i465 = icmp slt i32 %407, 0, !dbg !30
  %r.i.i.i.0.i466 = select i1 %.not2526.i465, float %415, float %414, !dbg !30
  br label %__internal_trig_reduction_kernel.exit.i.i467, !dbg !30

__internal_trig_reduction_kernel.exit.i.i467:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i456, %__nv_fmul_rn.exit.i.i.i490, %__nv_cosf.exit
  %i.i.1.i468 = phi i32 [ %.01.i441, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i490 ], [ %spec.select.i460, %__internal_trig_reduction_slowpath.exit.i.i.i456 ], !dbg !30
  %t.i.i.1.i469 = phi float [ %.04.i447, %__nv_cosf.exit ], [ %.08.i492, %__nv_fmul_rn.exit.i.i.i490 ], [ %r.i.i.i.0.i466, %__internal_trig_reduction_slowpath.exit.i.i.i456 ], !dbg !30
  %416 = add i32 %i.i.1.i468, 1, !dbg !30
  %417 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not28.i470 = icmp eq i32 %417, 0, !dbg !30
  %418 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i469, float %t.i.i.1.i469) #5, !dbg !30
  %419 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i469, float %t.i.i.1.i469) #5, !dbg !30
  %.011.i471 = select i1 %.not28.i470, float %419, float %418, !dbg !30
  %420 = and i32 %i.i.1.i468, 1, !dbg !30
  %.not29.not.i472 = icmp eq i32 %420, 0, !dbg !30
  %421 = select i1 %.not29.not.i472, float 1.000000e+00, float %t.i.i.1.i469, !dbg !30
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not30.i473 = icmp eq i32 %422, 0, !dbg !30
  %423 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i471, float %421, float 0.000000e+00) #5, !dbg !30
  %424 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i471, float %421, float 0.000000e+00) #5, !dbg !30
  %.012.i474 = select i1 %.not30.i473, float %424, float %423, !dbg !30
  br i1 %.not29.not.i472, label %__internal_fmad.exit1.i.i.i487, label %__internal_fmad.exit2.i.i.i475, !dbg !30

__internal_fmad.exit1.i.i.i487:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i467
  %425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not31.i488 = icmp eq i32 %425, 0, !dbg !30
  %426 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i471, float 0xBF56C0FDA0000000) #5, !dbg !30
  %427 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i471, float 0xBF56C0FDA0000000) #5, !dbg !30
  %.013.i489 = select i1 %.not31.i488, float %427, float %426, !dbg !30
  br label %__internal_fmad.exit2.i.i.i475, !dbg !30

__internal_fmad.exit2.i.i.i475:                   ; preds = %__internal_fmad.exit1.i.i.i487, %__internal_trig_reduction_kernel.exit.i.i467
  %428 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i487 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i467 ], !dbg !30
  %429 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i487 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i467 ], !dbg !30
  %430 = phi float [ %.013.i489, %__internal_fmad.exit1.i.i.i487 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i467 ], !dbg !30
  %431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not32.i476 = icmp eq i32 %431, 0, !dbg !30
  %432 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %430, float %.011.i471, float %429) #5, !dbg !30
  %433 = tail call float @llvm.nvvm.fma.rn.f(float %430, float %.011.i471, float %429) #5, !dbg !30
  %.010.i477 = select i1 %.not32.i476, float %433, float %432, !dbg !30
  %434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not33.i478 = icmp eq i32 %434, 0, !dbg !30
  %435 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i477, float %.011.i471, float %428) #5, !dbg !30
  %436 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i477, float %.011.i471, float %428) #5, !dbg !30
  %.09.i479 = select i1 %.not33.i478, float %436, float %435, !dbg !30
  %437 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not34.i480 = icmp eq i32 %437, 0, !dbg !30
  %438 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i479, float %.012.i474, float %421) #5, !dbg !30
  %439 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i479, float %.012.i474, float %421) #5, !dbg !30
  %.05.i481 = select i1 %.not34.i480, float %439, float %438, !dbg !30
  %440 = and i32 %416, 2, !dbg !30
  %.not35.i482 = icmp eq i32 %440, 0, !dbg !30
  br i1 %.not35.i482, label %__nv_cosf.exit493, label %__internal_fmad.exit5.i.i.i483, !dbg !30

__internal_fmad.exit5.i.i.i483:                   ; preds = %__internal_fmad.exit2.i.i.i475
  %441 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not36.i484 = icmp eq i32 %441, 0, !dbg !30
  %442 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i481, float -1.000000e+00, float 0.000000e+00) #5, !dbg !30
  %443 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i481, float -1.000000e+00, float 0.000000e+00) #5, !dbg !30
  %.0.i485 = select i1 %.not36.i484, float %443, float %442, !dbg !30
  br label %__nv_cosf.exit493, !dbg !30

__nv_cosf.exit493:                                ; preds = %__internal_fmad.exit2.i.i.i475, %__internal_fmad.exit5.i.i.i483
  %z.i.i.0.i486 = phi float [ %.0.i485, %__internal_fmad.exit5.i.i.i483 ], [ %.05.i481, %__internal_fmad.exit2.i.i.i475 ], !dbg !30
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i439), !dbg !30
  %444 = fmul float %25, %31, !dbg !33
  %445 = fmul float %26, %31, !dbg !33
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !34
  %446 = fmul float %444, 0x3FE45F3060000000, !dbg !34
  %447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i57 = icmp eq i32 %447, 0, !dbg !34
  %448 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %446) #5, !dbg !34
  %449 = tail call i32 @llvm.nvvm.f2i.rn(float %446) #5, !dbg !34
  %.01.i58 = select i1 %.not.i57, i32 %449, i32 %448, !dbg !34
  %450 = sitofp i32 %.01.i58 to float, !dbg !34
  %451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not15.i59 = icmp eq i32 %451, 0, !dbg !34
  %452 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %450, float 0xBFF921FB40000000, float %444) #5, !dbg !34
  %453 = tail call float @llvm.nvvm.fma.rn.f(float %450, float 0xBFF921FB40000000, float %444) #5, !dbg !34
  %.02.i60 = select i1 %.not15.i59, float %453, float %452, !dbg !34
  %454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not16.i61 = icmp eq i32 %454, 0, !dbg !34
  %455 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %450, float 0xBE74442D00000000, float %.02.i60) #5, !dbg !34
  %456 = tail call float @llvm.nvvm.fma.rn.f(float %450, float 0xBE74442D00000000, float %.02.i60) #5, !dbg !34
  %.03.i62 = select i1 %.not16.i61, float %456, float %455, !dbg !34
  %457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not17.i63 = icmp eq i32 %457, 0, !dbg !34
  %458 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %450, float 0xBCF84698A0000000, float %.03.i62) #5, !dbg !34
  %459 = tail call float @llvm.nvvm.fma.rn.f(float %450, float 0xBCF84698A0000000, float %.03.i62) #5, !dbg !34
  %.04.i64 = select i1 %.not17.i63, float %459, float %458, !dbg !34
  %460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not18.i65 = icmp eq i32 %460, 0, !dbg !34
  %461 = tail call float @llvm.nvvm.fabs.ftz.f(float %444) #5, !dbg !34
  %462 = tail call float @llvm.nvvm.fabs.f(float %444) #5, !dbg !34
  %.06.i66 = select i1 %.not18.i65, float %462, float %461, !dbg !34
  %463 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !34
  br i1 %463, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !34

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_cosf.exit493
  %464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not19.i68 = icmp eq i32 %464, 0, !dbg !34
  %.07.i69 = select i1 %.not19.i68, float %462, float %461, !dbg !34
  %465 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !34
  br i1 %465, label %__nv_fmul_rn.exit.i.i.i107, label %469, !dbg !34

__nv_fmul_rn.exit.i.i.i107:                       ; preds = %__nv_isinff.exit.i.i.i67
  %466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not27.i108 = icmp eq i32 %466, 0, !dbg !34
  %467 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %444, float 0.000000e+00) #5, !dbg !34
  %468 = tail call float @llvm.nvvm.mul.rn.f(float %444, float 0.000000e+00) #5, !dbg !34
  %.08.i109 = select i1 %.not27.i108, float %468, float %467, !dbg !34
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !34

469:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %470 = bitcast float %444 to i32, !dbg !34
  %471 = lshr i32 %470, 23, !dbg !34
  %472 = and i32 %471, 224, !dbg !34
  %473 = add nsw i32 %472, -128, !dbg !34
  %474 = shl i32 %470, 8, !dbg !34
  %475 = or i32 %474, -2147483648, !dbg !34
  %476 = lshr exact i32 %473, 5, !dbg !34
  br label %477, !dbg !34

477:                                              ; preds = %469, %477
  %indvars.iv896 = phi i64 [ 0, %469 ], [ %indvars.iv.next897, %477 ]
  %hi.i.i.i.0.i70832 = phi i32 [ 0, %469 ], [ %482, %477 ]
  %478 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv896, !dbg !34
  %479 = load i32, ptr addrspace(1) %478, align 4, !dbg !34
  %480 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %479, i32 %475, i32 %hi.i.i.i.0.i70832) #6, !dbg !34, !srcloc !26
  %481 = extractvalue { i32, i32 } %480, 0, !dbg !34
  %482 = extractvalue { i32, i32 } %480, 1, !dbg !34
  %483 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv896, !dbg !34
  store i32 %481, ptr %483, align 4, !dbg !34
  %indvars.iv.next897 = add nuw nsw i64 %indvars.iv896, 1, !dbg !34
  %exitcond898.not = icmp eq i64 %indvars.iv.next897, 6, !dbg !34
  br i1 %exitcond898.not, label %484, label %477, !dbg !34, !llvm.loop !35

484:                                              ; preds = %477
  %485 = getelementptr inbounds i8, ptr %result.i.i.i.i56, i64 24, !dbg !34
  store i32 %482, ptr %485, align 4, !dbg !34
  %486 = and i32 %471, 31, !dbg !34
  %487 = sub nsw i32 6, %476, !dbg !34
  %488 = sext i32 %487 to i64, !dbg !34
  %489 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %488, !dbg !34
  %490 = load i32, ptr %489, align 4, !dbg !34
  %491 = sub nsw i32 5, %476, !dbg !34
  %492 = sext i32 %491 to i64, !dbg !34
  %493 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %492, !dbg !34
  %494 = load i32, ptr %493, align 4, !dbg !34
  %.not20.i72 = icmp eq i32 %486, 0, !dbg !34
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %495, !dbg !34

495:                                              ; preds = %484
  %496 = sub nsw i32 4, %476, !dbg !34
  %497 = sub nuw nsw i32 32, %486, !dbg !34
  %498 = shl i32 %490, %486, !dbg !34
  %499 = lshr i32 %494, %497, !dbg !34
  %500 = add i32 %499, %498, !dbg !34
  %501 = shl i32 %494, %486, !dbg !34
  %502 = sext i32 %496 to i64, !dbg !34
  %503 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %502, !dbg !34
  %504 = load i32, ptr %503, align 4, !dbg !34
  %505 = lshr i32 %504, %497, !dbg !34
  %506 = add i32 %505, %501, !dbg !34
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !34

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %495, %484
  %hi.i.i.i.1.i74 = phi i32 [ %500, %495 ], [ %490, %484 ], !dbg !34
  %lo.i.i.i.0.i75 = phi i32 [ %506, %495 ], [ %494, %484 ], !dbg !34
  %507 = lshr i32 %hi.i.i.i.1.i74, 30, !dbg !34
  %508 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i74, i32 %lo.i.i.i.0.i75, i32 2), !dbg !34
  %509 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !34
  %510 = lshr i32 %508, 31, !dbg !34
  %511 = add nuw nsw i32 %510, %507, !dbg !34
  %512 = sub nsw i32 0, %511, !dbg !34
  %.not2123.i76 = icmp slt i32 %470, 0, !dbg !34
  %spec.select.i77 = select i1 %.not2123.i76, i32 %512, i32 %511, !dbg !34
  %513 = xor i32 %508, %470, !dbg !34
  %.lobit.i78 = ashr i32 %508, 31, !dbg !34
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %508, !dbg !34
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %509, !dbg !34
  %514 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !34
  %515 = shl nuw i64 %514, 32, !dbg !34
  %516 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !34
  %517 = or disjoint i64 %515, %516, !dbg !34
  %518 = sitofp i64 %517 to double, !dbg !34
  %519 = fmul double %518, 0x3BF921FB54442D19, !dbg !34
  %520 = fptrunc double %519 to float, !dbg !34
  %521 = fneg float %520, !dbg !34
  %.not2526.i82 = icmp slt i32 %513, 0, !dbg !34
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %521, float %520, !dbg !34
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !34

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i107, %__nv_cosf.exit493
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_cosf.exit493 ], [ 0, %__nv_fmul_rn.exit.i.i.i107 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !34
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_cosf.exit493 ], [ %.08.i109, %__nv_fmul_rn.exit.i.i.i107 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !34
  %522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not28.i87 = icmp eq i32 %522, 0, !dbg !34
  %523 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #5, !dbg !34
  %524 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #5, !dbg !34
  %.011.i88 = select i1 %.not28.i87, float %524, float %523, !dbg !34
  %525 = and i32 %i.i.1.i85, 1, !dbg !34
  %.not29.i89 = icmp eq i32 %525, 0, !dbg !34
  %526 = select i1 %.not29.i89, float %t.i.i.1.i86, float 1.000000e+00, !dbg !34
  %527 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not30.i90 = icmp eq i32 %527, 0, !dbg !34
  %528 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %526, float 0.000000e+00) #5, !dbg !34
  %529 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %526, float 0.000000e+00) #5, !dbg !34
  %.012.i91 = select i1 %.not30.i90, float %529, float %528, !dbg !34
  br i1 %.not29.i89, label %__internal_fmad.exit2.i.i.i95, label %__internal_fmad.exit1.i.i.i92, !dbg !34

__internal_fmad.exit1.i.i.i92:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %530 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not31.i93 = icmp eq i32 %530, 0, !dbg !34
  %531 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #5, !dbg !34
  %532 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #5, !dbg !34
  %.013.i94 = select i1 %.not31.i93, float %532, float %531, !dbg !34
  br label %__internal_fmad.exit2.i.i.i95, !dbg !34

__internal_fmad.exit2.i.i.i95:                    ; preds = %__internal_fmad.exit1.i.i.i92, %__internal_trig_reduction_kernel.exit.i.i84
  %533 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i92 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !34
  %534 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i92 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !34
  %535 = phi float [ %.013.i94, %__internal_fmad.exit1.i.i.i92 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !34
  %536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not32.i96 = icmp eq i32 %536, 0, !dbg !34
  %537 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %535, float %.011.i88, float %534) #5, !dbg !34
  %538 = tail call float @llvm.nvvm.fma.rn.f(float %535, float %.011.i88, float %534) #5, !dbg !34
  %.010.i97 = select i1 %.not32.i96, float %538, float %537, !dbg !34
  %539 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not33.i98 = icmp eq i32 %539, 0, !dbg !34
  %540 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i97, float %.011.i88, float %533) #5, !dbg !34
  %541 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i97, float %.011.i88, float %533) #5, !dbg !34
  %.09.i99 = select i1 %.not33.i98, float %541, float %540, !dbg !34
  %542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not34.i100 = icmp eq i32 %542, 0, !dbg !34
  %543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i99, float %.012.i91, float %526) #5, !dbg !34
  %544 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i99, float %.012.i91, float %526) #5, !dbg !34
  %.05.i101 = select i1 %.not34.i100, float %544, float %543, !dbg !34
  %545 = and i32 %i.i.1.i85, 2, !dbg !34
  %.not35.i102 = icmp eq i32 %545, 0, !dbg !34
  br i1 %.not35.i102, label %__nv_sinf.exit110, label %__internal_fmad.exit5.i.i.i103, !dbg !34

__internal_fmad.exit5.i.i.i103:                   ; preds = %__internal_fmad.exit2.i.i.i95
  %546 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not36.i104 = icmp eq i32 %546, 0, !dbg !34
  %547 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #5, !dbg !34
  %548 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #5, !dbg !34
  %.0.i105 = select i1 %.not36.i104, float %548, float %547, !dbg !34
  br label %__nv_sinf.exit110, !dbg !34

__nv_sinf.exit110:                                ; preds = %__internal_fmad.exit2.i.i.i95, %__internal_fmad.exit5.i.i.i103
  %z.i.i.0.i106 = phi float [ %.0.i105, %__internal_fmad.exit5.i.i.i103 ], [ %.05.i101, %__internal_fmad.exit2.i.i.i95 ], !dbg !34
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !34
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !34
  %549 = fmul float %445, 0x3FE45F3060000000, !dbg !34
  %550 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not.i112 = icmp eq i32 %550, 0, !dbg !34
  %551 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %549) #5, !dbg !34
  %552 = tail call i32 @llvm.nvvm.f2i.rn(float %549) #5, !dbg !34
  %.01.i113 = select i1 %.not.i112, i32 %552, i32 %551, !dbg !34
  %553 = sitofp i32 %.01.i113 to float, !dbg !34
  %554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not15.i114 = icmp eq i32 %554, 0, !dbg !34
  %555 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %553, float 0xBFF921FB40000000, float %445) #5, !dbg !34
  %556 = tail call float @llvm.nvvm.fma.rn.f(float %553, float 0xBFF921FB40000000, float %445) #5, !dbg !34
  %.02.i115 = select i1 %.not15.i114, float %556, float %555, !dbg !34
  %557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not16.i116 = icmp eq i32 %557, 0, !dbg !34
  %558 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %553, float 0xBE74442D00000000, float %.02.i115) #5, !dbg !34
  %559 = tail call float @llvm.nvvm.fma.rn.f(float %553, float 0xBE74442D00000000, float %.02.i115) #5, !dbg !34
  %.03.i117 = select i1 %.not16.i116, float %559, float %558, !dbg !34
  %560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not17.i118 = icmp eq i32 %560, 0, !dbg !34
  %561 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %553, float 0xBCF84698A0000000, float %.03.i117) #5, !dbg !34
  %562 = tail call float @llvm.nvvm.fma.rn.f(float %553, float 0xBCF84698A0000000, float %.03.i117) #5, !dbg !34
  %.04.i119 = select i1 %.not17.i118, float %562, float %561, !dbg !34
  %563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not18.i120 = icmp eq i32 %563, 0, !dbg !34
  %564 = tail call float @llvm.nvvm.fabs.ftz.f(float %445) #5, !dbg !34
  %565 = tail call float @llvm.nvvm.fabs.f(float %445) #5, !dbg !34
  %.06.i121 = select i1 %.not18.i120, float %565, float %564, !dbg !34
  %566 = fcmp ult float %.06.i121, 1.056150e+05, !dbg !34
  br i1 %566, label %__internal_trig_reduction_kernel.exit.i.i139, label %__nv_isinff.exit.i.i.i122, !dbg !34

__nv_isinff.exit.i.i.i122:                        ; preds = %__nv_sinf.exit110
  %567 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not19.i123 = icmp eq i32 %567, 0, !dbg !34
  %.07.i124 = select i1 %.not19.i123, float %565, float %564, !dbg !34
  %568 = fcmp oeq float %.07.i124, 0x7FF0000000000000, !dbg !34
  br i1 %568, label %__nv_fmul_rn.exit.i.i.i162, label %572, !dbg !34

__nv_fmul_rn.exit.i.i.i162:                       ; preds = %__nv_isinff.exit.i.i.i122
  %569 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not27.i163 = icmp eq i32 %569, 0, !dbg !34
  %570 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %445, float 0.000000e+00) #5, !dbg !34
  %571 = tail call float @llvm.nvvm.mul.rn.f(float %445, float 0.000000e+00) #5, !dbg !34
  %.08.i164 = select i1 %.not27.i163, float %571, float %570, !dbg !34
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !34

572:                                              ; preds = %__nv_isinff.exit.i.i.i122
  %573 = bitcast float %445 to i32, !dbg !34
  %574 = lshr i32 %573, 23, !dbg !34
  %575 = and i32 %574, 224, !dbg !34
  %576 = add nsw i32 %575, -128, !dbg !34
  %577 = shl i32 %573, 8, !dbg !34
  %578 = or i32 %577, -2147483648, !dbg !34
  %579 = lshr exact i32 %576, 5, !dbg !34
  br label %580, !dbg !34

580:                                              ; preds = %572, %580
  %indvars.iv899 = phi i64 [ 0, %572 ], [ %indvars.iv.next900, %580 ]
  %hi.i.i.i.0.i125834 = phi i32 [ 0, %572 ], [ %585, %580 ]
  %581 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv899, !dbg !34
  %582 = load i32, ptr addrspace(1) %581, align 4, !dbg !34
  %583 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %582, i32 %578, i32 %hi.i.i.i.0.i125834) #6, !dbg !34, !srcloc !26
  %584 = extractvalue { i32, i32 } %583, 0, !dbg !34
  %585 = extractvalue { i32, i32 } %583, 1, !dbg !34
  %586 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %indvars.iv899, !dbg !34
  store i32 %584, ptr %586, align 4, !dbg !34
  %indvars.iv.next900 = add nuw nsw i64 %indvars.iv899, 1, !dbg !34
  %exitcond901.not = icmp eq i64 %indvars.iv.next900, 6, !dbg !34
  br i1 %exitcond901.not, label %587, label %580, !dbg !34, !llvm.loop !36

587:                                              ; preds = %580
  %588 = getelementptr inbounds i8, ptr %result.i.i.i.i111, i64 24, !dbg !34
  store i32 %585, ptr %588, align 4, !dbg !34
  %589 = and i32 %574, 31, !dbg !34
  %590 = sub nsw i32 6, %579, !dbg !34
  %591 = sext i32 %590 to i64, !dbg !34
  %592 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %591, !dbg !34
  %593 = load i32, ptr %592, align 4, !dbg !34
  %594 = sub nsw i32 5, %579, !dbg !34
  %595 = sext i32 %594 to i64, !dbg !34
  %596 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %595, !dbg !34
  %597 = load i32, ptr %596, align 4, !dbg !34
  %.not20.i127 = icmp eq i32 %589, 0, !dbg !34
  br i1 %.not20.i127, label %__internal_trig_reduction_slowpath.exit.i.i.i128, label %598, !dbg !34

598:                                              ; preds = %587
  %599 = sub nsw i32 4, %579, !dbg !34
  %600 = sub nuw nsw i32 32, %589, !dbg !34
  %601 = shl i32 %593, %589, !dbg !34
  %602 = lshr i32 %597, %600, !dbg !34
  %603 = add i32 %602, %601, !dbg !34
  %604 = shl i32 %597, %589, !dbg !34
  %605 = sext i32 %599 to i64, !dbg !34
  %606 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %605, !dbg !34
  %607 = load i32, ptr %606, align 4, !dbg !34
  %608 = lshr i32 %607, %600, !dbg !34
  %609 = add i32 %608, %604, !dbg !34
  br label %__internal_trig_reduction_slowpath.exit.i.i.i128, !dbg !34

__internal_trig_reduction_slowpath.exit.i.i.i128: ; preds = %598, %587
  %hi.i.i.i.1.i129 = phi i32 [ %603, %598 ], [ %593, %587 ], !dbg !34
  %lo.i.i.i.0.i130 = phi i32 [ %609, %598 ], [ %597, %587 ], !dbg !34
  %610 = lshr i32 %hi.i.i.i.1.i129, 30, !dbg !34
  %611 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i129, i32 %lo.i.i.i.0.i130, i32 2), !dbg !34
  %612 = shl i32 %lo.i.i.i.0.i130, 2, !dbg !34
  %613 = lshr i32 %611, 31, !dbg !34
  %614 = add nuw nsw i32 %613, %610, !dbg !34
  %615 = sub nsw i32 0, %614, !dbg !34
  %.not2123.i131 = icmp slt i32 %573, 0, !dbg !34
  %spec.select.i132 = select i1 %.not2123.i131, i32 %615, i32 %614, !dbg !34
  %616 = xor i32 %611, %573, !dbg !34
  %.lobit.i133 = ashr i32 %611, 31, !dbg !34
  %hi.i.i.i.2.i134 = xor i32 %.lobit.i133, %611, !dbg !34
  %lo.i.i.i.1.i136 = xor i32 %.lobit.i133, %612, !dbg !34
  %617 = zext i32 %hi.i.i.i.2.i134 to i64, !dbg !34
  %618 = shl nuw i64 %617, 32, !dbg !34
  %619 = zext i32 %lo.i.i.i.1.i136 to i64, !dbg !34
  %620 = or disjoint i64 %618, %619, !dbg !34
  %621 = sitofp i64 %620 to double, !dbg !34
  %622 = fmul double %621, 0x3BF921FB54442D19, !dbg !34
  %623 = fptrunc double %622 to float, !dbg !34
  %624 = fneg float %623, !dbg !34
  %.not2526.i137 = icmp slt i32 %616, 0, !dbg !34
  %r.i.i.i.0.i138 = select i1 %.not2526.i137, float %624, float %623, !dbg !34
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !34

__internal_trig_reduction_kernel.exit.i.i139:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i128, %__nv_fmul_rn.exit.i.i.i162, %__nv_sinf.exit110
  %i.i.1.i140 = phi i32 [ %.01.i113, %__nv_sinf.exit110 ], [ 0, %__nv_fmul_rn.exit.i.i.i162 ], [ %spec.select.i132, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !34
  %t.i.i.1.i141 = phi float [ %.04.i119, %__nv_sinf.exit110 ], [ %.08.i164, %__nv_fmul_rn.exit.i.i.i162 ], [ %r.i.i.i.0.i138, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !34
  %625 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not28.i142 = icmp eq i32 %625, 0, !dbg !34
  %626 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #5, !dbg !34
  %627 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #5, !dbg !34
  %.011.i143 = select i1 %.not28.i142, float %627, float %626, !dbg !34
  %628 = and i32 %i.i.1.i140, 1, !dbg !34
  %.not29.i144 = icmp eq i32 %628, 0, !dbg !34
  %629 = select i1 %.not29.i144, float %t.i.i.1.i141, float 1.000000e+00, !dbg !34
  %630 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not30.i145 = icmp eq i32 %630, 0, !dbg !34
  %631 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i143, float %629, float 0.000000e+00) #5, !dbg !34
  %632 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i143, float %629, float 0.000000e+00) #5, !dbg !34
  %.012.i146 = select i1 %.not30.i145, float %632, float %631, !dbg !34
  br i1 %.not29.i144, label %__internal_fmad.exit2.i.i.i150, label %__internal_fmad.exit1.i.i.i147, !dbg !34

__internal_fmad.exit1.i.i.i147:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i139
  %633 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not31.i148 = icmp eq i32 %633, 0, !dbg !34
  %634 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #5, !dbg !34
  %635 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #5, !dbg !34
  %.013.i149 = select i1 %.not31.i148, float %635, float %634, !dbg !34
  br label %__internal_fmad.exit2.i.i.i150, !dbg !34

__internal_fmad.exit2.i.i.i150:                   ; preds = %__internal_fmad.exit1.i.i.i147, %__internal_trig_reduction_kernel.exit.i.i139
  %636 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i147 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !34
  %637 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i147 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !34
  %638 = phi float [ %.013.i149, %__internal_fmad.exit1.i.i.i147 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !34
  %639 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not32.i151 = icmp eq i32 %639, 0, !dbg !34
  %640 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %638, float %.011.i143, float %637) #5, !dbg !34
  %641 = tail call float @llvm.nvvm.fma.rn.f(float %638, float %.011.i143, float %637) #5, !dbg !34
  %.010.i152 = select i1 %.not32.i151, float %641, float %640, !dbg !34
  %642 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not33.i153 = icmp eq i32 %642, 0, !dbg !34
  %643 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i152, float %.011.i143, float %636) #5, !dbg !34
  %644 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i152, float %.011.i143, float %636) #5, !dbg !34
  %.09.i154 = select i1 %.not33.i153, float %644, float %643, !dbg !34
  %645 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not34.i155 = icmp eq i32 %645, 0, !dbg !34
  %646 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i154, float %.012.i146, float %629) #5, !dbg !34
  %647 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i154, float %.012.i146, float %629) #5, !dbg !34
  %.05.i156 = select i1 %.not34.i155, float %647, float %646, !dbg !34
  %648 = and i32 %i.i.1.i140, 2, !dbg !34
  %.not35.i157 = icmp eq i32 %648, 0, !dbg !34
  br i1 %.not35.i157, label %__nv_sinf.exit165, label %__internal_fmad.exit5.i.i.i158, !dbg !34

__internal_fmad.exit5.i.i.i158:                   ; preds = %__internal_fmad.exit2.i.i.i150
  %649 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !34
  %.not36.i159 = icmp eq i32 %649, 0, !dbg !34
  %650 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #5, !dbg !34
  %651 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #5, !dbg !34
  %.0.i160 = select i1 %.not36.i159, float %651, float %650, !dbg !34
  br label %__nv_sinf.exit165, !dbg !34

__nv_sinf.exit165:                                ; preds = %__internal_fmad.exit2.i.i.i150, %__internal_fmad.exit5.i.i.i158
  %z.i.i.0.i161 = phi float [ %.0.i160, %__internal_fmad.exit5.i.i.i158 ], [ %.05.i156, %__internal_fmad.exit2.i.i.i150 ], !dbg !34
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !34
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i494), !dbg !37
  %652 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i495 = icmp eq i32 %652, 0, !dbg !37
  %.01.i496 = select i1 %.not.i495, i32 %449, i32 %448, !dbg !37
  %653 = sitofp i32 %.01.i496 to float, !dbg !37
  %654 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not15.i497 = icmp eq i32 %654, 0, !dbg !37
  %655 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %653, float 0xBFF921FB40000000, float %444) #5, !dbg !37
  %656 = tail call float @llvm.nvvm.fma.rn.f(float %653, float 0xBFF921FB40000000, float %444) #5, !dbg !37
  %.02.i498 = select i1 %.not15.i497, float %656, float %655, !dbg !37
  %657 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not16.i499 = icmp eq i32 %657, 0, !dbg !37
  %658 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %653, float 0xBE74442D00000000, float %.02.i498) #5, !dbg !37
  %659 = tail call float @llvm.nvvm.fma.rn.f(float %653, float 0xBE74442D00000000, float %.02.i498) #5, !dbg !37
  %.03.i500 = select i1 %.not16.i499, float %659, float %658, !dbg !37
  %660 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not17.i501 = icmp eq i32 %660, 0, !dbg !37
  %661 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %653, float 0xBCF84698A0000000, float %.03.i500) #5, !dbg !37
  %662 = tail call float @llvm.nvvm.fma.rn.f(float %653, float 0xBCF84698A0000000, float %.03.i500) #5, !dbg !37
  %.04.i502 = select i1 %.not17.i501, float %662, float %661, !dbg !37
  %663 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not18.i503 = icmp eq i32 %663, 0, !dbg !37
  %.06.i504 = select i1 %.not18.i503, float %462, float %461, !dbg !37
  %664 = fcmp ult float %.06.i504, 1.056150e+05, !dbg !37
  br i1 %664, label %__internal_trig_reduction_kernel.exit.i.i522, label %__nv_isinff.exit.i.i.i505, !dbg !37

__nv_isinff.exit.i.i.i505:                        ; preds = %__nv_sinf.exit165
  %665 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not19.i506 = icmp eq i32 %665, 0, !dbg !37
  %.07.i507 = select i1 %.not19.i506, float %462, float %461, !dbg !37
  %666 = fcmp oeq float %.07.i507, 0x7FF0000000000000, !dbg !37
  br i1 %666, label %__nv_fmul_rn.exit.i.i.i545, label %670, !dbg !37

__nv_fmul_rn.exit.i.i.i545:                       ; preds = %__nv_isinff.exit.i.i.i505
  %667 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not27.i546 = icmp eq i32 %667, 0, !dbg !37
  %668 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %444, float 0.000000e+00) #5, !dbg !37
  %669 = tail call float @llvm.nvvm.mul.rn.f(float %444, float 0.000000e+00) #5, !dbg !37
  %.08.i547 = select i1 %.not27.i546, float %669, float %668, !dbg !37
  br label %__internal_trig_reduction_kernel.exit.i.i522, !dbg !37

670:                                              ; preds = %__nv_isinff.exit.i.i.i505
  %671 = bitcast float %444 to i32, !dbg !37
  %672 = lshr i32 %671, 23, !dbg !37
  %673 = and i32 %672, 224, !dbg !37
  %674 = add nsw i32 %673, -128, !dbg !37
  %675 = shl i32 %671, 8, !dbg !37
  %676 = or i32 %675, -2147483648, !dbg !37
  %677 = lshr exact i32 %674, 5, !dbg !37
  br label %678, !dbg !37

678:                                              ; preds = %670, %678
  %indvars.iv902 = phi i64 [ 0, %670 ], [ %indvars.iv.next903, %678 ]
  %hi.i.i.i.0.i508836 = phi i32 [ 0, %670 ], [ %683, %678 ]
  %679 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv902, !dbg !37
  %680 = load i32, ptr addrspace(1) %679, align 4, !dbg !37
  %681 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %680, i32 %676, i32 %hi.i.i.i.0.i508836) #6, !dbg !37, !srcloc !26
  %682 = extractvalue { i32, i32 } %681, 0, !dbg !37
  %683 = extractvalue { i32, i32 } %681, 1, !dbg !37
  %684 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %indvars.iv902, !dbg !37
  store i32 %682, ptr %684, align 4, !dbg !37
  %indvars.iv.next903 = add nuw nsw i64 %indvars.iv902, 1, !dbg !37
  %exitcond904.not = icmp eq i64 %indvars.iv.next903, 6, !dbg !37
  br i1 %exitcond904.not, label %685, label %678, !dbg !37, !llvm.loop !38

685:                                              ; preds = %678
  %686 = getelementptr inbounds i8, ptr %result.i.i.i.i494, i64 24, !dbg !37
  store i32 %683, ptr %686, align 4, !dbg !37
  %687 = and i32 %672, 31, !dbg !37
  %688 = sub nsw i32 6, %677, !dbg !37
  %689 = sext i32 %688 to i64, !dbg !37
  %690 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %689, !dbg !37
  %691 = load i32, ptr %690, align 4, !dbg !37
  %692 = sub nsw i32 5, %677, !dbg !37
  %693 = sext i32 %692 to i64, !dbg !37
  %694 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %693, !dbg !37
  %695 = load i32, ptr %694, align 4, !dbg !37
  %.not20.i510 = icmp eq i32 %687, 0, !dbg !37
  br i1 %.not20.i510, label %__internal_trig_reduction_slowpath.exit.i.i.i511, label %696, !dbg !37

696:                                              ; preds = %685
  %697 = sub nsw i32 4, %677, !dbg !37
  %698 = sub nuw nsw i32 32, %687, !dbg !37
  %699 = shl i32 %691, %687, !dbg !37
  %700 = lshr i32 %695, %698, !dbg !37
  %701 = add i32 %700, %699, !dbg !37
  %702 = shl i32 %695, %687, !dbg !37
  %703 = sext i32 %697 to i64, !dbg !37
  %704 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %703, !dbg !37
  %705 = load i32, ptr %704, align 4, !dbg !37
  %706 = lshr i32 %705, %698, !dbg !37
  %707 = add i32 %706, %702, !dbg !37
  br label %__internal_trig_reduction_slowpath.exit.i.i.i511, !dbg !37

__internal_trig_reduction_slowpath.exit.i.i.i511: ; preds = %696, %685
  %hi.i.i.i.1.i512 = phi i32 [ %701, %696 ], [ %691, %685 ], !dbg !37
  %lo.i.i.i.0.i513 = phi i32 [ %707, %696 ], [ %695, %685 ], !dbg !37
  %708 = lshr i32 %hi.i.i.i.1.i512, 30, !dbg !37
  %709 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i512, i32 %lo.i.i.i.0.i513, i32 2), !dbg !37
  %710 = shl i32 %lo.i.i.i.0.i513, 2, !dbg !37
  %711 = lshr i32 %709, 31, !dbg !37
  %712 = add nuw nsw i32 %711, %708, !dbg !37
  %713 = sub nsw i32 0, %712, !dbg !37
  %.not2123.i514 = icmp slt i32 %671, 0, !dbg !37
  %spec.select.i515 = select i1 %.not2123.i514, i32 %713, i32 %712, !dbg !37
  %714 = xor i32 %709, %671, !dbg !37
  %.lobit.i516 = ashr i32 %709, 31, !dbg !37
  %hi.i.i.i.2.i517 = xor i32 %.lobit.i516, %709, !dbg !37
  %lo.i.i.i.1.i519 = xor i32 %.lobit.i516, %710, !dbg !37
  %715 = zext i32 %hi.i.i.i.2.i517 to i64, !dbg !37
  %716 = shl nuw i64 %715, 32, !dbg !37
  %717 = zext i32 %lo.i.i.i.1.i519 to i64, !dbg !37
  %718 = or disjoint i64 %716, %717, !dbg !37
  %719 = sitofp i64 %718 to double, !dbg !37
  %720 = fmul double %719, 0x3BF921FB54442D19, !dbg !37
  %721 = fptrunc double %720 to float, !dbg !37
  %722 = fneg float %721, !dbg !37
  %.not2526.i520 = icmp slt i32 %714, 0, !dbg !37
  %r.i.i.i.0.i521 = select i1 %.not2526.i520, float %722, float %721, !dbg !37
  br label %__internal_trig_reduction_kernel.exit.i.i522, !dbg !37

__internal_trig_reduction_kernel.exit.i.i522:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i511, %__nv_fmul_rn.exit.i.i.i545, %__nv_sinf.exit165
  %i.i.1.i523 = phi i32 [ %.01.i496, %__nv_sinf.exit165 ], [ 0, %__nv_fmul_rn.exit.i.i.i545 ], [ %spec.select.i515, %__internal_trig_reduction_slowpath.exit.i.i.i511 ], !dbg !37
  %t.i.i.1.i524 = phi float [ %.04.i502, %__nv_sinf.exit165 ], [ %.08.i547, %__nv_fmul_rn.exit.i.i.i545 ], [ %r.i.i.i.0.i521, %__internal_trig_reduction_slowpath.exit.i.i.i511 ], !dbg !37
  %723 = add i32 %i.i.1.i523, 1, !dbg !37
  %724 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not28.i525 = icmp eq i32 %724, 0, !dbg !37
  %725 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i524, float %t.i.i.1.i524) #5, !dbg !37
  %726 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i524, float %t.i.i.1.i524) #5, !dbg !37
  %.011.i526 = select i1 %.not28.i525, float %726, float %725, !dbg !37
  %727 = and i32 %i.i.1.i523, 1, !dbg !37
  %.not29.not.i527 = icmp eq i32 %727, 0, !dbg !37
  %728 = select i1 %.not29.not.i527, float 1.000000e+00, float %t.i.i.1.i524, !dbg !37
  %729 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not30.i528 = icmp eq i32 %729, 0, !dbg !37
  %730 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i526, float %728, float 0.000000e+00) #5, !dbg !37
  %731 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i526, float %728, float 0.000000e+00) #5, !dbg !37
  %.012.i529 = select i1 %.not30.i528, float %731, float %730, !dbg !37
  br i1 %.not29.not.i527, label %__internal_fmad.exit1.i.i.i542, label %__internal_fmad.exit2.i.i.i530, !dbg !37

__internal_fmad.exit1.i.i.i542:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i522
  %732 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not31.i543 = icmp eq i32 %732, 0, !dbg !37
  %733 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i526, float 0xBF56C0FDA0000000) #5, !dbg !37
  %734 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i526, float 0xBF56C0FDA0000000) #5, !dbg !37
  %.013.i544 = select i1 %.not31.i543, float %734, float %733, !dbg !37
  br label %__internal_fmad.exit2.i.i.i530, !dbg !37

__internal_fmad.exit2.i.i.i530:                   ; preds = %__internal_fmad.exit1.i.i.i542, %__internal_trig_reduction_kernel.exit.i.i522
  %735 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i542 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i522 ], !dbg !37
  %736 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i542 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i522 ], !dbg !37
  %737 = phi float [ %.013.i544, %__internal_fmad.exit1.i.i.i542 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i522 ], !dbg !37
  %738 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not32.i531 = icmp eq i32 %738, 0, !dbg !37
  %739 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %737, float %.011.i526, float %736) #5, !dbg !37
  %740 = tail call float @llvm.nvvm.fma.rn.f(float %737, float %.011.i526, float %736) #5, !dbg !37
  %.010.i532 = select i1 %.not32.i531, float %740, float %739, !dbg !37
  %741 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not33.i533 = icmp eq i32 %741, 0, !dbg !37
  %742 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i532, float %.011.i526, float %735) #5, !dbg !37
  %743 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i532, float %.011.i526, float %735) #5, !dbg !37
  %.09.i534 = select i1 %.not33.i533, float %743, float %742, !dbg !37
  %744 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not34.i535 = icmp eq i32 %744, 0, !dbg !37
  %745 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i534, float %.012.i529, float %728) #5, !dbg !37
  %746 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i534, float %.012.i529, float %728) #5, !dbg !37
  %.05.i536 = select i1 %.not34.i535, float %746, float %745, !dbg !37
  %747 = and i32 %723, 2, !dbg !37
  %.not35.i537 = icmp eq i32 %747, 0, !dbg !37
  br i1 %.not35.i537, label %__nv_cosf.exit548, label %__internal_fmad.exit5.i.i.i538, !dbg !37

__internal_fmad.exit5.i.i.i538:                   ; preds = %__internal_fmad.exit2.i.i.i530
  %748 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not36.i539 = icmp eq i32 %748, 0, !dbg !37
  %749 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i536, float -1.000000e+00, float 0.000000e+00) #5, !dbg !37
  %750 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i536, float -1.000000e+00, float 0.000000e+00) #5, !dbg !37
  %.0.i540 = select i1 %.not36.i539, float %750, float %749, !dbg !37
  br label %__nv_cosf.exit548, !dbg !37

__nv_cosf.exit548:                                ; preds = %__internal_fmad.exit2.i.i.i530, %__internal_fmad.exit5.i.i.i538
  %z.i.i.0.i541 = phi float [ %.0.i540, %__internal_fmad.exit5.i.i.i538 ], [ %.05.i536, %__internal_fmad.exit2.i.i.i530 ], !dbg !37
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i494), !dbg !37
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i549), !dbg !37
  %751 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i550 = icmp eq i32 %751, 0, !dbg !37
  %.01.i551 = select i1 %.not.i550, i32 %552, i32 %551, !dbg !37
  %752 = sitofp i32 %.01.i551 to float, !dbg !37
  %753 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not15.i552 = icmp eq i32 %753, 0, !dbg !37
  %754 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %752, float 0xBFF921FB40000000, float %445) #5, !dbg !37
  %755 = tail call float @llvm.nvvm.fma.rn.f(float %752, float 0xBFF921FB40000000, float %445) #5, !dbg !37
  %.02.i553 = select i1 %.not15.i552, float %755, float %754, !dbg !37
  %756 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not16.i554 = icmp eq i32 %756, 0, !dbg !37
  %757 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %752, float 0xBE74442D00000000, float %.02.i553) #5, !dbg !37
  %758 = tail call float @llvm.nvvm.fma.rn.f(float %752, float 0xBE74442D00000000, float %.02.i553) #5, !dbg !37
  %.03.i555 = select i1 %.not16.i554, float %758, float %757, !dbg !37
  %759 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not17.i556 = icmp eq i32 %759, 0, !dbg !37
  %760 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %752, float 0xBCF84698A0000000, float %.03.i555) #5, !dbg !37
  %761 = tail call float @llvm.nvvm.fma.rn.f(float %752, float 0xBCF84698A0000000, float %.03.i555) #5, !dbg !37
  %.04.i557 = select i1 %.not17.i556, float %761, float %760, !dbg !37
  %762 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not18.i558 = icmp eq i32 %762, 0, !dbg !37
  %.06.i559 = select i1 %.not18.i558, float %565, float %564, !dbg !37
  %763 = fcmp ult float %.06.i559, 1.056150e+05, !dbg !37
  br i1 %763, label %__internal_trig_reduction_kernel.exit.i.i577, label %__nv_isinff.exit.i.i.i560, !dbg !37

__nv_isinff.exit.i.i.i560:                        ; preds = %__nv_cosf.exit548
  %764 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not19.i561 = icmp eq i32 %764, 0, !dbg !37
  %.07.i562 = select i1 %.not19.i561, float %565, float %564, !dbg !37
  %765 = fcmp oeq float %.07.i562, 0x7FF0000000000000, !dbg !37
  br i1 %765, label %__nv_fmul_rn.exit.i.i.i600, label %769, !dbg !37

__nv_fmul_rn.exit.i.i.i600:                       ; preds = %__nv_isinff.exit.i.i.i560
  %766 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not27.i601 = icmp eq i32 %766, 0, !dbg !37
  %767 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %445, float 0.000000e+00) #5, !dbg !37
  %768 = tail call float @llvm.nvvm.mul.rn.f(float %445, float 0.000000e+00) #5, !dbg !37
  %.08.i602 = select i1 %.not27.i601, float %768, float %767, !dbg !37
  br label %__internal_trig_reduction_kernel.exit.i.i577, !dbg !37

769:                                              ; preds = %__nv_isinff.exit.i.i.i560
  %770 = bitcast float %445 to i32, !dbg !37
  %771 = lshr i32 %770, 23, !dbg !37
  %772 = and i32 %771, 224, !dbg !37
  %773 = add nsw i32 %772, -128, !dbg !37
  %774 = shl i32 %770, 8, !dbg !37
  %775 = or i32 %774, -2147483648, !dbg !37
  %776 = lshr exact i32 %773, 5, !dbg !37
  br label %777, !dbg !37

777:                                              ; preds = %769, %777
  %indvars.iv905 = phi i64 [ 0, %769 ], [ %indvars.iv.next906, %777 ]
  %hi.i.i.i.0.i563838 = phi i32 [ 0, %769 ], [ %782, %777 ]
  %778 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv905, !dbg !37
  %779 = load i32, ptr addrspace(1) %778, align 4, !dbg !37
  %780 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %779, i32 %775, i32 %hi.i.i.i.0.i563838) #6, !dbg !37, !srcloc !26
  %781 = extractvalue { i32, i32 } %780, 0, !dbg !37
  %782 = extractvalue { i32, i32 } %780, 1, !dbg !37
  %783 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %indvars.iv905, !dbg !37
  store i32 %781, ptr %783, align 4, !dbg !37
  %indvars.iv.next906 = add nuw nsw i64 %indvars.iv905, 1, !dbg !37
  %exitcond907.not = icmp eq i64 %indvars.iv.next906, 6, !dbg !37
  br i1 %exitcond907.not, label %784, label %777, !dbg !37, !llvm.loop !39

784:                                              ; preds = %777
  %785 = getelementptr inbounds i8, ptr %result.i.i.i.i549, i64 24, !dbg !37
  store i32 %782, ptr %785, align 4, !dbg !37
  %786 = and i32 %771, 31, !dbg !37
  %787 = sub nsw i32 6, %776, !dbg !37
  %788 = sext i32 %787 to i64, !dbg !37
  %789 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %788, !dbg !37
  %790 = load i32, ptr %789, align 4, !dbg !37
  %791 = sub nsw i32 5, %776, !dbg !37
  %792 = sext i32 %791 to i64, !dbg !37
  %793 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %792, !dbg !37
  %794 = load i32, ptr %793, align 4, !dbg !37
  %.not20.i565 = icmp eq i32 %786, 0, !dbg !37
  br i1 %.not20.i565, label %__internal_trig_reduction_slowpath.exit.i.i.i566, label %795, !dbg !37

795:                                              ; preds = %784
  %796 = sub nsw i32 4, %776, !dbg !37
  %797 = sub nuw nsw i32 32, %786, !dbg !37
  %798 = shl i32 %790, %786, !dbg !37
  %799 = lshr i32 %794, %797, !dbg !37
  %800 = add i32 %799, %798, !dbg !37
  %801 = shl i32 %794, %786, !dbg !37
  %802 = sext i32 %796 to i64, !dbg !37
  %803 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %802, !dbg !37
  %804 = load i32, ptr %803, align 4, !dbg !37
  %805 = lshr i32 %804, %797, !dbg !37
  %806 = add i32 %805, %801, !dbg !37
  br label %__internal_trig_reduction_slowpath.exit.i.i.i566, !dbg !37

__internal_trig_reduction_slowpath.exit.i.i.i566: ; preds = %795, %784
  %hi.i.i.i.1.i567 = phi i32 [ %800, %795 ], [ %790, %784 ], !dbg !37
  %lo.i.i.i.0.i568 = phi i32 [ %806, %795 ], [ %794, %784 ], !dbg !37
  %807 = lshr i32 %hi.i.i.i.1.i567, 30, !dbg !37
  %808 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i567, i32 %lo.i.i.i.0.i568, i32 2), !dbg !37
  %809 = shl i32 %lo.i.i.i.0.i568, 2, !dbg !37
  %810 = lshr i32 %808, 31, !dbg !37
  %811 = add nuw nsw i32 %810, %807, !dbg !37
  %812 = sub nsw i32 0, %811, !dbg !37
  %.not2123.i569 = icmp slt i32 %770, 0, !dbg !37
  %spec.select.i570 = select i1 %.not2123.i569, i32 %812, i32 %811, !dbg !37
  %813 = xor i32 %808, %770, !dbg !37
  %.lobit.i571 = ashr i32 %808, 31, !dbg !37
  %hi.i.i.i.2.i572 = xor i32 %.lobit.i571, %808, !dbg !37
  %lo.i.i.i.1.i574 = xor i32 %.lobit.i571, %809, !dbg !37
  %814 = zext i32 %hi.i.i.i.2.i572 to i64, !dbg !37
  %815 = shl nuw i64 %814, 32, !dbg !37
  %816 = zext i32 %lo.i.i.i.1.i574 to i64, !dbg !37
  %817 = or disjoint i64 %815, %816, !dbg !37
  %818 = sitofp i64 %817 to double, !dbg !37
  %819 = fmul double %818, 0x3BF921FB54442D19, !dbg !37
  %820 = fptrunc double %819 to float, !dbg !37
  %821 = fneg float %820, !dbg !37
  %.not2526.i575 = icmp slt i32 %813, 0, !dbg !37
  %r.i.i.i.0.i576 = select i1 %.not2526.i575, float %821, float %820, !dbg !37
  br label %__internal_trig_reduction_kernel.exit.i.i577, !dbg !37

__internal_trig_reduction_kernel.exit.i.i577:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i566, %__nv_fmul_rn.exit.i.i.i600, %__nv_cosf.exit548
  %i.i.1.i578 = phi i32 [ %.01.i551, %__nv_cosf.exit548 ], [ 0, %__nv_fmul_rn.exit.i.i.i600 ], [ %spec.select.i570, %__internal_trig_reduction_slowpath.exit.i.i.i566 ], !dbg !37
  %t.i.i.1.i579 = phi float [ %.04.i557, %__nv_cosf.exit548 ], [ %.08.i602, %__nv_fmul_rn.exit.i.i.i600 ], [ %r.i.i.i.0.i576, %__internal_trig_reduction_slowpath.exit.i.i.i566 ], !dbg !37
  %822 = add i32 %i.i.1.i578, 1, !dbg !37
  %823 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not28.i580 = icmp eq i32 %823, 0, !dbg !37
  %824 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i579, float %t.i.i.1.i579) #5, !dbg !37
  %825 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i579, float %t.i.i.1.i579) #5, !dbg !37
  %.011.i581 = select i1 %.not28.i580, float %825, float %824, !dbg !37
  %826 = and i32 %i.i.1.i578, 1, !dbg !37
  %.not29.not.i582 = icmp eq i32 %826, 0, !dbg !37
  %827 = select i1 %.not29.not.i582, float 1.000000e+00, float %t.i.i.1.i579, !dbg !37
  %828 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not30.i583 = icmp eq i32 %828, 0, !dbg !37
  %829 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i581, float %827, float 0.000000e+00) #5, !dbg !37
  %830 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i581, float %827, float 0.000000e+00) #5, !dbg !37
  %.012.i584 = select i1 %.not30.i583, float %830, float %829, !dbg !37
  br i1 %.not29.not.i582, label %__internal_fmad.exit1.i.i.i597, label %__internal_fmad.exit2.i.i.i585, !dbg !37

__internal_fmad.exit1.i.i.i597:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i577
  %831 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not31.i598 = icmp eq i32 %831, 0, !dbg !37
  %832 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i581, float 0xBF56C0FDA0000000) #5, !dbg !37
  %833 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i581, float 0xBF56C0FDA0000000) #5, !dbg !37
  %.013.i599 = select i1 %.not31.i598, float %833, float %832, !dbg !37
  br label %__internal_fmad.exit2.i.i.i585, !dbg !37

__internal_fmad.exit2.i.i.i585:                   ; preds = %__internal_fmad.exit1.i.i.i597, %__internal_trig_reduction_kernel.exit.i.i577
  %834 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i597 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i577 ], !dbg !37
  %835 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i597 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i577 ], !dbg !37
  %836 = phi float [ %.013.i599, %__internal_fmad.exit1.i.i.i597 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i577 ], !dbg !37
  %837 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not32.i586 = icmp eq i32 %837, 0, !dbg !37
  %838 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %836, float %.011.i581, float %835) #5, !dbg !37
  %839 = tail call float @llvm.nvvm.fma.rn.f(float %836, float %.011.i581, float %835) #5, !dbg !37
  %.010.i587 = select i1 %.not32.i586, float %839, float %838, !dbg !37
  %840 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not33.i588 = icmp eq i32 %840, 0, !dbg !37
  %841 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i587, float %.011.i581, float %834) #5, !dbg !37
  %842 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i587, float %.011.i581, float %834) #5, !dbg !37
  %.09.i589 = select i1 %.not33.i588, float %842, float %841, !dbg !37
  %843 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not34.i590 = icmp eq i32 %843, 0, !dbg !37
  %844 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i589, float %.012.i584, float %827) #5, !dbg !37
  %845 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i589, float %.012.i584, float %827) #5, !dbg !37
  %.05.i591 = select i1 %.not34.i590, float %845, float %844, !dbg !37
  %846 = and i32 %822, 2, !dbg !37
  %.not35.i592 = icmp eq i32 %846, 0, !dbg !37
  br i1 %.not35.i592, label %__nv_cosf.exit603, label %__internal_fmad.exit5.i.i.i593, !dbg !37

__internal_fmad.exit5.i.i.i593:                   ; preds = %__internal_fmad.exit2.i.i.i585
  %847 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not36.i594 = icmp eq i32 %847, 0, !dbg !37
  %848 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i591, float -1.000000e+00, float 0.000000e+00) #5, !dbg !37
  %849 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i591, float -1.000000e+00, float 0.000000e+00) #5, !dbg !37
  %.0.i595 = select i1 %.not36.i594, float %849, float %848, !dbg !37
  br label %__nv_cosf.exit603, !dbg !37

__nv_cosf.exit603:                                ; preds = %__internal_fmad.exit2.i.i.i585, %__internal_fmad.exit5.i.i.i593
  %z.i.i.0.i596 = phi float [ %.0.i595, %__internal_fmad.exit5.i.i.i593 ], [ %.05.i591, %__internal_fmad.exit2.i.i.i585 ], !dbg !37
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i549), !dbg !37
  %850 = fmul float %25, %34, !dbg !40
  %851 = fmul float %26, %34, !dbg !40
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !41
  %852 = fmul float %850, 0x3FE45F3060000000, !dbg !41
  %853 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not.i167 = icmp eq i32 %853, 0, !dbg !41
  %854 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %852) #5, !dbg !41
  %855 = tail call i32 @llvm.nvvm.f2i.rn(float %852) #5, !dbg !41
  %.01.i168 = select i1 %.not.i167, i32 %855, i32 %854, !dbg !41
  %856 = sitofp i32 %.01.i168 to float, !dbg !41
  %857 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not15.i169 = icmp eq i32 %857, 0, !dbg !41
  %858 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %856, float 0xBFF921FB40000000, float %850) #5, !dbg !41
  %859 = tail call float @llvm.nvvm.fma.rn.f(float %856, float 0xBFF921FB40000000, float %850) #5, !dbg !41
  %.02.i170 = select i1 %.not15.i169, float %859, float %858, !dbg !41
  %860 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not16.i171 = icmp eq i32 %860, 0, !dbg !41
  %861 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %856, float 0xBE74442D00000000, float %.02.i170) #5, !dbg !41
  %862 = tail call float @llvm.nvvm.fma.rn.f(float %856, float 0xBE74442D00000000, float %.02.i170) #5, !dbg !41
  %.03.i172 = select i1 %.not16.i171, float %862, float %861, !dbg !41
  %863 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not17.i173 = icmp eq i32 %863, 0, !dbg !41
  %864 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %856, float 0xBCF84698A0000000, float %.03.i172) #5, !dbg !41
  %865 = tail call float @llvm.nvvm.fma.rn.f(float %856, float 0xBCF84698A0000000, float %.03.i172) #5, !dbg !41
  %.04.i174 = select i1 %.not17.i173, float %865, float %864, !dbg !41
  %866 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not18.i175 = icmp eq i32 %866, 0, !dbg !41
  %867 = tail call float @llvm.nvvm.fabs.ftz.f(float %850) #5, !dbg !41
  %868 = tail call float @llvm.nvvm.fabs.f(float %850) #5, !dbg !41
  %.06.i176 = select i1 %.not18.i175, float %868, float %867, !dbg !41
  %869 = fcmp ult float %.06.i176, 1.056150e+05, !dbg !41
  br i1 %869, label %__internal_trig_reduction_kernel.exit.i.i194, label %__nv_isinff.exit.i.i.i177, !dbg !41

__nv_isinff.exit.i.i.i177:                        ; preds = %__nv_cosf.exit603
  %870 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not19.i178 = icmp eq i32 %870, 0, !dbg !41
  %.07.i179 = select i1 %.not19.i178, float %868, float %867, !dbg !41
  %871 = fcmp oeq float %.07.i179, 0x7FF0000000000000, !dbg !41
  br i1 %871, label %__nv_fmul_rn.exit.i.i.i217, label %875, !dbg !41

__nv_fmul_rn.exit.i.i.i217:                       ; preds = %__nv_isinff.exit.i.i.i177
  %872 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not27.i218 = icmp eq i32 %872, 0, !dbg !41
  %873 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %850, float 0.000000e+00) #5, !dbg !41
  %874 = tail call float @llvm.nvvm.mul.rn.f(float %850, float 0.000000e+00) #5, !dbg !41
  %.08.i219 = select i1 %.not27.i218, float %874, float %873, !dbg !41
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !41

875:                                              ; preds = %__nv_isinff.exit.i.i.i177
  %876 = bitcast float %850 to i32, !dbg !41
  %877 = lshr i32 %876, 23, !dbg !41
  %878 = and i32 %877, 224, !dbg !41
  %879 = add nsw i32 %878, -128, !dbg !41
  %880 = shl i32 %876, 8, !dbg !41
  %881 = or i32 %880, -2147483648, !dbg !41
  %882 = lshr exact i32 %879, 5, !dbg !41
  br label %883, !dbg !41

883:                                              ; preds = %875, %883
  %indvars.iv908 = phi i64 [ 0, %875 ], [ %indvars.iv.next909, %883 ]
  %hi.i.i.i.0.i180840 = phi i32 [ 0, %875 ], [ %888, %883 ]
  %884 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv908, !dbg !41
  %885 = load i32, ptr addrspace(1) %884, align 4, !dbg !41
  %886 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %885, i32 %881, i32 %hi.i.i.i.0.i180840) #6, !dbg !41, !srcloc !26
  %887 = extractvalue { i32, i32 } %886, 0, !dbg !41
  %888 = extractvalue { i32, i32 } %886, 1, !dbg !41
  %889 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %indvars.iv908, !dbg !41
  store i32 %887, ptr %889, align 4, !dbg !41
  %indvars.iv.next909 = add nuw nsw i64 %indvars.iv908, 1, !dbg !41
  %exitcond910.not = icmp eq i64 %indvars.iv.next909, 6, !dbg !41
  br i1 %exitcond910.not, label %890, label %883, !dbg !41, !llvm.loop !42

890:                                              ; preds = %883
  %891 = getelementptr inbounds i8, ptr %result.i.i.i.i166, i64 24, !dbg !41
  store i32 %888, ptr %891, align 4, !dbg !41
  %892 = and i32 %877, 31, !dbg !41
  %893 = sub nsw i32 6, %882, !dbg !41
  %894 = sext i32 %893 to i64, !dbg !41
  %895 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %894, !dbg !41
  %896 = load i32, ptr %895, align 4, !dbg !41
  %897 = sub nsw i32 5, %882, !dbg !41
  %898 = sext i32 %897 to i64, !dbg !41
  %899 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %898, !dbg !41
  %900 = load i32, ptr %899, align 4, !dbg !41
  %.not20.i182 = icmp eq i32 %892, 0, !dbg !41
  br i1 %.not20.i182, label %__internal_trig_reduction_slowpath.exit.i.i.i183, label %901, !dbg !41

901:                                              ; preds = %890
  %902 = sub nsw i32 4, %882, !dbg !41
  %903 = sub nuw nsw i32 32, %892, !dbg !41
  %904 = shl i32 %896, %892, !dbg !41
  %905 = lshr i32 %900, %903, !dbg !41
  %906 = add i32 %905, %904, !dbg !41
  %907 = shl i32 %900, %892, !dbg !41
  %908 = sext i32 %902 to i64, !dbg !41
  %909 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %908, !dbg !41
  %910 = load i32, ptr %909, align 4, !dbg !41
  %911 = lshr i32 %910, %903, !dbg !41
  %912 = add i32 %911, %907, !dbg !41
  br label %__internal_trig_reduction_slowpath.exit.i.i.i183, !dbg !41

__internal_trig_reduction_slowpath.exit.i.i.i183: ; preds = %901, %890
  %hi.i.i.i.1.i184 = phi i32 [ %906, %901 ], [ %896, %890 ], !dbg !41
  %lo.i.i.i.0.i185 = phi i32 [ %912, %901 ], [ %900, %890 ], !dbg !41
  %913 = lshr i32 %hi.i.i.i.1.i184, 30, !dbg !41
  %914 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i184, i32 %lo.i.i.i.0.i185, i32 2), !dbg !41
  %915 = shl i32 %lo.i.i.i.0.i185, 2, !dbg !41
  %916 = lshr i32 %914, 31, !dbg !41
  %917 = add nuw nsw i32 %916, %913, !dbg !41
  %918 = sub nsw i32 0, %917, !dbg !41
  %.not2123.i186 = icmp slt i32 %876, 0, !dbg !41
  %spec.select.i187 = select i1 %.not2123.i186, i32 %918, i32 %917, !dbg !41
  %919 = xor i32 %914, %876, !dbg !41
  %.lobit.i188 = ashr i32 %914, 31, !dbg !41
  %hi.i.i.i.2.i189 = xor i32 %.lobit.i188, %914, !dbg !41
  %lo.i.i.i.1.i191 = xor i32 %.lobit.i188, %915, !dbg !41
  %920 = zext i32 %hi.i.i.i.2.i189 to i64, !dbg !41
  %921 = shl nuw i64 %920, 32, !dbg !41
  %922 = zext i32 %lo.i.i.i.1.i191 to i64, !dbg !41
  %923 = or disjoint i64 %921, %922, !dbg !41
  %924 = sitofp i64 %923 to double, !dbg !41
  %925 = fmul double %924, 0x3BF921FB54442D19, !dbg !41
  %926 = fptrunc double %925 to float, !dbg !41
  %927 = fneg float %926, !dbg !41
  %.not2526.i192 = icmp slt i32 %919, 0, !dbg !41
  %r.i.i.i.0.i193 = select i1 %.not2526.i192, float %927, float %926, !dbg !41
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !41

__internal_trig_reduction_kernel.exit.i.i194:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i183, %__nv_fmul_rn.exit.i.i.i217, %__nv_cosf.exit603
  %i.i.1.i195 = phi i32 [ %.01.i168, %__nv_cosf.exit603 ], [ 0, %__nv_fmul_rn.exit.i.i.i217 ], [ %spec.select.i187, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !41
  %t.i.i.1.i196 = phi float [ %.04.i174, %__nv_cosf.exit603 ], [ %.08.i219, %__nv_fmul_rn.exit.i.i.i217 ], [ %r.i.i.i.0.i193, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !41
  %928 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not28.i197 = icmp eq i32 %928, 0, !dbg !41
  %929 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #5, !dbg !41
  %930 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #5, !dbg !41
  %.011.i198 = select i1 %.not28.i197, float %930, float %929, !dbg !41
  %931 = and i32 %i.i.1.i195, 1, !dbg !41
  %.not29.i199 = icmp eq i32 %931, 0, !dbg !41
  %932 = select i1 %.not29.i199, float %t.i.i.1.i196, float 1.000000e+00, !dbg !41
  %933 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not30.i200 = icmp eq i32 %933, 0, !dbg !41
  %934 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i198, float %932, float 0.000000e+00) #5, !dbg !41
  %935 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i198, float %932, float 0.000000e+00) #5, !dbg !41
  %.012.i201 = select i1 %.not30.i200, float %935, float %934, !dbg !41
  br i1 %.not29.i199, label %__internal_fmad.exit2.i.i.i205, label %__internal_fmad.exit1.i.i.i202, !dbg !41

__internal_fmad.exit1.i.i.i202:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i194
  %936 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not31.i203 = icmp eq i32 %936, 0, !dbg !41
  %937 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #5, !dbg !41
  %938 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #5, !dbg !41
  %.013.i204 = select i1 %.not31.i203, float %938, float %937, !dbg !41
  br label %__internal_fmad.exit2.i.i.i205, !dbg !41

__internal_fmad.exit2.i.i.i205:                   ; preds = %__internal_fmad.exit1.i.i.i202, %__internal_trig_reduction_kernel.exit.i.i194
  %939 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i202 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !41
  %940 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i202 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !41
  %941 = phi float [ %.013.i204, %__internal_fmad.exit1.i.i.i202 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !41
  %942 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not32.i206 = icmp eq i32 %942, 0, !dbg !41
  %943 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %941, float %.011.i198, float %940) #5, !dbg !41
  %944 = tail call float @llvm.nvvm.fma.rn.f(float %941, float %.011.i198, float %940) #5, !dbg !41
  %.010.i207 = select i1 %.not32.i206, float %944, float %943, !dbg !41
  %945 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not33.i208 = icmp eq i32 %945, 0, !dbg !41
  %946 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i207, float %.011.i198, float %939) #5, !dbg !41
  %947 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i207, float %.011.i198, float %939) #5, !dbg !41
  %.09.i209 = select i1 %.not33.i208, float %947, float %946, !dbg !41
  %948 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not34.i210 = icmp eq i32 %948, 0, !dbg !41
  %949 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i209, float %.012.i201, float %932) #5, !dbg !41
  %950 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i209, float %.012.i201, float %932) #5, !dbg !41
  %.05.i211 = select i1 %.not34.i210, float %950, float %949, !dbg !41
  %951 = and i32 %i.i.1.i195, 2, !dbg !41
  %.not35.i212 = icmp eq i32 %951, 0, !dbg !41
  br i1 %.not35.i212, label %__nv_sinf.exit220, label %__internal_fmad.exit5.i.i.i213, !dbg !41

__internal_fmad.exit5.i.i.i213:                   ; preds = %__internal_fmad.exit2.i.i.i205
  %952 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not36.i214 = icmp eq i32 %952, 0, !dbg !41
  %953 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i211, float -1.000000e+00, float 0.000000e+00) #5, !dbg !41
  %954 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i211, float -1.000000e+00, float 0.000000e+00) #5, !dbg !41
  %.0.i215 = select i1 %.not36.i214, float %954, float %953, !dbg !41
  br label %__nv_sinf.exit220, !dbg !41

__nv_sinf.exit220:                                ; preds = %__internal_fmad.exit2.i.i.i205, %__internal_fmad.exit5.i.i.i213
  %z.i.i.0.i216 = phi float [ %.0.i215, %__internal_fmad.exit5.i.i.i213 ], [ %.05.i211, %__internal_fmad.exit2.i.i.i205 ], !dbg !41
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !41
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i221), !dbg !41
  %955 = fmul float %851, 0x3FE45F3060000000, !dbg !41
  %956 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not.i222 = icmp eq i32 %956, 0, !dbg !41
  %957 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %955) #5, !dbg !41
  %958 = tail call i32 @llvm.nvvm.f2i.rn(float %955) #5, !dbg !41
  %.01.i223 = select i1 %.not.i222, i32 %958, i32 %957, !dbg !41
  %959 = sitofp i32 %.01.i223 to float, !dbg !41
  %960 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not15.i224 = icmp eq i32 %960, 0, !dbg !41
  %961 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %959, float 0xBFF921FB40000000, float %851) #5, !dbg !41
  %962 = tail call float @llvm.nvvm.fma.rn.f(float %959, float 0xBFF921FB40000000, float %851) #5, !dbg !41
  %.02.i225 = select i1 %.not15.i224, float %962, float %961, !dbg !41
  %963 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not16.i226 = icmp eq i32 %963, 0, !dbg !41
  %964 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %959, float 0xBE74442D00000000, float %.02.i225) #5, !dbg !41
  %965 = tail call float @llvm.nvvm.fma.rn.f(float %959, float 0xBE74442D00000000, float %.02.i225) #5, !dbg !41
  %.03.i227 = select i1 %.not16.i226, float %965, float %964, !dbg !41
  %966 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not17.i228 = icmp eq i32 %966, 0, !dbg !41
  %967 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %959, float 0xBCF84698A0000000, float %.03.i227) #5, !dbg !41
  %968 = tail call float @llvm.nvvm.fma.rn.f(float %959, float 0xBCF84698A0000000, float %.03.i227) #5, !dbg !41
  %.04.i229 = select i1 %.not17.i228, float %968, float %967, !dbg !41
  %969 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not18.i230 = icmp eq i32 %969, 0, !dbg !41
  %970 = tail call float @llvm.nvvm.fabs.ftz.f(float %851) #5, !dbg !41
  %971 = tail call float @llvm.nvvm.fabs.f(float %851) #5, !dbg !41
  %.06.i231 = select i1 %.not18.i230, float %971, float %970, !dbg !41
  %972 = fcmp ult float %.06.i231, 1.056150e+05, !dbg !41
  br i1 %972, label %__internal_trig_reduction_kernel.exit.i.i249, label %__nv_isinff.exit.i.i.i232, !dbg !41

__nv_isinff.exit.i.i.i232:                        ; preds = %__nv_sinf.exit220
  %973 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not19.i233 = icmp eq i32 %973, 0, !dbg !41
  %.07.i234 = select i1 %.not19.i233, float %971, float %970, !dbg !41
  %974 = fcmp oeq float %.07.i234, 0x7FF0000000000000, !dbg !41
  br i1 %974, label %__nv_fmul_rn.exit.i.i.i272, label %978, !dbg !41

__nv_fmul_rn.exit.i.i.i272:                       ; preds = %__nv_isinff.exit.i.i.i232
  %975 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not27.i273 = icmp eq i32 %975, 0, !dbg !41
  %976 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %851, float 0.000000e+00) #5, !dbg !41
  %977 = tail call float @llvm.nvvm.mul.rn.f(float %851, float 0.000000e+00) #5, !dbg !41
  %.08.i274 = select i1 %.not27.i273, float %977, float %976, !dbg !41
  br label %__internal_trig_reduction_kernel.exit.i.i249, !dbg !41

978:                                              ; preds = %__nv_isinff.exit.i.i.i232
  %979 = bitcast float %851 to i32, !dbg !41
  %980 = lshr i32 %979, 23, !dbg !41
  %981 = and i32 %980, 224, !dbg !41
  %982 = add nsw i32 %981, -128, !dbg !41
  %983 = shl i32 %979, 8, !dbg !41
  %984 = or i32 %983, -2147483648, !dbg !41
  %985 = lshr exact i32 %982, 5, !dbg !41
  br label %986, !dbg !41

986:                                              ; preds = %978, %986
  %indvars.iv911 = phi i64 [ 0, %978 ], [ %indvars.iv.next912, %986 ]
  %hi.i.i.i.0.i235842 = phi i32 [ 0, %978 ], [ %991, %986 ]
  %987 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv911, !dbg !41
  %988 = load i32, ptr addrspace(1) %987, align 4, !dbg !41
  %989 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %988, i32 %984, i32 %hi.i.i.i.0.i235842) #6, !dbg !41, !srcloc !26
  %990 = extractvalue { i32, i32 } %989, 0, !dbg !41
  %991 = extractvalue { i32, i32 } %989, 1, !dbg !41
  %992 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %indvars.iv911, !dbg !41
  store i32 %990, ptr %992, align 4, !dbg !41
  %indvars.iv.next912 = add nuw nsw i64 %indvars.iv911, 1, !dbg !41
  %exitcond913.not = icmp eq i64 %indvars.iv.next912, 6, !dbg !41
  br i1 %exitcond913.not, label %993, label %986, !dbg !41, !llvm.loop !43

993:                                              ; preds = %986
  %994 = getelementptr inbounds i8, ptr %result.i.i.i.i221, i64 24, !dbg !41
  store i32 %991, ptr %994, align 4, !dbg !41
  %995 = and i32 %980, 31, !dbg !41
  %996 = sub nsw i32 6, %985, !dbg !41
  %997 = sext i32 %996 to i64, !dbg !41
  %998 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %997, !dbg !41
  %999 = load i32, ptr %998, align 4, !dbg !41
  %1000 = sub nsw i32 5, %985, !dbg !41
  %1001 = sext i32 %1000 to i64, !dbg !41
  %1002 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %1001, !dbg !41
  %1003 = load i32, ptr %1002, align 4, !dbg !41
  %.not20.i237 = icmp eq i32 %995, 0, !dbg !41
  br i1 %.not20.i237, label %__internal_trig_reduction_slowpath.exit.i.i.i238, label %1004, !dbg !41

1004:                                             ; preds = %993
  %1005 = sub nsw i32 4, %985, !dbg !41
  %1006 = sub nuw nsw i32 32, %995, !dbg !41
  %1007 = shl i32 %999, %995, !dbg !41
  %1008 = lshr i32 %1003, %1006, !dbg !41
  %1009 = add i32 %1008, %1007, !dbg !41
  %1010 = shl i32 %1003, %995, !dbg !41
  %1011 = sext i32 %1005 to i64, !dbg !41
  %1012 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %1011, !dbg !41
  %1013 = load i32, ptr %1012, align 4, !dbg !41
  %1014 = lshr i32 %1013, %1006, !dbg !41
  %1015 = add i32 %1014, %1010, !dbg !41
  br label %__internal_trig_reduction_slowpath.exit.i.i.i238, !dbg !41

__internal_trig_reduction_slowpath.exit.i.i.i238: ; preds = %1004, %993
  %hi.i.i.i.1.i239 = phi i32 [ %1009, %1004 ], [ %999, %993 ], !dbg !41
  %lo.i.i.i.0.i240 = phi i32 [ %1015, %1004 ], [ %1003, %993 ], !dbg !41
  %1016 = lshr i32 %hi.i.i.i.1.i239, 30, !dbg !41
  %1017 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i239, i32 %lo.i.i.i.0.i240, i32 2), !dbg !41
  %1018 = shl i32 %lo.i.i.i.0.i240, 2, !dbg !41
  %1019 = lshr i32 %1017, 31, !dbg !41
  %1020 = add nuw nsw i32 %1019, %1016, !dbg !41
  %1021 = sub nsw i32 0, %1020, !dbg !41
  %.not2123.i241 = icmp slt i32 %979, 0, !dbg !41
  %spec.select.i242 = select i1 %.not2123.i241, i32 %1021, i32 %1020, !dbg !41
  %1022 = xor i32 %1017, %979, !dbg !41
  %.lobit.i243 = ashr i32 %1017, 31, !dbg !41
  %hi.i.i.i.2.i244 = xor i32 %.lobit.i243, %1017, !dbg !41
  %lo.i.i.i.1.i246 = xor i32 %.lobit.i243, %1018, !dbg !41
  %1023 = zext i32 %hi.i.i.i.2.i244 to i64, !dbg !41
  %1024 = shl nuw i64 %1023, 32, !dbg !41
  %1025 = zext i32 %lo.i.i.i.1.i246 to i64, !dbg !41
  %1026 = or disjoint i64 %1024, %1025, !dbg !41
  %1027 = sitofp i64 %1026 to double, !dbg !41
  %1028 = fmul double %1027, 0x3BF921FB54442D19, !dbg !41
  %1029 = fptrunc double %1028 to float, !dbg !41
  %1030 = fneg float %1029, !dbg !41
  %.not2526.i247 = icmp slt i32 %1022, 0, !dbg !41
  %r.i.i.i.0.i248 = select i1 %.not2526.i247, float %1030, float %1029, !dbg !41
  br label %__internal_trig_reduction_kernel.exit.i.i249, !dbg !41

__internal_trig_reduction_kernel.exit.i.i249:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i238, %__nv_fmul_rn.exit.i.i.i272, %__nv_sinf.exit220
  %i.i.1.i250 = phi i32 [ %.01.i223, %__nv_sinf.exit220 ], [ 0, %__nv_fmul_rn.exit.i.i.i272 ], [ %spec.select.i242, %__internal_trig_reduction_slowpath.exit.i.i.i238 ], !dbg !41
  %t.i.i.1.i251 = phi float [ %.04.i229, %__nv_sinf.exit220 ], [ %.08.i274, %__nv_fmul_rn.exit.i.i.i272 ], [ %r.i.i.i.0.i248, %__internal_trig_reduction_slowpath.exit.i.i.i238 ], !dbg !41
  %1031 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not28.i252 = icmp eq i32 %1031, 0, !dbg !41
  %1032 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i251, float %t.i.i.1.i251) #5, !dbg !41
  %1033 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i251, float %t.i.i.1.i251) #5, !dbg !41
  %.011.i253 = select i1 %.not28.i252, float %1033, float %1032, !dbg !41
  %1034 = and i32 %i.i.1.i250, 1, !dbg !41
  %.not29.i254 = icmp eq i32 %1034, 0, !dbg !41
  %1035 = select i1 %.not29.i254, float %t.i.i.1.i251, float 1.000000e+00, !dbg !41
  %1036 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not30.i255 = icmp eq i32 %1036, 0, !dbg !41
  %1037 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i253, float %1035, float 0.000000e+00) #5, !dbg !41
  %1038 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i253, float %1035, float 0.000000e+00) #5, !dbg !41
  %.012.i256 = select i1 %.not30.i255, float %1038, float %1037, !dbg !41
  br i1 %.not29.i254, label %__internal_fmad.exit2.i.i.i260, label %__internal_fmad.exit1.i.i.i257, !dbg !41

__internal_fmad.exit1.i.i.i257:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i249
  %1039 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not31.i258 = icmp eq i32 %1039, 0, !dbg !41
  %1040 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i253, float 0xBF56C0FDA0000000) #5, !dbg !41
  %1041 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i253, float 0xBF56C0FDA0000000) #5, !dbg !41
  %.013.i259 = select i1 %.not31.i258, float %1041, float %1040, !dbg !41
  br label %__internal_fmad.exit2.i.i.i260, !dbg !41

__internal_fmad.exit2.i.i.i260:                   ; preds = %__internal_fmad.exit1.i.i.i257, %__internal_trig_reduction_kernel.exit.i.i249
  %1042 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i257 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !41
  %1043 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i257 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !41
  %1044 = phi float [ %.013.i259, %__internal_fmad.exit1.i.i.i257 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !41
  %1045 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not32.i261 = icmp eq i32 %1045, 0, !dbg !41
  %1046 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1044, float %.011.i253, float %1043) #5, !dbg !41
  %1047 = tail call float @llvm.nvvm.fma.rn.f(float %1044, float %.011.i253, float %1043) #5, !dbg !41
  %.010.i262 = select i1 %.not32.i261, float %1047, float %1046, !dbg !41
  %1048 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not33.i263 = icmp eq i32 %1048, 0, !dbg !41
  %1049 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i262, float %.011.i253, float %1042) #5, !dbg !41
  %1050 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i262, float %.011.i253, float %1042) #5, !dbg !41
  %.09.i264 = select i1 %.not33.i263, float %1050, float %1049, !dbg !41
  %1051 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not34.i265 = icmp eq i32 %1051, 0, !dbg !41
  %1052 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i264, float %.012.i256, float %1035) #5, !dbg !41
  %1053 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i264, float %.012.i256, float %1035) #5, !dbg !41
  %.05.i266 = select i1 %.not34.i265, float %1053, float %1052, !dbg !41
  %1054 = and i32 %i.i.1.i250, 2, !dbg !41
  %.not35.i267 = icmp eq i32 %1054, 0, !dbg !41
  br i1 %.not35.i267, label %__nv_sinf.exit275, label %__internal_fmad.exit5.i.i.i268, !dbg !41

__internal_fmad.exit5.i.i.i268:                   ; preds = %__internal_fmad.exit2.i.i.i260
  %1055 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !41
  %.not36.i269 = icmp eq i32 %1055, 0, !dbg !41
  %1056 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i266, float -1.000000e+00, float 0.000000e+00) #5, !dbg !41
  %1057 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i266, float -1.000000e+00, float 0.000000e+00) #5, !dbg !41
  %.0.i270 = select i1 %.not36.i269, float %1057, float %1056, !dbg !41
  br label %__nv_sinf.exit275, !dbg !41

__nv_sinf.exit275:                                ; preds = %__internal_fmad.exit2.i.i.i260, %__internal_fmad.exit5.i.i.i268
  %z.i.i.0.i271 = phi float [ %.0.i270, %__internal_fmad.exit5.i.i.i268 ], [ %.05.i266, %__internal_fmad.exit2.i.i.i260 ], !dbg !41
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i221), !dbg !41
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i604), !dbg !44
  %1058 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not.i605 = icmp eq i32 %1058, 0, !dbg !44
  %.01.i606 = select i1 %.not.i605, i32 %855, i32 %854, !dbg !44
  %1059 = sitofp i32 %.01.i606 to float, !dbg !44
  %1060 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not15.i607 = icmp eq i32 %1060, 0, !dbg !44
  %1061 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1059, float 0xBFF921FB40000000, float %850) #5, !dbg !44
  %1062 = tail call float @llvm.nvvm.fma.rn.f(float %1059, float 0xBFF921FB40000000, float %850) #5, !dbg !44
  %.02.i608 = select i1 %.not15.i607, float %1062, float %1061, !dbg !44
  %1063 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not16.i609 = icmp eq i32 %1063, 0, !dbg !44
  %1064 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1059, float 0xBE74442D00000000, float %.02.i608) #5, !dbg !44
  %1065 = tail call float @llvm.nvvm.fma.rn.f(float %1059, float 0xBE74442D00000000, float %.02.i608) #5, !dbg !44
  %.03.i610 = select i1 %.not16.i609, float %1065, float %1064, !dbg !44
  %1066 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not17.i611 = icmp eq i32 %1066, 0, !dbg !44
  %1067 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1059, float 0xBCF84698A0000000, float %.03.i610) #5, !dbg !44
  %1068 = tail call float @llvm.nvvm.fma.rn.f(float %1059, float 0xBCF84698A0000000, float %.03.i610) #5, !dbg !44
  %.04.i612 = select i1 %.not17.i611, float %1068, float %1067, !dbg !44
  %1069 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not18.i613 = icmp eq i32 %1069, 0, !dbg !44
  %.06.i614 = select i1 %.not18.i613, float %868, float %867, !dbg !44
  %1070 = fcmp ult float %.06.i614, 1.056150e+05, !dbg !44
  br i1 %1070, label %__internal_trig_reduction_kernel.exit.i.i632, label %__nv_isinff.exit.i.i.i615, !dbg !44

__nv_isinff.exit.i.i.i615:                        ; preds = %__nv_sinf.exit275
  %1071 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not19.i616 = icmp eq i32 %1071, 0, !dbg !44
  %.07.i617 = select i1 %.not19.i616, float %868, float %867, !dbg !44
  %1072 = fcmp oeq float %.07.i617, 0x7FF0000000000000, !dbg !44
  br i1 %1072, label %__nv_fmul_rn.exit.i.i.i655, label %1076, !dbg !44

__nv_fmul_rn.exit.i.i.i655:                       ; preds = %__nv_isinff.exit.i.i.i615
  %1073 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not27.i656 = icmp eq i32 %1073, 0, !dbg !44
  %1074 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %850, float 0.000000e+00) #5, !dbg !44
  %1075 = tail call float @llvm.nvvm.mul.rn.f(float %850, float 0.000000e+00) #5, !dbg !44
  %.08.i657 = select i1 %.not27.i656, float %1075, float %1074, !dbg !44
  br label %__internal_trig_reduction_kernel.exit.i.i632, !dbg !44

1076:                                             ; preds = %__nv_isinff.exit.i.i.i615
  %1077 = bitcast float %850 to i32, !dbg !44
  %1078 = lshr i32 %1077, 23, !dbg !44
  %1079 = and i32 %1078, 224, !dbg !44
  %1080 = add nsw i32 %1079, -128, !dbg !44
  %1081 = shl i32 %1077, 8, !dbg !44
  %1082 = or i32 %1081, -2147483648, !dbg !44
  %1083 = lshr exact i32 %1080, 5, !dbg !44
  br label %1084, !dbg !44

1084:                                             ; preds = %1076, %1084
  %indvars.iv914 = phi i64 [ 0, %1076 ], [ %indvars.iv.next915, %1084 ]
  %hi.i.i.i.0.i618844 = phi i32 [ 0, %1076 ], [ %1089, %1084 ]
  %1085 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv914, !dbg !44
  %1086 = load i32, ptr addrspace(1) %1085, align 4, !dbg !44
  %1087 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1086, i32 %1082, i32 %hi.i.i.i.0.i618844) #6, !dbg !44, !srcloc !26
  %1088 = extractvalue { i32, i32 } %1087, 0, !dbg !44
  %1089 = extractvalue { i32, i32 } %1087, 1, !dbg !44
  %1090 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %indvars.iv914, !dbg !44
  store i32 %1088, ptr %1090, align 4, !dbg !44
  %indvars.iv.next915 = add nuw nsw i64 %indvars.iv914, 1, !dbg !44
  %exitcond916.not = icmp eq i64 %indvars.iv.next915, 6, !dbg !44
  br i1 %exitcond916.not, label %1091, label %1084, !dbg !44, !llvm.loop !45

1091:                                             ; preds = %1084
  %1092 = getelementptr inbounds i8, ptr %result.i.i.i.i604, i64 24, !dbg !44
  store i32 %1089, ptr %1092, align 4, !dbg !44
  %1093 = and i32 %1078, 31, !dbg !44
  %1094 = sub nsw i32 6, %1083, !dbg !44
  %1095 = sext i32 %1094 to i64, !dbg !44
  %1096 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %1095, !dbg !44
  %1097 = load i32, ptr %1096, align 4, !dbg !44
  %1098 = sub nsw i32 5, %1083, !dbg !44
  %1099 = sext i32 %1098 to i64, !dbg !44
  %1100 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %1099, !dbg !44
  %1101 = load i32, ptr %1100, align 4, !dbg !44
  %.not20.i620 = icmp eq i32 %1093, 0, !dbg !44
  br i1 %.not20.i620, label %__internal_trig_reduction_slowpath.exit.i.i.i621, label %1102, !dbg !44

1102:                                             ; preds = %1091
  %1103 = sub nsw i32 4, %1083, !dbg !44
  %1104 = sub nuw nsw i32 32, %1093, !dbg !44
  %1105 = shl i32 %1097, %1093, !dbg !44
  %1106 = lshr i32 %1101, %1104, !dbg !44
  %1107 = add i32 %1106, %1105, !dbg !44
  %1108 = shl i32 %1101, %1093, !dbg !44
  %1109 = sext i32 %1103 to i64, !dbg !44
  %1110 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %1109, !dbg !44
  %1111 = load i32, ptr %1110, align 4, !dbg !44
  %1112 = lshr i32 %1111, %1104, !dbg !44
  %1113 = add i32 %1112, %1108, !dbg !44
  br label %__internal_trig_reduction_slowpath.exit.i.i.i621, !dbg !44

__internal_trig_reduction_slowpath.exit.i.i.i621: ; preds = %1102, %1091
  %hi.i.i.i.1.i622 = phi i32 [ %1107, %1102 ], [ %1097, %1091 ], !dbg !44
  %lo.i.i.i.0.i623 = phi i32 [ %1113, %1102 ], [ %1101, %1091 ], !dbg !44
  %1114 = lshr i32 %hi.i.i.i.1.i622, 30, !dbg !44
  %1115 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i622, i32 %lo.i.i.i.0.i623, i32 2), !dbg !44
  %1116 = shl i32 %lo.i.i.i.0.i623, 2, !dbg !44
  %1117 = lshr i32 %1115, 31, !dbg !44
  %1118 = add nuw nsw i32 %1117, %1114, !dbg !44
  %1119 = sub nsw i32 0, %1118, !dbg !44
  %.not2123.i624 = icmp slt i32 %1077, 0, !dbg !44
  %spec.select.i625 = select i1 %.not2123.i624, i32 %1119, i32 %1118, !dbg !44
  %1120 = xor i32 %1115, %1077, !dbg !44
  %.lobit.i626 = ashr i32 %1115, 31, !dbg !44
  %hi.i.i.i.2.i627 = xor i32 %.lobit.i626, %1115, !dbg !44
  %lo.i.i.i.1.i629 = xor i32 %.lobit.i626, %1116, !dbg !44
  %1121 = zext i32 %hi.i.i.i.2.i627 to i64, !dbg !44
  %1122 = shl nuw i64 %1121, 32, !dbg !44
  %1123 = zext i32 %lo.i.i.i.1.i629 to i64, !dbg !44
  %1124 = or disjoint i64 %1122, %1123, !dbg !44
  %1125 = sitofp i64 %1124 to double, !dbg !44
  %1126 = fmul double %1125, 0x3BF921FB54442D19, !dbg !44
  %1127 = fptrunc double %1126 to float, !dbg !44
  %1128 = fneg float %1127, !dbg !44
  %.not2526.i630 = icmp slt i32 %1120, 0, !dbg !44
  %r.i.i.i.0.i631 = select i1 %.not2526.i630, float %1128, float %1127, !dbg !44
  br label %__internal_trig_reduction_kernel.exit.i.i632, !dbg !44

__internal_trig_reduction_kernel.exit.i.i632:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i621, %__nv_fmul_rn.exit.i.i.i655, %__nv_sinf.exit275
  %i.i.1.i633 = phi i32 [ %.01.i606, %__nv_sinf.exit275 ], [ 0, %__nv_fmul_rn.exit.i.i.i655 ], [ %spec.select.i625, %__internal_trig_reduction_slowpath.exit.i.i.i621 ], !dbg !44
  %t.i.i.1.i634 = phi float [ %.04.i612, %__nv_sinf.exit275 ], [ %.08.i657, %__nv_fmul_rn.exit.i.i.i655 ], [ %r.i.i.i.0.i631, %__internal_trig_reduction_slowpath.exit.i.i.i621 ], !dbg !44
  %1129 = add i32 %i.i.1.i633, 1, !dbg !44
  %1130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not28.i635 = icmp eq i32 %1130, 0, !dbg !44
  %1131 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i634, float %t.i.i.1.i634) #5, !dbg !44
  %1132 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i634, float %t.i.i.1.i634) #5, !dbg !44
  %.011.i636 = select i1 %.not28.i635, float %1132, float %1131, !dbg !44
  %1133 = and i32 %i.i.1.i633, 1, !dbg !44
  %.not29.not.i637 = icmp eq i32 %1133, 0, !dbg !44
  %1134 = select i1 %.not29.not.i637, float 1.000000e+00, float %t.i.i.1.i634, !dbg !44
  %1135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not30.i638 = icmp eq i32 %1135, 0, !dbg !44
  %1136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i636, float %1134, float 0.000000e+00) #5, !dbg !44
  %1137 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i636, float %1134, float 0.000000e+00) #5, !dbg !44
  %.012.i639 = select i1 %.not30.i638, float %1137, float %1136, !dbg !44
  br i1 %.not29.not.i637, label %__internal_fmad.exit1.i.i.i652, label %__internal_fmad.exit2.i.i.i640, !dbg !44

__internal_fmad.exit1.i.i.i652:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i632
  %1138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not31.i653 = icmp eq i32 %1138, 0, !dbg !44
  %1139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i636, float 0xBF56C0FDA0000000) #5, !dbg !44
  %1140 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i636, float 0xBF56C0FDA0000000) #5, !dbg !44
  %.013.i654 = select i1 %.not31.i653, float %1140, float %1139, !dbg !44
  br label %__internal_fmad.exit2.i.i.i640, !dbg !44

__internal_fmad.exit2.i.i.i640:                   ; preds = %__internal_fmad.exit1.i.i.i652, %__internal_trig_reduction_kernel.exit.i.i632
  %1141 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i652 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i632 ], !dbg !44
  %1142 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i652 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i632 ], !dbg !44
  %1143 = phi float [ %.013.i654, %__internal_fmad.exit1.i.i.i652 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i632 ], !dbg !44
  %1144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not32.i641 = icmp eq i32 %1144, 0, !dbg !44
  %1145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1143, float %.011.i636, float %1142) #5, !dbg !44
  %1146 = tail call float @llvm.nvvm.fma.rn.f(float %1143, float %.011.i636, float %1142) #5, !dbg !44
  %.010.i642 = select i1 %.not32.i641, float %1146, float %1145, !dbg !44
  %1147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not33.i643 = icmp eq i32 %1147, 0, !dbg !44
  %1148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i642, float %.011.i636, float %1141) #5, !dbg !44
  %1149 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i642, float %.011.i636, float %1141) #5, !dbg !44
  %.09.i644 = select i1 %.not33.i643, float %1149, float %1148, !dbg !44
  %1150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not34.i645 = icmp eq i32 %1150, 0, !dbg !44
  %1151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i644, float %.012.i639, float %1134) #5, !dbg !44
  %1152 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i644, float %.012.i639, float %1134) #5, !dbg !44
  %.05.i646 = select i1 %.not34.i645, float %1152, float %1151, !dbg !44
  %1153 = and i32 %1129, 2, !dbg !44
  %.not35.i647 = icmp eq i32 %1153, 0, !dbg !44
  br i1 %.not35.i647, label %__nv_cosf.exit658, label %__internal_fmad.exit5.i.i.i648, !dbg !44

__internal_fmad.exit5.i.i.i648:                   ; preds = %__internal_fmad.exit2.i.i.i640
  %1154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not36.i649 = icmp eq i32 %1154, 0, !dbg !44
  %1155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i646, float -1.000000e+00, float 0.000000e+00) #5, !dbg !44
  %1156 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i646, float -1.000000e+00, float 0.000000e+00) #5, !dbg !44
  %.0.i650 = select i1 %.not36.i649, float %1156, float %1155, !dbg !44
  br label %__nv_cosf.exit658, !dbg !44

__nv_cosf.exit658:                                ; preds = %__internal_fmad.exit2.i.i.i640, %__internal_fmad.exit5.i.i.i648
  %z.i.i.0.i651 = phi float [ %.0.i650, %__internal_fmad.exit5.i.i.i648 ], [ %.05.i646, %__internal_fmad.exit2.i.i.i640 ], !dbg !44
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i604), !dbg !44
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i659), !dbg !44
  %1157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not.i660 = icmp eq i32 %1157, 0, !dbg !44
  %.01.i661 = select i1 %.not.i660, i32 %958, i32 %957, !dbg !44
  %1158 = sitofp i32 %.01.i661 to float, !dbg !44
  %1159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not15.i662 = icmp eq i32 %1159, 0, !dbg !44
  %1160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1158, float 0xBFF921FB40000000, float %851) #5, !dbg !44
  %1161 = tail call float @llvm.nvvm.fma.rn.f(float %1158, float 0xBFF921FB40000000, float %851) #5, !dbg !44
  %.02.i663 = select i1 %.not15.i662, float %1161, float %1160, !dbg !44
  %1162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not16.i664 = icmp eq i32 %1162, 0, !dbg !44
  %1163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1158, float 0xBE74442D00000000, float %.02.i663) #5, !dbg !44
  %1164 = tail call float @llvm.nvvm.fma.rn.f(float %1158, float 0xBE74442D00000000, float %.02.i663) #5, !dbg !44
  %.03.i665 = select i1 %.not16.i664, float %1164, float %1163, !dbg !44
  %1165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not17.i666 = icmp eq i32 %1165, 0, !dbg !44
  %1166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1158, float 0xBCF84698A0000000, float %.03.i665) #5, !dbg !44
  %1167 = tail call float @llvm.nvvm.fma.rn.f(float %1158, float 0xBCF84698A0000000, float %.03.i665) #5, !dbg !44
  %.04.i667 = select i1 %.not17.i666, float %1167, float %1166, !dbg !44
  %1168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not18.i668 = icmp eq i32 %1168, 0, !dbg !44
  %.06.i669 = select i1 %.not18.i668, float %971, float %970, !dbg !44
  %1169 = fcmp ult float %.06.i669, 1.056150e+05, !dbg !44
  br i1 %1169, label %__internal_trig_reduction_kernel.exit.i.i687, label %__nv_isinff.exit.i.i.i670, !dbg !44

__nv_isinff.exit.i.i.i670:                        ; preds = %__nv_cosf.exit658
  %1170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not19.i671 = icmp eq i32 %1170, 0, !dbg !44
  %.07.i672 = select i1 %.not19.i671, float %971, float %970, !dbg !44
  %1171 = fcmp oeq float %.07.i672, 0x7FF0000000000000, !dbg !44
  br i1 %1171, label %__nv_fmul_rn.exit.i.i.i710, label %1175, !dbg !44

__nv_fmul_rn.exit.i.i.i710:                       ; preds = %__nv_isinff.exit.i.i.i670
  %1172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not27.i711 = icmp eq i32 %1172, 0, !dbg !44
  %1173 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %851, float 0.000000e+00) #5, !dbg !44
  %1174 = tail call float @llvm.nvvm.mul.rn.f(float %851, float 0.000000e+00) #5, !dbg !44
  %.08.i712 = select i1 %.not27.i711, float %1174, float %1173, !dbg !44
  br label %__internal_trig_reduction_kernel.exit.i.i687, !dbg !44

1175:                                             ; preds = %__nv_isinff.exit.i.i.i670
  %1176 = bitcast float %851 to i32, !dbg !44
  %1177 = lshr i32 %1176, 23, !dbg !44
  %1178 = and i32 %1177, 224, !dbg !44
  %1179 = add nsw i32 %1178, -128, !dbg !44
  %1180 = shl i32 %1176, 8, !dbg !44
  %1181 = or i32 %1180, -2147483648, !dbg !44
  %1182 = lshr exact i32 %1179, 5, !dbg !44
  br label %1183, !dbg !44

1183:                                             ; preds = %1175, %1183
  %indvars.iv917 = phi i64 [ 0, %1175 ], [ %indvars.iv.next918, %1183 ]
  %hi.i.i.i.0.i673846 = phi i32 [ 0, %1175 ], [ %1188, %1183 ]
  %1184 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv917, !dbg !44
  %1185 = load i32, ptr addrspace(1) %1184, align 4, !dbg !44
  %1186 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1185, i32 %1181, i32 %hi.i.i.i.0.i673846) #6, !dbg !44, !srcloc !26
  %1187 = extractvalue { i32, i32 } %1186, 0, !dbg !44
  %1188 = extractvalue { i32, i32 } %1186, 1, !dbg !44
  %1189 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %indvars.iv917, !dbg !44
  store i32 %1187, ptr %1189, align 4, !dbg !44
  %indvars.iv.next918 = add nuw nsw i64 %indvars.iv917, 1, !dbg !44
  %exitcond919.not = icmp eq i64 %indvars.iv.next918, 6, !dbg !44
  br i1 %exitcond919.not, label %1190, label %1183, !dbg !44, !llvm.loop !46

1190:                                             ; preds = %1183
  %1191 = getelementptr inbounds i8, ptr %result.i.i.i.i659, i64 24, !dbg !44
  store i32 %1188, ptr %1191, align 4, !dbg !44
  %1192 = and i32 %1177, 31, !dbg !44
  %1193 = sub nsw i32 6, %1182, !dbg !44
  %1194 = sext i32 %1193 to i64, !dbg !44
  %1195 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %1194, !dbg !44
  %1196 = load i32, ptr %1195, align 4, !dbg !44
  %1197 = sub nsw i32 5, %1182, !dbg !44
  %1198 = sext i32 %1197 to i64, !dbg !44
  %1199 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %1198, !dbg !44
  %1200 = load i32, ptr %1199, align 4, !dbg !44
  %.not20.i675 = icmp eq i32 %1192, 0, !dbg !44
  br i1 %.not20.i675, label %__internal_trig_reduction_slowpath.exit.i.i.i676, label %1201, !dbg !44

1201:                                             ; preds = %1190
  %1202 = sub nsw i32 4, %1182, !dbg !44
  %1203 = sub nuw nsw i32 32, %1192, !dbg !44
  %1204 = shl i32 %1196, %1192, !dbg !44
  %1205 = lshr i32 %1200, %1203, !dbg !44
  %1206 = add i32 %1205, %1204, !dbg !44
  %1207 = shl i32 %1200, %1192, !dbg !44
  %1208 = sext i32 %1202 to i64, !dbg !44
  %1209 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %1208, !dbg !44
  %1210 = load i32, ptr %1209, align 4, !dbg !44
  %1211 = lshr i32 %1210, %1203, !dbg !44
  %1212 = add i32 %1211, %1207, !dbg !44
  br label %__internal_trig_reduction_slowpath.exit.i.i.i676, !dbg !44

__internal_trig_reduction_slowpath.exit.i.i.i676: ; preds = %1201, %1190
  %hi.i.i.i.1.i677 = phi i32 [ %1206, %1201 ], [ %1196, %1190 ], !dbg !44
  %lo.i.i.i.0.i678 = phi i32 [ %1212, %1201 ], [ %1200, %1190 ], !dbg !44
  %1213 = lshr i32 %hi.i.i.i.1.i677, 30, !dbg !44
  %1214 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i677, i32 %lo.i.i.i.0.i678, i32 2), !dbg !44
  %1215 = shl i32 %lo.i.i.i.0.i678, 2, !dbg !44
  %1216 = lshr i32 %1214, 31, !dbg !44
  %1217 = add nuw nsw i32 %1216, %1213, !dbg !44
  %1218 = sub nsw i32 0, %1217, !dbg !44
  %.not2123.i679 = icmp slt i32 %1176, 0, !dbg !44
  %spec.select.i680 = select i1 %.not2123.i679, i32 %1218, i32 %1217, !dbg !44
  %1219 = xor i32 %1214, %1176, !dbg !44
  %.lobit.i681 = ashr i32 %1214, 31, !dbg !44
  %hi.i.i.i.2.i682 = xor i32 %.lobit.i681, %1214, !dbg !44
  %lo.i.i.i.1.i684 = xor i32 %.lobit.i681, %1215, !dbg !44
  %1220 = zext i32 %hi.i.i.i.2.i682 to i64, !dbg !44
  %1221 = shl nuw i64 %1220, 32, !dbg !44
  %1222 = zext i32 %lo.i.i.i.1.i684 to i64, !dbg !44
  %1223 = or disjoint i64 %1221, %1222, !dbg !44
  %1224 = sitofp i64 %1223 to double, !dbg !44
  %1225 = fmul double %1224, 0x3BF921FB54442D19, !dbg !44
  %1226 = fptrunc double %1225 to float, !dbg !44
  %1227 = fneg float %1226, !dbg !44
  %.not2526.i685 = icmp slt i32 %1219, 0, !dbg !44
  %r.i.i.i.0.i686 = select i1 %.not2526.i685, float %1227, float %1226, !dbg !44
  br label %__internal_trig_reduction_kernel.exit.i.i687, !dbg !44

__internal_trig_reduction_kernel.exit.i.i687:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i676, %__nv_fmul_rn.exit.i.i.i710, %__nv_cosf.exit658
  %i.i.1.i688 = phi i32 [ %.01.i661, %__nv_cosf.exit658 ], [ 0, %__nv_fmul_rn.exit.i.i.i710 ], [ %spec.select.i680, %__internal_trig_reduction_slowpath.exit.i.i.i676 ], !dbg !44
  %t.i.i.1.i689 = phi float [ %.04.i667, %__nv_cosf.exit658 ], [ %.08.i712, %__nv_fmul_rn.exit.i.i.i710 ], [ %r.i.i.i.0.i686, %__internal_trig_reduction_slowpath.exit.i.i.i676 ], !dbg !44
  %1228 = add i32 %i.i.1.i688, 1, !dbg !44
  %1229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not28.i690 = icmp eq i32 %1229, 0, !dbg !44
  %1230 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i689, float %t.i.i.1.i689) #5, !dbg !44
  %1231 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i689, float %t.i.i.1.i689) #5, !dbg !44
  %.011.i691 = select i1 %.not28.i690, float %1231, float %1230, !dbg !44
  %1232 = and i32 %i.i.1.i688, 1, !dbg !44
  %.not29.not.i692 = icmp eq i32 %1232, 0, !dbg !44
  %1233 = select i1 %.not29.not.i692, float 1.000000e+00, float %t.i.i.1.i689, !dbg !44
  %1234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not30.i693 = icmp eq i32 %1234, 0, !dbg !44
  %1235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i691, float %1233, float 0.000000e+00) #5, !dbg !44
  %1236 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i691, float %1233, float 0.000000e+00) #5, !dbg !44
  %.012.i694 = select i1 %.not30.i693, float %1236, float %1235, !dbg !44
  br i1 %.not29.not.i692, label %__internal_fmad.exit1.i.i.i707, label %__internal_fmad.exit2.i.i.i695, !dbg !44

__internal_fmad.exit1.i.i.i707:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i687
  %1237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not31.i708 = icmp eq i32 %1237, 0, !dbg !44
  %1238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i691, float 0xBF56C0FDA0000000) #5, !dbg !44
  %1239 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i691, float 0xBF56C0FDA0000000) #5, !dbg !44
  %.013.i709 = select i1 %.not31.i708, float %1239, float %1238, !dbg !44
  br label %__internal_fmad.exit2.i.i.i695, !dbg !44

__internal_fmad.exit2.i.i.i695:                   ; preds = %__internal_fmad.exit1.i.i.i707, %__internal_trig_reduction_kernel.exit.i.i687
  %1240 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i707 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i687 ], !dbg !44
  %1241 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i707 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i687 ], !dbg !44
  %1242 = phi float [ %.013.i709, %__internal_fmad.exit1.i.i.i707 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i687 ], !dbg !44
  %1243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not32.i696 = icmp eq i32 %1243, 0, !dbg !44
  %1244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1242, float %.011.i691, float %1241) #5, !dbg !44
  %1245 = tail call float @llvm.nvvm.fma.rn.f(float %1242, float %.011.i691, float %1241) #5, !dbg !44
  %.010.i697 = select i1 %.not32.i696, float %1245, float %1244, !dbg !44
  %1246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not33.i698 = icmp eq i32 %1246, 0, !dbg !44
  %1247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i697, float %.011.i691, float %1240) #5, !dbg !44
  %1248 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i697, float %.011.i691, float %1240) #5, !dbg !44
  %.09.i699 = select i1 %.not33.i698, float %1248, float %1247, !dbg !44
  %1249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not34.i700 = icmp eq i32 %1249, 0, !dbg !44
  %1250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i699, float %.012.i694, float %1233) #5, !dbg !44
  %1251 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i699, float %.012.i694, float %1233) #5, !dbg !44
  %.05.i701 = select i1 %.not34.i700, float %1251, float %1250, !dbg !44
  %1252 = and i32 %1228, 2, !dbg !44
  %.not35.i702 = icmp eq i32 %1252, 0, !dbg !44
  br i1 %.not35.i702, label %__nv_cosf.exit713, label %__internal_fmad.exit5.i.i.i703, !dbg !44

__internal_fmad.exit5.i.i.i703:                   ; preds = %__internal_fmad.exit2.i.i.i695
  %1253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not36.i704 = icmp eq i32 %1253, 0, !dbg !44
  %1254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i701, float -1.000000e+00, float 0.000000e+00) #5, !dbg !44
  %1255 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i701, float -1.000000e+00, float 0.000000e+00) #5, !dbg !44
  %.0.i705 = select i1 %.not36.i704, float %1255, float %1254, !dbg !44
  br label %__nv_cosf.exit713, !dbg !44

__nv_cosf.exit713:                                ; preds = %__internal_fmad.exit2.i.i.i695, %__internal_fmad.exit5.i.i.i703
  %z.i.i.0.i706 = phi float [ %.0.i705, %__internal_fmad.exit5.i.i.i703 ], [ %.05.i701, %__internal_fmad.exit2.i.i.i695 ], !dbg !44
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i659), !dbg !44
  %1256 = fmul float %25, %37, !dbg !47
  %1257 = fmul float %26, %37, !dbg !47
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i276), !dbg !48
  %1258 = fmul float %1256, 0x3FE45F3060000000, !dbg !48
  %1259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not.i277 = icmp eq i32 %1259, 0, !dbg !48
  %1260 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %1258) #5, !dbg !48
  %1261 = tail call i32 @llvm.nvvm.f2i.rn(float %1258) #5, !dbg !48
  %.01.i278 = select i1 %.not.i277, i32 %1261, i32 %1260, !dbg !48
  %1262 = sitofp i32 %.01.i278 to float, !dbg !48
  %1263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not15.i279 = icmp eq i32 %1263, 0, !dbg !48
  %1264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1262, float 0xBFF921FB40000000, float %1256) #5, !dbg !48
  %1265 = tail call float @llvm.nvvm.fma.rn.f(float %1262, float 0xBFF921FB40000000, float %1256) #5, !dbg !48
  %.02.i280 = select i1 %.not15.i279, float %1265, float %1264, !dbg !48
  %1266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not16.i281 = icmp eq i32 %1266, 0, !dbg !48
  %1267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1262, float 0xBE74442D00000000, float %.02.i280) #5, !dbg !48
  %1268 = tail call float @llvm.nvvm.fma.rn.f(float %1262, float 0xBE74442D00000000, float %.02.i280) #5, !dbg !48
  %.03.i282 = select i1 %.not16.i281, float %1268, float %1267, !dbg !48
  %1269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not17.i283 = icmp eq i32 %1269, 0, !dbg !48
  %1270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1262, float 0xBCF84698A0000000, float %.03.i282) #5, !dbg !48
  %1271 = tail call float @llvm.nvvm.fma.rn.f(float %1262, float 0xBCF84698A0000000, float %.03.i282) #5, !dbg !48
  %.04.i284 = select i1 %.not17.i283, float %1271, float %1270, !dbg !48
  %1272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not18.i285 = icmp eq i32 %1272, 0, !dbg !48
  %1273 = tail call float @llvm.nvvm.fabs.ftz.f(float %1256) #5, !dbg !48
  %1274 = tail call float @llvm.nvvm.fabs.f(float %1256) #5, !dbg !48
  %.06.i286 = select i1 %.not18.i285, float %1274, float %1273, !dbg !48
  %1275 = fcmp ult float %.06.i286, 1.056150e+05, !dbg !48
  br i1 %1275, label %__internal_trig_reduction_kernel.exit.i.i304, label %__nv_isinff.exit.i.i.i287, !dbg !48

__nv_isinff.exit.i.i.i287:                        ; preds = %__nv_cosf.exit713
  %1276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not19.i288 = icmp eq i32 %1276, 0, !dbg !48
  %.07.i289 = select i1 %.not19.i288, float %1274, float %1273, !dbg !48
  %1277 = fcmp oeq float %.07.i289, 0x7FF0000000000000, !dbg !48
  br i1 %1277, label %__nv_fmul_rn.exit.i.i.i327, label %1281, !dbg !48

__nv_fmul_rn.exit.i.i.i327:                       ; preds = %__nv_isinff.exit.i.i.i287
  %1278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not27.i328 = icmp eq i32 %1278, 0, !dbg !48
  %1279 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %1256, float 0.000000e+00) #5, !dbg !48
  %1280 = tail call float @llvm.nvvm.mul.rn.f(float %1256, float 0.000000e+00) #5, !dbg !48
  %.08.i329 = select i1 %.not27.i328, float %1280, float %1279, !dbg !48
  br label %__internal_trig_reduction_kernel.exit.i.i304, !dbg !48

1281:                                             ; preds = %__nv_isinff.exit.i.i.i287
  %1282 = bitcast float %1256 to i32, !dbg !48
  %1283 = lshr i32 %1282, 23, !dbg !48
  %1284 = and i32 %1283, 224, !dbg !48
  %1285 = add nsw i32 %1284, -128, !dbg !48
  %1286 = shl i32 %1282, 8, !dbg !48
  %1287 = or i32 %1286, -2147483648, !dbg !48
  %1288 = lshr exact i32 %1285, 5, !dbg !48
  br label %1289, !dbg !48

1289:                                             ; preds = %1281, %1289
  %indvars.iv920 = phi i64 [ 0, %1281 ], [ %indvars.iv.next921, %1289 ]
  %hi.i.i.i.0.i290848 = phi i32 [ 0, %1281 ], [ %1294, %1289 ]
  %1290 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv920, !dbg !48
  %1291 = load i32, ptr addrspace(1) %1290, align 4, !dbg !48
  %1292 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1291, i32 %1287, i32 %hi.i.i.i.0.i290848) #6, !dbg !48, !srcloc !26
  %1293 = extractvalue { i32, i32 } %1292, 0, !dbg !48
  %1294 = extractvalue { i32, i32 } %1292, 1, !dbg !48
  %1295 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %indvars.iv920, !dbg !48
  store i32 %1293, ptr %1295, align 4, !dbg !48
  %indvars.iv.next921 = add nuw nsw i64 %indvars.iv920, 1, !dbg !48
  %exitcond922.not = icmp eq i64 %indvars.iv.next921, 6, !dbg !48
  br i1 %exitcond922.not, label %1296, label %1289, !dbg !48, !llvm.loop !49

1296:                                             ; preds = %1289
  %1297 = getelementptr inbounds i8, ptr %result.i.i.i.i276, i64 24, !dbg !48
  store i32 %1294, ptr %1297, align 4, !dbg !48
  %1298 = and i32 %1283, 31, !dbg !48
  %1299 = sub nsw i32 6, %1288, !dbg !48
  %1300 = sext i32 %1299 to i64, !dbg !48
  %1301 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %1300, !dbg !48
  %1302 = load i32, ptr %1301, align 4, !dbg !48
  %1303 = sub nsw i32 5, %1288, !dbg !48
  %1304 = sext i32 %1303 to i64, !dbg !48
  %1305 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %1304, !dbg !48
  %1306 = load i32, ptr %1305, align 4, !dbg !48
  %.not20.i292 = icmp eq i32 %1298, 0, !dbg !48
  br i1 %.not20.i292, label %__internal_trig_reduction_slowpath.exit.i.i.i293, label %1307, !dbg !48

1307:                                             ; preds = %1296
  %1308 = sub nsw i32 4, %1288, !dbg !48
  %1309 = sub nuw nsw i32 32, %1298, !dbg !48
  %1310 = shl i32 %1302, %1298, !dbg !48
  %1311 = lshr i32 %1306, %1309, !dbg !48
  %1312 = add i32 %1311, %1310, !dbg !48
  %1313 = shl i32 %1306, %1298, !dbg !48
  %1314 = sext i32 %1308 to i64, !dbg !48
  %1315 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %1314, !dbg !48
  %1316 = load i32, ptr %1315, align 4, !dbg !48
  %1317 = lshr i32 %1316, %1309, !dbg !48
  %1318 = add i32 %1317, %1313, !dbg !48
  br label %__internal_trig_reduction_slowpath.exit.i.i.i293, !dbg !48

__internal_trig_reduction_slowpath.exit.i.i.i293: ; preds = %1307, %1296
  %hi.i.i.i.1.i294 = phi i32 [ %1312, %1307 ], [ %1302, %1296 ], !dbg !48
  %lo.i.i.i.0.i295 = phi i32 [ %1318, %1307 ], [ %1306, %1296 ], !dbg !48
  %1319 = lshr i32 %hi.i.i.i.1.i294, 30, !dbg !48
  %1320 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i294, i32 %lo.i.i.i.0.i295, i32 2), !dbg !48
  %1321 = shl i32 %lo.i.i.i.0.i295, 2, !dbg !48
  %1322 = lshr i32 %1320, 31, !dbg !48
  %1323 = add nuw nsw i32 %1322, %1319, !dbg !48
  %1324 = sub nsw i32 0, %1323, !dbg !48
  %.not2123.i296 = icmp slt i32 %1282, 0, !dbg !48
  %spec.select.i297 = select i1 %.not2123.i296, i32 %1324, i32 %1323, !dbg !48
  %1325 = xor i32 %1320, %1282, !dbg !48
  %.lobit.i298 = ashr i32 %1320, 31, !dbg !48
  %hi.i.i.i.2.i299 = xor i32 %.lobit.i298, %1320, !dbg !48
  %lo.i.i.i.1.i301 = xor i32 %.lobit.i298, %1321, !dbg !48
  %1326 = zext i32 %hi.i.i.i.2.i299 to i64, !dbg !48
  %1327 = shl nuw i64 %1326, 32, !dbg !48
  %1328 = zext i32 %lo.i.i.i.1.i301 to i64, !dbg !48
  %1329 = or disjoint i64 %1327, %1328, !dbg !48
  %1330 = sitofp i64 %1329 to double, !dbg !48
  %1331 = fmul double %1330, 0x3BF921FB54442D19, !dbg !48
  %1332 = fptrunc double %1331 to float, !dbg !48
  %1333 = fneg float %1332, !dbg !48
  %.not2526.i302 = icmp slt i32 %1325, 0, !dbg !48
  %r.i.i.i.0.i303 = select i1 %.not2526.i302, float %1333, float %1332, !dbg !48
  br label %__internal_trig_reduction_kernel.exit.i.i304, !dbg !48

__internal_trig_reduction_kernel.exit.i.i304:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i293, %__nv_fmul_rn.exit.i.i.i327, %__nv_cosf.exit713
  %i.i.1.i305 = phi i32 [ %.01.i278, %__nv_cosf.exit713 ], [ 0, %__nv_fmul_rn.exit.i.i.i327 ], [ %spec.select.i297, %__internal_trig_reduction_slowpath.exit.i.i.i293 ], !dbg !48
  %t.i.i.1.i306 = phi float [ %.04.i284, %__nv_cosf.exit713 ], [ %.08.i329, %__nv_fmul_rn.exit.i.i.i327 ], [ %r.i.i.i.0.i303, %__internal_trig_reduction_slowpath.exit.i.i.i293 ], !dbg !48
  %1334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not28.i307 = icmp eq i32 %1334, 0, !dbg !48
  %1335 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i306, float %t.i.i.1.i306) #5, !dbg !48
  %1336 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i306, float %t.i.i.1.i306) #5, !dbg !48
  %.011.i308 = select i1 %.not28.i307, float %1336, float %1335, !dbg !48
  %1337 = and i32 %i.i.1.i305, 1, !dbg !48
  %.not29.i309 = icmp eq i32 %1337, 0, !dbg !48
  %1338 = select i1 %.not29.i309, float %t.i.i.1.i306, float 1.000000e+00, !dbg !48
  %1339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not30.i310 = icmp eq i32 %1339, 0, !dbg !48
  %1340 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i308, float %1338, float 0.000000e+00) #5, !dbg !48
  %1341 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i308, float %1338, float 0.000000e+00) #5, !dbg !48
  %.012.i311 = select i1 %.not30.i310, float %1341, float %1340, !dbg !48
  br i1 %.not29.i309, label %__internal_fmad.exit2.i.i.i315, label %__internal_fmad.exit1.i.i.i312, !dbg !48

__internal_fmad.exit1.i.i.i312:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i304
  %1342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not31.i313 = icmp eq i32 %1342, 0, !dbg !48
  %1343 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i308, float 0xBF56C0FDA0000000) #5, !dbg !48
  %1344 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i308, float 0xBF56C0FDA0000000) #5, !dbg !48
  %.013.i314 = select i1 %.not31.i313, float %1344, float %1343, !dbg !48
  br label %__internal_fmad.exit2.i.i.i315, !dbg !48

__internal_fmad.exit2.i.i.i315:                   ; preds = %__internal_fmad.exit1.i.i.i312, %__internal_trig_reduction_kernel.exit.i.i304
  %1345 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i312 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !48
  %1346 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i312 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !48
  %1347 = phi float [ %.013.i314, %__internal_fmad.exit1.i.i.i312 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !48
  %1348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not32.i316 = icmp eq i32 %1348, 0, !dbg !48
  %1349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1347, float %.011.i308, float %1346) #5, !dbg !48
  %1350 = tail call float @llvm.nvvm.fma.rn.f(float %1347, float %.011.i308, float %1346) #5, !dbg !48
  %.010.i317 = select i1 %.not32.i316, float %1350, float %1349, !dbg !48
  %1351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not33.i318 = icmp eq i32 %1351, 0, !dbg !48
  %1352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i317, float %.011.i308, float %1345) #5, !dbg !48
  %1353 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i317, float %.011.i308, float %1345) #5, !dbg !48
  %.09.i319 = select i1 %.not33.i318, float %1353, float %1352, !dbg !48
  %1354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not34.i320 = icmp eq i32 %1354, 0, !dbg !48
  %1355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i319, float %.012.i311, float %1338) #5, !dbg !48
  %1356 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i319, float %.012.i311, float %1338) #5, !dbg !48
  %.05.i321 = select i1 %.not34.i320, float %1356, float %1355, !dbg !48
  %1357 = and i32 %i.i.1.i305, 2, !dbg !48
  %.not35.i322 = icmp eq i32 %1357, 0, !dbg !48
  br i1 %.not35.i322, label %__nv_sinf.exit330, label %__internal_fmad.exit5.i.i.i323, !dbg !48

__internal_fmad.exit5.i.i.i323:                   ; preds = %__internal_fmad.exit2.i.i.i315
  %1358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not36.i324 = icmp eq i32 %1358, 0, !dbg !48
  %1359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i321, float -1.000000e+00, float 0.000000e+00) #5, !dbg !48
  %1360 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i321, float -1.000000e+00, float 0.000000e+00) #5, !dbg !48
  %.0.i325 = select i1 %.not36.i324, float %1360, float %1359, !dbg !48
  br label %__nv_sinf.exit330, !dbg !48

__nv_sinf.exit330:                                ; preds = %__internal_fmad.exit2.i.i.i315, %__internal_fmad.exit5.i.i.i323
  %z.i.i.0.i326 = phi float [ %.0.i325, %__internal_fmad.exit5.i.i.i323 ], [ %.05.i321, %__internal_fmad.exit2.i.i.i315 ], !dbg !48
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i276), !dbg !48
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i331), !dbg !48
  %1361 = fmul float %1257, 0x3FE45F3060000000, !dbg !48
  %1362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not.i332 = icmp eq i32 %1362, 0, !dbg !48
  %1363 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %1361) #5, !dbg !48
  %1364 = tail call i32 @llvm.nvvm.f2i.rn(float %1361) #5, !dbg !48
  %.01.i333 = select i1 %.not.i332, i32 %1364, i32 %1363, !dbg !48
  %1365 = sitofp i32 %.01.i333 to float, !dbg !48
  %1366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not15.i334 = icmp eq i32 %1366, 0, !dbg !48
  %1367 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1365, float 0xBFF921FB40000000, float %1257) #5, !dbg !48
  %1368 = tail call float @llvm.nvvm.fma.rn.f(float %1365, float 0xBFF921FB40000000, float %1257) #5, !dbg !48
  %.02.i335 = select i1 %.not15.i334, float %1368, float %1367, !dbg !48
  %1369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not16.i336 = icmp eq i32 %1369, 0, !dbg !48
  %1370 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1365, float 0xBE74442D00000000, float %.02.i335) #5, !dbg !48
  %1371 = tail call float @llvm.nvvm.fma.rn.f(float %1365, float 0xBE74442D00000000, float %.02.i335) #5, !dbg !48
  %.03.i337 = select i1 %.not16.i336, float %1371, float %1370, !dbg !48
  %1372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not17.i338 = icmp eq i32 %1372, 0, !dbg !48
  %1373 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1365, float 0xBCF84698A0000000, float %.03.i337) #5, !dbg !48
  %1374 = tail call float @llvm.nvvm.fma.rn.f(float %1365, float 0xBCF84698A0000000, float %.03.i337) #5, !dbg !48
  %.04.i339 = select i1 %.not17.i338, float %1374, float %1373, !dbg !48
  %1375 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not18.i340 = icmp eq i32 %1375, 0, !dbg !48
  %1376 = tail call float @llvm.nvvm.fabs.ftz.f(float %1257) #5, !dbg !48
  %1377 = tail call float @llvm.nvvm.fabs.f(float %1257) #5, !dbg !48
  %.06.i341 = select i1 %.not18.i340, float %1377, float %1376, !dbg !48
  %1378 = fcmp ult float %.06.i341, 1.056150e+05, !dbg !48
  br i1 %1378, label %__internal_trig_reduction_kernel.exit.i.i359, label %__nv_isinff.exit.i.i.i342, !dbg !48

__nv_isinff.exit.i.i.i342:                        ; preds = %__nv_sinf.exit330
  %1379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not19.i343 = icmp eq i32 %1379, 0, !dbg !48
  %.07.i344 = select i1 %.not19.i343, float %1377, float %1376, !dbg !48
  %1380 = fcmp oeq float %.07.i344, 0x7FF0000000000000, !dbg !48
  br i1 %1380, label %__nv_fmul_rn.exit.i.i.i382, label %1384, !dbg !48

__nv_fmul_rn.exit.i.i.i382:                       ; preds = %__nv_isinff.exit.i.i.i342
  %1381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not27.i383 = icmp eq i32 %1381, 0, !dbg !48
  %1382 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %1257, float 0.000000e+00) #5, !dbg !48
  %1383 = tail call float @llvm.nvvm.mul.rn.f(float %1257, float 0.000000e+00) #5, !dbg !48
  %.08.i384 = select i1 %.not27.i383, float %1383, float %1382, !dbg !48
  br label %__internal_trig_reduction_kernel.exit.i.i359, !dbg !48

1384:                                             ; preds = %__nv_isinff.exit.i.i.i342
  %1385 = bitcast float %1257 to i32, !dbg !48
  %1386 = lshr i32 %1385, 23, !dbg !48
  %1387 = and i32 %1386, 224, !dbg !48
  %1388 = add nsw i32 %1387, -128, !dbg !48
  %1389 = shl i32 %1385, 8, !dbg !48
  %1390 = or i32 %1389, -2147483648, !dbg !48
  %1391 = lshr exact i32 %1388, 5, !dbg !48
  br label %1392, !dbg !48

1392:                                             ; preds = %1384, %1392
  %indvars.iv923 = phi i64 [ 0, %1384 ], [ %indvars.iv.next924, %1392 ]
  %hi.i.i.i.0.i345850 = phi i32 [ 0, %1384 ], [ %1397, %1392 ]
  %1393 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv923, !dbg !48
  %1394 = load i32, ptr addrspace(1) %1393, align 4, !dbg !48
  %1395 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1394, i32 %1390, i32 %hi.i.i.i.0.i345850) #6, !dbg !48, !srcloc !26
  %1396 = extractvalue { i32, i32 } %1395, 0, !dbg !48
  %1397 = extractvalue { i32, i32 } %1395, 1, !dbg !48
  %1398 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %indvars.iv923, !dbg !48
  store i32 %1396, ptr %1398, align 4, !dbg !48
  %indvars.iv.next924 = add nuw nsw i64 %indvars.iv923, 1, !dbg !48
  %exitcond925.not = icmp eq i64 %indvars.iv.next924, 6, !dbg !48
  br i1 %exitcond925.not, label %1399, label %1392, !dbg !48, !llvm.loop !50

1399:                                             ; preds = %1392
  %1400 = getelementptr inbounds i8, ptr %result.i.i.i.i331, i64 24, !dbg !48
  store i32 %1397, ptr %1400, align 4, !dbg !48
  %1401 = and i32 %1386, 31, !dbg !48
  %1402 = sub nsw i32 6, %1391, !dbg !48
  %1403 = sext i32 %1402 to i64, !dbg !48
  %1404 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %1403, !dbg !48
  %1405 = load i32, ptr %1404, align 4, !dbg !48
  %1406 = sub nsw i32 5, %1391, !dbg !48
  %1407 = sext i32 %1406 to i64, !dbg !48
  %1408 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %1407, !dbg !48
  %1409 = load i32, ptr %1408, align 4, !dbg !48
  %.not20.i347 = icmp eq i32 %1401, 0, !dbg !48
  br i1 %.not20.i347, label %__internal_trig_reduction_slowpath.exit.i.i.i348, label %1410, !dbg !48

1410:                                             ; preds = %1399
  %1411 = sub nsw i32 4, %1391, !dbg !48
  %1412 = sub nuw nsw i32 32, %1401, !dbg !48
  %1413 = shl i32 %1405, %1401, !dbg !48
  %1414 = lshr i32 %1409, %1412, !dbg !48
  %1415 = add i32 %1414, %1413, !dbg !48
  %1416 = shl i32 %1409, %1401, !dbg !48
  %1417 = sext i32 %1411 to i64, !dbg !48
  %1418 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %1417, !dbg !48
  %1419 = load i32, ptr %1418, align 4, !dbg !48
  %1420 = lshr i32 %1419, %1412, !dbg !48
  %1421 = add i32 %1420, %1416, !dbg !48
  br label %__internal_trig_reduction_slowpath.exit.i.i.i348, !dbg !48

__internal_trig_reduction_slowpath.exit.i.i.i348: ; preds = %1410, %1399
  %hi.i.i.i.1.i349 = phi i32 [ %1415, %1410 ], [ %1405, %1399 ], !dbg !48
  %lo.i.i.i.0.i350 = phi i32 [ %1421, %1410 ], [ %1409, %1399 ], !dbg !48
  %1422 = lshr i32 %hi.i.i.i.1.i349, 30, !dbg !48
  %1423 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i349, i32 %lo.i.i.i.0.i350, i32 2), !dbg !48
  %1424 = shl i32 %lo.i.i.i.0.i350, 2, !dbg !48
  %1425 = lshr i32 %1423, 31, !dbg !48
  %1426 = add nuw nsw i32 %1425, %1422, !dbg !48
  %1427 = sub nsw i32 0, %1426, !dbg !48
  %.not2123.i351 = icmp slt i32 %1385, 0, !dbg !48
  %spec.select.i352 = select i1 %.not2123.i351, i32 %1427, i32 %1426, !dbg !48
  %1428 = xor i32 %1423, %1385, !dbg !48
  %.lobit.i353 = ashr i32 %1423, 31, !dbg !48
  %hi.i.i.i.2.i354 = xor i32 %.lobit.i353, %1423, !dbg !48
  %lo.i.i.i.1.i356 = xor i32 %.lobit.i353, %1424, !dbg !48
  %1429 = zext i32 %hi.i.i.i.2.i354 to i64, !dbg !48
  %1430 = shl nuw i64 %1429, 32, !dbg !48
  %1431 = zext i32 %lo.i.i.i.1.i356 to i64, !dbg !48
  %1432 = or disjoint i64 %1430, %1431, !dbg !48
  %1433 = sitofp i64 %1432 to double, !dbg !48
  %1434 = fmul double %1433, 0x3BF921FB54442D19, !dbg !48
  %1435 = fptrunc double %1434 to float, !dbg !48
  %1436 = fneg float %1435, !dbg !48
  %.not2526.i357 = icmp slt i32 %1428, 0, !dbg !48
  %r.i.i.i.0.i358 = select i1 %.not2526.i357, float %1436, float %1435, !dbg !48
  br label %__internal_trig_reduction_kernel.exit.i.i359, !dbg !48

__internal_trig_reduction_kernel.exit.i.i359:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i348, %__nv_fmul_rn.exit.i.i.i382, %__nv_sinf.exit330
  %i.i.1.i360 = phi i32 [ %.01.i333, %__nv_sinf.exit330 ], [ 0, %__nv_fmul_rn.exit.i.i.i382 ], [ %spec.select.i352, %__internal_trig_reduction_slowpath.exit.i.i.i348 ], !dbg !48
  %t.i.i.1.i361 = phi float [ %.04.i339, %__nv_sinf.exit330 ], [ %.08.i384, %__nv_fmul_rn.exit.i.i.i382 ], [ %r.i.i.i.0.i358, %__internal_trig_reduction_slowpath.exit.i.i.i348 ], !dbg !48
  %1437 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not28.i362 = icmp eq i32 %1437, 0, !dbg !48
  %1438 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i361, float %t.i.i.1.i361) #5, !dbg !48
  %1439 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i361, float %t.i.i.1.i361) #5, !dbg !48
  %.011.i363 = select i1 %.not28.i362, float %1439, float %1438, !dbg !48
  %1440 = and i32 %i.i.1.i360, 1, !dbg !48
  %.not29.i364 = icmp eq i32 %1440, 0, !dbg !48
  %1441 = select i1 %.not29.i364, float %t.i.i.1.i361, float 1.000000e+00, !dbg !48
  %1442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not30.i365 = icmp eq i32 %1442, 0, !dbg !48
  %1443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i363, float %1441, float 0.000000e+00) #5, !dbg !48
  %1444 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i363, float %1441, float 0.000000e+00) #5, !dbg !48
  %.012.i366 = select i1 %.not30.i365, float %1444, float %1443, !dbg !48
  br i1 %.not29.i364, label %__internal_fmad.exit2.i.i.i370, label %__internal_fmad.exit1.i.i.i367, !dbg !48

__internal_fmad.exit1.i.i.i367:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i359
  %1445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not31.i368 = icmp eq i32 %1445, 0, !dbg !48
  %1446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i363, float 0xBF56C0FDA0000000) #5, !dbg !48
  %1447 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i363, float 0xBF56C0FDA0000000) #5, !dbg !48
  %.013.i369 = select i1 %.not31.i368, float %1447, float %1446, !dbg !48
  br label %__internal_fmad.exit2.i.i.i370, !dbg !48

__internal_fmad.exit2.i.i.i370:                   ; preds = %__internal_fmad.exit1.i.i.i367, %__internal_trig_reduction_kernel.exit.i.i359
  %1448 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i367 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !48
  %1449 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i367 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !48
  %1450 = phi float [ %.013.i369, %__internal_fmad.exit1.i.i.i367 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !48
  %1451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not32.i371 = icmp eq i32 %1451, 0, !dbg !48
  %1452 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1450, float %.011.i363, float %1449) #5, !dbg !48
  %1453 = tail call float @llvm.nvvm.fma.rn.f(float %1450, float %.011.i363, float %1449) #5, !dbg !48
  %.010.i372 = select i1 %.not32.i371, float %1453, float %1452, !dbg !48
  %1454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not33.i373 = icmp eq i32 %1454, 0, !dbg !48
  %1455 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i372, float %.011.i363, float %1448) #5, !dbg !48
  %1456 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i372, float %.011.i363, float %1448) #5, !dbg !48
  %.09.i374 = select i1 %.not33.i373, float %1456, float %1455, !dbg !48
  %1457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not34.i375 = icmp eq i32 %1457, 0, !dbg !48
  %1458 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i374, float %.012.i366, float %1441) #5, !dbg !48
  %1459 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i374, float %.012.i366, float %1441) #5, !dbg !48
  %.05.i376 = select i1 %.not34.i375, float %1459, float %1458, !dbg !48
  %1460 = and i32 %i.i.1.i360, 2, !dbg !48
  %.not35.i377 = icmp eq i32 %1460, 0, !dbg !48
  br i1 %.not35.i377, label %__nv_sinf.exit385, label %__internal_fmad.exit5.i.i.i378, !dbg !48

__internal_fmad.exit5.i.i.i378:                   ; preds = %__internal_fmad.exit2.i.i.i370
  %1461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not36.i379 = icmp eq i32 %1461, 0, !dbg !48
  %1462 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i376, float -1.000000e+00, float 0.000000e+00) #5, !dbg !48
  %1463 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i376, float -1.000000e+00, float 0.000000e+00) #5, !dbg !48
  %.0.i380 = select i1 %.not36.i379, float %1463, float %1462, !dbg !48
  br label %__nv_sinf.exit385, !dbg !48

__nv_sinf.exit385:                                ; preds = %__internal_fmad.exit2.i.i.i370, %__internal_fmad.exit5.i.i.i378
  %z.i.i.0.i381 = phi float [ %.0.i380, %__internal_fmad.exit5.i.i.i378 ], [ %.05.i376, %__internal_fmad.exit2.i.i.i370 ], !dbg !48
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i331), !dbg !48
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i714), !dbg !51
  %1464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not.i715 = icmp eq i32 %1464, 0, !dbg !51
  %.01.i716 = select i1 %.not.i715, i32 %1261, i32 %1260, !dbg !51
  %1465 = sitofp i32 %.01.i716 to float, !dbg !51
  %1466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not15.i717 = icmp eq i32 %1466, 0, !dbg !51
  %1467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1465, float 0xBFF921FB40000000, float %1256) #5, !dbg !51
  %1468 = tail call float @llvm.nvvm.fma.rn.f(float %1465, float 0xBFF921FB40000000, float %1256) #5, !dbg !51
  %.02.i718 = select i1 %.not15.i717, float %1468, float %1467, !dbg !51
  %1469 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not16.i719 = icmp eq i32 %1469, 0, !dbg !51
  %1470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1465, float 0xBE74442D00000000, float %.02.i718) #5, !dbg !51
  %1471 = tail call float @llvm.nvvm.fma.rn.f(float %1465, float 0xBE74442D00000000, float %.02.i718) #5, !dbg !51
  %.03.i720 = select i1 %.not16.i719, float %1471, float %1470, !dbg !51
  %1472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not17.i721 = icmp eq i32 %1472, 0, !dbg !51
  %1473 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1465, float 0xBCF84698A0000000, float %.03.i720) #5, !dbg !51
  %1474 = tail call float @llvm.nvvm.fma.rn.f(float %1465, float 0xBCF84698A0000000, float %.03.i720) #5, !dbg !51
  %.04.i722 = select i1 %.not17.i721, float %1474, float %1473, !dbg !51
  %1475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not18.i723 = icmp eq i32 %1475, 0, !dbg !51
  %.06.i724 = select i1 %.not18.i723, float %1274, float %1273, !dbg !51
  %1476 = fcmp ult float %.06.i724, 1.056150e+05, !dbg !51
  br i1 %1476, label %__internal_trig_reduction_kernel.exit.i.i742, label %__nv_isinff.exit.i.i.i725, !dbg !51

__nv_isinff.exit.i.i.i725:                        ; preds = %__nv_sinf.exit385
  %1477 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not19.i726 = icmp eq i32 %1477, 0, !dbg !51
  %.07.i727 = select i1 %.not19.i726, float %1274, float %1273, !dbg !51
  %1478 = fcmp oeq float %.07.i727, 0x7FF0000000000000, !dbg !51
  br i1 %1478, label %__nv_fmul_rn.exit.i.i.i765, label %1482, !dbg !51

__nv_fmul_rn.exit.i.i.i765:                       ; preds = %__nv_isinff.exit.i.i.i725
  %1479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not27.i766 = icmp eq i32 %1479, 0, !dbg !51
  %1480 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %1256, float 0.000000e+00) #5, !dbg !51
  %1481 = tail call float @llvm.nvvm.mul.rn.f(float %1256, float 0.000000e+00) #5, !dbg !51
  %.08.i767 = select i1 %.not27.i766, float %1481, float %1480, !dbg !51
  br label %__internal_trig_reduction_kernel.exit.i.i742, !dbg !51

1482:                                             ; preds = %__nv_isinff.exit.i.i.i725
  %1483 = bitcast float %1256 to i32, !dbg !51
  %1484 = lshr i32 %1483, 23, !dbg !51
  %1485 = and i32 %1484, 224, !dbg !51
  %1486 = add nsw i32 %1485, -128, !dbg !51
  %1487 = shl i32 %1483, 8, !dbg !51
  %1488 = or i32 %1487, -2147483648, !dbg !51
  %1489 = lshr exact i32 %1486, 5, !dbg !51
  br label %1490, !dbg !51

1490:                                             ; preds = %1482, %1490
  %indvars.iv926 = phi i64 [ 0, %1482 ], [ %indvars.iv.next927, %1490 ]
  %hi.i.i.i.0.i728852 = phi i32 [ 0, %1482 ], [ %1495, %1490 ]
  %1491 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv926, !dbg !51
  %1492 = load i32, ptr addrspace(1) %1491, align 4, !dbg !51
  %1493 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1492, i32 %1488, i32 %hi.i.i.i.0.i728852) #6, !dbg !51, !srcloc !26
  %1494 = extractvalue { i32, i32 } %1493, 0, !dbg !51
  %1495 = extractvalue { i32, i32 } %1493, 1, !dbg !51
  %1496 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %indvars.iv926, !dbg !51
  store i32 %1494, ptr %1496, align 4, !dbg !51
  %indvars.iv.next927 = add nuw nsw i64 %indvars.iv926, 1, !dbg !51
  %exitcond928.not = icmp eq i64 %indvars.iv.next927, 6, !dbg !51
  br i1 %exitcond928.not, label %1497, label %1490, !dbg !51, !llvm.loop !52

1497:                                             ; preds = %1490
  %1498 = getelementptr inbounds i8, ptr %result.i.i.i.i714, i64 24, !dbg !51
  store i32 %1495, ptr %1498, align 4, !dbg !51
  %1499 = and i32 %1484, 31, !dbg !51
  %1500 = sub nsw i32 6, %1489, !dbg !51
  %1501 = sext i32 %1500 to i64, !dbg !51
  %1502 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %1501, !dbg !51
  %1503 = load i32, ptr %1502, align 4, !dbg !51
  %1504 = sub nsw i32 5, %1489, !dbg !51
  %1505 = sext i32 %1504 to i64, !dbg !51
  %1506 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %1505, !dbg !51
  %1507 = load i32, ptr %1506, align 4, !dbg !51
  %.not20.i730 = icmp eq i32 %1499, 0, !dbg !51
  br i1 %.not20.i730, label %__internal_trig_reduction_slowpath.exit.i.i.i731, label %1508, !dbg !51

1508:                                             ; preds = %1497
  %1509 = sub nsw i32 4, %1489, !dbg !51
  %1510 = sub nuw nsw i32 32, %1499, !dbg !51
  %1511 = shl i32 %1503, %1499, !dbg !51
  %1512 = lshr i32 %1507, %1510, !dbg !51
  %1513 = add i32 %1512, %1511, !dbg !51
  %1514 = shl i32 %1507, %1499, !dbg !51
  %1515 = sext i32 %1509 to i64, !dbg !51
  %1516 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %1515, !dbg !51
  %1517 = load i32, ptr %1516, align 4, !dbg !51
  %1518 = lshr i32 %1517, %1510, !dbg !51
  %1519 = add i32 %1518, %1514, !dbg !51
  br label %__internal_trig_reduction_slowpath.exit.i.i.i731, !dbg !51

__internal_trig_reduction_slowpath.exit.i.i.i731: ; preds = %1508, %1497
  %hi.i.i.i.1.i732 = phi i32 [ %1513, %1508 ], [ %1503, %1497 ], !dbg !51
  %lo.i.i.i.0.i733 = phi i32 [ %1519, %1508 ], [ %1507, %1497 ], !dbg !51
  %1520 = lshr i32 %hi.i.i.i.1.i732, 30, !dbg !51
  %1521 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i732, i32 %lo.i.i.i.0.i733, i32 2), !dbg !51
  %1522 = shl i32 %lo.i.i.i.0.i733, 2, !dbg !51
  %1523 = lshr i32 %1521, 31, !dbg !51
  %1524 = add nuw nsw i32 %1523, %1520, !dbg !51
  %1525 = sub nsw i32 0, %1524, !dbg !51
  %.not2123.i734 = icmp slt i32 %1483, 0, !dbg !51
  %spec.select.i735 = select i1 %.not2123.i734, i32 %1525, i32 %1524, !dbg !51
  %1526 = xor i32 %1521, %1483, !dbg !51
  %.lobit.i736 = ashr i32 %1521, 31, !dbg !51
  %hi.i.i.i.2.i737 = xor i32 %.lobit.i736, %1521, !dbg !51
  %lo.i.i.i.1.i739 = xor i32 %.lobit.i736, %1522, !dbg !51
  %1527 = zext i32 %hi.i.i.i.2.i737 to i64, !dbg !51
  %1528 = shl nuw i64 %1527, 32, !dbg !51
  %1529 = zext i32 %lo.i.i.i.1.i739 to i64, !dbg !51
  %1530 = or disjoint i64 %1528, %1529, !dbg !51
  %1531 = sitofp i64 %1530 to double, !dbg !51
  %1532 = fmul double %1531, 0x3BF921FB54442D19, !dbg !51
  %1533 = fptrunc double %1532 to float, !dbg !51
  %1534 = fneg float %1533, !dbg !51
  %.not2526.i740 = icmp slt i32 %1526, 0, !dbg !51
  %r.i.i.i.0.i741 = select i1 %.not2526.i740, float %1534, float %1533, !dbg !51
  br label %__internal_trig_reduction_kernel.exit.i.i742, !dbg !51

__internal_trig_reduction_kernel.exit.i.i742:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i731, %__nv_fmul_rn.exit.i.i.i765, %__nv_sinf.exit385
  %i.i.1.i743 = phi i32 [ %.01.i716, %__nv_sinf.exit385 ], [ 0, %__nv_fmul_rn.exit.i.i.i765 ], [ %spec.select.i735, %__internal_trig_reduction_slowpath.exit.i.i.i731 ], !dbg !51
  %t.i.i.1.i744 = phi float [ %.04.i722, %__nv_sinf.exit385 ], [ %.08.i767, %__nv_fmul_rn.exit.i.i.i765 ], [ %r.i.i.i.0.i741, %__internal_trig_reduction_slowpath.exit.i.i.i731 ], !dbg !51
  %1535 = add i32 %i.i.1.i743, 1, !dbg !51
  %1536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not28.i745 = icmp eq i32 %1536, 0, !dbg !51
  %1537 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i744, float %t.i.i.1.i744) #5, !dbg !51
  %1538 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i744, float %t.i.i.1.i744) #5, !dbg !51
  %.011.i746 = select i1 %.not28.i745, float %1538, float %1537, !dbg !51
  %1539 = and i32 %i.i.1.i743, 1, !dbg !51
  %.not29.not.i747 = icmp eq i32 %1539, 0, !dbg !51
  %1540 = select i1 %.not29.not.i747, float 1.000000e+00, float %t.i.i.1.i744, !dbg !51
  %1541 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not30.i748 = icmp eq i32 %1541, 0, !dbg !51
  %1542 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i746, float %1540, float 0.000000e+00) #5, !dbg !51
  %1543 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i746, float %1540, float 0.000000e+00) #5, !dbg !51
  %.012.i749 = select i1 %.not30.i748, float %1543, float %1542, !dbg !51
  br i1 %.not29.not.i747, label %__internal_fmad.exit1.i.i.i762, label %__internal_fmad.exit2.i.i.i750, !dbg !51

__internal_fmad.exit1.i.i.i762:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i742
  %1544 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not31.i763 = icmp eq i32 %1544, 0, !dbg !51
  %1545 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i746, float 0xBF56C0FDA0000000) #5, !dbg !51
  %1546 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i746, float 0xBF56C0FDA0000000) #5, !dbg !51
  %.013.i764 = select i1 %.not31.i763, float %1546, float %1545, !dbg !51
  br label %__internal_fmad.exit2.i.i.i750, !dbg !51

__internal_fmad.exit2.i.i.i750:                   ; preds = %__internal_fmad.exit1.i.i.i762, %__internal_trig_reduction_kernel.exit.i.i742
  %1547 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i762 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i742 ], !dbg !51
  %1548 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i762 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i742 ], !dbg !51
  %1549 = phi float [ %.013.i764, %__internal_fmad.exit1.i.i.i762 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i742 ], !dbg !51
  %1550 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not32.i751 = icmp eq i32 %1550, 0, !dbg !51
  %1551 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1549, float %.011.i746, float %1548) #5, !dbg !51
  %1552 = tail call float @llvm.nvvm.fma.rn.f(float %1549, float %.011.i746, float %1548) #5, !dbg !51
  %.010.i752 = select i1 %.not32.i751, float %1552, float %1551, !dbg !51
  %1553 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not33.i753 = icmp eq i32 %1553, 0, !dbg !51
  %1554 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i752, float %.011.i746, float %1547) #5, !dbg !51
  %1555 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i752, float %.011.i746, float %1547) #5, !dbg !51
  %.09.i754 = select i1 %.not33.i753, float %1555, float %1554, !dbg !51
  %1556 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not34.i755 = icmp eq i32 %1556, 0, !dbg !51
  %1557 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i754, float %.012.i749, float %1540) #5, !dbg !51
  %1558 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i754, float %.012.i749, float %1540) #5, !dbg !51
  %.05.i756 = select i1 %.not34.i755, float %1558, float %1557, !dbg !51
  %1559 = and i32 %1535, 2, !dbg !51
  %.not35.i757 = icmp eq i32 %1559, 0, !dbg !51
  br i1 %.not35.i757, label %__nv_cosf.exit768, label %__internal_fmad.exit5.i.i.i758, !dbg !51

__internal_fmad.exit5.i.i.i758:                   ; preds = %__internal_fmad.exit2.i.i.i750
  %1560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not36.i759 = icmp eq i32 %1560, 0, !dbg !51
  %1561 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i756, float -1.000000e+00, float 0.000000e+00) #5, !dbg !51
  %1562 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i756, float -1.000000e+00, float 0.000000e+00) #5, !dbg !51
  %.0.i760 = select i1 %.not36.i759, float %1562, float %1561, !dbg !51
  br label %__nv_cosf.exit768, !dbg !51

__nv_cosf.exit768:                                ; preds = %__internal_fmad.exit2.i.i.i750, %__internal_fmad.exit5.i.i.i758
  %z.i.i.0.i761 = phi float [ %.0.i760, %__internal_fmad.exit5.i.i.i758 ], [ %.05.i756, %__internal_fmad.exit2.i.i.i750 ], !dbg !51
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i714), !dbg !51
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i769), !dbg !51
  %1563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not.i770 = icmp eq i32 %1563, 0, !dbg !51
  %.01.i771 = select i1 %.not.i770, i32 %1364, i32 %1363, !dbg !51
  %1564 = sitofp i32 %.01.i771 to float, !dbg !51
  %1565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not15.i772 = icmp eq i32 %1565, 0, !dbg !51
  %1566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1564, float 0xBFF921FB40000000, float %1257) #5, !dbg !51
  %1567 = tail call float @llvm.nvvm.fma.rn.f(float %1564, float 0xBFF921FB40000000, float %1257) #5, !dbg !51
  %.02.i773 = select i1 %.not15.i772, float %1567, float %1566, !dbg !51
  %1568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not16.i774 = icmp eq i32 %1568, 0, !dbg !51
  %1569 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1564, float 0xBE74442D00000000, float %.02.i773) #5, !dbg !51
  %1570 = tail call float @llvm.nvvm.fma.rn.f(float %1564, float 0xBE74442D00000000, float %.02.i773) #5, !dbg !51
  %.03.i775 = select i1 %.not16.i774, float %1570, float %1569, !dbg !51
  %1571 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not17.i776 = icmp eq i32 %1571, 0, !dbg !51
  %1572 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1564, float 0xBCF84698A0000000, float %.03.i775) #5, !dbg !51
  %1573 = tail call float @llvm.nvvm.fma.rn.f(float %1564, float 0xBCF84698A0000000, float %.03.i775) #5, !dbg !51
  %.04.i777 = select i1 %.not17.i776, float %1573, float %1572, !dbg !51
  %1574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not18.i778 = icmp eq i32 %1574, 0, !dbg !51
  %.06.i779 = select i1 %.not18.i778, float %1377, float %1376, !dbg !51
  %1575 = fcmp ult float %.06.i779, 1.056150e+05, !dbg !51
  br i1 %1575, label %__internal_trig_reduction_kernel.exit.i.i797, label %__nv_isinff.exit.i.i.i780, !dbg !51

__nv_isinff.exit.i.i.i780:                        ; preds = %__nv_cosf.exit768
  %1576 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not19.i781 = icmp eq i32 %1576, 0, !dbg !51
  %.07.i782 = select i1 %.not19.i781, float %1377, float %1376, !dbg !51
  %1577 = fcmp oeq float %.07.i782, 0x7FF0000000000000, !dbg !51
  br i1 %1577, label %__nv_fmul_rn.exit.i.i.i820, label %1581, !dbg !51

__nv_fmul_rn.exit.i.i.i820:                       ; preds = %__nv_isinff.exit.i.i.i780
  %1578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not27.i821 = icmp eq i32 %1578, 0, !dbg !51
  %1579 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %1257, float 0.000000e+00) #5, !dbg !51
  %1580 = tail call float @llvm.nvvm.mul.rn.f(float %1257, float 0.000000e+00) #5, !dbg !51
  %.08.i822 = select i1 %.not27.i821, float %1580, float %1579, !dbg !51
  br label %__internal_trig_reduction_kernel.exit.i.i797, !dbg !51

1581:                                             ; preds = %__nv_isinff.exit.i.i.i780
  %1582 = bitcast float %1257 to i32, !dbg !51
  %1583 = lshr i32 %1582, 23, !dbg !51
  %1584 = and i32 %1583, 224, !dbg !51
  %1585 = add nsw i32 %1584, -128, !dbg !51
  %1586 = shl i32 %1582, 8, !dbg !51
  %1587 = or i32 %1586, -2147483648, !dbg !51
  %1588 = lshr exact i32 %1585, 5, !dbg !51
  br label %1589, !dbg !51

1589:                                             ; preds = %1581, %1589
  %indvars.iv929 = phi i64 [ 0, %1581 ], [ %indvars.iv.next930, %1589 ]
  %hi.i.i.i.0.i783854 = phi i32 [ 0, %1581 ], [ %1594, %1589 ]
  %1590 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv929, !dbg !51
  %1591 = load i32, ptr addrspace(1) %1590, align 4, !dbg !51
  %1592 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1591, i32 %1587, i32 %hi.i.i.i.0.i783854) #6, !dbg !51, !srcloc !26
  %1593 = extractvalue { i32, i32 } %1592, 0, !dbg !51
  %1594 = extractvalue { i32, i32 } %1592, 1, !dbg !51
  %1595 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %indvars.iv929, !dbg !51
  store i32 %1593, ptr %1595, align 4, !dbg !51
  %indvars.iv.next930 = add nuw nsw i64 %indvars.iv929, 1, !dbg !51
  %exitcond931.not = icmp eq i64 %indvars.iv.next930, 6, !dbg !51
  br i1 %exitcond931.not, label %1596, label %1589, !dbg !51, !llvm.loop !53

1596:                                             ; preds = %1589
  %1597 = getelementptr inbounds i8, ptr %result.i.i.i.i769, i64 24, !dbg !51
  store i32 %1594, ptr %1597, align 4, !dbg !51
  %1598 = and i32 %1583, 31, !dbg !51
  %1599 = sub nsw i32 6, %1588, !dbg !51
  %1600 = sext i32 %1599 to i64, !dbg !51
  %1601 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %1600, !dbg !51
  %1602 = load i32, ptr %1601, align 4, !dbg !51
  %1603 = sub nsw i32 5, %1588, !dbg !51
  %1604 = sext i32 %1603 to i64, !dbg !51
  %1605 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %1604, !dbg !51
  %1606 = load i32, ptr %1605, align 4, !dbg !51
  %.not20.i785 = icmp eq i32 %1598, 0, !dbg !51
  br i1 %.not20.i785, label %__internal_trig_reduction_slowpath.exit.i.i.i786, label %1607, !dbg !51

1607:                                             ; preds = %1596
  %1608 = sub nsw i32 4, %1588, !dbg !51
  %1609 = sub nuw nsw i32 32, %1598, !dbg !51
  %1610 = shl i32 %1602, %1598, !dbg !51
  %1611 = lshr i32 %1606, %1609, !dbg !51
  %1612 = add i32 %1611, %1610, !dbg !51
  %1613 = shl i32 %1606, %1598, !dbg !51
  %1614 = sext i32 %1608 to i64, !dbg !51
  %1615 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %1614, !dbg !51
  %1616 = load i32, ptr %1615, align 4, !dbg !51
  %1617 = lshr i32 %1616, %1609, !dbg !51
  %1618 = add i32 %1617, %1613, !dbg !51
  br label %__internal_trig_reduction_slowpath.exit.i.i.i786, !dbg !51

__internal_trig_reduction_slowpath.exit.i.i.i786: ; preds = %1607, %1596
  %hi.i.i.i.1.i787 = phi i32 [ %1612, %1607 ], [ %1602, %1596 ], !dbg !51
  %lo.i.i.i.0.i788 = phi i32 [ %1618, %1607 ], [ %1606, %1596 ], !dbg !51
  %1619 = lshr i32 %hi.i.i.i.1.i787, 30, !dbg !51
  %1620 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i787, i32 %lo.i.i.i.0.i788, i32 2), !dbg !51
  %1621 = shl i32 %lo.i.i.i.0.i788, 2, !dbg !51
  %1622 = lshr i32 %1620, 31, !dbg !51
  %1623 = add nuw nsw i32 %1622, %1619, !dbg !51
  %1624 = sub nsw i32 0, %1623, !dbg !51
  %.not2123.i789 = icmp slt i32 %1582, 0, !dbg !51
  %spec.select.i790 = select i1 %.not2123.i789, i32 %1624, i32 %1623, !dbg !51
  %1625 = xor i32 %1620, %1582, !dbg !51
  %.lobit.i791 = ashr i32 %1620, 31, !dbg !51
  %hi.i.i.i.2.i792 = xor i32 %.lobit.i791, %1620, !dbg !51
  %lo.i.i.i.1.i794 = xor i32 %.lobit.i791, %1621, !dbg !51
  %1626 = zext i32 %hi.i.i.i.2.i792 to i64, !dbg !51
  %1627 = shl nuw i64 %1626, 32, !dbg !51
  %1628 = zext i32 %lo.i.i.i.1.i794 to i64, !dbg !51
  %1629 = or disjoint i64 %1627, %1628, !dbg !51
  %1630 = sitofp i64 %1629 to double, !dbg !51
  %1631 = fmul double %1630, 0x3BF921FB54442D19, !dbg !51
  %1632 = fptrunc double %1631 to float, !dbg !51
  %1633 = fneg float %1632, !dbg !51
  %.not2526.i795 = icmp slt i32 %1625, 0, !dbg !51
  %r.i.i.i.0.i796 = select i1 %.not2526.i795, float %1633, float %1632, !dbg !51
  br label %__internal_trig_reduction_kernel.exit.i.i797, !dbg !51

__internal_trig_reduction_kernel.exit.i.i797:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i786, %__nv_fmul_rn.exit.i.i.i820, %__nv_cosf.exit768
  %i.i.1.i798 = phi i32 [ %.01.i771, %__nv_cosf.exit768 ], [ 0, %__nv_fmul_rn.exit.i.i.i820 ], [ %spec.select.i790, %__internal_trig_reduction_slowpath.exit.i.i.i786 ], !dbg !51
  %t.i.i.1.i799 = phi float [ %.04.i777, %__nv_cosf.exit768 ], [ %.08.i822, %__nv_fmul_rn.exit.i.i.i820 ], [ %r.i.i.i.0.i796, %__internal_trig_reduction_slowpath.exit.i.i.i786 ], !dbg !51
  %1634 = add i32 %i.i.1.i798, 1, !dbg !51
  %1635 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not28.i800 = icmp eq i32 %1635, 0, !dbg !51
  %1636 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i799, float %t.i.i.1.i799) #5, !dbg !51
  %1637 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i799, float %t.i.i.1.i799) #5, !dbg !51
  %.011.i801 = select i1 %.not28.i800, float %1637, float %1636, !dbg !51
  %1638 = and i32 %i.i.1.i798, 1, !dbg !51
  %.not29.not.i802 = icmp eq i32 %1638, 0, !dbg !51
  %1639 = select i1 %.not29.not.i802, float 1.000000e+00, float %t.i.i.1.i799, !dbg !51
  %1640 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not30.i803 = icmp eq i32 %1640, 0, !dbg !51
  %1641 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i801, float %1639, float 0.000000e+00) #5, !dbg !51
  %1642 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i801, float %1639, float 0.000000e+00) #5, !dbg !51
  %.012.i804 = select i1 %.not30.i803, float %1642, float %1641, !dbg !51
  br i1 %.not29.not.i802, label %__internal_fmad.exit1.i.i.i817, label %__internal_fmad.exit2.i.i.i805, !dbg !51

__internal_fmad.exit1.i.i.i817:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i797
  %1643 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not31.i818 = icmp eq i32 %1643, 0, !dbg !51
  %1644 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i801, float 0xBF56C0FDA0000000) #5, !dbg !51
  %1645 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i801, float 0xBF56C0FDA0000000) #5, !dbg !51
  %.013.i819 = select i1 %.not31.i818, float %1645, float %1644, !dbg !51
  br label %__internal_fmad.exit2.i.i.i805, !dbg !51

__internal_fmad.exit2.i.i.i805:                   ; preds = %__internal_fmad.exit1.i.i.i817, %__internal_trig_reduction_kernel.exit.i.i797
  %1646 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i817 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i797 ], !dbg !51
  %1647 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i817 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i797 ], !dbg !51
  %1648 = phi float [ %.013.i819, %__internal_fmad.exit1.i.i.i817 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i797 ], !dbg !51
  %1649 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not32.i806 = icmp eq i32 %1649, 0, !dbg !51
  %1650 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1648, float %.011.i801, float %1647) #5, !dbg !51
  %1651 = tail call float @llvm.nvvm.fma.rn.f(float %1648, float %.011.i801, float %1647) #5, !dbg !51
  %.010.i807 = select i1 %.not32.i806, float %1651, float %1650, !dbg !51
  %1652 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not33.i808 = icmp eq i32 %1652, 0, !dbg !51
  %1653 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i807, float %.011.i801, float %1646) #5, !dbg !51
  %1654 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i807, float %.011.i801, float %1646) #5, !dbg !51
  %.09.i809 = select i1 %.not33.i808, float %1654, float %1653, !dbg !51
  %1655 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not34.i810 = icmp eq i32 %1655, 0, !dbg !51
  %1656 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i809, float %.012.i804, float %1639) #5, !dbg !51
  %1657 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i809, float %.012.i804, float %1639) #5, !dbg !51
  %.05.i811 = select i1 %.not34.i810, float %1657, float %1656, !dbg !51
  %1658 = and i32 %1634, 2, !dbg !51
  %.not35.i812 = icmp eq i32 %1658, 0, !dbg !51
  br i1 %.not35.i812, label %__nv_cosf.exit823, label %__internal_fmad.exit5.i.i.i813, !dbg !51

__internal_fmad.exit5.i.i.i813:                   ; preds = %__internal_fmad.exit2.i.i.i805
  %1659 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !51
  %.not36.i814 = icmp eq i32 %1659, 0, !dbg !51
  %1660 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i811, float -1.000000e+00, float 0.000000e+00) #5, !dbg !51
  %1661 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i811, float -1.000000e+00, float 0.000000e+00) #5, !dbg !51
  %.0.i815 = select i1 %.not36.i814, float %1661, float %1660, !dbg !51
  br label %__nv_cosf.exit823, !dbg !51

__nv_cosf.exit823:                                ; preds = %__internal_fmad.exit2.i.i.i805, %__internal_fmad.exit5.i.i.i813
  %z.i.i.0.i816 = phi float [ %.0.i815, %__internal_fmad.exit5.i.i.i813 ], [ %.05.i811, %__internal_fmad.exit2.i.i.i805 ], !dbg !51
  %1662 = and i32 %15, 127, !dbg !12
  %1663 = or disjoint i32 %1662, 128, !dbg !12
  %1664 = or disjoint i32 %14, %1663, !dbg !13
  %.frozen = freeze i32 %1664, !dbg !54
  %1665 = sdiv i32 %.frozen, 4, !dbg !54
  %1666 = or disjoint i32 %14, %1662, !dbg !13
  %.frozen992 = freeze i32 %1666, !dbg !54
  %1667 = sdiv i32 %.frozen992, 4, !dbg !54
  %.frozen994 = freeze i32 %18, !dbg !54
  %1668 = sdiv i32 %.frozen994, 4, !dbg !54
  %1669 = mul i32 %1665, 4, !dbg !55
  %.decomposed = sub i32 %.frozen, %1669, !dbg !55
  %1670 = mul i32 %1667, 4, !dbg !55
  %.decomposed993 = sub i32 %.frozen992, %1670, !dbg !55
  %1671 = mul i32 %1668, 4, !dbg !55
  %.decomposed995 = sub i32 %.frozen994, %1671, !dbg !55
  %1672 = icmp slt i32 %1664, 256, !dbg !14
  %1673 = icmp slt i32 %1666, 256, !dbg !14
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i769), !dbg !51
  %1674 = mul i32 %1668, 36, !dbg !56
  %1675 = mul i32 %1667, 36, !dbg !56
  %1676 = mul i32 %1665, 36, !dbg !56
  %1677 = add i32 %1674, %.decomposed995, !dbg !57
  %1678 = add i32 %1675, %.decomposed993, !dbg !57
  %1679 = add i32 %1676, %.decomposed, !dbg !57
  %1680 = sext i32 %1677 to i64, !dbg !58
  %1681 = getelementptr float, ptr addrspace(1) %2, i64 %1680, !dbg !58
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %23, i32 %24, ptr addrspace(1) %1681, i1 %19) #5, !dbg !59
  %1682 = sext i32 %1678 to i64, !dbg !60
  %1683 = getelementptr float, ptr addrspace(1) %3, i64 %1682, !dbg !60
  %1684 = sext i32 %1679 to i64, !dbg !60
  %1685 = getelementptr float, ptr addrspace(1) %3, i64 %1684, !dbg !60
  %1686 = zext nneg i32 %17 to i64, !dbg !61
  %1687 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %1686, !dbg !61
  %1688 = bitcast float %z.i.i.0.i to i32, !dbg !61
  %1689 = bitcast float %z.i.i.0.i51 to i32, !dbg !61
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %1687, i32 %1688, i32 %1689, i1 true) #5, !dbg !61
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %1690 = zext nneg i32 %1662 to i64, !dbg !61
  %1691 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %1690, !dbg !61
  %1692 = load i32, ptr addrspace(3) %1691, align 4, !dbg !61
  %1693 = zext nneg i32 %1663 to i64, !dbg !61
  %1694 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %1693, !dbg !61
  %1695 = load i32, ptr addrspace(3) %1694, align 4, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1692, ptr addrspace(1) %1683, i1 %1673) #5, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1695, ptr addrspace(1) %1685, i1 %1672) #5, !dbg !61
  %1696 = getelementptr float, ptr addrspace(1) %4, i64 %1682, !dbg !62
  %1697 = getelementptr float, ptr addrspace(1) %4, i64 %1684, !dbg !62
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %1698 = bitcast float %z.i.i.0.i432 to i32, !dbg !63
  %1699 = bitcast float %z.i.i.0.i486 to i32, !dbg !63
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %1687, i32 %1698, i32 %1699, i1 true) #5, !dbg !63
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %1700 = load i32, ptr addrspace(3) %1691, align 4, !dbg !63
  %1701 = load i32, ptr addrspace(3) %1694, align 4, !dbg !63
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1700, ptr addrspace(1) %1696, i1 %1673) #5, !dbg !63
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1701, ptr addrspace(1) %1697, i1 %1672) #5, !dbg !63
  %1702 = getelementptr float, ptr addrspace(1) %5, i64 %1682, !dbg !64
  %1703 = getelementptr float, ptr addrspace(1) %5, i64 %1684, !dbg !64
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %1704 = bitcast float %z.i.i.0.i106 to i32, !dbg !65
  %1705 = bitcast float %z.i.i.0.i161 to i32, !dbg !65
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %1687, i32 %1704, i32 %1705, i1 true) #5, !dbg !65
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %1706 = load i32, ptr addrspace(3) %1691, align 4, !dbg !65
  %1707 = load i32, ptr addrspace(3) %1694, align 4, !dbg !65
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1706, ptr addrspace(1) %1702, i1 %1673) #5, !dbg !65
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1707, ptr addrspace(1) %1703, i1 %1672) #5, !dbg !65
  %1708 = getelementptr float, ptr addrspace(1) %6, i64 %1680, !dbg !66
  %1709 = bitcast float %z.i.i.0.i541 to i32, !dbg !67
  %1710 = bitcast float %z.i.i.0.i596 to i32, !dbg !67
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %1709, i32 %1710, ptr addrspace(1) %1708, i1 %19) #5, !dbg !67
  %1711 = getelementptr float, ptr addrspace(1) %7, i64 %1682, !dbg !68
  %1712 = getelementptr float, ptr addrspace(1) %7, i64 %1684, !dbg !68
  tail call void @llvm.nvvm.barrier0(), !dbg !69
  %1713 = bitcast float %z.i.i.0.i216 to i32, !dbg !69
  %1714 = bitcast float %z.i.i.0.i271 to i32, !dbg !69
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %1687, i32 %1713, i32 %1714, i1 true) #5, !dbg !69
  tail call void @llvm.nvvm.barrier0(), !dbg !69
  %1715 = load i32, ptr addrspace(3) %1691, align 4, !dbg !69
  %1716 = load i32, ptr addrspace(3) %1694, align 4, !dbg !69
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1715, ptr addrspace(1) %1711, i1 %1673) #5, !dbg !69
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1716, ptr addrspace(1) %1712, i1 %1672) #5, !dbg !69
  %1717 = getelementptr float, ptr addrspace(1) %8, i64 %1682, !dbg !70
  %1718 = getelementptr float, ptr addrspace(1) %8, i64 %1684, !dbg !70
  tail call void @llvm.nvvm.barrier0(), !dbg !71
  %1719 = bitcast float %z.i.i.0.i651 to i32, !dbg !71
  %1720 = bitcast float %z.i.i.0.i706 to i32, !dbg !71
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %1687, i32 %1719, i32 %1720, i1 true) #5, !dbg !71
  tail call void @llvm.nvvm.barrier0(), !dbg !71
  %1721 = load i32, ptr addrspace(3) %1691, align 4, !dbg !71
  %1722 = load i32, ptr addrspace(3) %1694, align 4, !dbg !71
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1721, ptr addrspace(1) %1717, i1 %1673) #5, !dbg !71
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1722, ptr addrspace(1) %1718, i1 %1672) #5, !dbg !71
  %1723 = getelementptr float, ptr addrspace(1) %9, i64 %1682, !dbg !72
  %1724 = getelementptr float, ptr addrspace(1) %9, i64 %1684, !dbg !72
  tail call void @llvm.nvvm.barrier0(), !dbg !73
  %1725 = bitcast float %z.i.i.0.i326 to i32, !dbg !73
  %1726 = bitcast float %z.i.i.0.i381 to i32, !dbg !73
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %1687, i32 %1725, i32 %1726, i1 true) #5, !dbg !73
  tail call void @llvm.nvvm.barrier0(), !dbg !73
  %1727 = load i32, ptr addrspace(3) %1691, align 4, !dbg !73
  %1728 = load i32, ptr addrspace(3) %1694, align 4, !dbg !73
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1727, ptr addrspace(1) %1723, i1 %1673) #5, !dbg !73
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1728, ptr addrspace(1) %1724, i1 %1672) #5, !dbg !73
  %1729 = getelementptr float, ptr addrspace(1) %10, i64 %1680, !dbg !74
  %1730 = bitcast float %z.i.i.0.i761 to i32, !dbg !75
  %1731 = bitcast float %z.i.i.0.i816 to i32, !dbg !75
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %1730, i32 %1731, ptr addrspace(1) %1729, i1 %19) #5, !dbg !75
  ret void, !dbg !76
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbbqdyfxttjdq3nnmt36l6mzojhmhtj52thc4zevq77hiwo4xvxa.py", directory: "inductor_cache/bb")
!4 = !{ptr @triton_poi_fused_cat_cos_mul_sin_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_cos_mul_sin_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_cos_mul_sin_0", linkageName: "triton_poi_fused_cat_cos_mul_sin_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 27, column: 30, scope: !7)
!16 = !DILocation(line: 27, column: 35, scope: !7)
!17 = !DILocation(line: 28, column: 19, scope: !7)
!18 = !DILocation(line: 30, column: 30, scope: !7)
!19 = !DILocation(line: 30, column: 19, scope: !7)
!20 = !DILocation(line: 32, column: 31, scope: !7)
!21 = !DILocation(line: 32, column: 20, scope: !7)
!22 = !DILocation(line: 34, column: 31, scope: !7)
!23 = !DILocation(line: 34, column: 20, scope: !7)
!24 = !DILocation(line: 36, column: 18, scope: !7)
!25 = !DILocation(line: 37, column: 23, scope: !7)
!26 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!27 = distinct !{!27, !28}
!28 = !{!"llvm.loop.unroll.count", i32 1}
!29 = distinct !{!29, !28}
!30 = !DILocation(line: 38, column: 23, scope: !7)
!31 = distinct !{!31, !28}
!32 = distinct !{!32, !28}
!33 = !DILocation(line: 39, column: 18, scope: !7)
!34 = !DILocation(line: 40, column: 23, scope: !7)
!35 = distinct !{!35, !28}
!36 = distinct !{!36, !28}
!37 = !DILocation(line: 41, column: 24, scope: !7)
!38 = distinct !{!38, !28}
!39 = distinct !{!39, !28}
!40 = !DILocation(line: 42, column: 20, scope: !7)
!41 = !DILocation(line: 43, column: 24, scope: !7)
!42 = distinct !{!42, !28}
!43 = distinct !{!43, !28}
!44 = !DILocation(line: 44, column: 24, scope: !7)
!45 = distinct !{!45, !28}
!46 = distinct !{!46, !28}
!47 = !DILocation(line: 45, column: 20, scope: !7)
!48 = !DILocation(line: 46, column: 24, scope: !7)
!49 = distinct !{!49, !28}
!50 = distinct !{!50, !28}
!51 = !DILocation(line: 47, column: 24, scope: !7)
!52 = distinct !{!52, !28}
!53 = distinct !{!53, !28}
!54 = !DILocation(line: 26, column: 19, scope: !7)
!55 = !DILocation(line: 25, column: 19, scope: !7)
!56 = !DILocation(line: 48, column: 33, scope: !7)
!57 = !DILocation(line: 48, column: 30, scope: !7)
!58 = !DILocation(line: 48, column: 25, scope: !7)
!59 = !DILocation(line: 48, column: 44, scope: !7)
!60 = !DILocation(line: 49, column: 25, scope: !7)
!61 = !DILocation(line: 49, column: 44, scope: !7)
!62 = !DILocation(line: 50, column: 25, scope: !7)
!63 = !DILocation(line: 50, column: 44, scope: !7)
!64 = !DILocation(line: 51, column: 25, scope: !7)
!65 = !DILocation(line: 51, column: 44, scope: !7)
!66 = !DILocation(line: 52, column: 25, scope: !7)
!67 = !DILocation(line: 52, column: 45, scope: !7)
!68 = !DILocation(line: 53, column: 25, scope: !7)
!69 = !DILocation(line: 53, column: 45, scope: !7)
!70 = !DILocation(line: 54, column: 25, scope: !7)
!71 = !DILocation(line: 54, column: 45, scope: !7)
!72 = !DILocation(line: 55, column: 25, scope: !7)
!73 = !DILocation(line: 55, column: 45, scope: !7)
!74 = !DILocation(line: 56, column: 25, scope: !7)
!75 = !DILocation(line: 56, column: 45, scope: !7)
!76 = !DILocation(line: 56, column: 4, scope: !7)
