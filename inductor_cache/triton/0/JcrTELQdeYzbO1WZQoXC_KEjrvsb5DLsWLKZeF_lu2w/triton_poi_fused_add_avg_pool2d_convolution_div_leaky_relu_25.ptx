//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_avg_pool2d_convolution_div_leaky_relu_25 // -- Begin function triton_poi_fused_add_avg_pool2d_convolution_div_leaky_relu_25
                                        // @triton_poi_fused_add_avg_pool2d_convolution_div_leaky_relu_25
.visible .entry triton_poi_fused_add_avg_pool2d_convolution_div_leaky_relu_25(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_avg_pool2d_convolution_div_leaky_relu_25_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_avg_pool2d_convolution_div_leaky_relu_25_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_avg_pool2d_convolution_div_leaky_relu_25_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_avg_pool2d_convolution_div_leaky_relu_25_param_3,
	.param .u32 triton_poi_fused_add_avg_pool2d_convolution_div_leaky_relu_25_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<45>;
	.reg .f32 	%f<29>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused_add_avg_pool2d_convolution_div_leaky_relu_25_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_add_avg_pool2d_convolution_div_leaky_relu_25_param_1];
$L__tmp0:
	.loc	1 21 28                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:21:33
	shl.b32 	%r18, %r1, 9;
	ld.param.u64 	%rd11, [triton_poi_fused_add_avg_pool2d_convolution_div_leaky_relu_25_param_2];
	ld.param.u64 	%rd12, [triton_poi_fused_add_avg_pool2d_convolution_div_leaky_relu_25_param_3];
	.loc	1 22 36                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:22:36
	mov.u32 	%r19, %tid.x;
	shl.b32 	%r20, %r19, 1;
	and.b32  	%r21, %r20, 510;
	.loc	1 22 23                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:22:23
	or.b32  	%r22, %r18, %r21;
	.loc	1 25 21                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:25:21
	shr.s32 	%r24, %r22, 31;
	shr.u32 	%r25, %r24, 23;
	add.s32 	%r26, %r22, %r25;
	shr.s32 	%r27, %r26, 9;
	.loc	1 24 19                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:24:19
	and.b32  	%r28, %r26, -512;
	sub.s32 	%r29, %r22, %r28;
	.loc	1 25 28                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:25:28
	shr.u32 	%r30, %r27, 29;
	add.s32 	%r31, %r27, %r30;
	and.b32  	%r32, %r31, 4194296;
	sub.s32 	%r33, %r27, %r32;
	.loc	1 26 19                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:26:19
	bfe.s32 	%r34, %r1, 22, 1;
	shr.u32 	%r35, %r34, 20;
	add.s32 	%r36, %r22, %r35;
	.loc	1 28 40                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:28:40
	shl.b32 	%r37, %r33, 10;
	.loc	1 28 51                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:28:51
	shl.b32 	%r38, %r36, 2;
	and.b32  	%r39, %r38, -16384;
	.loc	1 28 35                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:28:35
	add.s32 	%r40, %r39, %r29;
	.loc	1 28 45                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:28:45
	add.s32 	%r41, %r40, %r37;
	.loc	1 28 30                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:28:30
	mul.wide.s32 	%rd13, %r41, 4;
	add.s64 	%rd1, %rd10, %rd13;
	mov.pred 	%p1, -1;
	.loc	1 28 56                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:28:56
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 29 51                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:29:51
	add.s32 	%r42, %r41, 512;
	.loc	1 29 30                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:29:30
	mul.wide.s32 	%rd14, %r42, 4;
	add.s64 	%rd2, %rd10, %rd14;
	.loc	1 29 62                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:29:62
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 30 52                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:30:52
	add.s32 	%r43, %r41, 8192;
	.loc	1 30 30                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:30:30
	mul.wide.s32 	%rd15, %r43, 4;
	add.s64 	%rd3, %rd10, %rd15;
	.loc	1 30 63                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:30:63
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	.loc	1 31 52                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:31:52
	add.s32 	%r44, %r41, 8704;
	.loc	1 31 30                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:31:30
	mul.wide.s32 	%rd16, %r44, 4;
	add.s64 	%rd4, %rd10, %rd16;
	.loc	1 31 63                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:31:63
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r9;
	.loc	1 32 34                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:32:34
	mul.wide.s32 	%rd17, %r22, 4;
	add.s64 	%rd5, %rd9, %rd17;
	.loc	1 32 39                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:32:39
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.v2.b32 { %r10, %r11 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	mov.b32 	%f10, %r11;
	.loc	1 33 31                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:33:31
	mul.wide.s32 	%rd18, %r29, 4;
	add.s64 	%rd6, %rd11, %rd18;
	.loc	1 33 36                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:33:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r12;
	mov.b32 	%f12, %r13;
	.loc	1 34 18                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:34:18
	add.f32 	%f13, %f1, %f3;
	add.f32 	%f14, %f2, %f4;
	.loc	1 35 18                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:35:18
	add.f32 	%f15, %f13, %f5;
	add.f32 	%f16, %f14, %f6;
	.loc	1 36 18                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:36:18
	add.f32 	%f17, %f15, %f7;
	add.f32 	%f18, %f16, %f8;
	.loc	1 39 19                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:39:19
	add.f32 	%f19, %f9, %f11;
	add.f32 	%f20, %f10, %f12;
	.loc	1 40 19                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:40:19
	fma.rn.f32 	%f21, %f17, 0f3E800000, %f19;
	fma.rn.f32 	%f22, %f18, 0f3E800000, %f20;
	.loc	1 42 20                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:42:20
	mul.f32 	%f23, %f21, 0f3F3504F3;
	mul.f32 	%f24, %f22, 0f3F3504F3;
	.loc	1 44 20                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:44:20
	setp.gt.f32 	%p9, %f23, 0f00000000;
	setp.gt.f32 	%p10, %f24, 0f00000000;
	.loc	1 46 20                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:46:20
	mul.f32 	%f25, %f23, 0f3E4CCCCD;
	mul.f32 	%f26, %f24, 0f3E4CCCCD;
	.loc	1 47 35                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:47:35
	selp.f32 	%f27, %f23, %f25, %p9;
	selp.f32 	%f28, %f24, %f26, %p10;
	.loc	1 48 40                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:48:40
	mov.b32 	%r14, %f23;
	mov.b32 	%r15, %f24;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd5 + 0 ], { %r14, %r15 };
	// end inline asm
	.loc	1 49 25                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:49:25
	add.s64 	%rd8, %rd12, %rd17;
	.loc	1 49 37                         // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:49:37
	mov.b32 	%r16, %f27;
	mov.b32 	%r17, %f28;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd8 + 0 ], { %r16, %r17 };
	// end inline asm
	.loc	1 49 4                          // czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py:49:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/zd/czdfkwqsz5nbblhnmyddvosmupwnb6npp7txs2lchmo3atnugayh.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 100
.b8 102
.b8 107
.b8 119
.b8 113
.b8 115
.b8 122
.b8 53
.b8 110
.b8 98
.b8 98
.b8 108
.b8 104
.b8 110
.b8 109
.b8 121
.b8 100
.b8 100
.b8 118
.b8 111
.b8 115
.b8 109
.b8 117
.b8 112
.b8 119
.b8 110
.b8 98
.b8 54
.b8 110
.b8 112
.b8 112
.b8 55
.b8 116
.b8 120
.b8 115
.b8 50
.b8 108
.b8 99
.b8 104
.b8 109
.b8 111
.b8 51
.b8 97
.b8 116
.b8 110
.b8 117
.b8 103
.b8 97
.b8 121
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 100
.b8 0
	}
	.section	.debug_macinfo	{	}
