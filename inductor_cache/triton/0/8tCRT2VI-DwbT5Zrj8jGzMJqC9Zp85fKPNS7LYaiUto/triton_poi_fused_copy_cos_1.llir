; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_copy_cos_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i5 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %5 = shl i32 %4, 4, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 15, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 16, !dbg !14
  %.frozen = freeze i32 %8, !dbg !15
  %10 = sdiv i32 %.frozen, 4, !dbg !15
  %11 = mul i32 %10, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %11, !dbg !16
  %12 = icmp sgt i32 %.decomposed, 0, !dbg !17
  %13 = trunc nsw i32 %.decomposed to i8, !dbg !18
  %.lhs.trunc = add nsw i8 %13, -1, !dbg !18
  %14 = sdiv i8 %.lhs.trunc, 2, !dbg !19
  %15 = mul i8 %14, 2, !dbg !18
  %.decomposed74 = sub i8 %.lhs.trunc, %15, !dbg !18
  %16 = icmp eq i8 %.decomposed74, 0, !dbg !23
  %17 = and i1 %12, %16, !dbg !24
  %.sext59 = sext i8 %14 to i32, !dbg !19
  %.not = icmp ne i8 %.decomposed74, 0, !dbg !25
  %.inv = icmp slt i32 %.decomposed, 1, !dbg !26
  %narrow = select i1 %.inv, i1 %.not, i1 false, !dbg !26
  %18 = sext i1 %narrow to i32, !dbg !26
  %19 = add nsw i32 %18, %.sext59, !dbg !26
  %20 = shl nsw i32 %19, 1, !dbg !27
  %21 = shl nsw i32 %10, 2, !dbg !28
  %22 = or disjoint i32 %21, 1, !dbg !29
  %23 = add i32 %22, %20, !dbg !30
  %24 = sext i32 %23 to i64, !dbg !31
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !31
  %26 = and i1 %9, %17, !dbg !32
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %26, i32 0, i1 %26) #4, !dbg !33
  %28 = bitcast i32 %27 to float, !dbg !33
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i5), !dbg !34
  %29 = fmul float %28, 0x3FE45F3060000000, !dbg !34
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not.i6 = icmp eq i32 %30, 0, !dbg !34
  %31 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %29) #4, !dbg !34
  %32 = tail call i32 @llvm.nvvm.f2i.rn(float %29) #4, !dbg !34
  %.01.i7 = select i1 %.not.i6, i32 %32, i32 %31, !dbg !34
  %33 = sitofp i32 %.01.i7 to float, !dbg !34
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not15.i8 = icmp eq i32 %34, 0, !dbg !34
  %35 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %33, float 0xBFF921FB40000000, float %28) #4, !dbg !34
  %36 = tail call float @llvm.nvvm.fma.rn.f(float %33, float 0xBFF921FB40000000, float %28) #4, !dbg !34
  %.02.i9 = select i1 %.not15.i8, float %36, float %35, !dbg !34
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not16.i10 = icmp eq i32 %37, 0, !dbg !34
  %38 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %33, float 0xBE74442D00000000, float %.02.i9) #4, !dbg !34
  %39 = tail call float @llvm.nvvm.fma.rn.f(float %33, float 0xBE74442D00000000, float %.02.i9) #4, !dbg !34
  %.03.i11 = select i1 %.not16.i10, float %39, float %38, !dbg !34
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not17.i12 = icmp eq i32 %40, 0, !dbg !34
  %41 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %33, float 0xBCF84698A0000000, float %.03.i11) #4, !dbg !34
  %42 = tail call float @llvm.nvvm.fma.rn.f(float %33, float 0xBCF84698A0000000, float %.03.i11) #4, !dbg !34
  %.04.i13 = select i1 %.not17.i12, float %42, float %41, !dbg !34
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not18.i14 = icmp eq i32 %43, 0, !dbg !34
  %44 = tail call float @llvm.nvvm.fabs.ftz.f(float %28) #4, !dbg !34
  %45 = tail call float @llvm.nvvm.fabs.f(float %28) #4, !dbg !34
  %.06.i15 = select i1 %.not18.i14, float %45, float %44, !dbg !34
  %46 = fcmp ult float %.06.i15, 1.056150e+05, !dbg !34
  br i1 %46, label %__internal_trig_reduction_kernel.exit.i.i33, label %__nv_isinff.exit.i.i.i16, !dbg !34

__nv_isinff.exit.i.i.i16:                         ; preds = %3
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not19.i17 = icmp eq i32 %47, 0, !dbg !34
  %.07.i18 = select i1 %.not19.i17, float %45, float %44, !dbg !34
  %48 = fcmp oeq float %.07.i18, 0x7FF0000000000000, !dbg !34
  br i1 %48, label %__nv_fmul_rn.exit.i.i.i55, label %52, !dbg !34

__nv_fmul_rn.exit.i.i.i55:                        ; preds = %__nv_isinff.exit.i.i.i16
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not27.i56 = icmp eq i32 %49, 0, !dbg !34
  %50 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %28, float 0.000000e+00) #4, !dbg !34
  %51 = tail call float @llvm.nvvm.mul.rn.f(float %28, float 0.000000e+00) #4, !dbg !34
  %.08.i57 = select i1 %.not27.i56, float %51, float %50, !dbg !34
  br label %__internal_trig_reduction_kernel.exit.i.i33, !dbg !34

52:                                               ; preds = %__nv_isinff.exit.i.i.i16
  %53 = lshr i32 %27, 23, !dbg !34
  %54 = and i32 %53, 224, !dbg !34
  %55 = add nsw i32 %54, -128, !dbg !34
  %56 = shl i32 %27, 8, !dbg !34
  %57 = or i32 %56, -2147483648, !dbg !34
  %58 = lshr exact i32 %55, 5, !dbg !34
  br label %59, !dbg !34

59:                                               ; preds = %52, %59
  %indvars.iv = phi i64 [ 0, %52 ], [ %indvars.iv.next, %59 ]
  %hi.i.i.i.0.i1960 = phi i32 [ 0, %52 ], [ %64, %59 ]
  %60 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !34
  %61 = load i32, ptr addrspace(1) %60, align 4, !dbg !34
  %62 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %61, i32 %57, i32 %hi.i.i.i.0.i1960) #5, !dbg !34, !srcloc !35
  %63 = extractvalue { i32, i32 } %62, 0, !dbg !34
  %64 = extractvalue { i32, i32 } %62, 1, !dbg !34
  %65 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i5, i64 0, i64 %indvars.iv, !dbg !34
  store i32 %63, ptr %65, align 4, !dbg !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !34
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !34
  br i1 %exitcond.not, label %66, label %59, !dbg !34, !llvm.loop !36

66:                                               ; preds = %59
  %67 = getelementptr inbounds i8, ptr %result.i.i.i.i5, i64 24, !dbg !34
  store i32 %64, ptr %67, align 4, !dbg !34
  %68 = and i32 %53, 31, !dbg !34
  %69 = sub nsw i32 6, %58, !dbg !34
  %70 = sext i32 %69 to i64, !dbg !34
  %71 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i5, i64 0, i64 %70, !dbg !34
  %72 = load i32, ptr %71, align 4, !dbg !34
  %73 = sub nsw i32 5, %58, !dbg !34
  %74 = sext i32 %73 to i64, !dbg !34
  %75 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i5, i64 0, i64 %74, !dbg !34
  %76 = load i32, ptr %75, align 4, !dbg !34
  %.not20.i21 = icmp eq i32 %68, 0, !dbg !34
  br i1 %.not20.i21, label %__internal_trig_reduction_slowpath.exit.i.i.i22, label %77, !dbg !34

77:                                               ; preds = %66
  %78 = sub nsw i32 4, %58, !dbg !34
  %79 = sub nuw nsw i32 32, %68, !dbg !34
  %80 = shl i32 %72, %68, !dbg !34
  %81 = lshr i32 %76, %79, !dbg !34
  %82 = add i32 %81, %80, !dbg !34
  %83 = shl i32 %76, %68, !dbg !34
  %84 = sext i32 %78 to i64, !dbg !34
  %85 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i5, i64 0, i64 %84, !dbg !34
  %86 = load i32, ptr %85, align 4, !dbg !34
  %87 = lshr i32 %86, %79, !dbg !34
  %88 = add i32 %87, %83, !dbg !34
  br label %__internal_trig_reduction_slowpath.exit.i.i.i22, !dbg !34

__internal_trig_reduction_slowpath.exit.i.i.i22:  ; preds = %77, %66
  %hi.i.i.i.1.i23 = phi i32 [ %82, %77 ], [ %72, %66 ], !dbg !34
  %lo.i.i.i.0.i24 = phi i32 [ %88, %77 ], [ %76, %66 ], !dbg !34
  %89 = lshr i32 %hi.i.i.i.1.i23, 30, !dbg !34
  %90 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i23, i32 %lo.i.i.i.0.i24, i32 2), !dbg !34
  %91 = shl i32 %lo.i.i.i.0.i24, 2, !dbg !34
  %92 = lshr i32 %90, 31, !dbg !34
  %93 = add nuw nsw i32 %92, %89, !dbg !34
  %94 = sub nsw i32 0, %93, !dbg !34
  %.not2123.i25 = icmp slt i32 %27, 0, !dbg !34
  %spec.select.i26 = select i1 %.not2123.i25, i32 %94, i32 %93, !dbg !34
  %95 = xor i32 %90, %27, !dbg !34
  %.lobit.i27 = ashr i32 %90, 31, !dbg !34
  %hi.i.i.i.2.i28 = xor i32 %.lobit.i27, %90, !dbg !34
  %lo.i.i.i.1.i30 = xor i32 %.lobit.i27, %91, !dbg !34
  %96 = zext i32 %hi.i.i.i.2.i28 to i64, !dbg !34
  %97 = shl nuw i64 %96, 32, !dbg !34
  %98 = zext i32 %lo.i.i.i.1.i30 to i64, !dbg !34
  %99 = or disjoint i64 %97, %98, !dbg !34
  %100 = sitofp i64 %99 to double, !dbg !34
  %101 = fmul double %100, 0x3BF921FB54442D19, !dbg !34
  %102 = fptrunc double %101 to float, !dbg !34
  %103 = fneg float %102, !dbg !34
  %.not2526.i31 = icmp slt i32 %95, 0, !dbg !34
  %r.i.i.i.0.i32 = select i1 %.not2526.i31, float %103, float %102, !dbg !34
  br label %__internal_trig_reduction_kernel.exit.i.i33, !dbg !34

__internal_trig_reduction_kernel.exit.i.i33:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i22, %__nv_fmul_rn.exit.i.i.i55, %3
  %i.i.1.i34 = phi i32 [ %.01.i7, %3 ], [ 0, %__nv_fmul_rn.exit.i.i.i55 ], [ %spec.select.i26, %__internal_trig_reduction_slowpath.exit.i.i.i22 ], !dbg !34
  %t.i.i.1.i35 = phi float [ %.04.i13, %3 ], [ %.08.i57, %__nv_fmul_rn.exit.i.i.i55 ], [ %r.i.i.i.0.i32, %__internal_trig_reduction_slowpath.exit.i.i.i22 ], !dbg !34
  %104 = add i32 %i.i.1.i34, 1, !dbg !34
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not28.i36 = icmp eq i32 %105, 0, !dbg !34
  %106 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i35, float %t.i.i.1.i35) #4, !dbg !34
  %107 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i35, float %t.i.i.1.i35) #4, !dbg !34
  %.011.i37 = select i1 %.not28.i36, float %107, float %106, !dbg !34
  %108 = and i32 %i.i.1.i34, 1, !dbg !34
  %.not29.not.i = icmp eq i32 %108, 0, !dbg !34
  %109 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i35, !dbg !34
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not30.i38 = icmp eq i32 %110, 0, !dbg !34
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i37, float %109, float 0.000000e+00) #4, !dbg !34
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i37, float %109, float 0.000000e+00) #4, !dbg !34
  %.012.i39 = select i1 %.not30.i38, float %112, float %111, !dbg !34
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i52, label %__internal_fmad.exit2.i.i.i40, !dbg !34

__internal_fmad.exit1.i.i.i52:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i33
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not31.i53 = icmp eq i32 %113, 0, !dbg !34
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i37, float 0xBF56C0FDA0000000) #4, !dbg !34
  %115 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i37, float 0xBF56C0FDA0000000) #4, !dbg !34
  %.013.i54 = select i1 %.not31.i53, float %115, float %114, !dbg !34
  br label %__internal_fmad.exit2.i.i.i40, !dbg !34

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i52, %__internal_trig_reduction_kernel.exit.i.i33
  %116 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i52 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i33 ], !dbg !34
  %117 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i52 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i33 ], !dbg !34
  %118 = phi float [ %.013.i54, %__internal_fmad.exit1.i.i.i52 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i33 ], !dbg !34
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not32.i41 = icmp eq i32 %119, 0, !dbg !34
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %118, float %.011.i37, float %117) #4, !dbg !34
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %118, float %.011.i37, float %117) #4, !dbg !34
  %.010.i42 = select i1 %.not32.i41, float %121, float %120, !dbg !34
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not33.i43 = icmp eq i32 %122, 0, !dbg !34
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i37, float %116) #4, !dbg !34
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i37, float %116) #4, !dbg !34
  %.09.i44 = select i1 %.not33.i43, float %124, float %123, !dbg !34
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not34.i45 = icmp eq i32 %125, 0, !dbg !34
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i39, float %109) #4, !dbg !34
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i39, float %109) #4, !dbg !34
  %.05.i46 = select i1 %.not34.i45, float %127, float %126, !dbg !34
  %128 = and i32 %104, 2, !dbg !34
  %.not35.i47 = icmp eq i32 %128, 0, !dbg !34
  br i1 %.not35.i47, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i48, !dbg !34

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not36.i49 = icmp eq i32 %129, 0, !dbg !34
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !34
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !34
  %.0.i50 = select i1 %.not36.i49, float %131, float %130, !dbg !34
  br label %__nv_cosf.exit, !dbg !34

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !34
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i5), !dbg !34
  %132 = sdiv i32 %.decomposed, 2, !dbg !38
  %133 = shl nsw i32 %132, 1, !dbg !39
  %134 = sitofp i32 %133 to float, !dbg !40
  %135 = fmul float %134, 5.000000e-01, !dbg !41
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not.i = icmp eq i32 %136, 0, !dbg !42
  %137 = tail call float @llvm.nvvm.floor.ftz.f(float %135), !dbg !42
  %138 = tail call float @llvm.nvvm.floor.f(float %135), !dbg !42
  %.0.i = select i1 %.not.i, float %138, float %137, !dbg !42
  %139 = fmul float %.0.i, 2.000000e+00, !dbg !43
  %140 = fmul float %139, 2.500000e-01, !dbg !44
  %141 = fmul float %140, 0xC0226BB1C0000000, !dbg !45
  %142 = fmul float %141, 0x3FF7154760000000, !dbg !46
  %143 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %142) #4, !dbg !46
  %144 = sitofp i32 %10 to float, !dbg !47
  %145 = fmul float %143, %144, !dbg !48
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !49
  %146 = fmul float %145, 0x3FE45F3060000000, !dbg !49
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not.i3 = icmp eq i32 %147, 0, !dbg !49
  %148 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %146) #4, !dbg !49
  %149 = tail call i32 @llvm.nvvm.f2i.rn(float %146) #4, !dbg !49
  %.01.i = select i1 %.not.i3, i32 %149, i32 %148, !dbg !49
  %150 = sitofp i32 %.01.i to float, !dbg !49
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not15.i = icmp eq i32 %151, 0, !dbg !49
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %150, float 0xBFF921FB40000000, float %145) #4, !dbg !49
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %150, float 0xBFF921FB40000000, float %145) #4, !dbg !49
  %.02.i = select i1 %.not15.i, float %153, float %152, !dbg !49
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not16.i = icmp eq i32 %154, 0, !dbg !49
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %150, float 0xBE74442D00000000, float %.02.i) #4, !dbg !49
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %150, float 0xBE74442D00000000, float %.02.i) #4, !dbg !49
  %.03.i = select i1 %.not16.i, float %156, float %155, !dbg !49
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not17.i = icmp eq i32 %157, 0, !dbg !49
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %150, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !49
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %150, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !49
  %.04.i = select i1 %.not17.i, float %159, float %158, !dbg !49
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not18.i = icmp eq i32 %160, 0, !dbg !49
  %161 = tail call float @llvm.nvvm.fabs.ftz.f(float %145) #4, !dbg !49
  %162 = tail call float @llvm.nvvm.fabs.f(float %145) #4, !dbg !49
  %.06.i = select i1 %.not18.i, float %162, float %161, !dbg !49
  %163 = fcmp ult float %.06.i, 1.056150e+05, !dbg !49
  br i1 %163, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !49

__nv_isinff.exit.i.i.i:                           ; preds = %__nv_cosf.exit
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not19.i = icmp eq i32 %164, 0, !dbg !49
  %.07.i = select i1 %.not19.i, float %162, float %161, !dbg !49
  %165 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !49
  br i1 %165, label %__nv_fmul_rn.exit.i.i.i, label %169, !dbg !49

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not27.i = icmp eq i32 %166, 0, !dbg !49
  %167 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %145, float 0.000000e+00) #4, !dbg !49
  %168 = tail call float @llvm.nvvm.mul.rn.f(float %145, float 0.000000e+00) #4, !dbg !49
  %.08.i = select i1 %.not27.i, float %168, float %167, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !49

169:                                              ; preds = %__nv_isinff.exit.i.i.i
  %170 = bitcast float %145 to i32, !dbg !49
  %171 = lshr i32 %170, 23, !dbg !49
  %172 = and i32 %171, 224, !dbg !49
  %173 = add nsw i32 %172, -128, !dbg !49
  %174 = shl i32 %170, 8, !dbg !49
  %175 = or i32 %174, -2147483648, !dbg !49
  %176 = lshr exact i32 %173, 5, !dbg !49
  br label %177, !dbg !49

177:                                              ; preds = %169, %177
  %indvars.iv67 = phi i64 [ 0, %169 ], [ %indvars.iv.next68, %177 ]
  %hi.i.i.i.0.i62 = phi i32 [ 0, %169 ], [ %182, %177 ]
  %178 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv67, !dbg !49
  %179 = load i32, ptr addrspace(1) %178, align 4, !dbg !49
  %180 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %179, i32 %175, i32 %hi.i.i.i.0.i62) #5, !dbg !49, !srcloc !35
  %181 = extractvalue { i32, i32 } %180, 0, !dbg !49
  %182 = extractvalue { i32, i32 } %180, 1, !dbg !49
  %183 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv67, !dbg !49
  store i32 %181, ptr %183, align 4, !dbg !49
  %indvars.iv.next68 = add nuw nsw i64 %indvars.iv67, 1, !dbg !49
  %exitcond69.not = icmp eq i64 %indvars.iv.next68, 6, !dbg !49
  br i1 %exitcond69.not, label %184, label %177, !dbg !49, !llvm.loop !50

184:                                              ; preds = %177
  %185 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !49
  store i32 %182, ptr %185, align 4, !dbg !49
  %186 = and i32 %171, 31, !dbg !49
  %187 = sub nsw i32 6, %176, !dbg !49
  %188 = sext i32 %187 to i64, !dbg !49
  %189 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %188, !dbg !49
  %190 = load i32, ptr %189, align 4, !dbg !49
  %191 = sub nsw i32 5, %176, !dbg !49
  %192 = sext i32 %191 to i64, !dbg !49
  %193 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %192, !dbg !49
  %194 = load i32, ptr %193, align 4, !dbg !49
  %.not20.i = icmp eq i32 %186, 0, !dbg !49
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %195, !dbg !49

195:                                              ; preds = %184
  %196 = sub nsw i32 4, %176, !dbg !49
  %197 = sub nuw nsw i32 32, %186, !dbg !49
  %198 = shl i32 %190, %186, !dbg !49
  %199 = lshr i32 %194, %197, !dbg !49
  %200 = add i32 %199, %198, !dbg !49
  %201 = shl i32 %194, %186, !dbg !49
  %202 = sext i32 %196 to i64, !dbg !49
  %203 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %202, !dbg !49
  %204 = load i32, ptr %203, align 4, !dbg !49
  %205 = lshr i32 %204, %197, !dbg !49
  %206 = add i32 %205, %201, !dbg !49
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !49

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %195, %184
  %hi.i.i.i.1.i = phi i32 [ %200, %195 ], [ %190, %184 ], !dbg !49
  %lo.i.i.i.0.i = phi i32 [ %206, %195 ], [ %194, %184 ], !dbg !49
  %207 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !49
  %208 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !49
  %209 = shl i32 %lo.i.i.i.0.i, 2, !dbg !49
  %210 = lshr i32 %208, 31, !dbg !49
  %211 = add nuw nsw i32 %210, %207, !dbg !49
  %212 = sub nsw i32 0, %211, !dbg !49
  %.not2123.i = icmp slt i32 %170, 0, !dbg !49
  %spec.select.i = select i1 %.not2123.i, i32 %212, i32 %211, !dbg !49
  %213 = xor i32 %208, %170, !dbg !49
  %.lobit.i = ashr i32 %208, 31, !dbg !49
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %208, !dbg !49
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %209, !dbg !49
  %214 = zext i32 %hi.i.i.i.2.i to i64, !dbg !49
  %215 = shl nuw i64 %214, 32, !dbg !49
  %216 = zext i32 %lo.i.i.i.1.i to i64, !dbg !49
  %217 = or disjoint i64 %215, %216, !dbg !49
  %218 = sitofp i64 %217 to double, !dbg !49
  %219 = fmul double %218, 0x3BF921FB54442D19, !dbg !49
  %220 = fptrunc double %219 to float, !dbg !49
  %221 = fneg float %220, !dbg !49
  %.not2526.i = icmp slt i32 %213, 0, !dbg !49
  %r.i.i.i.0.i = select i1 %.not2526.i, float %221, float %220, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !49

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %__nv_cosf.exit
  %i.i.1.i = phi i32 [ %.01.i, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !49
  %t.i.i.1.i = phi float [ %.04.i, %__nv_cosf.exit ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !49
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not28.i = icmp eq i32 %222, 0, !dbg !49
  %223 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !49
  %224 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !49
  %.011.i = select i1 %.not28.i, float %224, float %223, !dbg !49
  %225 = and i32 %i.i.1.i, 1, !dbg !49
  %.not29.i = icmp eq i32 %225, 0, !dbg !49
  %226 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !49
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not30.i = icmp eq i32 %227, 0, !dbg !49
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %226, float 0.000000e+00) #4, !dbg !49
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %226, float 0.000000e+00) #4, !dbg !49
  %.012.i = select i1 %.not30.i, float %229, float %228, !dbg !49
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !49

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not31.i = icmp eq i32 %230, 0, !dbg !49
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !49
  %232 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !49
  %.013.i = select i1 %.not31.i, float %232, float %231, !dbg !49
  br label %__internal_fmad.exit2.i.i.i, !dbg !49

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %233 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !49
  %234 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !49
  %235 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !49
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not32.i = icmp eq i32 %236, 0, !dbg !49
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %235, float %.011.i, float %234) #4, !dbg !49
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %235, float %.011.i, float %234) #4, !dbg !49
  %.010.i = select i1 %.not32.i, float %238, float %237, !dbg !49
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not33.i = icmp eq i32 %239, 0, !dbg !49
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %233) #4, !dbg !49
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %233) #4, !dbg !49
  %.09.i = select i1 %.not33.i, float %241, float %240, !dbg !49
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not34.i = icmp eq i32 %242, 0, !dbg !49
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %226) #4, !dbg !49
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %226) #4, !dbg !49
  %.05.i = select i1 %.not34.i, float %244, float %243, !dbg !49
  %245 = and i32 %i.i.1.i, 2, !dbg !49
  %.not35.i = icmp eq i32 %245, 0, !dbg !49
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !49

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not36.i = icmp eq i32 %246, 0, !dbg !49
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %.0.i4 = select i1 %.not36.i, float %248, float %247, !dbg !49
  br label %__nv_sinf.exit, !dbg !49

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i4, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !49
  %249 = and i32 %6, 1, !dbg !51
  %250 = icmp eq i32 %249, 0, !dbg !51
  %251 = and i32 %6, 16, !dbg !12
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !49
  %252 = sitofp i32 %.decomposed to float, !dbg !52
  %253 = fmul float %252, 5.000000e-01, !dbg !53
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !54
  %.not.i1 = icmp eq i32 %254, 0, !dbg !54
  %255 = tail call float @llvm.nvvm.floor.ftz.f(float %253), !dbg !54
  %256 = tail call float @llvm.nvvm.floor.f(float %253), !dbg !54
  %.0.i2 = select i1 %.not.i1, float %256, float %255, !dbg !54
  %257 = fmul float %.0.i2, 2.000000e+00, !dbg !55
  %258 = fmul float %257, 2.500000e-01, !dbg !56
  %259 = fmul float %258, 0xC0226BB1C0000000, !dbg !57
  %260 = fmul float %259, 0x3FF7154760000000, !dbg !58
  %261 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %260) #4, !dbg !58
  %262 = fmul float %261, %144, !dbg !59
  %263 = select i1 %250, float %z.i.i.0.i, float %262, !dbg !60
  %264 = select i1 %17, float %z.i.i.0.i51, float %263, !dbg !60
  %265 = sext i32 %8 to i64, !dbg !61
  %266 = getelementptr float, ptr addrspace(1) %1, i64 %265, !dbg !61
  %267 = icmp eq i32 %251, 0, !dbg !62
  %268 = bitcast float %264 to i32, !dbg !62
  %269 = and i1 %267, %9, !dbg !62
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %268, ptr addrspace(1) %266, i1 %269) #4, !dbg !62
  ret void, !dbg !63
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py", directory: "inductor_cache/ns")
!4 = !{ptr @triton_poi_fused_copy_cos_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_copy_cos_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_copy_cos_1", linkageName: "triton_poi_fused_copy_cos_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 29, column: 19, scope: !7)
!18 = !DILocation(line: 30, column: 26, scope: !7)
!19 = !DILocation(line: 80, column: 16, scope: !20, inlinedAt: !22)
!20 = distinct !DILexicalBlockFile(scope: !7, file: !21, discriminator: 0)
!21 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!22 = !DILocation(line: 34, column: 82, scope: !7)
!23 = !DILocation(line: 32, column: 19, scope: !7)
!24 = !DILocation(line: 33, column: 18, scope: !7)
!25 = !DILocation(line: 82, column: 34, scope: !20, inlinedAt: !22)
!26 = !DILocation(line: 83, column: 47, scope: !20, inlinedAt: !22)
!27 = !DILocation(line: 34, column: 37, scope: !7)
!28 = !DILocation(line: 34, column: 90, scope: !7)
!29 = !DILocation(line: 34, column: 34, scope: !7)
!30 = !DILocation(line: 34, column: 88, scope: !7)
!31 = !DILocation(line: 34, column: 30, scope: !7)
!32 = !DILocation(line: 34, column: 102, scope: !7)
!33 = !DILocation(line: 34, column: 95, scope: !7)
!34 = !DILocation(line: 35, column: 23, scope: !7)
!35 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!36 = distinct !{!36, !37}
!37 = !{!"llvm.loop.unroll.count", i32 1}
!38 = !DILocation(line: 40, column: 21, scope: !7)
!39 = !DILocation(line: 40, column: 15, scope: !7)
!40 = !DILocation(line: 41, column: 21, scope: !7)
!41 = !DILocation(line: 43, column: 20, scope: !7)
!42 = !DILocation(line: 44, column: 28, scope: !7)
!43 = !DILocation(line: 46, column: 20, scope: !7)
!44 = !DILocation(line: 48, column: 20, scope: !7)
!45 = !DILocation(line: 50, column: 20, scope: !7)
!46 = !DILocation(line: 51, column: 24, scope: !7)
!47 = !DILocation(line: 53, column: 21, scope: !7)
!48 = !DILocation(line: 54, column: 20, scope: !7)
!49 = !DILocation(line: 55, column: 24, scope: !7)
!50 = distinct !{!50, !37}
!51 = !DILocation(line: 39, column: 21, scope: !7)
!52 = !DILocation(line: 58, column: 20, scope: !7)
!53 = !DILocation(line: 60, column: 20, scope: !7)
!54 = !DILocation(line: 61, column: 28, scope: !7)
!55 = !DILocation(line: 63, column: 20, scope: !7)
!56 = !DILocation(line: 65, column: 20, scope: !7)
!57 = !DILocation(line: 67, column: 20, scope: !7)
!58 = !DILocation(line: 68, column: 24, scope: !7)
!59 = !DILocation(line: 71, column: 20, scope: !7)
!60 = !DILocation(line: 0, scope: !7)
!61 = !DILocation(line: 74, column: 25, scope: !7)
!62 = !DILocation(line: 74, column: 37, scope: !7)
!63 = !DILocation(line: 74, column: 4, scope: !7)
