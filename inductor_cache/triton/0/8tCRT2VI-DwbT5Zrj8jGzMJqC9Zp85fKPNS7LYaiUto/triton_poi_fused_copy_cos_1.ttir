#loc = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":19:0)
module {
  tt.func public @triton_poi_fused_copy_cos_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<16xi32> loc(#loc1)
    %cst_0 = arith.constant dense<false> : tensor<16xi1> loc(#loc1)
    %cst_1 = arith.constant dense<-9.21034049> : tensor<16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<2.500000e-01> : tensor<16xf32> loc(#loc1)
    %cst_3 = arith.constant dense<2.000000e+00> : tensor<16xf32> loc(#loc1)
    %cst_4 = arith.constant dense<5.000000e-01> : tensor<16xf32> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<16xf32> loc(#loc1)
    %cst_6 = arith.constant dense<1> : tensor<16xi32> loc(#loc1)
    %cst_7 = arith.constant dense<0> : tensor<16xi64> loc(#loc1)
    %cst_8 = arith.constant dense<2> : tensor<16xi32> loc(#loc1)
    %cst_9 = arith.constant dense<-1> : tensor<16xi32> loc(#loc1)
    %cst_10 = arith.constant dense<1> : tensor<16xi64> loc(#loc1)
    %cst_11 = arith.constant dense<4> : tensor<16xi32> loc(#loc1)
    %cst_12 = arith.constant dense<16> : tensor<16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<16xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<16xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_12 : tensor<16xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_11 : tensor<16xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_11 : tensor<16xi32> loc(#loc8)
    %8 = arith.extsi %6 : tensor<16xi32> to tensor<16xi64> loc(#loc9)
    %9 = arith.cmpi sge, %8, %cst_10 : tensor<16xi64> loc(#loc9)
    %10 = arith.addi %6, %cst_9 : tensor<16xi32> loc(#loc10)
    %11 = arith.remsi %10, %cst_8 : tensor<16xi32> loc(#loc11)
    %12 = arith.extsi %11 : tensor<16xi32> to tensor<16xi64> loc(#loc12)
    %13 = arith.cmpi eq, %12, %cst_7 : tensor<16xi64> loc(#loc12)
    %14 = arith.andi %9, %13 : tensor<16xi1> loc(#loc13)
    %15 = arith.divsi %10, %cst_8 : tensor<16xi32> loc(#loc59)
    %16 = arith.cmpi ne, %11, %cst : tensor<16xi32> loc(#loc60)
    %17 = arith.subi %15, %cst_6 : tensor<16xi32> loc(#loc61)
    %18 = arith.select %16, %17, %15 : tensor<16xi1>, tensor<16xi32> loc(#loc62)
    %19 = arith.cmpi slt, %10, %cst : tensor<16xi32> loc(#loc63)
    %20 = arith.cmpi ne, %19, %cst_0 : tensor<16xi1> loc(#loc64)
    %21 = arith.select %20, %18, %15 : tensor<16xi1>, tensor<16xi32> loc(#loc65)
    %22 = arith.muli %21, %cst_8 : tensor<16xi32> loc(#loc22)
    %23 = arith.addi %22, %cst_6 : tensor<16xi32> loc(#loc23)
    %24 = arith.muli %7, %cst_11 : tensor<16xi32> loc(#loc24)
    %25 = arith.addi %23, %24 : tensor<16xi32> loc(#loc25)
    %26 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc26)
    %27 = tt.addptr %26, %25 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc26)
    %28 = arith.andi %14, %5 : tensor<16xi1> loc(#loc27)
    %29 = tt.load %27, %28, %cst_5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc28)
    %30 = math.cos %29 : tensor<16xf32> loc(#loc29)
    %31 = arith.remsi %4, %cst_8 : tensor<16xi32> loc(#loc30)
    %32 = arith.extsi %31 : tensor<16xi32> to tensor<16xi64> loc(#loc31)
    %33 = arith.cmpi eq, %32, %cst_7 : tensor<16xi64> loc(#loc31)
    %34 = arith.divsi %6, %cst_8 : tensor<16xi32> loc(#loc32)
    %35 = arith.muli %34, %cst_8 : tensor<16xi32> loc(#loc33)
    %36 = arith.sitofp %35 : tensor<16xi32> to tensor<16xf32> loc(#loc34)
    %37 = arith.mulf %36, %cst_4 : tensor<16xf32> loc(#loc35)
    %38 = tt.extern_elementwise %37 {libname = "", libpath = "", pure = true, symbol = "__nv_floorf"} : (tensor<16xf32>) -> tensor<16xf32> loc(#loc36)
    %39 = arith.mulf %38, %cst_3 : tensor<16xf32> loc(#loc37)
    %40 = arith.mulf %39, %cst_2 : tensor<16xf32> loc(#loc38)
    %41 = arith.mulf %40, %cst_1 : tensor<16xf32> loc(#loc39)
    %42 = math.exp %41 : tensor<16xf32> loc(#loc40)
    %43 = arith.sitofp %7 : tensor<16xi32> to tensor<16xf32> loc(#loc41)
    %44 = arith.mulf %43, %42 : tensor<16xf32> loc(#loc42)
    %45 = math.sin %44 : tensor<16xf32> loc(#loc43)
    %46 = arith.sitofp %6 : tensor<16xi32> to tensor<16xf32> loc(#loc44)
    %47 = arith.mulf %46, %cst_4 : tensor<16xf32> loc(#loc45)
    %48 = tt.extern_elementwise %47 {libname = "", libpath = "", pure = true, symbol = "__nv_floorf"} : (tensor<16xf32>) -> tensor<16xf32> loc(#loc46)
    %49 = arith.mulf %48, %cst_3 : tensor<16xf32> loc(#loc47)
    %50 = arith.mulf %49, %cst_2 : tensor<16xf32> loc(#loc48)
    %51 = arith.mulf %50, %cst_1 : tensor<16xf32> loc(#loc49)
    %52 = math.exp %51 : tensor<16xf32> loc(#loc50)
    %53 = arith.mulf %43, %52 : tensor<16xf32> loc(#loc51)
    %54 = arith.select %33, %45, %53 : tensor<16xi1>, tensor<16xf32> loc(#loc66)
    %55 = arith.select %14, %30, %54 : tensor<16xi1>, tensor<16xf32> loc(#loc67)
    %56 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc56)
    %57 = tt.addptr %56, %4 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc56)
    tt.store %57, %55, %5 : tensor<16x!tt.ptr<f32>> loc(#loc57)
    tt.return loc(#loc58)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":21:28)
#loc3 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":21:33)
#loc4 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":22:36)
#loc5 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":22:23)
#loc6 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":23:21)
#loc7 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":24:19)
#loc8 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":25:19)
#loc9 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":29:19)
#loc10 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":30:20)
#loc11 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":30:26)
#loc12 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":32:19)
#loc13 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":33:18)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":80:16)
#loc15 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":34:82)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":82:34)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":82:44)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":82:47)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":83:25)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":83:32)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":83:47)
#loc22 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":34:37)
#loc23 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":34:34)
#loc24 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":34:90)
#loc25 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":34:88)
#loc26 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":34:30)
#loc27 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":34:102)
#loc28 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":34:95)
#loc29 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":35:23)
#loc30 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":38:18)
#loc31 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":39:21)
#loc32 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":40:21)
#loc33 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":40:15)
#loc34 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":41:21)
#loc35 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":43:20)
#loc36 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":44:28)
#loc37 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":46:20)
#loc38 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":48:20)
#loc39 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":50:20)
#loc40 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":51:24)
#loc41 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":53:21)
#loc42 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":54:20)
#loc43 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":55:24)
#loc44 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":58:20)
#loc45 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":60:20)
#loc46 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":61:28)
#loc47 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":63:20)
#loc48 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":65:20)
#loc49 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":67:20)
#loc50 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":68:24)
#loc51 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":71:20)
#loc52 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":72:35)
#loc53 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":57:35)
#loc54 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":73:34)
#loc55 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":37:33)
#loc56 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":74:25)
#loc57 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":74:37)
#loc58 = loc("inductor_cache/ns/cnsiereytptbftffypjkbc7o65nkn2ivtnzye62vilv5wy24ilup.py":74:4)
#loc59 = loc(callsite(#loc14 at #loc15))
#loc60 = loc(callsite(#loc16 at #loc15))
#loc61 = loc(callsite(#loc17 at #loc15))
#loc62 = loc(callsite(#loc18 at #loc15))
#loc63 = loc(callsite(#loc19 at #loc15))
#loc64 = loc(callsite(#loc20 at #loc15))
#loc65 = loc(callsite(#loc21 at #loc15))
#loc66 = loc(fused[#loc52, #loc53])
#loc67 = loc(fused[#loc54, #loc55])
