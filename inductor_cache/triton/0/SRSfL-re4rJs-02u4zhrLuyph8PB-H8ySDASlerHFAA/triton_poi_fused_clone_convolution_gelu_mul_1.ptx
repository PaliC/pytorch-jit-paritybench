//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_convolution_gelu_mul_1 // -- Begin function triton_poi_fused_clone_convolution_gelu_mul_1
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_clone_convolution_gelu_mul_1
.visible .entry triton_poi_fused_clone_convolution_gelu_mul_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_convolution_gelu_mul_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_convolution_gelu_mul_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_convolution_gelu_mul_1_param_2,
	.param .u32 triton_poi_fused_clone_convolution_gelu_mul_1_param_3,
	.param .u32 triton_poi_fused_clone_convolution_gelu_mul_1_param_4
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<49>;
	.reg .f32 	%f<55>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_clone_convolution_gelu_mul_1_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_clone_convolution_gelu_mul_1_param_1];
$L__tmp0:
	.loc	1 22 28                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:22:28
	// begin inline asm
	mov.u32 %r8, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:22:33
	shl.b32 	%r1, %r8, 4;
	.loc	1 23 44                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:23:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r3, %r2, 1, 3;
	and.b32  	%r4, %r2, 16;
	shr.u32 	%r5, %r4, 1;
	or.b32  	%r12, %r3, %r5;
	and.b32  	%r6, %r2, 1;
	.loc	1 23 23                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:23:23
	or.b32  	%r13, %r12, %r1;
	.loc	1 24 21                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:24:21
	setp.lt.s32 	%p3, %r13, 16;
	.loc	1 25 28                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:25:28
	// begin inline asm
	mov.u32 %r9, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:25:33
	shl.b32 	%r7, %r9, 1;
	.loc	1 26 23                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:26:23
	or.b32  	%r14, %r7, %r6;
	.loc	1 27 21                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:27:21
	setp.lt.s32 	%p4, %r14, 4;
	.loc	1 30 19                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:30:19
	bfe.s32 	%r15, %r8, 27, 1;
	shr.u32 	%r16, %r15, 30;
	add.s32 	%r17, %r13, %r16;
	and.b32  	%r18, %r17, -4;
	sub.s32 	%r19, %r13, %r18;
	.loc	1 31 41                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:31:41
	shl.b32 	%r20, %r13, 2;
	.loc	1 31 39                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:31:39
	add.s32 	%r21, %r14, %r20;
	.loc	1 31 34                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:31:34
	mul.wide.s32 	%rd7, %r21, 4;
	add.s64 	%rd9, %rd5, %rd7;
	.loc	1 31 54                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:31:54
	and.pred  	%p8, %p3, %p4;
	.loc	1 31 46                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:31:46
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r10;
	.loc	1 32 30                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:32:30
	mul.wide.s32 	%rd8, %r19, 4;
	add.s64 	%rd4, %rd6, %rd8;
	.loc	1 32 35                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:32:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r11 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r11;
	.loc	1 33 18                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:33:18
	add.f32 	%f1, %f23, %f24;
	.loc	1 39 18                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:39:18
	mul.f32 	%f2, %f1, 0f3F3504F3;
	.loc	1 40 25                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:40:25
	abs.ftz.f32 	%f3, %f2;
	setp.ge.f32 	%p5, %f3, 0f3F8060FE;
	mov.f32 	%f52, 0f3789CA3C;
	mov.f32 	%f51, 0fB9F560B9;
	mov.f32 	%f50, 0f3BAC840B;
	mov.f32 	%f49, 0fBD0C8162;
	mov.f32 	%f48, 0f3E1CF906;
	mov.f32 	%f47, 0f3F6A937E;
	mov.f32 	%f46, 0f3F20D842;
	mov.f32 	%f53, %f3;
	@%p5 bra 	$L__BB0_2;
// %bb.1:
	mul.f32 	%f53, %f2, %f2;
	mov.f32 	%f52, 0f38B1E96A;
	mov.f32 	%f51, 0fBA574D20;
	mov.f32 	%f50, 0f3BAAD5EA;
	mov.f32 	%f49, 0fBCDC1BE7;
	mov.f32 	%f48, 0f3DE718AF;
	mov.f32 	%f47, 0fBEC093AC;
	mov.f32 	%f46, 0f3E0375D3;
$L__BB0_2:                              // %__internal_fmad.exit.i
	.loc	1 0 25                          // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:0:25
	ld.param.u64 	%rd2, [triton_poi_fused_clone_convolution_gelu_mul_1_param_2];
	.loc	1 40 25                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:40:25
	setp.ltu.f32 	%p6, %f3, 0f3F8060FE;
	fma.rn.ftz.f32 	%f32, %f52, %f53, %f51;
	fma.rn.ftz.f32 	%f33, %f32, %f53, %f50;
	fma.rn.ftz.f32 	%f34, %f33, %f53, %f49;
	fma.rn.ftz.f32 	%f35, %f34, %f53, %f48;
	fma.rn.ftz.f32 	%f36, %f35, %f53, %f47;
	fma.rn.ftz.f32 	%f37, %f36, %f53, %f46;
	neg.f32 	%f38, %f53;
	selp.f32 	%f39, %f38, %f2, %p5;
	fma.rn.ftz.f32 	%f54, %f37, %f39, %f39;
	@%p6 bra 	$L__BB0_4;
// %bb.3:
	ex2.approx.ftz.f32 	%f40, %f54;
	mov.f32 	%f41, 0f3F800000;
	sub.f32 	%f42, %f41, %f40;
	mov.b32 	%r22, %f42;
	mov.b32 	%r23, %f2;
	and.b32  	%r24, %r23, -2147483648;
	or.b32  	%r25, %r24, %r22;
	mov.b32 	%f54, %r25;
$L__BB0_4:                              // %__nv_erff.exit
	.loc	1 37 18                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:37:18
	mul.f32 	%f43, %f1, 0f3F000000;
	.loc	1 26 44                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:26:44
	shr.u32 	%r30, %r4, 4;
	.loc	1 26 23                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:26:23
	or.b32  	%r31, %r7, %r30;
	.loc	1 27 21                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:27:21
	setp.lt.s32 	%p11, %r31, 4;
	.loc	1 23 44                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:23:44
	and.b32  	%r32, %r2, 15;
	.loc	1 23 23                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:23:23
	or.b32  	%r33, %r1, %r32;
	.loc	1 24 21                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:24:21
	setp.lt.s32 	%p12, %r33, 16;
	.loc	1 31 54                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:31:54
	and.pred  	%p10, %p12, %p11;
	.loc	1 41 19                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:41:19
	add.f32 	%f44, %f54, 0f3F800000;
	.loc	1 42 19                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:42:19
	mul.f32 	%f45, %f43, %f44;
	.loc	1 43 4                          // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:43:4
	bar.sync 	0;
	.loc	1 44 46                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:44:46
	mov.b32 	%r26, %f1;
	// begin inline asm
	@%p8 st.global.b32 [ %rd9 + 0 ], { %r26 };
	// end inline asm
	.loc	1 45 33                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:45:33
	shl.b32 	%r34, %r31, 4;
	.loc	1 45 30                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:45:30
	add.s32 	%r35, %r34, %r33;
	.loc	1 45 25                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:45:25
	mul.wide.s32 	%rd11, %r35, 4;
	add.s64 	%rd10, %rd2, %rd11;
	.loc	1 45 45                         // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:45:45
	shl.b32 	%r36, %r6, 4;
	or.b32  	%r37, %r36, %r3;
	or.b32  	%r38, %r37, %r5;
	and.b32  	%r39, %r2, 31;
	shl.b32 	%r40, %r6, 2;
	mov.u32 	%r41, global_smem;
	add.s32 	%r42, %r41, %r40;
	shl.b32 	%r43, %r38, 2;
	add.s32 	%r27, %r42, %r43;
	mov.b32 	%r28, %f45;
	mov.pred 	%p9, -1;
	// begin inline asm
	@%p9 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r44, %r2, 2;
	and.b32  	%r45, %r44, 4;
	add.s32 	%r46, %r41, %r45;
	shl.b32 	%r47, %r39, 2;
	add.s32 	%r48, %r46, %r47;
	ld.shared.u32 	%r29, [%r48];
	// begin inline asm
	@%p10 st.global.b32 [ %rd10 + 0 ], { %r29 };
	// end inline asm
	.loc	1 45 4                          // cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py:45:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/nw/cnw7x5ckwfjrr57vj6xnpwyiozcxq7hndezhm7t7d3qt3xdxu6gh.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 119
.b8 55
.b8 120
.b8 53
.b8 99
.b8 107
.b8 119
.b8 102
.b8 106
.b8 114
.b8 114
.b8 53
.b8 55
.b8 118
.b8 106
.b8 54
.b8 120
.b8 110
.b8 112
.b8 119
.b8 121
.b8 105
.b8 111
.b8 122
.b8 99
.b8 120
.b8 113
.b8 55
.b8 104
.b8 110
.b8 100
.b8 101
.b8 122
.b8 104
.b8 109
.b8 55
.b8 116
.b8 55
.b8 100
.b8 51
.b8 113
.b8 116
.b8 51
.b8 120
.b8 100
.b8 120
.b8 117
.b8 54
.b8 103
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 119
.b8 0
	}
	.section	.debug_macinfo	{	}
