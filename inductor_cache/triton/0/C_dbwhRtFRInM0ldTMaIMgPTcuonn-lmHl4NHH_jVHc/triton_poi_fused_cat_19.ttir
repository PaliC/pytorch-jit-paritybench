#loc = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_19(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<1024xf32> loc(#loc1)
    %cst_0 = arith.constant dense<-78> : tensor<1024xi32> loc(#loc1)
    %cst_1 = arith.constant dense<19968> : tensor<1024xi32> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999974E-6> : tensor<1024xf32> loc(#loc1)
    %cst_3 = arith.constant dense<-52> : tensor<1024xi32> loc(#loc1)
    %cst_4 = arith.constant dense<26> : tensor<1024xi32> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<1024xf32> loc(#loc1)
    %cst_6 = arith.constant dense<13312> : tensor<1024xi32> loc(#loc1)
    %cst_7 = arith.constant dense<52> : tensor<1024xi64> loc(#loc1)
    %cst_8 = arith.constant dense<78> : tensor<1024xi64> loc(#loc1)
    %cst_9 = arith.constant dense<26624> : tensor<1024xi32> loc(#loc1)
    %cst_10 = arith.constant dense<256> : tensor<1024xi32> loc(#loc1)
    %cst_11 = arith.constant dense<104> : tensor<1024xi32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<1024xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<1024xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_11 : tensor<1024xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_11 : tensor<1024xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_10 : tensor<1024xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_9 : tensor<1024xi32> loc(#loc9)
    %9 = arith.extsi %5 : tensor<1024xi32> to tensor<1024xi64> loc(#loc10)
    %10 = arith.cmpi slt, %9, %cst_8 : tensor<1024xi64> loc(#loc10)
    %11 = arith.cmpi slt, %9, %cst_7 : tensor<1024xi64> loc(#loc11)
    %12 = arith.andi %11, %10 : tensor<1024xi1> loc(#loc12)
    %13 = arith.muli %5, %cst_10 : tensor<1024xi32> loc(#loc13)
    %14 = arith.addi %7, %13 : tensor<1024xi32> loc(#loc14)
    %15 = arith.muli %8, %cst_6 : tensor<1024xi32> loc(#loc15)
    %16 = arith.addi %14, %15 : tensor<1024xi32> loc(#loc16)
    %17 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc17)
    %18 = tt.addptr %17, %16 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc17)
    %19 = tt.load %18, %12, %cst_5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc18)
    %20 = arith.cmpi sge, %9, %cst_7 : tensor<1024xi64> loc(#loc19)
    %21 = arith.andi %20, %10 : tensor<1024xi1> loc(#loc20)
    %22 = arith.muli %6, %cst_4 : tensor<1024xi32> loc(#loc21)
    %23 = arith.addi %5, %cst_3 : tensor<1024xi32> loc(#loc22)
    %24 = arith.addi %22, %23 : tensor<1024xi32> loc(#loc23)
    %25 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc24)
    %26 = tt.addptr %25, %24 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc24)
    %27 = tt.load %26, %21, %cst_5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc25)
    %28 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc26)
    %29 = tt.addptr %28, %23 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc26)
    %30 = tt.load %29, %21, %cst_5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc27)
    %31 = arith.subf %27, %30 : tensor<1024xf32> loc(#loc28)
    %32 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc29)
    %33 = tt.addptr %32, %23 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc29)
    %34 = tt.load %33, %21, %cst_5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc30)
    %35 = arith.addf %34, %cst_2 : tensor<1024xf32> loc(#loc31)
    %36 = tt.extern_elementwise %35 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1024xf32>) -> tensor<1024xf32> loc(#loc32)
    %37 = arith.divf %cst, %36 : tensor<1024xf32> loc(#loc33)
    %38 = arith.mulf %31, %37 : tensor<1024xf32> loc(#loc34)
    %39 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc35)
    %40 = tt.addptr %39, %23 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc35)
    %41 = tt.load %40, %21, %cst_5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc36)
    %42 = arith.mulf %38, %41 : tensor<1024xf32> loc(#loc37)
    %43 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc38)
    %44 = tt.addptr %43, %23 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc38)
    %45 = tt.load %44, %21, %cst_5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc39)
    %46 = arith.addf %42, %45 : tensor<1024xf32> loc(#loc40)
    %47 = arith.cmpf ogt, %cst_5, %46 : tensor<1024xf32> loc(#loc60)
    %48 = arith.select %47, %cst_5, %46 : tensor<1024xi1>, tensor<1024xf32> loc(#loc61)
    %49 = arith.select %21, %48, %cst_5 : tensor<1024xi1>, tensor<1024xf32> loc(#loc44)
    %50 = arith.select %11, %19, %49 : tensor<1024xi1>, tensor<1024xf32> loc(#loc45)
    %51 = arith.cmpi sge, %9, %cst_8 : tensor<1024xi64> loc(#loc46)
    %52 = arith.addi %7, %cst_1 : tensor<1024xi32> loc(#loc47)
    %53 = arith.addi %5, %cst_0 : tensor<1024xi32> loc(#loc48)
    %54 = arith.muli %53, %cst_10 : tensor<1024xi32> loc(#loc49)
    %55 = arith.addi %52, %54 : tensor<1024xi32> loc(#loc50)
    %56 = arith.muli %8, %cst_9 : tensor<1024xi32> loc(#loc51)
    %57 = arith.addi %55, %56 : tensor<1024xi32> loc(#loc52)
    %58 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc53)
    %59 = tt.addptr %58, %57 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc53)
    %60 = tt.load %59, %51, %cst_5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc54)
    %61 = arith.select %10, %50, %60 : tensor<1024xi1>, tensor<1024xf32> loc(#loc62)
    %62 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc57)
    %63 = tt.addptr %62, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc57)
    tt.store %63, %61 : tensor<1024x!tt.ptr<f32>> loc(#loc58)
    tt.return loc(#loc59)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":21:28)
#loc3 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":21:33)
#loc4 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":22:36)
#loc5 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":22:23)
#loc6 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":24:19)
#loc7 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":25:21)
#loc8 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":25:28)
#loc9 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":26:19)
#loc10 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":33:18)
#loc11 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":38:18)
#loc12 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":39:19)
#loc13 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":40:41)
#loc14 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":40:36)
#loc15 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":40:53)
#loc16 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":40:47)
#loc17 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":40:31)
#loc18 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":40:58)
#loc19 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":41:20)
#loc20 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":44:20)
#loc21 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":45:34)
#loc22 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":45:49)
#loc23 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":45:40)
#loc24 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":45:31)
#loc25 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":45:56)
#loc26 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":46:31)
#loc27 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":46:46)
#loc28 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":47:20)
#loc29 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":48:31)
#loc30 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":48:46)
#loc31 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":50:20)
#loc32 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":51:27)
#loc33 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":53:20)
#loc34 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":56:20)
#loc35 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":57:31)
#loc36 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":57:46)
#loc37 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":58:20)
#loc38 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":59:31)
#loc39 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":59:46)
#loc40 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":60:20)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc42 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":62:42)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc44 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":64:35)
#loc45 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":65:34)
#loc46 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":68:20)
#loc47 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":71:39)
#loc48 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":71:57)
#loc49 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":71:49)
#loc50 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":71:44)
#loc51 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":71:69)
#loc52 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":71:63)
#loc53 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":71:31)
#loc54 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":71:74)
#loc55 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":72:34)
#loc56 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":67:34)
#loc57 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":73:25)
#loc58 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":73:37)
#loc59 = loc("inductor_cache/fm/cfmkzznplpqxyp5bjd77usfauz5igvfwzf2xlezoxvq3kwwwamkj.py":73:4)
#loc60 = loc(callsite(#loc41 at #loc42))
#loc61 = loc(callsite(#loc43 at #loc42))
#loc62 = loc(fused[#loc55, #loc56])
