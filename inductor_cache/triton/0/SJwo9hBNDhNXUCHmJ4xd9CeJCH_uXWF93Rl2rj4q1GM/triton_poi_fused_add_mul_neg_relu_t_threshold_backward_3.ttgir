#blocked = #triton_gpu.blocked<{sizePerThread = [8], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_add_mul_neg_relu_t_threshold_backward_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":19:0), %arg2: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":19:0)) attributes {noinline = false} {
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst = arith.constant dense<2.000000e+00> : tensor<1024xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1024xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked1> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)
    %5 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked1> loc(#loc5)
    %6 = arith.addi %4, %2 : tensor<1024xi32, #blocked> loc(#loc5)
    %7 = arith.addi %5, %3 : tensor<1024xi32, #blocked1> loc(#loc5)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc6)
    %9 = tt.addptr %8, %6 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc6)
    %10 = tt.load %9 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc7)
    %11 = arith.subf %cst_0, %10 : tensor<1024xf32, #blocked> loc(#loc8)
    %12 = arith.cmpf ogt, %cst_0, %11 : tensor<1024xf32, #blocked> loc(#loc20)
    %13 = arith.select %12, %cst_0, %11 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc21)
    %14 = arith.mulf %13, %cst : tensor<1024xf32, #blocked> loc(#loc12)
    %15 = arith.addf %14, %10 : tensor<1024xf32, #blocked> loc(#loc13)
    %16 = arith.cmpf ole, %13, %cst_0 : tensor<1024xf32, #blocked> loc(#loc14)
    %17 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc15)
    %18 = tt.addptr %17, %7 : tensor<1024x!tt.ptr<f32>, #blocked1>, tensor<1024xi32, #blocked1> loc(#loc15)
    %19 = triton_gpu.convert_layout %15 : tensor<1024xf32, #blocked> -> tensor<1024xf32, #blocked1> loc(#loc16)
    tt.store %18, %19 : tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc16)
    %20 = tt.splat %arg2 : !tt.ptr<i1> -> tensor<1024x!tt.ptr<i1>, #blocked> loc(#loc17)
    %21 = tt.addptr %20, %6 : tensor<1024x!tt.ptr<i1>, #blocked>, tensor<1024xi32, #blocked> loc(#loc17)
    %22 = tt.bitcast %21 : tensor<1024x!tt.ptr<i1>, #blocked> -> tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc18)
    %23 = arith.extui %16 : tensor<1024xi1, #blocked> to tensor<1024xi8, #blocked> loc(#loc18)
    tt.store %22, %23 : tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc18)
    tt.return loc(#loc19)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":21:28)
#loc3 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":21:33)
#loc4 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":22:36)
#loc5 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":22:23)
#loc6 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":25:30)
#loc7 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":25:35)
#loc8 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":26:12)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc10 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":30:40)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc12 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":32:18)
#loc13 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":33:18)
#loc14 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":35:20)
#loc15 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":36:25)
#loc16 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":36:36)
#loc17 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":37:25)
#loc18 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":37:37)
#loc19 = loc("inductor_cache/53/c53z6k2a7x6uggsqxfenmn2jatmuhyqnkjo7cq3szy4ancftpzkm.py":37:4)
#loc20 = loc(callsite(#loc9 at #loc10))
#loc21 = loc(callsite(#loc11 at #loc10))
