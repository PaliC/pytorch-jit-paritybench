//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_log_mean_mul_neg_sum_0 // -- Begin function triton_per_fused_add_log_mean_mul_neg_sum_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_log_mean_mul_neg_sum_0
.visible .entry triton_per_fused_add_log_mean_mul_neg_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_log_mean_mul_neg_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_log_mean_mul_neg_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_log_mean_mul_neg_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_log_mean_mul_neg_sum_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_log_mean_mul_neg_sum_0_param_4,
	.param .u32 triton_per_fused_add_log_mean_mul_neg_sum_0_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<63>;
	.reg .f32 	%f<175>;
	.reg .b64 	%rd<19>;
$L__func_begin0:

// %bb.0:
	.loc	1 26 34                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:26:34
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd12, [triton_per_fused_add_log_mean_mul_neg_sum_0_param_1];
	and.b32  	%r2, %r1, 63;
	ld.param.u64 	%rd13, [triton_per_fused_add_log_mean_mul_neg_sum_0_param_2];
	ld.param.u64 	%rd14, [triton_per_fused_add_log_mean_mul_neg_sum_0_param_3];
	.loc	1 30 30                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:30:30
	mul.wide.u32 	%rd15, %r2, 4;
	add.s64 	%rd2, %rd12, %rd15;
	ld.param.u64 	%rd16, [triton_per_fused_add_log_mean_mul_neg_sum_0_param_4];
	mov.pred 	%p1, -1;
	.loc	1 30 35                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:30:35
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.b32 { %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 31 30                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:31:30
	add.s64 	%rd3, %rd13, %rd15;
	.loc	1 31 35                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:31:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.b32 { %r10 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 32 32                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:32:32
	shl.b32 	%r19, %r2, 2;
	.loc	1 32 30                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:32:30
	mul.wide.u32 	%rd17, %r19, 4;
	add.s64 	%rd4, %rd14, %rd17;
	.loc	1 32 37                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:32:37
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:33:30
	add.s64 	%rd5, %rd16, %rd17;
	.loc	1 33 37                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:33:37
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r12;
	.loc	1 34 31                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:34:31
	add.s64 	%rd6, %rd4, 4;
	.loc	1 34 42                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:34:42
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:35:31
	add.s64 	%rd7, %rd5, 4;
	.loc	1 35 42                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:35:42
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r14;
	.loc	1 36 31                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:36:31
	add.s64 	%rd8, %rd4, 8;
	.loc	1 36 42                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:36:42
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:37:31
	add.s64 	%rd9, %rd5, 8;
	.loc	1 37 42                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:37:42
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:38:31
	add.s64 	%rd10, %rd4, 12;
	.loc	1 38 42                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:38:42
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:39:31
	add.s64 	%rd11, %rd5, 12;
	.loc	1 39 42                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:39:42
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 44 18                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:44:18
	add.f32 	%f21, %f20, 0f358637BD;
	.loc	1 45 23                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:45:23
	setp.lt.f32 	%p11, %f21, 0f00800000;
	mul.f32 	%f22, %f21, 0f4B000000;
	selp.f32 	%f4, %f22, %f21, %p11;
	selp.f32 	%f23, 0fC1B80000, 0f00000000, %p11;
	mov.b32 	%r20, %f4;
	add.s32 	%r21, %r20, -1059760811;
	and.b32  	%r22, %r21, -8388608;
	sub.s32 	%r23, %r20, %r22;
	mov.b32 	%f24, %r23;
	cvt.rn.f32.s32 	%f25, %r22;
	mov.f32 	%f26, 0f34000000;
	fma.rn.ftz.f32 	%f27, %f25, %f26, %f23;
	add.f32 	%f28, %f24, 0fBF800000;
	mov.f32 	%f29, 0f3E1039F6;
	mov.f32 	%f30, 0fBE055027;
	fma.rn.ftz.f32 	%f31, %f30, %f28, %f29;
	mov.f32 	%f32, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f33, %f31, %f28, %f32;
	mov.f32 	%f34, 0f3E0F2955;
	fma.rn.ftz.f32 	%f35, %f33, %f28, %f34;
	mov.f32 	%f36, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f37, %f35, %f28, %f36;
	mov.f32 	%f38, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f39, %f37, %f28, %f38;
	mov.f32 	%f40, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f41, %f39, %f28, %f40;
	mov.f32 	%f42, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f43, %f41, %f28, %f42;
	mov.f32 	%f44, 0fBF000000;
	fma.rn.ftz.f32 	%f45, %f43, %f28, %f44;
	mul.f32 	%f46, %f28, %f45;
	fma.rn.ftz.f32 	%f47, %f46, %f28, %f28;
	mov.f32 	%f48, 0f3F317218;
	fma.rn.ftz.f32 	%f171, %f27, %f48, %f47;
	setp.lt.u32 	%p12, %r20, 2139095040;
	mov.f32 	%f49, 0f7F800000;
	@%p12 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 23                          // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:0:23
	fma.rn.ftz.f32 	%f171, %f4, %f49, %f49;
$L__BB0_2:                              // %__nv_logf.exit
	mov.b32 	%f2, %r16;
	.loc	1 48 20                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:48:20
	add.f32 	%f50, %f1, 0f358637BD;
	.loc	1 49 24                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:49:24
	setp.lt.f32 	%p13, %f50, 0f00800000;
	mul.f32 	%f51, %f50, 0f4B000000;
	selp.f32 	%f8, %f51, %f50, %p13;
	selp.f32 	%f52, 0fC1B80000, 0f00000000, %p13;
	mov.b32 	%r24, %f8;
	add.s32 	%r25, %r24, -1059760811;
	and.b32  	%r26, %r25, -8388608;
	sub.s32 	%r27, %r24, %r26;
	mov.b32 	%f53, %r27;
	cvt.rn.f32.s32 	%f54, %r26;
	fma.rn.ftz.f32 	%f56, %f54, %f26, %f52;
	add.f32 	%f57, %f53, 0fBF800000;
	fma.rn.ftz.f32 	%f60, %f30, %f57, %f29;
	fma.rn.ftz.f32 	%f62, %f60, %f57, %f32;
	fma.rn.ftz.f32 	%f64, %f62, %f57, %f34;
	fma.rn.ftz.f32 	%f66, %f64, %f57, %f36;
	fma.rn.ftz.f32 	%f68, %f66, %f57, %f38;
	fma.rn.ftz.f32 	%f70, %f68, %f57, %f40;
	fma.rn.ftz.f32 	%f72, %f70, %f57, %f42;
	fma.rn.ftz.f32 	%f74, %f72, %f57, %f44;
	mul.f32 	%f75, %f57, %f74;
	fma.rn.ftz.f32 	%f76, %f75, %f57, %f57;
	fma.rn.ftz.f32 	%f172, %f56, %f48, %f76;
	setp.lt.u32 	%p14, %r24, 2139095040;
	@%p14 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i27
	.loc	1 0 24                          // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:0:24
	fma.rn.ftz.f32 	%f172, %f8, %f49, %f49;
$L__BB0_4:                              // %__nv_logf.exit30
	mov.b32 	%f3, %r18;
	.loc	1 53 20                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:53:20
	add.f32 	%f79, %f2, 0f358637BD;
	.loc	1 54 24                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:54:24
	setp.lt.f32 	%p15, %f79, 0f00800000;
	mul.f32 	%f80, %f79, 0f4B000000;
	selp.f32 	%f12, %f80, %f79, %p15;
	selp.f32 	%f81, 0fC1B80000, 0f00000000, %p15;
	mov.b32 	%r28, %f12;
	add.s32 	%r29, %r28, -1059760811;
	and.b32  	%r30, %r29, -8388608;
	sub.s32 	%r31, %r28, %r30;
	mov.b32 	%f82, %r31;
	cvt.rn.f32.s32 	%f83, %r30;
	fma.rn.ftz.f32 	%f85, %f83, %f26, %f81;
	add.f32 	%f86, %f82, 0fBF800000;
	fma.rn.ftz.f32 	%f89, %f30, %f86, %f29;
	fma.rn.ftz.f32 	%f91, %f89, %f86, %f32;
	fma.rn.ftz.f32 	%f93, %f91, %f86, %f34;
	fma.rn.ftz.f32 	%f95, %f93, %f86, %f36;
	fma.rn.ftz.f32 	%f97, %f95, %f86, %f38;
	fma.rn.ftz.f32 	%f99, %f97, %f86, %f40;
	fma.rn.ftz.f32 	%f101, %f99, %f86, %f42;
	fma.rn.ftz.f32 	%f103, %f101, %f86, %f44;
	mul.f32 	%f104, %f86, %f103;
	fma.rn.ftz.f32 	%f105, %f104, %f86, %f86;
	fma.rn.ftz.f32 	%f173, %f85, %f48, %f105;
	setp.lt.u32 	%p16, %r28, 2139095040;
	@%p16 bra 	$L__BB0_6;
// %bb.5:                               // %__nv_fmaf_rn.exit.i.i57
	.loc	1 0 24                          // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:0:24
	fma.rn.ftz.f32 	%f173, %f12, %f49, %f49;
$L__BB0_6:                              // %__nv_logf.exit60
	ld.param.u64 	%rd18, [triton_per_fused_add_log_mean_mul_neg_sum_0_param_0];
	.loc	1 58 20                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:58:20
	add.f32 	%f108, %f3, 0f358637BD;
	.loc	1 59 24                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:59:24
	setp.lt.f32 	%p17, %f108, 0f00800000;
	mul.f32 	%f109, %f108, 0f4B000000;
	selp.f32 	%f16, %f109, %f108, %p17;
	selp.f32 	%f110, 0fC1B80000, 0f00000000, %p17;
	mov.b32 	%r32, %f16;
	add.s32 	%r33, %r32, -1059760811;
	and.b32  	%r34, %r33, -8388608;
	sub.s32 	%r35, %r32, %r34;
	mov.b32 	%f111, %r35;
	cvt.rn.f32.s32 	%f112, %r34;
	fma.rn.ftz.f32 	%f114, %f112, %f26, %f110;
	add.f32 	%f115, %f111, 0fBF800000;
	fma.rn.ftz.f32 	%f118, %f30, %f115, %f29;
	fma.rn.ftz.f32 	%f120, %f118, %f115, %f32;
	fma.rn.ftz.f32 	%f122, %f120, %f115, %f34;
	fma.rn.ftz.f32 	%f124, %f122, %f115, %f36;
	fma.rn.ftz.f32 	%f126, %f124, %f115, %f38;
	fma.rn.ftz.f32 	%f128, %f126, %f115, %f40;
	fma.rn.ftz.f32 	%f130, %f128, %f115, %f42;
	fma.rn.ftz.f32 	%f132, %f130, %f115, %f44;
	mul.f32 	%f133, %f115, %f132;
	fma.rn.ftz.f32 	%f134, %f133, %f115, %f115;
	fma.rn.ftz.f32 	%f174, %f114, %f48, %f134;
	setp.lt.u32 	%p18, %r32, 2139095040;
	@%p18 bra 	$L__BB0_8;
// %bb.7:                               // %__nv_fmaf_rn.exit.i.i87
	.loc	1 0 24                          // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:0:24
	fma.rn.ftz.f32 	%f174, %f16, %f49, %f49;
$L__BB0_8:                              // %__nv_logf.exit90
	.loc	1 36 42                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:36:42
	mov.b32 	%f137, %r15;
	mov.b32 	%f138, %r17;
	.loc	1 32 37                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:32:37
	mov.b32 	%f139, %r13;
	mov.b32 	%f140, %r11;
	.loc	1 45 23                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:45:23
	setp.eq.f32 	%p23, %f8, 0f00000000;
	setp.eq.f32 	%p24, %f4, 0f00000000;
	mov.f32 	%f141, 0f00000000;
	.loc	1 42 12                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:42:12
	sub.f32 	%f142, %f141, %f140;
	sub.f32 	%f143, %f141, %f139;
	.loc	1 45 23                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:45:23
	selp.f32 	%f144, 0fFF800000, %f171, %p24;
	selp.f32 	%f145, 0fFF800000, %f172, %p23;
	.loc	1 46 19                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:46:19
	mul.f32 	%f146, %f143, %f145;
	.loc	1 51 20                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:51:20
	fma.rn.f32 	%f147, %f142, %f144, %f146;
	.loc	1 54 24                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:54:24
	setp.eq.f32 	%p25, %f12, 0f00000000;
	setp.eq.f32 	%p26, %f16, 0f00000000;
	.loc	1 30 35                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:30:35
	mov.b32 	%f148, %r9;
	.loc	1 31 35                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:31:35
	mov.b32 	%f149, %r10;
	.loc	1 40 18                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:40:18
	sub.f32 	%f150, %f148, %f149;
	.loc	1 26 34                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:26:34
	and.b32  	%r46, %r1, 31;
	.loc	1 52 13                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:52:13
	sub.f32 	%f151, %f141, %f138;
	sub.f32 	%f152, %f141, %f137;
	.loc	1 54 24                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:54:24
	selp.f32 	%f153, 0fFF800000, %f174, %p26;
	selp.f32 	%f154, 0fFF800000, %f173, %p25;
	.loc	1 56 20                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:56:20
	fma.rn.f32 	%f155, %f152, %f154, %f147;
	.loc	1 61 20                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:61:20
	fma.rn.f32 	%f156, %f151, %f153, %f155;
	.loc	1 62 19                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:62:19
	fma.rn.f32 	%f157, %f150, %f150, %f156;
$L__tmp0:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f157;
	shfl.sync.bfly.b32	%r48, %r47, 16, 31, -1;
	mov.b32 	%f158, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f159, %f157, %f158;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f159;
	shfl.sync.bfly.b32	%r50, %r49, 8, 31, -1;
	mov.b32 	%f160, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f161, %f159, %f160;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f161;
	shfl.sync.bfly.b32	%r52, %r51, 4, 31, -1;
	mov.b32 	%f162, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f163, %f161, %f162;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f163;
	shfl.sync.bfly.b32	%r54, %r53, 2, 31, -1;
	mov.b32 	%f164, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f165, %f163, %f164;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f165;
	shfl.sync.bfly.b32	%r56, %r55, 1, 31, -1;
	mov.b32 	%f166, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f167, %f165, %f166;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p19, %r46, 0;
	shr.u32 	%r57, %r1, 3;
	and.b32  	%r58, %r57, 4;
	mov.u32 	%r59, global_smem;
	add.s32 	%r36, %r59, %r58;
	mov.b32 	%r37, %f167;
	// begin inline asm
	@%p19 st.shared.b32 [ %r36 + 0 ], %r37;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p20, %r1, 2;
	shl.b32 	%r60, %r1, 2;
	add.s32 	%r39, %r59, %r60;
	// begin inline asm
	@%p20 ld.shared.b32 %r38, [ %r39 + 0 ];
	// end inline asm
	mov.b32 	%f168, %r38;
	shfl.sync.bfly.b32	%r61, %r38, 1, 31, -1;
	mov.b32 	%f169, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f170, %f168, %f169;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r62, %r1, 1;
	setp.eq.b32 	%p27, %r62, 1;
	not.pred 	%p28, %p27;
	and.pred  	%p21, %p20, %p28;
	mov.b32 	%r41, %f170;
	// begin inline asm
	@%p21 st.shared.b32 [ %r39 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
$L__tmp1:
	.loc	1 66 20                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:66:20
	ld.shared.u32 	%r43, [global_smem];
	mov.b32 	%r44, 1115684864;
	// begin inline asm
	div.full.f32 %r45, %r43, %r44;
	// end inline asm
	.loc	1 67 4                          // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:67:4
	bar.sync 	0;
	.loc	1 68 71                         // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:68:71
	setp.eq.s32 	%p22, %r2, 0;
	// begin inline asm
	@%p22 st.global.b32 [ %rd18 + 0 ], { %r45 };
	// end inline asm
	.loc	1 68 4                          // cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py:68:4
	ret;
$L__tmp2:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/sw/cswhefg2vohlf7sa7ii2bgib5ibomafvasgyzpazdmzpgsgbwxn3.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 188                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 119
.b8 104
.b8 101
.b8 102
.b8 103
.b8 50
.b8 118
.b8 111
.b8 104
.b8 108
.b8 102
.b8 55
.b8 115
.b8 97
.b8 55
.b8 105
.b8 105
.b8 50
.b8 98
.b8 103
.b8 105
.b8 98
.b8 53
.b8 105
.b8 98
.b8 111
.b8 109
.b8 97
.b8 102
.b8 118
.b8 97
.b8 115
.b8 103
.b8 121
.b8 122
.b8 112
.b8 97
.b8 122
.b8 100
.b8 109
.b8 122
.b8 112
.b8 103
.b8 115
.b8 103
.b8 98
.b8 119
.b8 120
.b8 110
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 119
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 101
.b8 103
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x91:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 64                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
