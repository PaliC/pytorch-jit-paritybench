//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__prelu_kernel_mean_18 // -- Begin function triton_red_fused__prelu_kernel_mean_18
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__prelu_kernel_mean_18
.visible .entry triton_red_fused__prelu_kernel_mean_18(
	.param .u64 .ptr .global .align 1 triton_red_fused__prelu_kernel_mean_18_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__prelu_kernel_mean_18_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__prelu_kernel_mean_18_param_2,
	.param .u32 triton_red_fused__prelu_kernel_mean_18_param_3,
	.param .u32 triton_red_fused__prelu_kernel_mean_18_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<107>;
	.reg .b32 	%r<216>;
	.reg .f32 	%f<63>;
	.reg .b64 	%rd<36>;
	.loc	1 19 0                          // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_red_fused__prelu_kernel_mean_18_param_2];
	ld.param.u64 	%rd3, [triton_red_fused__prelu_kernel_mean_18_param_0];
	ld.param.u64 	%rd6, [triton_red_fused__prelu_kernel_mean_18_param_1];
$L__tmp0:
	.loc	1 22 28                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:22:28
	// begin inline asm
	mov.u32 %r10, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:22:33
	shl.b32 	%r1, %r10, 6;
	.loc	1 23 44                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r15, %r2, 2;
	and.b32  	%r3, %r15, 60;
	.loc	1 23 23                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:23:23
	or.b32  	%r16, %r1, %r3;
	.loc	1 24 21                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:24:21
	setp.gt.s32 	%p2, %r16, 511;
	setp.lt.s32 	%p1, %r16, 512;
	.loc	1 25 33                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:25:33
	bfe.u32 	%r4, %r2, 4, 3;
	.loc	1 27 19                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:27:19
	bfe.s32 	%r17, %r10, 25, 1;
	shr.u32 	%r18, %r17, 26;
	add.s32 	%r19, %r16, %r18;
	shr.s32 	%r5, %r19, 6;
	.loc	1 26 19                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:26:19
	and.b32  	%r20, %r19, -64;
	sub.s32 	%r21, %r16, %r20;
	.loc	1 28 30                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:28:30
	mul.wide.s32 	%rd7, %r21, 4;
	add.s64 	%rd5, %rd6, %rd7;
	.loc	1 28 35                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:28:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd5 + 0 ];
	// end inline asm
	mov.pred 	%p83, -1;
	@%p2 bra 	$L__BB0_3;
// %bb.1:                               // %.split.us.preheader
	.loc	1 0 0                           // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:0:0
	mov.b32 	%f4, %r14;
	mov.b32 	%f3, %r13;
	mov.b32 	%f2, %r12;
	mov.b32 	%f1, %r11;
	.loc	1 31 36                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:31:36
	mad.lo.s32 	%r153, %r5, 8128, %r1;
	shl.b32 	%r154, %r4, 6;
	add.s32 	%r155, %r153, %r154;
	add.s32 	%r215, %r155, %r3;
	mov.f32 	%f59, 0f00000000;
	mov.u64 	%rd35, -8;
	mov.f32 	%f60, %f59;
	mov.f32 	%f61, %f59;
	mov.f32 	%f62, %f59;
$L__BB0_2:                              // %.split.us
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	mul.wide.s32 	%rd32, %r215, 4;
	add.s64 	%rd31, %rd3, %rd32;
	mov.b32 	%r160, 0;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r156, 0x0;
	mov.u32 %r157, 0x0;
	mov.u32 %r158, 0x0;
	mov.u32 %r159, 0x0;
	@%p83 ld.global.L1::evict_first.v4.b32 { %r156, %r157, %r158, %r159 }, [ %rd31 + 0 ];
	@!%p83 mov.u32 %r156, %r160;
	@!%p83 mov.u32 %r157, %r160;
	@!%p83 mov.u32 %r158, %r160;
	@!%p83 mov.u32 %r159, %r160;
	// end inline asm
	mov.b32 	%f25, %r156;
	mov.b32 	%f26, %r157;
	mov.b32 	%f27, %r158;
	mov.b32 	%f28, %r159;
	.loc	1 37 22                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:37:22
	setp.gt.f32 	%p88, %f28, 0f00000000;
	setp.gt.f32 	%p89, %f27, 0f00000000;
	setp.gt.f32 	%p90, %f26, 0f00000000;
	setp.gt.f32 	%p91, %f25, 0f00000000;
	.loc	1 38 22                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:38:22
	mul.f32 	%f29, %f4, %f28;
	mul.f32 	%f30, %f3, %f27;
	mul.f32 	%f31, %f2, %f26;
	mul.f32 	%f32, %f1, %f25;
	.loc	1 39 36                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:39:36
	selp.f32 	%f33, %f25, %f32, %p91;
	selp.f32 	%f34, %f26, %f31, %p90;
	selp.f32 	%f35, %f27, %f30, %p89;
	selp.f32 	%f36, %f28, %f29, %p88;
	.loc	1 41 23                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:41:23
	add.f32 	%f62, %f62, %f36;
	add.f32 	%f61, %f61, %f35;
	add.f32 	%f60, %f60, %f34;
	add.f32 	%f59, %f59, %f33;
	.loc	1 31 36                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:31:36
	add.s64 	%rd35, %rd35, 8;
	add.s32 	%r215, %r215, 512;
	setp.lt.u64 	%p92, %rd35, 120;
	@%p92 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_4;
$L__BB0_3:                              // %.split
	.loc	1 0 36                          // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:0:36
	shl.b32 	%r22, %r5, 13;
	add.s32 	%r6, %r22, %r21;
	.loc	1 35 47                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:47
	shl.b32 	%r151, %r4, 6;
	or.b32  	%r152, %r6, %r151;
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	mul.wide.s32 	%rd24, %r152, 4;
	add.s64 	%rd8, %rd3, %rd24;
	mov.b32 	%r27, 0;
	mov.pred 	%p3, 0;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd8 + 0 ];
	@!%p3 mov.u32 %r23, %r27;
	@!%p3 mov.u32 %r24, %r27;
	@!%p3 mov.u32 %r25, %r27;
	@!%p3 mov.u32 %r26, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	cvt.s64.s32 	%rd25, %r6;
	cvt.u64.u32 	%rd26, %r151;
	add.s64 	%rd27, %rd25, %rd26;
	shl.b64 	%rd28, %rd27, 2;
	add.s64 	%rd29, %rd3, %rd28;
	add.s64 	%rd9, %rd29, 2048;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd9 + 0 ];
	@!%p3 mov.u32 %r31, %r27;
	@!%p3 mov.u32 %r32, %r27;
	@!%p3 mov.u32 %r33, %r27;
	@!%p3 mov.u32 %r34, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	add.s64 	%rd10, %rd29, 4096;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r39, %r40, %r41, %r42 }, [ %rd10 + 0 ];
	@!%p3 mov.u32 %r39, %r27;
	@!%p3 mov.u32 %r40, %r27;
	@!%p3 mov.u32 %r41, %r27;
	@!%p3 mov.u32 %r42, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	add.s64 	%rd11, %rd29, 6144;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r47, %r48, %r49, %r50 }, [ %rd11 + 0 ];
	@!%p3 mov.u32 %r47, %r27;
	@!%p3 mov.u32 %r48, %r27;
	@!%p3 mov.u32 %r49, %r27;
	@!%p3 mov.u32 %r50, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	add.s64 	%rd12, %rd29, 8192;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r55, %r56, %r57, %r58 }, [ %rd12 + 0 ];
	@!%p3 mov.u32 %r55, %r27;
	@!%p3 mov.u32 %r56, %r27;
	@!%p3 mov.u32 %r57, %r27;
	@!%p3 mov.u32 %r58, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	add.s64 	%rd13, %rd29, 10240;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	mov.u32 %r66, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r63, %r64, %r65, %r66 }, [ %rd13 + 0 ];
	@!%p3 mov.u32 %r63, %r27;
	@!%p3 mov.u32 %r64, %r27;
	@!%p3 mov.u32 %r65, %r27;
	@!%p3 mov.u32 %r66, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	add.s64 	%rd14, %rd29, 12288;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r71, 0x0;
	mov.u32 %r72, 0x0;
	mov.u32 %r73, 0x0;
	mov.u32 %r74, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r71, %r72, %r73, %r74 }, [ %rd14 + 0 ];
	@!%p3 mov.u32 %r71, %r27;
	@!%p3 mov.u32 %r72, %r27;
	@!%p3 mov.u32 %r73, %r27;
	@!%p3 mov.u32 %r74, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	add.s64 	%rd15, %rd29, 14336;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	mov.u32 %r82, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r79, %r80, %r81, %r82 }, [ %rd15 + 0 ];
	@!%p3 mov.u32 %r79, %r27;
	@!%p3 mov.u32 %r80, %r27;
	@!%p3 mov.u32 %r81, %r27;
	@!%p3 mov.u32 %r82, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	add.s64 	%rd16, %rd29, 16384;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r87, 0x0;
	mov.u32 %r88, 0x0;
	mov.u32 %r89, 0x0;
	mov.u32 %r90, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r87, %r88, %r89, %r90 }, [ %rd16 + 0 ];
	@!%p3 mov.u32 %r87, %r27;
	@!%p3 mov.u32 %r88, %r27;
	@!%p3 mov.u32 %r89, %r27;
	@!%p3 mov.u32 %r90, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	add.s64 	%rd17, %rd29, 18432;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r95, 0x0;
	mov.u32 %r96, 0x0;
	mov.u32 %r97, 0x0;
	mov.u32 %r98, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r95, %r96, %r97, %r98 }, [ %rd17 + 0 ];
	@!%p3 mov.u32 %r95, %r27;
	@!%p3 mov.u32 %r96, %r27;
	@!%p3 mov.u32 %r97, %r27;
	@!%p3 mov.u32 %r98, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	add.s64 	%rd18, %rd29, 20480;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	mov.u32 %r106, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r103, %r104, %r105, %r106 }, [ %rd18 + 0 ];
	@!%p3 mov.u32 %r103, %r27;
	@!%p3 mov.u32 %r104, %r27;
	@!%p3 mov.u32 %r105, %r27;
	@!%p3 mov.u32 %r106, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	add.s64 	%rd19, %rd29, 22528;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r111, 0x0;
	mov.u32 %r112, 0x0;
	mov.u32 %r113, 0x0;
	mov.u32 %r114, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r111, %r112, %r113, %r114 }, [ %rd19 + 0 ];
	@!%p3 mov.u32 %r111, %r27;
	@!%p3 mov.u32 %r112, %r27;
	@!%p3 mov.u32 %r113, %r27;
	@!%p3 mov.u32 %r114, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	add.s64 	%rd20, %rd29, 24576;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r119, 0x0;
	mov.u32 %r120, 0x0;
	mov.u32 %r121, 0x0;
	mov.u32 %r122, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r119, %r120, %r121, %r122 }, [ %rd20 + 0 ];
	@!%p3 mov.u32 %r119, %r27;
	@!%p3 mov.u32 %r120, %r27;
	@!%p3 mov.u32 %r121, %r27;
	@!%p3 mov.u32 %r122, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	add.s64 	%rd21, %rd29, 26624;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	mov.u32 %r129, 0x0;
	mov.u32 %r130, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r127, %r128, %r129, %r130 }, [ %rd21 + 0 ];
	@!%p3 mov.u32 %r127, %r27;
	@!%p3 mov.u32 %r128, %r27;
	@!%p3 mov.u32 %r129, %r27;
	@!%p3 mov.u32 %r130, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	add.s64 	%rd22, %rd29, 28672;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r135, 0x0;
	mov.u32 %r136, 0x0;
	mov.u32 %r137, 0x0;
	mov.u32 %r138, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r135, %r136, %r137, %r138 }, [ %rd22 + 0 ];
	@!%p3 mov.u32 %r135, %r27;
	@!%p3 mov.u32 %r136, %r27;
	@!%p3 mov.u32 %r137, %r27;
	@!%p3 mov.u32 %r138, %r27;
	// end inline asm
	.loc	1 35 34                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:34
	add.s64 	%rd23, %rd29, 30720;
	.loc	1 35 57                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:35:57
	// begin inline asm
	mov.u32 %r143, 0x0;
	mov.u32 %r144, 0x0;
	mov.u32 %r145, 0x0;
	mov.u32 %r146, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r143, %r144, %r145, %r146 }, [ %rd23 + 0 ];
	@!%p3 mov.u32 %r143, %r27;
	@!%p3 mov.u32 %r144, %r27;
	@!%p3 mov.u32 %r145, %r27;
	@!%p3 mov.u32 %r146, %r27;
	// end inline asm
	mov.f32 	%f59, 0f00000000;
	mov.f32 	%f60, %f59;
	mov.f32 	%f61, %f59;
	mov.f32 	%f62, %f59;
$L__BB0_4:                              // %.split2.us
	.loc	1 23 44                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:23:44
	and.b32  	%r186, %r2, 63;
	.loc	1 23 23                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:23:23
	or.b32  	%r187, %r1, %r186;
	.loc	1 24 21                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:24:21
	setp.lt.s32 	%p103, %r187, 512;
	.loc	1 23 44                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:23:44
	and.b32  	%r188, %r2, 16;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r189, %f59;
	shfl.sync.bfly.b32	%r190, %r189, 16, 31, -1;
	mov.b32 	%f37, %r190;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f59, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r191, %f60;
	shfl.sync.bfly.b32	%r192, %r191, 16, 31, -1;
	mov.b32 	%f39, %r192;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f60, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r193, %f61;
	shfl.sync.bfly.b32	%r194, %r193, 16, 31, -1;
	mov.b32 	%f41, %r194;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f61, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r195, %f62;
	shfl.sync.bfly.b32	%r196, %r195, 16, 31, -1;
	mov.b32 	%f43, %r196;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f62, %f43;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p93, %r188, 0;
	bfe.u32 	%r197, %r2, 5, 2;
	shl.b32 	%r198, %r3, 2;
	or.b32  	%r199, %r198, %r197;
	shl.b32 	%r200, %r199, 2;
	mov.u32 	%r201, global_smem;
	add.s32 	%r164, %r201, %r200;
	mov.b32 	%r165, %f38;
	// begin inline asm
	@%p93 st.shared.b32 [ %r164 + 0 ], %r165;
	// end inline asm
	add.s32 	%r166, %r164, 16;
	mov.b32 	%r167, %f40;
	// begin inline asm
	@%p93 st.shared.b32 [ %r166 + 0 ], %r167;
	// end inline asm
	add.s32 	%r168, %r164, 32;
	mov.b32 	%r169, %f42;
	// begin inline asm
	@%p93 st.shared.b32 [ %r168 + 0 ], %r169;
	// end inline asm
	add.s32 	%r170, %r164, 48;
	mov.b32 	%r171, %f44;
	// begin inline asm
	@%p93 st.shared.b32 [ %r170 + 0 ], %r171;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p97, %r2, 256;
	add.s32 	%r173, %r201, %r15;
	// begin inline asm
	@%p97 ld.shared.b32 %r172, [ %r173 + 0 ];
	// end inline asm
	mov.b32 	%f45, %r172;
	shfl.sync.bfly.b32	%r203, %r172, 2, 31, -1;
	mov.b32 	%f46, %r203;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r204, %f47;
	shfl.sync.bfly.b32	%r205, %r204, 1, 31, -1;
	mov.b32 	%f48, %r205;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r206, %r2, 3;
	setp.eq.s32 	%p104, %r206, 0;
	and.pred  	%p98, %p97, %p104;
	mov.b32 	%r175, %f49;
	// begin inline asm
	@%p98 st.shared.b32 [ %r173 + 0 ], %r175;
	// end inline asm
	add.s32 	%r177, %r173, 512;
	// begin inline asm
	@%p97 ld.shared.b32 %r176, [ %r177 + 0 ];
	// end inline asm
	mov.b32 	%f50, %r176;
	shfl.sync.bfly.b32	%r207, %r176, 2, 31, -1;
	mov.b32 	%f51, %r207;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r208, %f52;
	shfl.sync.bfly.b32	%r209, %r208, 1, 31, -1;
	mov.b32 	%f53, %r209;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r179, %f54;
	// begin inline asm
	@%p98 st.shared.b32 [ %r177 + 0 ], %r179;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r210, %r3, 4;
	add.s32 	%r211, %r201, %r210;
	ld.shared.u32 	%r181, [%r211];
	ld.shared.u32 	%r182, [%r211+16];
	ld.shared.u32 	%r183, [%r211+32];
	ld.shared.u32 	%r184, [%r211+48];
$L__tmp2:
	.loc	1 43 28                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:43:28
	bar.sync 	0;
	add.s32 	%r180, %r201, %r198;
	// begin inline asm
	@%p83 st.shared.v4.b32 [ %r180 + 0 ], { %r181, %r182, %r183, %r184 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r212, %r186, 2;
	add.s32 	%r213, %r201, %r212;
	ld.shared.u32 	%r185, [%r213];
	.loc	1 44 25                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:44:25
	mul.wide.s32 	%rd34, %r187, 4;
	add.s64 	%rd33, %rd4, %rd34;
	.loc	1 44 36                         // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:44:36
	and.b32  	%r214, %r2, 64;
	setp.eq.s32 	%p105, %r214, 0;
	and.pred  	%p102, %p105, %p103;
	// begin inline asm
	@%p102 st.global.b32 [ %rd33 + 0 ], { %r185 };
	// end inline asm
	.loc	1 44 4                          // crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py:44:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/rm/crmnp3u4yec5xne7ilibmsgpfxdhqaqbccpthefgsst3z4h6x45u.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 183                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 109
.b8 110
.b8 112
.b8 51
.b8 117
.b8 52
.b8 121
.b8 101
.b8 99
.b8 53
.b8 120
.b8 110
.b8 101
.b8 55
.b8 105
.b8 108
.b8 105
.b8 98
.b8 109
.b8 115
.b8 103
.b8 112
.b8 102
.b8 120
.b8 100
.b8 104
.b8 113
.b8 97
.b8 113
.b8 98
.b8 99
.b8 99
.b8 112
.b8 116
.b8 104
.b8 101
.b8 102
.b8 103
.b8 115
.b8 115
.b8 116
.b8 51
.b8 122
.b8 52
.b8 104
.b8 54
.b8 120
.b8 52
.b8 53
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x29 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 112
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 49
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8c:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
