#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_cat_22(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<32> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<64> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<2048> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<8> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<1024> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<16> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<512> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<-8> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<24> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<-16> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<8> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<-24> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.remsi %4, %cst_1 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_1 : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_2 : tensor<256xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_3 : tensor<256xi32, #blocked> loc(#loc9)
    %9 = arith.extsi %5 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc10)
    %10 = arith.cmpi slt, %9, %cst_4 : tensor<256xi64, #blocked> loc(#loc10)
    %11 = arith.muli %5, %cst_2 : tensor<256xi32, #blocked> loc(#loc11)
    %12 = arith.addi %7, %11 : tensor<256xi32, #blocked> loc(#loc12)
    %13 = arith.muli %8, %cst_5 : tensor<256xi32, #blocked> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<256xi32, #blocked> loc(#loc14)
    %15 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc15)
    %16 = tt.addptr %15, %14 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc15)
    %17 = tt.load %16, %10, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc16)
    %18 = arith.cmpi sge, %9, %cst_4 : tensor<256xi64, #blocked> loc(#loc17)
    %19 = arith.cmpi slt, %9, %cst_6 : tensor<256xi64, #blocked> loc(#loc18)
    %20 = arith.andi %18, %19 : tensor<256xi1, #blocked> loc(#loc19)
    %21 = arith.addi %7, %cst_7 : tensor<256xi32, #blocked> loc(#loc20)
    %22 = arith.addi %5, %cst_8 : tensor<256xi32, #blocked> loc(#loc21)
    %23 = arith.muli %22, %cst_2 : tensor<256xi32, #blocked> loc(#loc22)
    %24 = arith.addi %21, %23 : tensor<256xi32, #blocked> loc(#loc23)
    %25 = arith.addi %24, %13 : tensor<256xi32, #blocked> loc(#loc24)
    %26 = tt.addptr %15, %25 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc25)
    %27 = tt.load %26, %20, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc26)
    %28 = arith.cmpi sge, %9, %cst_6 : tensor<256xi64, #blocked> loc(#loc27)
    %29 = arith.cmpi slt, %9, %cst_9 : tensor<256xi64, #blocked> loc(#loc28)
    %30 = arith.andi %28, %29 : tensor<256xi1, #blocked> loc(#loc29)
    %31 = arith.addi %5, %cst_10 : tensor<256xi32, #blocked> loc(#loc30)
    %32 = arith.muli %31, %cst_2 : tensor<256xi32, #blocked> loc(#loc31)
    %33 = arith.addi %21, %32 : tensor<256xi32, #blocked> loc(#loc32)
    %34 = arith.addi %33, %13 : tensor<256xi32, #blocked> loc(#loc33)
    %35 = tt.addptr %15, %34 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc34)
    %36 = tt.load %35, %30, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc35)
    %37 = arith.muli %6, %cst_11 : tensor<256xi32, #blocked> loc(#loc36)
    %38 = arith.addi %37, %31 : tensor<256xi32, #blocked> loc(#loc37)
    %39 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc38)
    %40 = tt.addptr %39, %38 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc38)
    %41 = tt.load %40, %30, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc39)
    %42 = arith.subf %cst, %41 : tensor<256xf32, #blocked> loc(#loc68)
    %43 = math.exp %42 : tensor<256xf32, #blocked> loc(#loc69)
    %44 = arith.addf %43, %cst_0 : tensor<256xf32, #blocked> loc(#loc70)
    %45 = arith.divf %cst_0, %44 : tensor<256xf32, #blocked> loc(#loc71)
    %46 = arith.mulf %41, %45 : tensor<256xf32, #blocked> loc(#loc45)
    %47 = arith.addf %36, %46 : tensor<256xf32, #blocked> loc(#loc46)
    %48 = arith.cmpi sge, %9, %cst_9 : tensor<256xi64, #blocked> loc(#loc47)
    %49 = arith.addi %5, %cst_12 : tensor<256xi32, #blocked> loc(#loc48)
    %50 = arith.muli %49, %cst_2 : tensor<256xi32, #blocked> loc(#loc49)
    %51 = arith.addi %21, %50 : tensor<256xi32, #blocked> loc(#loc50)
    %52 = arith.addi %51, %13 : tensor<256xi32, #blocked> loc(#loc51)
    %53 = tt.addptr %15, %52 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc52)
    %54 = tt.load %53, %48, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc53)
    %55 = arith.addi %37, %49 : tensor<256xi32, #blocked> loc(#loc54)
    %56 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc55)
    %57 = tt.addptr %56, %55 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc55)
    %58 = tt.load %57, %48, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc56)
    %59 = arith.subf %cst, %58 : tensor<256xf32, #blocked> loc(#loc72)
    %60 = math.exp %59 : tensor<256xf32, #blocked> loc(#loc73)
    %61 = arith.addf %60, %cst_0 : tensor<256xf32, #blocked> loc(#loc74)
    %62 = arith.divf %cst_0, %61 : tensor<256xf32, #blocked> loc(#loc75)
    %63 = arith.mulf %58, %62 : tensor<256xf32, #blocked> loc(#loc58)
    %64 = arith.addf %54, %63 : tensor<256xf32, #blocked> loc(#loc59)
    %65 = arith.select %48, %64, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc60)
    %66 = arith.select %30, %47, %65 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc76)
    %67 = arith.select %20, %27, %66 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc63)
    %68 = arith.select %10, %17, %67 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc64)
    %69 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc65)
    %70 = tt.addptr %69, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc65)
    tt.store %70, %68 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc66)
    tt.return loc(#loc67)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":21:28)
#loc3 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":21:33)
#loc4 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":22:36)
#loc5 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":22:23)
#loc6 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":24:19)
#loc7 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":25:21)
#loc8 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":25:27)
#loc9 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":26:19)
#loc10 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":33:18)
#loc11 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":34:39)
#loc12 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":34:35)
#loc13 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":34:50)
#loc14 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":34:45)
#loc15 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":34:30)
#loc16 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":34:55)
#loc17 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":35:19)
#loc18 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":37:18)
#loc19 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":38:18)
#loc20 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":39:37)
#loc21 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":39:53)
#loc22 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":39:46)
#loc23 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":39:42)
#loc24 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":39:59)
#loc25 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":39:31)
#loc26 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":39:69)
#loc27 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":40:20)
#loc28 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":42:19)
#loc29 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":43:20)
#loc30 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":44:54)
#loc31 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":44:46)
#loc32 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":44:42)
#loc33 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":44:60)
#loc34 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":44:31)
#loc35 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":44:70)
#loc36 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":45:33)
#loc37 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":45:39)
#loc38 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":45:31)
#loc39 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":45:53)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc41 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":46:23)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc45 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":47:20)
#loc46 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":48:20)
#loc47 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":51:20)
#loc48 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":54:54)
#loc49 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":54:46)
#loc50 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":54:42)
#loc51 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":54:60)
#loc52 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":54:31)
#loc53 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":54:70)
#loc54 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":55:39)
#loc55 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":55:31)
#loc56 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":55:53)
#loc57 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":56:23)
#loc58 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":57:20)
#loc59 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":58:20)
#loc60 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":60:35)
#loc61 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":61:35)
#loc62 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":50:35)
#loc63 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":62:34)
#loc64 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":63:33)
#loc65 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":64:25)
#loc66 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":64:37)
#loc67 = loc("inductor_cache/j6/cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py":64:4)
#loc68 = loc(callsite(#loc40 at #loc41))
#loc69 = loc(callsite(#loc42 at #loc41))
#loc70 = loc(callsite(#loc43 at #loc41))
#loc71 = loc(callsite(#loc44 at #loc41))
#loc72 = loc(callsite(#loc40 at #loc57))
#loc73 = loc(callsite(#loc42 at #loc57))
#loc74 = loc(callsite(#loc43 at #loc57))
#loc75 = loc(callsite(#loc44 at #loc57))
#loc76 = loc(fused[#loc61, #loc62])
