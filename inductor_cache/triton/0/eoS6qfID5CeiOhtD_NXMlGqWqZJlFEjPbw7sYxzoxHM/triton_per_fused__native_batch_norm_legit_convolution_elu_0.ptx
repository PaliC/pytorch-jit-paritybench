//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_convolution_elu_0 // -- Begin function triton_per_fused__native_batch_norm_legit_convolution_elu_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_convolution_elu_0
.visible .entry triton_per_fused__native_batch_norm_legit_convolution_elu_0(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_elu_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_elu_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_elu_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_elu_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_elu_0_param_4,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_elu_0_param_5,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_elu_0_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<67>;
	.reg .f32 	%f<87>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd9, [triton_per_fused__native_batch_norm_legit_convolution_elu_0_param_0];
	ld.param.u64 	%rd10, [triton_per_fused__native_batch_norm_legit_convolution_elu_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:25:21
	setp.lt.s32 	%p1, %r1, 16;
	ld.param.u64 	%rd11, [triton_per_fused__native_batch_norm_legit_convolution_elu_0_param_2];
	ld.param.u64 	%rd12, [triton_per_fused__native_batch_norm_legit_convolution_elu_0_param_3];
	.loc	1 26 34                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:26:34
	mov.u32 	%r24, %tid.x;
	and.b32  	%r25, %r24, 15;
	ld.param.u64 	%rd13, [triton_per_fused__native_batch_norm_legit_convolution_elu_0_param_4];
	.loc	1 31 19                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:31:19
	shr.s32 	%r26, %r1, 31;
	shr.u32 	%r27, %r26, 30;
	add.s32 	%r28, %r1, %r27;
	and.b32  	%r29, %r28, -4;
	sub.s32 	%r30, %r1, %r29;
	.loc	1 32 42                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:32:42
	shl.b32 	%r31, %r1, 4;
	.loc	1 32 39                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:32:39
	or.b32  	%r32, %r31, %r25;
	.loc	1 32 34                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:32:34
	mul.wide.s32 	%rd14, %r32, 4;
	add.s64 	%rd1, %rd9, %rd14;
	mov.b32 	%r3, 0;
	.loc	1 32 47                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 33 30                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:33:30
	mul.wide.s32 	%rd15, %r30, 4;
	add.s64 	%rd3, %rd11, %rd15;
	.loc	1 33 35                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:33:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r7;
	.loc	1 34 18                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:34:18
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 38 33                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:38:33
	selp.f32 	%f7, %f5, 0f00000000, %p1;
	selp.f32 	%f8, %f6, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f7;
	shfl.sync.bfly.b32	%r34, %r33, 8, 31, -1;
	mov.b32 	%f9, %r34;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f7, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f10;
	shfl.sync.bfly.b32	%r36, %r35, 4, 31, -1;
	mov.b32 	%f11, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f12;
	shfl.sync.bfly.b32	%r38, %r37, 2, 31, -1;
	mov.b32 	%f13, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f14;
	shfl.sync.bfly.b32	%r40, %r39, 1, 31, -1;
	mov.b32 	%f15, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f8;
	shfl.sync.bfly.b32	%r42, %r41, 8, 31, -1;
	mov.b32 	%f17, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f8, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f18;
	shfl.sync.bfly.b32	%r44, %r43, 4, 31, -1;
	mov.b32 	%f19, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f20;
	shfl.sync.bfly.b32	%r46, %r45, 2, 31, -1;
	mov.b32 	%f21, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f22;
	shfl.sync.bfly.b32	%r48, %r47, 1, 31, -1;
	mov.b32 	%f23, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
$L__tmp2:
	.loc	1 42 19                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:42:19
	mov.b32 	%r9, %f16;
	mov.b32 	%r10, 1098907648;
	// begin inline asm
	div.full.f32 %r8, %r9, %r10;
	// end inline asm
	mov.b32 	%f25, %r8;
	mov.b32 	%r12, %f24;
	// begin inline asm
	div.full.f32 %r23, %r12, %r10;
	// end inline asm
	mov.b32 	%f26, %r23;
	.loc	1 43 19                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:43:19
	sub.f32 	%f27, %f5, %f25;
	sub.f32 	%f28, %f6, %f26;
	.loc	1 44 20                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:44:20
	mul.f32 	%f29, %f27, %f27;
	mul.f32 	%f30, %f28, %f28;
	.loc	1 46 35                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:46:35
	selp.f32 	%f31, %f29, 0f00000000, %p1;
	selp.f32 	%f32, %f30, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f31;
	shfl.sync.bfly.b32	%r50, %r49, 8, 31, -1;
	mov.b32 	%f33, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f31, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f34;
	shfl.sync.bfly.b32	%r52, %r51, 4, 31, -1;
	mov.b32 	%f35, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f36;
	shfl.sync.bfly.b32	%r54, %r53, 2, 31, -1;
	mov.b32 	%f37, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f38;
	shfl.sync.bfly.b32	%r56, %r55, 1, 31, -1;
	mov.b32 	%f39, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f32;
	shfl.sync.bfly.b32	%r58, %r57, 8, 31, -1;
	mov.b32 	%f41, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f32, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f42;
	shfl.sync.bfly.b32	%r60, %r59, 4, 31, -1;
	mov.b32 	%f43, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f44;
	shfl.sync.bfly.b32	%r62, %r61, 2, 31, -1;
	mov.b32 	%f45, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f46;
	shfl.sync.bfly.b32	%r64, %r63, 1, 31, -1;
	mov.b32 	%f47, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
$L__tmp4:
	.loc	1 49 20                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:49:20
	mov.b32 	%r15, %f40;
	// begin inline asm
	div.full.f32 %r14, %r15, %r10;
	// end inline asm
	mov.b32 	%f49, %r14;
	mov.b32 	%r18, %f48;
	// begin inline asm
	div.full.f32 %r17, %r18, %r10;
	// end inline asm
	mov.b32 	%f50, %r17;
	.loc	1 51 20                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:51:20
	add.f32 	%f51, %f49, 0f3727C5AC;
	add.f32 	%f52, %f50, 0f3727C5AC;
	.loc	1 52 28                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:52:28
	rsqrt.approx.ftz.f32 	%f53, %f51;
	rsqrt.approx.ftz.f32 	%f54, %f52;
	.loc	1 54 20                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:54:20
	mul.f32 	%f55, %f27, %f53;
	.loc	1 59 28                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:59:28
	mul.f32 	%f56, %f55, 0f3FB8AA3B;
	cvt.rni.f32.f32 	%f57, %f56;
	abs.ftz.f32 	%f58, %f55;
	setp.lt.f32 	%p11, %f58, 0f3ED1EB85;
	selp.f32 	%f59, 0f00000000, %f57, %p11;
	setp.eq.f32 	%p12, %f59, 0f43000000;
	selp.f32 	%f60, 0f42FE0000, %f59, %p12;
	ex2.approx.ftz.f32 	%f61, %f60;
	.loc	1 56 20                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:56:20
	setp.gt.f32 	%p13, %f55, 0f00000000;
	.loc	1 59 28                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:59:28
	neg.f32 	%f62, %f59;
	mov.f32 	%f63, 0f3F317200;
	fma.rn.ftz.f32 	%f64, %f62, %f63, %f55;
	mov.f32 	%f65, 0f35BFBE8E;
	fma.rn.ftz.f32 	%f66, %f62, %f65, %f64;
	mov.f32 	%f67, 0f3C095663;
	mov.f32 	%f68, 0f3AB5EBE6;
	fma.rn.ftz.f32 	%f69, %f68, %f66, %f67;
	mov.f32 	%f70, 0f3D2AABE3;
	fma.rn.ftz.f32 	%f71, %f69, %f66, %f70;
	mov.f32 	%f72, 0f3E2AA9F6;
	fma.rn.ftz.f32 	%f73, %f71, %f66, %f72;
	mov.f32 	%f74, 0f3EFFFFFE;
	fma.rn.ftz.f32 	%f75, %f73, %f66, %f74;
	mul.f32 	%f76, %f66, %f75;
	fma.rn.ftz.f32 	%f77, %f76, %f66, %f66;
	add.f32 	%f78, %f61, 0fBF800000;
	fma.rn.ftz.f32 	%f79, %f77, %f61, %f78;
	add.f32 	%f80, %f79, %f79;
	selp.f32 	%f81, %f80, %f79, %p12;
	setp.gt.f32 	%p14, %f60, 0f43000000;
	selp.f32 	%f82, 0f7F800000, %f81, %p14;
	setp.lt.f32 	%p15, %f60, 0fC1C80000;
	selp.f32 	%f83, 0fBF800000, %f82, %p15;
	setp.eq.f32 	%p16, %f55, 0f00000000;
	add.f32 	%f84, %f55, %f55;
	selp.f32 	%f85, %f84, %f83, %p16;
	.loc	1 61 35                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:61:35
	selp.f32 	%f86, %f55, %f85, %p13;
	.loc	1 62 47                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:62:47
	and.b32  	%r65, %r24, 48;
	setp.eq.s32 	%p17, %r65, 0;
	mov.b32 	%r20, %f5;
	and.pred  	%p7, %p17, %p1;
	// begin inline asm
	@%p7 st.global.b32 [ %rd1 + 0 ], { %r20 };
	// end inline asm
	.loc	1 63 4                          // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:63:4
	bar.sync 	0;
	.loc	1 64 28                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:64:28
	mul.wide.s32 	%rd16, %r1, 4;
	add.s64 	%rd6, %rd10, %rd16;
	.loc	1 64 40                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:64:40
	and.b32  	%r66, %r24, 63;
	setp.eq.s32 	%p18, %r66, 0;
	mov.b32 	%r21, %f54;
	and.pred  	%p8, %p18, %p1;
	// begin inline asm
	@%p8 st.global.b32 [ %rd6 + 0 ], { %r21 };
	// end inline asm
	.loc	1 65 25                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:65:25
	add.s64 	%rd7, %rd13, %rd14;
	.loc	1 65 45                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:65:45
	mov.b32 	%r22, %f86;
	// begin inline asm
	@%p7 st.global.b32 [ %rd7 + 0 ], { %r22 };
	// end inline asm
	.loc	1 66 25                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:66:25
	add.s64 	%rd8, %rd12, %rd16;
	.loc	1 66 37                         // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:66:37
	// begin inline asm
	@%p8 st.global.b32 [ %rd8 + 0 ], { %r23 };
	// end inline asm
	.loc	1 66 4                          // cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py:66:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bv/cbvw2hfzqo6r7d7z6fb6dtexwnmrktuoxistmjkflyka2ppie7hb.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 228                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdd DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 118
.b8 119
.b8 50
.b8 104
.b8 102
.b8 122
.b8 113
.b8 111
.b8 54
.b8 114
.b8 55
.b8 100
.b8 55
.b8 122
.b8 54
.b8 102
.b8 98
.b8 54
.b8 100
.b8 116
.b8 101
.b8 120
.b8 119
.b8 110
.b8 109
.b8 114
.b8 107
.b8 116
.b8 117
.b8 111
.b8 120
.b8 105
.b8 115
.b8 116
.b8 109
.b8 106
.b8 107
.b8 102
.b8 108
.b8 121
.b8 107
.b8 97
.b8 50
.b8 112
.b8 112
.b8 105
.b8 101
.b8 55
.b8 104
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 101
.b8 108
.b8 117
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xce:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
