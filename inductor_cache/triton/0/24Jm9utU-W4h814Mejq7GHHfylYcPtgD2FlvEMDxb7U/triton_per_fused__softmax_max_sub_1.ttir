#loc = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":34:37)
#loc24 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":38:37)
#loc30 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":43:26)
#loc34 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":45:70)
#loc57 = loc(callsite(#loc1 at #loc16))
#loc63 = loc(callsite(#loc1 at #loc24))
#loc65 = loc(callsite(#loc1 at #loc30))
#loc68 = loc(callsite(#loc1 at #loc34))
module {
  tt.func public @triton_per_fused__softmax_max_sub_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":19:0)) attributes {noinline = false} {
    %true = arith.constant true loc(#loc1)
    %cst = arith.constant dense<0xFF800000> : tensor<8x32xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<8x32xf32> loc(#loc1)
    %cst_1 = arith.constant dense<32> : tensor<8x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<128> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_2 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc9)
    %9 = arith.muli %5, %cst_1 : tensor<8x1xi32> loc(#loc10)
    %10 = tt.broadcast %8 : tensor<1x32xi32> -> tensor<8x32xi32> loc(#loc11)
    %11 = tt.broadcast %9 : tensor<8x1xi32> -> tensor<8x32xi32> loc(#loc11)
    %12 = arith.addi %10, %11 : tensor<8x32xi32> loc(#loc11)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x32x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %13, %12 : tensor<8x32x!tt.ptr<f32>>, tensor<8x32xi32> loc(#loc12)
    %15 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x32xi1> loc(#loc13)
    %16 = tt.load %14, %15, %cst_0 : tensor<8x32x!tt.ptr<f32>> loc(#loc13)
    %17 = arith.select %15, %16, %cst : tensor<8x32xi1>, tensor<8x32xf32> loc(#loc14)
    %18 = "tt.reduce"(%17) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc16)), %arg6: f32 loc(callsite(#loc1 at #loc16))):
      %40 = arith.cmpf ogt, %arg5, %arg6 : f32 loc(#loc83)
      %41 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc84)
      %42 = arith.ori %40, %41 : i1 loc(#loc85)
      %43 = arith.select %42, %arg5, %arg6 : f32 loc(#loc86)
      tt.reduce.return %43 : f32 loc(#loc56)
    }) : (tensor<8x32xf32>) -> tensor<8xf32> loc(#loc56)
    %19 = tt.expand_dims %18 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc21)
    %20 = tt.broadcast %19 : tensor<8x1xf32> -> tensor<8x32xf32> loc(#loc22)
    %21 = arith.subf %20, %16 : tensor<8x32xf32> loc(#loc22)
    %22 = arith.select %15, %21, %cst : tensor<8x32xi1>, tensor<8x32xf32> loc(#loc23)
    %23 = "tt.reduce"(%22) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc24)), %arg6: f32 loc(callsite(#loc1 at #loc24))):
      %40 = arith.cmpf ogt, %arg5, %arg6 : f32 loc(#loc87)
      %41 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc88)
      %42 = arith.ori %40, %41 : i1 loc(#loc89)
      %43 = arith.select %42, %arg5, %arg6 : f32 loc(#loc90)
      tt.reduce.return %43 : f32 loc(#loc62)
    }) : (tensor<8x32xf32>) -> tensor<8xf32> loc(#loc62)
    %24 = tt.expand_dims %23 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc25)
    %25 = tt.broadcast %24 : tensor<8x1xf32> -> tensor<8x32xf32> loc(#loc26)
    %26 = arith.subf %21, %25 : tensor<8x32xf32> loc(#loc26)
    %27 = math.exp %26 : tensor<8x32xf32> loc(#loc27)
    %28 = arith.select %15, %27, %cst_0 : tensor<8x32xi1>, tensor<8x32xf32> loc(#loc28)
    %29 = "tt.reduce"(%28) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc30)), %arg6: f32 loc(callsite(#loc1 at #loc30))):
      %40 = arith.addf %arg5, %arg6 : f32 loc(#loc91)
      tt.reduce.return %40 : f32 loc(#loc64)
    }) : (tensor<8x32xf32>) -> tensor<8xf32> loc(#loc64)
    %30 = tt.expand_dims %29 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc32)
    %31:2 = "tt.reduce"(%17, %10) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc34)), %arg6: i32 loc(callsite(#loc1 at #loc34)), %arg7: f32 loc(callsite(#loc1 at #loc34)), %arg8: i32 loc(callsite(#loc1 at #loc34))):
      %40 = arith.cmpf ogt, %arg5, %arg7 : f32 loc(#loc92)
      %41 = arith.cmpf oeq, %arg5, %arg7 : f32 loc(#loc93)
      %42 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc94)
      %43 = arith.cmpf une, %arg7, %arg7 : f32 loc(#loc95)
      %44 = arith.xori %43, %true : i1 loc(#loc96)
      %45 = arith.andi %42, %44 : i1 loc(#loc97)
      %46 = arith.ori %40, %45 : i1 loc(#loc98)
      %47 = arith.andi %42, %43 : i1 loc(#loc99)
      %48 = arith.ori %41, %47 : i1 loc(#loc100)
      %49 = arith.cmpi slt, %arg6, %arg8 : i32 loc(#loc101)
      %50 = arith.andi %48, %49 : i1 loc(#loc102)
      %51 = arith.ori %46, %50 : i1 loc(#loc103)
      %52 = arith.select %51, %arg5, %arg7 : f32 loc(#loc104)
      %53 = arith.select %51, %arg6, %arg8 : i32 loc(#loc105)
      tt.reduce.return %52, %53 : f32, i32 loc(#loc67)
    }) : (tensor<8x32xf32>, tensor<8x32xi32>) -> (tensor<8xf32>, tensor<8xi32>) loc(#loc67)
    %32 = tt.expand_dims %31#1 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc49)
    %33 = tt.broadcast %30 : tensor<8x1xf32> -> tensor<8x32xf32> loc(#loc50)
    %34 = arith.divf %27, %33 : tensor<8x32xf32> loc(#loc50)
    %35 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x32x!tt.ptr<f32>> loc(#loc51)
    %36 = tt.addptr %35, %12 : tensor<8x32x!tt.ptr<f32>>, tensor<8x32xi32> loc(#loc51)
    tt.store %36, %34, %15 : tensor<8x32x!tt.ptr<f32>> loc(#loc52)
    %37 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<8x1x!tt.ptr<i64>> loc(#loc53)
    %38 = tt.addptr %37, %5 : tensor<8x1x!tt.ptr<i64>>, tensor<8x1xi32> loc(#loc53)
    %39 = arith.extsi %32 : tensor<8x1xi32> to tensor<8x1xi64> loc(#loc54)
    tt.store %38, %39, %6 : tensor<8x1x!tt.ptr<i64>> loc(#loc54)
    tt.return loc(#loc55)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":23:28)
#loc3 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":23:33)
#loc4 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":24:36)
#loc5 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":24:44)
#loc6 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":24:23)
#loc7 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":25:21)
#loc8 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":26:26)
#loc9 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":26:34)
#loc10 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":31:38)
#loc11 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":31:35)
#loc12 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":31:30)
#loc13 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":31:43)
#loc14 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":33:33)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc21 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":34:40)
#loc22 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":35:18)
#loc23 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":37:33)
#loc25 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":38:40)
#loc26 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":39:19)
#loc27 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":40:24)
#loc28 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":42:35)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc32 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":43:29)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":173:42)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":152:21)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":153:23)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":155:29)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":156:29)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:32)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:28)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:16)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":159:29)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":159:17)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:31)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:21)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:12)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":163:35)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":163:69)
#loc49 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":46:22)
#loc50 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":47:20)
#loc51 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":48:25)
#loc52 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":48:45)
#loc53 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":49:25)
#loc54 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":49:37)
#loc55 = loc("inductor_cache/fy/cfyu2k3ngx7ywnedt7sij4hzrnimnr2cdj5azo6a6upelbud6u2k.py":49:4)
#loc56 = loc(callsite(#loc15 at #loc16))
#loc58 = loc(callsite(#loc17 at #loc15))
#loc59 = loc(callsite(#loc18 at #loc15))
#loc60 = loc(callsite(#loc19 at #loc15))
#loc61 = loc(callsite(#loc20 at #loc15))
#loc62 = loc(callsite(#loc15 at #loc24))
#loc64 = loc(callsite(#loc29 at #loc30))
#loc66 = loc(callsite(#loc31 at #loc29))
#loc67 = loc(callsite(#loc33 at #loc34))
#loc69 = loc(callsite(#loc35 at #loc33))
#loc70 = loc(callsite(#loc36 at #loc33))
#loc71 = loc(callsite(#loc37 at #loc33))
#loc72 = loc(callsite(#loc38 at #loc33))
#loc73 = loc(callsite(#loc39 at #loc33))
#loc74 = loc(callsite(#loc40 at #loc33))
#loc75 = loc(callsite(#loc41 at #loc33))
#loc76 = loc(callsite(#loc42 at #loc33))
#loc77 = loc(callsite(#loc43 at #loc33))
#loc78 = loc(callsite(#loc44 at #loc33))
#loc79 = loc(callsite(#loc45 at #loc33))
#loc80 = loc(callsite(#loc46 at #loc33))
#loc81 = loc(callsite(#loc47 at #loc33))
#loc82 = loc(callsite(#loc48 at #loc33))
#loc83 = loc(callsite(#loc58 at #loc16))
#loc84 = loc(callsite(#loc59 at #loc16))
#loc85 = loc(callsite(#loc60 at #loc16))
#loc86 = loc(callsite(#loc61 at #loc16))
#loc87 = loc(callsite(#loc58 at #loc24))
#loc88 = loc(callsite(#loc59 at #loc24))
#loc89 = loc(callsite(#loc60 at #loc24))
#loc90 = loc(callsite(#loc61 at #loc24))
#loc91 = loc(callsite(#loc66 at #loc30))
#loc92 = loc(callsite(#loc69 at #loc34))
#loc93 = loc(callsite(#loc70 at #loc34))
#loc94 = loc(callsite(#loc71 at #loc34))
#loc95 = loc(callsite(#loc72 at #loc34))
#loc96 = loc(callsite(#loc73 at #loc34))
#loc97 = loc(callsite(#loc74 at #loc34))
#loc98 = loc(callsite(#loc75 at #loc34))
#loc99 = loc(callsite(#loc76 at #loc34))
#loc100 = loc(callsite(#loc77 at #loc34))
#loc101 = loc(callsite(#loc78 at #loc34))
#loc102 = loc(callsite(#loc79 at #loc34))
#loc103 = loc(callsite(#loc80 at #loc34))
#loc104 = loc(callsite(#loc81 at #loc34))
#loc105 = loc(callsite(#loc82 at #loc34))
