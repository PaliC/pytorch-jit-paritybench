#loc = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":19:0)
module {
  tt.func public @triton_poi_fused_convolution_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<16> : tensor<64xi32> loc(#loc1)
    %cst_0 = arith.constant dense<64> : tensor<64xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_0 : tensor<64xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst : tensor<64xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc8)
    %9 = tt.load %8, %5 : tensor<64x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.addptr %10, %6 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc10)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %13, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc12)
    %15 = tt.load %14, %5 : tensor<64x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc14)
    %17 = tt.addptr %16, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc14)
    %18 = tt.load %17, %5 : tensor<64x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc16)
    %20 = tt.addptr %19, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc16)
    %21 = tt.load %20, %5 : tensor<64x!tt.ptr<f32>> loc(#loc17)
    %22 = arith.addf %9, %12 : tensor<64xf32> loc(#loc18)
    %23 = arith.addf %15, %12 : tensor<64xf32> loc(#loc19)
    %24 = arith.addf %18, %12 : tensor<64xf32> loc(#loc20)
    %25 = arith.addf %21, %12 : tensor<64xf32> loc(#loc21)
    tt.store %8, %22, %5 : tensor<64x!tt.ptr<f32>> loc(#loc22)
    tt.store %14, %23, %5 : tensor<64x!tt.ptr<f32>> loc(#loc23)
    tt.store %17, %24, %5 : tensor<64x!tt.ptr<f32>> loc(#loc24)
    tt.store %20, %25, %5 : tensor<64x!tt.ptr<f32>> loc(#loc25)
    tt.return loc(#loc26)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":21:28)
#loc3 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":21:33)
#loc4 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":22:36)
#loc5 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":22:23)
#loc6 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":23:21)
#loc7 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":25:19)
#loc8 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":26:34)
#loc9 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":26:39)
#loc10 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":27:30)
#loc11 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":27:35)
#loc12 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":28:34)
#loc13 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":28:39)
#loc14 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":29:34)
#loc15 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":29:39)
#loc16 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":30:34)
#loc17 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":30:39)
#loc18 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":31:18)
#loc19 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":32:18)
#loc20 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":33:18)
#loc21 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":34:18)
#loc22 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":35:39)
#loc23 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":36:39)
#loc24 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":37:39)
#loc25 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":38:39)
#loc26 = loc("inductor_cache/6e/c6eir3oc3m3qyztlvmdq7nefhmhxo5mdtryztzccuwlbgv6bz5be.py":38:4)
