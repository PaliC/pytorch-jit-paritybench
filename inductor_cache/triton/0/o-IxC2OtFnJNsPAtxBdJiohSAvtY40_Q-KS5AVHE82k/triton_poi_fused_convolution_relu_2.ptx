//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_relu_2 // -- Begin function triton_poi_fused_convolution_relu_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_relu_2
.visible .entry triton_poi_fused_convolution_relu_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_2_param_2,
	.param .u32 triton_poi_fused_convolution_relu_2_param_3,
	.param .u32 triton_poi_fused_convolution_relu_2_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b32 	%r<98>;
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_convolution_relu_2_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_convolution_relu_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:22:33
	shl.b32 	%r25, %r1, 8;
	ld.param.u64 	%rd9, [triton_poi_fused_convolution_relu_2_param_2];
	.loc	1 23 44                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:23:44
	mov.u32 	%r26, %tid.x;
	and.b32  	%r27, %r26, 1;
	shl.b32 	%r28, %r26, 2;
	and.b32  	%r29, %r28, 252;
	shl.b32 	%r30, %r26, 1;
	and.b32  	%r31, %r30, 254;
	bfe.u32 	%r32, %r26, 1, 6;
	or.b32  	%r33, %r32, 64;
	or.b32  	%r34, %r32, 128;
	or.b32  	%r35, %r32, 192;
	.loc	1 23 23                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:23:23
	or.b32  	%r36, %r25, %r29;
	or.b32  	%r37, %r25, %r31;
	or.b32  	%r38, %r25, %r32;
	or.b32  	%r39, %r25, %r33;
	or.b32  	%r40, %r25, %r34;
	or.b32  	%r41, %r25, %r35;
	.loc	1 24 21                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:24:21
	setp.lt.s32 	%p13, %r36, 192;
	setp.lt.s32 	%p6, %r37, 192;
	setp.lt.s32 	%p14, %r38, 192;
	setp.lt.s32 	%p15, %r39, 192;
	setp.lt.s32 	%p16, %r40, 192;
	setp.lt.s32 	%p17, %r41, 192;
	.loc	1 25 28                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:25:33
	shl.b32 	%r42, %r2, 1;
	.loc	1 26 44                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:26:44
	bfe.u32 	%r43, %r26, 6, 1;
	.loc	1 26 23                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:26:23
	or.b32  	%r44, %r42, %r43;
	or.b32  	%r45, %r42, %r27;
	.loc	1 27 21                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:27:21
	setp.lt.s32 	%p18, %r44, 225;
	setp.lt.s32 	%p19, %r45, 225;
	.loc	1 30 19                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:30:19
	mul.hi.s32 	%r47, %r36, 715827883;
	shr.u32 	%r48, %r47, 31;
	shr.s32 	%r49, %r47, 3;
	add.s32 	%r50, %r49, %r48;
	.loc	1 29 19                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:29:19
	mul.lo.s32 	%r51, %r50, 48;
	sub.s32 	%r52, %r36, %r51;
	mul.hi.s32 	%r53, %r37, 715827883;
	shr.u32 	%r54, %r53, 31;
	shr.u32 	%r55, %r53, 3;
	add.s32 	%r56, %r55, %r54;
	mul.lo.s32 	%r57, %r56, 48;
	sub.s32 	%r58, %r37, %r57;
	.loc	1 32 35                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:32:35
	mad.lo.s32 	%r59, %r44, 48, %r52;
	.loc	1 32 43                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:32:43
	mad.lo.s32 	%r60, %r50, 10800, %r59;
	.loc	1 32 30                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:32:30
	mul.wide.s32 	%rd10, %r60, 4;
	add.s64 	%rd1, %rd7, %rd10;
	.loc	1 32 62                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:32:62
	and.pred  	%p1, %p13, %p18;
	and.pred  	%p9, %p14, %p19;
	and.pred  	%p10, %p15, %p19;
	and.pred  	%p11, %p16, %p19;
	and.pred  	%p12, %p17, %p19;
	.loc	1 32 54                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:32:54
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r8, %r10, %r12, %r14 }, [ %rd1 + 0 ];
	// end inline asm
	shl.b32 	%r61, %r26, 3;
	and.b32  	%r62, %r61, 504;
	or.b32  	%r63, %r62, %r43;
	and.b32  	%r64, %r26, 127;
	mov.u32 	%r65, global_smem;
	shl.b32 	%r66, %r63, 2;
	shl.b32 	%r67, %r62, 1;
	add.s32 	%r68, %r65, %r67;
	add.s32 	%r7, %r68, %r66;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	add.s32 	%r9, %r7, 12;
	// begin inline asm
	@%p2 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	add.s32 	%r11, %r7, 24;
	// begin inline asm
	@%p2 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	add.s32 	%r13, %r7, 36;
	// begin inline asm
	@%p2 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r69, %r30, 252;
	add.s32 	%r70, %r65, %r69;
	shl.b32 	%r71, %r64, 2;
	add.s32 	%r72, %r70, %r71;
	ld.shared.f32 	%f1, [%r72];
	or.b32  	%r73, %r30, 256;
	and.b32  	%r74, %r73, 508;
	add.s32 	%r75, %r65, %r74;
	add.s32 	%r76, %r75, %r71;
	ld.shared.f32 	%f2, [%r76+512];
	or.b32  	%r77, %r30, 512;
	and.b32  	%r78, %r77, 764;
	add.s32 	%r79, %r65, %r78;
	add.s32 	%r80, %r79, %r71;
	ld.shared.f32 	%f3, [%r80+1024];
	or.b32  	%r81, %r30, 768;
	and.b32  	%r82, %r81, 1020;
	add.s32 	%r83, %r65, %r82;
	add.s32 	%r84, %r83, %r71;
	ld.shared.f32 	%f4, [%r84+1536];
	.loc	1 33 30                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:33:30
	mul.wide.s32 	%rd11, %r58, 4;
	add.s64 	%rd2, %rd8, %rd11;
	.loc	1 33 35                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:33:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r20, 0x0;
	@%p6 ld.global.L1::evict_last.v2.b32 { %r18, %r20 }, [ %rd2 + 0 ];
	// end inline asm
$L__tmp1:
	.loc	2 121 29                        // triton_helpers.py:121:29
	bar.sync 	0;
	shl.b32 	%r85, %r31, 3;
	add.s32 	%r17, %r65, %r85;
	// begin inline asm
	@%p2 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r17, 8;
	// begin inline asm
	@%p2 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r86, %r32, 3;
	add.s32 	%r87, %r65, %r86;
	ld.shared.f32 	%f5, [%r87];
	shl.b32 	%r88, %r33, 3;
	add.s32 	%r89, %r65, %r88;
	ld.shared.f32 	%f6, [%r89];
	shl.b32 	%r90, %r34, 3;
	add.s32 	%r91, %r65, %r90;
	ld.shared.f32 	%f7, [%r91];
	shl.b32 	%r92, %r35, 3;
	add.s32 	%r93, %r65, %r92;
	ld.shared.f32 	%f8, [%r93];
$L__tmp2:
	.loc	1 34 18                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:34:18
	add.f32 	%f9, %f1, %f5;
	add.f32 	%f10, %f2, %f6;
	add.f32 	%f11, %f3, %f7;
	add.f32 	%f12, %f4, %f8;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p20, %f9, 0f00000000;
	setp.lt.f32 	%p21, %f10, 0f00000000;
	setp.lt.f32 	%p22, %f11, 0f00000000;
	setp.lt.f32 	%p23, %f12, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f13, 0f00000000, %f9, %p20;
	selp.f32 	%f14, 0f00000000, %f10, %p21;
	selp.f32 	%f15, 0f00000000, %f11, %p22;
	selp.f32 	%f16, 0f00000000, %f12, %p23;
$L__tmp4:
	.loc	1 37 30                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:37:30
	mad.lo.s32 	%r94, %r38, 225, %r45;
	mad.lo.s32 	%r95, %r39, 225, %r45;
	mad.lo.s32 	%r96, %r40, 225, %r45;
	mad.lo.s32 	%r97, %r41, 225, %r45;
	.loc	1 37 25                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:37:25
	mul.wide.s32 	%rd12, %r94, 4;
	add.s64 	%rd3, %rd9, %rd12;
	mul.wide.s32 	%rd13, %r95, 4;
	add.s64 	%rd4, %rd9, %rd13;
	mul.wide.s32 	%rd14, %r96, 4;
	add.s64 	%rd5, %rd9, %rd14;
	mul.wide.s32 	%rd15, %r97, 4;
	add.s64 	%rd6, %rd9, %rd15;
	.loc	1 37 45                         // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:37:45
	mov.b32 	%r21, %f13;
	// begin inline asm
	@%p9 st.global.b32 [ %rd3 + 0 ], { %r21 };
	// end inline asm
	mov.b32 	%r22, %f14;
	// begin inline asm
	@%p10 st.global.b32 [ %rd4 + 0 ], { %r22 };
	// end inline asm
	mov.b32 	%r23, %f15;
	// begin inline asm
	@%p11 st.global.b32 [ %rd5 + 0 ], { %r23 };
	// end inline asm
	mov.b32 	%r24, %f16;
	// begin inline asm
	@%p12 st.global.b32 [ %rd6 + 0 ], { %r24 };
	// end inline asm
	.loc	1 37 4                          // cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py:37:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/dv/cdve4laxr3v7d4mjbcgmqnzchofdsdxmikgvqhcb5reu4ojxzbp3.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 180                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xad DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 118
.b8 101
.b8 52
.b8 108
.b8 97
.b8 120
.b8 114
.b8 51
.b8 118
.b8 55
.b8 100
.b8 52
.b8 109
.b8 106
.b8 98
.b8 99
.b8 103
.b8 109
.b8 113
.b8 110
.b8 122
.b8 99
.b8 104
.b8 111
.b8 102
.b8 100
.b8 115
.b8 100
.b8 120
.b8 109
.b8 105
.b8 107
.b8 103
.b8 118
.b8 113
.b8 104
.b8 99
.b8 98
.b8 53
.b8 114
.b8 101
.b8 117
.b8 52
.b8 111
.b8 106
.b8 120
.b8 122
.b8 98
.b8 112
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
