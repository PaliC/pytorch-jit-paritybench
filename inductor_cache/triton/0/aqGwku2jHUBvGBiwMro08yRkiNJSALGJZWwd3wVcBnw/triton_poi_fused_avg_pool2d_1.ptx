//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_avg_pool2d_1 // -- Begin function triton_poi_fused_avg_pool2d_1
                                        // @triton_poi_fused_avg_pool2d_1
.visible .entry triton_poi_fused_avg_pool2d_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_avg_pool2d_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_avg_pool2d_1_param_1,
	.param .u32 triton_poi_fused_avg_pool2d_1_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b32 	%r<72>;
	.reg .f32 	%f<19>;
	.reg .b64 	%rd<22>;
	.loc	1 19 0                          // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused_avg_pool2d_1_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused_avg_pool2d_1_param_1];
$L__tmp0:
	.loc	1 21 28                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:21:33
	shl.b32 	%r24, %r1, 7;
	.loc	1 22 36                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:22:36
	mov.u32 	%r25, %tid.x;
	and.b32  	%r26, %r25, 127;
	.loc	1 22 23                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:22:23
	or.b32  	%r27, %r24, %r26;
	.loc	1 24 21                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:24:21
	bfe.s32 	%r28, %r1, 24, 1;
	shr.u32 	%r29, %r28, 28;
	add.s32 	%r30, %r27, %r29;
	shr.s32 	%r31, %r30, 4;
	.loc	1 27 19                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:27:19
	shr.s32 	%r33, %r27, 31;
	shr.u32 	%r34, %r33, 19;
	add.s32 	%r35, %r27, %r34;
	.loc	1 28 19                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:28:19
	and.b32  	%r36, %r35, -8192;
	sub.s32 	%r37, %r27, %r36;
	.loc	1 40 49                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:40:49
	shl.b32 	%r38, %r31, 6;
	.loc	1 25 19                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:25:19
	and.b32  	%r39, %r30, -16;
	sub.s32 	%r40, %r27, %r39;
	shr.u32 	%r41, %r31, 28;
	add.s32 	%r42, %r31, %r41;
	and.b32  	%r43, %r42, -16;
	sub.s32 	%r44, %r31, %r43;
	.loc	1 31 19                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:31:19
	setp.gt.s32 	%p20, %r44, 0;
	.loc	1 35 20                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:35:20
	shl.b32 	%r45, %r44, 1;
	shl.b32 	%r46, %r40, 1;
	.loc	1 36 19                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:36:19
	setp.gt.s32 	%p21, %r40, 0;
	.loc	1 39 19                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:39:19
	and.pred  	%p1, %p21, %p20;
	.loc	1 40 39                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:40:39
	add.s32 	%r47, %r38, %r46;
	.loc	1 40 46                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:40:46
	add.s32 	%r48, %r47, -33;
	.loc	1 40 31                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:40:31
	mul.wide.s32 	%rd13, %r48, 4;
	add.s64 	%rd1, %rd11, %rd13;
	mov.b32 	%r3, 0;
	.loc	1 40 54                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:40:54
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 42 21                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:42:21
	setp.gt.s32 	%p22, %r40, -1;
	.loc	1 45 19                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:45:19
	and.pred  	%p3, %p22, %p20;
	.loc	1 46 46                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:46:46
	add.s32 	%r49, %r47, -32;
	.loc	1 46 31                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:46:31
	mul.wide.s32 	%rd14, %r49, 4;
	add.s64 	%rd2, %rd11, %rd14;
	.loc	1 46 54                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:46:54
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 47 20                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:47:20
	add.f32 	%f3, %f1, %f2;
	.loc	1 53 46                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:53:46
	add.s32 	%r50, %r47, -31;
	.loc	1 53 31                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:53:31
	mul.wide.s32 	%rd15, %r50, 4;
	add.s64 	%rd3, %rd11, %rd15;
	.loc	1 53 54                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:53:54
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p3 mov.u32 %r6, %r3;
	// end inline asm
	mov.b32 	%f4, %r6;
	.loc	1 54 20                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:54:20
	add.f32 	%f5, %f3, %f4;
	.loc	1 56 21                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:56:21
	setp.gt.s32 	%p23, %r44, -1;
	.loc	1 59 20                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:59:20
	and.pred  	%p7, %p21, %p23;
	.loc	1 60 45                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:60:45
	add.s32 	%r51, %r47, -1;
	.loc	1 60 31                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:60:31
	mul.wide.s32 	%rd16, %r51, 4;
	add.s64 	%rd4, %rd11, %rd16;
	.loc	1 60 53                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:60:53
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	mov.b32 	%f6, %r8;
	.loc	1 61 20                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:61:20
	add.f32 	%f7, %f5, %f6;
	.loc	1 62 20                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:62:20
	or.b32  	%r52, %r44, %r40;
	setp.gt.s32 	%p9, %r52, -1;
	.loc	1 63 31                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:63:31
	mul.wide.s32 	%rd17, %r47, 4;
	add.s64 	%rd5, %rd11, %rd17;
	.loc	1 63 46                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:63:46
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p9 mov.u32 %r10, %r3;
	// end inline asm
	mov.b32 	%f8, %r10;
	.loc	1 64 20                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:64:20
	add.f32 	%f9, %f7, %f8;
	.loc	1 66 31                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:66:31
	add.s64 	%rd6, %rd5, 4;
	.loc	1 66 50                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:66:50
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r12 }, [ %rd6 + 0 ];
	@!%p9 mov.u32 %r12, %r3;
	// end inline asm
	mov.b32 	%f10, %r12;
	.loc	1 67 20                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:67:20
	add.f32 	%f11, %f9, %f10;
	.loc	1 73 43                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:73:43
	add.s32 	%r53, %r47, 31;
	.loc	1 73 31                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:73:31
	mul.wide.s32 	%rd18, %r53, 4;
	add.s64 	%rd7, %rd11, %rd18;
	.loc	1 73 51                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:73:51
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	@!%p7 mov.u32 %r14, %r3;
	// end inline asm
	mov.b32 	%f12, %r14;
	.loc	1 74 20                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:74:20
	add.f32 	%f13, %f11, %f12;
	.loc	1 76 43                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:76:43
	add.s32 	%r54, %r47, 32;
	.loc	1 76 31                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:76:31
	mul.wide.s32 	%rd19, %r54, 4;
	add.s64 	%rd8, %rd11, %rd19;
	.loc	1 76 51                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:76:51
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r16 }, [ %rd8 + 0 ];
	@!%p9 mov.u32 %r16, %r3;
	// end inline asm
	mov.b32 	%f14, %r16;
	.loc	1 77 20                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:77:20
	add.f32 	%f15, %f13, %f14;
	.loc	1 79 43                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:79:43
	add.s32 	%r55, %r47, 33;
	.loc	1 79 31                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:79:31
	mul.wide.s32 	%rd20, %r55, 4;
	add.s64 	%rd9, %rd11, %rd20;
	.loc	1 79 51                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:79:51
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r18 }, [ %rd9 + 0 ];
	@!%p9 mov.u32 %r18, %r3;
	// end inline asm
	mov.b32 	%f16, %r18;
	.loc	1 80 20                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:80:20
	add.f32 	%f17, %f15, %f16;
	.loc	1 81 34                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:81:34
	neg.s32 	%r56, %r45;
	.loc	1 81 62                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:81:62
	add.s32 	%r57, %r45, 2;
	add.s32 	%r58, %r46, 2;
	.loc	1 81 328                        // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:81:328
	shl.b32 	%r59, %r40, 2;
	.loc	1 81 40                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:81:40
	add.s32 	%r60, %r46, %r45;
	mov.b32 	%r61, 1;
	sub.s32 	%r62, %r61, %r60;
	.loc	1 81 173                        // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:81:173
	mad.lo.s32 	%r63, %r59, %r44, %r62;
	.loc	1 81 250                        // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:81:250
	add.s32 	%r64, %r63, %r58;
	.loc	1 81 326                        // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:81:326
	mad.lo.s32 	%r65, %r56, %r58, %r64;
	.loc	1 81 337                        // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:81:337
	add.s32 	%r66, %r65, %r57;
	mov.b32 	%r67, 2;
	.loc	1 81 404                        // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:81:404
	mad.lo.s32 	%r68, %r67, %r57, %r66;
	.loc	1 82 20                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:82:20
	cvt.rn.f32.s32 	%f18, %r68;
	mov.b32 	%r21, %f17;
	mov.b32 	%r22, %f18;
	// begin inline asm
	div.full.f32 %r23, %r21, %r22;
	// end inline asm
	.loc	1 83 36                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:83:36
	shl.b32 	%r69, %r35, 1;
	and.b32  	%r70, %r69, -16384;
	.loc	1 83 30                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:83:30
	add.s32 	%r71, %r70, %r37;
	.loc	1 83 25                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:83:25
	mul.wide.s32 	%rd21, %r71, 4;
	add.s64 	%rd10, %rd12, %rd21;
	mov.pred 	%p19, -1;
	.loc	1 83 48                         // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:83:48
	// begin inline asm
	@%p19 st.global.b32 [ %rd10 + 0 ], { %r23 };
	// end inline asm
	.loc	1 83 4                          // ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py:83:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/kl/ckly6nizbn22o7hp4npe76ldjsmfji7crk56wanhlpgnp6mualhm.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 108
.b8 121
.b8 54
.b8 110
.b8 105
.b8 122
.b8 98
.b8 110
.b8 50
.b8 50
.b8 111
.b8 55
.b8 104
.b8 112
.b8 52
.b8 110
.b8 112
.b8 101
.b8 55
.b8 54
.b8 108
.b8 100
.b8 106
.b8 115
.b8 109
.b8 102
.b8 106
.b8 105
.b8 55
.b8 99
.b8 114
.b8 107
.b8 53
.b8 54
.b8 119
.b8 97
.b8 110
.b8 104
.b8 108
.b8 112
.b8 103
.b8 110
.b8 112
.b8 54
.b8 109
.b8 117
.b8 97
.b8 108
.b8 104
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 108
.b8 0
	}
	.section	.debug_macinfo	{	}
