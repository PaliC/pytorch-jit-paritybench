; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %7 = shl i32 %6, 6, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 3, !dbg !12
  %10 = and i32 %8, 63, !dbg !12
  %11 = lshr i32 %8, 2, !dbg !12
  %12 = and i32 %11, 63, !dbg !12
  %13 = or disjoint i32 %7, %10, !dbg !13
  %14 = or disjoint i32 %7, %12, !dbg !13
  %15 = lshr i32 %8, 6, !dbg !14
  %16 = and i32 %15, 3, !dbg !14
  %.frozen = freeze i32 %13, !dbg !15
  %17 = sdiv i32 %.frozen, 4096, !dbg !15
  %18 = mul i32 %17, 4096, !dbg !16
  %.decomposed = sub i32 %.frozen, %18, !dbg !16
  %19 = sdiv i32 %14, 4096, !dbg !15
  %20 = shl i32 %17, 20, !dbg !17
  %21 = shl nsw i32 %19, 8, !dbg !18
  %22 = add i32 %20, %.decomposed
  %23 = shl i32 %8, 2
  %24 = and i32 %23, 252
  %25 = or disjoint i32 %24, %16
  %26 = and i32 %8, 255
  %27 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %24
  %28 = getelementptr float, ptr addrspace(3) %27, i32 %25
  %29 = lshr i32 %26, 2
  %30 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %29
  %31 = getelementptr inbounds float, ptr addrspace(3) %30, i32 %26
  %32 = or disjoint i32 %21, %9
  %33 = sext i32 %32 to i64, !dbg !19
  %invariant.gep = getelementptr float, ptr addrspace(1) %1, i64 %33, !dbg !19
  br label %34, !dbg !19

34:                                               ; preds = %5, %34
  %indvars.iv = phi i64 [ 0, %5 ], [ %indvars.iv.next, %34 ]
  %35 = phi float [ 0.000000e+00, %5 ], [ %49, %34 ]
  %36 = trunc i64 %indvars.iv to i32, !dbg !20
  %.tr = or disjoint i32 %16, %36, !dbg !20
  %37 = shl i32 %.tr, 12, !dbg !20
  %38 = add i32 %22, %37, !dbg !20
  %39 = sext i32 %38 to i64, !dbg !21
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !21
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_first.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 true, i32 0, i1 true) #3, !dbg !22
  tail call void @llvm.nvvm.barrier0(), !dbg !22
  %42 = insertelement <1 x i32> poison, i32 %41, i64 0, !dbg !22
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %28, <1 x i32> %42, i1 true) #3, !dbg !22
  tail call void @llvm.nvvm.barrier0(), !dbg !22
  %43 = load float, ptr addrspace(3) %31, align 4, !dbg !22
  %gep = getelementptr float, ptr addrspace(1) %invariant.gep, i64 %indvars.iv, !dbg !23
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %gep, i1 true, i32 0, i1 true) #3, !dbg !24
  %45 = bitcast i32 %44 to float, !dbg !24
  %46 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %45, float 4.096000e+03) #3, !dbg !25
  %47 = fsub float %43, %46, !dbg !26
  %48 = fmul float %47, %47, !dbg !27
  %49 = fadd float %35, %48, !dbg !28
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 4, !dbg !19
  %50 = icmp samesign ult i64 %indvars.iv, 252, !dbg !19
  br i1 %50, label %34, label %51, !dbg !19

51:                                               ; preds = %34
  %52 = bitcast float %49 to i32, !dbg !29
  %53 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %52, i32 2, i32 31), !dbg !29
  %54 = bitcast i32 %53 to float, !dbg !29
  %55 = fadd float %49, %54, !dbg !33
  %56 = bitcast float %55 to i32, !dbg !29
  %57 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %56, i32 1, i32 31), !dbg !29
  %58 = bitcast i32 %57 to float, !dbg !29
  %59 = fadd float %55, %58, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %60 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %12, !dbg !35
  %61 = bitcast float %59 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %60, <1 x i32> %61, i1 true) #3, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %62 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %10, !dbg !35
  %63 = load i32, ptr addrspace(3) %62, align 4, !dbg !35
  %64 = sext i32 %13 to i64, !dbg !36
  %65 = getelementptr float, ptr addrspace(1) %2, i64 %64, !dbg !36
  %66 = and i32 %8, 192, !dbg !37
  %67 = icmp eq i32 %66, 0, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %63, ptr addrspace(1) %65, i1 %67) #3, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py", directory: "inductor_cache/y5")
!4 = !{ptr @triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2, !"kernel", i32 1}
!5 = !{ptr @triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2", linkageName: "triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 33, scope: !7)
!15 = !DILocation(line: 27, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 34, column: 57, scope: !7)
!18 = !DILocation(line: 35, column: 43, scope: !7)
!19 = !DILocation(line: 30, column: 36, scope: !7)
!20 = !DILocation(line: 34, column: 49, scope: !7)
!21 = !DILocation(line: 34, column: 34, scope: !7)
!22 = !DILocation(line: 34, column: 62, scope: !7)
!23 = !DILocation(line: 35, column: 34, scope: !7)
!24 = !DILocation(line: 35, column: 48, scope: !7)
!25 = !DILocation(line: 37, column: 22, scope: !7)
!26 = !DILocation(line: 38, column: 22, scope: !7)
!27 = !DILocation(line: 39, column: 22, scope: !7)
!28 = !DILocation(line: 41, column: 23, scope: !7)
!29 = !DILocation(line: 267, column: 36, scope: !30, inlinedAt: !32)
!30 = distinct !DILexicalBlockFile(scope: !7, file: !31, discriminator: 0)
!31 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!32 = !DILocation(line: 43, column: 25, scope: !7)
!33 = !DILocation(line: 256, column: 15, scope: !34, inlinedAt: !32)
!34 = distinct !DILexicalBlockFile(scope: !30, file: !31, discriminator: 0)
!35 = !DILocation(line: 43, column: 28, scope: !7)
!36 = !DILocation(line: 44, column: 25, scope: !7)
!37 = !DILocation(line: 44, column: 36, scope: !7)
!38 = !DILocation(line: 44, column: 4, scope: !7)
