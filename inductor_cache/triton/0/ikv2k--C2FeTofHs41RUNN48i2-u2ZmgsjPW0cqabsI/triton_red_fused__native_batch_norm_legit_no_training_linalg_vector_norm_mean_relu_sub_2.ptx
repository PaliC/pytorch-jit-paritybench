//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2 // -- Begin function triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2
.visible .entry triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2(
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_2,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_3,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<60>;
	.reg .f32 	%f<12>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_2];
	ld.param.u64 	%rd6, [triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_0];
	ld.param.u64 	%rd9, [triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:22:28
	// begin inline asm
	mov.u32 %r10, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:22:33
	shl.b32 	%r11, %r10, 6;
	.loc	1 23 44                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:23:44
	mov.u32 	%r1, %tid.x;
	and.b32  	%r12, %r1, 3;
	and.b32  	%r2, %r1, 63;
	bfe.u32 	%r3, %r1, 2, 6;
	.loc	1 23 23                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:23:23
	or.b32  	%r4, %r11, %r2;
	or.b32  	%r13, %r11, %r3;
	.loc	1 25 33                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:25:33
	bfe.u32 	%r14, %r1, 6, 2;
	.loc	1 27 19                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:27:19
	shr.s32 	%r16, %r4, 31;
	shr.u32 	%r17, %r16, 20;
	add.s32 	%r18, %r4, %r17;
	shr.s32 	%r19, %r18, 12;
	bfe.s32 	%r20, %r10, 25, 1;
	shr.u32 	%r21, %r20, 20;
	add.s32 	%r22, %r13, %r21;
	shr.s32 	%r23, %r22, 12;
	.loc	1 35 43                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:35:43
	shl.b32 	%r24, %r23, 8;
	shl.b32 	%r25, %r1, 2;
	and.b32  	%r26, %r25, 252;
	or.b32  	%r27, %r26, %r14;
	and.b32  	%r28, %r1, 255;
	mov.u32 	%r29, global_smem;
	add.s32 	%r30, %r29, %r26;
	shl.b32 	%r31, %r27, 2;
	add.s32 	%r40, %r30, %r31;
	and.b32  	%r32, %r1, 252;
	add.s32 	%r33, %r29, %r32;
	shl.b32 	%r34, %r28, 2;
	add.s32 	%r6, %r33, %r34;
	.loc	1 30 36                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:30:36
	or.b32  	%r35, %r24, %r12;
	mul.wide.s32 	%rd10, %r35, 4;
	add.s64 	%rd16, %rd9, %rd10;
	mad.lo.s32 	%r36, %r19, 1044480, %r4;
	shl.b32 	%r37, %r14, 12;
	add.s32 	%r59, %r36, %r37;
	mov.f32 	%f11, 0f00000000;
	mov.u64 	%rd17, -4;
	mov.pred 	%p1, -1;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 34 34                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:34
	mul.wide.s32 	%rd13, %r59, 4;
	add.s64 	%rd11, %rd6, %rd13;
	mov.b32 	%r39, 0;
	.loc	1 34 62                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:62
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_first.b32 { %r38 }, [ %rd11 + 0 ];
	@!%p1 mov.u32 %r38, %r39;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p1 st.shared.b32 [ %r40 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f4, [%r6];
	.loc	1 35 48                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:35:48
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r42 }, [ %rd16 + 0 ];
	@!%p1 mov.u32 %r42, %r39;
	// end inline asm
	mov.b32 	%r46, 1166016512;
	.loc	1 37 22                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:37:22
	// begin inline asm
	div.full.f32 %r44, %r42, %r46;
	// end inline asm
	mov.b32 	%f5, %r44;
	.loc	1 38 22                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:38:22
	sub.f32 	%f6, %f4, %f5;
	.loc	1 41 23                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:41:23
	fma.rn.f32 	%f11, %f6, %f6, %f11;
	.loc	1 30 36                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:30:36
	add.s64 	%rd17, %rd17, 4;
	add.s64 	%rd16, %rd16, 16;
	add.s32 	%r59, %r59, 16384;
	setp.lt.u64 	%p6, %rd17, 252;
	@%p6 bra 	$L__BB0_1;
// %bb.2:
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f11;
	shfl.sync.bfly.b32	%r51, %r50, 2, 31, -1;
	mov.b32 	%f7, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f11, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f8;
	shfl.sync.bfly.b32	%r53, %r52, 1, 31, -1;
	mov.b32 	%f9, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
$L__tmp2:
	.loc	1 43 28                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:43:28
	bar.sync 	0;
	shl.b32 	%r54, %r3, 2;
	add.s32 	%r47, %r29, %r54;
	mov.b32 	%r48, %f10;
	// begin inline asm
	@%p1 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r56, %r2, 2;
	add.s32 	%r57, %r29, %r56;
	ld.shared.u32 	%r49, [%r57];
	.loc	1 44 25                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:44:25
	mul.wide.s32 	%rd15, %r4, 4;
	add.s64 	%rd14, %rd7, %rd15;
	.loc	1 44 36                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:44:36
	and.b32  	%r58, %r1, 192;
	setp.eq.s32 	%p8, %r58, 0;
	// begin inline asm
	@%p8 st.global.b32 [ %rd14 + 0 ], { %r49 };
	// end inline asm
	.loc	1 44 4                          // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:44:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/y5/cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 233                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 53
.b8 105
.b8 99
.b8 108
.b8 106
.b8 109
.b8 51
.b8 115
.b8 102
.b8 121
.b8 98
.b8 104
.b8 51
.b8 121
.b8 115
.b8 112
.b8 107
.b8 116
.b8 113
.b8 53
.b8 110
.b8 110
.b8 101
.b8 103
.b8 117
.b8 108
.b8 111
.b8 109
.b8 110
.b8 52
.b8 108
.b8 100
.b8 108
.b8 111
.b8 116
.b8 111
.b8 116
.b8 122
.b8 99
.b8 120
.b8 117
.b8 119
.b8 107
.b8 112
.b8 112
.b8 109
.b8 99
.b8 113
.b8 97
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 53
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x5b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 108
.b8 105
.b8 110
.b8 97
.b8 108
.b8 103
.b8 95
.b8 118
.b8 101
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xbe:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xd3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
