//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2 // -- Begin function triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2
.visible .entry triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_5,
	.param .u32 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_6,
	.param .u32 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<72>;
	.reg .f32 	%f<148>;
	.reg .b64 	%rd<18>;
$L__func_begin0:

// %bb.0:                               // %__nv_sqrtf.exit
	.loc	1 23 28                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:23:28
	// begin inline asm
	mov.u32 %r5, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:23:33
	shl.b32 	%r1, %r5, 3;
	.loc	1 24 44                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:24:44
	mov.u32 	%r2, %tid.x;
	ld.param.u64 	%rd8, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_3];
	ld.param.u64 	%rd9, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_4];
	bfe.u32 	%r36, %r2, 3, 3;
	ld.param.u64 	%rd10, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_5];
	and.b32  	%r3, %r2, 7;
	.loc	1 24 23                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:24:23
	or.b32  	%r4, %r1, %r36;
	.loc	1 25 21                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:25:21
	setp.lt.s32 	%p1, %r4, 1024;
	.loc	1 26 34                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:26:34
	shl.b32 	%r37, %r2, 1;
	and.b32  	%r38, %r37, 14;
	.loc	1 31 38                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:31:38
	shl.b32 	%r39, %r4, 4;
	.loc	1 31 35                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:31:35
	or.b32  	%r40, %r39, %r38;
	.loc	1 31 30                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:31:30
	mul.wide.s32 	%rd11, %r40, 4;
	add.s64 	%rd5, %rd8, %rd11;
	mov.b32 	%r8, 0;
	.loc	1 31 43                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:31:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r6, %r8;
	@!%p1 mov.u32 %r7, %r8;
	// end inline asm
	mov.b32 	%f40, %r6;
	mov.b32 	%f41, %r7;
	.loc	1 32 31                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:32:31
	mul.wide.u32 	%rd12, %r38, 4;
	add.s64 	%rd6, %rd9, %rd12;
	mov.pred 	%p4, -1;
	.loc	1 32 36                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:32:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f42, %r10;
	mov.b32 	%f43, %r11;
	.loc	1 33 31                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:33:31
	add.s64 	%rd7, %rd10, %rd12;
	.loc	1 33 36                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:33:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f44, %r12;
	mov.b32 	%f45, %r13;
$L__tmp0:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f40, %f41;
	selp.f32 	%f47, %f46, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f47;
	shfl.sync.bfly.b32	%r42, %r41, 4, 31, -1;
	mov.b32 	%f48, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f49;
	shfl.sync.bfly.b32	%r44, %r43, 2, 31, -1;
	mov.b32 	%f50, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f51;
	shfl.sync.bfly.b32	%r46, %r45, 1, 31, -1;
	mov.b32 	%f52, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
$L__tmp1:
	.loc	1 38 18                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:38:18
	shl.b32 	%r47, %r36, 2;
	mov.u32 	%r48, global_smem;
	add.s32 	%r14, %r48, %r47;
	mov.b32 	%r15, %f53;
	// begin inline asm
	@%p4 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r49, %r3, 2;
	add.s32 	%r50, %r48, %r49;
	ld.shared.u32 	%r17, [%r50];
	mov.b32 	%r21, 1098907648;
	// begin inline asm
	div.full.f32 %r19, %r15, %r21;
	// end inline asm
	mov.b32 	%f54, %r19;
	.loc	1 39 18                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:39:18
	sub.f32 	%f55, %f40, %f54;
	sub.f32 	%f56, %f41, %f54;
	.loc	1 40 18                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:40:18
	mul.f32 	%f57, %f56, %f56;
$L__tmp2:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f58, %f55, %f55, %f57;
	selp.f32 	%f59, %f58, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f59;
	shfl.sync.bfly.b32	%r52, %r51, 4, 31, -1;
	mov.b32 	%f60, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f61;
	shfl.sync.bfly.b32	%r54, %r53, 2, 31, -1;
	mov.b32 	%f62, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f63;
	shfl.sync.bfly.b32	%r56, %r55, 1, 31, -1;
	mov.b32 	%f64, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
$L__tmp3:
	.loc	1 47 27                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:47:27
	bar.sync 	0;
	mov.b32 	%r23, %f65;
	// begin inline asm
	@%p4 st.shared.b32 [ %r14 + 0 ], %r23;
	// end inline asm
	bar.sync 	0;
	.loc	1 44 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:44:20
	ld.shared.u32 	%r25, [%r50];
	// begin inline asm
	div.full.f32 %r24, %r25, %r21;
	// end inline asm
	// begin inline asm
	div.full.f32 %r27, %r23, %r21;
	// end inline asm
	mov.b32 	%f67, %r27;
	.loc	1 46 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:46:20
	add.f32 	%f69, %f67, 0f358637BD;
	.loc	1 47 27                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:47:27
	sqrt.approx.ftz.f32 	%f70, %f69;
	.loc	1 48 19                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:48:19
	mov.b32 	%r32, %f70;
	mov.b32 	%r31, %f55;
	// begin inline asm
	div.full.f32 %r30, %r31, %r32;
	// end inline asm
	mov.b32 	%f71, %r30;
	mov.b32 	%r34, %f56;
	// begin inline asm
	div.full.f32 %r33, %r34, %r32;
	// end inline asm
	mov.b32 	%f72, %r33;
	.loc	1 50 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:50:20
	fma.rn.f32 	%f3, %f71, %f42, %f44;
	fma.rn.f32 	%f4, %f72, %f43, %f45;
	.loc	1 54 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:54:20
	mul.f32 	%f5, %f3, 0f3F3504F3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	abs.ftz.f32 	%f7, %f5;
	setp.ge.f32 	%p8, %f7, 0f3F8060FE;
	mov.f32 	%f136, 0f3789CA3C;
	mov.f32 	%f135, 0fB9F560B9;
	mov.f32 	%f134, 0f3BAC840B;
	mov.f32 	%f133, 0fBD0C8162;
	mov.f32 	%f132, 0f3E1CF906;
	mov.f32 	%f131, 0f3F6A937E;
	mov.f32 	%f130, 0f3F20D842;
	mov.f32 	%f137, %f7;
	@%p8 bra 	$L__BB0_2;
// %bb.1:
	.loc	1 0 26                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:26
	mov.f32 	%f136, 0f38B1E96A;
	mov.f32 	%f135, 0fBA574D20;
	mov.f32 	%f134, 0f3BAAD5EA;
	mov.f32 	%f133, 0fBCDC1BE7;
	mov.f32 	%f132, 0f3DE718AF;
	mov.f32 	%f131, 0fBEC093AC;
	mov.f32 	%f130, 0f3E0375D3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	mul.f32 	%f137, %f5, %f5;
$L__BB0_2:                              // %__internal_fmad.exit.i
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	mov.b32 	%f66, %r24;
	mul.f32 	%f6, %f4, 0f3F3504F3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	setp.ltu.f32 	%p9, %f7, 0f3F8060FE;
	fma.rn.ftz.f32 	%f80, %f136, %f137, %f135;
	fma.rn.ftz.f32 	%f81, %f80, %f137, %f134;
	fma.rn.ftz.f32 	%f82, %f81, %f137, %f133;
	fma.rn.ftz.f32 	%f83, %f82, %f137, %f132;
	fma.rn.ftz.f32 	%f84, %f83, %f137, %f131;
	fma.rn.ftz.f32 	%f85, %f84, %f137, %f130;
	neg.f32 	%f86, %f137;
	selp.f32 	%f87, %f86, %f5, %p8;
	fma.rn.ftz.f32 	%f138, %f85, %f87, %f87;
	mov.f32 	%f129, 0f3F800000;
	@%p9 bra 	$L__BB0_4;
// %bb.3:
	ex2.approx.ftz.f32 	%f88, %f138;
	sub.f32 	%f90, %f129, %f88;
	mov.b32 	%r57, %f90;
	mov.b32 	%r58, %f5;
	and.b32  	%r59, %r58, -2147483648;
	or.b32  	%r60, %r59, %r57;
	mov.b32 	%f138, %r60;
$L__BB0_4:                              // %__nv_erff.exit
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	// begin inline asm
	div.full.f32 %r71, %r17, %r21;
	// end inline asm
	add.f32 	%f68, %f66, 0f358637BD;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	abs.ftz.f32 	%f20, %f6;
	setp.ge.f32 	%p11, %f20, 0f3F8060FE;
	mov.f32 	%f145, 0f3789CA3C;
	mov.f32 	%f144, 0fB9F560B9;
	mov.f32 	%f143, 0f3BAC840B;
	mov.f32 	%f142, 0fBD0C8162;
	mov.f32 	%f141, 0f3E1CF906;
	mov.f32 	%f140, 0f3F6A937E;
	mov.f32 	%f139, 0f3F20D842;
	mov.f32 	%f146, %f20;
	@%p11 bra 	$L__BB0_6;
// %bb.5:
	mul.f32 	%f146, %f6, %f6;
	mov.f32 	%f145, 0f38B1E96A;
	mov.f32 	%f144, 0fBA574D20;
	mov.f32 	%f143, 0f3BAAD5EA;
	mov.f32 	%f142, 0fBCDC1BE7;
	mov.f32 	%f141, 0f3DE718AF;
	mov.f32 	%f140, 0fBEC093AC;
	mov.f32 	%f139, 0f3E0375D3;
$L__BB0_6:                              // %__internal_fmad.exit.i17
	.loc	1 0 26                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:26
	ld.param.u64 	%rd4, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_2];
	ld.param.u64 	%rd3, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_1];
	ld.param.u64 	%rd2, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_0];
	cvt.s64.s32 	%rd1, %r40;
	mov.b32 	%f1, %r71;
	sqrt.approx.ftz.f32 	%f2, %f68;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	setp.ltu.f32 	%p12, %f20, 0f3F8060FE;
	fma.rn.ftz.f32 	%f105, %f145, %f146, %f144;
	fma.rn.ftz.f32 	%f106, %f105, %f146, %f143;
	fma.rn.ftz.f32 	%f107, %f106, %f146, %f142;
	fma.rn.ftz.f32 	%f108, %f107, %f146, %f141;
	fma.rn.ftz.f32 	%f109, %f108, %f146, %f140;
	fma.rn.ftz.f32 	%f110, %f109, %f146, %f139;
	neg.f32 	%f111, %f146;
	selp.f32 	%f112, %f111, %f6, %p11;
	fma.rn.ftz.f32 	%f147, %f110, %f112, %f112;
	@%p12 bra 	$L__BB0_8;
// %bb.7:
	ex2.approx.ftz.f32 	%f113, %f147;
	sub.f32 	%f115, %f129, %f113;
	mov.b32 	%r61, %f115;
	mov.b32 	%r62, %f6;
	and.b32  	%r63, %r62, -2147483648;
	or.b32  	%r64, %r63, %r61;
	mov.b32 	%f147, %r64;
$L__BB0_8:                              // %__nv_erff.exit36
	.loc	1 52 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:52:20
	mul.f32 	%f116, %f4, 0f3F000000;
	mul.f32 	%f117, %f3, 0f3F000000;
	.loc	1 24 23                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:24:23
	or.b32  	%r69, %r1, %r3;
	.loc	1 25 21                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:25:21
	setp.lt.s32 	%p17, %r69, 1024;
	.loc	1 57 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:57:20
	add.f32 	%f118, %f138, 0f3F800000;
	add.f32 	%f119, %f147, 0f3F800000;
	.loc	1 58 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:58:20
	mul.f32 	%f120, %f117, %f118;
	mul.f32 	%f121, %f116, %f119;
	.loc	1 59 4                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:59:4
	bar.sync 	0;
	.loc	1 60 28                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:60:28
	mul.wide.s32 	%rd16, %r69, 4;
	add.s64 	%rd13, %rd2, %rd16;
	.loc	1 60 39                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:60:39
	and.b32  	%r70, %r2, 56;
	setp.eq.s32 	%p18, %r70, 0;
	and.pred  	%p14, %p18, %p17;
	// begin inline asm
	@%p14 st.global.b32 [ %rd13 + 0 ], { %r71 };
	// end inline asm
	.loc	1 61 4                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:61:4
	bar.sync 	0;
	.loc	1 62 28                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:62:28
	add.s64 	%rd14, %rd3, %rd16;
	.loc	1 62 40                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:62:40
	mov.b32 	%r66, %f2;
	// begin inline asm
	@%p14 st.global.b32 [ %rd14 + 0 ], { %r66 };
	// end inline asm
	.loc	1 63 28                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:63:28
	shl.b64 	%rd17, %rd1, 2;
	add.s64 	%rd15, %rd4, %rd17;
	.loc	1 63 48                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:63:48
	mov.b32 	%r67, %f120;
	mov.b32 	%r68, %f121;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd15 + 0 ], { %r67, %r68 };
	// end inline asm
	.loc	1 63 4                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:63:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7t/c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 222                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 116
.b8 101
.b8 102
.b8 53
.b8 52
.b8 122
.b8 50
.b8 53
.b8 117
.b8 117
.b8 109
.b8 105
.b8 104
.b8 104
.b8 110
.b8 99
.b8 101
.b8 112
.b8 109
.b8 50
.b8 99
.b8 121
.b8 120
.b8 114
.b8 110
.b8 102
.b8 104
.b8 54
.b8 106
.b8 99
.b8 103
.b8 114
.b8 97
.b8 120
.b8 107
.b8 109
.b8 120
.b8 110
.b8 53
.b8 52
.b8 100
.b8 108
.b8 121
.b8 100
.b8 120
.b8 114
.b8 113
.b8 103
.b8 109
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x38 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 103
.b8 101
.b8 108
.b8 117
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
