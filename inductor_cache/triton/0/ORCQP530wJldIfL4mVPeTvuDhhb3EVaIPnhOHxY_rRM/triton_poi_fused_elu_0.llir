; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_elu_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 4, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 15, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 16, !dbg !14
  %10 = sext i32 %8 to i64, !dbg !15
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %10, !dbg !15
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 %9) #3, !dbg !16
  %13 = bitcast i32 %12 to float, !dbg !16
  %14 = fmul float %13, 0x3FF7154760000000, !dbg !17
  %15 = tail call float @llvm.nvvm.round.f(float %14) #3, !dbg !17
  %16 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not.i = icmp eq i32 %16, 0, !dbg !17
  %17 = tail call float @llvm.nvvm.fabs.ftz.f(float %13) #3, !dbg !17
  %18 = tail call float @llvm.nvvm.fabs.f(float %13) #3, !dbg !17
  %.03.i = select i1 %.not.i, float %18, float %17, !dbg !17
  %19 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !17
  %t.0.i = select i1 %19, float 0.000000e+00, float %15, !dbg !17
  %20 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %22 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !17
  %j.0.i = select i1 %22, float 1.270000e+02, float %t.0.i, !dbg !17
  %23 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %25 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %26 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %28 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not8.i = icmp eq i32 %28, 0, !dbg !17
  br i1 %.not8.i, label %31, label %29, !dbg !17

29:                                               ; preds = %3
  %30 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !17
  br label %__nv_expm1f.exit, !dbg !17

31:                                               ; preds = %3
  %32 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !17
  br label %__nv_expm1f.exit, !dbg !17

__nv_expm1f.exit:                                 ; preds = %29, %31
  %.0.i = phi float [ %30, %29 ], [ %32, %31 ], !dbg !17
  %33 = fcmp ogt float %13, 0.000000e+00, !dbg !18
  %34 = and i32 %6, 16, !dbg !12
  %.not7.i = icmp eq i32 %27, 0, !dbg !17
  %.not6.i = icmp eq i32 %26, 0, !dbg !17
  %.not5.i = icmp eq i32 %25, 0, !dbg !17
  %.not4.i = icmp eq i32 %24, 0, !dbg !17
  %.not3.i = icmp eq i32 %23, 0, !dbg !17
  %.not2.i = icmp eq i32 %21, 0, !dbg !17
  %35 = fneg float %t.0.i, !dbg !17
  %.not1.i = icmp eq i32 %20, 0, !dbg !17
  %36 = tail call float @llvm.nvvm.fma.rn.f(float %35, float 0x3FE62E4000000000, float %13) #3, !dbg !17
  %37 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %35, float 0x3FE62E4000000000, float %13) #3, !dbg !17
  %.04.i = select i1 %.not1.i, float %36, float %37, !dbg !17
  %38 = tail call float @llvm.nvvm.fma.rn.f(float %35, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !17
  %39 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %35, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !17
  %.05.i = select i1 %.not2.i, float %38, float %39, !dbg !17
  %40 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !17
  %41 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !17
  %.07.i = select i1 %.not3.i, float %40, float %41, !dbg !17
  %42 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !17
  %43 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !17
  %.08.i = select i1 %.not4.i, float %42, float %43, !dbg !17
  %44 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !17
  %45 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !17
  %.09.i = select i1 %.not5.i, float %44, float %45, !dbg !17
  %46 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !17
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !17
  %.06.i = select i1 %.not6.i, float %46, float %47, !dbg !17
  %48 = fmul float %.05.i, %.06.i, !dbg !17
  %49 = tail call float @llvm.nvvm.fma.rn.f(float %48, float %.05.i, float %.05.i) #3, !dbg !17
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %48, float %.05.i, float %.05.i) #3, !dbg !17
  %.01.i = select i1 %.not7.i, float %49, float %50, !dbg !17
  %51 = fadd float %.0.i, -1.000000e+00, !dbg !17
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not9.i = icmp eq i32 %52, 0, !dbg !17
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i, float %51) #3, !dbg !17
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i, float %51) #3, !dbg !17
  %.02.i = select i1 %.not9.i, float %54, float %53, !dbg !17
  %55 = fadd float %.02.i, %.02.i, !dbg !17
  %u.0.i = select i1 %22, float %55, float %.02.i, !dbg !17
  %56 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !17
  %u.1.i = select i1 %56, float 0x7FF0000000000000, float %u.0.i, !dbg !17
  %57 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !17
  %u.2.i = select i1 %57, float -1.000000e+00, float %u.1.i, !dbg !17
  %58 = fcmp oeq float %13, 0.000000e+00, !dbg !17
  %59 = fadd float %13, %13, !dbg !17
  %u.3.i = select i1 %58, float %59, float %u.2.i, !dbg !17
  %60 = select i1 %33, float %13, float %u.3.i, !dbg !19
  %61 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !20
  %62 = icmp eq i32 %34, 0, !dbg !21
  %63 = bitcast float %60 to i32, !dbg !21
  %64 = and i1 %62, %9, !dbg !21
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %63, ptr addrspace(1) %61, i1 %64) #3, !dbg !21
  ret void, !dbg !22
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3uo2sgxywstvxbqkp2i2likjwhsqvyp4izp4h7x7xxhniz5z3ik.py", directory: "inductor_cache/3u")
!4 = !{ptr @triton_poi_fused_elu_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_elu_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_elu_0", linkageName: "triton_poi_fused_elu_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 30, column: 27, scope: !7)
!18 = !DILocation(line: 27, column: 18, scope: !7)
!19 = !DILocation(line: 32, column: 32, scope: !7)
!20 = !DILocation(line: 33, column: 25, scope: !7)
!21 = !DILocation(line: 33, column: 36, scope: !7)
!22 = !DILocation(line: 33, column: 4, scope: !7)
