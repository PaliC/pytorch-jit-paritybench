//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__weight_norm_interface_26 // -- Begin function triton_per_fused__weight_norm_interface_26
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__weight_norm_interface_26
.visible .entry triton_per_fused__weight_norm_interface_26(
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_26_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_26_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_26_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_26_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_26_param_4,
	.param .u32 triton_per_fused__weight_norm_interface_26_param_5,
	.param .u32 triton_per_fused__weight_norm_interface_26_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<54>;
	.reg .f32 	%f<31>;
	.reg .b64 	%rd<24>;
	.loc	1 19 0                          // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd10, [triton_per_fused__weight_norm_interface_26_param_0];
	ld.param.u64 	%rd11, [triton_per_fused__weight_norm_interface_26_param_1];
$L__tmp0:
	.loc	1 23 28                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:23:33
	shl.b32 	%r23, %r1, 3;
	ld.param.u64 	%rd12, [triton_per_fused__weight_norm_interface_26_param_2];
	ld.param.u64 	%rd13, [triton_per_fused__weight_norm_interface_26_param_3];
	.loc	1 24 44                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:24:44
	mov.u32 	%r24, %tid.x;
	ld.param.u64 	%rd14, [triton_per_fused__weight_norm_interface_26_param_4];
	bfe.u32 	%r25, %r24, 4, 2;
	and.b32  	%r26, %r24, 7;
	.loc	1 24 23                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:24:23
	or.b32  	%r27, %r23, %r25;
	or.b32  	%r28, %r27, 4;
	.loc	1 25 21                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:25:21
	setp.lt.s32 	%p5, %r27, 128;
	setp.lt.s32 	%p6, %r28, 128;
	.loc	1 26 34                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:26:34
	and.b32  	%r29, %r24, 15;
	.loc	1 28 21                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:28:21
	setp.ne.s32 	%p14, %r29, 15;
	.loc	1 31 35                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:31:35
	mad.lo.s32 	%r30, %r27, 15, %r29;
	mad.lo.s32 	%r31, %r28, 15, %r29;
	.loc	1 31 30                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:31:30
	mul.wide.s32 	%rd15, %r30, 4;
	add.s64 	%rd1, %rd11, %rd15;
	mul.wide.s32 	%rd16, %r31, 4;
	add.s64 	%rd2, %rd11, %rd16;
	.loc	1 31 51                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:31:51
	and.pred  	%p1, %p14, %p5;
	and.pred  	%p3, %p14, %p6;
	mov.b32 	%r3, 0;
	.loc	1 31 43                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:31:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 32 30                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:32:30
	mul.wide.s32 	%rd17, %r27, 4;
	add.s64 	%rd3, %rd12, %rd17;
	cvt.s64.s32 	%rd18, %r23;
	cvt.u64.u32 	%rd19, %r25;
	or.b64  	%rd20, %rd18, %rd19;
	shl.b64 	%rd21, %rd20, 2;
	add.s64 	%rd22, %rd12, %rd21;
	add.s64 	%rd4, %rd22, 16;
	.loc	1 32 35                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:32:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r13 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r16 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 18                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:33:18
	mul.f32 	%f3, %f1, %f1;
	mul.f32 	%f4, %f2, %f2;
	.loc	1 35 41                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:35:41
	selp.f32 	%f5, %f3, 0f00000000, %p1;
	selp.f32 	%f6, %f4, 0f00000000, %p3;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f5;
	shfl.sync.bfly.b32	%r33, %r32, 8, 31, -1;
	mov.b32 	%f7, %r33;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f5, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f8;
	shfl.sync.bfly.b32	%r35, %r34, 4, 31, -1;
	mov.b32 	%f9, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f10;
	shfl.sync.bfly.b32	%r37, %r36, 2, 31, -1;
	mov.b32 	%f11, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f12;
	shfl.sync.bfly.b32	%r39, %r38, 1, 31, -1;
	mov.b32 	%f13, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f6;
	shfl.sync.bfly.b32	%r41, %r40, 8, 31, -1;
	mov.b32 	%f15, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f6, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f16;
	shfl.sync.bfly.b32	%r43, %r42, 4, 31, -1;
	mov.b32 	%f17, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f18;
	shfl.sync.bfly.b32	%r45, %r44, 2, 31, -1;
	mov.b32 	%f19, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f20;
	shfl.sync.bfly.b32	%r47, %r46, 1, 31, -1;
	mov.b32 	%f21, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
$L__tmp2:
	.loc	1 37 26                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:37:26
	shl.b32 	%r48, %r25, 2;
	mov.u32 	%r49, global_smem;
	add.s32 	%r8, %r49, %r48;
	mov.b32 	%r9, %f14;
	mov.pred 	%p7, -1;
	// begin inline asm
	@%p7 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	add.s32 	%r10, %r8, 16;
	mov.b32 	%r11, %f22;
	// begin inline asm
	@%p7 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r50, %r26, 2;
	add.s32 	%r51, %r49, %r50;
	ld.shared.f32 	%f23, [%r51];
	sqrt.approx.ftz.f32 	%f24, %f23;
	sqrt.approx.ftz.f32 	%f25, %f14;
	sqrt.approx.ftz.f32 	%f26, %f22;
	.loc	1 24 23                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:24:23
	or.b32  	%r52, %r23, %r26;
	.loc	1 25 21                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:25:21
	setp.lt.s32 	%p15, %r52, 128;
	.loc	1 38 18                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:38:18
	mov.b32 	%r14, %f25;
	// begin inline asm
	div.full.f32 %r12, %r13, %r14;
	// end inline asm
	mov.b32 	%f27, %r12;
	mov.b32 	%r17, %f26;
	// begin inline asm
	div.full.f32 %r15, %r16, %r17;
	// end inline asm
	mov.b32 	%f28, %r15;
	.loc	1 39 18                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:39:18
	mul.f32 	%f29, %f27, %f1;
	mul.f32 	%f30, %f28, %f2;
	.loc	1 40 4                          // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:40:4
	bar.sync 	0;
	.loc	1 41 28                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:41:28
	mul.wide.s32 	%rd23, %r52, 4;
	add.s64 	%rd5, %rd10, %rd23;
	.loc	1 41 39                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:41:39
	and.b32  	%r53, %r24, 56;
	setp.eq.s32 	%p16, %r53, 0;
	mov.b32 	%r18, %f24;
	and.pred  	%p9, %p16, %p15;
	// begin inline asm
	@%p9 st.global.b32 [ %rd5 + 0 ], { %r18 };
	// end inline asm
	.loc	1 42 25                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:42:25
	add.s64 	%rd6, %rd13, %rd15;
	add.s64 	%rd7, %rd13, %rd16;
	.loc	1 42 44                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:42:44
	mov.b32 	%r19, %f29;
	// begin inline asm
	@%p1 st.global.b32 [ %rd6 + 0 ], { %r19 };
	// end inline asm
	mov.b32 	%r20, %f30;
	// begin inline asm
	@%p3 st.global.b32 [ %rd7 + 0 ], { %r20 };
	// end inline asm
	.loc	1 43 25                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:43:25
	add.s64 	%rd8, %rd14, %rd15;
	add.s64 	%rd9, %rd14, %rd16;
	.loc	1 43 44                         // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:43:44
	// begin inline asm
	@%p1 st.global.b32 [ %rd8 + 0 ], { %r19 };
	// end inline asm
	// begin inline asm
	@%p3 st.global.b32 [ %rd9 + 0 ], { %r20 };
	// end inline asm
	.loc	1 43 4                          // cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py:43:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/jo/cjoyn6gnd44g2qpeopfmcj5ihra5uny4uovjo422ppa46s24ojn4.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 187                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb4 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 111
.b8 121
.b8 110
.b8 54
.b8 103
.b8 110
.b8 100
.b8 52
.b8 52
.b8 103
.b8 50
.b8 113
.b8 112
.b8 101
.b8 111
.b8 112
.b8 102
.b8 109
.b8 99
.b8 106
.b8 53
.b8 105
.b8 104
.b8 114
.b8 97
.b8 53
.b8 117
.b8 110
.b8 121
.b8 52
.b8 117
.b8 111
.b8 118
.b8 106
.b8 111
.b8 52
.b8 50
.b8 50
.b8 112
.b8 112
.b8 97
.b8 52
.b8 54
.b8 115
.b8 50
.b8 52
.b8 111
.b8 106
.b8 110
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 111
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 119
.b8 101
.b8 105
.b8 103
.b8 104
.b8 116
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 105
.b8 110
.b8 116
.b8 101
.b8 114
.b8 102
.b8 97
.b8 99
.b8 101
.b8 95
.b8 50
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x90:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
