; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_9(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %.fr = freeze i32 %4, !dbg !11
  %5 = shl i32 %.fr, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 192, !dbg !14
  %12 = srem i32 %9, 12, !dbg !15
  %13 = srem i32 %10, 12, !dbg !15
  %14 = icmp slt i32 %12, 3, !dbg !16
  %15 = icmp slt i32 %13, 3, !dbg !16
  %16 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !17
  %17 = shufflevector <2 x i32> %16, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !17
  %18 = sdiv <2 x i32> %17, <i32 12, i32 24>, !dbg !17
  %19 = srem <2 x i32> %18, splat (i32 2), !dbg !18
  %20 = shl nsw <2 x i32> %19, <i32 1, i32 3>, !dbg !19
  %21 = extractelement <2 x i32> %20, i64 0, !dbg !20
  %22 = extractelement <2 x i32> %20, i64 1, !dbg !21
  %23 = add nsw i32 %21, %22, !dbg !21
  %24 = shl nsw i32 %12, 4, !dbg !22
  %25 = shl nsw i32 %13, 4, !dbg !22
  %26 = srem i32 %9, 48, !dbg !23
  %27 = sub nsw i32 %9, %26, !dbg !23
  %28 = add i32 %27, %24, !dbg !24
  %29 = add i32 %28, %23, !dbg !25
  %30 = add i32 %27, %25, !dbg !24
  %31 = add i32 %30, %23, !dbg !25
  %32 = sext i32 %29 to i64, !dbg !26
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !26
  %34 = sext i32 %31 to i64, !dbg !26
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !26
  %36 = and i1 %11, %14, !dbg !27
  %37 = and i1 %15, %11, !dbg !27
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %36, i32 0, i1 %36) #1, !dbg !28
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %37, i32 0, i1 %37) #1, !dbg !28
  %40 = icmp sgt i32 %13, 2, !dbg !29
  %41 = icmp slt i32 %12, 6, !dbg !30
  %42 = add nsw i32 %12, -3, !dbg !31
  %43 = icmp ult i32 %42, 3, !dbg !31
  %44 = and i1 %40, %41, !dbg !31
  %45 = add nsw i32 %23, 4, !dbg !32
  %46 = add i32 %28, -48, !dbg !33
  %47 = add i32 %46, %45, !dbg !34
  %48 = add i32 %30, -48, !dbg !33
  %49 = add i32 %48, %45, !dbg !34
  %50 = sext i32 %47 to i64, !dbg !35
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !35
  %52 = sext i32 %49 to i64, !dbg !35
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !35
  %54 = and i1 %11, %43, !dbg !36
  %55 = and i1 %11, %44, !dbg !36
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %54, i32 0, i1 %54) #1, !dbg !37
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %53, i1 %55, i32 0, i1 %55) #1, !dbg !37
  %58 = icmp sgt i32 %12, 5, !dbg !38
  %59 = icmp slt i32 %13, 9, !dbg !39
  %60 = add nsw i32 %12, -6, !dbg !40
  %61 = icmp ult i32 %60, 3, !dbg !40
  %62 = and i1 %59, %58, !dbg !40
  %63 = or disjoint i32 %21, 1, !dbg !20
  %64 = add nsw i32 %63, %22, !dbg !41
  %65 = add i32 %28, -96, !dbg !42
  %66 = add i32 %65, %64, !dbg !43
  %67 = add i32 %30, -96, !dbg !42
  %68 = add i32 %67, %64, !dbg !43
  %69 = sext i32 %66 to i64, !dbg !44
  %70 = getelementptr float, ptr addrspace(1) %0, i64 %69, !dbg !44
  %71 = sext i32 %68 to i64, !dbg !44
  %72 = getelementptr float, ptr addrspace(1) %0, i64 %71, !dbg !44
  %73 = and i1 %11, %61, !dbg !45
  %74 = and i1 %11, %62, !dbg !45
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %70, i1 %73, i32 0, i1 %73) #1, !dbg !46
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %72, i1 %74, i32 0, i1 %74) #1, !dbg !46
  %77 = icmp sgt i32 %12, 8, !dbg !47
  %78 = icmp sgt i32 %13, 8, !dbg !47
  %79 = add nsw i32 %23, 5, !dbg !48
  %80 = add i32 %28, -144, !dbg !49
  %81 = add i32 %80, %79, !dbg !50
  %82 = add i32 %30, -144, !dbg !49
  %83 = add i32 %82, %79, !dbg !50
  %84 = sext i32 %81 to i64, !dbg !51
  %85 = getelementptr float, ptr addrspace(1) %0, i64 %84, !dbg !51
  %86 = sext i32 %83 to i64, !dbg !51
  %87 = getelementptr float, ptr addrspace(1) %0, i64 %86, !dbg !51
  %88 = and i1 %11, %77, !dbg !52
  %89 = and i1 %78, %11, !dbg !52
  %90 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %85, i1 %88, i32 0, i1 %88) #1, !dbg !53
  %91 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %87, i1 %89, i32 0, i1 %89) #1, !dbg !53
  %.v = select i1 %61, i32 %75, i32 %90, !dbg !54
  %.v1 = select i1 %62, i32 %76, i32 %91, !dbg !54
  %.v2 = select i1 %43, i32 %56, i32 %.v, !dbg !55
  %.v3 = select i1 %44, i32 %57, i32 %.v1, !dbg !55
  %.v4 = select i1 %14, i32 %38, i32 %.v2, !dbg !56
  %.v5 = select i1 %15, i32 %39, i32 %.v3, !dbg !56
  %92 = sext i32 %9 to i64, !dbg !57
  %93 = getelementptr float, ptr addrspace(1) %1, i64 %92, !dbg !57
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.v4, i32 %.v5, ptr addrspace(1) %93, i1 %11) #1, !dbg !58
  ret void, !dbg !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2y4taieuipv24fli4kmhjyao4sbrfhshs6ezpqv7btjjpahlthl.py", directory: "inductor_cache/2y")
!4 = !{ptr @triton_poi_fused_cat_9, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_9, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_9", linkageName: "triton_poi_fused_cat_9", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 33, column: 18, scope: !7)
!17 = !DILocation(line: 25, column: 21, scope: !7)
!18 = !DILocation(line: 25, column: 27, scope: !7)
!19 = !DILocation(line: 34, column: 32, scope: !7)
!20 = !DILocation(line: 44, column: 35, scope: !7)
!21 = !DILocation(line: 34, column: 37, scope: !7)
!22 = !DILocation(line: 34, column: 48, scope: !7)
!23 = !DILocation(line: 34, column: 57, scope: !7)
!24 = !DILocation(line: 34, column: 44, scope: !7)
!25 = !DILocation(line: 34, column: 54, scope: !7)
!26 = !DILocation(line: 34, column: 30, scope: !7)
!27 = !DILocation(line: 34, column: 69, scope: !7)
!28 = !DILocation(line: 34, column: 62, scope: !7)
!29 = !DILocation(line: 35, column: 19, scope: !7)
!30 = !DILocation(line: 37, column: 18, scope: !7)
!31 = !DILocation(line: 38, column: 18, scope: !7)
!32 = !DILocation(line: 39, column: 42, scope: !7)
!33 = !DILocation(line: 39, column: 49, scope: !7)
!34 = !DILocation(line: 39, column: 66, scope: !7)
!35 = !DILocation(line: 39, column: 31, scope: !7)
!36 = !DILocation(line: 39, column: 81, scope: !7)
!37 = !DILocation(line: 39, column: 74, scope: !7)
!38 = !DILocation(line: 40, column: 20, scope: !7)
!39 = !DILocation(line: 42, column: 19, scope: !7)
!40 = !DILocation(line: 43, column: 20, scope: !7)
!41 = !DILocation(line: 44, column: 42, scope: !7)
!42 = !DILocation(line: 44, column: 49, scope: !7)
!43 = !DILocation(line: 44, column: 66, scope: !7)
!44 = !DILocation(line: 44, column: 31, scope: !7)
!45 = !DILocation(line: 44, column: 82, scope: !7)
!46 = !DILocation(line: 44, column: 74, scope: !7)
!47 = !DILocation(line: 45, column: 20, scope: !7)
!48 = !DILocation(line: 48, column: 42, scope: !7)
!49 = !DILocation(line: 48, column: 49, scope: !7)
!50 = !DILocation(line: 48, column: 66, scope: !7)
!51 = !DILocation(line: 48, column: 31, scope: !7)
!52 = !DILocation(line: 48, column: 82, scope: !7)
!53 = !DILocation(line: 48, column: 74, scope: !7)
!54 = !DILocation(line: 49, column: 35, scope: !7)
!55 = !DILocation(line: 50, column: 34, scope: !7)
!56 = !DILocation(line: 51, column: 33, scope: !7)
!57 = !DILocation(line: 52, column: 25, scope: !7)
!58 = !DILocation(line: 52, column: 37, scope: !7)
!59 = !DILocation(line: 52, column: 4, scope: !7)
