; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_avg_pool2d_11(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 6144, !dbg !14
  %10 = sdiv i32 %8, 16, !dbg !15
  %11 = sext i32 %8 to i64, !dbg !16
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !16
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 %9) #1, !dbg !17
  %14 = bitcast i32 %13 to float, !dbg !17
  %15 = add i32 %8, -17, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !19
  %18 = add i32 %8, -16, !dbg !20
  %19 = sext i32 %18 to i64, !dbg !21
  %20 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !21
  %21 = add i32 %8, -15, !dbg !22
  %22 = sext i32 %21 to i64, !dbg !23
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %22, !dbg !23
  %24 = add i32 %8, -1, !dbg !24
  %25 = sext i32 %24 to i64, !dbg !25
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !25
  %27 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !26
  %28 = add i32 %8, 1, !dbg !27
  %29 = sext i32 %28 to i64, !dbg !28
  %30 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !28
  %31 = add i32 %8, 15, !dbg !29
  %32 = sext i32 %31 to i64, !dbg !30
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %32, !dbg !30
  %34 = add i32 %8, 16, !dbg !31
  %35 = sext i32 %34 to i64, !dbg !32
  %36 = getelementptr float, ptr addrspace(1) %1, i64 %35, !dbg !32
  %37 = add i32 %8, 17, !dbg !33
  %38 = sext i32 %37 to i64, !dbg !34
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !34
  %40 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !35
  %41 = insertelement <2 x i32> %40, i32 %8, i64 1, !dbg !35
  %42 = srem <2 x i32> %41, splat (i32 16), !dbg !35
  %43 = extractelement <2 x i32> %42, i64 0, !dbg !36
  %44 = icmp sgt i32 %43, 0, !dbg !37
  %45 = extractelement <2 x i32> %42, i64 1, !dbg !36
  %46 = icmp sgt i32 %45, 0, !dbg !38
  %47 = and i1 %46, %44, !dbg !39
  %48 = and i1 %9, %47, !dbg !40
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %48, i32 0, i1 %48) #1, !dbg !41
  %50 = bitcast i32 %49 to float, !dbg !41
  %51 = icmp sgt i32 %45, -1, !dbg !42
  %52 = and i1 %51, %44, !dbg !43
  %53 = and i1 %9, %52, !dbg !44
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %53, i32 0, i1 %53) #1, !dbg !45
  %55 = bitcast i32 %54 to float, !dbg !45
  %56 = fadd float %50, %55, !dbg !46
  %57 = add nsw i32 %45, 1, !dbg !47
  %58 = icmp ult i32 %57, 16, !dbg !47
  %59 = and i1 %44, %58, !dbg !48
  %60 = and i1 %9, %59, !dbg !49
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 %60, i32 0, i1 %60) #1, !dbg !50
  %62 = bitcast i32 %61 to float, !dbg !50
  %63 = fadd float %56, %62, !dbg !51
  %64 = icmp sgt i32 %43, -1, !dbg !52
  %65 = and i1 %46, %64, !dbg !53
  %66 = and i1 %9, %65, !dbg !54
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %66, i32 0, i1 %66) #1, !dbg !55
  %68 = bitcast i32 %67 to float, !dbg !55
  %69 = fadd float %63, %68, !dbg !56
  %70 = or i32 %43, %45, !dbg !57
  %71 = icmp sgt i32 %70, -1, !dbg !57
  %72 = and i1 %9, %71, !dbg !58
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %72, i32 0, i1 %72) #1, !dbg !59
  %74 = bitcast i32 %73 to float, !dbg !59
  %75 = fadd float %69, %74, !dbg !60
  %76 = and i1 %64, %58, !dbg !61
  %77 = and i1 %9, %76, !dbg !62
  %78 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %77, i32 0, i1 %77) #1, !dbg !63
  %79 = bitcast i32 %78 to float, !dbg !63
  %80 = fadd float %75, %79, !dbg !64
  %81 = add nsw i32 %43, 1, !dbg !65
  %82 = icmp ult i32 %81, 16, !dbg !65
  %83 = and i1 %46, %82, !dbg !66
  %84 = and i1 %9, %83, !dbg !67
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %84, i32 0, i1 %84) #1, !dbg !68
  %86 = bitcast i32 %85 to float, !dbg !68
  %87 = fadd float %80, %86, !dbg !69
  %88 = and i1 %51, %82, !dbg !70
  %89 = and i1 %9, %88, !dbg !71
  %90 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %89, i32 0, i1 %89) #1, !dbg !72
  %91 = bitcast i32 %90 to float, !dbg !72
  %92 = fadd float %87, %91, !dbg !73
  %93 = or i32 %81, %57, !dbg !74
  %94 = icmp ult i32 %93, 16, !dbg !74
  %95 = and i1 %9, %94, !dbg !75
  %96 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %95, i32 0, i1 %95) #1, !dbg !76
  %97 = bitcast i32 %96 to float, !dbg !76
  %98 = fadd float %92, %97, !dbg !77
  %99 = add nsw <2 x i32> %42, splat (i32 2), !dbg !78
  %100 = icmp sgt <2 x i32> %42, splat (i32 14), !dbg !79
  %101 = select <2 x i1> %100, <2 x i32> splat (i32 17), <2 x i32> zeroinitializer, !dbg !80
  %102 = icmp slt <2 x i32> %42, splat (i32 15), !dbg !81
  %103 = select <2 x i1> %102, <2 x i32> %99, <2 x i32> zeroinitializer, !dbg !82
  %104 = add nsw <2 x i32> %101, %103, !dbg !83
  %105 = extractelement <2 x i32> %104, i64 1, !dbg !84
  %reass.add = sub nsw i32 %105, %45
  %106 = extractelement <2 x i32> %104, i64 0
  %reass.mul = mul nsw i32 %reass.add, %106
  %107 = add nsw i32 %45, %43, !dbg !36
  %reass.sub = sub nsw i32 %105, %107, !dbg !84
  %108 = add nsw i32 %reass.sub, 1, !dbg !84
  %109 = extractelement <2 x i32> %42, i64 1
  %110 = extractelement <2 x i32> %104, i64 1
  %111 = sub nsw i32 %109, %110
  %reass.mul7 = mul nsw i32 %111, %43
  %112 = extractelement <2 x i32> %104, i64 0, !dbg !85
  %113 = add nsw i32 %108, %112, !dbg !85
  %114 = add nsw i32 %113, %reass.mul7, !dbg !85
  %115 = add nsw i32 %114, %reass.mul, !dbg !86
  %116 = sitofp i32 %115 to float, !dbg !87
  %117 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %98, float %116) #1, !dbg !87
  %118 = fadd float %117, %14, !dbg !88
  %119 = bitcast float %118 to i32, !dbg !89
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %119, ptr addrspace(1) %12, i1 %9) #1, !dbg !89
  ret void, !dbg !90
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py", directory: "inductor_cache/br")
!4 = !{ptr @triton_poi_fused_add_avg_pool2d_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_avg_pool2d_11, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_avg_pool2d_11", linkageName: "triton_poi_fused_add_avg_pool2d_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 27, column: 35, scope: !7)
!17 = !DILocation(line: 27, column: 40, scope: !7)
!18 = !DILocation(line: 39, column: 39, scope: !7)
!19 = !DILocation(line: 39, column: 31, scope: !7)
!20 = !DILocation(line: 45, column: 39, scope: !7)
!21 = !DILocation(line: 45, column: 31, scope: !7)
!22 = !DILocation(line: 52, column: 39, scope: !7)
!23 = !DILocation(line: 52, column: 31, scope: !7)
!24 = !DILocation(line: 59, column: 38, scope: !7)
!25 = !DILocation(line: 59, column: 31, scope: !7)
!26 = !DILocation(line: 62, column: 31, scope: !7)
!27 = !DILocation(line: 65, column: 35, scope: !7)
!28 = !DILocation(line: 65, column: 31, scope: !7)
!29 = !DILocation(line: 72, column: 36, scope: !7)
!30 = !DILocation(line: 72, column: 31, scope: !7)
!31 = !DILocation(line: 75, column: 36, scope: !7)
!32 = !DILocation(line: 75, column: 31, scope: !7)
!33 = !DILocation(line: 78, column: 36, scope: !7)
!34 = !DILocation(line: 78, column: 31, scope: !7)
!35 = !DILocation(line: 24, column: 27, scope: !7)
!36 = !DILocation(line: 80, column: 40, scope: !7)
!37 = !DILocation(line: 30, column: 19, scope: !7)
!38 = !DILocation(line: 35, column: 19, scope: !7)
!39 = !DILocation(line: 38, column: 19, scope: !7)
!40 = !DILocation(line: 39, column: 52, scope: !7)
!41 = !DILocation(line: 39, column: 44, scope: !7)
!42 = !DILocation(line: 41, column: 21, scope: !7)
!43 = !DILocation(line: 44, column: 19, scope: !7)
!44 = !DILocation(line: 45, column: 52, scope: !7)
!45 = !DILocation(line: 45, column: 44, scope: !7)
!46 = !DILocation(line: 46, column: 20, scope: !7)
!47 = !DILocation(line: 50, column: 20, scope: !7)
!48 = !DILocation(line: 51, column: 19, scope: !7)
!49 = !DILocation(line: 52, column: 52, scope: !7)
!50 = !DILocation(line: 52, column: 44, scope: !7)
!51 = !DILocation(line: 53, column: 20, scope: !7)
!52 = !DILocation(line: 55, column: 21, scope: !7)
!53 = !DILocation(line: 58, column: 20, scope: !7)
!54 = !DILocation(line: 59, column: 51, scope: !7)
!55 = !DILocation(line: 59, column: 43, scope: !7)
!56 = !DILocation(line: 60, column: 20, scope: !7)
!57 = !DILocation(line: 61, column: 20, scope: !7)
!58 = !DILocation(line: 62, column: 44, scope: !7)
!59 = !DILocation(line: 62, column: 36, scope: !7)
!60 = !DILocation(line: 63, column: 20, scope: !7)
!61 = !DILocation(line: 64, column: 20, scope: !7)
!62 = !DILocation(line: 65, column: 48, scope: !7)
!63 = !DILocation(line: 65, column: 40, scope: !7)
!64 = !DILocation(line: 66, column: 20, scope: !7)
!65 = !DILocation(line: 70, column: 20, scope: !7)
!66 = !DILocation(line: 71, column: 20, scope: !7)
!67 = !DILocation(line: 72, column: 49, scope: !7)
!68 = !DILocation(line: 72, column: 41, scope: !7)
!69 = !DILocation(line: 73, column: 20, scope: !7)
!70 = !DILocation(line: 74, column: 20, scope: !7)
!71 = !DILocation(line: 75, column: 49, scope: !7)
!72 = !DILocation(line: 75, column: 41, scope: !7)
!73 = !DILocation(line: 76, column: 20, scope: !7)
!74 = !DILocation(line: 77, column: 20, scope: !7)
!75 = !DILocation(line: 78, column: 49, scope: !7)
!76 = !DILocation(line: 78, column: 41, scope: !7)
!77 = !DILocation(line: 79, column: 20, scope: !7)
!78 = !DILocation(line: 80, column: 129, scope: !7)
!79 = !DILocation(line: 80, column: 125, scope: !7)
!80 = !DILocation(line: 80, column: 116, scope: !7)
!81 = !DILocation(line: 80, column: 160, scope: !7)
!82 = !DILocation(line: 80, column: 148, scope: !7)
!83 = !DILocation(line: 80, column: 136, scope: !7)
!84 = !DILocation(line: 80, column: 48, scope: !7)
!85 = !DILocation(line: 80, column: 311, scope: !7)
!86 = !DILocation(line: 80, column: 372, scope: !7)
!87 = !DILocation(line: 81, column: 20, scope: !7)
!88 = !DILocation(line: 82, column: 20, scope: !7)
!89 = !DILocation(line: 83, column: 40, scope: !7)
!90 = !DILocation(line: 83, column: 4, scope: !7)
