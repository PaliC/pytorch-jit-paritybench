//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_mul_pow_sub_4 // -- Begin function triton_poi_fused_clone_mul_pow_sub_4
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 119, 114, 47, 99, 119, 114, 54, 119, 107, 98, 122, 97, 107, 55, 106, 121, 118, 99, 111, 100, 98, 102, 115, 55, 97, 117, 105, 121, 121, 114, 99, 115, 51, 111, 100, 103, 110, 54, 115, 110, 117, 120, 119, 109, 115, 122, 107, 51, 115, 118, 107, 51, 53, 111, 121, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 52};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_clone_mul_pow_sub_4
.visible .entry triton_poi_fused_clone_mul_pow_sub_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_mul_pow_sub_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_mul_pow_sub_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_mul_pow_sub_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_mul_pow_sub_4_param_3,
	.param .u32 triton_poi_fused_clone_mul_pow_sub_4_param_4,
	.param .u32 triton_poi_fused_clone_mul_pow_sub_4_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<52>;
	.reg .f32 	%f<9>;
	.reg .b64 	%rd<34>;
	.loc	1 19 0                          // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused_clone_mul_pow_sub_4_param_0];
$L__tmp0:
	.loc	1 22 28                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:22:28
	// begin inline asm
	mov.u32 %r4, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:22:33
	shl.b32 	%r12, %r4, 6;
	ld.param.u64 	%rd12, [triton_poi_fused_clone_mul_pow_sub_4_param_2];
	.loc	1 23 44                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:23:44
	mov.u32 	%r13, %tid.x;
	shl.b32 	%r1, %r13, 1;
	and.b32  	%r14, %r1, 62;
	bfe.u32 	%r15, %r13, 1, 6;
	and.b32  	%r16, %r13, 63;
	.loc	1 23 23                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:23:23
	or.b32  	%r17, %r12, %r14;
	or.b32  	%r2, %r12, %r15;
	or.b32  	%r18, %r12, %r16;
	.loc	1 24 21                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:24:21
	setp.lt.s32 	%p7, %r17, 64;
	setp.lt.s32 	%p2, %r2, 64;
	setp.gt.s32 	%p8, %r18, 63;
	setp.lt.s32 	%p3, %r18, 64;
	.loc	1 25 28                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:25:28
	// begin inline asm
	mov.u32 %r5, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:25:33
	shl.b32 	%r3, %r5, 2;
	.loc	1 26 44                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:26:44
	bfe.u32 	%r19, %r13, 5, 2;
	.loc	1 26 23                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:26:23
	or.b32  	%r20, %r3, %r19;
	.loc	1 27 21                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:27:21
	setp.lt.s32 	%p9, %r20, 4;
	.loc	1 31 19                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:31:19
	shr.s32 	%r22, %r17, 31;
	shr.u32 	%r23, %r22, 28;
	add.s32 	%r24, %r17, %r23;
	.loc	1 30 19                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:30:19
	and.b32  	%r25, %r24, -16;
	sub.s32 	%r26, %r17, %r25;
	.loc	1 32 30                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:32:30
	mul.wide.s32 	%rd13, %r2, 8;
	add.s64 	%rd5, %rd11, %rd13;
	mul.wide.s32 	%rd14, %r18, 8;
	add.s64 	%rd9, %rd11, %rd14;
	.loc	1 32 35                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:32:35
	// begin inline asm
	mov.u64 %rd4, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd4 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd6, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd6 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd8, 0x0;
	@%p3 ld.global.L1::evict_last.b64 { %rd8 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 33 38                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:33:38
	shl.b32 	%r27, %r20, 4;
	.loc	1 33 35                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:33:35
	add.s32 	%r28, %r27, %r26;
	.loc	1 33 46                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:33:46
	shl.b32 	%r29, %r24, 2;
	and.b32  	%r30, %r29, -64;
	.loc	1 33 43                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:33:43
	add.s32 	%r31, %r28, %r30;
	.loc	1 33 30                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:33:30
	mul.wide.s32 	%rd15, %r31, 4;
	add.s64 	%rd10, %rd12, %rd15;
	.loc	1 33 59                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:33:59
	and.pred  	%p4, %p7, %p9;
	.loc	1 33 51                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:33:51
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r6, %r7 }, [ %rd10 + 0 ];
	// end inline asm
	shl.b32 	%r32, %r13, 3;
	and.b32  	%r33, %r32, 248;
	or.b32  	%r34, %r33, %r19;
	mov.u32 	%r35, global_smem;
	add.s32 	%r36, %r35, %r33;
	shl.b32 	%r37, %r34, 2;
	add.s32 	%r8, %r36, %r37;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b32 [ %r8 + 0 ], %r6;
	// end inline asm
	add.s32 	%r10, %r8, 20;
	// begin inline asm
	@%p5 st.shared.b32 [ %r10 + 0 ], %r7;
	// end inline asm
	bar.sync 	0;
	.loc	1 37 32                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:37:32
	shr.u64 	%rd16, %rd8, 61;
	and.b64  	%rd17, %rd16, 4;
	add.s64 	%rd18, %rd17, %rd8;
	.loc	1 38 37                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:38:37
	setp.lt.u64 	%p10, %rd18, 4;
	.loc	1 38 60                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:38:60
	or.pred  	%p11, %p8, %p10;
	@%p11 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 60                          // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:0:60
	ld.param.u64 	%rd3, [triton_poi_fused_clone_mul_pow_sub_4_param_3];
	ld.param.u64 	%rd2, [triton_poi_fused_clone_mul_pow_sub_4_param_1];
	.loc	1 37 32                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:37:32
	shr.u64 	%rd21, %rd6, 61;
	and.b64  	%rd22, %rd21, 4;
	add.s64 	%rd23, %rd22, %rd6;
	.loc	1 33 51                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:33:51
	and.b32  	%r42, %r1, 254;
	and.b32  	%r43, %r1, 252;
	add.s32 	%r45, %r35, %r43;
	shl.b32 	%r46, %r42, 2;
	add.s32 	%r47, %r45, %r46;
	ld.shared.f32 	%f1, [%r47+4];
	ld.shared.f32 	%f2, [%r47];
	.loc	1 23 44                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:23:44
	and.b32  	%r48, %r1, 2;
	.loc	1 26 23                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:26:23
	or.b32  	%r49, %r3, %r48;
	.loc	1 27 21                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:27:21
	setp.lt.s32 	%p15, %r49, 4;
	.loc	1 33 59                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:33:59
	and.pred  	%p12, %p2, %p15;
	.loc	1 38 60                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:38:60
	bar.sync 	0;
	.loc	1 39 30                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:39:30
	shl.b64 	%rd24, %rd23, 4;
	add.s64 	%rd25, %rd2, %rd24;
	mul.wide.s32 	%rd26, %r49, 4;
	add.s64 	%rd19, %rd25, %rd26;
	.loc	1 39 44                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:39:44
	// begin inline asm
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	@%p12 ld.global.v2.b32 { %r38, %r39 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r38;
	mov.b32 	%f4, %r39;
	.loc	1 40 18                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:40:18
	sub.f32 	%f5, %f3, %f2;
	sub.f32 	%f6, %f4, %f1;
	.loc	1 42 19                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:42:19
	add.f32 	%f7, %f5, %f5;
	add.f32 	%f8, %f6, %f6;
	.loc	1 43 32                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:43:32
	shl.b32 	%r50, %r2, 2;
	.loc	1 43 30                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:43:30
	add.s32 	%r51, %r49, %r50;
	.loc	1 43 25                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:43:25
	mul.wide.s32 	%rd27, %r51, 4;
	add.s64 	%rd20, %rd3, %rd27;
	.loc	1 43 44                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:43:44
	mov.b32 	%r40, %f7;
	mov.b32 	%r41, %f8;
	// begin inline asm
	@%p12 st.global.v2.b32 [ %rd20 + 0 ], { %r40, %r41 };
	// end inline asm
	.loc	1 43 4                          // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:43:4
	ret;
$L__BB0_1:
	.loc	1 38 60                         // cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py:38:60
	mov.u64 	%rd28, assertMessage_0;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, assertFile_0;
	cvta.global.u64 	%rd31, %rd30;
	mov.u64 	%rd32, assertFunc_0;
	cvta.global.u64 	%rd33, %rd32;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd29;
	.param .b64 param1;
	st.param.b64 	[param1], %rd31;
	.param .b32 param2;
	st.param.b32 	[param2], 38;
	.param .b64 param3;
	st.param.b64 	[param3], %rd33;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/wr/cwr6wkbzak7jyvcodbfs7auiyyrcs3odgn6snuxwmszk3svk35oy.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 114
.b8 54
.b8 119
.b8 107
.b8 98
.b8 122
.b8 97
.b8 107
.b8 55
.b8 106
.b8 121
.b8 118
.b8 99
.b8 111
.b8 100
.b8 98
.b8 102
.b8 115
.b8 55
.b8 97
.b8 117
.b8 105
.b8 121
.b8 121
.b8 114
.b8 99
.b8 115
.b8 51
.b8 111
.b8 100
.b8 103
.b8 110
.b8 54
.b8 115
.b8 110
.b8 117
.b8 120
.b8 119
.b8 109
.b8 115
.b8 122
.b8 107
.b8 51
.b8 115
.b8 118
.b8 107
.b8 51
.b8 53
.b8 111
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 114
.b8 0
	}
	.section	.debug_macinfo	{	}
