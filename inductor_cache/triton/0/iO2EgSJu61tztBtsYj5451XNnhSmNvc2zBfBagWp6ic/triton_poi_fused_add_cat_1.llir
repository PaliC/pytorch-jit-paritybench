; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_cat_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = or disjoint i32 %11, 1, !dbg !13
  %13 = icmp slt i32 %11, 272, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %14 = sdiv i32 %.frozen, 17, !dbg !15
  %15 = mul i32 %14, 17, !dbg !16
  %.decomposed = sub i32 %.frozen, %15, !dbg !16
  %.frozen1 = freeze i32 %12, !dbg !15
  %16 = sdiv i32 %.frozen1, 17, !dbg !15
  %17 = mul i32 %16, 17, !dbg !16
  %.decomposed2 = sub i32 %.frozen1, %17, !dbg !16
  %18 = srem i32 %11, 68, !dbg !17
  %19 = sext i32 %18 to i64, !dbg !18
  %20 = getelementptr float, ptr addrspace(1) %2, i64 %19, !dbg !18
  %21 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %20, i1 %13) #1, !dbg !19
  %22 = extractvalue { i32, i32 } %21, 0, !dbg !19
  %23 = extractvalue { i32, i32 } %21, 1, !dbg !19
  %24 = bitcast i32 %22 to float, !dbg !19
  %25 = bitcast i32 %23 to float, !dbg !19
  %26 = icmp slt i32 %.decomposed, 1, !dbg !20
  %27 = icmp slt i32 %.decomposed2, 1, !dbg !20
  %28 = sext i32 %14 to i64, !dbg !21
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !21
  %30 = sext i32 %16 to i64, !dbg !21
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !21
  %32 = and i1 %13, %26, !dbg !22
  %33 = and i1 %27, %13, !dbg !22
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %32, i32 0, i1 %32) #1, !dbg !23
  %35 = bitcast i32 %34 to float, !dbg !23
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %33, i32 0, i1 %33) #1, !dbg !23
  %37 = bitcast i32 %36 to float, !dbg !23
  %38 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %35, float 1.600000e+01) #1, !dbg !24
  %39 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %37, float 1.600000e+01) #1, !dbg !24
  %40 = icmp sgt i32 %.decomposed, 0, !dbg !25
  %41 = icmp sgt i32 %.decomposed2, 0, !dbg !25
  %42 = shl nsw i32 %14, 4, !dbg !26
  %43 = shl nsw i32 %16, 4, !dbg !26
  %44 = add nsw i32 %.decomposed, -1, !dbg !27
  %45 = add nsw i32 %.decomposed2, -1, !dbg !27
  %46 = add nsw i32 %44, %42, !dbg !28
  %47 = add nsw i32 %45, %43, !dbg !28
  %48 = sext i32 %46 to i64, !dbg !29
  %49 = getelementptr float, ptr addrspace(1) %1, i64 %48, !dbg !29
  %50 = sext i32 %47 to i64, !dbg !29
  %51 = getelementptr float, ptr addrspace(1) %1, i64 %50, !dbg !29
  %52 = and i1 %13, %40, !dbg !30
  %53 = and i1 %41, %13, !dbg !30
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %52, i32 0, i1 %52) #1, !dbg !31
  %55 = bitcast i32 %54 to float, !dbg !31
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %53, i32 0, i1 %53) #1, !dbg !31
  %57 = bitcast i32 %56 to float, !dbg !31
  %58 = select i1 %26, float %38, float %55, !dbg !32
  %59 = select i1 %27, float %39, float %57, !dbg !32
  %60 = fadd float %58, %24, !dbg !33
  %61 = fadd float %59, %25, !dbg !33
  %62 = sext i32 %11 to i64, !dbg !34
  %63 = getelementptr float, ptr addrspace(1) %3, i64 %62, !dbg !34
  %64 = bitcast float %60 to i32, !dbg !35
  %65 = bitcast float %61 to i32, !dbg !35
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %64, i32 %65, ptr addrspace(1) %63, i1 %13) #1, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cikeckm72bctsszijw7hqk6jtnkgqhnxrxrhwi6hrmbl7gufkxbo.py", directory: "inductor_cache/ik")
!4 = !{ptr @triton_poi_fused_add_cat_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_cat_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_cat_1", linkageName: "triton_poi_fused_add_cat_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 31, scope: !7)
!19 = !DILocation(line: 28, column: 36, scope: !7)
!20 = !DILocation(line: 33, column: 18, scope: !7)
!21 = !DILocation(line: 34, column: 30, scope: !7)
!22 = !DILocation(line: 34, column: 42, scope: !7)
!23 = !DILocation(line: 34, column: 35, scope: !7)
!24 = !DILocation(line: 36, column: 18, scope: !7)
!25 = !DILocation(line: 39, column: 20, scope: !7)
!26 = !DILocation(line: 42, column: 34, scope: !7)
!27 = !DILocation(line: 42, column: 47, scope: !7)
!28 = !DILocation(line: 42, column: 40, scope: !7)
!29 = !DILocation(line: 42, column: 31, scope: !7)
!30 = !DILocation(line: 42, column: 61, scope: !7)
!31 = !DILocation(line: 42, column: 53, scope: !7)
!32 = !DILocation(line: 0, scope: !7)
!33 = !DILocation(line: 44, column: 20, scope: !7)
!34 = !DILocation(line: 45, column: 25, scope: !7)
!35 = !DILocation(line: 45, column: 37, scope: !7)
!36 = !DILocation(line: 45, column: 4, scope: !7)
