#loc = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":19:0)
#loc1 = loc(unknown)
#loc61 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":54:44)
#loc96 = loc(callsite(#loc1 at #loc61))
module {
  tt.func public @triton_red_fused_avg_pool2d_native_group_norm_24(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<64x64xf32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<64x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.280000e+02> : tensor<64x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<2.500000e-01> : tensor<64x64xf32> loc(#loc1)
    %cst_4 = arith.constant dense<9> : tensor<1x64xi32> loc(#loc1)
    %cst_5 = arith.constant dense<8> : tensor<1x64xi32> loc(#loc1)
    %cst_6 = arith.constant dense<1> : tensor<1x64xi32> loc(#loc1)
    %cst_7 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc1)
    %cst_8 = arith.constant dense<512> : tensor<64x1xi32> loc(#loc1)
    %cst_9 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %cst_10 = arith.constant dense<2> : tensor<1x64xi32> loc(#loc1)
    %cst_11 = arith.constant dense<4> : tensor<1x64xi32> loc(#loc1)
    %cst_12 = arith.constant dense<128> : tensor<1x64xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_13 = arith.constant dense<128> : tensor<64x1xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<64x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_13 : tensor<64x1xi32> loc(#loc7)
    %7 = tt.expand_dims %2 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc8)
    %8 = arith.muli %5, %cst_8 : tensor<64x1xi32> loc(#loc9)
    %9 = tt.broadcast %8 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc11)
    %11 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc12)
    %12 = arith.muli %5, %cst_13 : tensor<64x1xi32> loc(#loc13)
    %13 = tt.broadcast %12 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc14)
    %14 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc15)
    %15:3 = scf.for %arg7 = %c0_i32 to %c128_i32 step %c64_i32 iter_args(%arg8 = %cst_7, %arg9 = %cst_7, %arg10 = %cst_7) -> (tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32>)  : i32 {
      %28 = tt.splat %arg7 : i32 -> tensor<1x64xi32> loc(#loc17)
      %29 = arith.addi %28, %7 : tensor<1x64xi32> loc(#loc17)
      %30 = arith.cmpi slt, %29, %cst_12 : tensor<1x64xi32> loc(#loc18)
      %31 = arith.remsi %29, %cst_11 : tensor<1x64xi32> loc(#loc19)
      %32 = arith.divsi %29, %cst_11 : tensor<1x64xi32> loc(#loc20)
      %33 = arith.muli %31, %cst_10 : tensor<1x64xi32> loc(#loc21)
      %34 = arith.muli %32, %cst_9 : tensor<1x64xi32> loc(#loc22)
      %35 = arith.addi %33, %34 : tensor<1x64xi32> loc(#loc23)
      %36 = tt.broadcast %35 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc10)
      %37 = arith.addi %36, %9 : tensor<64x64xi32> loc(#loc10)
      %38 = tt.addptr %10, %37 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc11)
      %39 = tt.broadcast %30 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc12)
      %40 = arith.andi %39, %11 : tensor<64x64xi1> loc(#loc12)
      %41 = tt.load %38, %40, %cst_7 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc24)
      %42 = arith.addi %33, %cst_6 : tensor<1x64xi32> loc(#loc25)
      %43 = arith.addi %42, %34 : tensor<1x64xi32> loc(#loc26)
      %44 = tt.broadcast %43 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc27)
      %45 = arith.addi %44, %9 : tensor<64x64xi32> loc(#loc27)
      %46 = tt.addptr %10, %45 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc28)
      %47 = tt.load %46, %40, %cst_7 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc29)
      %48 = arith.addi %33, %cst_5 : tensor<1x64xi32> loc(#loc30)
      %49 = arith.addi %48, %34 : tensor<1x64xi32> loc(#loc31)
      %50 = tt.broadcast %49 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc32)
      %51 = arith.addi %50, %9 : tensor<64x64xi32> loc(#loc32)
      %52 = tt.addptr %10, %51 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc33)
      %53 = tt.load %52, %40, %cst_7 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc34)
      %54 = arith.addi %33, %cst_4 : tensor<1x64xi32> loc(#loc35)
      %55 = arith.addi %54, %34 : tensor<1x64xi32> loc(#loc36)
      %56 = tt.broadcast %55 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc37)
      %57 = arith.addi %56, %9 : tensor<64x64xi32> loc(#loc37)
      %58 = tt.addptr %10, %57 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc38)
      %59 = tt.load %58, %40, %cst_7 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc39)
      %60 = arith.addf %47, %41 : tensor<64x64xf32> loc(#loc40)
      %61 = arith.addf %53, %60 : tensor<64x64xf32> loc(#loc41)
      %62 = arith.addf %59, %61 : tensor<64x64xf32> loc(#loc42)
      %63 = arith.mulf %62, %cst_3 : tensor<64x64xf32> loc(#loc43)
      %64 = arith.cmpi eq, %arg7, %c0_i32 : i32 loc(#loc44)
      %65:3 = scf.if %64 -> (tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32>) {
        scf.yield %cst_7, %63, %cst_0 : tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32> loc(#loc87)
      } else {
        %72 = arith.subf %63, %arg8 : tensor<64x64xf32> loc(#loc88)
        %73 = arith.addf %arg10, %cst_0 : tensor<64x64xf32> loc(#loc89)
        %74 = arith.divf %72, %73 : tensor<64x64xf32> loc(#loc90)
        %75 = arith.addf %arg8, %74 : tensor<64x64xf32> loc(#loc91)
        %76 = arith.subf %63, %75 : tensor<64x64xf32> loc(#loc92)
        %77 = arith.mulf %72, %76 : tensor<64x64xf32> loc(#loc93)
        %78 = arith.addf %arg9, %77 : tensor<64x64xf32> loc(#loc94)
        scf.yield %78, %75, %73 : tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32> loc(#loc94)
      } loc(#loc86)
      %66 = arith.select %40, %65#1, %arg8 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc55)
      %67 = arith.select %40, %65#0, %arg9 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc56)
      %68 = arith.select %40, %65#2, %arg10 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc57)
      %69 = tt.broadcast %29 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc14)
      %70 = arith.addi %69, %13 : tensor<64x64xi32> loc(#loc14)
      %71 = tt.addptr %14, %70 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc15)
      tt.store %71, %63, %40 : tensor<64x64x!tt.ptr<f32>> loc(#loc58)
      scf.yield %66, %67, %68 : tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32> loc(#loc59)
    } loc(#loc16)
    %16:3 = "tt.reduce"(%15#0, %15#1, %15#2) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc61)), %arg8: f32 loc(callsite(#loc1 at #loc61)), %arg9: f32 loc(callsite(#loc1 at #loc61)), %arg10: f32 loc(callsite(#loc1 at #loc61)), %arg11: f32 loc(callsite(#loc1 at #loc61)), %arg12: f32 loc(callsite(#loc1 at #loc61))):
      %28 = arith.subf %arg10, %arg7 : f32 loc(#loc109)
      %29 = arith.addf %arg9, %arg12 : f32 loc(#loc110)
      %30 = arith.cmpf oeq, %29, %cst : f32 loc(#loc111)
      %31 = arith.divf %arg12, %29 : f32 loc(#loc112)
      %32 = arith.select %30, %cst, %31 : f32 loc(#loc113)
      %33 = arith.mulf %28, %32 : f32 loc(#loc114)
      %34 = arith.addf %arg7, %33 : f32 loc(#loc115)
      %35 = arith.addf %arg8, %arg11 : f32 loc(#loc116)
      %36 = arith.mulf %28, %28 : f32 loc(#loc117)
      %37 = arith.mulf %36, %arg9 : f32 loc(#loc118)
      %38 = arith.mulf %37, %32 : f32 loc(#loc119)
      %39 = arith.addf %35, %38 : f32 loc(#loc120)
      tt.reduce.return %34, %39, %29 : f32, f32, f32 loc(#loc95)
    }) : (tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32>) -> (tensor<64xf32>, tensor<64xf32>, tensor<64xf32>) loc(#loc95)
    %17 = tt.expand_dims %16#0 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc74)
    %18 = tt.expand_dims %16#1 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc75)
    %19 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>> loc(#loc76)
    %20 = tt.addptr %19, %5 : tensor<64x1x!tt.ptr<f32>>, tensor<64x1xi32> loc(#loc76)
    tt.store %20, %17, %6 : tensor<64x1x!tt.ptr<f32>> loc(#loc77)
    %21 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>> loc(#loc78)
    %22 = tt.addptr %21, %5 : tensor<64x1x!tt.ptr<f32>>, tensor<64x1xi32> loc(#loc78)
    tt.store %22, %18, %6 : tensor<64x1x!tt.ptr<f32>> loc(#loc79)
    %23 = arith.divf %18, %cst_2 : tensor<64x1xf32> loc(#loc80)
    %24 = arith.addf %23, %cst_1 : tensor<64x1xf32> loc(#loc81)
    %25 = tt.extern_elementwise %24 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<64x1xf32>) -> tensor<64x1xf32> loc(#loc82)
    %26 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>> loc(#loc83)
    %27 = tt.addptr %26, %5 : tensor<64x1x!tt.ptr<f32>>, tensor<64x1xi32> loc(#loc83)
    tt.store %27, %25, %6 : tensor<64x1x!tt.ptr<f32>> loc(#loc84)
    tt.return loc(#loc85)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":22:28)
#loc3 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":22:33)
#loc4 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":23:36)
#loc5 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":23:44)
#loc6 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":23:23)
#loc7 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":24:21)
#loc8 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":25:33)
#loc9 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":36:53)
#loc10 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":36:49)
#loc11 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":36:34)
#loc12 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":36:66)
#loc13 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":52:38)
#loc14 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":52:34)
#loc15 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":52:29)
#loc16 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":30:36)
#loc17 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":31:27)
#loc18 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":32:25)
#loc19 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":33:23)
#loc20 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":34:23)
#loc21 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":36:36)
#loc22 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":36:44)
#loc23 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":36:41)
#loc24 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":36:58)
#loc25 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":37:38)
#loc26 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":37:45)
#loc27 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":37:53)
#loc28 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":37:34)
#loc29 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":37:62)
#loc30 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":38:38)
#loc31 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":38:45)
#loc32 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":38:53)
#loc33 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":38:34)
#loc34 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":38:62)
#loc35 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":39:38)
#loc36 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":39:45)
#loc37 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":39:53)
#loc38 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":39:34)
#loc39 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":39:62)
#loc40 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":40:22)
#loc41 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":41:22)
#loc42 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":42:22)
#loc43 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":44:22)
#loc44 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":47:65)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc46 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":47:54)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc55 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":49:62)
#loc56 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":50:58)
#loc57 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":51:66)
#loc58 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":52:49)
#loc59 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":52:8)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc70 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc72 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc73 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc74 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":56:22)
#loc75 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":57:22)
#loc76 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":59:25)
#loc77 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":59:37)
#loc78 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":60:25)
#loc79 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":60:37)
#loc80 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":62:20)
#loc81 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":64:20)
#loc82 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":65:28)
#loc83 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":66:25)
#loc84 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":66:37)
#loc85 = loc("inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py":66:4)
#loc86 = loc(callsite(#loc45 at #loc46))
#loc87 = loc(callsite(#loc47 at #loc46))
#loc88 = loc(callsite(#loc48 at #loc46))
#loc89 = loc(callsite(#loc49 at #loc46))
#loc90 = loc(callsite(#loc50 at #loc46))
#loc91 = loc(callsite(#loc51 at #loc46))
#loc92 = loc(callsite(#loc52 at #loc46))
#loc93 = loc(callsite(#loc53 at #loc46))
#loc94 = loc(callsite(#loc54 at #loc46))
#loc95 = loc(callsite(#loc60 at #loc61))
#loc97 = loc(callsite(#loc62 at #loc60))
#loc98 = loc(callsite(#loc63 at #loc60))
#loc99 = loc(callsite(#loc64 at #loc60))
#loc100 = loc(callsite(#loc65 at #loc60))
#loc101 = loc(callsite(#loc66 at #loc60))
#loc102 = loc(callsite(#loc67 at #loc60))
#loc103 = loc(callsite(#loc68 at #loc60))
#loc104 = loc(callsite(#loc69 at #loc60))
#loc105 = loc(callsite(#loc70 at #loc60))
#loc106 = loc(callsite(#loc71 at #loc60))
#loc107 = loc(callsite(#loc72 at #loc60))
#loc108 = loc(callsite(#loc73 at #loc60))
#loc109 = loc(callsite(#loc97 at #loc61))
#loc110 = loc(callsite(#loc98 at #loc61))
#loc111 = loc(callsite(#loc99 at #loc61))
#loc112 = loc(callsite(#loc100 at #loc61))
#loc113 = loc(callsite(#loc101 at #loc61))
#loc114 = loc(callsite(#loc102 at #loc61))
#loc115 = loc(callsite(#loc103 at #loc61))
#loc116 = loc(callsite(#loc104 at #loc61))
#loc117 = loc(callsite(#loc105 at #loc61))
#loc118 = loc(callsite(#loc106 at #loc61))
#loc119 = loc(callsite(#loc107 at #loc61))
#loc120 = loc(callsite(#loc108 at #loc61))
