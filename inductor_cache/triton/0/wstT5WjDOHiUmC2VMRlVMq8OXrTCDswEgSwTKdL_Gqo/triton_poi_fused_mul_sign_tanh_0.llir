; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_mul_sign_tanh_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %12, i1 %10) #3, !dbg !16
  %14 = extractvalue { i32, i32 } %13, 0, !dbg !16
  %15 = extractvalue { i32, i32 } %13, 1, !dbg !16
  %16 = bitcast i32 %14 to float, !dbg !16
  %17 = bitcast i32 %15 to float, !dbg !16
  %18 = fmul float %16, 5.000000e+00, !dbg !17
  %19 = fmul float %17, 5.000000e+00, !dbg !17
  %20 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not.i = icmp eq i32 %20, 0, !dbg !18
  %21 = tail call float @llvm.nvvm.fabs.ftz.f(float %18) #3, !dbg !18
  %22 = tail call float @llvm.nvvm.fabs.f(float %18) #3, !dbg !18
  %.01.i = select i1 %.not.i, float %22, float %21, !dbg !18
  %23 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !18
  br i1 %23, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !18

__internal_fmad.exit1.i:                          ; preds = %3
  %24 = fmul float %.01.i, 0x4007154760000000, !dbg !18
  %25 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %24) #3, !dbg !18
  %26 = fadd float %25, 1.000000e+00, !dbg !18
  %27 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %26) #4, !dbg !18, !srcloc !19
  %28 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not6.i = icmp eq i32 %28, 0, !dbg !18
  %29 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %27, float -2.000000e+00, float 1.000000e+00) #3, !dbg !18
  %30 = tail call float @llvm.nvvm.fma.rn.f(float %27, float -2.000000e+00, float 1.000000e+00) #3, !dbg !18
  %.03.i = select i1 %.not6.i, float %30, float %29, !dbg !18
  %31 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !18
  %s.0.i = select i1 %31, float 1.000000e+00, float %.03.i, !dbg !18
  %32 = bitcast float %s.0.i to i32, !dbg !18
  %33 = bitcast float %18 to i32, !dbg !18
  %34 = and i32 %33, -2147483648, !dbg !18
  %35 = or i32 %34, %32, !dbg !18
  %36 = bitcast i32 %35 to float, !dbg !18
  br label %__nv_tanhf.exit, !dbg !18

__internal_fmad.exit3.i:                          ; preds = %3
  %37 = fmul float %18, %18, !dbg !18
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not1.i = icmp eq i32 %38, 0, !dbg !18
  %39 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %37, float 0xBFAAC795C0000000) #3, !dbg !18
  %40 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %37, float 0xBFAAC795C0000000) #3, !dbg !18
  %.06.i = select i1 %.not1.i, float %40, float %39, !dbg !18
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not2.i = icmp eq i32 %41, 0, !dbg !18
  %42 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %37, float 0x3FC10B2820000000) #3, !dbg !18
  %43 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %37, float 0x3FC10B2820000000) #3, !dbg !18
  %.05.i = select i1 %.not2.i, float %43, float %42, !dbg !18
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not3.i = icmp eq i32 %44, 0, !dbg !18
  %45 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %37, float 0xBFD5553DA0000000) #3, !dbg !18
  %46 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %37, float 0xBFD5553DA0000000) #3, !dbg !18
  %.0.i = select i1 %.not3.i, float %46, float %45, !dbg !18
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not4.i = icmp eq i32 %47, 0, !dbg !18
  %48 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %37, float 0.000000e+00) #3, !dbg !18
  %49 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %37, float 0.000000e+00) #3, !dbg !18
  %.04.i = select i1 %.not4.i, float %49, float %48, !dbg !18
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not5.i = icmp eq i32 %50, 0, !dbg !18
  %51 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %18, float %18) #3, !dbg !18
  %52 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %18, float %18) #3, !dbg !18
  %.02.i = select i1 %.not5.i, float %52, float %51, !dbg !18
  br label %__nv_tanhf.exit, !dbg !18

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %36, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !18
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not.i2 = icmp eq i32 %53, 0, !dbg !18
  %54 = tail call float @llvm.nvvm.fabs.ftz.f(float %19) #3, !dbg !18
  %55 = tail call float @llvm.nvvm.fabs.f(float %19) #3, !dbg !18
  %.01.i3 = select i1 %.not.i2, float %55, float %54, !dbg !18
  %56 = fcmp ult float %.01.i3, 0x3FE3333340000000, !dbg !18
  br i1 %56, label %__internal_fmad.exit3.i9, label %__internal_fmad.exit1.i4, !dbg !18

__internal_fmad.exit1.i4:                         ; preds = %__nv_tanhf.exit
  %57 = fmul float %.01.i3, 0x4007154760000000, !dbg !18
  %58 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %57) #3, !dbg !18
  %59 = fadd float %58, 1.000000e+00, !dbg !18
  %60 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %59) #4, !dbg !18, !srcloc !19
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not6.i5 = icmp eq i32 %61, 0, !dbg !18
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %60, float -2.000000e+00, float 1.000000e+00) #3, !dbg !18
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %60, float -2.000000e+00, float 1.000000e+00) #3, !dbg !18
  %.03.i6 = select i1 %.not6.i5, float %63, float %62, !dbg !18
  %64 = fcmp oge float %.01.i3, 0x4022059680000000, !dbg !18
  %s.0.i7 = select i1 %64, float 1.000000e+00, float %.03.i6, !dbg !18
  %65 = bitcast float %s.0.i7 to i32, !dbg !18
  %66 = bitcast float %19 to i32, !dbg !18
  %67 = and i32 %66, -2147483648, !dbg !18
  %68 = or i32 %67, %65, !dbg !18
  %69 = bitcast i32 %68 to float, !dbg !18
  br label %__nv_tanhf.exit20, !dbg !18

__internal_fmad.exit3.i9:                         ; preds = %__nv_tanhf.exit
  %70 = fmul float %19, %19, !dbg !18
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not1.i10 = icmp eq i32 %71, 0, !dbg !18
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %70, float 0xBFAAC795C0000000) #3, !dbg !18
  %73 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %70, float 0xBFAAC795C0000000) #3, !dbg !18
  %.06.i11 = select i1 %.not1.i10, float %73, float %72, !dbg !18
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not2.i12 = icmp eq i32 %74, 0, !dbg !18
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i11, float %70, float 0x3FC10B2820000000) #3, !dbg !18
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i11, float %70, float 0x3FC10B2820000000) #3, !dbg !18
  %.05.i13 = select i1 %.not2.i12, float %76, float %75, !dbg !18
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not3.i14 = icmp eq i32 %77, 0, !dbg !18
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i13, float %70, float 0xBFD5553DA0000000) #3, !dbg !18
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i13, float %70, float 0xBFD5553DA0000000) #3, !dbg !18
  %.0.i15 = select i1 %.not3.i14, float %79, float %78, !dbg !18
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not4.i16 = icmp eq i32 %80, 0, !dbg !18
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i15, float %70, float 0.000000e+00) #3, !dbg !18
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i15, float %70, float 0.000000e+00) #3, !dbg !18
  %.04.i17 = select i1 %.not4.i16, float %82, float %81, !dbg !18
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !18
  %.not5.i18 = icmp eq i32 %83, 0, !dbg !18
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i17, float %19, float %19) #3, !dbg !18
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i17, float %19, float %19) #3, !dbg !18
  %.02.i19 = select i1 %.not5.i18, float %85, float %84, !dbg !18
  br label %__nv_tanhf.exit20, !dbg !18

__nv_tanhf.exit20:                                ; preds = %__internal_fmad.exit1.i4, %__internal_fmad.exit3.i9
  %s.1.i8 = phi float [ %69, %__internal_fmad.exit1.i4 ], [ %.02.i19, %__internal_fmad.exit3.i9 ], !dbg !18
  %86 = fcmp ogt float %s.1.i, 0.000000e+00, !dbg !20
  %87 = fcmp ogt float %s.1.i8, 0.000000e+00, !dbg !20
  %88 = zext i1 %86 to i8, !dbg !21
  %89 = zext i1 %87 to i8, !dbg !21
  %90 = fcmp olt float %s.1.i, 0.000000e+00, !dbg !22
  %91 = fcmp olt float %s.1.i8, 0.000000e+00, !dbg !22
  %.neg = sext i1 %90 to i8, !dbg !23
  %.neg1 = sext i1 %91 to i8, !dbg !23
  %92 = add nsw i8 %.neg, %88, !dbg !24
  %93 = add nsw i8 %.neg1, %89, !dbg !24
  %94 = sitofp i8 %92 to float, !dbg !25
  %95 = sitofp i8 %93 to float, !dbg !25
  %96 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !26
  %97 = bitcast float %94 to i32, !dbg !27
  %98 = bitcast float %95 to i32, !dbg !27
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %97, i32 %98, ptr addrspace(1) %96, i1 %10) #3, !dbg !27
  ret void, !dbg !28
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cr74wfslr4gqogxeqcf6na5qbjqvfj7f3xjzgnv3y3ykcjupkvwz.py", directory: "inductor_cache/r7")
!4 = !{ptr @triton_poi_fused_mul_sign_tanh_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mul_sign_tanh_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mul_sign_tanh_0", linkageName: "triton_poi_fused_mul_sign_tanh_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 27, column: 18, scope: !7)
!18 = !DILocation(line: 28, column: 26, scope: !7)
!19 = !{i32 21046}
!20 = !DILocation(line: 30, column: 18, scope: !7)
!21 = !DILocation(line: 31, column: 19, scope: !7)
!22 = !DILocation(line: 32, column: 18, scope: !7)
!23 = !DILocation(line: 33, column: 19, scope: !7)
!24 = !DILocation(line: 34, column: 18, scope: !7)
!25 = !DILocation(line: 35, column: 20, scope: !7)
!26 = !DILocation(line: 36, column: 25, scope: !7)
!27 = !DILocation(line: 36, column: 37, scope: !7)
!28 = !DILocation(line: 36, column: 4, scope: !7)
