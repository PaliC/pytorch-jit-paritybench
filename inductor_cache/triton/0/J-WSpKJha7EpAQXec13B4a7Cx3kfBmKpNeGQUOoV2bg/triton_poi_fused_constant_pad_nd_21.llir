; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_constant_pad_nd_21(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = or disjoint i32 %9, 2, !dbg !13
  %12 = or disjoint i32 %9, 3, !dbg !13
  %13 = sdiv i32 %9, 3, !dbg !14
  %14 = sdiv i32 %10, 3, !dbg !14
  %15 = sdiv i32 %11, 3, !dbg !14
  %16 = sdiv i32 %12, 3, !dbg !14
  %17 = sdiv i32 %9, 9, !dbg !15
  %18 = sdiv i32 %10, 9, !dbg !15
  %19 = sdiv i32 %11, 9, !dbg !15
  %20 = sdiv i32 %12, 9, !dbg !15
  %21 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !16
  %22 = insertelement <2 x i32> %21, i32 %13, i64 1, !dbg !16
  %23 = srem <2 x i32> %22, splat (i32 3), !dbg !16
  %24 = icmp sgt <2 x i32> %23, zeroinitializer, !dbg !17
  %25 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !16
  %26 = insertelement <2 x i32> %25, i32 %14, i64 1, !dbg !16
  %27 = srem <2 x i32> %26, splat (i32 3), !dbg !16
  %28 = icmp sgt <2 x i32> %27, zeroinitializer, !dbg !17
  %29 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !16
  %30 = insertelement <2 x i32> %29, i32 %15, i64 1, !dbg !16
  %31 = srem <2 x i32> %30, splat (i32 3), !dbg !16
  %32 = icmp sgt <2 x i32> %31, zeroinitializer, !dbg !17
  %33 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !16
  %34 = insertelement <2 x i32> %33, i32 %16, i64 1, !dbg !16
  %35 = srem <2 x i32> %34, splat (i32 3), !dbg !16
  %36 = icmp sgt <2 x i32> %35, zeroinitializer, !dbg !17
  %shift = shufflevector <2 x i1> %24, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !18
  %37 = and <2 x i1> %24, %shift, !dbg !18
  %38 = extractelement <2 x i1> %37, i64 0, !dbg !18
  %shift1 = shufflevector <2 x i1> %28, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !18
  %39 = and <2 x i1> %28, %shift1, !dbg !18
  %40 = extractelement <2 x i1> %39, i64 0, !dbg !18
  %shift2 = shufflevector <2 x i1> %32, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !18
  %41 = and <2 x i1> %32, %shift2, !dbg !18
  %42 = extractelement <2 x i1> %41, i64 0, !dbg !18
  %shift3 = shufflevector <2 x i1> %36, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !18
  %43 = and <2 x i1> %36, %shift3, !dbg !18
  %44 = extractelement <2 x i1> %43, i64 0, !dbg !18
  %45 = extractelement <2 x i32> %23, i64 0, !dbg !19
  %46 = add nsw i32 %45, -3, !dbg !19
  %47 = extractelement <2 x i32> %27, i64 0, !dbg !19
  %48 = add nsw i32 %47, -3, !dbg !19
  %49 = extractelement <2 x i32> %31, i64 0, !dbg !19
  %50 = add nsw i32 %49, -3, !dbg !19
  %51 = extractelement <2 x i32> %35, i64 0, !dbg !19
  %52 = add nsw i32 %51, -3, !dbg !19
  %53 = extractelement <2 x i32> %23, i64 1, !dbg !20
  %54 = shl nsw i32 %53, 1, !dbg !20
  %55 = extractelement <2 x i32> %27, i64 1, !dbg !20
  %56 = shl nsw i32 %55, 1, !dbg !20
  %57 = extractelement <2 x i32> %31, i64 1, !dbg !20
  %58 = shl nsw i32 %57, 1, !dbg !20
  %59 = extractelement <2 x i32> %35, i64 1, !dbg !20
  %60 = shl nsw i32 %59, 1, !dbg !20
  %61 = shl nsw i32 %17, 2, !dbg !21
  %62 = shl nsw i32 %18, 2, !dbg !21
  %63 = shl nsw i32 %19, 2, !dbg !21
  %64 = shl nsw i32 %20, 2, !dbg !21
  %65 = add nsw i32 %46, %61, !dbg !22
  %66 = add nsw i32 %65, %54, !dbg !23
  %67 = add nsw i32 %48, %62, !dbg !22
  %68 = add nsw i32 %67, %56, !dbg !23
  %69 = add nsw i32 %50, %63, !dbg !22
  %70 = add nsw i32 %69, %58, !dbg !23
  %71 = add nsw i32 %52, %64, !dbg !22
  %72 = add nsw i32 %71, %60, !dbg !23
  %73 = sext i32 %66 to i64, !dbg !24
  %74 = getelementptr float, ptr addrspace(1) %0, i64 %73, !dbg !24
  %75 = sext i32 %68 to i64, !dbg !24
  %76 = getelementptr float, ptr addrspace(1) %0, i64 %75, !dbg !24
  %77 = sext i32 %70 to i64, !dbg !24
  %78 = getelementptr float, ptr addrspace(1) %0, i64 %77, !dbg !24
  %79 = sext i32 %72 to i64, !dbg !24
  %80 = getelementptr float, ptr addrspace(1) %0, i64 %79, !dbg !24
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %74, i1 %38, i32 0, i1 %38) #1, !dbg !25
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %76, i1 %40, i32 0, i1 %40) #1, !dbg !25
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %78, i1 %42, i32 0, i1 %42) #1, !dbg !25
  %84 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %80, i1 %44, i32 0, i1 %44) #1, !dbg !25
  %85 = sext i32 %9 to i64, !dbg !26
  %86 = getelementptr float, ptr addrspace(1) %1, i64 %85, !dbg !26
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %81, i32 %82, i32 %83, i32 %84, ptr addrspace(1) %86, i1 true) #1, !dbg !27
  ret void, !dbg !28
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "coabnjsesv5d23dfvxlmgd4ajn6wclzwh2g3tkt5vtjkbchrbf2n.py", directory: "inductor_cache/oa")
!4 = !{ptr @triton_poi_fused_constant_pad_nd_21, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_constant_pad_nd_21, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_constant_pad_nd_21", linkageName: "triton_poi_fused_constant_pad_nd_21", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 32, column: 19, scope: !7)
!18 = !DILocation(line: 33, column: 18, scope: !7)
!19 = !DILocation(line: 34, column: 37, scope: !7)
!20 = !DILocation(line: 34, column: 44, scope: !7)
!21 = !DILocation(line: 34, column: 51, scope: !7)
!22 = !DILocation(line: 34, column: 42, scope: !7)
!23 = !DILocation(line: 34, column: 49, scope: !7)
!24 = !DILocation(line: 34, column: 30, scope: !7)
!25 = !DILocation(line: 34, column: 56, scope: !7)
!26 = !DILocation(line: 35, column: 25, scope: !7)
!27 = !DILocation(line: 35, column: 36, scope: !7)
!28 = !DILocation(line: 35, column: 4, scope: !7)
