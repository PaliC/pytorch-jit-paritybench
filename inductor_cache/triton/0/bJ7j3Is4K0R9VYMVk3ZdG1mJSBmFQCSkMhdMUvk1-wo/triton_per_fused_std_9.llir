; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_std_9(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %8 = icmp slt i32 %7, 4, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 1, !dbg !12
  %11 = shl i32 %7, 1, !dbg !13
  %12 = or disjoint i32 %11, %10, !dbg !14
  %13 = sext i32 %12 to i64, !dbg !15
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !15
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 %8, i32 0, i1 %8) #2, !dbg !16
  %16 = bitcast i32 %15 to float, !dbg !16
  %17 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !17
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %8, i32 0, i1 %8) #2, !dbg !18
  %19 = bitcast i32 %18 to float, !dbg !18
  %20 = getelementptr float, ptr addrspace(1) %2, i64 %13, !dbg !19
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %8, i32 0, i1 %8) #2, !dbg !20
  %22 = bitcast i32 %21 to float, !dbg !20
  %23 = select i1 %8, float %16, float 0.000000e+00, !dbg !21
  %24 = select i1 %8, float %19, float 0.000000e+00, !dbg !22
  %25 = select i1 %8, float %22, float 0.000000e+00, !dbg !23
  %26 = bitcast float %23 to i32, !dbg !24
  %27 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %26, i32 1, i32 31), !dbg !24
  %28 = bitcast i32 %27 to float, !dbg !24
  %29 = bitcast float %24 to i32, !dbg !24
  %30 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %29, i32 1, i32 31), !dbg !24
  %31 = bitcast i32 %30 to float, !dbg !24
  %32 = bitcast float %25 to i32, !dbg !24
  %33 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %32, i32 1, i32 31), !dbg !24
  %34 = bitcast i32 %33 to float, !dbg !24
  %35 = fsub float %28, %23, !dbg !28
  %36 = fadd float %25, %34, !dbg !30
  %37 = fcmp oeq float %36, 0.000000e+00, !dbg !31
  %38 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %34, float %36) #2, !dbg !32
  %39 = select i1 %37, float 0.000000e+00, float %38, !dbg !33
  %40 = fadd float %24, %31, !dbg !34
  %41 = fmul float %35, %35, !dbg !35
  %42 = fmul float %25, %41, !dbg !36
  %43 = fmul float %42, %39, !dbg !37
  %44 = fadd float %40, %43, !dbg !38
  %45 = sext i32 %7 to i64, !dbg !39
  %46 = getelementptr float, ptr addrspace(1) %3, i64 %45, !dbg !39
  %47 = and i32 %9, 63, !dbg !40
  %48 = icmp eq i32 %47, 0, !dbg !40
  %49 = bitcast float %44 to i32, !dbg !40
  %50 = and i1 %48, %8, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %49, ptr addrspace(1) %46, i1 %50) #2, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cid4egcp7emppqjmeu66anhzusifiv5njqcm6ej5unfjlvkk7npf.py", directory: "inductor_cache/id")
!4 = !{ptr @triton_per_fused_std_9, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_std_9, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_std_9", linkageName: "triton_per_fused_std_9", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 37, scope: !7)
!14 = !DILocation(line: 31, column: 35, scope: !7)
!15 = !DILocation(line: 31, column: 30, scope: !7)
!16 = !DILocation(line: 31, column: 42, scope: !7)
!17 = !DILocation(line: 32, column: 30, scope: !7)
!18 = !DILocation(line: 32, column: 42, scope: !7)
!19 = !DILocation(line: 33, column: 30, scope: !7)
!20 = !DILocation(line: 33, column: 42, scope: !7)
!21 = !DILocation(line: 37, column: 33, scope: !7)
!22 = !DILocation(line: 38, column: 33, scope: !7)
!23 = !DILocation(line: 39, column: 33, scope: !7)
!24 = !DILocation(line: 204, column: 46, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!26 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!27 = !DILocation(line: 40, column: 67, scope: !7)
!28 = !DILocation(line: 192, column: 21, scope: !29, inlinedAt: !27)
!29 = distinct !DILexicalBlockFile(scope: !25, file: !26, discriminator: 0)
!30 = !DILocation(line: 193, column: 28, scope: !29, inlinedAt: !27)
!31 = !DILocation(line: 194, column: 39, scope: !29, inlinedAt: !27)
!32 = !DILocation(line: 194, column: 60, scope: !29, inlinedAt: !27)
!33 = !DILocation(line: 194, column: 49, scope: !29, inlinedAt: !27)
!34 = !DILocation(line: 197, column: 15, scope: !29, inlinedAt: !27)
!35 = !DILocation(line: 197, column: 30, scope: !29, inlinedAt: !27)
!36 = !DILocation(line: 197, column: 38, scope: !29, inlinedAt: !27)
!37 = !DILocation(line: 197, column: 49, scope: !29, inlinedAt: !27)
!38 = !DILocation(line: 197, column: 22, scope: !29, inlinedAt: !27)
!39 = !DILocation(line: 44, column: 25, scope: !7)
!40 = !DILocation(line: 44, column: 37, scope: !7)
!41 = !DILocation(line: 44, column: 4, scope: !7)
