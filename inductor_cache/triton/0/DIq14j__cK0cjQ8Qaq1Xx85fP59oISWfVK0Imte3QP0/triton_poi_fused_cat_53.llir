; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_53(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %12 = shl i32 %11, 7, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = and i32 %13, 127, !dbg !12
  %15 = or disjoint i32 %12, %14, !dbg !13
  %.frozen = freeze i32 %15, !dbg !14
  %16 = sdiv i32 %.frozen, 512, !dbg !14
  %17 = mul i32 %16, 512, !dbg !15
  %.decomposed = sub i32 %.frozen, %17, !dbg !15
  %18 = icmp slt i32 %.decomposed, 128, !dbg !16
  %19 = shl nsw i32 %16, 7, !dbg !17
  %20 = add nsw i32 %19, %.decomposed, !dbg !18
  %21 = sext i32 %20 to i64, !dbg !19
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !19
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %18, i32 0, i1 %18) #1, !dbg !20
  %24 = sext i32 %.decomposed to i64, !dbg !21
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !21
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %18, i32 0, i1 %18) #1, !dbg !22
  %27 = add nsw i32 %.decomposed, -128, !dbg !23
  %28 = icmp ult i32 %27, 256, !dbg !23
  %29 = shl nsw i32 %16, 8, !dbg !24
  %30 = add nsw i32 %29, %27, !dbg !25
  %31 = sext i32 %30 to i64, !dbg !26
  %32 = getelementptr float, ptr addrspace(1) %2, i64 %31, !dbg !26
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %28, i32 0, i1 %28) #1, !dbg !27
  %34 = sext i32 %27 to i64, !dbg !28
  %35 = getelementptr float, ptr addrspace(1) %3, i64 %34, !dbg !28
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %28, i32 0, i1 %28) #1, !dbg !29
  %37 = and i32 %.decomposed, -64, !dbg !30
  %38 = icmp eq i32 %37, 384, !dbg !30
  %39 = shl nsw i32 %16, 6, !dbg !31
  %40 = add nsw i32 %.decomposed, -384, !dbg !32
  %41 = add nsw i32 %39, %40, !dbg !33
  %42 = sext i32 %41 to i64, !dbg !34
  %43 = getelementptr float, ptr addrspace(1) %4, i64 %42, !dbg !34
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %43, i1 %38, i32 0, i1 %38) #1, !dbg !35
  %45 = sext i32 %40 to i64, !dbg !36
  %46 = getelementptr float, ptr addrspace(1) %5, i64 %45, !dbg !36
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %38, i32 0, i1 %38) #1, !dbg !37
  %48 = icmp sgt i32 %.decomposed, 447, !dbg !38
  %49 = add nsw i32 %.decomposed, -448, !dbg !39
  %50 = add nsw i32 %39, %49, !dbg !40
  %51 = sext i32 %50 to i64, !dbg !41
  %52 = getelementptr float, ptr addrspace(1) %6, i64 %51, !dbg !41
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %48, i32 0, i1 %48) #1, !dbg !42
  %54 = sext i32 %49 to i64, !dbg !43
  %55 = getelementptr float, ptr addrspace(1) %7, i64 %54, !dbg !43
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %48, i32 0, i1 %48) #1, !dbg !44
  %57 = insertelement <4 x i32> poison, i32 %53, i64 0, !dbg !42
  %58 = insertelement <4 x i32> %57, i32 %44, i64 1, !dbg !42
  %59 = insertelement <4 x i32> %58, i32 %33, i64 2, !dbg !42
  %60 = insertelement <4 x i32> %59, i32 %23, i64 3, !dbg !42
  %61 = bitcast <4 x i32> %60 to <4 x float>, !dbg !42
  %62 = insertelement <4 x i32> poison, i32 %56, i64 0, !dbg !44
  %63 = insertelement <4 x i32> %62, i32 %47, i64 1, !dbg !44
  %64 = insertelement <4 x i32> %63, i32 %36, i64 2, !dbg !44
  %65 = insertelement <4 x i32> %64, i32 %26, i64 3, !dbg !44
  %66 = bitcast <4 x i32> %65 to <4 x float>, !dbg !44
  %67 = fadd <4 x float> %61, %66, !dbg !45
  %68 = fcmp olt <4 x float> %67, zeroinitializer, !dbg !46
  %69 = extractelement <4 x i1> %68, i64 3, !dbg !50
  %70 = extractelement <4 x float> %67, i64 3, !dbg !50
  %71 = select i1 %69, float 0.000000e+00, float %70, !dbg !50
  %72 = extractelement <4 x i1> %68, i64 2, !dbg !52
  %73 = extractelement <4 x float> %67, i64 2, !dbg !52
  %74 = select i1 %72, float 0.000000e+00, float %73, !dbg !52
  %75 = extractelement <4 x i1> %68, i64 1, !dbg !54
  %76 = extractelement <4 x float> %67, i64 1, !dbg !54
  %77 = select i1 %75, float 0.000000e+00, float %76, !dbg !54
  %78 = extractelement <4 x i1> %68, i64 0, !dbg !56
  %79 = extractelement <4 x float> %67, i64 0, !dbg !56
  %80 = select i1 %78, float 0.000000e+00, float %79, !dbg !56
  %81 = select i1 %48, float %80, float 0.000000e+00, !dbg !57
  %82 = select i1 %38, float %77, float %81, !dbg !58
  %83 = select i1 %28, float %74, float %82, !dbg !58
  %84 = select i1 %18, float %71, float %83, !dbg !58
  %85 = sext i32 %15 to i64, !dbg !59
  %86 = getelementptr float, ptr addrspace(1) %8, i64 %85, !dbg !59
  %87 = bitcast float %84 to i32, !dbg !60
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %87, ptr addrspace(1) %86, i1 true) #1, !dbg !60
  ret void, !dbg !61
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cxbqbn2wm5lfwbfhknyx64kxzzox6qb5opszlibufzl5rgr6r3t7.py", directory: "inductor_cache/xb")
!4 = !{ptr @triton_poi_fused_cat_53, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_53, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_53", linkageName: "triton_poi_fused_cat_53", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 31, column: 18, scope: !7)
!17 = !DILocation(line: 32, column: 34, scope: !7)
!18 = !DILocation(line: 32, column: 40, scope: !7)
!19 = !DILocation(line: 32, column: 30, scope: !7)
!20 = !DILocation(line: 32, column: 46, scope: !7)
!21 = !DILocation(line: 33, column: 30, scope: !7)
!22 = !DILocation(line: 33, column: 35, scope: !7)
!23 = !DILocation(line: 42, column: 20, scope: !7)
!24 = !DILocation(line: 43, column: 35, scope: !7)
!25 = !DILocation(line: 43, column: 41, scope: !7)
!26 = !DILocation(line: 43, column: 31, scope: !7)
!27 = !DILocation(line: 43, column: 56, scope: !7)
!28 = !DILocation(line: 44, column: 31, scope: !7)
!29 = !DILocation(line: 44, column: 45, scope: !7)
!30 = !DILocation(line: 53, column: 20, scope: !7)
!31 = !DILocation(line: 54, column: 34, scope: !7)
!32 = !DILocation(line: 54, column: 49, scope: !7)
!33 = !DILocation(line: 54, column: 40, scope: !7)
!34 = !DILocation(line: 54, column: 31, scope: !7)
!35 = !DILocation(line: 54, column: 55, scope: !7)
!36 = !DILocation(line: 55, column: 31, scope: !7)
!37 = !DILocation(line: 55, column: 45, scope: !7)
!38 = !DILocation(line: 61, column: 20, scope: !7)
!39 = !DILocation(line: 64, column: 49, scope: !7)
!40 = !DILocation(line: 64, column: 40, scope: !7)
!41 = !DILocation(line: 64, column: 31, scope: !7)
!42 = !DILocation(line: 64, column: 55, scope: !7)
!43 = !DILocation(line: 65, column: 31, scope: !7)
!44 = !DILocation(line: 65, column: 45, scope: !7)
!45 = !DILocation(line: 66, column: 20, scope: !7)
!46 = !DILocation(line: 118, column: 15, scope: !47, inlinedAt: !49)
!47 = distinct !DILexicalBlockFile(scope: !7, file: !48, discriminator: 0)
!48 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!49 = !DILocation(line: 68, column: 42, scope: !7)
!50 = !DILocation(line: 121, column: 29, scope: !47, inlinedAt: !51)
!51 = !DILocation(line: 36, column: 40, scope: !7)
!52 = !DILocation(line: 121, column: 29, scope: !47, inlinedAt: !53)
!53 = !DILocation(line: 47, column: 42, scope: !7)
!54 = !DILocation(line: 121, column: 29, scope: !47, inlinedAt: !55)
!55 = !DILocation(line: 58, column: 42, scope: !7)
!56 = !DILocation(line: 121, column: 29, scope: !47, inlinedAt: !49)
!57 = !DILocation(line: 70, column: 35, scope: !7)
!58 = !DILocation(line: 0, scope: !7)
!59 = !DILocation(line: 74, column: 25, scope: !7)
!60 = !DILocation(line: 74, column: 37, scope: !7)
!61 = !DILocation(line: 74, column: 4, scope: !7)
