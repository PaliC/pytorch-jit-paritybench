//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_embedding_mul_pow_sub_12 // -- Begin function triton_poi_fused_embedding_mul_pow_sub_12
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 98, 104, 47, 99, 98, 104, 116, 103, 120, 111, 120, 118, 104, 110, 102, 52, 99, 52, 119, 97, 50, 110, 118, 102, 103, 112, 120, 54, 110, 52, 100, 52, 55, 51, 109, 108, 119, 54, 119, 116, 108, 103, 104, 110, 100, 106, 116, 97, 105, 119, 120, 111, 101, 109, 104, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[38] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 48, 50, 52};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_embedding_mul_pow_sub_12
.visible .entry triton_poi_fused_embedding_mul_pow_sub_12(
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_4,
	.param .u32 triton_poi_fused_embedding_mul_pow_sub_12_param_5,
	.param .u32 triton_poi_fused_embedding_mul_pow_sub_12_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<75>;
	.reg .b32 	%r<209>;
	.reg .f32 	%f<101>;
	.reg .b64 	%rd<137>;
	.loc	1 19 0                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:19:0

// %bb.0:
	ld.param.u64 	%rd61, [triton_poi_fused_embedding_mul_pow_sub_12_param_0];
$L__tmp0:
	.loc	1 22 28                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:22:28
	// begin inline asm
	mov.u32 %r30, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:22:33
	shl.b32 	%r64, %r30, 6;
	ld.param.u64 	%rd62, [triton_poi_fused_embedding_mul_pow_sub_12_param_2];
	.loc	1 23 44                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:23:44
	mov.u32 	%r65, %tid.x;
	ld.param.u64 	%rd63, [triton_poi_fused_embedding_mul_pow_sub_12_param_3];
	shl.b32 	%r2, %r65, 2;
	and.b32  	%r3, %r2, 60;
	bfe.u32 	%r4, %r65, 4, 4;
	or.b32  	%r66, %r4, 16;
	or.b32  	%r67, %r4, 32;
	or.b32  	%r68, %r4, 48;
	and.b32  	%r69, %r65, 63;
	.loc	1 23 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:23:23
	or.b32  	%r70, %r64, %r3;
	or.b32  	%r5, %r64, %r4;
	or.b32  	%r71, %r64, %r69;
	.loc	1 25 28                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:25:28
	// begin inline asm
	mov.u32 %r31, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:25:33
	shl.b32 	%r9, %r31, 6;
	.loc	1 26 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:26:23
	or.b32  	%r72, %r9, %r4;
	or.b32  	%r73, %r9, %r66;
	or.b32  	%r74, %r9, %r67;
	or.b32  	%r75, %r9, %r68;
	.loc	1 27 21                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:27:21
	setp.lt.s32 	%p18, %r72, 64;
	setp.lt.s32 	%p19, %r73, 64;
	setp.lt.s32 	%p20, %r74, 64;
	setp.lt.s32 	%p21, %r75, 64;
	.loc	1 31 19                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:31:19
	bfe.s32 	%r76, %r30, 25, 1;
	shr.u32 	%r77, %r76, 24;
	add.s32 	%r78, %r70, %r77;
	.loc	1 30 19                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:30:19
	and.b32  	%r79, %r78, -256;
	sub.s32 	%r80, %r70, %r79;
	.loc	1 32 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:32:30
	mul.wide.s32 	%rd64, %r5, 8;
	add.s64 	%rd8, %rd61, %rd64;
	cvt.s64.s32 	%rd65, %r64;
	cvt.u64.u32 	%rd66, %r4;
	or.b64  	%rd67, %rd65, %rd66;
	shl.b64 	%rd68, %rd67, 3;
	add.s64 	%rd69, %rd61, %rd68;
	add.s64 	%rd16, %rd69, 128;
	add.s64 	%rd24, %rd69, 256;
	add.s64 	%rd32, %rd69, 384;
	mul.wide.s32 	%rd70, %r71, 8;
	add.s64 	%rd40, %rd61, %rd70;
	mov.pred 	%p17, -1;
	.loc	1 32 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:32:35
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd9, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd9 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd11 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd23 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd25 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd27, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd27 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd29 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd31, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd31 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd33, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd33 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd35, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd35 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd37, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd37 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd39, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd39 }, [ %rd40 + 0 ];
	// end inline asm
	.loc	1 33 39                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:39
	shl.b32 	%r81, %r72, 8;
	shl.b32 	%r82, %r73, 8;
	shl.b32 	%r83, %r74, 8;
	shl.b32 	%r84, %r75, 8;
	.loc	1 33 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:50
	shl.b32 	%r85, %r78, 6;
	and.b32  	%r86, %r85, -16384;
	.loc	1 33 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:35
	add.s32 	%r87, %r86, %r80;
	.loc	1 33 44                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:44
	add.s32 	%r88, %r87, %r81;
	add.s32 	%r89, %r87, %r82;
	add.s32 	%r90, %r87, %r83;
	add.s32 	%r91, %r87, %r84;
	.loc	1 33 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:30
	mul.wide.s32 	%rd71, %r88, 4;
	add.s64 	%rd41, %rd62, %rd71;
	mul.wide.s32 	%rd72, %r89, 4;
	add.s64 	%rd42, %rd62, %rd72;
	mul.wide.s32 	%rd73, %r90, 4;
	add.s64 	%rd43, %rd62, %rd73;
	mul.wide.s32 	%rd74, %r91, 4;
	add.s64 	%rd44, %rd62, %rd74;
	.loc	1 33 55                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:55
	// begin inline asm
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	@%p18 ld.global.L1::evict_last.v4.b32 { %r32, %r33, %r34, %r35 }, [ %rd41 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	@%p19 ld.global.L1::evict_last.v4.b32 { %r36, %r37, %r38, %r39 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	@%p20 ld.global.L1::evict_last.v4.b32 { %r40, %r41, %r42, %r43 }, [ %rd43 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r47, 0x0;
	@%p21 ld.global.L1::evict_last.v4.b32 { %r44, %r45, %r46, %r47 }, [ %rd44 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:34:30
	mul.wide.s32 	%rd75, %r72, 4;
	add.s64 	%rd45, %rd63, %rd75;
	cvt.s64.s32 	%rd76, %r9;
	or.b64  	%rd77, %rd76, %rd66;
	shl.b64 	%rd78, %rd77, 2;
	add.s64 	%rd79, %rd63, %rd78;
	add.s64 	%rd49, %rd79, 64;
	add.s64 	%rd53, %rd79, 128;
	add.s64 	%rd57, %rd79, 192;
	.loc	1 34 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:34:35
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p18 ld.global.L1::evict_last.b32 { %r48 }, [ %rd45 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r49, 0x0;
	@%p18 ld.global.L1::evict_last.b32 { %r49 }, [ %rd45 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r50, 0x0;
	@%p18 ld.global.L1::evict_last.b32 { %r50 }, [ %rd45 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r51, 0x0;
	@%p18 ld.global.L1::evict_last.b32 { %r51 }, [ %rd45 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r52, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r52 }, [ %rd49 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r53, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r53 }, [ %rd49 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r54, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r54 }, [ %rd49 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r55, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r55 }, [ %rd49 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r56, 0x0;
	@%p20 ld.global.L1::evict_last.b32 { %r56 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r57, 0x0;
	@%p20 ld.global.L1::evict_last.b32 { %r57 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r58, 0x0;
	@%p20 ld.global.L1::evict_last.b32 { %r58 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r59, 0x0;
	@%p20 ld.global.L1::evict_last.b32 { %r59 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r60, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r60 }, [ %rd57 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r61, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r61 }, [ %rd57 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r62, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r62 }, [ %rd57 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r63, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r63 }, [ %rd57 + 0 ];
	// end inline asm
	.loc	1 38 32                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:38:32
	shr.u64 	%rd80, %rd39, 53;
	and.b64  	%rd81, %rd80, 1024;
	add.s64 	%rd82, %rd81, %rd39;
	.loc	1 39 36                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:36
	setp.lt.u64 	%p38, %rd82, 1024;
	.loc	1 39 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:50
	@%p38 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 50                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:0:50
	ld.param.u64 	%rd6, [triton_poi_fused_embedding_mul_pow_sub_12_param_4];
	ld.param.u64 	%rd5, [triton_poi_fused_embedding_mul_pow_sub_12_param_1];
	or.b32  	%r6, %r64, %r66;
	or.b32  	%r7, %r64, %r67;
	or.b32  	%r8, %r64, %r68;
	.loc	1 34 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:34:35
	mov.b32 	%f1, %r63;
	mov.b32 	%f2, %r59;
	mov.b32 	%f3, %r55;
	mov.b32 	%f4, %r51;
	.loc	1 33 55                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:55
	mov.b32 	%f5, %r47;
	mov.b32 	%f6, %r46;
	mov.b32 	%f7, %r45;
	mov.b32 	%f8, %r44;
	mov.b32 	%f9, %r43;
	mov.b32 	%f10, %r42;
	mov.b32 	%f11, %r41;
	mov.b32 	%f12, %r40;
	mov.b32 	%f13, %r39;
	mov.b32 	%f14, %r38;
	mov.b32 	%f15, %r37;
	mov.b32 	%f16, %r36;
	mov.b32 	%f17, %r35;
	mov.b32 	%f18, %r34;
	mov.b32 	%f19, %r33;
	mov.b32 	%f20, %r32;
	.loc	1 26 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:26:23
	or.b32  	%r156, %r9, %r3;
	.loc	1 27 21                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:27:21
	setp.lt.s32 	%p39, %r156, 64;
	.loc	1 39 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:50
	bar.sync 	0;
	.loc	1 26 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:26:23
	shl.b32 	%r157, %r156, 10;
	.loc	1 40 42                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:40:42
	or.b32  	%r158, %r157, 1024;
	or.b32  	%r159, %r157, 2048;
	or.b32  	%r160, %r157, 3072;
	.loc	1 40 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:40:30
	shl.b64 	%rd103, %rd13, 2;
	add.s64 	%rd104, %rd5, %rd103;
	shr.u64 	%rd105, %rd13, 51;
	and.b64  	%rd106, %rd105, 4096;
	add.s64 	%rd107, %rd104, %rd106;
	mul.wide.s32 	%rd108, %r157, 4;
	add.s64 	%rd83, %rd107, %rd108;
	mul.wide.s32 	%rd109, %r158, 4;
	add.s64 	%rd84, %rd107, %rd109;
	mul.wide.s32 	%rd110, %r159, 4;
	add.s64 	%rd85, %rd107, %rd110;
	mul.wide.s32 	%rd111, %r160, 4;
	add.s64 	%rd86, %rd107, %rd111;
	shl.b64 	%rd112, %rd21, 2;
	add.s64 	%rd113, %rd5, %rd112;
	shr.u64 	%rd114, %rd21, 51;
	and.b64  	%rd115, %rd114, 4096;
	add.s64 	%rd116, %rd113, %rd115;
	add.s64 	%rd87, %rd116, %rd108;
	add.s64 	%rd88, %rd116, %rd109;
	add.s64 	%rd89, %rd116, %rd110;
	add.s64 	%rd90, %rd116, %rd111;
	shl.b64 	%rd117, %rd29, 2;
	add.s64 	%rd118, %rd5, %rd117;
	shr.u64 	%rd119, %rd29, 51;
	and.b64  	%rd120, %rd119, 4096;
	add.s64 	%rd121, %rd118, %rd120;
	add.s64 	%rd91, %rd121, %rd108;
	add.s64 	%rd92, %rd121, %rd109;
	add.s64 	%rd93, %rd121, %rd110;
	add.s64 	%rd94, %rd121, %rd111;
	shl.b64 	%rd122, %rd37, 2;
	add.s64 	%rd123, %rd5, %rd122;
	shr.u64 	%rd124, %rd37, 51;
	and.b64  	%rd125, %rd124, 4096;
	add.s64 	%rd126, %rd123, %rd125;
	add.s64 	%rd95, %rd126, %rd108;
	add.s64 	%rd96, %rd126, %rd109;
	add.s64 	%rd97, %rd126, %rd110;
	add.s64 	%rd98, %rd126, %rd111;
	.loc	1 40 47                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:40:47
	// begin inline asm
	mov.u32 %r92, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r92 }, [ %rd83 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r92;
	// begin inline asm
	mov.u32 %r93, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r93 }, [ %rd84 + 0 ];
	// end inline asm
	mov.b32 	%f22, %r93;
	// begin inline asm
	mov.u32 %r94, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r94 }, [ %rd85 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r94;
	// begin inline asm
	mov.u32 %r95, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r95 }, [ %rd86 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r95;
	// begin inline asm
	mov.u32 %r96, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r96 }, [ %rd87 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r96;
	// begin inline asm
	mov.u32 %r97, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r97 }, [ %rd88 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r97;
	// begin inline asm
	mov.u32 %r98, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r98 }, [ %rd89 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r98;
	// begin inline asm
	mov.u32 %r99, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r99 }, [ %rd90 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r99;
	// begin inline asm
	mov.u32 %r100, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r100 }, [ %rd91 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r100;
	// begin inline asm
	mov.u32 %r101, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r101 }, [ %rd92 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r101;
	// begin inline asm
	mov.u32 %r102, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r102 }, [ %rd93 + 0 ];
	// end inline asm
	mov.b32 	%f31, %r102;
	// begin inline asm
	mov.u32 %r103, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r103 }, [ %rd94 + 0 ];
	// end inline asm
	mov.b32 	%f32, %r103;
	// begin inline asm
	mov.u32 %r104, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r104 }, [ %rd95 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r104;
	// begin inline asm
	mov.u32 %r105, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r105 }, [ %rd96 + 0 ];
	// end inline asm
	mov.b32 	%f34, %r105;
	// begin inline asm
	mov.u32 %r106, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r106 }, [ %rd97 + 0 ];
	// end inline asm
	mov.b32 	%f35, %r106;
	// begin inline asm
	mov.u32 %r107, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r107 }, [ %rd98 + 0 ];
	// end inline asm
	mov.b32 	%f36, %r107;
	.loc	1 41 18                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:41:18
	add.f32 	%f37, %f20, %f4;
	add.f32 	%f38, %f19, %f4;
	add.f32 	%f39, %f18, %f4;
	add.f32 	%f40, %f17, %f4;
	add.f32 	%f41, %f16, %f3;
	add.f32 	%f42, %f15, %f3;
	add.f32 	%f43, %f14, %f3;
	add.f32 	%f44, %f13, %f3;
	add.f32 	%f45, %f12, %f2;
	add.f32 	%f46, %f11, %f2;
	add.f32 	%f47, %f10, %f2;
	add.f32 	%f48, %f9, %f2;
	add.f32 	%f49, %f8, %f1;
	add.f32 	%f50, %f7, %f1;
	add.f32 	%f51, %f6, %f1;
	add.f32 	%f52, %f5, %f1;
	shl.b32 	%r161, %r65, 8;
	and.b32  	%r162, %r161, 3840;
	or.b32  	%r163, %r162, %r4;
	and.b32  	%r164, %r2, 1020;
	shr.u32 	%r165, %r162, 4;
	mov.u32 	%r166, global_smem;
	add.s32 	%r167, %r166, %r165;
	shl.b32 	%r168, %r163, 2;
	add.s32 	%r108, %r167, %r168;
	mov.b32 	%r109, %f37;
	// begin inline asm
	@%p17 st.shared.b32 [ %r108 + 0 ], %r109;
	// end inline asm
	or.b32  	%r169, %r162, 64;
	shr.u32 	%r170, %r169, 4;
	add.s32 	%r171, %r166, %r170;
	add.s32 	%r172, %r171, %r168;
	add.s32 	%r110, %r172, 256;
	mov.b32 	%r111, %f38;
	// begin inline asm
	@%p17 st.shared.b32 [ %r110 + 0 ], %r111;
	// end inline asm
	or.b32  	%r173, %r162, 128;
	shr.u32 	%r174, %r173, 4;
	add.s32 	%r175, %r166, %r174;
	add.s32 	%r176, %r175, %r168;
	add.s32 	%r112, %r176, 512;
	mov.b32 	%r113, %f39;
	// begin inline asm
	@%p17 st.shared.b32 [ %r112 + 0 ], %r113;
	// end inline asm
	or.b32  	%r177, %r162, 192;
	shr.u32 	%r178, %r177, 4;
	add.s32 	%r179, %r166, %r178;
	add.s32 	%r180, %r179, %r168;
	add.s32 	%r114, %r180, 768;
	mov.b32 	%r115, %f40;
	// begin inline asm
	@%p17 st.shared.b32 [ %r114 + 0 ], %r115;
	// end inline asm
	add.s32 	%r116, %r108, 64;
	mov.b32 	%r117, %f41;
	// begin inline asm
	@%p17 st.shared.b32 [ %r116 + 0 ], %r117;
	// end inline asm
	add.s32 	%r118, %r172, 320;
	mov.b32 	%r119, %f42;
	// begin inline asm
	@%p17 st.shared.b32 [ %r118 + 0 ], %r119;
	// end inline asm
	add.s32 	%r120, %r176, 576;
	mov.b32 	%r121, %f43;
	// begin inline asm
	@%p17 st.shared.b32 [ %r120 + 0 ], %r121;
	// end inline asm
	add.s32 	%r122, %r180, 832;
	mov.b32 	%r123, %f44;
	// begin inline asm
	@%p17 st.shared.b32 [ %r122 + 0 ], %r123;
	// end inline asm
	add.s32 	%r124, %r108, 128;
	mov.b32 	%r125, %f45;
	// begin inline asm
	@%p17 st.shared.b32 [ %r124 + 0 ], %r125;
	// end inline asm
	add.s32 	%r126, %r172, 384;
	mov.b32 	%r127, %f46;
	// begin inline asm
	@%p17 st.shared.b32 [ %r126 + 0 ], %r127;
	// end inline asm
	add.s32 	%r128, %r176, 640;
	mov.b32 	%r129, %f47;
	// begin inline asm
	@%p17 st.shared.b32 [ %r128 + 0 ], %r129;
	// end inline asm
	add.s32 	%r130, %r180, 896;
	mov.b32 	%r131, %f48;
	// begin inline asm
	@%p17 st.shared.b32 [ %r130 + 0 ], %r131;
	// end inline asm
	add.s32 	%r132, %r108, 192;
	mov.b32 	%r133, %f49;
	// begin inline asm
	@%p17 st.shared.b32 [ %r132 + 0 ], %r133;
	// end inline asm
	add.s32 	%r134, %r172, 448;
	mov.b32 	%r135, %f50;
	// begin inline asm
	@%p17 st.shared.b32 [ %r134 + 0 ], %r135;
	// end inline asm
	add.s32 	%r136, %r176, 704;
	mov.b32 	%r137, %f51;
	// begin inline asm
	@%p17 st.shared.b32 [ %r136 + 0 ], %r137;
	// end inline asm
	add.s32 	%r138, %r180, 960;
	mov.b32 	%r139, %f52;
	// begin inline asm
	@%p17 st.shared.b32 [ %r138 + 0 ], %r139;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r181, %r2, 4;
	and.b32  	%r182, %r181, 60;
	add.s32 	%r183, %r166, %r182;
	shl.b32 	%r184, %r164, 2;
	add.s32 	%r185, %r183, %r184;
	ld.shared.f32 	%f53, [%r185];
	ld.shared.f32 	%f54, [%r185+4];
	ld.shared.f32 	%f55, [%r185+8];
	ld.shared.f32 	%f56, [%r185+12];
	or.b32  	%r186, %r164, 1024;
	shr.u32 	%r187, %r186, 4;
	and.b32  	%r188, %r187, 124;
	add.s32 	%r189, %r166, %r188;
	add.s32 	%r190, %r189, %r184;
	ld.shared.f32 	%f57, [%r190+4096];
	ld.shared.f32 	%f58, [%r190+4100];
	ld.shared.f32 	%f59, [%r190+4104];
	ld.shared.f32 	%f60, [%r190+4108];
	or.b32  	%r191, %r164, 2048;
	shr.u32 	%r192, %r191, 4;
	and.b32  	%r193, %r192, 188;
	add.s32 	%r194, %r166, %r193;
	add.s32 	%r195, %r194, %r184;
	ld.shared.f32 	%f61, [%r195+8192];
	ld.shared.f32 	%f62, [%r195+8196];
	ld.shared.f32 	%f63, [%r195+8200];
	ld.shared.f32 	%f64, [%r195+8204];
	or.b32  	%r196, %r164, 3072;
	shr.u32 	%r197, %r196, 4;
	and.b32  	%r198, %r197, 252;
	add.s32 	%r199, %r166, %r198;
	add.s32 	%r200, %r199, %r184;
	ld.shared.f32 	%f65, [%r200+12288];
	ld.shared.f32 	%f66, [%r200+12292];
	ld.shared.f32 	%f67, [%r200+12296];
	ld.shared.f32 	%f68, [%r200+12300];
	.loc	1 42 19                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:42:19
	sub.f32 	%f69, %f21, %f53;
	sub.f32 	%f70, %f22, %f54;
	sub.f32 	%f71, %f23, %f55;
	sub.f32 	%f72, %f24, %f56;
	sub.f32 	%f73, %f25, %f57;
	sub.f32 	%f74, %f26, %f58;
	sub.f32 	%f75, %f27, %f59;
	sub.f32 	%f76, %f28, %f60;
	sub.f32 	%f77, %f29, %f61;
	sub.f32 	%f78, %f30, %f62;
	sub.f32 	%f79, %f31, %f63;
	sub.f32 	%f80, %f32, %f64;
	sub.f32 	%f81, %f33, %f65;
	sub.f32 	%f82, %f34, %f66;
	sub.f32 	%f83, %f35, %f67;
	sub.f32 	%f84, %f36, %f68;
	.loc	1 44 20                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:44:20
	add.f32 	%f85, %f69, %f69;
	add.f32 	%f86, %f70, %f70;
	add.f32 	%f87, %f71, %f71;
	add.f32 	%f88, %f72, %f72;
	add.f32 	%f89, %f73, %f73;
	add.f32 	%f90, %f74, %f74;
	add.f32 	%f91, %f75, %f75;
	add.f32 	%f92, %f76, %f76;
	add.f32 	%f93, %f77, %f77;
	add.f32 	%f94, %f78, %f78;
	add.f32 	%f95, %f79, %f79;
	add.f32 	%f96, %f80, %f80;
	add.f32 	%f97, %f81, %f81;
	add.f32 	%f98, %f82, %f82;
	add.f32 	%f99, %f83, %f83;
	add.f32 	%f100, %f84, %f84;
	.loc	1 45 33                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:33
	shl.b32 	%r201, %r5, 6;
	shl.b32 	%r202, %r6, 6;
	shl.b32 	%r203, %r7, 6;
	shl.b32 	%r204, %r8, 6;
	.loc	1 45 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:30
	add.s32 	%r205, %r156, %r201;
	add.s32 	%r206, %r156, %r202;
	add.s32 	%r207, %r156, %r203;
	add.s32 	%r208, %r156, %r204;
	.loc	1 45 25                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:25
	mul.wide.s32 	%rd127, %r205, 4;
	add.s64 	%rd99, %rd6, %rd127;
	mul.wide.s32 	%rd128, %r206, 4;
	add.s64 	%rd100, %rd6, %rd128;
	mul.wide.s32 	%rd129, %r207, 4;
	add.s64 	%rd101, %rd6, %rd129;
	mul.wide.s32 	%rd130, %r208, 4;
	add.s64 	%rd102, %rd6, %rd130;
	.loc	1 45 45                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:45
	mov.b32 	%r140, %f85;
	mov.b32 	%r141, %f86;
	mov.b32 	%r142, %f87;
	mov.b32 	%r143, %f88;
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd99 + 0 ], { %r140, %r141, %r142, %r143 };
	// end inline asm
	mov.b32 	%r144, %f89;
	mov.b32 	%r145, %f90;
	mov.b32 	%r146, %f91;
	mov.b32 	%r147, %f92;
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd100 + 0 ], { %r144, %r145, %r146, %r147 };
	// end inline asm
	mov.b32 	%r148, %f93;
	mov.b32 	%r149, %f94;
	mov.b32 	%r150, %f95;
	mov.b32 	%r151, %f96;
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd101 + 0 ], { %r148, %r149, %r150, %r151 };
	// end inline asm
	mov.b32 	%r152, %f97;
	mov.b32 	%r153, %f98;
	mov.b32 	%r154, %f99;
	mov.b32 	%r155, %f100;
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd102 + 0 ], { %r152, %r153, %r154, %r155 };
	// end inline asm
	.loc	1 45 4                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:4
	ret;
$L__BB0_1:
	.loc	1 39 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:50
	mov.u64 	%rd131, assertMessage_0;
	cvta.global.u64 	%rd132, %rd131;
	mov.u64 	%rd133, assertFile_0;
	cvta.global.u64 	%rd134, %rd133;
	mov.u64 	%rd135, assertFunc_0;
	cvta.global.u64 	%rd136, %rd135;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd132;
	.param .b64 param1;
	st.param.b64 	[param1], %rd134;
	.param .b32 param2;
	st.param.b32 	[param2], 39;
	.param .b64 param3;
	st.param.b64 	[param3], %rd136;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bh/cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 104
.b8 116
.b8 103
.b8 120
.b8 111
.b8 120
.b8 118
.b8 104
.b8 110
.b8 102
.b8 52
.b8 99
.b8 52
.b8 119
.b8 97
.b8 50
.b8 110
.b8 118
.b8 102
.b8 103
.b8 112
.b8 120
.b8 54
.b8 110
.b8 52
.b8 100
.b8 52
.b8 55
.b8 51
.b8 109
.b8 108
.b8 119
.b8 54
.b8 119
.b8 116
.b8 108
.b8 103
.b8 104
.b8 110
.b8 100
.b8 106
.b8 116
.b8 97
.b8 105
.b8 119
.b8 120
.b8 111
.b8 101
.b8 109
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 104
.b8 0
	}
	.section	.debug_macinfo	{	}
