; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_avg_pool2d_34(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 510, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = srem i32 %9, 2048, !dbg !14
  %11 = sdiv i32 %9, 32768, !dbg !15
  %12 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !16
  %13 = shufflevector <2 x i32> %12, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !16
  %14 = sdiv <2 x i32> %13, <i32 2048, i32 8192>, !dbg !16
  %15 = srem <2 x i32> %14, splat (i32 4), !dbg !17
  %16 = mul nsw <2 x i32> %15, <i32 4096, i32 36864>, !dbg !18
  %17 = mul i32 %11, 165888, !dbg !19
  %18 = add i32 %17, %10, !dbg !20
  %19 = extractelement <2 x i32> %16, i64 0, !dbg !21
  %20 = add i32 %18, %19, !dbg !22
  %21 = extractelement <2 x i32> %16, i64 1, !dbg !23
  %22 = add i32 %20, %21, !dbg !24
  %23 = sext i32 %22 to i64, !dbg !25
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !25
  %25 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %24, i1 true) #1, !dbg !26
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !26
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !26
  %28 = bitcast i32 %26 to float, !dbg !26
  %29 = bitcast i32 %27 to float, !dbg !26
  %30 = add i32 %18, 2048, !dbg !27
  %31 = add i32 %30, %19, !dbg !28
  %32 = add i32 %31, %21, !dbg !29
  %33 = sext i32 %32 to i64, !dbg !30
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !30
  %35 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %34, i1 true) #1, !dbg !31
  %36 = extractvalue { i32, i32 } %35, 0, !dbg !31
  %37 = extractvalue { i32, i32 } %35, 1, !dbg !31
  %38 = bitcast i32 %36 to float, !dbg !31
  %39 = bitcast i32 %37 to float, !dbg !31
  %40 = add i32 %18, 18432, !dbg !32
  %41 = add i32 %40, %19, !dbg !33
  %42 = add i32 %41, %21, !dbg !34
  %43 = sext i32 %42 to i64, !dbg !35
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !35
  %45 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %44, i1 true) #1, !dbg !36
  %46 = extractvalue { i32, i32 } %45, 0, !dbg !36
  %47 = extractvalue { i32, i32 } %45, 1, !dbg !36
  %48 = bitcast i32 %46 to float, !dbg !36
  %49 = bitcast i32 %47 to float, !dbg !36
  %50 = add i32 %18, 20480, !dbg !37
  %51 = add i32 %50, %19, !dbg !21
  %52 = add i32 %51, %21, !dbg !23
  %53 = sext i32 %52 to i64, !dbg !38
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !38
  %55 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %54, i1 true) #1, !dbg !39
  %56 = extractvalue { i32, i32 } %55, 0, !dbg !39
  %57 = extractvalue { i32, i32 } %55, 1, !dbg !39
  %58 = bitcast i32 %56 to float, !dbg !39
  %59 = bitcast i32 %57 to float, !dbg !39
  %60 = fadd float %28, %38, !dbg !40
  %61 = fadd float %29, %39, !dbg !40
  %62 = fadd float %60, %48, !dbg !41
  %63 = fadd float %61, %49, !dbg !41
  %64 = fadd float %62, %58, !dbg !42
  %65 = fadd float %63, %59, !dbg !42
  %66 = fmul float %64, 2.500000e-01, !dbg !43
  %67 = fmul float %65, 2.500000e-01, !dbg !43
  %68 = sext i32 %9 to i64, !dbg !44
  %69 = getelementptr float, ptr addrspace(1) %1, i64 %68, !dbg !44
  %70 = bitcast float %66 to i32, !dbg !45
  %71 = bitcast float %67 to i32, !dbg !45
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %70, i32 %71, ptr addrspace(1) %69, i1 true) #1, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "clcrt6oqkhrneutnyhvirsa6j6vmgnbtd3uy4nrmwch7cfihoweb.py", directory: "inductor_cache/lc")
!4 = !{ptr @triton_poi_fused_avg_pool2d_34, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_34, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_34", linkageName: "triton_poi_fused_avg_pool2d_34", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 19, scope: !7)
!15 = !DILocation(line: 27, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 21, scope: !7)
!17 = !DILocation(line: 25, column: 29, scope: !7)
!18 = !DILocation(line: 29, column: 40, scope: !7)
!19 = !DILocation(line: 29, column: 63, scope: !7)
!20 = !DILocation(line: 29, column: 35, scope: !7)
!21 = !DILocation(line: 32, column: 53, scope: !7)
!22 = !DILocation(line: 29, column: 45, scope: !7)
!23 = !DILocation(line: 32, column: 64, scope: !7)
!24 = !DILocation(line: 29, column: 56, scope: !7)
!25 = !DILocation(line: 29, column: 30, scope: !7)
!26 = !DILocation(line: 29, column: 68, scope: !7)
!27 = !DILocation(line: 30, column: 42, scope: !7)
!28 = !DILocation(line: 30, column: 52, scope: !7)
!29 = !DILocation(line: 30, column: 63, scope: !7)
!30 = !DILocation(line: 30, column: 30, scope: !7)
!31 = !DILocation(line: 30, column: 75, scope: !7)
!32 = !DILocation(line: 31, column: 43, scope: !7)
!33 = !DILocation(line: 31, column: 53, scope: !7)
!34 = !DILocation(line: 31, column: 64, scope: !7)
!35 = !DILocation(line: 31, column: 30, scope: !7)
!36 = !DILocation(line: 31, column: 76, scope: !7)
!37 = !DILocation(line: 32, column: 43, scope: !7)
!38 = !DILocation(line: 32, column: 30, scope: !7)
!39 = !DILocation(line: 32, column: 76, scope: !7)
!40 = !DILocation(line: 33, column: 18, scope: !7)
!41 = !DILocation(line: 34, column: 18, scope: !7)
!42 = !DILocation(line: 35, column: 18, scope: !7)
!43 = !DILocation(line: 37, column: 18, scope: !7)
!44 = !DILocation(line: 38, column: 25, scope: !7)
!45 = !DILocation(line: 38, column: 36, scope: !7)
!46 = !DILocation(line: 38, column: 4, scope: !7)
