; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_convolution_mul_pow_sub_tanh_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %7 = shl i32 %6, 9, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 2, !dbg !12
  %10 = and i32 %9, 508, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = sdiv i32 %11, 4096, !dbg !14
  %13 = srem i32 %12, 3, !dbg !15
  %14 = sext i32 %11 to i64, !dbg !16
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !16
  %16 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %15, i1 true) #3, !dbg !17
  %17 = extractvalue { i32, i32, i32, i32 } %16, 0, !dbg !17
  %18 = extractvalue { i32, i32, i32, i32 } %16, 1, !dbg !17
  %19 = extractvalue { i32, i32, i32, i32 } %16, 2, !dbg !17
  %20 = extractvalue { i32, i32, i32, i32 } %16, 3, !dbg !17
  %21 = bitcast i32 %17 to float, !dbg !17
  %22 = bitcast i32 %18 to float, !dbg !17
  %23 = bitcast i32 %19 to float, !dbg !17
  %24 = bitcast i32 %20 to float, !dbg !17
  %25 = sext i32 %13 to i64, !dbg !18
  %26 = getelementptr float, ptr addrspace(1) %2, i64 %25, !dbg !18
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #3, !dbg !19
  %28 = bitcast i32 %27 to float, !dbg !19
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #3, !dbg !19
  %30 = bitcast i32 %29 to float, !dbg !19
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #3, !dbg !19
  %32 = bitcast i32 %31 to float, !dbg !19
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #3, !dbg !19
  %34 = bitcast i32 %33 to float, !dbg !19
  %35 = getelementptr float, ptr addrspace(1) %3, i64 %14, !dbg !20
  %36 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %35, i1 true) #3, !dbg !21
  %37 = fadd float %21, %28, !dbg !22
  %38 = fadd float %22, %30, !dbg !22
  %39 = fadd float %23, %32, !dbg !22
  %40 = fadd float %24, %34, !dbg !22
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not.i = icmp eq i32 %41, 0, !dbg !23
  %42 = tail call float @llvm.nvvm.fabs.ftz.f(float %37) #3, !dbg !23
  %43 = tail call float @llvm.nvvm.fabs.f(float %37) #3, !dbg !23
  %.01.i = select i1 %.not.i, float %43, float %42, !dbg !23
  %44 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !23
  br i1 %44, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !23

__internal_fmad.exit1.i:                          ; preds = %5
  %45 = fmul float %.01.i, 0x4007154760000000, !dbg !23
  %46 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %45) #3, !dbg !23
  %47 = fadd float %46, 1.000000e+00, !dbg !23
  %48 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %47) #4, !dbg !23, !srcloc !24
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not6.i = icmp eq i32 %49, 0, !dbg !23
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %48, float -2.000000e+00, float 1.000000e+00) #3, !dbg !23
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %48, float -2.000000e+00, float 1.000000e+00) #3, !dbg !23
  %.03.i = select i1 %.not6.i, float %51, float %50, !dbg !23
  %52 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !23
  %s.0.i = select i1 %52, float 1.000000e+00, float %.03.i, !dbg !23
  %53 = bitcast float %s.0.i to i32, !dbg !23
  %54 = bitcast float %37 to i32, !dbg !23
  %55 = and i32 %54, -2147483648, !dbg !23
  %56 = or i32 %55, %53, !dbg !23
  %57 = bitcast i32 %56 to float, !dbg !23
  br label %__nv_tanhf.exit, !dbg !23

__internal_fmad.exit3.i:                          ; preds = %5
  %58 = fmul float %37, %37, !dbg !23
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not1.i = icmp eq i32 %59, 0, !dbg !23
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %58, float 0xBFAAC795C0000000) #3, !dbg !23
  %61 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %58, float 0xBFAAC795C0000000) #3, !dbg !23
  %.06.i = select i1 %.not1.i, float %61, float %60, !dbg !23
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not2.i = icmp eq i32 %62, 0, !dbg !23
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %58, float 0x3FC10B2820000000) #3, !dbg !23
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %58, float 0x3FC10B2820000000) #3, !dbg !23
  %.05.i = select i1 %.not2.i, float %64, float %63, !dbg !23
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not3.i = icmp eq i32 %65, 0, !dbg !23
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %58, float 0xBFD5553DA0000000) #3, !dbg !23
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %58, float 0xBFD5553DA0000000) #3, !dbg !23
  %.0.i = select i1 %.not3.i, float %67, float %66, !dbg !23
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not4.i = icmp eq i32 %68, 0, !dbg !23
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %58, float 0.000000e+00) #3, !dbg !23
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %58, float 0.000000e+00) #3, !dbg !23
  %.04.i = select i1 %.not4.i, float %70, float %69, !dbg !23
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not5.i = icmp eq i32 %71, 0, !dbg !23
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %37, float %37) #3, !dbg !23
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %37, float %37) #3, !dbg !23
  %.02.i = select i1 %.not5.i, float %73, float %72, !dbg !23
  br label %__nv_tanhf.exit, !dbg !23

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %57, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !23
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not.i1 = icmp eq i32 %74, 0, !dbg !23
  %75 = tail call float @llvm.nvvm.fabs.ftz.f(float %38) #3, !dbg !23
  %76 = tail call float @llvm.nvvm.fabs.f(float %38) #3, !dbg !23
  %.01.i2 = select i1 %.not.i1, float %76, float %75, !dbg !23
  %77 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !23
  br i1 %77, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !23

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %78 = fmul float %.01.i2, 0x4007154760000000, !dbg !23
  %79 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %78) #3, !dbg !23
  %80 = fadd float %79, 1.000000e+00, !dbg !23
  %81 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %80) #4, !dbg !23, !srcloc !24
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not6.i4 = icmp eq i32 %82, 0, !dbg !23
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %81, float -2.000000e+00, float 1.000000e+00) #3, !dbg !23
  %84 = tail call float @llvm.nvvm.fma.rn.f(float %81, float -2.000000e+00, float 1.000000e+00) #3, !dbg !23
  %.03.i5 = select i1 %.not6.i4, float %84, float %83, !dbg !23
  %85 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !23
  %s.0.i6 = select i1 %85, float 1.000000e+00, float %.03.i5, !dbg !23
  %86 = bitcast float %s.0.i6 to i32, !dbg !23
  %87 = bitcast float %38 to i32, !dbg !23
  %88 = and i32 %87, -2147483648, !dbg !23
  %89 = or i32 %88, %86, !dbg !23
  %90 = bitcast i32 %89 to float, !dbg !23
  br label %__nv_tanhf.exit19, !dbg !23

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %91 = fmul float %38, %38, !dbg !23
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not1.i9 = icmp eq i32 %92, 0, !dbg !23
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %91, float 0xBFAAC795C0000000) #3, !dbg !23
  %94 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %91, float 0xBFAAC795C0000000) #3, !dbg !23
  %.06.i10 = select i1 %.not1.i9, float %94, float %93, !dbg !23
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not2.i11 = icmp eq i32 %95, 0, !dbg !23
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %91, float 0x3FC10B2820000000) #3, !dbg !23
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %91, float 0x3FC10B2820000000) #3, !dbg !23
  %.05.i12 = select i1 %.not2.i11, float %97, float %96, !dbg !23
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not3.i13 = icmp eq i32 %98, 0, !dbg !23
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %91, float 0xBFD5553DA0000000) #3, !dbg !23
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %91, float 0xBFD5553DA0000000) #3, !dbg !23
  %.0.i14 = select i1 %.not3.i13, float %100, float %99, !dbg !23
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not4.i15 = icmp eq i32 %101, 0, !dbg !23
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %91, float 0.000000e+00) #3, !dbg !23
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %91, float 0.000000e+00) #3, !dbg !23
  %.04.i16 = select i1 %.not4.i15, float %103, float %102, !dbg !23
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not5.i17 = icmp eq i32 %104, 0, !dbg !23
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %38, float %38) #3, !dbg !23
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %38, float %38) #3, !dbg !23
  %.02.i18 = select i1 %.not5.i17, float %106, float %105, !dbg !23
  br label %__nv_tanhf.exit19, !dbg !23

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %90, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !23
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not.i20 = icmp eq i32 %107, 0, !dbg !23
  %108 = tail call float @llvm.nvvm.fabs.ftz.f(float %39) #3, !dbg !23
  %109 = tail call float @llvm.nvvm.fabs.f(float %39) #3, !dbg !23
  %.01.i21 = select i1 %.not.i20, float %109, float %108, !dbg !23
  %110 = fcmp ult float %.01.i21, 0x3FE3333340000000, !dbg !23
  br i1 %110, label %__internal_fmad.exit3.i27, label %__internal_fmad.exit1.i22, !dbg !23

__internal_fmad.exit1.i22:                        ; preds = %__nv_tanhf.exit19
  %111 = fmul float %.01.i21, 0x4007154760000000, !dbg !23
  %112 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %111) #3, !dbg !23
  %113 = fadd float %112, 1.000000e+00, !dbg !23
  %114 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %113) #4, !dbg !23, !srcloc !24
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not6.i23 = icmp eq i32 %115, 0, !dbg !23
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %114, float -2.000000e+00, float 1.000000e+00) #3, !dbg !23
  %117 = tail call float @llvm.nvvm.fma.rn.f(float %114, float -2.000000e+00, float 1.000000e+00) #3, !dbg !23
  %.03.i24 = select i1 %.not6.i23, float %117, float %116, !dbg !23
  %118 = fcmp oge float %.01.i21, 0x4022059680000000, !dbg !23
  %s.0.i25 = select i1 %118, float 1.000000e+00, float %.03.i24, !dbg !23
  %119 = bitcast float %s.0.i25 to i32, !dbg !23
  %120 = bitcast float %39 to i32, !dbg !23
  %121 = and i32 %120, -2147483648, !dbg !23
  %122 = or i32 %121, %119, !dbg !23
  %123 = bitcast i32 %122 to float, !dbg !23
  br label %__nv_tanhf.exit38, !dbg !23

__internal_fmad.exit3.i27:                        ; preds = %__nv_tanhf.exit19
  %124 = fmul float %39, %39, !dbg !23
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not1.i28 = icmp eq i32 %125, 0, !dbg !23
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %124, float 0xBFAAC795C0000000) #3, !dbg !23
  %127 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %124, float 0xBFAAC795C0000000) #3, !dbg !23
  %.06.i29 = select i1 %.not1.i28, float %127, float %126, !dbg !23
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not2.i30 = icmp eq i32 %128, 0, !dbg !23
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i29, float %124, float 0x3FC10B2820000000) #3, !dbg !23
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i29, float %124, float 0x3FC10B2820000000) #3, !dbg !23
  %.05.i31 = select i1 %.not2.i30, float %130, float %129, !dbg !23
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not3.i32 = icmp eq i32 %131, 0, !dbg !23
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i31, float %124, float 0xBFD5553DA0000000) #3, !dbg !23
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i31, float %124, float 0xBFD5553DA0000000) #3, !dbg !23
  %.0.i33 = select i1 %.not3.i32, float %133, float %132, !dbg !23
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not4.i34 = icmp eq i32 %134, 0, !dbg !23
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %124, float 0.000000e+00) #3, !dbg !23
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %124, float 0.000000e+00) #3, !dbg !23
  %.04.i35 = select i1 %.not4.i34, float %136, float %135, !dbg !23
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not5.i36 = icmp eq i32 %137, 0, !dbg !23
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %39, float %39) #3, !dbg !23
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %39, float %39) #3, !dbg !23
  %.02.i37 = select i1 %.not5.i36, float %139, float %138, !dbg !23
  br label %__nv_tanhf.exit38, !dbg !23

__nv_tanhf.exit38:                                ; preds = %__internal_fmad.exit1.i22, %__internal_fmad.exit3.i27
  %s.1.i26 = phi float [ %123, %__internal_fmad.exit1.i22 ], [ %.02.i37, %__internal_fmad.exit3.i27 ], !dbg !23
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not.i39 = icmp eq i32 %140, 0, !dbg !23
  %141 = tail call float @llvm.nvvm.fabs.ftz.f(float %40) #3, !dbg !23
  %142 = tail call float @llvm.nvvm.fabs.f(float %40) #3, !dbg !23
  %.01.i40 = select i1 %.not.i39, float %142, float %141, !dbg !23
  %143 = fcmp ult float %.01.i40, 0x3FE3333340000000, !dbg !23
  br i1 %143, label %__internal_fmad.exit3.i46, label %__internal_fmad.exit1.i41, !dbg !23

__internal_fmad.exit1.i41:                        ; preds = %__nv_tanhf.exit38
  %144 = fmul float %.01.i40, 0x4007154760000000, !dbg !23
  %145 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %144) #3, !dbg !23
  %146 = fadd float %145, 1.000000e+00, !dbg !23
  %147 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %146) #4, !dbg !23, !srcloc !24
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not6.i42 = icmp eq i32 %148, 0, !dbg !23
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %147, float -2.000000e+00, float 1.000000e+00) #3, !dbg !23
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %147, float -2.000000e+00, float 1.000000e+00) #3, !dbg !23
  %.03.i43 = select i1 %.not6.i42, float %150, float %149, !dbg !23
  %151 = fcmp oge float %.01.i40, 0x4022059680000000, !dbg !23
  %s.0.i44 = select i1 %151, float 1.000000e+00, float %.03.i43, !dbg !23
  %152 = bitcast float %s.0.i44 to i32, !dbg !23
  %153 = bitcast float %40 to i32, !dbg !23
  %154 = and i32 %153, -2147483648, !dbg !23
  %155 = or i32 %154, %152, !dbg !23
  %156 = bitcast i32 %155 to float, !dbg !23
  br label %__nv_tanhf.exit57, !dbg !23

__internal_fmad.exit3.i46:                        ; preds = %__nv_tanhf.exit38
  %157 = fmul float %40, %40, !dbg !23
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not1.i47 = icmp eq i32 %158, 0, !dbg !23
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %157, float 0xBFAAC795C0000000) #3, !dbg !23
  %160 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %157, float 0xBFAAC795C0000000) #3, !dbg !23
  %.06.i48 = select i1 %.not1.i47, float %160, float %159, !dbg !23
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not2.i49 = icmp eq i32 %161, 0, !dbg !23
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i48, float %157, float 0x3FC10B2820000000) #3, !dbg !23
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i48, float %157, float 0x3FC10B2820000000) #3, !dbg !23
  %.05.i50 = select i1 %.not2.i49, float %163, float %162, !dbg !23
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not3.i51 = icmp eq i32 %164, 0, !dbg !23
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %157, float 0xBFD5553DA0000000) #3, !dbg !23
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %157, float 0xBFD5553DA0000000) #3, !dbg !23
  %.0.i52 = select i1 %.not3.i51, float %166, float %165, !dbg !23
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not4.i53 = icmp eq i32 %167, 0, !dbg !23
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i52, float %157, float 0.000000e+00) #3, !dbg !23
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i52, float %157, float 0.000000e+00) #3, !dbg !23
  %.04.i54 = select i1 %.not4.i53, float %169, float %168, !dbg !23
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !23
  %.not5.i55 = icmp eq i32 %170, 0, !dbg !23
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %40, float %40) #3, !dbg !23
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %40, float %40) #3, !dbg !23
  %.02.i56 = select i1 %.not5.i55, float %172, float %171, !dbg !23
  br label %__nv_tanhf.exit57, !dbg !23

__nv_tanhf.exit57:                                ; preds = %__internal_fmad.exit1.i41, %__internal_fmad.exit3.i46
  %s.1.i45 = phi float [ %156, %__internal_fmad.exit1.i41 ], [ %.02.i56, %__internal_fmad.exit3.i46 ], !dbg !23
  %173 = extractvalue { i32, i32, i32, i32 } %36, 3, !dbg !21
  %174 = bitcast i32 %173 to float, !dbg !21
  %175 = extractvalue { i32, i32, i32, i32 } %36, 2, !dbg !21
  %176 = bitcast i32 %175 to float, !dbg !21
  %177 = extractvalue { i32, i32, i32, i32 } %36, 1, !dbg !21
  %178 = bitcast i32 %177 to float, !dbg !21
  %179 = extractvalue { i32, i32, i32, i32 } %36, 0, !dbg !21
  %180 = bitcast i32 %179 to float, !dbg !21
  %181 = fmul float %180, %180, !dbg !25
  %182 = fmul float %178, %178, !dbg !25
  %183 = fmul float %176, %176, !dbg !25
  %184 = fmul float %174, %174, !dbg !25
  %185 = fsub float %181, %180, !dbg !26
  %186 = fsub float %182, %178, !dbg !26
  %187 = fsub float %183, %176, !dbg !26
  %188 = fsub float %184, %174, !dbg !26
  %189 = fmul float %185, %s.1.i, !dbg !27
  %190 = fmul float %186, %s.1.i7, !dbg !27
  %191 = fmul float %187, %s.1.i26, !dbg !27
  %192 = fmul float %188, %s.1.i45, !dbg !27
  %193 = fadd float %189, %180, !dbg !28
  %194 = fadd float %190, %178, !dbg !28
  %195 = fadd float %191, %176, !dbg !28
  %196 = fadd float %192, %174, !dbg !28
  %197 = fmul float %193, %193, !dbg !29
  %198 = fmul float %194, %194, !dbg !29
  %199 = fmul float %195, %195, !dbg !29
  %200 = fmul float %196, %196, !dbg !29
  %201 = fsub float %197, %193, !dbg !30
  %202 = fsub float %198, %194, !dbg !30
  %203 = fsub float %199, %195, !dbg !30
  %204 = fsub float %200, %196, !dbg !30
  %205 = fmul float %s.1.i, %201, !dbg !31
  %206 = fmul float %s.1.i7, %202, !dbg !31
  %207 = fmul float %s.1.i26, %203, !dbg !31
  %208 = fmul float %s.1.i45, %204, !dbg !31
  %209 = fadd float %193, %205, !dbg !32
  %210 = fadd float %194, %206, !dbg !32
  %211 = fadd float %195, %207, !dbg !32
  %212 = fadd float %196, %208, !dbg !32
  %213 = fmul float %209, %209, !dbg !33
  %214 = fmul float %210, %210, !dbg !33
  %215 = fmul float %211, %211, !dbg !33
  %216 = fmul float %212, %212, !dbg !33
  %217 = fsub float %213, %209, !dbg !34
  %218 = fsub float %214, %210, !dbg !34
  %219 = fsub float %215, %211, !dbg !34
  %220 = fsub float %216, %212, !dbg !34
  %221 = fmul float %s.1.i, %217, !dbg !35
  %222 = fmul float %s.1.i7, %218, !dbg !35
  %223 = fmul float %s.1.i26, %219, !dbg !35
  %224 = fmul float %s.1.i45, %220, !dbg !35
  %225 = fadd float %209, %221, !dbg !36
  %226 = fadd float %210, %222, !dbg !36
  %227 = fadd float %211, %223, !dbg !36
  %228 = fadd float %212, %224, !dbg !36
  %229 = fmul float %225, %225, !dbg !37
  %230 = fmul float %226, %226, !dbg !37
  %231 = fmul float %227, %227, !dbg !37
  %232 = fmul float %228, %228, !dbg !37
  %233 = fsub float %229, %225, !dbg !38
  %234 = fsub float %230, %226, !dbg !38
  %235 = fsub float %231, %227, !dbg !38
  %236 = fsub float %232, %228, !dbg !38
  %237 = fmul float %s.1.i, %233, !dbg !39
  %238 = fmul float %s.1.i7, %234, !dbg !39
  %239 = fmul float %s.1.i26, %235, !dbg !39
  %240 = fmul float %s.1.i45, %236, !dbg !39
  %241 = fadd float %225, %237, !dbg !40
  %242 = fadd float %226, %238, !dbg !40
  %243 = fadd float %227, %239, !dbg !40
  %244 = fadd float %228, %240, !dbg !40
  %245 = fmul float %241, %241, !dbg !41
  %246 = fmul float %242, %242, !dbg !41
  %247 = fmul float %243, %243, !dbg !41
  %248 = fmul float %244, %244, !dbg !41
  %249 = fsub float %245, %241, !dbg !42
  %250 = fsub float %246, %242, !dbg !42
  %251 = fsub float %247, %243, !dbg !42
  %252 = fsub float %248, %244, !dbg !42
  %253 = fmul float %s.1.i, %249, !dbg !43
  %254 = fmul float %s.1.i7, %250, !dbg !43
  %255 = fmul float %s.1.i26, %251, !dbg !43
  %256 = fmul float %s.1.i45, %252, !dbg !43
  %257 = fadd float %241, %253, !dbg !44
  %258 = fadd float %242, %254, !dbg !44
  %259 = fadd float %243, %255, !dbg !44
  %260 = fadd float %244, %256, !dbg !44
  %261 = fmul float %257, %257, !dbg !45
  %262 = fmul float %258, %258, !dbg !45
  %263 = fmul float %259, %259, !dbg !45
  %264 = fmul float %260, %260, !dbg !45
  %265 = fsub float %261, %257, !dbg !46
  %266 = fsub float %262, %258, !dbg !46
  %267 = fsub float %263, %259, !dbg !46
  %268 = fsub float %264, %260, !dbg !46
  %269 = fmul float %s.1.i, %265, !dbg !47
  %270 = fmul float %s.1.i7, %266, !dbg !47
  %271 = fmul float %s.1.i26, %267, !dbg !47
  %272 = fmul float %s.1.i45, %268, !dbg !47
  %273 = fadd float %257, %269, !dbg !48
  %274 = fadd float %258, %270, !dbg !48
  %275 = fadd float %259, %271, !dbg !48
  %276 = fadd float %260, %272, !dbg !48
  %277 = fmul float %273, %273, !dbg !49
  %278 = fmul float %274, %274, !dbg !49
  %279 = fmul float %275, %275, !dbg !49
  %280 = fmul float %276, %276, !dbg !49
  %281 = fsub float %277, %273, !dbg !50
  %282 = fsub float %278, %274, !dbg !50
  %283 = fsub float %279, %275, !dbg !50
  %284 = fsub float %280, %276, !dbg !50
  %285 = fmul float %s.1.i, %281, !dbg !51
  %286 = fmul float %s.1.i7, %282, !dbg !51
  %287 = fmul float %s.1.i26, %283, !dbg !51
  %288 = fmul float %s.1.i45, %284, !dbg !51
  %289 = fadd float %273, %285, !dbg !52
  %290 = fadd float %274, %286, !dbg !52
  %291 = fadd float %275, %287, !dbg !52
  %292 = fadd float %276, %288, !dbg !52
  %293 = fmul float %289, %289, !dbg !53
  %294 = fmul float %290, %290, !dbg !53
  %295 = fmul float %291, %291, !dbg !53
  %296 = fmul float %292, %292, !dbg !53
  %297 = fsub float %293, %289, !dbg !54
  %298 = fsub float %294, %290, !dbg !54
  %299 = fsub float %295, %291, !dbg !54
  %300 = fsub float %296, %292, !dbg !54
  %301 = fmul float %s.1.i, %297, !dbg !55
  %302 = fmul float %s.1.i7, %298, !dbg !55
  %303 = fmul float %s.1.i26, %299, !dbg !55
  %304 = fmul float %s.1.i45, %300, !dbg !55
  %305 = fadd float %289, %301, !dbg !56
  %306 = fadd float %290, %302, !dbg !56
  %307 = fadd float %291, %303, !dbg !56
  %308 = fadd float %292, %304, !dbg !56
  %309 = bitcast float %s.1.i to i32, !dbg !57
  %310 = bitcast float %s.1.i7 to i32, !dbg !57
  %311 = bitcast float %s.1.i26 to i32, !dbg !57
  %312 = bitcast float %s.1.i45 to i32, !dbg !57
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %309, i32 %310, i32 %311, i32 %312, ptr addrspace(1) %15, i1 true) #3, !dbg !57
  %313 = getelementptr float, ptr addrspace(1) %1, i64 %14, !dbg !58
  %314 = bitcast float %305 to i32, !dbg !59
  %315 = bitcast float %306 to i32, !dbg !59
  %316 = bitcast float %307 to i32, !dbg !59
  %317 = bitcast float %308 to i32, !dbg !59
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %314, i32 %315, i32 %316, i32 %317, ptr addrspace(1) %313, i1 true) #3, !dbg !59
  ret void, !dbg !60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cuqmst4repmt6wuko3bzlbyyeqyzub6xz5nzhnucbwymg3e3wds5.py", directory: "inductor_cache/uq")
!4 = !{ptr @triton_poi_fused_add_convolution_mul_pow_sub_tanh_6, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_convolution_mul_pow_sub_tanh_6, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_convolution_mul_pow_sub_tanh_6", linkageName: "triton_poi_fused_add_convolution_mul_pow_sub_tanh_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 29, scope: !7)
!16 = !DILocation(line: 26, column: 34, scope: !7)
!17 = !DILocation(line: 26, column: 39, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 18, scope: !7)
!23 = !DILocation(line: 30, column: 26, scope: !7)
!24 = !{i32 21046}
!25 = !DILocation(line: 31, column: 18, scope: !7)
!26 = !DILocation(line: 32, column: 18, scope: !7)
!27 = !DILocation(line: 33, column: 18, scope: !7)
!28 = !DILocation(line: 34, column: 18, scope: !7)
!29 = !DILocation(line: 35, column: 18, scope: !7)
!30 = !DILocation(line: 36, column: 19, scope: !7)
!31 = !DILocation(line: 37, column: 19, scope: !7)
!32 = !DILocation(line: 38, column: 19, scope: !7)
!33 = !DILocation(line: 39, column: 20, scope: !7)
!34 = !DILocation(line: 40, column: 20, scope: !7)
!35 = !DILocation(line: 41, column: 19, scope: !7)
!36 = !DILocation(line: 42, column: 20, scope: !7)
!37 = !DILocation(line: 43, column: 20, scope: !7)
!38 = !DILocation(line: 44, column: 20, scope: !7)
!39 = !DILocation(line: 45, column: 19, scope: !7)
!40 = !DILocation(line: 46, column: 20, scope: !7)
!41 = !DILocation(line: 47, column: 20, scope: !7)
!42 = !DILocation(line: 48, column: 20, scope: !7)
!43 = !DILocation(line: 49, column: 19, scope: !7)
!44 = !DILocation(line: 50, column: 20, scope: !7)
!45 = !DILocation(line: 51, column: 20, scope: !7)
!46 = !DILocation(line: 52, column: 20, scope: !7)
!47 = !DILocation(line: 53, column: 19, scope: !7)
!48 = !DILocation(line: 54, column: 20, scope: !7)
!49 = !DILocation(line: 55, column: 20, scope: !7)
!50 = !DILocation(line: 56, column: 20, scope: !7)
!51 = !DILocation(line: 57, column: 19, scope: !7)
!52 = !DILocation(line: 58, column: 20, scope: !7)
!53 = !DILocation(line: 59, column: 20, scope: !7)
!54 = !DILocation(line: 60, column: 20, scope: !7)
!55 = !DILocation(line: 61, column: 19, scope: !7)
!56 = !DILocation(line: 62, column: 20, scope: !7)
!57 = !DILocation(line: 63, column: 39, scope: !7)
!58 = !DILocation(line: 64, column: 28, scope: !7)
!59 = !DILocation(line: 64, column: 40, scope: !7)
!60 = !DILocation(line: 64, column: 4, scope: !7)
