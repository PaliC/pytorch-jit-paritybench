; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_div_gelu_mul_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %9 = shl i32 %8, 7, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = and i32 %10, 127, !dbg !12
  %12 = or disjoint i32 %9, %11, !dbg !13
  %13 = icmp slt i32 %12, 1024, !dbg !14
  %14 = srem i32 %12, 16, !dbg !15
  %15 = sdiv i32 %12, 256, !dbg !16
  %16 = sext i32 %14 to i64, !dbg !17
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !17
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %13) #3, !dbg !18
  %19 = sext i32 %12 to i64, !dbg !19
  %20 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !19
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %13) #3, !dbg !20
  %22 = bitcast i32 %21 to float, !dbg !20
  %23 = shl nsw i32 %15, 4, !dbg !21
  %24 = add nsw i32 %23, %14, !dbg !22
  %25 = sext i32 %24 to i64, !dbg !23
  %26 = getelementptr float, ptr addrspace(1) %2, i64 %25, !dbg !23
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %13) #3, !dbg !24
  %28 = sext i32 %15 to i64, !dbg !25
  %29 = getelementptr float, ptr addrspace(1) %3, i64 %28, !dbg !25
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %13) #3, !dbg !26
  %31 = getelementptr float, ptr addrspace(1) %4, i64 %16, !dbg !27
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %13) #3, !dbg !28
  %33 = fmul float %22, 0x3FE6A09E60000000, !dbg !29
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i = icmp eq i32 %34, 0, !dbg !30
  %35 = tail call float @llvm.nvvm.fabs.ftz.f(float %33) #3, !dbg !30
  %36 = tail call float @llvm.nvvm.fabs.f(float %33) #3, !dbg !30
  %.0.i = select i1 %.not.i, float %36, float %35, !dbg !30
  %37 = fcmp oge float %.0.i, 0x3FF00C1FC0000000, !dbg !30
  br i1 %37, label %__nv_fabsf.exit1.i, label %39, !dbg !30

__nv_fabsf.exit1.i:                               ; preds = %7
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i = icmp eq i32 %38, 0, !dbg !30
  %.01.i = select i1 %.not1.i, float %36, float %35, !dbg !30
  br label %__internal_fmad.exit.i, !dbg !30

39:                                               ; preds = %7
  %40 = fmul float %33, %33, !dbg !30
  br label %__internal_fmad.exit.i, !dbg !30

__internal_fmad.exit.i:                           ; preds = %39, %__nv_fabsf.exit1.i
  %41 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %39 ], !dbg !30
  %42 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %39 ], !dbg !30
  %43 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %39 ], !dbg !30
  %44 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %39 ], !dbg !30
  %45 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %39 ], !dbg !30
  %46 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %39 ], !dbg !30
  %47 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %39 ], !dbg !30
  %48 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %40, %39 ], !dbg !30
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i = icmp eq i32 %49, 0, !dbg !30
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %47, float %48, float %46) #3, !dbg !30
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %47, float %48, float %46) #3, !dbg !30
  %.02.i = select i1 %.not2.i, float %51, float %50, !dbg !30
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i = icmp eq i32 %52, 0, !dbg !30
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %48, float %45) #3, !dbg !30
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %48, float %45) #3, !dbg !30
  %.03.i = select i1 %.not3.i, float %54, float %53, !dbg !30
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i = icmp eq i32 %55, 0, !dbg !30
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %48, float %44) #3, !dbg !30
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %48, float %44) #3, !dbg !30
  %.04.i = select i1 %.not4.i, float %57, float %56, !dbg !30
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i = icmp eq i32 %58, 0, !dbg !30
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %48, float %43) #3, !dbg !30
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %48, float %43) #3, !dbg !30
  %.05.i = select i1 %.not5.i, float %60, float %59, !dbg !30
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i = icmp eq i32 %61, 0, !dbg !30
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %48, float %42) #3, !dbg !30
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %48, float %42) #3, !dbg !30
  %.06.i = select i1 %.not6.i, float %63, float %62, !dbg !30
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not7.i = icmp eq i32 %64, 0, !dbg !30
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %48, float %41) #3, !dbg !30
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %48, float %41) #3, !dbg !30
  %.07.i = select i1 %.not7.i, float %66, float %65, !dbg !30
  %67 = fneg float %48, !dbg !30
  %68 = select i1 %37, float %67, float %33, !dbg !30
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not8.i = icmp eq i32 %69, 0, !dbg !30
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %68, float %68) #3, !dbg !30
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %68, float %68) #3, !dbg !30
  %.08.i = select i1 %.not8.i, float %71, float %70, !dbg !30
  br i1 %37, label %72, label %__nv_erff.exit, !dbg !30

72:                                               ; preds = %__internal_fmad.exit.i
  %73 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #3, !dbg !30
  %74 = fsub float 1.000000e+00, %73, !dbg !30
  %75 = bitcast float %74 to i32, !dbg !30
  %76 = bitcast float %33 to i32, !dbg !30
  %77 = and i32 %76, -2147483648, !dbg !30
  %78 = or i32 %77, %75, !dbg !30
  %79 = bitcast i32 %78 to float, !dbg !30
  br label %__nv_erff.exit, !dbg !30

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %72
  %r.0.i = phi float [ %79, %72 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !30
  %80 = fmul float %22, 5.000000e-01, !dbg !31
  %81 = bitcast i32 %32 to float, !dbg !28
  %82 = bitcast i32 %30 to float, !dbg !26
  %83 = bitcast i32 %27 to float, !dbg !24
  %84 = bitcast i32 %18 to float, !dbg !18
  %85 = fadd float %r.0.i, 1.000000e+00, !dbg !32
  %86 = fmul float %80, %85, !dbg !33
  %87 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %83, float %82) #3, !dbg !34
  %88 = fmul float %87, %86, !dbg !35
  %89 = fmul float %88, %84, !dbg !36
  %90 = fadd float %89, %81, !dbg !37
  %91 = fadd float %86, %90, !dbg !38
  %92 = getelementptr float, ptr addrspace(1) %5, i64 %19, !dbg !39
  %93 = bitcast float %91 to i32, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %93, ptr addrspace(1) %92, i1 %13) #3, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "civlcxuh3txjclv6furr4nng5lz2y36zqodyho6didzxi4ay33gt.py", directory: "inductor_cache/iv")
!4 = !{ptr @triton_poi_fused_add_div_gelu_mul_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_gelu_mul_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_gelu_mul_4", linkageName: "triton_poi_fused_add_div_gelu_mul_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 39, scope: !7)
!22 = !DILocation(line: 29, column: 36, scope: !7)
!23 = !DILocation(line: 29, column: 31, scope: !7)
!24 = !DILocation(line: 29, column: 44, scope: !7)
!25 = !DILocation(line: 30, column: 31, scope: !7)
!26 = !DILocation(line: 30, column: 36, scope: !7)
!27 = !DILocation(line: 31, column: 31, scope: !7)
!28 = !DILocation(line: 31, column: 36, scope: !7)
!29 = !DILocation(line: 35, column: 18, scope: !7)
!30 = !DILocation(line: 36, column: 25, scope: !7)
!31 = !DILocation(line: 33, column: 18, scope: !7)
!32 = !DILocation(line: 38, column: 18, scope: !7)
!33 = !DILocation(line: 39, column: 18, scope: !7)
!34 = !DILocation(line: 40, column: 20, scope: !7)
!35 = !DILocation(line: 41, column: 19, scope: !7)
!36 = !DILocation(line: 42, column: 19, scope: !7)
!37 = !DILocation(line: 43, column: 20, scope: !7)
!38 = !DILocation(line: 44, column: 20, scope: !7)
!39 = !DILocation(line: 45, column: 25, scope: !7)
!40 = !DILocation(line: 45, column: 37, scope: !7)
!41 = !DILocation(line: 45, column: 4, scope: !7)
