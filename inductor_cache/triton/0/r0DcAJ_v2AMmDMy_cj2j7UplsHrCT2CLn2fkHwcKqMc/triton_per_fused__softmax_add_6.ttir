#loc = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":19:0)
#loc1 = loc(unknown)
#loc37 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":44:39)
#loc47 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":49:26)
#loc54 = loc(callsite(#loc1 at #loc37))
#loc60 = loc(callsite(#loc1 at #loc47))
module {
  tt.func public @triton_per_fused__softmax_add_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<225> : tensor<32x64xi64> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<32x64xi64> loc(#loc1)
    %cst_1 = arith.constant dense<0xFF800000> : tensor<32x64xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<32x64xi64> loc(#loc1)
    %cst_3 = arith.constant dense<true> : tensor<32x1xi1> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<32x64xf32> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<32x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<64> : tensor<32x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<1024> : tensor<32x1xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<32x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_7 : tensor<32x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_6 : tensor<32x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_6 : tensor<32x1xi32> loc(#loc11)
    %11 = arith.remsi %10, %cst_5 : tensor<32x1xi32> loc(#loc12)
    %12 = arith.muli %5, %cst_6 : tensor<32x1xi32> loc(#loc13)
    %13 = tt.broadcast %8 : tensor<1x64xi32> -> tensor<32x64xi32> loc(#loc14)
    %14 = tt.broadcast %12 : tensor<32x1xi32> -> tensor<32x64xi32> loc(#loc14)
    %15 = arith.addi %13, %14 : tensor<32x64xi32> loc(#loc14)
    %16 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>> loc(#loc15)
    %17 = tt.addptr %16, %15 : tensor<32x64x!tt.ptr<f32>>, tensor<32x64xi32> loc(#loc15)
    %18 = tt.broadcast %6 : tensor<32x1xi1> -> tensor<32x64xi1> loc(#loc16)
    %19 = tt.load %17, %18, %cst_4 : tensor<32x64x!tt.ptr<f32>> loc(#loc16)
    %20 = arith.muli %9, %cst_6 : tensor<32x1xi32> loc(#loc17)
    %21 = tt.broadcast %20 : tensor<32x1xi32> -> tensor<32x64xi32> loc(#loc18)
    %22 = arith.addi %13, %21 : tensor<32x64xi32> loc(#loc18)
    %23 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<32x64x!tt.ptr<i64>> loc(#loc19)
    %24 = tt.addptr %23, %22 : tensor<32x64x!tt.ptr<i64>>, tensor<32x64xi32> loc(#loc19)
    %25 = tt.load %24, %18, %cst_0 evictionPolicy = evict_last : tensor<32x64x!tt.ptr<i64>> loc(#loc20)
    %26 = arith.addi %25, %cst : tensor<32x64xi64> loc(#loc21)
    %27 = arith.cmpi slt, %25, %cst_0 : tensor<32x64xi64> loc(#loc22)
    %28 = arith.select %27, %26, %25 : tensor<32x64xi1>, tensor<32x64xi64> loc(#loc23)
    %29 = arith.cmpi sge, %28, %cst_0 : tensor<32x64xi64> loc(#loc24)
    %30 = arith.cmpi slt, %28, %cst : tensor<32x64xi64> loc(#loc25)
    %31 = arith.andi %29, %30 : tensor<32x64xi1> loc(#loc26)
    %32 = arith.xori %6, %cst_3 : tensor<32x1xi1> loc(#loc27)
    %33 = tt.broadcast %32 : tensor<32x1xi1> -> tensor<32x64xi1> loc(#loc28)
    %34 = arith.ori %31, %33 : tensor<32x64xi1> loc(#loc28)
    tt.assert %34, "index out of bounds: 0 <= tmp5 < 225" : tensor<32x64xi1> loc(#loc29)
    %35 = arith.muli %28, %cst_2 : tensor<32x64xi64> loc(#loc30)
    %36 = arith.extsi %11 : tensor<32x1xi32> to tensor<32x1xi64> loc(#loc31)
    %37 = tt.broadcast %36 : tensor<32x1xi64> -> tensor<32x64xi64> loc(#loc31)
    %38 = arith.addi %37, %35 : tensor<32x64xi64> loc(#loc31)
    %39 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>> loc(#loc32)
    %40 = tt.addptr %39, %38 : tensor<32x64x!tt.ptr<f32>>, tensor<32x64xi64> loc(#loc32)
    %41 = tt.load %40, %18 evictionPolicy = evict_last : tensor<32x64x!tt.ptr<f32>> loc(#loc33)
    %42 = arith.addf %19, %41 : tensor<32x64xf32> loc(#loc34)
    %43 = arith.select %18, %42, %cst_1 : tensor<32x64xi1>, tensor<32x64xf32> loc(#loc35)
    %44 = "tt.reduce"(%43) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc37)), %arg6: f32 loc(callsite(#loc1 at #loc37))):
      %54 = arith.cmpf ogt, %arg5, %arg6 : f32 loc(#loc62)
      %55 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc63)
      %56 = arith.ori %54, %55 : i1 loc(#loc64)
      %57 = arith.select %56, %arg5, %arg6 : f32 loc(#loc65)
      tt.reduce.return %57 : f32 loc(#loc53)
    }) : (tensor<32x64xf32>) -> tensor<32xf32> loc(#loc53)
    %45 = tt.expand_dims %44 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc42)
    %46 = tt.broadcast %45 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc43)
    %47 = arith.subf %42, %46 : tensor<32x64xf32> loc(#loc43)
    %48 = math.exp %47 : tensor<32x64xf32> loc(#loc44)
    %49 = arith.select %18, %48, %cst_4 : tensor<32x64xi1>, tensor<32x64xf32> loc(#loc45)
    %50 = "tt.reduce"(%49) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc47)), %arg6: f32 loc(callsite(#loc1 at #loc47))):
      %54 = arith.addf %arg5, %arg6 : f32 loc(#loc66)
      tt.reduce.return %54 : f32 loc(#loc59)
    }) : (tensor<32x64xf32>) -> tensor<32xf32> loc(#loc59)
    %51 = tt.expand_dims %50 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc49)
    %52 = tt.broadcast %51 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc50)
    %53 = arith.divf %48, %52 : tensor<32x64xf32> loc(#loc50)
    tt.store %17, %53, %18 : tensor<32x64x!tt.ptr<f32>> loc(#loc51)
    tt.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":23:28)
#loc3 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":23:33)
#loc4 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":24:36)
#loc5 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":24:44)
#loc6 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":24:23)
#loc7 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":25:21)
#loc8 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":26:26)
#loc9 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":26:34)
#loc10 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":31:19)
#loc11 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":32:21)
#loc12 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":32:27)
#loc13 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":33:42)
#loc14 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":33:39)
#loc15 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":33:34)
#loc16 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":33:47)
#loc17 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":34:38)
#loc18 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":34:35)
#loc19 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":34:30)
#loc20 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":34:43)
#loc21 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":36:18)
#loc22 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":37:18)
#loc23 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":38:32)
#loc24 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":39:28)
#loc25 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":39:44)
#loc26 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":39:37)
#loc27 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":39:54)
#loc28 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":39:52)
#loc29 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":39:62)
#loc30 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":40:37)
#loc31 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":40:35)
#loc32 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":40:30)
#loc33 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":40:44)
#loc34 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":41:18)
#loc35 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":43:34)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc42 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":44:42)
#loc43 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":45:19)
#loc44 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":46:24)
#loc45 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":48:35)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc49 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":49:29)
#loc50 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":50:20)
#loc51 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":51:48)
#loc52 = loc("inductor_cache/72/c72chmggusoc4qy6ckmcnhptbblv3cv2mmq4rfyynhqjen62f2wl.py":51:4)
#loc53 = loc(callsite(#loc36 at #loc37))
#loc55 = loc(callsite(#loc38 at #loc36))
#loc56 = loc(callsite(#loc39 at #loc36))
#loc57 = loc(callsite(#loc40 at #loc36))
#loc58 = loc(callsite(#loc41 at #loc36))
#loc59 = loc(callsite(#loc46 at #loc47))
#loc61 = loc(callsite(#loc48 at #loc46))
#loc62 = loc(callsite(#loc55 at #loc37))
#loc63 = loc(callsite(#loc56 at #loc37))
#loc64 = loc(callsite(#loc57 at #loc37))
#loc65 = loc(callsite(#loc58 at #loc37))
#loc66 = loc(callsite(#loc61 at #loc47))
