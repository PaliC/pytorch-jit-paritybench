//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_leaky_relu_22 // -- Begin function triton_poi_fused_leaky_relu_22
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_leaky_relu_22
.visible .entry triton_poi_fused_leaky_relu_22(
	.param .u64 .ptr .global .align 1 triton_poi_fused_leaky_relu_22_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_leaky_relu_22_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_leaky_relu_22_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_leaky_relu_22_param_3,
	.param .u32 triton_poi_fused_leaky_relu_22_param_4,
	.param .u32 triton_poi_fused_leaky_relu_22_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<31>;
	.reg .b32 	%r<117>;
	.reg .f32 	%f<57>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused_leaky_relu_22_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_leaky_relu_22_param_1];
$L__tmp0:
	.loc	1 22 28                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:22:33
	shl.b32 	%r51, %r1, 4;
	ld.param.u64 	%rd11, [triton_poi_fused_leaky_relu_22_param_2];
	ld.param.u64 	%rd12, [triton_poi_fused_leaky_relu_22_param_3];
	.loc	1 23 44                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:23:44
	mov.u32 	%r52, %tid.x;
	bfe.u32 	%r53, %r52, 4, 3;
	shl.b32 	%r54, %r52, 2;
	and.b32  	%r55, %r54, 12;
	.loc	1 23 23                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:23:23
	or.b32  	%r56, %r51, %r53;
	or.b32  	%r57, %r56, 8;
	or.b32  	%r58, %r51, %r55;
	.loc	1 24 21                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:24:21
	setp.lt.s32 	%p17, %r56, 16;
	setp.lt.s32 	%p18, %r57, 16;
	setp.lt.s32 	%p19, %r58, 16;
	.loc	1 25 28                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:25:33
	shl.b32 	%r59, %r2, 6;
	.loc	1 26 44                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:26:44
	and.b32  	%r60, %r54, 60;
	bfe.u32 	%r61, %r52, 2, 5;
	.loc	1 26 23                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:26:23
	or.b32  	%r62, %r59, %r60;
	or.b32  	%r63, %r59, %r61;
	or.b32  	%r64, %r63, 32;
	.loc	1 27 21                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:27:21
	setp.lt.s32 	%p20, %r62, 512;
	setp.lt.s32 	%p21, %r63, 512;
	setp.lt.s32 	%p22, %r64, 512;
	.loc	1 30 19                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:30:19
	bfe.s32 	%r65, %r1, 27, 1;
	shr.u32 	%r66, %r65, 30;
	add.s32 	%r67, %r56, %r66;
	add.s32 	%r68, %r57, %r66;
	.loc	1 32 39                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:32:39
	shl.b32 	%r69, %r56, 9;
	shl.b32 	%r70, %r57, 9;
	.loc	1 32 35                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:32:35
	add.s32 	%r71, %r62, %r69;
	add.s32 	%r72, %r62, %r70;
	.loc	1 32 30                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:32:30
	mul.wide.s32 	%rd13, %r71, 4;
	add.s64 	%rd1, %rd9, %rd13;
	mul.wide.s32 	%rd14, %r72, 4;
	add.s64 	%rd2, %rd9, %rd14;
	.loc	1 32 52                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:32:52
	and.pred  	%p1, %p17, %p20;
	and.pred  	%p2, %p18, %p20;
	and.pred  	%p15, %p19, %p21;
	and.pred  	%p16, %p22, %p19;
	.loc	1 32 44                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:32:44
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 39                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:33:39
	shl.b32 	%r73, %r67, 7;
	and.b32  	%r74, %r73, -512;
	shl.b32 	%r75, %r68, 7;
	and.b32  	%r76, %r75, -512;
	.loc	1 33 35                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:33:35
	add.s32 	%r77, %r74, %r62;
	add.s32 	%r78, %r62, %r76;
	.loc	1 33 30                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:33:30
	mul.wide.s32 	%rd15, %r77, 4;
	add.s64 	%rd3, %rd10, %rd15;
	mul.wide.s32 	%rd16, %r78, 4;
	add.s64 	%rd4, %rd10, %rd16;
	.loc	1 33 44                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:33:44
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 34 30                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:34:30
	add.s64 	%rd5, %rd11, %rd15;
	add.s64 	%rd6, %rd11, %rd16;
	.loc	1 34 44                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:34:44
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 32 44                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:32:44
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	.loc	1 33 44                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:33:44
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r14;
	mov.b32 	%f13, %r15;
	mov.b32 	%f14, %r16;
	mov.b32 	%f15, %r17;
	mov.b32 	%f16, %r18;
	.loc	1 34 44                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:34:44
	mov.b32 	%f17, %r26;
	mov.b32 	%f18, %r25;
	mov.b32 	%f19, %r24;
	mov.b32 	%f20, %r23;
	mov.b32 	%f21, %r22;
	mov.b32 	%f22, %r21;
	mov.b32 	%f23, %r20;
	mov.b32 	%f24, %r19;
	.loc	1 35 18                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:35:18
	sub.f32 	%f25, %f8, %f16;
	sub.f32 	%f26, %f7, %f15;
	sub.f32 	%f27, %f6, %f14;
	sub.f32 	%f28, %f5, %f13;
	sub.f32 	%f29, %f4, %f12;
	sub.f32 	%f30, %f3, %f11;
	sub.f32 	%f31, %f2, %f10;
	sub.f32 	%f32, %f1, %f9;
	.loc	1 36 18                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:36:18
	mul.f32 	%f33, %f32, %f24;
	mul.f32 	%f34, %f31, %f23;
	mul.f32 	%f35, %f30, %f22;
	mul.f32 	%f36, %f29, %f21;
	mul.f32 	%f37, %f28, %f20;
	mul.f32 	%f38, %f27, %f19;
	mul.f32 	%f39, %f26, %f18;
	mul.f32 	%f40, %f25, %f17;
	.loc	1 38 18                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:38:18
	setp.gt.f32 	%p23, %f40, 0f00000000;
	setp.gt.f32 	%p24, %f39, 0f00000000;
	setp.gt.f32 	%p25, %f38, 0f00000000;
	setp.gt.f32 	%p26, %f37, 0f00000000;
	setp.gt.f32 	%p27, %f36, 0f00000000;
	setp.gt.f32 	%p28, %f35, 0f00000000;
	setp.gt.f32 	%p29, %f34, 0f00000000;
	setp.gt.f32 	%p30, %f33, 0f00000000;
	.loc	1 40 18                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:40:18
	mul.f32 	%f41, %f33, 0f3DCCCCCD;
	mul.f32 	%f42, %f34, 0f3DCCCCCD;
	mul.f32 	%f43, %f35, 0f3DCCCCCD;
	mul.f32 	%f44, %f36, 0f3DCCCCCD;
	mul.f32 	%f45, %f37, 0f3DCCCCCD;
	mul.f32 	%f46, %f38, 0f3DCCCCCD;
	mul.f32 	%f47, %f39, 0f3DCCCCCD;
	mul.f32 	%f48, %f40, 0f3DCCCCCD;
	.loc	1 41 32                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:41:32
	selp.f32 	%f49, %f33, %f41, %p30;
	selp.f32 	%f50, %f34, %f42, %p29;
	selp.f32 	%f51, %f35, %f43, %p28;
	selp.f32 	%f52, %f36, %f44, %p27;
	selp.f32 	%f53, %f37, %f45, %p26;
	selp.f32 	%f54, %f38, %f46, %p25;
	selp.f32 	%f55, %f39, %f47, %p24;
	selp.f32 	%f56, %f40, %f48, %p23;
	.loc	1 42 32                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:42:32
	shl.b32 	%r79, %r63, 2;
	shl.b32 	%r80, %r64, 2;
	.loc	1 42 42                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:42:42
	shl.b32 	%r81, %r58, 9;
	.loc	1 42 37                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:42:37
	add.s32 	%r82, %r79, %r81;
	add.s32 	%r83, %r81, %r80;
	.loc	1 42 25                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:42:25
	mul.wide.s32 	%rd17, %r82, 4;
	add.s64 	%rd7, %rd12, %rd17;
	mul.wide.s32 	%rd18, %r83, 4;
	add.s64 	%rd8, %rd12, %rd18;
	.loc	1 42 53                         // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:42:53
	shl.b32 	%r84, %r52, 6;
	and.b32  	%r85, %r84, 960;
	or.b32  	%r86, %r85, %r53;
	and.b32  	%r87, %r54, 508;
	shr.u32 	%r88, %r85, 2;
	add.s32 	%r89, %r88, %r86;
	shl.b32 	%r90, %r89, 2;
	mov.u32 	%r91, global_smem;
	add.s32 	%r27, %r91, %r90;
	mov.b32 	%r28, %f49;
	mov.pred 	%p7, -1;
	// begin inline asm
	@%p7 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	or.b32  	%r92, %r85, 16;
	shr.u32 	%r93, %r92, 2;
	add.s32 	%r94, %r93, %r86;
	shl.b32 	%r95, %r94, 2;
	add.s32 	%r96, %r91, %r95;
	add.s32 	%r29, %r96, 64;
	mov.b32 	%r30, %f50;
	// begin inline asm
	@%p7 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	or.b32  	%r97, %r85, 32;
	shr.u32 	%r98, %r97, 2;
	add.s32 	%r99, %r98, %r86;
	shl.b32 	%r100, %r99, 2;
	add.s32 	%r101, %r91, %r100;
	add.s32 	%r31, %r101, 128;
	mov.b32 	%r32, %f51;
	// begin inline asm
	@%p7 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	or.b32  	%r102, %r85, 48;
	shr.u32 	%r103, %r102, 2;
	add.s32 	%r104, %r103, %r86;
	shl.b32 	%r105, %r104, 2;
	add.s32 	%r106, %r91, %r105;
	add.s32 	%r33, %r106, 192;
	mov.b32 	%r34, %f52;
	// begin inline asm
	@%p7 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r27, 32;
	mov.b32 	%r36, %f53;
	// begin inline asm
	@%p7 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r96, 96;
	mov.b32 	%r38, %f54;
	// begin inline asm
	@%p7 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r101, 160;
	mov.b32 	%r40, %f55;
	// begin inline asm
	@%p7 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r106, 224;
	mov.b32 	%r42, %f56;
	// begin inline asm
	@%p7 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r107, %r52, 124;
	add.s32 	%r108, %r87, %r107;
	shl.b32 	%r109, %r108, 2;
	add.s32 	%r110, %r91, %r109;
	or.b32  	%r111, %r87, 512;
	shr.u32 	%r112, %r111, 2;
	and.b32  	%r113, %r112, 252;
	add.s32 	%r114, %r113, %r87;
	shl.b32 	%r115, %r114, 2;
	add.s32 	%r116, %r91, %r115;
	ld.shared.v4.u32 	{%r47, %r48, %r49, %r50}, [%r116+2048];
	ld.shared.v4.u32 	{%r43, %r44, %r45, %r46}, [%r110];
	// begin inline asm
	@%p15 st.global.v4.b32 [ %rd7 + 0 ], { %r43, %r44, %r45, %r46 };
	// end inline asm
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd8 + 0 ], { %r47, %r48, %r49, %r50 };
	// end inline asm
	.loc	1 42 4                          // c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py:42:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7v/c7vtguavzlkduentcefiomwgp6rmdumigvgno2baf3rj56cilkas.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 118
.b8 116
.b8 103
.b8 117
.b8 97
.b8 118
.b8 122
.b8 108
.b8 107
.b8 100
.b8 117
.b8 101
.b8 110
.b8 116
.b8 99
.b8 101
.b8 102
.b8 105
.b8 111
.b8 109
.b8 119
.b8 103
.b8 112
.b8 54
.b8 114
.b8 109
.b8 100
.b8 117
.b8 109
.b8 105
.b8 103
.b8 118
.b8 103
.b8 110
.b8 111
.b8 50
.b8 98
.b8 97
.b8 102
.b8 51
.b8 114
.b8 106
.b8 53
.b8 54
.b8 99
.b8 105
.b8 108
.b8 107
.b8 97
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 118
.b8 0
	}
	.section	.debug_macinfo	{	}
