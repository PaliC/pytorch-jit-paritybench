; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_34(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 510, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 150528, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 768, !dbg !15
  %13 = mul i32 %12, 768, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = srem i32 %12, 7, !dbg !17
  %15 = sdiv i32 %10, 5376, !dbg !18
  %16 = mul nsw i32 %14, 4608, !dbg !19
  %17 = mul i32 %15, 64512, !dbg !20
  %18 = add i32 %17, %.decomposed, !dbg !21
  %19 = add i32 %18, %16, !dbg !22
  %20 = sext i32 %19 to i64, !dbg !23
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !23
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %21, i1 %11) #1, !dbg !24
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !24
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !24
  %25 = add i32 %18, 2304, !dbg !25
  %26 = add i32 %25, %16, !dbg !26
  %27 = sext i32 %26 to i64, !dbg !27
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !27
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 %11) #1, !dbg !28
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !28
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !28
  %32 = add i32 %18, 32256, !dbg !29
  %33 = add i32 %32, %16, !dbg !30
  %34 = sext i32 %33 to i64, !dbg !31
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !31
  %36 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %35, i1 %11) #1, !dbg !32
  %37 = extractvalue { i32, i32 } %36, 0, !dbg !32
  %38 = extractvalue { i32, i32 } %36, 1, !dbg !32
  %39 = add i32 %18, 34560, !dbg !33
  %40 = add i32 %39, %16, !dbg !34
  %41 = sext i32 %40 to i64, !dbg !35
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !35
  %43 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %42, i1 %11) #1, !dbg !36
  %44 = extractvalue { i32, i32 } %43, 0, !dbg !36
  %45 = extractvalue { i32, i32 } %43, 1, !dbg !36
  %46 = insertelement <2 x i32> poison, i32 %23, i64 0, !dbg !24
  %47 = insertelement <2 x i32> %46, i32 %24, i64 1, !dbg !24
  %48 = bitcast <2 x i32> %47 to <2 x float>, !dbg !24
  %49 = insertelement <2 x i32> poison, i32 %30, i64 0, !dbg !28
  %50 = insertelement <2 x i32> %49, i32 %31, i64 1, !dbg !28
  %51 = bitcast <2 x i32> %50 to <2 x float>, !dbg !28
  %52 = insertelement <2 x i32> poison, i32 %37, i64 0, !dbg !32
  %53 = insertelement <2 x i32> %52, i32 %38, i64 1, !dbg !32
  %54 = bitcast <2 x i32> %53 to <2 x float>, !dbg !32
  %55 = insertelement <2 x i32> poison, i32 %44, i64 0, !dbg !36
  %56 = insertelement <2 x i32> %55, i32 %45, i64 1, !dbg !36
  %57 = bitcast <2 x i32> %56 to <2 x float>, !dbg !36
  %58 = fcmp ogt <2 x float> %51, %48, !dbg !37
  %59 = zext <2 x i1> %58 to <2 x i8>, !dbg !38
  %60 = fcmp uno <2 x float> %51, zeroinitializer, !dbg !39
  %61 = or <2 x i1> %58, %60, !dbg !43
  %.v = select <2 x i1> %61, <2 x i32> %50, <2 x i32> %47, !dbg !44
  %62 = bitcast <2 x i32> %.v to <2 x float>, !dbg !44
  %63 = fcmp olt <2 x float> %62, %54, !dbg !45
  %64 = select <2 x i1> %63, <2 x i8> splat (i8 2), <2 x i8> %59, !dbg !46
  %65 = fcmp uno <2 x float> %54, zeroinitializer, !dbg !47
  %66 = or <2 x i1> %65, %63, !dbg !49
  %.v1 = select <2 x i1> %66, <2 x i32> %53, <2 x i32> %.v, !dbg !50
  %67 = bitcast <2 x i32> %.v1 to <2 x float>, !dbg !50
  %68 = fcmp olt <2 x float> %67, %57, !dbg !51
  %69 = select <2 x i1> %68, <2 x i8> splat (i8 3), <2 x i8> %64, !dbg !52
  %70 = bitcast i32 %44 to float, !dbg !53
  %71 = fcmp uno float %70, 0.000000e+00, !dbg !53
  %72 = bitcast i32 %45 to float, !dbg !53
  %73 = fcmp uno float %72, 0.000000e+00, !dbg !53
  %74 = extractelement <2 x i1> %68, i64 0, !dbg !55
  %75 = or i1 %71, %74, !dbg !55
  %76 = extractelement <2 x i1> %68, i64 1, !dbg !55
  %77 = or i1 %73, %76, !dbg !55
  %78 = sext i32 %10 to i64, !dbg !56
  %79 = getelementptr i8, ptr addrspace(1) %1, i64 %78, !dbg !56
  %80 = bitcast <2 x i8> %69 to i16, !dbg !57
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %80, ptr addrspace(1) %79, i1 %11) #1, !dbg !57
  %81 = getelementptr float, ptr addrspace(1) %2, i64 %78, !dbg !58
  %82 = extractelement <2 x i32> %.v1, i64 0, !dbg !59
  %83 = select i1 %75, i32 %44, i32 %82, !dbg !60
  %84 = extractelement <2 x i32> %.v1, i64 1, !dbg !59
  %85 = select i1 %77, i32 %45, i32 %84, !dbg !60
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %83, i32 %85, ptr addrspace(1) %81, i1 %11) #1, !dbg !59
  ret void, !dbg !61
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cwuxreaviprdwltnswgzd7iqe3kpav4mfxcm6eyv7armzkjfhenl.py", directory: "inductor_cache/wu")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_34, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_34, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_34", linkageName: "triton_poi_fused_max_pool2d_with_indices_34", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 28, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 40, scope: !7)
!20 = !DILocation(line: 28, column: 51, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 28, column: 45, scope: !7)
!23 = !DILocation(line: 28, column: 30, scope: !7)
!24 = !DILocation(line: 28, column: 56, scope: !7)
!25 = !DILocation(line: 29, column: 42, scope: !7)
!26 = !DILocation(line: 29, column: 52, scope: !7)
!27 = !DILocation(line: 29, column: 30, scope: !7)
!28 = !DILocation(line: 29, column: 63, scope: !7)
!29 = !DILocation(line: 30, column: 43, scope: !7)
!30 = !DILocation(line: 30, column: 53, scope: !7)
!31 = !DILocation(line: 30, column: 30, scope: !7)
!32 = !DILocation(line: 30, column: 64, scope: !7)
!33 = !DILocation(line: 31, column: 44, scope: !7)
!34 = !DILocation(line: 31, column: 54, scope: !7)
!35 = !DILocation(line: 31, column: 31, scope: !7)
!36 = !DILocation(line: 31, column: 65, scope: !7)
!37 = !DILocation(line: 32, column: 18, scope: !7)
!38 = !DILocation(line: 35, column: 32, scope: !7)
!39 = !DILocation(line: 120, column: 21, scope: !40, inlinedAt: !42)
!40 = distinct !DILexicalBlockFile(scope: !7, file: !41, discriminator: 0)
!41 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!42 = !DILocation(line: 36, column: 40, scope: !7)
!43 = !DILocation(line: 120, column: 16, scope: !40, inlinedAt: !42)
!44 = !DILocation(line: 121, column: 29, scope: !40, inlinedAt: !42)
!45 = !DILocation(line: 37, column: 18, scope: !7)
!46 = !DILocation(line: 39, column: 33, scope: !7)
!47 = !DILocation(line: 120, column: 21, scope: !40, inlinedAt: !48)
!48 = !DILocation(line: 40, column: 41, scope: !7)
!49 = !DILocation(line: 120, column: 16, scope: !40, inlinedAt: !48)
!50 = !DILocation(line: 121, column: 29, scope: !40, inlinedAt: !48)
!51 = !DILocation(line: 41, column: 20, scope: !7)
!52 = !DILocation(line: 43, column: 35, scope: !7)
!53 = !DILocation(line: 120, column: 21, scope: !40, inlinedAt: !54)
!54 = !DILocation(line: 44, column: 42, scope: !7)
!55 = !DILocation(line: 120, column: 16, scope: !40, inlinedAt: !54)
!56 = !DILocation(line: 45, column: 25, scope: !7)
!57 = !DILocation(line: 45, column: 37, scope: !7)
!58 = !DILocation(line: 46, column: 25, scope: !7)
!59 = !DILocation(line: 46, column: 37, scope: !7)
!60 = !DILocation(line: 121, column: 29, scope: !40, inlinedAt: !54)
!61 = !DILocation(line: 46, column: 4, scope: !7)
