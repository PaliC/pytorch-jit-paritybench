; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_mean_mul_rsub_sub_sum_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %9 = shl i32 %8, 2, !dbg !11
  %10 = and i32 %9, 60, !dbg !11
  %11 = zext nneg i32 %10 to i64, !dbg !12
  %12 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !12
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 true) #3, !dbg !13
  %14 = bitcast i32 %13 to float, !dbg !13
  %15 = getelementptr float, ptr addrspace(1) %2, i64 %11, !dbg !14
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 true) #3, !dbg !15
  %17 = bitcast i32 %16 to float, !dbg !15
  %18 = or disjoint i32 %10, 1, !dbg !16
  %19 = zext nneg i32 %18 to i64, !dbg !17
  %20 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !17
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #3, !dbg !18
  %22 = bitcast i32 %21 to float, !dbg !18
  %23 = getelementptr float, ptr addrspace(1) %2, i64 %19, !dbg !19
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #3, !dbg !20
  %25 = bitcast i32 %24 to float, !dbg !20
  %26 = or disjoint i32 %10, 2, !dbg !21
  %27 = zext nneg i32 %26 to i64, !dbg !22
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !22
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #3, !dbg !23
  %30 = bitcast i32 %29 to float, !dbg !23
  %31 = getelementptr float, ptr addrspace(1) %2, i64 %27, !dbg !24
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #3, !dbg !25
  %33 = bitcast i32 %32 to float, !dbg !25
  %34 = or disjoint i32 %10, 3, !dbg !26
  %35 = zext nneg i32 %34 to i64, !dbg !27
  %36 = getelementptr float, ptr addrspace(1) %1, i64 %35, !dbg !27
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 true) #3, !dbg !28
  %38 = bitcast i32 %37 to float, !dbg !28
  %39 = getelementptr float, ptr addrspace(1) %2, i64 %35, !dbg !29
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 true) #3, !dbg !30
  %41 = bitcast i32 %40 to float, !dbg !30
  %42 = or disjoint i32 %10, 64, !dbg !31
  %43 = zext nneg i32 %42 to i64, !dbg !32
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !32
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #3, !dbg !33
  %46 = bitcast i32 %45 to float, !dbg !33
  %47 = or disjoint i32 %10, 65, !dbg !34
  %48 = zext nneg i32 %47 to i64, !dbg !35
  %49 = getelementptr float, ptr addrspace(1) %1, i64 %48, !dbg !35
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 true) #3, !dbg !36
  %51 = bitcast i32 %50 to float, !dbg !36
  %52 = or disjoint i32 %10, 66, !dbg !37
  %53 = zext nneg i32 %52 to i64, !dbg !38
  %54 = getelementptr float, ptr addrspace(1) %1, i64 %53, !dbg !38
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 true) #3, !dbg !39
  %56 = bitcast i32 %55 to float, !dbg !39
  %57 = or disjoint i32 %10, 67, !dbg !40
  %58 = zext nneg i32 %57 to i64, !dbg !41
  %59 = getelementptr float, ptr addrspace(1) %1, i64 %58, !dbg !41
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 true) #3, !dbg !42
  %61 = bitcast i32 %60 to float, !dbg !42
  %62 = or disjoint i32 %10, 128, !dbg !43
  %63 = zext nneg i32 %62 to i64, !dbg !44
  %64 = getelementptr float, ptr addrspace(1) %1, i64 %63, !dbg !44
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 true) #3, !dbg !45
  %66 = bitcast i32 %65 to float, !dbg !45
  %67 = or disjoint i32 %10, 129, !dbg !46
  %68 = zext nneg i32 %67 to i64, !dbg !47
  %69 = getelementptr float, ptr addrspace(1) %1, i64 %68, !dbg !47
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %69, i1 true) #3, !dbg !48
  %71 = bitcast i32 %70 to float, !dbg !48
  %72 = or disjoint i32 %10, 130, !dbg !49
  %73 = zext nneg i32 %72 to i64, !dbg !50
  %74 = getelementptr float, ptr addrspace(1) %1, i64 %73, !dbg !50
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %74, i1 true) #3, !dbg !51
  %76 = bitcast i32 %75 to float, !dbg !51
  %77 = or disjoint i32 %10, 131, !dbg !52
  %78 = zext nneg i32 %77 to i64, !dbg !53
  %79 = getelementptr float, ptr addrspace(1) %1, i64 %78, !dbg !53
  %80 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %79, i1 true) #3, !dbg !54
  %81 = bitcast i32 %80 to float, !dbg !54
  %82 = or disjoint i32 %10, 192, !dbg !55
  %83 = zext nneg i32 %82 to i64, !dbg !56
  %84 = getelementptr float, ptr addrspace(1) %1, i64 %83, !dbg !56
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %84, i1 true) #3, !dbg !57
  %86 = bitcast i32 %85 to float, !dbg !57
  %87 = or disjoint i32 %10, 193, !dbg !58
  %88 = zext nneg i32 %87 to i64, !dbg !59
  %89 = getelementptr float, ptr addrspace(1) %1, i64 %88, !dbg !59
  %90 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %89, i1 true) #3, !dbg !60
  %91 = bitcast i32 %90 to float, !dbg !60
  %92 = or disjoint i32 %10, 194, !dbg !61
  %93 = zext nneg i32 %92 to i64, !dbg !62
  %94 = getelementptr float, ptr addrspace(1) %1, i64 %93, !dbg !62
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %94, i1 true) #3, !dbg !63
  %96 = bitcast i32 %95 to float, !dbg !63
  %97 = or disjoint i32 %10, 195, !dbg !64
  %98 = zext nneg i32 %97 to i64, !dbg !65
  %99 = getelementptr float, ptr addrspace(1) %1, i64 %98, !dbg !65
  %100 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %99, i1 true) #3, !dbg !66
  %101 = bitcast i32 %100 to float, !dbg !66
  %102 = getelementptr float, ptr addrspace(1) %3, i64 %11, !dbg !67
  %103 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %102, i1 true) #3, !dbg !68
  %104 = bitcast i32 %103 to float, !dbg !68
  %105 = getelementptr float, ptr addrspace(1) %3, i64 %19, !dbg !69
  %106 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %105, i1 true) #3, !dbg !70
  %107 = bitcast i32 %106 to float, !dbg !70
  %108 = getelementptr float, ptr addrspace(1) %3, i64 %27, !dbg !71
  %109 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %108, i1 true) #3, !dbg !72
  %110 = bitcast i32 %109 to float, !dbg !72
  %111 = getelementptr float, ptr addrspace(1) %3, i64 %35, !dbg !73
  %112 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %111, i1 true) #3, !dbg !74
  %113 = bitcast i32 %112 to float, !dbg !74
  %114 = getelementptr float, ptr addrspace(1) %4, i64 %11, !dbg !75
  %115 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %114, i1 true) #3, !dbg !76
  %116 = bitcast i32 %115 to float, !dbg !76
  %117 = getelementptr float, ptr addrspace(1) %4, i64 %19, !dbg !77
  %118 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %117, i1 true) #3, !dbg !78
  %119 = bitcast i32 %118 to float, !dbg !78
  %120 = getelementptr float, ptr addrspace(1) %4, i64 %27, !dbg !79
  %121 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %120, i1 true) #3, !dbg !80
  %122 = bitcast i32 %121 to float, !dbg !80
  %123 = getelementptr float, ptr addrspace(1) %4, i64 %35, !dbg !81
  %124 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %123, i1 true) #3, !dbg !82
  %125 = bitcast i32 %124 to float, !dbg !82
  %126 = getelementptr float, ptr addrspace(1) %5, i64 %11, !dbg !83
  %127 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %126, i1 true) #3, !dbg !84
  %128 = bitcast i32 %127 to float, !dbg !84
  %129 = getelementptr float, ptr addrspace(1) %5, i64 %19, !dbg !85
  %130 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %129, i1 true) #3, !dbg !86
  %131 = bitcast i32 %130 to float, !dbg !86
  %132 = getelementptr float, ptr addrspace(1) %5, i64 %27, !dbg !87
  %133 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %132, i1 true) #3, !dbg !88
  %134 = bitcast i32 %133 to float, !dbg !88
  %135 = getelementptr float, ptr addrspace(1) %5, i64 %35, !dbg !89
  %136 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %135, i1 true) #3, !dbg !90
  %137 = bitcast i32 %136 to float, !dbg !90
  %138 = fmul float %14, %17, !dbg !91
  %139 = fmul float %22, %25, !dbg !92
  %140 = fadd float %138, %139, !dbg !93
  %141 = fmul float %30, %33, !dbg !94
  %142 = fadd float %140, %141, !dbg !95
  %143 = fmul float %38, %41, !dbg !96
  %144 = fadd float %142, %143, !dbg !97
  %145 = bitcast float %144 to i32, !dbg !98
  %146 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %145, i32 8, i32 31), !dbg !98
  %147 = bitcast i32 %146 to float, !dbg !98
  %148 = fadd float %144, %147, !dbg !102
  %149 = bitcast float %148 to i32, !dbg !98
  %150 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %149, i32 4, i32 31), !dbg !98
  %151 = bitcast i32 %150 to float, !dbg !98
  %152 = fadd float %148, %151, !dbg !102
  %153 = bitcast float %152 to i32, !dbg !98
  %154 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %153, i32 2, i32 31), !dbg !98
  %155 = bitcast i32 %154 to float, !dbg !98
  %156 = fadd float %152, %155, !dbg !102
  %157 = bitcast float %156 to i32, !dbg !98
  %158 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %157, i32 1, i32 31), !dbg !98
  %159 = bitcast i32 %158 to float, !dbg !98
  %160 = fadd float %156, %159, !dbg !102
  %161 = fmul float %17, %46, !dbg !104
  %162 = fmul float %25, %51, !dbg !105
  %163 = fadd float %161, %162, !dbg !106
  %164 = fmul float %33, %56, !dbg !107
  %165 = fadd float %163, %164, !dbg !108
  %166 = fmul float %41, %61, !dbg !109
  %167 = fadd float %165, %166, !dbg !110
  %168 = bitcast float %167 to i32, !dbg !111
  %169 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %168, i32 8, i32 31), !dbg !111
  %170 = bitcast i32 %169 to float, !dbg !111
  %171 = fadd float %167, %170, !dbg !113
  %172 = bitcast float %171 to i32, !dbg !111
  %173 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %172, i32 4, i32 31), !dbg !111
  %174 = bitcast i32 %173 to float, !dbg !111
  %175 = fadd float %171, %174, !dbg !113
  %176 = bitcast float %175 to i32, !dbg !111
  %177 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %176, i32 2, i32 31), !dbg !111
  %178 = bitcast i32 %177 to float, !dbg !111
  %179 = fadd float %175, %178, !dbg !113
  %180 = bitcast float %179 to i32, !dbg !111
  %181 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %180, i32 1, i32 31), !dbg !111
  %182 = bitcast i32 %181 to float, !dbg !111
  %183 = fadd float %179, %182, !dbg !113
  %184 = fmul float %17, %66, !dbg !114
  %185 = fmul float %25, %71, !dbg !115
  %186 = fadd float %184, %185, !dbg !116
  %187 = fmul float %33, %76, !dbg !117
  %188 = fadd float %186, %187, !dbg !118
  %189 = fmul float %41, %81, !dbg !119
  %190 = fadd float %188, %189, !dbg !120
  %191 = bitcast float %190 to i32, !dbg !121
  %192 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %191, i32 8, i32 31), !dbg !121
  %193 = bitcast i32 %192 to float, !dbg !121
  %194 = fadd float %190, %193, !dbg !123
  %195 = bitcast float %194 to i32, !dbg !121
  %196 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %195, i32 4, i32 31), !dbg !121
  %197 = bitcast i32 %196 to float, !dbg !121
  %198 = fadd float %194, %197, !dbg !123
  %199 = bitcast float %198 to i32, !dbg !121
  %200 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %199, i32 2, i32 31), !dbg !121
  %201 = bitcast i32 %200 to float, !dbg !121
  %202 = fadd float %198, %201, !dbg !123
  %203 = bitcast float %202 to i32, !dbg !121
  %204 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %203, i32 1, i32 31), !dbg !121
  %205 = bitcast i32 %204 to float, !dbg !121
  %206 = fadd float %202, %205, !dbg !123
  %207 = fmul float %17, %86, !dbg !124
  %208 = fmul float %25, %91, !dbg !125
  %209 = fadd float %207, %208, !dbg !126
  %210 = fmul float %33, %96, !dbg !127
  %211 = fadd float %209, %210, !dbg !128
  %212 = fmul float %41, %101, !dbg !129
  %213 = fadd float %211, %212, !dbg !130
  %214 = bitcast float %213 to i32, !dbg !131
  %215 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %214, i32 8, i32 31), !dbg !131
  %216 = bitcast i32 %215 to float, !dbg !131
  %217 = fadd float %213, %216, !dbg !133
  %218 = bitcast float %217 to i32, !dbg !131
  %219 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %218, i32 4, i32 31), !dbg !131
  %220 = bitcast i32 %219 to float, !dbg !131
  %221 = fadd float %217, %220, !dbg !133
  %222 = bitcast float %221 to i32, !dbg !131
  %223 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %222, i32 2, i32 31), !dbg !131
  %224 = bitcast i32 %223 to float, !dbg !131
  %225 = fadd float %221, %224, !dbg !133
  %226 = bitcast float %225 to i32, !dbg !131
  %227 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %226, i32 1, i32 31), !dbg !131
  %228 = bitcast i32 %227 to float, !dbg !131
  %229 = fadd float %225, %228, !dbg !133
  %230 = fmul float %14, %104, !dbg !134
  %231 = fmul float %22, %107, !dbg !135
  %232 = fadd float %230, %231, !dbg !136
  %233 = fmul float %30, %110, !dbg !137
  %234 = fadd float %232, %233, !dbg !138
  %235 = fmul float %38, %113, !dbg !139
  %236 = fadd float %234, %235, !dbg !140
  %237 = bitcast float %236 to i32, !dbg !141
  %238 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %237, i32 8, i32 31), !dbg !141
  %239 = bitcast i32 %238 to float, !dbg !141
  %240 = fadd float %236, %239, !dbg !143
  %241 = bitcast float %240 to i32, !dbg !141
  %242 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %241, i32 4, i32 31), !dbg !141
  %243 = bitcast i32 %242 to float, !dbg !141
  %244 = fadd float %240, %243, !dbg !143
  %245 = bitcast float %244 to i32, !dbg !141
  %246 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %245, i32 2, i32 31), !dbg !141
  %247 = bitcast i32 %246 to float, !dbg !141
  %248 = fadd float %244, %247, !dbg !143
  %249 = bitcast float %248 to i32, !dbg !141
  %250 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %249, i32 1, i32 31), !dbg !141
  %251 = bitcast i32 %250 to float, !dbg !141
  %252 = fadd float %248, %251, !dbg !143
  %253 = fmul float %46, %104, !dbg !144
  %254 = fmul float %51, %107, !dbg !145
  %255 = fadd float %253, %254, !dbg !146
  %256 = fmul float %56, %110, !dbg !147
  %257 = fadd float %255, %256, !dbg !148
  %258 = fmul float %61, %113, !dbg !149
  %259 = fadd float %257, %258, !dbg !150
  %260 = bitcast float %259 to i32, !dbg !151
  %261 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %260, i32 8, i32 31), !dbg !151
  %262 = bitcast i32 %261 to float, !dbg !151
  %263 = fadd float %259, %262, !dbg !153
  %264 = bitcast float %263 to i32, !dbg !151
  %265 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %264, i32 4, i32 31), !dbg !151
  %266 = bitcast i32 %265 to float, !dbg !151
  %267 = fadd float %263, %266, !dbg !153
  %268 = bitcast float %267 to i32, !dbg !151
  %269 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %268, i32 2, i32 31), !dbg !151
  %270 = bitcast i32 %269 to float, !dbg !151
  %271 = fadd float %267, %270, !dbg !153
  %272 = bitcast float %271 to i32, !dbg !151
  %273 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %272, i32 1, i32 31), !dbg !151
  %274 = bitcast i32 %273 to float, !dbg !151
  %275 = fadd float %271, %274, !dbg !153
  %276 = fmul float %66, %104, !dbg !154
  %277 = fmul float %71, %107, !dbg !155
  %278 = fadd float %276, %277, !dbg !156
  %279 = fmul float %76, %110, !dbg !157
  %280 = fadd float %278, %279, !dbg !158
  %281 = fmul float %81, %113, !dbg !159
  %282 = fadd float %280, %281, !dbg !160
  %283 = bitcast float %282 to i32, !dbg !161
  %284 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %283, i32 8, i32 31), !dbg !161
  %285 = bitcast i32 %284 to float, !dbg !161
  %286 = fadd float %282, %285, !dbg !163
  %287 = bitcast float %286 to i32, !dbg !161
  %288 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %287, i32 4, i32 31), !dbg !161
  %289 = bitcast i32 %288 to float, !dbg !161
  %290 = fadd float %286, %289, !dbg !163
  %291 = bitcast float %290 to i32, !dbg !161
  %292 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %291, i32 2, i32 31), !dbg !161
  %293 = bitcast i32 %292 to float, !dbg !161
  %294 = fadd float %290, %293, !dbg !163
  %295 = bitcast float %294 to i32, !dbg !161
  %296 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %295, i32 1, i32 31), !dbg !161
  %297 = bitcast i32 %296 to float, !dbg !161
  %298 = fadd float %294, %297, !dbg !163
  %299 = fmul float %86, %104, !dbg !164
  %300 = fmul float %91, %107, !dbg !165
  %301 = fadd float %299, %300, !dbg !166
  %302 = fmul float %96, %110, !dbg !167
  %303 = fadd float %301, %302, !dbg !168
  %304 = fmul float %101, %113, !dbg !169
  %305 = fadd float %303, %304, !dbg !170
  %306 = bitcast float %305 to i32, !dbg !171
  %307 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %306, i32 8, i32 31), !dbg !171
  %308 = bitcast i32 %307 to float, !dbg !171
  %309 = fadd float %305, %308, !dbg !173
  %310 = bitcast float %309 to i32, !dbg !171
  %311 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %310, i32 4, i32 31), !dbg !171
  %312 = bitcast i32 %311 to float, !dbg !171
  %313 = fadd float %309, %312, !dbg !173
  %314 = bitcast float %313 to i32, !dbg !171
  %315 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %314, i32 2, i32 31), !dbg !171
  %316 = bitcast i32 %315 to float, !dbg !171
  %317 = fadd float %313, %316, !dbg !173
  %318 = bitcast float %317 to i32, !dbg !171
  %319 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %318, i32 1, i32 31), !dbg !171
  %320 = bitcast i32 %319 to float, !dbg !171
  %321 = fadd float %317, %320, !dbg !173
  %322 = fmul float %14, %116, !dbg !174
  %323 = fmul float %22, %119, !dbg !175
  %324 = fadd float %322, %323, !dbg !176
  %325 = fmul float %30, %122, !dbg !177
  %326 = fadd float %324, %325, !dbg !178
  %327 = fmul float %38, %125, !dbg !179
  %328 = fadd float %326, %327, !dbg !180
  %329 = bitcast float %328 to i32, !dbg !181
  %330 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %329, i32 8, i32 31), !dbg !181
  %331 = bitcast i32 %330 to float, !dbg !181
  %332 = fadd float %328, %331, !dbg !183
  %333 = bitcast float %332 to i32, !dbg !181
  %334 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %333, i32 4, i32 31), !dbg !181
  %335 = bitcast i32 %334 to float, !dbg !181
  %336 = fadd float %332, %335, !dbg !183
  %337 = bitcast float %336 to i32, !dbg !181
  %338 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %337, i32 2, i32 31), !dbg !181
  %339 = bitcast i32 %338 to float, !dbg !181
  %340 = fadd float %336, %339, !dbg !183
  %341 = bitcast float %340 to i32, !dbg !181
  %342 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %341, i32 1, i32 31), !dbg !181
  %343 = bitcast i32 %342 to float, !dbg !181
  %344 = fadd float %340, %343, !dbg !183
  %345 = fmul float %46, %116, !dbg !184
  %346 = fmul float %51, %119, !dbg !185
  %347 = fadd float %345, %346, !dbg !186
  %348 = fmul float %56, %122, !dbg !187
  %349 = fadd float %347, %348, !dbg !188
  %350 = fmul float %61, %125, !dbg !189
  %351 = fadd float %349, %350, !dbg !190
  %352 = bitcast float %351 to i32, !dbg !191
  %353 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %352, i32 8, i32 31), !dbg !191
  %354 = bitcast i32 %353 to float, !dbg !191
  %355 = fadd float %351, %354, !dbg !193
  %356 = bitcast float %355 to i32, !dbg !191
  %357 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %356, i32 4, i32 31), !dbg !191
  %358 = bitcast i32 %357 to float, !dbg !191
  %359 = fadd float %355, %358, !dbg !193
  %360 = bitcast float %359 to i32, !dbg !191
  %361 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %360, i32 2, i32 31), !dbg !191
  %362 = bitcast i32 %361 to float, !dbg !191
  %363 = fadd float %359, %362, !dbg !193
  %364 = bitcast float %363 to i32, !dbg !191
  %365 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %364, i32 1, i32 31), !dbg !191
  %366 = bitcast i32 %365 to float, !dbg !191
  %367 = fadd float %363, %366, !dbg !193
  %368 = fmul float %66, %116, !dbg !194
  %369 = fmul float %71, %119, !dbg !195
  %370 = fadd float %368, %369, !dbg !196
  %371 = fmul float %76, %122, !dbg !197
  %372 = fadd float %370, %371, !dbg !198
  %373 = fmul float %81, %125, !dbg !199
  %374 = fadd float %372, %373, !dbg !200
  %375 = bitcast float %374 to i32, !dbg !201
  %376 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %375, i32 8, i32 31), !dbg !201
  %377 = bitcast i32 %376 to float, !dbg !201
  %378 = fadd float %374, %377, !dbg !203
  %379 = bitcast float %378 to i32, !dbg !201
  %380 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %379, i32 4, i32 31), !dbg !201
  %381 = bitcast i32 %380 to float, !dbg !201
  %382 = fadd float %378, %381, !dbg !203
  %383 = bitcast float %382 to i32, !dbg !201
  %384 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %383, i32 2, i32 31), !dbg !201
  %385 = bitcast i32 %384 to float, !dbg !201
  %386 = fadd float %382, %385, !dbg !203
  %387 = bitcast float %386 to i32, !dbg !201
  %388 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %387, i32 1, i32 31), !dbg !201
  %389 = bitcast i32 %388 to float, !dbg !201
  %390 = fadd float %386, %389, !dbg !203
  %391 = fmul float %86, %116, !dbg !204
  %392 = fmul float %91, %119, !dbg !205
  %393 = fadd float %391, %392, !dbg !206
  %394 = fmul float %96, %122, !dbg !207
  %395 = fadd float %393, %394, !dbg !208
  %396 = fmul float %101, %125, !dbg !209
  %397 = fadd float %395, %396, !dbg !210
  %398 = bitcast float %397 to i32, !dbg !211
  %399 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %398, i32 8, i32 31), !dbg !211
  %400 = bitcast i32 %399 to float, !dbg !211
  %401 = fadd float %397, %400, !dbg !213
  %402 = bitcast float %401 to i32, !dbg !211
  %403 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %402, i32 4, i32 31), !dbg !211
  %404 = bitcast i32 %403 to float, !dbg !211
  %405 = fadd float %401, %404, !dbg !213
  %406 = bitcast float %405 to i32, !dbg !211
  %407 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %406, i32 2, i32 31), !dbg !211
  %408 = bitcast i32 %407 to float, !dbg !211
  %409 = fadd float %405, %408, !dbg !213
  %410 = bitcast float %409 to i32, !dbg !211
  %411 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %410, i32 1, i32 31), !dbg !211
  %412 = bitcast i32 %411 to float, !dbg !211
  %413 = fadd float %409, %412, !dbg !213
  %414 = fmul float %14, %128, !dbg !214
  %415 = fmul float %22, %131, !dbg !215
  %416 = fadd float %414, %415, !dbg !216
  %417 = fmul float %30, %134, !dbg !217
  %418 = fadd float %416, %417, !dbg !218
  %419 = fmul float %38, %137, !dbg !219
  %420 = fadd float %418, %419, !dbg !220
  %421 = bitcast float %420 to i32, !dbg !221
  %422 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %421, i32 8, i32 31), !dbg !221
  %423 = bitcast i32 %422 to float, !dbg !221
  %424 = fadd float %420, %423, !dbg !223
  %425 = bitcast float %424 to i32, !dbg !221
  %426 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %425, i32 4, i32 31), !dbg !221
  %427 = bitcast i32 %426 to float, !dbg !221
  %428 = fadd float %424, %427, !dbg !223
  %429 = bitcast float %428 to i32, !dbg !221
  %430 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %429, i32 2, i32 31), !dbg !221
  %431 = bitcast i32 %430 to float, !dbg !221
  %432 = fadd float %428, %431, !dbg !223
  %433 = bitcast float %432 to i32, !dbg !221
  %434 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %433, i32 1, i32 31), !dbg !221
  %435 = bitcast i32 %434 to float, !dbg !221
  %436 = fadd float %432, %435, !dbg !223
  %437 = fmul float %46, %128, !dbg !224
  %438 = fmul float %51, %131, !dbg !225
  %439 = fadd float %437, %438, !dbg !226
  %440 = fmul float %56, %134, !dbg !227
  %441 = fadd float %439, %440, !dbg !228
  %442 = fmul float %61, %137, !dbg !229
  %443 = fadd float %441, %442, !dbg !230
  %444 = bitcast float %443 to i32, !dbg !231
  %445 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %444, i32 8, i32 31), !dbg !231
  %446 = bitcast i32 %445 to float, !dbg !231
  %447 = fadd float %443, %446, !dbg !233
  %448 = bitcast float %447 to i32, !dbg !231
  %449 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %448, i32 4, i32 31), !dbg !231
  %450 = bitcast i32 %449 to float, !dbg !231
  %451 = fadd float %447, %450, !dbg !233
  %452 = bitcast float %451 to i32, !dbg !231
  %453 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %452, i32 2, i32 31), !dbg !231
  %454 = bitcast i32 %453 to float, !dbg !231
  %455 = fadd float %451, %454, !dbg !233
  %456 = bitcast float %455 to i32, !dbg !231
  %457 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %456, i32 1, i32 31), !dbg !231
  %458 = bitcast i32 %457 to float, !dbg !231
  %459 = fadd float %455, %458, !dbg !233
  %460 = fmul float %66, %128, !dbg !234
  %461 = fmul float %71, %131, !dbg !235
  %462 = fadd float %460, %461, !dbg !236
  %463 = fmul float %76, %134, !dbg !237
  %464 = fadd float %462, %463, !dbg !238
  %465 = fmul float %81, %137, !dbg !239
  %466 = fadd float %464, %465, !dbg !240
  %467 = bitcast float %466 to i32, !dbg !241
  %468 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %467, i32 8, i32 31), !dbg !241
  %469 = bitcast i32 %468 to float, !dbg !241
  %470 = fadd float %466, %469, !dbg !243
  %471 = bitcast float %470 to i32, !dbg !241
  %472 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %471, i32 4, i32 31), !dbg !241
  %473 = bitcast i32 %472 to float, !dbg !241
  %474 = fadd float %470, %473, !dbg !243
  %475 = bitcast float %474 to i32, !dbg !241
  %476 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %475, i32 2, i32 31), !dbg !241
  %477 = bitcast i32 %476 to float, !dbg !241
  %478 = fadd float %474, %477, !dbg !243
  %479 = bitcast float %478 to i32, !dbg !241
  %480 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %479, i32 1, i32 31), !dbg !241
  %481 = bitcast i32 %480 to float, !dbg !241
  %482 = fadd float %478, %481, !dbg !243
  %483 = fmul float %86, %128, !dbg !244
  %484 = fmul float %91, %131, !dbg !245
  %485 = fadd float %483, %484, !dbg !246
  %486 = fmul float %96, %134, !dbg !247
  %487 = fadd float %485, %486, !dbg !248
  %488 = fmul float %101, %137, !dbg !249
  %489 = fadd float %487, %488, !dbg !250
  %490 = bitcast float %489 to i32, !dbg !251
  %491 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %490, i32 8, i32 31), !dbg !251
  %492 = bitcast i32 %491 to float, !dbg !251
  %493 = fadd float %489, %492, !dbg !253
  %494 = bitcast float %493 to i32, !dbg !251
  %495 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %494, i32 4, i32 31), !dbg !251
  %496 = bitcast i32 %495 to float, !dbg !251
  %497 = fadd float %493, %496, !dbg !253
  %498 = bitcast float %497 to i32, !dbg !251
  %499 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %498, i32 2, i32 31), !dbg !251
  %500 = bitcast i32 %499 to float, !dbg !251
  %501 = fadd float %497, %500, !dbg !253
  %502 = bitcast float %501 to i32, !dbg !251
  %503 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %502, i32 1, i32 31), !dbg !251
  %504 = bitcast i32 %503 to float, !dbg !251
  %505 = fadd float %501, %504, !dbg !253
  %506 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %160, float 1.600000e+01) #3, !dbg !254
  %507 = fsub float 0.000000e+00, %506, !dbg !255
  %508 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %183, float 1.600000e+01) #3, !dbg !256
  %509 = fsub float %507, %508, !dbg !257
  %510 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %206, float 1.600000e+01) #3, !dbg !258
  %511 = fsub float %509, %510, !dbg !259
  %512 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %229, float 1.600000e+01) #3, !dbg !260
  %513 = fsub float %511, %512, !dbg !261
  %514 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %252, float 1.600000e+01) #3, !dbg !262
  %515 = fsub float %513, %514, !dbg !263
  %516 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %275, float 1.600000e+01) #3, !dbg !264
  %517 = fsub float %515, %516, !dbg !265
  %518 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %298, float 1.600000e+01) #3, !dbg !266
  %519 = fsub float %517, %518, !dbg !267
  %520 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %321, float 1.600000e+01) #3, !dbg !268
  %521 = fsub float %519, %520, !dbg !269
  %522 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %344, float 1.600000e+01) #3, !dbg !270
  %523 = fsub float %521, %522, !dbg !271
  %524 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %367, float 1.600000e+01) #3, !dbg !272
  %525 = fsub float %523, %524, !dbg !273
  %526 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %390, float 1.600000e+01) #3, !dbg !274
  %527 = fsub float %525, %526, !dbg !275
  %528 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %413, float 1.600000e+01) #3, !dbg !276
  %529 = fsub float %527, %528, !dbg !277
  %530 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %436, float 1.600000e+01) #3, !dbg !278
  %531 = fsub float %529, %530, !dbg !279
  %532 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %459, float 1.600000e+01) #3, !dbg !280
  %533 = fsub float %531, %532, !dbg !281
  %534 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %482, float 1.600000e+01) #3, !dbg !282
  %535 = fsub float %533, %534, !dbg !283
  %536 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %505, float 1.600000e+01) #3, !dbg !284
  %537 = fsub float %535, %536, !dbg !285
  tail call void @llvm.nvvm.barrier0(), !dbg !286
  %538 = and i32 %8, 63, !dbg !287
  %539 = icmp eq i32 %538, 0, !dbg !287
  %540 = bitcast float %537 to i32, !dbg !287
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %540, ptr addrspace(1) %0, i1 %539) #3, !dbg !287
  ret void, !dbg !288
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4ho4wx3vaztydywqmxzmgfz5igziygcxqc4ujb644eghuvecl2c.py", directory: "inductor_cache/4h")
!4 = !{ptr @triton_per_fused_mean_mul_rsub_sub_sum_5, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_mean_mul_rsub_sub_sum_5, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_mean_mul_rsub_sub_sum_5", linkageName: "triton_per_fused_mean_mul_rsub_sub_sum_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 30, column: 32, scope: !7)
!12 = !DILocation(line: 30, column: 30, scope: !7)
!13 = !DILocation(line: 30, column: 37, scope: !7)
!14 = !DILocation(line: 31, column: 30, scope: !7)
!15 = !DILocation(line: 31, column: 37, scope: !7)
!16 = !DILocation(line: 32, column: 34, scope: !7)
!17 = !DILocation(line: 32, column: 30, scope: !7)
!18 = !DILocation(line: 32, column: 41, scope: !7)
!19 = !DILocation(line: 33, column: 30, scope: !7)
!20 = !DILocation(line: 33, column: 41, scope: !7)
!21 = !DILocation(line: 34, column: 34, scope: !7)
!22 = !DILocation(line: 34, column: 30, scope: !7)
!23 = !DILocation(line: 34, column: 41, scope: !7)
!24 = !DILocation(line: 35, column: 30, scope: !7)
!25 = !DILocation(line: 35, column: 41, scope: !7)
!26 = !DILocation(line: 36, column: 35, scope: !7)
!27 = !DILocation(line: 36, column: 31, scope: !7)
!28 = !DILocation(line: 36, column: 42, scope: !7)
!29 = !DILocation(line: 37, column: 31, scope: !7)
!30 = !DILocation(line: 37, column: 42, scope: !7)
!31 = !DILocation(line: 38, column: 36, scope: !7)
!32 = !DILocation(line: 38, column: 31, scope: !7)
!33 = !DILocation(line: 38, column: 43, scope: !7)
!34 = !DILocation(line: 39, column: 36, scope: !7)
!35 = !DILocation(line: 39, column: 31, scope: !7)
!36 = !DILocation(line: 39, column: 43, scope: !7)
!37 = !DILocation(line: 40, column: 36, scope: !7)
!38 = !DILocation(line: 40, column: 31, scope: !7)
!39 = !DILocation(line: 40, column: 43, scope: !7)
!40 = !DILocation(line: 41, column: 36, scope: !7)
!41 = !DILocation(line: 41, column: 31, scope: !7)
!42 = !DILocation(line: 41, column: 43, scope: !7)
!43 = !DILocation(line: 42, column: 37, scope: !7)
!44 = !DILocation(line: 42, column: 31, scope: !7)
!45 = !DILocation(line: 42, column: 44, scope: !7)
!46 = !DILocation(line: 43, column: 37, scope: !7)
!47 = !DILocation(line: 43, column: 31, scope: !7)
!48 = !DILocation(line: 43, column: 44, scope: !7)
!49 = !DILocation(line: 44, column: 37, scope: !7)
!50 = !DILocation(line: 44, column: 31, scope: !7)
!51 = !DILocation(line: 44, column: 44, scope: !7)
!52 = !DILocation(line: 45, column: 37, scope: !7)
!53 = !DILocation(line: 45, column: 31, scope: !7)
!54 = !DILocation(line: 45, column: 44, scope: !7)
!55 = !DILocation(line: 46, column: 37, scope: !7)
!56 = !DILocation(line: 46, column: 31, scope: !7)
!57 = !DILocation(line: 46, column: 44, scope: !7)
!58 = !DILocation(line: 47, column: 37, scope: !7)
!59 = !DILocation(line: 47, column: 31, scope: !7)
!60 = !DILocation(line: 47, column: 44, scope: !7)
!61 = !DILocation(line: 48, column: 37, scope: !7)
!62 = !DILocation(line: 48, column: 31, scope: !7)
!63 = !DILocation(line: 48, column: 44, scope: !7)
!64 = !DILocation(line: 49, column: 37, scope: !7)
!65 = !DILocation(line: 49, column: 31, scope: !7)
!66 = !DILocation(line: 49, column: 44, scope: !7)
!67 = !DILocation(line: 50, column: 31, scope: !7)
!68 = !DILocation(line: 50, column: 38, scope: !7)
!69 = !DILocation(line: 51, column: 31, scope: !7)
!70 = !DILocation(line: 51, column: 42, scope: !7)
!71 = !DILocation(line: 52, column: 31, scope: !7)
!72 = !DILocation(line: 52, column: 42, scope: !7)
!73 = !DILocation(line: 53, column: 31, scope: !7)
!74 = !DILocation(line: 53, column: 42, scope: !7)
!75 = !DILocation(line: 54, column: 32, scope: !7)
!76 = !DILocation(line: 54, column: 39, scope: !7)
!77 = !DILocation(line: 55, column: 32, scope: !7)
!78 = !DILocation(line: 55, column: 43, scope: !7)
!79 = !DILocation(line: 56, column: 32, scope: !7)
!80 = !DILocation(line: 56, column: 43, scope: !7)
!81 = !DILocation(line: 57, column: 32, scope: !7)
!82 = !DILocation(line: 57, column: 43, scope: !7)
!83 = !DILocation(line: 58, column: 32, scope: !7)
!84 = !DILocation(line: 58, column: 39, scope: !7)
!85 = !DILocation(line: 59, column: 32, scope: !7)
!86 = !DILocation(line: 59, column: 43, scope: !7)
!87 = !DILocation(line: 60, column: 32, scope: !7)
!88 = !DILocation(line: 60, column: 43, scope: !7)
!89 = !DILocation(line: 61, column: 32, scope: !7)
!90 = !DILocation(line: 61, column: 43, scope: !7)
!91 = !DILocation(line: 62, column: 18, scope: !7)
!92 = !DILocation(line: 63, column: 18, scope: !7)
!93 = !DILocation(line: 64, column: 18, scope: !7)
!94 = !DILocation(line: 65, column: 18, scope: !7)
!95 = !DILocation(line: 66, column: 19, scope: !7)
!96 = !DILocation(line: 67, column: 20, scope: !7)
!97 = !DILocation(line: 68, column: 20, scope: !7)
!98 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !101)
!99 = distinct !DILexicalBlockFile(scope: !7, file: !100, discriminator: 0)
!100 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!101 = !DILocation(line: 70, column: 26, scope: !7)
!102 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !101)
!103 = distinct !DILexicalBlockFile(scope: !99, file: !100, discriminator: 0)
!104 = !DILocation(line: 71, column: 20, scope: !7)
!105 = !DILocation(line: 72, column: 20, scope: !7)
!106 = !DILocation(line: 73, column: 20, scope: !7)
!107 = !DILocation(line: 74, column: 20, scope: !7)
!108 = !DILocation(line: 75, column: 20, scope: !7)
!109 = !DILocation(line: 76, column: 20, scope: !7)
!110 = !DILocation(line: 77, column: 20, scope: !7)
!111 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !112)
!112 = !DILocation(line: 79, column: 26, scope: !7)
!113 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !112)
!114 = !DILocation(line: 80, column: 20, scope: !7)
!115 = !DILocation(line: 81, column: 20, scope: !7)
!116 = !DILocation(line: 82, column: 20, scope: !7)
!117 = !DILocation(line: 83, column: 20, scope: !7)
!118 = !DILocation(line: 84, column: 20, scope: !7)
!119 = !DILocation(line: 85, column: 20, scope: !7)
!120 = !DILocation(line: 86, column: 20, scope: !7)
!121 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !122)
!122 = !DILocation(line: 88, column: 26, scope: !7)
!123 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !122)
!124 = !DILocation(line: 89, column: 20, scope: !7)
!125 = !DILocation(line: 90, column: 20, scope: !7)
!126 = !DILocation(line: 91, column: 20, scope: !7)
!127 = !DILocation(line: 92, column: 20, scope: !7)
!128 = !DILocation(line: 93, column: 20, scope: !7)
!129 = !DILocation(line: 94, column: 20, scope: !7)
!130 = !DILocation(line: 95, column: 20, scope: !7)
!131 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !132)
!132 = !DILocation(line: 97, column: 26, scope: !7)
!133 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !132)
!134 = !DILocation(line: 98, column: 19, scope: !7)
!135 = !DILocation(line: 99, column: 19, scope: !7)
!136 = !DILocation(line: 100, column: 20, scope: !7)
!137 = !DILocation(line: 101, column: 19, scope: !7)
!138 = !DILocation(line: 102, column: 20, scope: !7)
!139 = !DILocation(line: 103, column: 20, scope: !7)
!140 = !DILocation(line: 104, column: 20, scope: !7)
!141 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !142)
!142 = !DILocation(line: 106, column: 26, scope: !7)
!143 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !142)
!144 = !DILocation(line: 107, column: 20, scope: !7)
!145 = !DILocation(line: 108, column: 20, scope: !7)
!146 = !DILocation(line: 109, column: 20, scope: !7)
!147 = !DILocation(line: 110, column: 20, scope: !7)
!148 = !DILocation(line: 111, column: 20, scope: !7)
!149 = !DILocation(line: 112, column: 20, scope: !7)
!150 = !DILocation(line: 113, column: 20, scope: !7)
!151 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !152)
!152 = !DILocation(line: 115, column: 26, scope: !7)
!153 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !152)
!154 = !DILocation(line: 116, column: 20, scope: !7)
!155 = !DILocation(line: 117, column: 20, scope: !7)
!156 = !DILocation(line: 118, column: 20, scope: !7)
!157 = !DILocation(line: 119, column: 20, scope: !7)
!158 = !DILocation(line: 120, column: 20, scope: !7)
!159 = !DILocation(line: 121, column: 20, scope: !7)
!160 = !DILocation(line: 122, column: 20, scope: !7)
!161 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !162)
!162 = !DILocation(line: 124, column: 26, scope: !7)
!163 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !162)
!164 = !DILocation(line: 125, column: 20, scope: !7)
!165 = !DILocation(line: 126, column: 20, scope: !7)
!166 = !DILocation(line: 127, column: 20, scope: !7)
!167 = !DILocation(line: 128, column: 20, scope: !7)
!168 = !DILocation(line: 129, column: 20, scope: !7)
!169 = !DILocation(line: 130, column: 20, scope: !7)
!170 = !DILocation(line: 131, column: 21, scope: !7)
!171 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !172)
!172 = !DILocation(line: 133, column: 28, scope: !7)
!173 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !172)
!174 = !DILocation(line: 134, column: 20, scope: !7)
!175 = !DILocation(line: 135, column: 20, scope: !7)
!176 = !DILocation(line: 136, column: 22, scope: !7)
!177 = !DILocation(line: 137, column: 20, scope: !7)
!178 = !DILocation(line: 138, column: 22, scope: !7)
!179 = !DILocation(line: 139, column: 21, scope: !7)
!180 = !DILocation(line: 140, column: 22, scope: !7)
!181 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !182)
!182 = !DILocation(line: 142, column: 28, scope: !7)
!183 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !182)
!184 = !DILocation(line: 143, column: 21, scope: !7)
!185 = !DILocation(line: 144, column: 21, scope: !7)
!186 = !DILocation(line: 145, column: 22, scope: !7)
!187 = !DILocation(line: 146, column: 21, scope: !7)
!188 = !DILocation(line: 147, column: 22, scope: !7)
!189 = !DILocation(line: 148, column: 21, scope: !7)
!190 = !DILocation(line: 149, column: 22, scope: !7)
!191 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !192)
!192 = !DILocation(line: 151, column: 28, scope: !7)
!193 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !192)
!194 = !DILocation(line: 152, column: 21, scope: !7)
!195 = !DILocation(line: 153, column: 21, scope: !7)
!196 = !DILocation(line: 154, column: 22, scope: !7)
!197 = !DILocation(line: 155, column: 21, scope: !7)
!198 = !DILocation(line: 156, column: 22, scope: !7)
!199 = !DILocation(line: 157, column: 21, scope: !7)
!200 = !DILocation(line: 158, column: 22, scope: !7)
!201 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !202)
!202 = !DILocation(line: 160, column: 28, scope: !7)
!203 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !202)
!204 = !DILocation(line: 161, column: 21, scope: !7)
!205 = !DILocation(line: 162, column: 21, scope: !7)
!206 = !DILocation(line: 163, column: 22, scope: !7)
!207 = !DILocation(line: 164, column: 21, scope: !7)
!208 = !DILocation(line: 165, column: 22, scope: !7)
!209 = !DILocation(line: 166, column: 21, scope: !7)
!210 = !DILocation(line: 167, column: 22, scope: !7)
!211 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !212)
!212 = !DILocation(line: 169, column: 28, scope: !7)
!213 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !212)
!214 = !DILocation(line: 170, column: 20, scope: !7)
!215 = !DILocation(line: 171, column: 20, scope: !7)
!216 = !DILocation(line: 172, column: 22, scope: !7)
!217 = !DILocation(line: 173, column: 20, scope: !7)
!218 = !DILocation(line: 174, column: 22, scope: !7)
!219 = !DILocation(line: 175, column: 21, scope: !7)
!220 = !DILocation(line: 176, column: 22, scope: !7)
!221 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !222)
!222 = !DILocation(line: 178, column: 28, scope: !7)
!223 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !222)
!224 = !DILocation(line: 179, column: 21, scope: !7)
!225 = !DILocation(line: 180, column: 21, scope: !7)
!226 = !DILocation(line: 181, column: 22, scope: !7)
!227 = !DILocation(line: 182, column: 21, scope: !7)
!228 = !DILocation(line: 183, column: 22, scope: !7)
!229 = !DILocation(line: 184, column: 21, scope: !7)
!230 = !DILocation(line: 185, column: 22, scope: !7)
!231 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !232)
!232 = !DILocation(line: 187, column: 28, scope: !7)
!233 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !232)
!234 = !DILocation(line: 188, column: 21, scope: !7)
!235 = !DILocation(line: 189, column: 21, scope: !7)
!236 = !DILocation(line: 190, column: 22, scope: !7)
!237 = !DILocation(line: 191, column: 21, scope: !7)
!238 = !DILocation(line: 192, column: 22, scope: !7)
!239 = !DILocation(line: 193, column: 21, scope: !7)
!240 = !DILocation(line: 194, column: 22, scope: !7)
!241 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !242)
!242 = !DILocation(line: 196, column: 28, scope: !7)
!243 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !242)
!244 = !DILocation(line: 197, column: 21, scope: !7)
!245 = !DILocation(line: 198, column: 21, scope: !7)
!246 = !DILocation(line: 199, column: 22, scope: !7)
!247 = !DILocation(line: 200, column: 21, scope: !7)
!248 = !DILocation(line: 201, column: 22, scope: !7)
!249 = !DILocation(line: 202, column: 21, scope: !7)
!250 = !DILocation(line: 203, column: 22, scope: !7)
!251 = !DILocation(line: 267, column: 36, scope: !99, inlinedAt: !252)
!252 = !DILocation(line: 205, column: 28, scope: !7)
!253 = !DILocation(line: 256, column: 15, scope: !103, inlinedAt: !252)
!254 = !DILocation(line: 207, column: 21, scope: !7)
!255 = !DILocation(line: 209, column: 22, scope: !7)
!256 = !DILocation(line: 210, column: 21, scope: !7)
!257 = !DILocation(line: 211, column: 22, scope: !7)
!258 = !DILocation(line: 212, column: 21, scope: !7)
!259 = !DILocation(line: 213, column: 22, scope: !7)
!260 = !DILocation(line: 214, column: 21, scope: !7)
!261 = !DILocation(line: 215, column: 22, scope: !7)
!262 = !DILocation(line: 216, column: 21, scope: !7)
!263 = !DILocation(line: 217, column: 22, scope: !7)
!264 = !DILocation(line: 218, column: 21, scope: !7)
!265 = !DILocation(line: 219, column: 22, scope: !7)
!266 = !DILocation(line: 220, column: 21, scope: !7)
!267 = !DILocation(line: 221, column: 22, scope: !7)
!268 = !DILocation(line: 222, column: 22, scope: !7)
!269 = !DILocation(line: 223, column: 22, scope: !7)
!270 = !DILocation(line: 224, column: 22, scope: !7)
!271 = !DILocation(line: 225, column: 22, scope: !7)
!272 = !DILocation(line: 226, column: 22, scope: !7)
!273 = !DILocation(line: 227, column: 22, scope: !7)
!274 = !DILocation(line: 228, column: 22, scope: !7)
!275 = !DILocation(line: 229, column: 22, scope: !7)
!276 = !DILocation(line: 230, column: 22, scope: !7)
!277 = !DILocation(line: 231, column: 22, scope: !7)
!278 = !DILocation(line: 232, column: 22, scope: !7)
!279 = !DILocation(line: 233, column: 22, scope: !7)
!280 = !DILocation(line: 234, column: 22, scope: !7)
!281 = !DILocation(line: 235, column: 22, scope: !7)
!282 = !DILocation(line: 236, column: 22, scope: !7)
!283 = !DILocation(line: 237, column: 22, scope: !7)
!284 = !DILocation(line: 238, column: 22, scope: !7)
!285 = !DILocation(line: 239, column: 22, scope: !7)
!286 = !DILocation(line: 240, column: 4, scope: !7)
!287 = !DILocation(line: 241, column: 72, scope: !7)
!288 = !DILocation(line: 241, column: 4, scope: !7)
