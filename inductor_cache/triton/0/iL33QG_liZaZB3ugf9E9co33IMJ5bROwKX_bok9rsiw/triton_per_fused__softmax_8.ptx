//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__softmax_8 // -- Begin function triton_per_fused__softmax_8
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__softmax_8
.visible .entry triton_per_fused__softmax_8(
	.param .u64 .ptr .global .align 1 triton_per_fused__softmax_8_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__softmax_8_param_1,
	.param .u32 triton_per_fused__softmax_8_param_2,
	.param .u32 triton_per_fused__softmax_8_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<54>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_per_fused__softmax_8_param_0];
	ld.param.u64 	%rd4, [triton_per_fused__softmax_8_param_1];
$L__tmp0:
	.loc	1 23 28                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:23:33
	shl.b32 	%r22, %r1, 6;
	.loc	1 24 44                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:24:44
	mov.u32 	%r23, %tid.x;
	shl.b32 	%r24, %r23, 1;
	and.b32  	%r25, %r24, 62;
	and.b32  	%r26, %r23, 63;
	.loc	1 24 23                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:24:23
	or.b32  	%r27, %r22, %r25;
	or.b32  	%r28, %r22, %r26;
	.loc	1 25 21                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:25:21
	setp.lt.s32 	%p1, %r27, 64;
	setp.lt.s32 	%p11, %r28, 64;
	.loc	1 31 19                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:31:19
	shr.s32 	%r30, %r27, 31;
	shr.u32 	%r31, %r30, 28;
	add.s32 	%r32, %r27, %r31;
	.loc	1 30 19                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:30:19
	and.b32  	%r33, %r32, -16;
	sub.s32 	%r34, %r27, %r33;
	.loc	1 33 38                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:33:38
	shr.u32 	%r35, %r23, 1;
	and.b32  	%r36, %r35, 16;
	.loc	1 33 35                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:33:35
	add.s32 	%r37, %r34, %r36;
	.loc	1 33 46                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:33:46
	shl.b32 	%r38, %r32, 1;
	and.b32  	%r39, %r38, -32;
	.loc	1 33 43                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:33:43
	add.s32 	%r40, %r37, %r39;
	.loc	1 33 30                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:33:30
	mul.wide.s32 	%rd5, %r40, 4;
	add.s64 	%rd1, %rd3, %rd5;
	mov.b32 	%r4, 0;
	.loc	1 33 51                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:33:51
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	shr.u32 	%r41, %r23, 3;
	and.b32  	%r42, %r41, 4;
	shl.b32 	%r43, %r25, 3;
	or.b32  	%r44, %r43, %r42;
	mov.u32 	%r45, global_smem;
	add.s32 	%r6, %r45, %r44;
$L__tmp2:
	.loc	1 35 33                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:35:33
	selp.b32 	%r7, %r2, 0, %p1;
	mov.pred 	%p4, -1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p4 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	add.s32 	%r8, %r6, 8;
$L__tmp4:
	.loc	1 35 33                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:35:33
	selp.b32 	%r9, %r3, 0, %p1;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p4 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r23, 128;
	shl.b32 	%r46, %r23, 2;
	add.s32 	%r11, %r45, %r46;
	// begin inline asm
	@%p6 ld.shared.b32 %r10, [ %r11 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r10;
	shfl.sync.bfly.b32	%r47, %r10, 1, 31, -1;
	mov.b32 	%f2, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3, %f1, %f2;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r48, %r23, 1;
	setp.eq.b32 	%p12, %r48, 1;
	not.pred 	%p13, %p12;
	and.pred  	%p7, %p6, %p13;
	mov.b32 	%r13, %f3;
	// begin inline asm
	@%p7 st.shared.b32 [ %r11 + 0 ], %r13;
	// end inline asm
	add.s32 	%r15, %r11, 256;
	// begin inline asm
	@%p6 ld.shared.b32 %r14, [ %r15 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r14;
	shfl.sync.bfly.b32	%r49, %r14, 1, 31, -1;
	mov.b32 	%f5, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f4, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r17, %f6;
	// begin inline asm
	@%p7 st.shared.b32 [ %r15 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r50, %r45, %r43;
	ld.shared.u32 	%r19, [%r50];
	ld.shared.u32 	%r20, [%r50+8];
$L__tmp6:
	.loc	1 36 27                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:36:27
	bar.sync 	0;
	shl.b32 	%r51, %r25, 2;
	sub.s32 	%r18, %r50, %r51;
	// begin inline asm
	@%p4 st.shared.v2.b32 [ %r18 + 0 ], { %r19, %r20 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r52, %r26, 2;
	add.s32 	%r53, %r45, %r52;
	ld.shared.u32 	%r21, [%r53];
	.loc	1 37 25                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:37:25
	mul.wide.s32 	%rd6, %r28, 4;
	add.s64 	%rd2, %rd4, %rd6;
	.loc	1 37 36                         // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:37:36
	// begin inline asm
	@%p11 st.global.b32 [ %rd2 + 0 ], { %r21 };
	// end inline asm
	.loc	1 37 4                          // civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py:37:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/iv/civ47f6qihosub3qclyj2ecnidulbgo7r3qbik5sfkzdu7xidy7e.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 172                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 118
.b8 52
.b8 55
.b8 102
.b8 54
.b8 113
.b8 105
.b8 104
.b8 111
.b8 115
.b8 117
.b8 98
.b8 51
.b8 113
.b8 99
.b8 108
.b8 121
.b8 106
.b8 50
.b8 101
.b8 99
.b8 110
.b8 105
.b8 100
.b8 117
.b8 108
.b8 98
.b8 103
.b8 111
.b8 55
.b8 114
.b8 51
.b8 113
.b8 98
.b8 105
.b8 107
.b8 53
.b8 115
.b8 102
.b8 107
.b8 122
.b8 100
.b8 117
.b8 55
.b8 120
.b8 105
.b8 100
.b8 121
.b8 55
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x81:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x96:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
