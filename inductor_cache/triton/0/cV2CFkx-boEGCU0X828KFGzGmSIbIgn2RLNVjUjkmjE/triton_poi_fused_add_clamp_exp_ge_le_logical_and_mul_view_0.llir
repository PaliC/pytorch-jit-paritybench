; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_clamp_exp_ge_le_logical_and_mul_view_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 4, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 16, !dbg !12
  %11 = and i32 %9, 15, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 16, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %14 = sdiv i32 %.frozen, 4, !dbg !15
  %15 = mul i32 %14, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %15, !dbg !16
  %16 = shl i32 %14, 3, !dbg !17
  %17 = add i32 %16, %.decomposed, !dbg !18
  %18 = add i32 %17, 4, !dbg !19
  %19 = sext i32 %18 to i64, !dbg !20
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !20
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %13) #1, !dbg !21
  %22 = bitcast i32 %21 to float, !dbg !21
  %23 = sext i32 %17 to i64, !dbg !22
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !22
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %13) #1, !dbg !23
  %26 = bitcast i32 %25 to float, !dbg !23
  %27 = sext i32 %12 to i64, !dbg !24
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !24
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %13) #1, !dbg !25
  %30 = bitcast i32 %29 to float, !dbg !25
  %31 = fcmp ogt float %22, -1.000000e+01, !dbg !26
  %32 = fcmp uno float %22, 0.000000e+00, !dbg !30
  %33 = or i1 %31, %32, !dbg !31
  %34 = select i1 %33, float %22, float -1.000000e+01, !dbg !32
  %35 = fcmp olt float %34, 2.000000e+00, !dbg !33
  %36 = fcmp uno float %34, 0.000000e+00, !dbg !35
  %37 = or i1 %35, %36, !dbg !36
  %38 = select i1 %37, float %34, float 2.000000e+00, !dbg !37
  %39 = fmul float %38, 5.000000e-01, !dbg !38
  %40 = fmul float %39, 0x3FF7154760000000, !dbg !39
  %41 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %40) #1, !dbg !39
  %42 = fmul float %41, %30, !dbg !40
  %43 = fadd float %42, %26, !dbg !41
  %44 = fcmp oge float %22, -1.000000e+01, !dbg !42
  %45 = fcmp ole float %22, 2.000000e+00, !dbg !43
  %46 = and i1 %44, %45, !dbg !44
  %47 = getelementptr float, ptr addrspace(1) %2, i64 %27, !dbg !45
  %48 = icmp eq i32 %10, 0, !dbg !46
  %49 = bitcast float %38 to i32, !dbg !46
  %50 = and i1 %48, %13, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %49, ptr addrspace(1) %47, i1 %50) #1, !dbg !46
  %51 = getelementptr float, ptr addrspace(1) %3, i64 %27, !dbg !47
  %52 = bitcast float %43 to i32, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %52, ptr addrspace(1) %51, i1 %50) #1, !dbg !48
  %53 = getelementptr i1, ptr addrspace(1) %4, i64 %27, !dbg !49
  %54 = zext i1 %46 to i8, !dbg !50
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %54, ptr addrspace(1) %53, i1 %50) #1, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cfiamgfc5lyka6apijg6fzpkidqs5zyoc7hwa2p7ykauxlpz5cp6.py", directory: "inductor_cache/fi")
!4 = !{ptr @triton_poi_fused_add_clamp_exp_ge_le_logical_and_mul_view_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_clamp_exp_ge_le_logical_and_mul_view_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_clamp_exp_ge_le_logical_and_mul_view_0", linkageName: "triton_poi_fused_add_clamp_exp_ge_le_logical_and_mul_view_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 41, scope: !7)
!18 = !DILocation(line: 27, column: 34, scope: !7)
!19 = !DILocation(line: 27, column: 39, scope: !7)
!20 = !DILocation(line: 27, column: 30, scope: !7)
!21 = !DILocation(line: 27, column: 46, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 42, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 35, scope: !7)
!26 = !DILocation(line: 118, column: 15, scope: !27, inlinedAt: !29)
!27 = distinct !DILexicalBlockFile(scope: !7, file: !28, discriminator: 0)
!28 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!29 = !DILocation(line: 31, column: 40, scope: !7)
!30 = !DILocation(line: 120, column: 21, scope: !27, inlinedAt: !29)
!31 = !DILocation(line: 120, column: 16, scope: !27, inlinedAt: !29)
!32 = !DILocation(line: 121, column: 29, scope: !27, inlinedAt: !29)
!33 = !DILocation(line: 110, column: 15, scope: !27, inlinedAt: !34)
!34 = !DILocation(line: 33, column: 40, scope: !7)
!35 = !DILocation(line: 112, column: 21, scope: !27, inlinedAt: !34)
!36 = !DILocation(line: 112, column: 16, scope: !27, inlinedAt: !34)
!37 = !DILocation(line: 113, column: 29, scope: !27, inlinedAt: !34)
!38 = !DILocation(line: 35, column: 18, scope: !7)
!39 = !DILocation(line: 36, column: 23, scope: !7)
!40 = !DILocation(line: 37, column: 19, scope: !7)
!41 = !DILocation(line: 38, column: 19, scope: !7)
!42 = !DILocation(line: 39, column: 20, scope: !7)
!43 = !DILocation(line: 40, column: 20, scope: !7)
!44 = !DILocation(line: 41, column: 20, scope: !7)
!45 = !DILocation(line: 42, column: 25, scope: !7)
!46 = !DILocation(line: 42, column: 36, scope: !7)
!47 = !DILocation(line: 43, column: 25, scope: !7)
!48 = !DILocation(line: 43, column: 37, scope: !7)
!49 = !DILocation(line: 44, column: 25, scope: !7)
!50 = !DILocation(line: 44, column: 37, scope: !7)
!51 = !DILocation(line: 44, column: 4, scope: !7)
