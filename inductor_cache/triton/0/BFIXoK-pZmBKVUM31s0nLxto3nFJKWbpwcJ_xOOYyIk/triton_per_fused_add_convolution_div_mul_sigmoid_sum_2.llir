; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_add_convolution_div_mul_sigmoid_sum_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %11 = icmp slt i32 %10, 16, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = and i32 %12, 15, !dbg !12
  %14 = srem i32 %10, 4, !dbg !13
  %15 = shl i32 %10, 4, !dbg !14
  %16 = or disjoint i32 %15, %13, !dbg !15
  %17 = sext i32 %16 to i64, !dbg !16
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !16
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %11, i32 0, i1 %11) #3, !dbg !17
  %20 = bitcast i32 %19 to float, !dbg !17
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %11, i32 0, i1 %11) #3, !dbg !17
  %22 = bitcast i32 %21 to float, !dbg !17
  %23 = sext i32 %14 to i64, !dbg !18
  %24 = getelementptr float, ptr addrspace(1) %3, i64 %23, !dbg !18
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %11) #3, !dbg !19
  %26 = bitcast i32 %25 to float, !dbg !19
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %11) #3, !dbg !19
  %28 = bitcast i32 %27 to float, !dbg !19
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !20
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %11, i32 0, i1 %11) #3, !dbg !21
  %31 = bitcast i32 %30 to float, !dbg !21
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %11, i32 0, i1 %11) #3, !dbg !21
  %33 = bitcast i32 %32 to float, !dbg !21
  %34 = getelementptr float, ptr addrspace(1) %4, i64 %23, !dbg !22
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %11) #3, !dbg !23
  %36 = bitcast i32 %35 to float, !dbg !23
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %11) #3, !dbg !23
  %38 = bitcast i32 %37 to float, !dbg !23
  %39 = fadd float %20, %26, !dbg !24
  %40 = fadd float %22, %28, !dbg !24
  %41 = fadd float %31, %36, !dbg !25
  %42 = fadd float %33, %38, !dbg !25
  %43 = fsub float 0.000000e+00, %39, !dbg !26
  %44 = fmul float %43, 0x3FF7154760000000, !dbg !30
  %45 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %44) #3, !dbg !30
  %46 = fadd float %45, 1.000000e+00, !dbg !31
  %47 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %46) #3, !dbg !32
  %48 = fmul float %41, %47, !dbg !33
  %49 = select i1 %11, float %48, float 0.000000e+00, !dbg !34
  %50 = bitcast float %49 to i32, !dbg !35
  %51 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %50, i32 8, i32 31), !dbg !35
  %52 = bitcast i32 %51 to float, !dbg !35
  %53 = fadd float %49, %52, !dbg !37
  %54 = bitcast float %53 to i32, !dbg !35
  %55 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %54, i32 4, i32 31), !dbg !35
  %56 = bitcast i32 %55 to float, !dbg !35
  %57 = fadd float %53, %56, !dbg !37
  %58 = bitcast float %57 to i32, !dbg !35
  %59 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %58, i32 2, i32 31), !dbg !35
  %60 = bitcast i32 %59 to float, !dbg !35
  %61 = fadd float %57, %60, !dbg !37
  %62 = bitcast float %61 to i32, !dbg !35
  %63 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %62, i32 1, i32 31), !dbg !35
  %64 = bitcast i32 %63 to float, !dbg !35
  %65 = fadd float %61, %64, !dbg !37
  %66 = select i1 %11, float %47, float 0.000000e+00, !dbg !39
  %67 = bitcast float %66 to i32, !dbg !40
  %68 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %67, i32 8, i32 31), !dbg !40
  %69 = bitcast i32 %68 to float, !dbg !40
  %70 = fadd float %66, %69, !dbg !42
  %71 = bitcast float %70 to i32, !dbg !40
  %72 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %71, i32 4, i32 31), !dbg !40
  %73 = bitcast i32 %72 to float, !dbg !40
  %74 = fadd float %70, %73, !dbg !42
  %75 = bitcast float %74 to i32, !dbg !40
  %76 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %75, i32 2, i32 31), !dbg !40
  %77 = bitcast i32 %76 to float, !dbg !40
  %78 = fadd float %74, %77, !dbg !42
  %79 = bitcast float %78 to i32, !dbg !40
  %80 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %79, i32 1, i32 31), !dbg !40
  %81 = bitcast i32 %80 to float, !dbg !40
  %82 = fadd float %78, %81, !dbg !42
  %83 = fadd float %82, 0x3EB0C6F7A0000000, !dbg !43
  %84 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %65, float %83) #3, !dbg !44
  %85 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %84, float %83) #3, !dbg !45
  %86 = and i32 %12, 48, !dbg !46
  %87 = icmp eq i32 %86, 0, !dbg !46
  %88 = bitcast float %40 to i32, !dbg !46
  %89 = and i1 %87, %11, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %88, ptr addrspace(1) %18, i1 %89) #3, !dbg !46
  %90 = bitcast float %42 to i32, !dbg !47
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %90, ptr addrspace(1) %29, i1 %89) #3, !dbg !47
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  %91 = sext i32 %10 to i64, !dbg !49
  %92 = getelementptr float, ptr addrspace(1) %2, i64 %91, !dbg !49
  %urem = and i32 %12, 63, !dbg !50
  %93 = icmp eq i32 %urem, 0, !dbg !50
  %94 = bitcast float %83 to i32, !dbg !50
  %95 = and i1 %93, %11, !dbg !50
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %94, ptr addrspace(1) %92, i1 %95) #3, !dbg !50
  %96 = getelementptr float, ptr addrspace(1) %5, i64 %91, !dbg !51
  %97 = bitcast float %84 to i32, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %97, ptr addrspace(1) %96, i1 %95) #3, !dbg !52
  %98 = getelementptr float, ptr addrspace(1) %6, i64 %91, !dbg !53
  %99 = bitcast float %85 to i32, !dbg !54
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %99, ptr addrspace(1) %98, i1 %95) #3, !dbg !54
  ret void, !dbg !55
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cs3dtg44navhfebfvh7richhd3jed6ukqlc4tfkan7qjriv6lls4.py", directory: "inductor_cache/s3")
!4 = !{ptr @triton_per_fused_add_convolution_div_mul_sigmoid_sum_2, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_convolution_div_mul_sigmoid_sum_2, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_convolution_div_mul_sigmoid_sum_2", linkageName: "triton_per_fused_add_convolution_div_mul_sigmoid_sum_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 19, scope: !7)
!14 = !DILocation(line: 32, column: 42, scope: !7)
!15 = !DILocation(line: 32, column: 39, scope: !7)
!16 = !DILocation(line: 32, column: 34, scope: !7)
!17 = !DILocation(line: 32, column: 47, scope: !7)
!18 = !DILocation(line: 33, column: 30, scope: !7)
!19 = !DILocation(line: 33, column: 35, scope: !7)
!20 = !DILocation(line: 34, column: 34, scope: !7)
!21 = !DILocation(line: 34, column: 47, scope: !7)
!22 = !DILocation(line: 35, column: 30, scope: !7)
!23 = !DILocation(line: 35, column: 35, scope: !7)
!24 = !DILocation(line: 36, column: 18, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 47, column: 30, scope: !27, inlinedAt: !29)
!27 = distinct !DILexicalBlockFile(scope: !7, file: !28, discriminator: 0)
!28 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!29 = !DILocation(line: 38, column: 22, scope: !7)
!30 = !DILocation(line: 47, column: 29, scope: !27, inlinedAt: !29)
!31 = !DILocation(line: 47, column: 20, scope: !27, inlinedAt: !29)
!32 = !DILocation(line: 47, column: 16, scope: !27, inlinedAt: !29)
!33 = !DILocation(line: 39, column: 18, scope: !7)
!34 = !DILocation(line: 41, column: 34, scope: !7)
!35 = !DILocation(line: 267, column: 36, scope: !27, inlinedAt: !36)
!36 = !DILocation(line: 42, column: 26, scope: !7)
!37 = !DILocation(line: 256, column: 15, scope: !38, inlinedAt: !36)
!38 = distinct !DILexicalBlockFile(scope: !27, file: !28, discriminator: 0)
!39 = !DILocation(line: 44, column: 35, scope: !7)
!40 = !DILocation(line: 267, column: 36, scope: !27, inlinedAt: !41)
!41 = !DILocation(line: 45, column: 26, scope: !7)
!42 = !DILocation(line: 256, column: 15, scope: !38, inlinedAt: !41)
!43 = !DILocation(line: 47, column: 20, scope: !7)
!44 = !DILocation(line: 48, column: 20, scope: !7)
!45 = !DILocation(line: 49, column: 20, scope: !7)
!46 = !DILocation(line: 50, column: 47, scope: !7)
!47 = !DILocation(line: 51, column: 47, scope: !7)
!48 = !DILocation(line: 52, column: 4, scope: !7)
!49 = !DILocation(line: 53, column: 28, scope: !7)
!50 = !DILocation(line: 53, column: 40, scope: !7)
!51 = !DILocation(line: 54, column: 25, scope: !7)
!52 = !DILocation(line: 54, column: 37, scope: !7)
!53 = !DILocation(line: 55, column: 25, scope: !7)
!54 = !DILocation(line: 55, column: 37, scope: !7)
!55 = !DILocation(line: 55, column: 4, scope: !7)
