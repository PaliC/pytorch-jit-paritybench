#loc = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_constant_pad_nd_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<33> : tensor<256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<17> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_4 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_6 = arith.constant dense<-15> : tensor<256xi32> loc(#loc1)
    %cst_7 = arith.constant dense<1> : tensor<256xi64> loc(#loc1)
    %cst_8 = arith.constant dense<4> : tensor<256xi64> loc(#loc1)
    %cst_9 = arith.constant dense<0> : tensor<256xi64> loc(#loc1)
    %cst_10 = arith.constant dense<-3> : tensor<256xi32> loc(#loc1)
    %cst_11 = arith.constant dense<200> : tensor<256xi32> loc(#loc1)
    %cst_12 = arith.constant dense<2> : tensor<256xi32> loc(#loc1)
    %cst_13 = arith.constant dense<100> : tensor<256xi32> loc(#loc1)
    %cst_14 = arith.constant dense<10> : tensor<256xi32> loc(#loc1)
    %cst_15 = arith.constant dense<800> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_15 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_14 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_14 : tensor<256xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_14 : tensor<256xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_13 : tensor<256xi32> loc(#loc10)
    %10 = arith.remsi %9, %cst_12 : tensor<256xi32> loc(#loc11)
    %11 = arith.divsi %4, %cst_11 : tensor<256xi32> loc(#loc12)
    %12 = arith.addi %7, %cst_10 : tensor<256xi32> loc(#loc13)
    %13 = arith.extsi %12 : tensor<256xi32> to tensor<256xi64> loc(#loc14)
    %14 = arith.cmpi sge, %13, %cst_9 : tensor<256xi64> loc(#loc14)
    %15 = arith.cmpi slt, %13, %cst_8 : tensor<256xi64> loc(#loc15)
    %16 = arith.addi %8, %cst_10 : tensor<256xi32> loc(#loc16)
    %17 = arith.extsi %16 : tensor<256xi32> to tensor<256xi64> loc(#loc17)
    %18 = arith.cmpi sge, %17, %cst_9 : tensor<256xi64> loc(#loc17)
    %19 = arith.cmpi slt, %17, %cst_8 : tensor<256xi64> loc(#loc18)
    %20 = arith.andi %14, %15 : tensor<256xi1> loc(#loc19)
    %21 = arith.andi %20, %18 : tensor<256xi1> loc(#loc20)
    %22 = arith.andi %21, %19 : tensor<256xi1> loc(#loc21)
    %23 = arith.extsi %10 : tensor<256xi32> to tensor<256xi64> loc(#loc22)
    %24 = arith.cmpi slt, %23, %cst_7 : tensor<256xi64> loc(#loc22)
    %25 = arith.andi %24, %22 : tensor<256xi1> loc(#loc23)
    %26 = arith.addi %8, %cst_6 : tensor<256xi32> loc(#loc24)
    %27 = arith.muli %7, %cst_5 : tensor<256xi32> loc(#loc25)
    %28 = arith.addi %26, %27 : tensor<256xi32> loc(#loc26)
    %29 = arith.muli %11, %cst_4 : tensor<256xi32> loc(#loc27)
    %30 = arith.addi %28, %29 : tensor<256xi32> loc(#loc28)
    %31 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc29)
    %32 = tt.addptr %31, %30 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc29)
    %33 = arith.andi %25, %5 : tensor<256xi1> loc(#loc30)
    %34 = tt.load %32, %33, %cst_3 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc31)
    %35 = arith.addi %8, %cst_2 : tensor<256xi32> loc(#loc32)
    %36 = arith.addi %35, %27 : tensor<256xi32> loc(#loc33)
    %37 = arith.addi %36, %29 : tensor<256xi32> loc(#loc34)
    %38 = tt.addptr %31, %37 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc35)
    %39 = tt.load %38, %33, %cst_3 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc36)
    %40 = arith.addf %34, %39 : tensor<256xf32> loc(#loc37)
    %41 = arith.addi %8, %cst_1 : tensor<256xi32> loc(#loc38)
    %42 = arith.addi %41, %27 : tensor<256xi32> loc(#loc39)
    %43 = arith.addi %42, %29 : tensor<256xi32> loc(#loc40)
    %44 = tt.addptr %31, %43 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc41)
    %45 = tt.load %44, %33, %cst_3 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc42)
    %46 = arith.addf %40, %45 : tensor<256xf32> loc(#loc43)
    %47 = arith.addi %8, %cst_0 : tensor<256xi32> loc(#loc44)
    %48 = arith.addi %47, %27 : tensor<256xi32> loc(#loc45)
    %49 = arith.addi %48, %29 : tensor<256xi32> loc(#loc46)
    %50 = tt.addptr %31, %49 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc47)
    %51 = tt.load %50, %33, %cst_3 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc48)
    %52 = arith.addf %46, %51 : tensor<256xf32> loc(#loc49)
    %53 = arith.divf %52, %cst : tensor<256xf32> loc(#loc50)
    %54 = arith.select %25, %53, %cst_3 : tensor<256xi1>, tensor<256xf32> loc(#loc51)
    %55 = arith.cmpi sge, %23, %cst_7 : tensor<256xi64> loc(#loc52)
    %56 = arith.andi %55, %22 : tensor<256xi1> loc(#loc53)
    %57 = arith.andi %56, %5 : tensor<256xi1> loc(#loc54)
    %58 = tt.load %32, %57, %cst_3 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc55)
    %59 = tt.load %38, %57, %cst_3 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc56)
    %60 = arith.cmpf ogt, %58, %59 : tensor<256xf32> loc(#loc72)
    %61 = arith.cmpf une, %58, %58 : tensor<256xf32> loc(#loc73)
    %62 = arith.ori %60, %61 : tensor<256xi1> loc(#loc74)
    %63 = arith.select %62, %58, %59 : tensor<256xi1>, tensor<256xf32> loc(#loc75)
    %64 = tt.load %44, %57, %cst_3 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc62)
    %65 = arith.cmpf ogt, %63, %64 : tensor<256xf32> loc(#loc76)
    %66 = arith.cmpf une, %63, %63 : tensor<256xf32> loc(#loc77)
    %67 = arith.ori %65, %66 : tensor<256xi1> loc(#loc78)
    %68 = arith.select %67, %63, %64 : tensor<256xi1>, tensor<256xf32> loc(#loc79)
    %69 = tt.load %50, %57, %cst_3 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc64)
    %70 = arith.cmpf ogt, %68, %69 : tensor<256xf32> loc(#loc80)
    %71 = arith.cmpf une, %68, %68 : tensor<256xf32> loc(#loc81)
    %72 = arith.ori %70, %71 : tensor<256xi1> loc(#loc82)
    %73 = arith.select %72, %68, %69 : tensor<256xi1>, tensor<256xf32> loc(#loc83)
    %74 = arith.select %56, %73, %cst_3 : tensor<256xi1>, tensor<256xf32> loc(#loc66)
    %75 = arith.select %24, %54, %74 : tensor<256xi1>, tensor<256xf32> loc(#loc67)
    %76 = arith.select %22, %75, %cst_3 : tensor<256xi1>, tensor<256xf32> loc(#loc68)
    %77 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc69)
    %78 = tt.addptr %77, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc69)
    tt.store %78, %76, %5 : tensor<256x!tt.ptr<f32>> loc(#loc70)
    tt.return loc(#loc71)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":21:28)
#loc3 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":21:33)
#loc4 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":22:36)
#loc5 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":22:23)
#loc6 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":23:21)
#loc7 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":24:21)
#loc8 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":24:27)
#loc9 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":25:19)
#loc10 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":26:21)
#loc11 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":26:28)
#loc12 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":27:19)
#loc13 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":29:18)
#loc14 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":31:19)
#loc15 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":33:18)
#loc16 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":34:18)
#loc17 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":35:19)
#loc18 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":36:18)
#loc19 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":37:18)
#loc20 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":38:18)
#loc21 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":39:19)
#loc22 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":44:20)
#loc23 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":45:20)
#loc24 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":46:39)
#loc25 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":46:46)
#loc26 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":46:44)
#loc27 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":46:54)
#loc28 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":46:51)
#loc29 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":46:31)
#loc30 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":46:67)
#loc31 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":46:59)
#loc32 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":47:35)
#loc33 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":47:40)
#loc34 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":47:47)
#loc35 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":47:31)
#loc36 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":47:55)
#loc37 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":48:20)
#loc38 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":49:36)
#loc39 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":49:41)
#loc40 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":49:48)
#loc41 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":49:31)
#loc42 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":49:56)
#loc43 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":50:20)
#loc44 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":51:36)
#loc45 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":51:41)
#loc46 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":51:48)
#loc47 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":51:31)
#loc48 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":51:56)
#loc49 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":52:20)
#loc50 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":54:20)
#loc51 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":56:35)
#loc52 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":57:21)
#loc53 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":60:20)
#loc54 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":61:67)
#loc55 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":61:59)
#loc56 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":62:55)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc58 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":63:42)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc62 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":64:56)
#loc63 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":65:42)
#loc64 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":66:56)
#loc65 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":67:42)
#loc66 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":69:35)
#loc67 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":70:35)
#loc68 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":72:35)
#loc69 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":73:25)
#loc70 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":73:37)
#loc71 = loc("inductor_cache/dq/cdqlqr7z7qqfrezhsu2pqwvfrc5torqiw4qhaudiw6vy4tc2rpvy.py":73:4)
#loc72 = loc(callsite(#loc57 at #loc58))
#loc73 = loc(callsite(#loc59 at #loc58))
#loc74 = loc(callsite(#loc60 at #loc58))
#loc75 = loc(callsite(#loc61 at #loc58))
#loc76 = loc(callsite(#loc57 at #loc63))
#loc77 = loc(callsite(#loc59 at #loc63))
#loc78 = loc(callsite(#loc60 at #loc63))
#loc79 = loc(callsite(#loc61 at #loc63))
#loc80 = loc(callsite(#loc57 at #loc65))
#loc81 = loc(callsite(#loc59 at #loc65))
#loc82 = loc(callsite(#loc60 at #loc65))
#loc83 = loc(callsite(#loc61 at #loc65))
