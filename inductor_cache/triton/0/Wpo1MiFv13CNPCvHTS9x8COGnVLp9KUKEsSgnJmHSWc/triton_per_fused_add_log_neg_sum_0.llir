; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_add_log_neg_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = shl i32 %5, 2, !dbg !10
  %7 = and i32 %6, 252, !dbg !10
  %8 = zext nneg i32 %7 to i64, !dbg !11
  %9 = getelementptr float, ptr addrspace(1) %1, i64 %8, !dbg !11
  %10 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %9, i1 true) #4, !dbg !12
  %11 = extractvalue { i32, i32, i32, i32 } %10, 0, !dbg !12
  %12 = extractvalue { i32, i32, i32, i32 } %10, 1, !dbg !12
  %13 = extractvalue { i32, i32, i32, i32 } %10, 2, !dbg !12
  %14 = extractvalue { i32, i32, i32, i32 } %10, 3, !dbg !12
  %15 = bitcast i32 %11 to float, !dbg !12
  %16 = bitcast i32 %12 to float, !dbg !12
  %17 = bitcast i32 %13 to float, !dbg !12
  %18 = bitcast i32 %14 to float, !dbg !12
  %19 = getelementptr float, ptr addrspace(1) %2, i64 %8, !dbg !13
  %20 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %19, i1 true) #4, !dbg !14
  %21 = fadd float %15, 0x3E80000000000000, !dbg !15
  %22 = fadd float %16, 0x3E80000000000000, !dbg !15
  %23 = fadd float %17, 0x3E80000000000000, !dbg !15
  %24 = fadd float %18, 0x3E80000000000000, !dbg !15
  %25 = fcmp olt float %21, 0x3810000000000000, !dbg !16
  %26 = fmul float %21, 0x4160000000000000, !dbg !16
  %.02.i = select i1 %25, float %26, float %21, !dbg !16
  %i.i.0.i = select i1 %25, float -2.300000e+01, float 0.000000e+00, !dbg !16
  %27 = bitcast float %.02.i to i32, !dbg !16
  %28 = add i32 %27, -1059760811, !dbg !16
  %29 = and i32 %28, -8388608, !dbg !16
  %30 = sub i32 %27, %29, !dbg !16
  %31 = bitcast i32 %30 to float, !dbg !16
  %32 = sitofp i32 %29 to float, !dbg !16
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i = icmp eq i32 %33, 0, !dbg !16
  %34 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %32, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !16
  %35 = tail call float @llvm.nvvm.fma.rn.f(float %32, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !16
  %.08.i = select i1 %.not.i, float %35, float %34, !dbg !16
  %36 = fadd float %31, -1.000000e+00, !dbg !16
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not1.i = icmp eq i32 %37, 0, !dbg !16
  %38 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %36, float 0x3FC2073EC0000000) #4, !dbg !16
  %39 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %36, float 0x3FC2073EC0000000) #4, !dbg !16
  %.010.i = select i1 %.not1.i, float %39, float %38, !dbg !16
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not2.i = icmp eq i32 %40, 0, !dbg !16
  %41 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %36, float 0xBFBF19B980000000) #4, !dbg !16
  %42 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %36, float 0xBFBF19B980000000) #4, !dbg !16
  %.011.i = select i1 %.not2.i, float %42, float %41, !dbg !16
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not3.i = icmp eq i32 %43, 0, !dbg !16
  %44 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %36, float 0x3FC1E52AA0000000) #4, !dbg !16
  %45 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %36, float 0x3FC1E52AA0000000) #4, !dbg !16
  %.012.i = select i1 %.not3.i, float %45, float %44, !dbg !16
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not4.i = icmp eq i32 %46, 0, !dbg !16
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %36, float 0xBFC55B1720000000) #4, !dbg !16
  %48 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %36, float 0xBFC55B1720000000) #4, !dbg !16
  %.09.i = select i1 %.not4.i, float %48, float %47, !dbg !16
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not5.i = icmp eq i32 %49, 0, !dbg !16
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %36, float 0x3FC99DA160000000) #4, !dbg !16
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %36, float 0x3FC99DA160000000) #4, !dbg !16
  %.05.i = select i1 %.not5.i, float %51, float %50, !dbg !16
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not6.i = icmp eq i32 %52, 0, !dbg !16
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %36, float 0xBFCFFFE440000000) #4, !dbg !16
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %36, float 0xBFCFFFE440000000) #4, !dbg !16
  %.01.i = select i1 %.not6.i, float %54, float %53, !dbg !16
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not7.i = icmp eq i32 %55, 0, !dbg !16
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %36, float 0x3FD5554F00000000) #4, !dbg !16
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %36, float 0x3FD5554F00000000) #4, !dbg !16
  %.0.i = select i1 %.not7.i, float %57, float %56, !dbg !16
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not8.i = icmp eq i32 %58, 0, !dbg !16
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %36, float -5.000000e-01) #4, !dbg !16
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %36, float -5.000000e-01) #4, !dbg !16
  %.07.i = select i1 %.not8.i, float %60, float %59, !dbg !16
  %61 = fmul float %36, %.07.i, !dbg !16
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not9.i = icmp eq i32 %62, 0, !dbg !16
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %61, float %36, float %36) #4, !dbg !16
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %61, float %36, float %36) #4, !dbg !16
  %.06.i = select i1 %.not9.i, float %64, float %63, !dbg !16
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not10.i = icmp eq i32 %65, 0, !dbg !16
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !16
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !16
  %.04.i = select i1 %.not10.i, float %67, float %66, !dbg !16
  %68 = icmp ugt i32 %27, 2139095039, !dbg !16
  br i1 %68, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !16

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not11.i = icmp eq i32 %69, 0, !dbg !16
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %.03.i = select i1 %.not11.i, float %71, float %70, !dbg !16
  br label %__nv_logf.exit, !dbg !16

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !16
  %72 = fcmp olt float %22, 0x3810000000000000, !dbg !16
  %73 = fmul float %22, 0x4160000000000000, !dbg !16
  %.02.i1 = select i1 %72, float %73, float %22, !dbg !16
  %i.i.0.i2 = select i1 %72, float -2.300000e+01, float 0.000000e+00, !dbg !16
  %74 = bitcast float %.02.i1 to i32, !dbg !16
  %75 = add i32 %74, -1059760811, !dbg !16
  %76 = and i32 %75, -8388608, !dbg !16
  %77 = sub i32 %74, %76, !dbg !16
  %78 = bitcast i32 %77 to float, !dbg !16
  %79 = sitofp i32 %76 to float, !dbg !16
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i3 = icmp eq i32 %80, 0, !dbg !16
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %79, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !16
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %79, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !16
  %.08.i4 = select i1 %.not.i3, float %82, float %81, !dbg !16
  %83 = fadd float %78, -1.000000e+00, !dbg !16
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not1.i5 = icmp eq i32 %84, 0, !dbg !16
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %83, float 0x3FC2073EC0000000) #4, !dbg !16
  %86 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %83, float 0x3FC2073EC0000000) #4, !dbg !16
  %.010.i6 = select i1 %.not1.i5, float %86, float %85, !dbg !16
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not2.i7 = icmp eq i32 %87, 0, !dbg !16
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %83, float 0xBFBF19B980000000) #4, !dbg !16
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %83, float 0xBFBF19B980000000) #4, !dbg !16
  %.011.i8 = select i1 %.not2.i7, float %89, float %88, !dbg !16
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not3.i9 = icmp eq i32 %90, 0, !dbg !16
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %83, float 0x3FC1E52AA0000000) #4, !dbg !16
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %83, float 0x3FC1E52AA0000000) #4, !dbg !16
  %.012.i10 = select i1 %.not3.i9, float %92, float %91, !dbg !16
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not4.i11 = icmp eq i32 %93, 0, !dbg !16
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %83, float 0xBFC55B1720000000) #4, !dbg !16
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %83, float 0xBFC55B1720000000) #4, !dbg !16
  %.09.i12 = select i1 %.not4.i11, float %95, float %94, !dbg !16
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not5.i13 = icmp eq i32 %96, 0, !dbg !16
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %83, float 0x3FC99DA160000000) #4, !dbg !16
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %83, float 0x3FC99DA160000000) #4, !dbg !16
  %.05.i14 = select i1 %.not5.i13, float %98, float %97, !dbg !16
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not6.i15 = icmp eq i32 %99, 0, !dbg !16
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %83, float 0xBFCFFFE440000000) #4, !dbg !16
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %83, float 0xBFCFFFE440000000) #4, !dbg !16
  %.01.i16 = select i1 %.not6.i15, float %101, float %100, !dbg !16
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not7.i17 = icmp eq i32 %102, 0, !dbg !16
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %83, float 0x3FD5554F00000000) #4, !dbg !16
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %83, float 0x3FD5554F00000000) #4, !dbg !16
  %.0.i18 = select i1 %.not7.i17, float %104, float %103, !dbg !16
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not8.i19 = icmp eq i32 %105, 0, !dbg !16
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %83, float -5.000000e-01) #4, !dbg !16
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %83, float -5.000000e-01) #4, !dbg !16
  %.07.i20 = select i1 %.not8.i19, float %107, float %106, !dbg !16
  %108 = fmul float %83, %.07.i20, !dbg !16
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not9.i21 = icmp eq i32 %109, 0, !dbg !16
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %108, float %83, float %83) #4, !dbg !16
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %108, float %83, float %83) #4, !dbg !16
  %.06.i22 = select i1 %.not9.i21, float %111, float %110, !dbg !16
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not10.i23 = icmp eq i32 %112, 0, !dbg !16
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !16
  %114 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !16
  %.04.i24 = select i1 %.not10.i23, float %114, float %113, !dbg !16
  %115 = icmp ugt i32 %74, 2139095039, !dbg !16
  br i1 %115, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !16

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not11.i28 = icmp eq i32 %116, 0, !dbg !16
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %.03.i29 = select i1 %.not11.i28, float %118, float %117, !dbg !16
  br label %__nv_logf.exit30, !dbg !16

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !16
  %119 = fcmp olt float %23, 0x3810000000000000, !dbg !16
  %120 = fmul float %23, 0x4160000000000000, !dbg !16
  %.02.i31 = select i1 %119, float %120, float %23, !dbg !16
  %i.i.0.i32 = select i1 %119, float -2.300000e+01, float 0.000000e+00, !dbg !16
  %121 = bitcast float %.02.i31 to i32, !dbg !16
  %122 = add i32 %121, -1059760811, !dbg !16
  %123 = and i32 %122, -8388608, !dbg !16
  %124 = sub i32 %121, %123, !dbg !16
  %125 = bitcast i32 %124 to float, !dbg !16
  %126 = sitofp i32 %123 to float, !dbg !16
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i33 = icmp eq i32 %127, 0, !dbg !16
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %126, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !16
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %126, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !16
  %.08.i34 = select i1 %.not.i33, float %129, float %128, !dbg !16
  %130 = fadd float %125, -1.000000e+00, !dbg !16
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not1.i35 = icmp eq i32 %131, 0, !dbg !16
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %130, float 0x3FC2073EC0000000) #4, !dbg !16
  %133 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %130, float 0x3FC2073EC0000000) #4, !dbg !16
  %.010.i36 = select i1 %.not1.i35, float %133, float %132, !dbg !16
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not2.i37 = icmp eq i32 %134, 0, !dbg !16
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %130, float 0xBFBF19B980000000) #4, !dbg !16
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %130, float 0xBFBF19B980000000) #4, !dbg !16
  %.011.i38 = select i1 %.not2.i37, float %136, float %135, !dbg !16
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not3.i39 = icmp eq i32 %137, 0, !dbg !16
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %130, float 0x3FC1E52AA0000000) #4, !dbg !16
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %130, float 0x3FC1E52AA0000000) #4, !dbg !16
  %.012.i40 = select i1 %.not3.i39, float %139, float %138, !dbg !16
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not4.i41 = icmp eq i32 %140, 0, !dbg !16
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %130, float 0xBFC55B1720000000) #4, !dbg !16
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %130, float 0xBFC55B1720000000) #4, !dbg !16
  %.09.i42 = select i1 %.not4.i41, float %142, float %141, !dbg !16
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not5.i43 = icmp eq i32 %143, 0, !dbg !16
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %130, float 0x3FC99DA160000000) #4, !dbg !16
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %130, float 0x3FC99DA160000000) #4, !dbg !16
  %.05.i44 = select i1 %.not5.i43, float %145, float %144, !dbg !16
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not6.i45 = icmp eq i32 %146, 0, !dbg !16
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %130, float 0xBFCFFFE440000000) #4, !dbg !16
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %130, float 0xBFCFFFE440000000) #4, !dbg !16
  %.01.i46 = select i1 %.not6.i45, float %148, float %147, !dbg !16
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not7.i47 = icmp eq i32 %149, 0, !dbg !16
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %130, float 0x3FD5554F00000000) #4, !dbg !16
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %130, float 0x3FD5554F00000000) #4, !dbg !16
  %.0.i48 = select i1 %.not7.i47, float %151, float %150, !dbg !16
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not8.i49 = icmp eq i32 %152, 0, !dbg !16
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %130, float -5.000000e-01) #4, !dbg !16
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %130, float -5.000000e-01) #4, !dbg !16
  %.07.i50 = select i1 %.not8.i49, float %154, float %153, !dbg !16
  %155 = fmul float %130, %.07.i50, !dbg !16
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not9.i51 = icmp eq i32 %156, 0, !dbg !16
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %155, float %130, float %130) #4, !dbg !16
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %155, float %130, float %130) #4, !dbg !16
  %.06.i52 = select i1 %.not9.i51, float %158, float %157, !dbg !16
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not10.i53 = icmp eq i32 %159, 0, !dbg !16
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !16
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !16
  %.04.i54 = select i1 %.not10.i53, float %161, float %160, !dbg !16
  %162 = icmp ugt i32 %121, 2139095039, !dbg !16
  br i1 %162, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !16

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not11.i58 = icmp eq i32 %163, 0, !dbg !16
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %.03.i59 = select i1 %.not11.i58, float %165, float %164, !dbg !16
  br label %__nv_logf.exit60, !dbg !16

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !16
  %166 = fcmp olt float %24, 0x3810000000000000, !dbg !16
  %167 = fmul float %24, 0x4160000000000000, !dbg !16
  %.02.i61 = select i1 %166, float %167, float %24, !dbg !16
  %i.i.0.i62 = select i1 %166, float -2.300000e+01, float 0.000000e+00, !dbg !16
  %168 = bitcast float %.02.i61 to i32, !dbg !16
  %169 = add i32 %168, -1059760811, !dbg !16
  %170 = and i32 %169, -8388608, !dbg !16
  %171 = sub i32 %168, %170, !dbg !16
  %172 = bitcast i32 %171 to float, !dbg !16
  %173 = sitofp i32 %170 to float, !dbg !16
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i63 = icmp eq i32 %174, 0, !dbg !16
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %173, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !16
  %176 = tail call float @llvm.nvvm.fma.rn.f(float %173, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !16
  %.08.i64 = select i1 %.not.i63, float %176, float %175, !dbg !16
  %177 = fadd float %172, -1.000000e+00, !dbg !16
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not1.i65 = icmp eq i32 %178, 0, !dbg !16
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %177, float 0x3FC2073EC0000000) #4, !dbg !16
  %180 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %177, float 0x3FC2073EC0000000) #4, !dbg !16
  %.010.i66 = select i1 %.not1.i65, float %180, float %179, !dbg !16
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not2.i67 = icmp eq i32 %181, 0, !dbg !16
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %177, float 0xBFBF19B980000000) #4, !dbg !16
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %177, float 0xBFBF19B980000000) #4, !dbg !16
  %.011.i68 = select i1 %.not2.i67, float %183, float %182, !dbg !16
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not3.i69 = icmp eq i32 %184, 0, !dbg !16
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %177, float 0x3FC1E52AA0000000) #4, !dbg !16
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %177, float 0x3FC1E52AA0000000) #4, !dbg !16
  %.012.i70 = select i1 %.not3.i69, float %186, float %185, !dbg !16
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not4.i71 = icmp eq i32 %187, 0, !dbg !16
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %177, float 0xBFC55B1720000000) #4, !dbg !16
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %177, float 0xBFC55B1720000000) #4, !dbg !16
  %.09.i72 = select i1 %.not4.i71, float %189, float %188, !dbg !16
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not5.i73 = icmp eq i32 %190, 0, !dbg !16
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %177, float 0x3FC99DA160000000) #4, !dbg !16
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %177, float 0x3FC99DA160000000) #4, !dbg !16
  %.05.i74 = select i1 %.not5.i73, float %192, float %191, !dbg !16
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not6.i75 = icmp eq i32 %193, 0, !dbg !16
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %177, float 0xBFCFFFE440000000) #4, !dbg !16
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %177, float 0xBFCFFFE440000000) #4, !dbg !16
  %.01.i76 = select i1 %.not6.i75, float %195, float %194, !dbg !16
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not7.i77 = icmp eq i32 %196, 0, !dbg !16
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %177, float 0x3FD5554F00000000) #4, !dbg !16
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %177, float 0x3FD5554F00000000) #4, !dbg !16
  %.0.i78 = select i1 %.not7.i77, float %198, float %197, !dbg !16
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not8.i79 = icmp eq i32 %199, 0, !dbg !16
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %177, float -5.000000e-01) #4, !dbg !16
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %177, float -5.000000e-01) #4, !dbg !16
  %.07.i80 = select i1 %.not8.i79, float %201, float %200, !dbg !16
  %202 = fmul float %177, %.07.i80, !dbg !16
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not9.i81 = icmp eq i32 %203, 0, !dbg !16
  %204 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %202, float %177, float %177) #4, !dbg !16
  %205 = tail call float @llvm.nvvm.fma.rn.f(float %202, float %177, float %177) #4, !dbg !16
  %.06.i82 = select i1 %.not9.i81, float %205, float %204, !dbg !16
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not10.i83 = icmp eq i32 %206, 0, !dbg !16
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !16
  %208 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !16
  %.04.i84 = select i1 %.not10.i83, float %208, float %207, !dbg !16
  %209 = icmp ugt i32 %168, 2139095039, !dbg !16
  br i1 %209, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !16

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not11.i88 = icmp eq i32 %210, 0, !dbg !16
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %.03.i89 = select i1 %.not11.i88, float %212, float %211, !dbg !16
  br label %__nv_logf.exit90, !dbg !16

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !16
  %213 = fcmp oeq float %.02.i31, 0.000000e+00, !dbg !16
  %r.i.1.i56 = select i1 %213, float 0xFFF0000000000000, float %r.i.0.i55, !dbg !16
  %214 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !16
  %r.i.1.i26 = select i1 %214, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !16
  %215 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !16
  %r.i.1.i = select i1 %215, float 0xFFF0000000000000, float %r.i.0.i, !dbg !16
  %216 = extractvalue { i32, i32, i32, i32 } %20, 3, !dbg !14
  %217 = bitcast i32 %216 to float, !dbg !14
  %218 = extractvalue { i32, i32, i32, i32 } %20, 2, !dbg !14
  %219 = bitcast i32 %218 to float, !dbg !14
  %220 = extractvalue { i32, i32, i32, i32 } %20, 1, !dbg !14
  %221 = bitcast i32 %220 to float, !dbg !14
  %222 = extractvalue { i32, i32, i32, i32 } %20, 0, !dbg !14
  %223 = bitcast i32 %222 to float, !dbg !14
  %224 = lshr i32 %5, 5, !dbg !10
  %225 = and i32 %5, 31, !dbg !10
  %226 = fcmp oeq float %.02.i61, 0.000000e+00, !dbg !16
  %r.i.1.i86 = select i1 %226, float 0xFFF0000000000000, float %r.i.0.i85, !dbg !16
  %227 = fadd float %r.i.1.i, %r.i.1.i26, !dbg !17
  %228 = fadd float %227, %r.i.1.i56, !dbg !17
  %229 = fadd float %228, %r.i.1.i86, !dbg !17
  %230 = bitcast float %229 to i32, !dbg !22
  %231 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %230, i32 16, i32 31), !dbg !22
  %232 = bitcast i32 %231 to float, !dbg !22
  %233 = fadd float %229, %232, !dbg !17
  %234 = bitcast float %233 to i32, !dbg !22
  %235 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %234, i32 8, i32 31), !dbg !22
  %236 = bitcast i32 %235 to float, !dbg !22
  %237 = fadd float %233, %236, !dbg !17
  %238 = bitcast float %237 to i32, !dbg !22
  %239 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %238, i32 4, i32 31), !dbg !22
  %240 = bitcast i32 %239 to float, !dbg !22
  %241 = fadd float %237, %240, !dbg !17
  %242 = bitcast float %241 to i32, !dbg !22
  %243 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %242, i32 2, i32 31), !dbg !22
  %244 = bitcast i32 %243 to float, !dbg !22
  %245 = fadd float %241, %244, !dbg !17
  %246 = bitcast float %245 to i32, !dbg !22
  %247 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %246, i32 1, i32 31), !dbg !22
  %248 = bitcast i32 %247 to float, !dbg !22
  %249 = fadd float %245, %248, !dbg !17
  %250 = icmp eq i32 %225, 0, !dbg !22
  %251 = and i32 %224, 1, !dbg !22
  %252 = zext nneg i32 %251 to i64, !dbg !22
  %253 = getelementptr float, ptr addrspace(3) @global_smem, i64 %252, !dbg !22
  %254 = bitcast float %249 to <1 x i32>, !dbg !22
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %253, <1 x i32> %254, i1 %250) #4, !dbg !22
  tail call void @llvm.nvvm.barrier0(), !dbg !22
  %255 = icmp slt i32 %5, 2, !dbg !22
  %256 = sext i32 %5 to i64, !dbg !22
  %257 = getelementptr float, ptr addrspace(3) @global_smem, i64 %256, !dbg !22
  %258 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %257, i1 %255) #4, !dbg !22
  %259 = bitcast i32 %258 to float, !dbg !22
  %260 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %258, i32 1, i32 31), !dbg !22
  %261 = bitcast i32 %260 to float, !dbg !22
  %262 = fadd float %259, %261, !dbg !17
  %263 = and i32 %5, 1, !dbg !22
  %264 = icmp eq i32 %263, 0, !dbg !22
  %265 = and i1 %255, %264, !dbg !22
  %266 = bitcast float %262 to <1 x i32>, !dbg !22
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %257, <1 x i32> %266, i1 %265) #4, !dbg !22
  tail call void @llvm.nvvm.barrier0(), !dbg !22
  %267 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !22
  %268 = fadd float %267, 0.000000e+00, !dbg !23
  tail call void @llvm.nvvm.barrier0(), !dbg !27
  %269 = fadd float %223, %221, !dbg !29
  %270 = fadd float %269, %219, !dbg !29
  %271 = fadd float %270, %217, !dbg !29
  %272 = bitcast float %271 to i32, !dbg !27
  %273 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %272, i32 16, i32 31), !dbg !27
  %274 = bitcast i32 %273 to float, !dbg !27
  %275 = fadd float %271, %274, !dbg !29
  %276 = bitcast float %275 to i32, !dbg !27
  %277 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %276, i32 8, i32 31), !dbg !27
  %278 = bitcast i32 %277 to float, !dbg !27
  %279 = fadd float %275, %278, !dbg !29
  %280 = bitcast float %279 to i32, !dbg !27
  %281 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %280, i32 4, i32 31), !dbg !27
  %282 = bitcast i32 %281 to float, !dbg !27
  %283 = fadd float %279, %282, !dbg !29
  %284 = bitcast float %283 to i32, !dbg !27
  %285 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %284, i32 2, i32 31), !dbg !27
  %286 = bitcast i32 %285 to float, !dbg !27
  %287 = fadd float %283, %286, !dbg !29
  %288 = bitcast float %287 to i32, !dbg !27
  %289 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %288, i32 1, i32 31), !dbg !27
  %290 = bitcast i32 %289 to float, !dbg !27
  %291 = fadd float %287, %290, !dbg !29
  %292 = bitcast float %291 to <1 x i32>, !dbg !27
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %253, <1 x i32> %292, i1 %250) #4, !dbg !27
  tail call void @llvm.nvvm.barrier0(), !dbg !27
  %293 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %257, i1 %255) #4, !dbg !27
  %294 = bitcast i32 %293 to float, !dbg !27
  %295 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %293, i32 1, i32 31), !dbg !27
  %296 = bitcast i32 %295 to float, !dbg !27
  %297 = fadd float %294, %296, !dbg !29
  %298 = bitcast float %297 to <1 x i32>, !dbg !27
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %257, <1 x i32> %298, i1 %265) #4, !dbg !27
  tail call void @llvm.nvvm.barrier0(), !dbg !27
  %299 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !27
  %300 = fadd float %299, 0.000000e+00, !dbg !30
  %301 = fsub float 0.000000e+00, %268, !dbg !32
  %302 = fadd float %301, %300, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !34
  %urem = and i32 %5, 63, !dbg !35
  %303 = icmp eq i32 %urem, 0, !dbg !35
  %304 = bitcast float %302 to i32, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %304, ptr addrspace(1) %0, i1 %303) #4, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjettf26xcvysssml7sl47l4fvl2vmskiodiikrsx5pyghg7inxx.py", directory: "inductor_cache/je")
!4 = !{ptr @triton_per_fused_add_log_neg_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_log_neg_sum_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_log_neg_sum_0", linkageName: "triton_per_fused_add_log_neg_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 30, scope: !7)
!12 = !DILocation(line: 31, column: 35, scope: !7)
!13 = !DILocation(line: 32, column: 30, scope: !7)
!14 = !DILocation(line: 32, column: 35, scope: !7)
!15 = !DILocation(line: 34, column: 18, scope: !7)
!16 = !DILocation(line: 35, column: 23, scope: !7)
!17 = !DILocation(line: 256, column: 15, scope: !18, inlinedAt: !21)
!18 = distinct !DILexicalBlockFile(scope: !20, file: !19, discriminator: 0)
!19 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!20 = distinct !DILexicalBlockFile(scope: !7, file: !19, discriminator: 0)
!21 = !DILocation(line: 37, column: 57, scope: !7)
!22 = !DILocation(line: 267, column: 36, scope: !20, inlinedAt: !21)
!23 = !DILocation(line: 73, column: 15, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!25 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!26 = !DILocation(line: 37, column: 44, scope: !7)
!27 = !DILocation(line: 267, column: 36, scope: !20, inlinedAt: !28)
!28 = !DILocation(line: 39, column: 58, scope: !7)
!29 = !DILocation(line: 256, column: 15, scope: !18, inlinedAt: !28)
!30 = !DILocation(line: 73, column: 15, scope: !24, inlinedAt: !31)
!31 = !DILocation(line: 39, column: 45, scope: !7)
!32 = !DILocation(line: 40, column: 13, scope: !7)
!33 = !DILocation(line: 41, column: 20, scope: !7)
!34 = !DILocation(line: 42, column: 4, scope: !7)
!35 = !DILocation(line: 43, column: 63, scope: !7)
!36 = !DILocation(line: 43, column: 4, scope: !7)
