//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7 // -- Begin function triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7
.visible .entry triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_8,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_9,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_10
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<34>;
	.reg .b32 	%r<88>;
	.reg .f32 	%f<69>;
	.reg .b64 	%rd<34>;
	.loc	1 19 0                          // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd22, [triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_0];
	ld.param.u64 	%rd23, [triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_1];
$L__tmp0:
	.loc	1 24 28                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd24, [triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_2];
	.loc	1 27 26                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:27:26
	mov.u32 	%r50, %tid.x;
	and.b32  	%r51, %r50, 31;
	ld.param.u64 	%rd25, [triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_3];
	ld.param.u64 	%rd26, [triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_4];
	shl.b32 	%r52, %r50, 2;
	ld.param.u64 	%rd27, [triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_5];
	and.b32  	%r53, %r52, 252;
	ld.param.u64 	%rd28, [triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_6];
	.loc	1 32 19                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:32:19
	shr.s32 	%r54, %r1, 31;
	shr.u32 	%r55, %r54, 25;
	add.s32 	%r56, %r1, %r55;
	and.b32  	%r57, %r56, -128;
	sub.s32 	%r58, %r1, %r57;
	ld.param.u64 	%rd29, [triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_7];
	ld.param.u64 	%rd30, [triton_per_fused__native_batch_norm_legit_convolution_relu_repeat_7_param_8];
	.loc	1 33 31                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:33:31
	mul.wide.s32 	%rd31, %r58, 4;
	add.s64 	%rd1, %rd24, %rd31;
	mov.pred 	%p1, -1;
	.loc	1 33 43                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:33:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r38 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 34 31                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:34:31
	add.s64 	%rd6, %rd25, %rd31;
	.loc	1 34 43                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:34:43
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r39 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 35 43                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:35:43
	shl.b32 	%r59, %r1, 8;
	.loc	1 35 39                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:35:39
	or.b32  	%r60, %r59, %r53;
	.loc	1 35 34                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:35:34
	mul.wide.s32 	%rd32, %r60, 4;
	add.s64 	%rd11, %rd22, %rd32;
	.loc	1 35 48                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:35:48
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.v4.b32 { %r12, %r13, %r14, %r15 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r12;
	mov.b32 	%f2, %r13;
	mov.b32 	%f3, %r14;
	mov.b32 	%f4, %r15;
	.loc	1 36 30                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:36:30
	add.s64 	%rd12, %rd26, %rd31;
	.loc	1 36 35                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:36:35
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r19;
	.loc	1 37 18                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:37:18
	add.f32 	%f6, %f1, %f5;
	add.f32 	%f7, %f2, %f5;
	add.f32 	%f8, %f3, %f5;
	add.f32 	%f9, %f4, %f5;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f6, %f7;
	add.f32 	%f11, %f8, %f10;
	add.f32 	%f12, %f9, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f12;
	shfl.sync.bfly.b32	%r62, %r61, 16, 31, -1;
	mov.b32 	%f13, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f14;
	shfl.sync.bfly.b32	%r64, %r63, 8, 31, -1;
	mov.b32 	%f15, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f16;
	shfl.sync.bfly.b32	%r66, %r65, 4, 31, -1;
	mov.b32 	%f17, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f18;
	shfl.sync.bfly.b32	%r68, %r67, 2, 31, -1;
	mov.b32 	%f19, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f20;
	shfl.sync.bfly.b32	%r70, %r69, 1, 31, -1;
	mov.b32 	%f21, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p16, %r51, 0;
	shr.u32 	%r71, %r50, 3;
	and.b32  	%r72, %r71, 4;
	mov.u32 	%r73, global_smem;
	add.s32 	%r20, %r73, %r72;
	mov.b32 	%r21, %f22;
	// begin inline asm
	@%p16 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p17, %r50, 2;
	add.s32 	%r23, %r73, %r52;
	// begin inline asm
	@%p17 ld.shared.b32 %r22, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r22;
	shfl.sync.bfly.b32	%r74, %r22, 1, 31, -1;
	mov.b32 	%f24, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r75, %r50, 1;
	setp.eq.b32 	%p28, %r75, 1;
	not.pred 	%p29, %p28;
	and.pred  	%p18, %p17, %p29;
	mov.b32 	%r25, %f25;
	// begin inline asm
	@%p18 st.shared.b32 [ %r23 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f26, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f27, %f26, 0f00000000;
$L__tmp3:
	.loc	1 43 19                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:43:19
	mov.b32 	%r27, %f27;
	mov.b32 	%r28, 1132462080;
	// begin inline asm
	div.full.f32 %r49, %r27, %r28;
	// end inline asm
	mov.b32 	%f28, %r49;
	.loc	1 44 19                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:44:19
	sub.f32 	%f29, %f6, %f28;
	sub.f32 	%f30, %f7, %f28;
	sub.f32 	%f31, %f8, %f28;
	sub.f32 	%f32, %f9, %f28;
	.loc	1 45 20                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:45:20
	mul.f32 	%f33, %f30, %f30;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f34, %f29, %f29, %f33;
	fma.rn.f32 	%f35, %f31, %f31, %f34;
	fma.rn.f32 	%f36, %f32, %f32, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f36;
	shfl.sync.bfly.b32	%r77, %r76, 16, 31, -1;
	mov.b32 	%f37, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f38;
	shfl.sync.bfly.b32	%r79, %r78, 8, 31, -1;
	mov.b32 	%f39, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f40;
	shfl.sync.bfly.b32	%r81, %r80, 4, 31, -1;
	mov.b32 	%f41, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f42;
	shfl.sync.bfly.b32	%r83, %r82, 2, 31, -1;
	mov.b32 	%f43, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f44;
	shfl.sync.bfly.b32	%r85, %r84, 1, 31, -1;
	mov.b32 	%f45, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f46;
	// begin inline asm
	@%p16 st.shared.b32 [ %r20 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p17 ld.shared.b32 %r31, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f47, %r31;
	shfl.sync.bfly.b32	%r86, %r31, 1, 31, -1;
	mov.b32 	%f48, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f49;
	// begin inline asm
	@%p18 st.shared.b32 [ %r23 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f50, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f51, %f50, 0f00000000;
$L__tmp6:
	.loc	1 49 20                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:49:20
	mov.b32 	%r36, %f51;
	// begin inline asm
	div.full.f32 %r35, %r36, %r28;
	// end inline asm
	mov.b32 	%f52, %r35;
	.loc	1 51 20                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:51:20
	add.f32 	%f53, %f52, 0f3727C5AC;
	.loc	1 52 28                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:52:28
	rsqrt.approx.ftz.f32 	%f54, %f53;
	.loc	1 34 43                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:34:43
	mov.b32 	%f55, %r10;
	.loc	1 33 43                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:33:43
	mov.b32 	%f56, %r5;
	.loc	1 54 20                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:54:20
	mul.f32 	%f57, %f29, %f54;
	mul.f32 	%f58, %f30, %f54;
	mul.f32 	%f59, %f31, %f54;
	mul.f32 	%f60, %f32, %f54;
	.loc	1 56 20                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:56:20
	fma.rn.f32 	%f61, %f57, %f56, %f55;
	fma.rn.f32 	%f62, %f58, %f56, %f55;
	fma.rn.f32 	%f63, %f59, %f56, %f55;
	fma.rn.f32 	%f64, %f60, %f56, %f55;
$L__tmp7:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p30, %f61, 0f00000000;
	setp.lt.f32 	%p31, %f62, 0f00000000;
	setp.lt.f32 	%p32, %f63, 0f00000000;
	setp.lt.f32 	%p33, %f64, 0f00000000;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f65, 0f00000000, %f61, %p30;
	selp.f32 	%f66, 0f00000000, %f62, %p31;
	selp.f32 	%f67, 0f00000000, %f63, %p32;
	selp.f32 	%f68, 0f00000000, %f64, %p33;
$L__tmp8:
	.loc	1 59 25                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:59:25
	mul.wide.s32 	%rd33, %r1, 4;
	add.s64 	%rd16, %rd27, %rd33;
	.loc	1 59 36                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:59:36
	and.b32  	%r87, %r50, 63;
	setp.eq.s32 	%p22, %r87, 0;
	// begin inline asm
	@%p22 st.global.b32 [ %rd16 + 0 ], { %r38 };
	// end inline asm
	.loc	1 60 25                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:60:25
	add.s64 	%rd17, %rd28, %rd33;
	.loc	1 60 36                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:60:36
	// begin inline asm
	@%p22 st.global.b32 [ %rd17 + 0 ], { %r39 };
	// end inline asm
	.loc	1 61 48                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:61:48
	mov.b32 	%r40, %f6;
	mov.b32 	%r41, %f7;
	mov.b32 	%r42, %f8;
	mov.b32 	%r43, %f9;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd11 + 0 ], { %r40, %r41, %r42, %r43 };
	// end inline asm
	.loc	1 62 4                          // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:62:4
	bar.sync 	0;
	.loc	1 63 28                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:63:28
	add.s64 	%rd19, %rd23, %rd33;
	.loc	1 63 40                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:63:40
	mov.b32 	%r44, %f54;
	// begin inline asm
	@%p22 st.global.b32 [ %rd19 + 0 ], { %r44 };
	// end inline asm
	.loc	1 64 25                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:64:25
	add.s64 	%rd20, %rd30, %rd32;
	.loc	1 64 46                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:64:46
	mov.b32 	%r45, %f65;
	mov.b32 	%r46, %f66;
	mov.b32 	%r47, %f67;
	mov.b32 	%r48, %f68;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd20 + 0 ], { %r45, %r46, %r47, %r48 };
	// end inline asm
	.loc	1 65 25                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:65:25
	add.s64 	%rd21, %rd29, %rd33;
	.loc	1 65 37                         // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:65:37
	// begin inline asm
	@%p22 st.global.b32 [ %rd21 + 0 ], { %r49 };
	// end inline asm
	.loc	1 65 4                          // c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py:65:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6u/c6uekcyvfkzogcnaxlg2s5jejjlva6yhe2mc5x43g2x5u7cl6ibe.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 308                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x12d DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 117
.b8 101
.b8 107
.b8 99
.b8 121
.b8 118
.b8 102
.b8 107
.b8 122
.b8 111
.b8 103
.b8 99
.b8 110
.b8 97
.b8 120
.b8 108
.b8 103
.b8 50
.b8 115
.b8 53
.b8 106
.b8 101
.b8 106
.b8 106
.b8 108
.b8 118
.b8 97
.b8 54
.b8 121
.b8 104
.b8 101
.b8 50
.b8 109
.b8 99
.b8 53
.b8 120
.b8 52
.b8 51
.b8 103
.b8 50
.b8 120
.b8 53
.b8 117
.b8 55
.b8 99
.b8 108
.b8 54
.b8 105
.b8 98
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 117
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x46 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 114
.b8 101
.b8 112
.b8 101
.b8 97
.b8 116
.b8 95
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa9:0x8e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xee:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x106:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x11e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 58                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
