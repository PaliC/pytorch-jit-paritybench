//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_8  // -- Begin function triton_poi_fused_add_8
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_8
.visible .entry triton_poi_fused_add_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_8_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_8_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_8_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_8_param_5,
	.param .u32 triton_poi_fused_add_8_param_6,
	.param .u32 triton_poi_fused_add_8_param_7
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<87>;
	.reg .b16 	%rs<38>;
	.reg .b32 	%r<412>;
	.reg .f32 	%f<169>;
	.reg .b64 	%rd<89>;
	.loc	1 19 0                          // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:19:0

// %bb.0:
	ld.param.u64 	%rd50, [triton_poi_fused_add_8_param_0];
	ld.param.u64 	%rd51, [triton_poi_fused_add_8_param_1];
$L__tmp0:
	.loc	1 22 28                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:22:33
	shl.b32 	%r167, %r1, 4;
	ld.param.u64 	%rd52, [triton_poi_fused_add_8_param_2];
	ld.param.u64 	%rd53, [triton_poi_fused_add_8_param_3];
	.loc	1 23 44                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:23:44
	mov.u32 	%r168, %tid.x;
	ld.param.u64 	%rd54, [triton_poi_fused_add_8_param_4];
	bfe.u32 	%r169, %r168, 6, 2;
	ld.param.u64 	%rd55, [triton_poi_fused_add_8_param_5];
	shl.b32 	%r170, %r168, 2;
	and.b32  	%r171, %r170, 12;
	.loc	1 23 23                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:23:23
	or.b32  	%r172, %r167, %r169;
	or.b32  	%r173, %r172, 4;
	or.b32  	%r174, %r172, 8;
	or.b32  	%r175, %r172, 12;
	or.b32  	%r176, %r167, %r171;
	.loc	1 24 21                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:24:21
	setp.lt.s32 	%p5, %r172, 384;
	setp.lt.s32 	%p9, %r173, 384;
	setp.lt.s32 	%p13, %r174, 384;
	setp.lt.s32 	%p17, %r175, 384;
	setp.lt.s32 	%p45, %r176, 384;
	.loc	1 25 28                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:25:33
	shl.b32 	%r177, %r2, 8;
	.loc	1 26 44                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:26:44
	and.b32  	%r178, %r170, 252;
	bfe.u32 	%r179, %r168, 2, 6;
	.loc	1 26 23                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:26:23
	or.b32  	%r180, %r177, %r178;
	or.b32  	%r181, %r180, 1;
	or.b32  	%r182, %r180, 2;
	or.b32  	%r183, %r180, 3;
	or.b32  	%r184, %r177, %r179;
	or.b32  	%r185, %r184, 64;
	or.b32  	%r186, %r184, 128;
	or.b32  	%r187, %r184, 192;
	.loc	1 27 21                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:27:21
	setp.lt.s32 	%p82, %r180, 256;
	setp.lt.s32 	%p83, %r184, 256;
	setp.lt.s32 	%p84, %r185, 256;
	setp.lt.s32 	%p85, %r186, 256;
	setp.lt.s32 	%p86, %r187, 256;
	.loc	1 30 19                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:30:19
	mul.hi.s32 	%r188, %r173, 715827883;
	shr.u32 	%r189, %r188, 31;
	shr.u32 	%r190, %r188, 4;
	add.s32 	%r191, %r190, %r189;
	mul.lo.s32 	%r192, %r191, 96;
	sub.s32 	%r193, %r173, %r192;
	mul.hi.s32 	%r194, %r174, 715827883;
	shr.u32 	%r195, %r194, 31;
	shr.u32 	%r196, %r194, 4;
	add.s32 	%r197, %r196, %r195;
	mul.lo.s32 	%r198, %r197, 96;
	sub.s32 	%r199, %r174, %r198;
	mul.hi.s32 	%r200, %r175, 715827883;
	shr.u32 	%r201, %r200, 31;
	shr.u32 	%r202, %r200, 4;
	add.s32 	%r203, %r202, %r201;
	mul.lo.s32 	%r204, %r203, 96;
	sub.s32 	%r205, %r175, %r204;
	.loc	1 33 19                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:33:19
	mul.hi.s32 	%r207, %r176, 715827883;
	shr.u32 	%r208, %r207, 31;
	shr.s32 	%r209, %r207, 4;
	add.s32 	%r210, %r209, %r208;
	.loc	1 30 19                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:30:19
	mul.lo.s32 	%r211, %r210, 96;
	sub.s32 	%r212, %r176, %r211;
	.loc	1 32 19                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:32:19
	shr.s32 	%r214, %r180, 31;
	shr.u32 	%r215, %r214, 28;
	add.s32 	%r216, %r180, %r215;
	shr.s32 	%r217, %r216, 4;
	.loc	1 31 19                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:31:19
	and.b32  	%r218, %r216, 65520;
	sub.s32 	%r219, %r180, %r218;
	bfe.s32 	%r220, %r2, 23, 1;
	.loc	1 32 19                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:32:19
	shr.u32 	%r221, %r220, 28;
	.loc	1 31 19                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:31:19
	add.s32 	%r222, %r181, %r221;
	and.b32  	%r223, %r222, 65520;
	sub.s32 	%r224, %r181, %r223;
	add.s32 	%r225, %r182, %r221;
	and.b32  	%r226, %r225, 65520;
	sub.s32 	%r227, %r182, %r226;
	add.s32 	%r228, %r183, %r221;
	and.b32  	%r229, %r228, 65520;
	sub.s32 	%r230, %r183, %r229;
	.loc	1 32 19                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:32:19
	shr.s32 	%r232, %r184, 31;
	shr.u32 	%r233, %r232, 28;
	add.s32 	%r234, %r184, %r233;
	shr.s32 	%r235, %r234, 4;
	.loc	1 31 19                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:31:19
	and.b32  	%r236, %r234, 65520;
	sub.s32 	%r237, %r184, %r236;
	.loc	1 32 19                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:32:19
	add.s32 	%r238, %r185, %r221;
	shr.s32 	%r239, %r238, 4;
	add.s32 	%r240, %r186, %r221;
	shr.s32 	%r241, %r240, 4;
	add.s32 	%r242, %r187, %r221;
	shr.s32 	%r243, %r242, 4;
	.loc	1 34 43                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:34:43
	shl.b32 	%r244, %r172, 8;
	shl.b32 	%r245, %r173, 8;
	shl.b32 	%r246, %r174, 8;
	shl.b32 	%r247, %r175, 8;
	.loc	1 34 39                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:34:39
	add.s32 	%r248, %r180, %r244;
	add.s32 	%r249, %r180, %r245;
	add.s32 	%r250, %r180, %r246;
	add.s32 	%r251, %r180, %r247;
	.loc	1 34 34                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:34:34
	mul.wide.s32 	%rd56, %r248, 4;
	add.s64 	%rd1, %rd50, %rd56;
	mul.wide.s32 	%rd57, %r249, 4;
	add.s64 	%rd2, %rd50, %rd57;
	mul.wide.s32 	%rd58, %r250, 4;
	add.s64 	%rd3, %rd50, %rd58;
	mul.wide.s32 	%rd59, %r251, 4;
	add.s64 	%rd4, %rd50, %rd59;
	.loc	1 34 56                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:34:56
	and.pred  	%p1, %p5, %p82;
	and.pred  	%p2, %p9, %p82;
	and.pred  	%p3, %p13, %p82;
	and.pred  	%p4, %p17, %p82;
	and.pred  	%p41, %p45, %p83;
	and.pred  	%p42, %p84, %p45;
	and.pred  	%p43, %p85, %p45;
	and.pred  	%p44, %p86, %p45;
	.loc	1 34 48                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:34:48
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r15;
	mov.b32 	%f14, %r16;
	mov.b32 	%f15, %r17;
	mov.b32 	%f16, %r18;
	.loc	1 35 30                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:35:30
	mul.wide.s32 	%rd60, %r193, 4;
	add.s64 	%rd9, %rd51, %rd60;
	mul.wide.s32 	%rd61, %r199, 4;
	add.s64 	%rd13, %rd51, %rd61;
	mul.wide.s32 	%rd62, %r205, 4;
	add.s64 	%rd17, %rd51, %rd62;
	.loc	1 36 39                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:36:39
	shl.b32 	%r252, %r193, 8;
	shl.b32 	%r253, %r199, 8;
	shl.b32 	%r254, %r205, 8;
	.loc	1 36 35                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:36:35
	add.s32 	%r255, %r180, %r252;
	add.s32 	%r256, %r180, %r253;
	add.s32 	%r257, %r180, %r254;
	.loc	1 36 30                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:36:30
	mul.wide.s32 	%rd63, %r255, 4;
	add.s64 	%rd22, %rd52, %rd63;
	mul.wide.s32 	%rd64, %r256, 4;
	add.s64 	%rd23, %rd52, %rd64;
	mul.wide.s32 	%rd65, %r257, 4;
	add.s64 	%rd24, %rd52, %rd65;
	.loc	1 37 39                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:37:39
	shr.u32 	%r258, %r235, 29;
	add.s32 	%r259, %r235, %r258;
	and.b32  	%r260, %r259, 16777208;
	sub.s32 	%r261, %r235, %r260;
	shr.u32 	%r262, %r239, 29;
	add.s32 	%r263, %r239, %r262;
	and.b32  	%r264, %r263, -8;
	sub.s32 	%r265, %r239, %r264;
	shr.u32 	%r266, %r241, 29;
	add.s32 	%r267, %r241, %r266;
	and.b32  	%r268, %r267, -8;
	sub.s32 	%r269, %r241, %r268;
	shr.u32 	%r270, %r243, 29;
	add.s32 	%r271, %r243, %r270;
	and.b32  	%r272, %r271, -8;
	sub.s32 	%r273, %r243, %r272;
	shr.u32 	%r274, %r217, 29;
	add.s32 	%r275, %r217, %r274;
	and.b32  	%r276, %r275, 536870904;
	sub.s32 	%r277, %r217, %r276;
	mul.hi.s32 	%r278, %r172, 715827883;
	shr.u32 	%r279, %r278, 31;
	shr.u32 	%r280, %r278, 4;
	add.s32 	%r281, %r280, %r279;
	mul.lo.s32 	%r282, %r281, 96;
	sub.s32 	%r283, %r172, %r282;
	.loc	1 35 30                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:35:30
	mul.wide.s32 	%rd66, %r283, 4;
	add.s64 	%rd5, %rd51, %rd66;
	.loc	1 35 35                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:35:35
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r19 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r20 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r21 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r22 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r22;
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r23 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r24 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r25 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r26 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r26;
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r27 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r28 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r29 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r30 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r30;
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r31 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r32 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r33 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r34 }, [ %rd17 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r34;
	.loc	1 36 39                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:36:39
	shl.b32 	%r284, %r283, 8;
	.loc	1 36 35                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:36:35
	add.s32 	%r285, %r284, %r180;
	.loc	1 36 30                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:36:30
	mul.wide.s32 	%rd67, %r285, 4;
	add.s64 	%rd21, %rd52, %rd67;
	.loc	1 36 44                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:36:44
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd21 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r35;
	mov.b32 	%f22, %r36;
	mov.b32 	%f23, %r37;
	mov.b32 	%f24, %r38;
	// begin inline asm
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r39, %r40, %r41, %r42 }, [ %rd22 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r39;
	mov.b32 	%f26, %r40;
	mov.b32 	%f27, %r41;
	mov.b32 	%f28, %r42;
	// begin inline asm
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r43, %r44, %r45, %r46 }, [ %rd23 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r43;
	mov.b32 	%f30, %r44;
	mov.b32 	%f31, %r45;
	mov.b32 	%f32, %r46;
	// begin inline asm
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r47, %r48, %r49, %r50 }, [ %rd24 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r47;
	mov.b32 	%f34, %r48;
	mov.b32 	%f35, %r49;
	mov.b32 	%f36, %r50;
	.loc	1 37 34                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:37:34
	shl.b32 	%r286, %r277, 3;
	.loc	1 37 48                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:37:48
	shl.b32 	%r287, %r193, 6;
	shl.b32 	%r288, %r199, 6;
	shl.b32 	%r289, %r205, 6;
	.loc	1 37 45                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:37:45
	shl.b32 	%r290, %r283, 6;
	add.s32 	%r291, %r286, %r290;
	add.s32 	%r292, %r286, %r287;
	add.s32 	%r293, %r286, %r288;
	add.s32 	%r294, %r286, %r289;
	.loc	1 37 60                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:37:60
	cvt.u16.u32 	%rs1, %r219;
	cvt.s8.s32 	%rs2, %r219;
	shr.u16 	%rs3, %rs2, 12;
	and.b16  	%rs4, %rs3, 7;
	add.s16 	%rs5, %rs1, %rs4;
	and.b16  	%rs6, %rs5, 248;
	sub.s16 	%rs7, %rs1, %rs6;
	cvt.u32.u16 	%r295, %rs7;
	cvt.s32.s8 	%r296, %r295;
	cvt.u16.u32 	%rs8, %r224;
	cvt.s8.s32 	%rs9, %r224;
	shr.u16 	%rs10, %rs9, 12;
	and.b16  	%rs11, %rs10, 7;
	add.s16 	%rs12, %rs8, %rs11;
	and.b16  	%rs13, %rs12, 248;
	sub.s16 	%rs14, %rs8, %rs13;
	cvt.u32.u16 	%r297, %rs14;
	cvt.s32.s8 	%r298, %r297;
	cvt.u16.u32 	%rs15, %r227;
	cvt.s8.s32 	%rs16, %r227;
	shr.u16 	%rs17, %rs16, 12;
	and.b16  	%rs18, %rs17, 7;
	add.s16 	%rs19, %rs15, %rs18;
	and.b16  	%rs20, %rs19, 248;
	sub.s16 	%rs21, %rs15, %rs20;
	cvt.u32.u16 	%r299, %rs21;
	cvt.s32.s8 	%r300, %r299;
	cvt.u16.u32 	%rs22, %r230;
	cvt.s8.s32 	%rs23, %r230;
	shr.u16 	%rs24, %rs23, 12;
	and.b16  	%rs25, %rs24, 7;
	add.s16 	%rs26, %rs22, %rs25;
	and.b16  	%rs27, %rs26, 248;
	sub.s16 	%rs28, %rs22, %rs27;
	cvt.u32.u16 	%r301, %rs28;
	cvt.s32.s8 	%r302, %r301;
	cvt.u16.u32 	%rs29, %r237;
	cvt.s8.s32 	%rs30, %r237;
	.loc	1 38 80                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:80
	shr.u16 	%rs31, %rs30, 12;
	and.b16  	%rs32, %rs31, 7;
	add.s16 	%rs33, %rs29, %rs32;
	cvt.s16.s8 	%rs34, %rs33;
	shr.u16 	%rs35, %rs34, 3;
	.loc	1 37 60                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:37:60
	and.b16  	%rs36, %rs33, 248;
	sub.s16 	%rs37, %rs29, %rs36;
	.loc	1 37 55                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:37:55
	add.s32 	%r303, %r291, %r296;
	add.s32 	%r304, %r291, %r298;
	add.s32 	%r305, %r291, %r300;
	add.s32 	%r306, %r291, %r302;
	add.s32 	%r307, %r292, %r296;
	add.s32 	%r308, %r292, %r298;
	add.s32 	%r309, %r292, %r300;
	add.s32 	%r310, %r292, %r302;
	add.s32 	%r311, %r293, %r296;
	add.s32 	%r312, %r293, %r298;
	add.s32 	%r313, %r293, %r300;
	add.s32 	%r314, %r293, %r302;
	add.s32 	%r315, %r294, %r296;
	add.s32 	%r316, %r294, %r298;
	add.s32 	%r317, %r294, %r300;
	add.s32 	%r318, %r294, %r302;
	.loc	1 37 30                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:37:30
	mul.wide.s32 	%rd68, %r303, 4;
	add.s64 	%rd25, %rd53, %rd68;
	mul.wide.s32 	%rd69, %r304, 4;
	add.s64 	%rd26, %rd53, %rd69;
	mul.wide.s32 	%rd70, %r305, 4;
	add.s64 	%rd27, %rd53, %rd70;
	mul.wide.s32 	%rd71, %r306, 4;
	add.s64 	%rd28, %rd53, %rd71;
	mul.wide.s32 	%rd72, %r307, 4;
	add.s64 	%rd29, %rd53, %rd72;
	mul.wide.s32 	%rd73, %r308, 4;
	add.s64 	%rd30, %rd53, %rd73;
	mul.wide.s32 	%rd74, %r309, 4;
	add.s64 	%rd31, %rd53, %rd74;
	mul.wide.s32 	%rd75, %r310, 4;
	add.s64 	%rd32, %rd53, %rd75;
	mul.wide.s32 	%rd76, %r311, 4;
	add.s64 	%rd33, %rd53, %rd76;
	mul.wide.s32 	%rd77, %r312, 4;
	add.s64 	%rd34, %rd53, %rd77;
	mul.wide.s32 	%rd78, %r313, 4;
	add.s64 	%rd35, %rd53, %rd78;
	mul.wide.s32 	%rd79, %r314, 4;
	add.s64 	%rd36, %rd53, %rd79;
	mul.wide.s32 	%rd80, %r315, 4;
	add.s64 	%rd37, %rd53, %rd80;
	mul.wide.s32 	%rd81, %r316, 4;
	add.s64 	%rd38, %rd53, %rd81;
	mul.wide.s32 	%rd82, %r317, 4;
	add.s64 	%rd39, %rd53, %rd82;
	mul.wide.s32 	%rd83, %r318, 4;
	add.s64 	%rd40, %rd53, %rd83;
	.loc	1 37 66                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:37:66
	// begin inline asm
	mov.u32 %r51, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r51 }, [ %rd25 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r51;
	// begin inline asm
	mov.u32 %r52, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r52 }, [ %rd26 + 0 ];
	// end inline asm
	mov.b32 	%f38, %r52;
	// begin inline asm
	mov.u32 %r53, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r53 }, [ %rd27 + 0 ];
	// end inline asm
	mov.b32 	%f39, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r54 }, [ %rd28 + 0 ];
	// end inline asm
	mov.b32 	%f40, %r54;
	// begin inline asm
	mov.u32 %r55, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r55 }, [ %rd29 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r55;
	// begin inline asm
	mov.u32 %r56, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r56 }, [ %rd30 + 0 ];
	// end inline asm
	mov.b32 	%f42, %r56;
	// begin inline asm
	mov.u32 %r57, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r57 }, [ %rd31 + 0 ];
	// end inline asm
	mov.b32 	%f43, %r57;
	// begin inline asm
	mov.u32 %r58, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r58 }, [ %rd32 + 0 ];
	// end inline asm
	mov.b32 	%f44, %r58;
	// begin inline asm
	mov.u32 %r59, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r59 }, [ %rd33 + 0 ];
	// end inline asm
	mov.b32 	%f45, %r59;
	// begin inline asm
	mov.u32 %r60, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r60 }, [ %rd34 + 0 ];
	// end inline asm
	mov.b32 	%f46, %r60;
	// begin inline asm
	mov.u32 %r61, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r61 }, [ %rd35 + 0 ];
	// end inline asm
	mov.b32 	%f47, %r61;
	// begin inline asm
	mov.u32 %r62, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r62 }, [ %rd36 + 0 ];
	// end inline asm
	mov.b32 	%f48, %r62;
	// begin inline asm
	mov.u32 %r63, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r63 }, [ %rd37 + 0 ];
	// end inline asm
	mov.b32 	%f49, %r63;
	// begin inline asm
	mov.u32 %r64, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r64 }, [ %rd38 + 0 ];
	// end inline asm
	mov.b32 	%f50, %r64;
	// begin inline asm
	mov.u32 %r65, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r65 }, [ %rd39 + 0 ];
	// end inline asm
	mov.b32 	%f51, %r65;
	// begin inline asm
	mov.u32 %r66, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r66 }, [ %rd40 + 0 ];
	// end inline asm
	mov.b32 	%f52, %r66;
	.loc	1 38 98                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:98
	shr.u32 	%r319, %r220, 25;
	add.s32 	%r320, %r184, %r319;
	shr.u32 	%r321, %r320, 7;
	add.s32 	%r322, %r185, %r319;
	shr.s32 	%r323, %r322, 7;
	add.s32 	%r324, %r186, %r319;
	shr.s32 	%r325, %r324, 7;
	add.s32 	%r326, %r187, %r319;
	shr.s32 	%r327, %r326, 7;
	.loc	1 38 92                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:92
	cvt.u32.u16 	%r328, %rs35;
	cvt.s32.s8 	%r329, %r328;
	cvt.u32.u16 	%r330, %rs37;
	cvt.s32.s8 	%r331, %r330;
	mul.lo.s32 	%r332, %r331, 96;
	mul.lo.s32 	%r333, %r329, 6144;
	.loc	1 38 35                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:35
	mad.lo.s32 	%r334, %r210, 24576, %r212;
	.loc	1 38 103                        // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:103
	mad.lo.s32 	%r335, %r261, 768, %r333;
	mad.lo.s32 	%r336, %r321, 12288, %r332;
	add.s32 	%r337, %r336, %r335;
	.loc	1 38 51                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:51
	add.s32 	%r338, %r337, %r334;
	mad.lo.s32 	%r339, %r323, 12288, %r334;
	.loc	1 38 68                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:68
	mad.lo.s32 	%r340, %r265, 768, %r339;
	.loc	1 38 85                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:85
	add.s32 	%r341, %r340, %r332;
	.loc	1 38 103                        // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:103
	add.s32 	%r342, %r341, %r333;
	.loc	1 38 51                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:51
	mad.lo.s32 	%r343, %r325, 12288, %r334;
	.loc	1 38 68                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:68
	mad.lo.s32 	%r344, %r269, 768, %r343;
	.loc	1 38 85                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:85
	add.s32 	%r345, %r344, %r332;
	.loc	1 38 103                        // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:103
	add.s32 	%r346, %r345, %r333;
	.loc	1 38 51                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:51
	mad.lo.s32 	%r347, %r327, 12288, %r334;
	.loc	1 38 68                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:68
	mad.lo.s32 	%r348, %r273, 768, %r347;
	.loc	1 38 85                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:85
	add.s32 	%r349, %r348, %r332;
	.loc	1 38 103                        // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:103
	add.s32 	%r350, %r349, %r333;
	.loc	1 38 30                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:30
	mul.wide.s32 	%rd84, %r338, 4;
	add.s64 	%rd41, %rd54, %rd84;
	mul.wide.s32 	%rd85, %r342, 4;
	add.s64 	%rd42, %rd54, %rd85;
	mul.wide.s32 	%rd86, %r346, 4;
	add.s64 	%rd43, %rd54, %rd86;
	mul.wide.s32 	%rd87, %r350, 4;
	add.s64 	%rd44, %rd54, %rd87;
	.loc	1 38 114                        // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:38:114
	// begin inline asm
	mov.u32 %r67, 0x0;
	mov.u32 %r68, 0x0;
	mov.u32 %r69, 0x0;
	mov.u32 %r70, 0x0;
	@%p41 ld.global.L1::evict_last.v4.b32 { %r67, %r68, %r69, %r70 }, [ %rd41 + 0 ];
	// end inline asm
	mov.b32 	%f53, %r67;
	mov.b32 	%f54, %r68;
	mov.b32 	%f55, %r69;
	mov.b32 	%f56, %r70;
	// begin inline asm
	mov.u32 %r71, 0x0;
	mov.u32 %r72, 0x0;
	mov.u32 %r73, 0x0;
	mov.u32 %r74, 0x0;
	@%p42 ld.global.L1::evict_last.v4.b32 { %r71, %r72, %r73, %r74 }, [ %rd42 + 0 ];
	// end inline asm
	mov.b32 	%f57, %r71;
	mov.b32 	%f58, %r72;
	mov.b32 	%f59, %r73;
	mov.b32 	%f60, %r74;
	// begin inline asm
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	mov.u32 %r78, 0x0;
	@%p43 ld.global.L1::evict_last.v4.b32 { %r75, %r76, %r77, %r78 }, [ %rd43 + 0 ];
	// end inline asm
	mov.b32 	%f61, %r75;
	mov.b32 	%f62, %r76;
	mov.b32 	%f63, %r77;
	mov.b32 	%f64, %r78;
	// begin inline asm
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	mov.u32 %r82, 0x0;
	@%p44 ld.global.L1::evict_last.v4.b32 { %r79, %r80, %r81, %r82 }, [ %rd44 + 0 ];
	// end inline asm
	mov.b32 	%f65, %r79;
	mov.b32 	%f66, %r80;
	mov.b32 	%f67, %r81;
	mov.b32 	%f68, %r82;
	.loc	1 39 30                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:39:30
	mul.wide.s32 	%rd88, %r212, 4;
	add.s64 	%rd45, %rd55, %rd88;
	.loc	1 39 35                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:39:35
	// begin inline asm
	mov.u32 %r83, 0x0;
	mov.u32 %r84, 0x0;
	mov.u32 %r85, 0x0;
	mov.u32 %r86, 0x0;
	@%p45 ld.global.L1::evict_last.v4.b32 { %r83, %r84, %r85, %r86 }, [ %rd45 + 0 ];
	// end inline asm
	mov.b32 	%f69, %r83;
	mov.b32 	%f70, %r84;
	mov.b32 	%f71, %r85;
	mov.b32 	%f72, %r86;
	.loc	1 40 18                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:40:18
	add.f32 	%f73, %f1, %f17;
	add.f32 	%f74, %f2, %f17;
	add.f32 	%f75, %f3, %f17;
	add.f32 	%f76, %f4, %f17;
	add.f32 	%f77, %f5, %f18;
	add.f32 	%f78, %f6, %f18;
	add.f32 	%f79, %f7, %f18;
	add.f32 	%f80, %f8, %f18;
	add.f32 	%f81, %f9, %f19;
	add.f32 	%f82, %f10, %f19;
	add.f32 	%f83, %f11, %f19;
	add.f32 	%f84, %f12, %f19;
	add.f32 	%f85, %f13, %f20;
	add.f32 	%f86, %f14, %f20;
	add.f32 	%f87, %f15, %f20;
	add.f32 	%f88, %f16, %f20;
	.loc	1 41 18                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:41:18
	add.f32 	%f89, %f21, %f37;
	add.f32 	%f90, %f22, %f38;
	add.f32 	%f91, %f23, %f39;
	add.f32 	%f92, %f24, %f40;
	add.f32 	%f93, %f25, %f41;
	add.f32 	%f94, %f26, %f42;
	add.f32 	%f95, %f27, %f43;
	add.f32 	%f96, %f28, %f44;
	add.f32 	%f97, %f29, %f45;
	add.f32 	%f98, %f30, %f46;
	add.f32 	%f99, %f31, %f47;
	add.f32 	%f100, %f32, %f48;
	add.f32 	%f101, %f33, %f49;
	add.f32 	%f102, %f34, %f50;
	add.f32 	%f103, %f35, %f51;
	add.f32 	%f104, %f36, %f52;
	.loc	1 42 18                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:42:18
	add.f32 	%f105, %f73, %f89;
	add.f32 	%f106, %f74, %f90;
	add.f32 	%f107, %f75, %f91;
	add.f32 	%f108, %f76, %f92;
	add.f32 	%f109, %f77, %f93;
	add.f32 	%f110, %f78, %f94;
	add.f32 	%f111, %f79, %f95;
	add.f32 	%f112, %f80, %f96;
	add.f32 	%f113, %f81, %f97;
	add.f32 	%f114, %f82, %f98;
	add.f32 	%f115, %f83, %f99;
	add.f32 	%f116, %f84, %f100;
	add.f32 	%f117, %f85, %f101;
	add.f32 	%f118, %f86, %f102;
	add.f32 	%f119, %f87, %f103;
	add.f32 	%f120, %f88, %f104;
	shl.b32 	%r351, %r168, 6;
	and.b32  	%r352, %r351, 4032;
	or.b32  	%r353, %r169, %r352;
	and.b32  	%r354, %r170, 1020;
	mov.u32 	%r355, global_smem;
	add.s32 	%r356, %r355, %r352;
	shl.b32 	%r357, %r353, 2;
	add.s32 	%r87, %r356, %r357;
	mov.b32 	%r88, %f105;
	mov.pred 	%p46, -1;
	// begin inline asm
	@%p46 st.shared.b32 [ %r87 + 0 ], %r88;
	// end inline asm
	add.s32 	%r89, %r87, 80;
	mov.b32 	%r90, %f106;
	// begin inline asm
	@%p46 st.shared.b32 [ %r89 + 0 ], %r90;
	// end inline asm
	add.s32 	%r91, %r87, 160;
	mov.b32 	%r92, %f107;
	// begin inline asm
	@%p46 st.shared.b32 [ %r91 + 0 ], %r92;
	// end inline asm
	add.s32 	%r93, %r87, 240;
	mov.b32 	%r94, %f108;
	// begin inline asm
	@%p46 st.shared.b32 [ %r93 + 0 ], %r94;
	// end inline asm
	add.s32 	%r95, %r87, 16;
	mov.b32 	%r96, %f109;
	// begin inline asm
	@%p46 st.shared.b32 [ %r95 + 0 ], %r96;
	// end inline asm
	add.s32 	%r97, %r87, 96;
	mov.b32 	%r98, %f110;
	// begin inline asm
	@%p46 st.shared.b32 [ %r97 + 0 ], %r98;
	// end inline asm
	add.s32 	%r99, %r87, 176;
	mov.b32 	%r100, %f111;
	// begin inline asm
	@%p46 st.shared.b32 [ %r99 + 0 ], %r100;
	// end inline asm
	add.s32 	%r101, %r87, 256;
	mov.b32 	%r102, %f112;
	// begin inline asm
	@%p46 st.shared.b32 [ %r101 + 0 ], %r102;
	// end inline asm
	add.s32 	%r103, %r87, 32;
	mov.b32 	%r104, %f113;
	// begin inline asm
	@%p46 st.shared.b32 [ %r103 + 0 ], %r104;
	// end inline asm
	add.s32 	%r105, %r87, 112;
	mov.b32 	%r106, %f114;
	// begin inline asm
	@%p46 st.shared.b32 [ %r105 + 0 ], %r106;
	// end inline asm
	add.s32 	%r107, %r87, 192;
	mov.b32 	%r108, %f115;
	// begin inline asm
	@%p46 st.shared.b32 [ %r107 + 0 ], %r108;
	// end inline asm
	add.s32 	%r109, %r87, 272;
	mov.b32 	%r110, %f116;
	// begin inline asm
	@%p46 st.shared.b32 [ %r109 + 0 ], %r110;
	// end inline asm
	add.s32 	%r111, %r87, 48;
	mov.b32 	%r112, %f117;
	// begin inline asm
	@%p46 st.shared.b32 [ %r111 + 0 ], %r112;
	// end inline asm
	add.s32 	%r113, %r87, 128;
	mov.b32 	%r114, %f118;
	// begin inline asm
	@%p46 st.shared.b32 [ %r113 + 0 ], %r114;
	// end inline asm
	add.s32 	%r115, %r87, 208;
	mov.b32 	%r116, %f119;
	// begin inline asm
	@%p46 st.shared.b32 [ %r115 + 0 ], %r116;
	// end inline asm
	add.s32 	%r117, %r87, 288;
	mov.b32 	%r118, %f120;
	// begin inline asm
	@%p46 st.shared.b32 [ %r117 + 0 ], %r118;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r358, %r168, 252;
	shl.b32 	%r359, %r358, 2;
	add.s32 	%r360, %r355, %r359;
	shl.b32 	%r361, %r354, 2;
	add.s32 	%r362, %r360, %r361;
	ld.shared.v4.f32 	{%f121, %f122, %f123, %f124}, [%r362];
	or.b32  	%r363, %r354, 1024;
	and.b32  	%r364, %r363, 2032;
	add.s32 	%r365, %r355, %r364;
	add.s32 	%r366, %r365, %r361;
	ld.shared.v4.f32 	{%f125, %f126, %f127, %f128}, [%r366+4096];
	or.b32  	%r367, %r354, 2048;
	and.b32  	%r368, %r367, 3056;
	add.s32 	%r369, %r355, %r368;
	add.s32 	%r370, %r369, %r361;
	ld.shared.v4.f32 	{%f129, %f130, %f131, %f132}, [%r370+8192];
	or.b32  	%r371, %r354, 3072;
	and.b32  	%r372, %r371, 4080;
	add.s32 	%r373, %r355, %r372;
	add.s32 	%r374, %r373, %r361;
	ld.shared.v4.f32 	{%f133, %f134, %f135, %f136}, [%r374+12288];
	.loc	1 43 18                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:43:18
	add.f32 	%f137, %f53, %f69;
	add.f32 	%f138, %f54, %f70;
	add.f32 	%f139, %f55, %f71;
	add.f32 	%f140, %f56, %f72;
	add.f32 	%f141, %f57, %f69;
	add.f32 	%f142, %f58, %f70;
	add.f32 	%f143, %f59, %f71;
	add.f32 	%f144, %f60, %f72;
	add.f32 	%f145, %f61, %f69;
	add.f32 	%f146, %f62, %f70;
	add.f32 	%f147, %f63, %f71;
	add.f32 	%f148, %f64, %f72;
	add.f32 	%f149, %f65, %f69;
	add.f32 	%f150, %f66, %f70;
	add.f32 	%f151, %f67, %f71;
	add.f32 	%f152, %f68, %f72;
	.loc	1 44 19                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:44:19
	add.f32 	%f153, %f137, %f121;
	add.f32 	%f154, %f138, %f122;
	add.f32 	%f155, %f139, %f123;
	add.f32 	%f156, %f140, %f124;
	add.f32 	%f157, %f141, %f125;
	add.f32 	%f158, %f142, %f126;
	add.f32 	%f159, %f143, %f127;
	add.f32 	%f160, %f144, %f128;
	add.f32 	%f161, %f145, %f129;
	add.f32 	%f162, %f146, %f130;
	add.f32 	%f163, %f147, %f131;
	add.f32 	%f164, %f148, %f132;
	add.f32 	%f165, %f149, %f133;
	add.f32 	%f166, %f150, %f134;
	add.f32 	%f167, %f151, %f135;
	add.f32 	%f168, %f152, %f136;
	.loc	1 45 4                          // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:45:4
	bar.sync 	0;
	.loc	1 46 49                         // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:46:49
	shl.b32 	%r375, %r168, 10;
	and.b32  	%r376, %r375, 3072;
	or.b32  	%r377, %r179, %r376;
	shr.u32 	%r378, %r376, 6;
	add.s32 	%r379, %r355, %r378;
	shl.b32 	%r380, %r377, 2;
	add.s32 	%r119, %r379, %r380;
	mov.b32 	%r120, %f153;
	// begin inline asm
	@%p46 st.shared.b32 [ %r119 + 0 ], %r120;
	// end inline asm
	or.b32  	%r381, %r376, 256;
	shr.u32 	%r382, %r381, 6;
	add.s32 	%r383, %r355, %r382;
	add.s32 	%r384, %r383, %r380;
	add.s32 	%r121, %r384, 1024;
	mov.b32 	%r122, %f154;
	// begin inline asm
	@%p46 st.shared.b32 [ %r121 + 0 ], %r122;
	// end inline asm
	or.b32  	%r385, %r376, 512;
	shr.u32 	%r386, %r385, 6;
	add.s32 	%r387, %r355, %r386;
	add.s32 	%r388, %r387, %r380;
	add.s32 	%r123, %r388, 2048;
	mov.b32 	%r124, %f155;
	// begin inline asm
	@%p46 st.shared.b32 [ %r123 + 0 ], %r124;
	// end inline asm
	or.b32  	%r389, %r376, 768;
	shr.u32 	%r390, %r389, 6;
	add.s32 	%r391, %r355, %r390;
	add.s32 	%r392, %r391, %r380;
	add.s32 	%r125, %r392, 3072;
	mov.b32 	%r126, %f156;
	// begin inline asm
	@%p46 st.shared.b32 [ %r125 + 0 ], %r126;
	// end inline asm
	add.s32 	%r127, %r119, 256;
	mov.b32 	%r128, %f157;
	// begin inline asm
	@%p46 st.shared.b32 [ %r127 + 0 ], %r128;
	// end inline asm
	add.s32 	%r129, %r384, 1280;
	mov.b32 	%r130, %f158;
	// begin inline asm
	@%p46 st.shared.b32 [ %r129 + 0 ], %r130;
	// end inline asm
	add.s32 	%r131, %r388, 2304;
	mov.b32 	%r132, %f159;
	// begin inline asm
	@%p46 st.shared.b32 [ %r131 + 0 ], %r132;
	// end inline asm
	add.s32 	%r133, %r392, 3328;
	mov.b32 	%r134, %f160;
	// begin inline asm
	@%p46 st.shared.b32 [ %r133 + 0 ], %r134;
	// end inline asm
	add.s32 	%r135, %r119, 512;
	mov.b32 	%r136, %f161;
	// begin inline asm
	@%p46 st.shared.b32 [ %r135 + 0 ], %r136;
	// end inline asm
	add.s32 	%r137, %r384, 1536;
	mov.b32 	%r138, %f162;
	// begin inline asm
	@%p46 st.shared.b32 [ %r137 + 0 ], %r138;
	// end inline asm
	add.s32 	%r139, %r388, 2560;
	mov.b32 	%r140, %f163;
	// begin inline asm
	@%p46 st.shared.b32 [ %r139 + 0 ], %r140;
	// end inline asm
	add.s32 	%r141, %r392, 3584;
	mov.b32 	%r142, %f164;
	// begin inline asm
	@%p46 st.shared.b32 [ %r141 + 0 ], %r142;
	// end inline asm
	add.s32 	%r143, %r119, 768;
	mov.b32 	%r144, %f165;
	// begin inline asm
	@%p46 st.shared.b32 [ %r143 + 0 ], %r144;
	// end inline asm
	add.s32 	%r145, %r384, 1792;
	mov.b32 	%r146, %f166;
	// begin inline asm
	@%p46 st.shared.b32 [ %r145 + 0 ], %r146;
	// end inline asm
	add.s32 	%r147, %r388, 2816;
	mov.b32 	%r148, %f167;
	// begin inline asm
	@%p46 st.shared.b32 [ %r147 + 0 ], %r148;
	// end inline asm
	add.s32 	%r149, %r392, 3840;
	mov.b32 	%r150, %f168;
	// begin inline asm
	@%p46 st.shared.b32 [ %r149 + 0 ], %r150;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r393, %r170, 8, 2;
	or.b32  	%r394, %r393, %r354;
	shl.b32 	%r395, %r394, 2;
	add.s32 	%r396, %r355, %r395;
	ld.shared.u32 	%r151, [%r396];
	shl.b32 	%r397, %r393, 2;
	add.s32 	%r398, %r355, %r397;
	add.s32 	%r399, %r398, %r361;
	ld.shared.u32 	%r152, [%r399+4];
	ld.shared.u32 	%r153, [%r399+8];
	ld.shared.u32 	%r154, [%r399+12];
	shr.u32 	%r400, %r363, 6;
	and.b32  	%r401, %r400, 28;
	add.s32 	%r402, %r355, %r401;
	add.s32 	%r403, %r402, %r361;
	ld.shared.u32 	%r155, [%r403+4096];
	ld.shared.u32 	%r156, [%r403+4100];
	ld.shared.u32 	%r157, [%r403+4104];
	ld.shared.u32 	%r158, [%r403+4108];
	shr.u32 	%r404, %r367, 6;
	and.b32  	%r405, %r404, 44;
	add.s32 	%r406, %r355, %r405;
	add.s32 	%r407, %r406, %r361;
	ld.shared.u32 	%r159, [%r407+8192];
	ld.shared.u32 	%r160, [%r407+8196];
	ld.shared.u32 	%r161, [%r407+8200];
	ld.shared.u32 	%r162, [%r407+8204];
	shr.u32 	%r408, %r371, 6;
	and.b32  	%r409, %r408, 60;
	add.s32 	%r410, %r355, %r409;
	add.s32 	%r411, %r410, %r361;
	ld.shared.u32 	%r163, [%r411+12288];
	ld.shared.u32 	%r164, [%r411+12292];
	ld.shared.u32 	%r165, [%r411+12296];
	ld.shared.u32 	%r166, [%r411+12300];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r151, %r152, %r153, %r154 };
	// end inline asm
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd2 + 0 ], { %r155, %r156, %r157, %r158 };
	// end inline asm
	// begin inline asm
	@%p3 st.global.v4.b32 [ %rd3 + 0 ], { %r159, %r160, %r161, %r162 };
	// end inline asm
	// begin inline asm
	@%p4 st.global.v4.b32 [ %rd4 + 0 ], { %r163, %r164, %r165, %r166 };
	// end inline asm
	.loc	1 46 4                          // c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py:46:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 50
.b8 115
.b8 97
.b8 113
.b8 122
.b8 103
.b8 107
.b8 105
.b8 120
.b8 103
.b8 101
.b8 50
.b8 99
.b8 101
.b8 121
.b8 122
.b8 116
.b8 51
.b8 54
.b8 103
.b8 112
.b8 108
.b8 53
.b8 52
.b8 109
.b8 105
.b8 100
.b8 100
.b8 97
.b8 101
.b8 105
.b8 112
.b8 103
.b8 121
.b8 54
.b8 116
.b8 118
.b8 104
.b8 104
.b8 110
.b8 103
.b8 114
.b8 103
.b8 100
.b8 107
.b8 115
.b8 52
.b8 112
.b8 110
.b8 105
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 50
.b8 115
.b8 0
	}
	.section	.debug_macinfo	{	}
