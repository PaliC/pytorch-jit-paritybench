#loc = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":19:0)
module {
  tt.func public @triton_poi_fused_add_8(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<24576> : tensor<1x16xi32> loc(#loc1)
    %cst_0 = arith.constant dense<12288> : tensor<256x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<6144> : tensor<256x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<768> : tensor<256x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<96> : tensor<256x1xi32> loc(#loc1)
    %cst_4 = arith.constant dense<64> : tensor<1x16xi32> loc(#loc1)
    %cst_5 = arith.constant dense<8> : tensor<256x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<256> : tensor<1x16xi32> loc(#loc1)
    %cst_7 = arith.constant dense<16> : tensor<256x1xi32> loc(#loc1)
    %cst_8 = arith.constant dense<96> : tensor<1x16xi32> loc(#loc1)
    %cst_9 = arith.constant dense<256> : tensor<256x1xi32> loc(#loc1)
    %cst_10 = arith.constant dense<384> : tensor<1x16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x16xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x16xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_10 : tensor<1x16xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.muli %7, %c256_i32 : i32 loc(#loc9)
    %9 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc10)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<256xi32> -> tensor<256x1xi32> loc(#loc11)
    %11 = tt.splat %8 : i32 -> tensor<256x1xi32> loc(#loc12)
    %12 = arith.addi %11, %10 : tensor<256x1xi32> loc(#loc12)
    %13 = arith.cmpi slt, %12, %cst_9 : tensor<256x1xi32> loc(#loc13)
    %14 = arith.remsi %5, %cst_8 : tensor<1x16xi32> loc(#loc14)
    %15 = arith.remsi %12, %cst_7 : tensor<256x1xi32> loc(#loc15)
    %16 = arith.divsi %12, %cst_7 : tensor<256x1xi32> loc(#loc16)
    %17 = arith.divsi %5, %cst_8 : tensor<1x16xi32> loc(#loc17)
    %18 = arith.muli %5, %cst_6 : tensor<1x16xi32> loc(#loc18)
    %19 = tt.broadcast %12 : tensor<256x1xi32> -> tensor<256x16xi32> loc(#loc19)
    %20 = tt.broadcast %18 : tensor<1x16xi32> -> tensor<256x16xi32> loc(#loc19)
    %21 = arith.addi %19, %20 : tensor<256x16xi32> loc(#loc19)
    %22 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x16x!tt.ptr<f32>> loc(#loc20)
    %23 = tt.addptr %22, %21 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi32> loc(#loc20)
    %24 = tt.broadcast %13 : tensor<256x1xi1> -> tensor<256x16xi1> loc(#loc21)
    %25 = tt.broadcast %6 : tensor<1x16xi1> -> tensor<256x16xi1> loc(#loc21)
    %26 = arith.andi %24, %25 : tensor<256x16xi1> loc(#loc21)
    %27 = tt.load %23, %26 evictionPolicy = evict_last : tensor<256x16x!tt.ptr<f32>> loc(#loc22)
    %28 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc23)
    %29 = tt.addptr %28, %14 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc23)
    %30 = tt.load %29, %6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc24)
    %31 = arith.muli %14, %cst_6 : tensor<1x16xi32> loc(#loc25)
    %32 = tt.broadcast %31 : tensor<1x16xi32> -> tensor<256x16xi32> loc(#loc26)
    %33 = arith.addi %19, %32 : tensor<256x16xi32> loc(#loc26)
    %34 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x16x!tt.ptr<f32>> loc(#loc27)
    %35 = tt.addptr %34, %33 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi32> loc(#loc27)
    %36 = tt.load %35, %26 evictionPolicy = evict_last : tensor<256x16x!tt.ptr<f32>> loc(#loc28)
    %37 = arith.remsi %16, %cst_5 : tensor<256x1xi32> loc(#loc29)
    %38 = arith.muli %37, %cst_5 : tensor<256x1xi32> loc(#loc30)
    %39 = arith.muli %14, %cst_4 : tensor<1x16xi32> loc(#loc31)
    %40 = tt.broadcast %38 : tensor<256x1xi32> -> tensor<256x16xi32> loc(#loc32)
    %41 = tt.broadcast %39 : tensor<1x16xi32> -> tensor<256x16xi32> loc(#loc32)
    %42 = arith.addi %40, %41 : tensor<256x16xi32> loc(#loc32)
    %43 = arith.remsi %15, %cst_5 : tensor<256x1xi32> loc(#loc33)
    %44 = tt.broadcast %43 : tensor<256x1xi32> -> tensor<256x16xi32> loc(#loc34)
    %45 = arith.addi %42, %44 : tensor<256x16xi32> loc(#loc34)
    %46 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x16x!tt.ptr<f32>> loc(#loc35)
    %47 = tt.addptr %46, %45 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi32> loc(#loc35)
    %48 = tt.load %47, %26 evictionPolicy = evict_last : tensor<256x16x!tt.ptr<f32>> loc(#loc36)
    %49 = arith.muli %43, %cst_3 : tensor<256x1xi32> loc(#loc37)
    %50 = tt.broadcast %14 : tensor<1x16xi32> -> tensor<256x16xi32> loc(#loc38)
    %51 = tt.broadcast %49 : tensor<256x1xi32> -> tensor<256x16xi32> loc(#loc38)
    %52 = arith.addi %50, %51 : tensor<256x16xi32> loc(#loc38)
    %53 = arith.muli %37, %cst_2 : tensor<256x1xi32> loc(#loc39)
    %54 = tt.broadcast %53 : tensor<256x1xi32> -> tensor<256x16xi32> loc(#loc40)
    %55 = arith.addi %52, %54 : tensor<256x16xi32> loc(#loc40)
    %56 = arith.divsi %15, %cst_5 : tensor<256x1xi32> loc(#loc41)
    %57 = arith.muli %56, %cst_1 : tensor<256x1xi32> loc(#loc42)
    %58 = tt.broadcast %57 : tensor<256x1xi32> -> tensor<256x16xi32> loc(#loc43)
    %59 = arith.addi %55, %58 : tensor<256x16xi32> loc(#loc43)
    %60 = arith.divsi %16, %cst_5 : tensor<256x1xi32> loc(#loc44)
    %61 = arith.muli %60, %cst_0 : tensor<256x1xi32> loc(#loc45)
    %62 = tt.broadcast %61 : tensor<256x1xi32> -> tensor<256x16xi32> loc(#loc46)
    %63 = arith.addi %59, %62 : tensor<256x16xi32> loc(#loc46)
    %64 = arith.muli %17, %cst : tensor<1x16xi32> loc(#loc47)
    %65 = tt.broadcast %64 : tensor<1x16xi32> -> tensor<256x16xi32> loc(#loc48)
    %66 = arith.addi %63, %65 : tensor<256x16xi32> loc(#loc48)
    %67 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x16x!tt.ptr<f32>> loc(#loc49)
    %68 = tt.addptr %67, %66 : tensor<256x16x!tt.ptr<f32>>, tensor<256x16xi32> loc(#loc49)
    %69 = tt.load %68, %26 evictionPolicy = evict_last : tensor<256x16x!tt.ptr<f32>> loc(#loc50)
    %70 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc51)
    %71 = tt.addptr %70, %14 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc51)
    %72 = tt.load %71, %6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc52)
    %73 = tt.broadcast %30 : tensor<1x16xf32> -> tensor<256x16xf32> loc(#loc53)
    %74 = arith.addf %27, %73 : tensor<256x16xf32> loc(#loc53)
    %75 = arith.addf %36, %48 : tensor<256x16xf32> loc(#loc54)
    %76 = arith.addf %74, %75 : tensor<256x16xf32> loc(#loc55)
    %77 = tt.broadcast %72 : tensor<1x16xf32> -> tensor<256x16xf32> loc(#loc56)
    %78 = arith.addf %69, %77 : tensor<256x16xf32> loc(#loc56)
    %79 = arith.addf %76, %78 : tensor<256x16xf32> loc(#loc57)
    gpu.barrier loc(#loc58)
    tt.store %23, %79, %26 : tensor<256x16x!tt.ptr<f32>> loc(#loc59)
    tt.return loc(#loc60)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":22:28)
#loc3 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":22:33)
#loc4 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":23:36)
#loc5 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":23:44)
#loc6 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":23:23)
#loc7 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":24:21)
#loc8 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":25:28)
#loc9 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":25:33)
#loc10 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":26:36)
#loc11 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":26:44)
#loc12 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":26:23)
#loc13 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":27:21)
#loc14 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":30:19)
#loc15 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":31:19)
#loc16 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":32:19)
#loc17 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":33:19)
#loc18 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":34:43)
#loc19 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":34:39)
#loc20 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":34:34)
#loc21 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":34:56)
#loc22 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":34:48)
#loc23 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":35:30)
#loc24 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":35:35)
#loc25 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":36:39)
#loc26 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":36:35)
#loc27 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":36:30)
#loc28 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":36:44)
#loc29 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":37:39)
#loc30 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":37:34)
#loc31 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":37:48)
#loc32 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":37:45)
#loc33 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":37:60)
#loc34 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":37:55)
#loc35 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":37:30)
#loc36 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":37:66)
#loc37 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":38:40)
#loc38 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":38:35)
#loc39 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":38:57)
#loc40 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":38:51)
#loc41 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":38:80)
#loc42 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":38:74)
#loc43 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":38:68)
#loc44 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":38:98)
#loc45 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":38:92)
#loc46 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":38:85)
#loc47 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":38:109)
#loc48 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":38:103)
#loc49 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":38:30)
#loc50 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":38:114)
#loc51 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":39:30)
#loc52 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":39:35)
#loc53 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":40:18)
#loc54 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":41:18)
#loc55 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":42:18)
#loc56 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":43:18)
#loc57 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":44:19)
#loc58 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":45:4)
#loc59 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":46:49)
#loc60 = loc("inductor_cache/2s/c2saqzgkixge2ceyzt36gpl54middaeipgy6tvhhngrgdks4pnis.py":46:4)
