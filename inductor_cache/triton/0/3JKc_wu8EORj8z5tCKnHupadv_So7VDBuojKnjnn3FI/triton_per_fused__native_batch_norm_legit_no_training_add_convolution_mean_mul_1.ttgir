#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [2, 16], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":19:0)
#loc1 = loc(unknown)
#loc44 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":59:26)
#loc61 = loc(callsite(#loc1 at #loc44))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":19:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x16xf32, #blocked> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<1.600000e+01> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<1x16xf32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x16xi32, #blocked1> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x16xi32, #blocked> loc(#loc4)
    %6 = arith.remsi %0, %c4_i32 : i32 loc(#loc5)
    %7 = arith.muli %0, %c16_i32 : i32 loc(#loc6)
    %8 = tt.splat %7 : i32 -> tensor<1x16xi32, #blocked1> loc(#loc7)
    %9 = tt.splat %7 : i32 -> tensor<1x16xi32, #blocked> loc(#loc7)
    %10 = arith.addi %4, %8 : tensor<1x16xi32, #blocked1> loc(#loc7)
    %11 = arith.addi %5, %9 : tensor<1x16xi32, #blocked> loc(#loc7)
    %12 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc8)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc8)
    %14 = tt.addptr %12, %10 : tensor<1x16x!tt.ptr<f32>, #blocked1>, tensor<1x16xi32, #blocked1> loc(#loc8)
    %15 = tt.addptr %13, %11 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc8)
    %16 = tt.splat %1 : i1 -> tensor<1x16xi1, #blocked1> loc(#loc9)
    %17 = tt.splat %1 : i1 -> tensor<1x16xi1, #blocked> loc(#loc9)
    %18 = tt.load %14, %16, %cst_6 : tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc9)
    %19 = tt.load %15, %17, %cst : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc9)
    %20 = tt.addptr %arg3, %6 : !tt.ptr<f32>, i32 loc(#loc10)
    %21 = tt.splat %20 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc11)
    %22 = tt.splat %20 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc11)
    %23 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked1> loc(#loc11)
    %24 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc11)
    %25 = tt.load %21, %23 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc11)
    %26 = tt.load %22, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc11)
    %27 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc12)
    %28 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc12)
    %29 = tt.addptr %27, %10 : tensor<1x16x!tt.ptr<f32>, #blocked1>, tensor<1x16xi32, #blocked1> loc(#loc12)
    %30 = tt.addptr %28, %11 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc12)
    %31 = tt.load %29, %16, %cst_6 : tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc13)
    %32 = tt.load %30, %17, %cst : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc13)
    %33 = tt.addptr %arg4, %6 : !tt.ptr<f32>, i32 loc(#loc14)
    %34 = tt.splat %33 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc15)
    %35 = tt.splat %33 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc15)
    %36 = tt.load %34, %23 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc15)
    %37 = tt.load %35, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc15)
    %38 = tt.addptr %arg5, %6 : !tt.ptr<f32>, i32 loc(#loc16)
    %39 = tt.splat %38 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc17)
    %40 = tt.splat %38 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc17)
    %41 = tt.load %39, %23 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc17)
    %42 = tt.load %40, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc17)
    %43 = tt.addptr %arg6, %6 : !tt.ptr<f32>, i32 loc(#loc18)
    %44 = tt.splat %43 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc19)
    %45 = tt.splat %43 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc19)
    %46 = tt.load %44, %23 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc19)
    %47 = tt.load %45, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc19)
    %48 = tt.addptr %arg7, %6 : !tt.ptr<f32>, i32 loc(#loc20)
    %49 = tt.splat %48 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc21)
    %50 = tt.splat %48 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc21)
    %51 = tt.load %49, %23 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc21)
    %52 = tt.load %50, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc21)
    %53 = tt.addptr %arg8, %6 : !tt.ptr<f32>, i32 loc(#loc22)
    %54 = tt.splat %53 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc23)
    %55 = tt.splat %53 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc23)
    %56 = tt.load %54, %23 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc23)
    %57 = tt.load %55, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc23)
    %58 = tt.addptr %arg9, %0 : !tt.ptr<f32>, i32 loc(#loc24)
    %59 = tt.splat %58 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc25)
    %60 = tt.load %59, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc25)
    %61 = tt.broadcast %25 : tensor<1x1xf32, #blocked1> -> tensor<1x16xf32, #blocked1> loc(#loc26)
    %62 = tt.broadcast %26 : tensor<1x1xf32, #blocked> -> tensor<1x16xf32, #blocked> loc(#loc26)
    %63 = arith.addf %18, %61 : tensor<1x16xf32, #blocked1> loc(#loc26)
    %64 = arith.addf %19, %62 : tensor<1x16xf32, #blocked> loc(#loc26)
    %65 = tt.broadcast %36 : tensor<1x1xf32, #blocked1> -> tensor<1x16xf32, #blocked1> loc(#loc27)
    %66 = tt.broadcast %37 : tensor<1x1xf32, #blocked> -> tensor<1x16xf32, #blocked> loc(#loc27)
    %67 = arith.addf %31, %65 : tensor<1x16xf32, #blocked1> loc(#loc27)
    %68 = arith.addf %32, %66 : tensor<1x16xf32, #blocked> loc(#loc27)
    %69 = tt.broadcast %41 : tensor<1x1xf32, #blocked1> -> tensor<1x16xf32, #blocked1> loc(#loc28)
    %70 = tt.broadcast %42 : tensor<1x1xf32, #blocked> -> tensor<1x16xf32, #blocked> loc(#loc28)
    %71 = arith.subf %67, %69 : tensor<1x16xf32, #blocked1> loc(#loc28)
    %72 = arith.subf %68, %70 : tensor<1x16xf32, #blocked> loc(#loc28)
    %73 = arith.addf %46, %cst_4 : tensor<1x1xf32, #blocked1> loc(#loc29)
    %74 = arith.addf %47, %cst_5 : tensor<1x1xf32, #blocked> loc(#loc29)
    %75 = tt.extern_elementwise %73 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32, #blocked1>) -> tensor<1x1xf32, #blocked1> loc(#loc30)
    %76 = tt.extern_elementwise %74 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc30)
    %77 = arith.divf %cst_1, %75 : tensor<1x1xf32, #blocked1> loc(#loc31)
    %78 = arith.divf %cst_2, %76 : tensor<1x1xf32, #blocked> loc(#loc31)
    %79 = tt.broadcast %77 : tensor<1x1xf32, #blocked1> -> tensor<1x16xf32, #blocked1> loc(#loc32)
    %80 = tt.broadcast %78 : tensor<1x1xf32, #blocked> -> tensor<1x16xf32, #blocked> loc(#loc32)
    %81 = arith.mulf %71, %79 : tensor<1x16xf32, #blocked1> loc(#loc32)
    %82 = arith.mulf %72, %80 : tensor<1x16xf32, #blocked> loc(#loc32)
    %83 = tt.broadcast %51 : tensor<1x1xf32, #blocked1> -> tensor<1x16xf32, #blocked1> loc(#loc33)
    %84 = tt.broadcast %52 : tensor<1x1xf32, #blocked> -> tensor<1x16xf32, #blocked> loc(#loc33)
    %85 = arith.mulf %81, %83 : tensor<1x16xf32, #blocked1> loc(#loc33)
    %86 = arith.mulf %82, %84 : tensor<1x16xf32, #blocked> loc(#loc33)
    %87 = tt.broadcast %56 : tensor<1x1xf32, #blocked1> -> tensor<1x16xf32, #blocked1> loc(#loc34)
    %88 = tt.broadcast %57 : tensor<1x1xf32, #blocked> -> tensor<1x16xf32, #blocked> loc(#loc34)
    %89 = arith.addf %85, %87 : tensor<1x16xf32, #blocked1> loc(#loc34)
    %90 = arith.addf %86, %88 : tensor<1x16xf32, #blocked> loc(#loc34)
    %91 = arith.addf %63, %89 : tensor<1x16xf32, #blocked1> loc(#loc35)
    %92 = arith.addf %64, %90 : tensor<1x16xf32, #blocked> loc(#loc35)
    %93 = arith.subf %cst_0, %60 : tensor<1x1xf32, #blocked> loc(#loc56)
    %94 = math.exp %93 : tensor<1x1xf32, #blocked> loc(#loc57)
    %95 = arith.addf %94, %cst_2 : tensor<1x1xf32, #blocked> loc(#loc58)
    %96 = arith.divf %cst_2, %95 : tensor<1x1xf32, #blocked> loc(#loc59)
    %97 = tt.broadcast %96 : tensor<1x1xf32, #blocked> -> tensor<1x16xf32, #blocked> loc(#loc41)
    %98 = arith.mulf %92, %97 : tensor<1x16xf32, #blocked> loc(#loc41)
    %99 = arith.select %16, %91, %cst_6 : tensor<1x16xi1, #blocked1>, tensor<1x16xf32, #blocked1> loc(#loc42)
    %100 = "tt.reduce"(%99) <{axis = 1 : i32}> ({
    ^bb0(%arg13: f32 loc(callsite(#loc1 at #loc44)), %arg14: f32 loc(callsite(#loc1 at #loc44))):
      %107 = arith.addf %arg13, %arg14 : f32 loc(#loc63)
      tt.reduce.return %107 : f32 loc(#loc60)
    }) : (tensor<1x16xf32, #blocked1>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc60)
    %101 = tt.expand_dims %100 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc46)
    %102 = arith.divf %101, %cst_3 : tensor<1x1xf32, #blocked1> loc(#loc47)
    tt.store %15, %64, %17 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc48)
    tt.store %30, %68, %17 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc49)
    %103 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc50)
    %104 = tt.addptr %103, %11 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc50)
    tt.store %104, %98, %17 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc51)
    gpu.barrier loc(#loc52)
    %105 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc53)
    %106 = tt.splat %105 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc54)
    tt.store %106, %102, %23 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc54)
    tt.return loc(#loc55)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":23:28)
#loc3 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":25:21)
#loc4 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":26:34)
#loc5 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":31:19)
#loc6 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":32:42)
#loc7 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":32:39)
#loc8 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":32:34)
#loc9 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":32:47)
#loc10 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":33:30)
#loc11 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":33:35)
#loc12 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":34:34)
#loc13 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":34:47)
#loc14 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":35:30)
#loc15 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":35:35)
#loc16 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":36:30)
#loc17 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":36:35)
#loc18 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":37:30)
#loc19 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":37:35)
#loc20 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":38:31)
#loc21 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":38:36)
#loc22 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":39:31)
#loc23 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":39:36)
#loc24 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":40:31)
#loc25 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":40:36)
#loc26 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":41:18)
#loc27 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":42:18)
#loc28 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":43:18)
#loc29 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":45:19)
#loc30 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":46:27)
#loc31 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":48:20)
#loc32 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":51:19)
#loc33 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":52:20)
#loc34 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":53:20)
#loc35 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":54:19)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc37 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":55:23)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc41 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":56:20)
#loc42 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":58:35)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc46 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":59:29)
#loc47 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":61:20)
#loc48 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":62:47)
#loc49 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":63:47)
#loc50 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":64:25)
#loc51 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":64:45)
#loc52 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":65:4)
#loc53 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":66:28)
#loc54 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":66:40)
#loc55 = loc("inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py":66:4)
#loc56 = loc(callsite(#loc36 at #loc37))
#loc57 = loc(callsite(#loc38 at #loc37))
#loc58 = loc(callsite(#loc39 at #loc37))
#loc59 = loc(callsite(#loc40 at #loc37))
#loc60 = loc(callsite(#loc43 at #loc44))
#loc62 = loc(callsite(#loc45 at #loc43))
#loc63 = loc(callsite(#loc62 at #loc44))
