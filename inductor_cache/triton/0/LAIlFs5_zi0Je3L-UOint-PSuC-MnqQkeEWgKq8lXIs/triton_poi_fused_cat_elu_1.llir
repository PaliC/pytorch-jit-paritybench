; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_cat_elu_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 512, !dbg !14
  %14 = sdiv i32 %12, 16, !dbg !15
  %.frozen = freeze i32 %12, !dbg !16
  %15 = sdiv i32 %.frozen, 128, !dbg !16
  %16 = mul i32 %15, 128, !dbg !17
  %srem.decomposed = sub i32 %.frozen, %16, !dbg !17
  %17 = shl nsw i32 %15, 6, !dbg !18
  %18 = add nsw i32 %17, %srem.decomposed, !dbg !19
  %19 = sext i32 %18 to i64, !dbg !20
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !20
  %21 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !21
  %22 = insertelement <2 x i32> %21, i32 %14, i64 1, !dbg !21
  %23 = srem <2 x i32> %22, <i32 16, i32 8>, !dbg !21
  %24 = extractelement <2 x i32> %23, i64 1, !dbg !22
  %25 = icmp slt i32 %24, 4, !dbg !23
  %26 = and i1 %13, %25, !dbg !24
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %20, i1 %26, i32 0, i1 %26, i32 0, i1 %26) #3, !dbg !25
  %28 = extractvalue { i32, i32 } %27, 0, !dbg !25
  %29 = extractvalue { i32, i32 } %27, 1, !dbg !25
  %30 = bitcast i32 %28 to float, !dbg !25
  %31 = bitcast i32 %29 to float, !dbg !25
  %32 = sext i32 %24 to i64, !dbg !26
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %32, !dbg !26
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %26, i32 0, i1 %26) #3, !dbg !27
  %35 = bitcast i32 %34 to float, !dbg !27
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %26, i32 0, i1 %26) #3, !dbg !27
  %37 = bitcast i32 %36 to float, !dbg !27
  %38 = fadd float %30, %35, !dbg !28
  %39 = fadd float %31, %37, !dbg !28
  %40 = icmp sgt i32 %24, 3, !dbg !22
  %41 = insertelement <2 x i32> <i32 poison, i32 -4>, i32 %17, i64 0, !dbg !29
  %42 = add nsw <2 x i32> %41, %23, !dbg !29
  %43 = extractelement <2 x i32> %42, i64 1, !dbg !30
  %44 = shl nsw i32 %43, 4, !dbg !30
  %45 = extractelement <2 x i32> %42, i64 0, !dbg !31
  %46 = add nsw i32 %45, %44, !dbg !31
  %47 = sext i32 %46 to i64, !dbg !32
  %48 = getelementptr float, ptr addrspace(1) %2, i64 %47, !dbg !32
  %49 = and i1 %13, %40, !dbg !33
  %50 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %48, i1 %49, i32 0, i1 %49, i32 0, i1 %49) #3, !dbg !34
  %51 = extractvalue { i32, i32 } %50, 0, !dbg !34
  %52 = extractvalue { i32, i32 } %50, 1, !dbg !34
  %53 = bitcast i32 %51 to float, !dbg !34
  %54 = bitcast i32 %52 to float, !dbg !34
  %55 = sext i32 %43 to i64, !dbg !35
  %56 = getelementptr float, ptr addrspace(1) %3, i64 %55, !dbg !35
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %49, i32 0, i1 %49) #3, !dbg !36
  %58 = bitcast i32 %57 to float, !dbg !36
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %49, i32 0, i1 %49) #3, !dbg !36
  %60 = bitcast i32 %59 to float, !dbg !36
  %61 = fadd float %53, %58, !dbg !37
  %62 = fadd float %54, %60, !dbg !37
  %63 = select i1 %25, float %38, float %61, !dbg !38
  %64 = select i1 %25, float %39, float %62, !dbg !38
  %65 = fmul float %63, 0x3FF7154760000000, !dbg !39
  %66 = tail call float @llvm.nvvm.round.f(float %65) #3, !dbg !39
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not.i = icmp eq i32 %67, 0, !dbg !39
  %68 = tail call float @llvm.nvvm.fabs.ftz.f(float %63) #3, !dbg !39
  %69 = tail call float @llvm.nvvm.fabs.f(float %63) #3, !dbg !39
  %.03.i = select i1 %.not.i, float %69, float %68, !dbg !39
  %70 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !39
  %t.0.i = select i1 %70, float 0.000000e+00, float %66, !dbg !39
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %73 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !39
  %j.0.i = select i1 %73, float 1.270000e+02, float %t.0.i, !dbg !39
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not8.i = icmp eq i32 %79, 0, !dbg !39
  br i1 %.not8.i, label %82, label %80, !dbg !39

80:                                               ; preds = %6
  %81 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !39
  br label %__nv_expm1f.exit, !dbg !39

82:                                               ; preds = %6
  %83 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !39
  br label %__nv_expm1f.exit, !dbg !39

__nv_expm1f.exit:                                 ; preds = %80, %82
  %.0.i = phi float [ %81, %80 ], [ %83, %82 ], !dbg !39
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %85 = fmul float %64, 0x3FF7154760000000, !dbg !39
  %86 = tail call float @llvm.nvvm.round.f(float %85) #3, !dbg !39
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not.i1 = icmp eq i32 %87, 0, !dbg !39
  %88 = tail call float @llvm.nvvm.fabs.ftz.f(float %64) #3, !dbg !39
  %89 = tail call float @llvm.nvvm.fabs.f(float %64) #3, !dbg !39
  %.03.i2 = select i1 %.not.i1, float %89, float %88, !dbg !39
  %90 = fcmp olt float %.03.i2, 0x3FDA3D70A0000000, !dbg !39
  %t.0.i3 = select i1 %90, float 0.000000e+00, float %86, !dbg !39
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %93 = fcmp oeq float %t.0.i3, 1.280000e+02, !dbg !39
  %j.0.i4 = select i1 %93, float 1.270000e+02, float %t.0.i3, !dbg !39
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not8.i5 = icmp eq i32 %99, 0, !dbg !39
  br i1 %.not8.i5, label %102, label %100, !dbg !39

100:                                              ; preds = %__nv_expm1f.exit
  %101 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i4) #3, !dbg !39
  br label %__nv_expm1f.exit27, !dbg !39

102:                                              ; preds = %__nv_expm1f.exit
  %103 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i4) #3, !dbg !39
  br label %__nv_expm1f.exit27, !dbg !39

__nv_expm1f.exit27:                               ; preds = %100, %102
  %.0.i6 = phi float [ %101, %100 ], [ %103, %102 ], !dbg !39
  %104 = fcmp oeq float %63, 0.000000e+00, !dbg !39
  %105 = fadd float %63, %63, !dbg !39
  %106 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !39
  %107 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !39
  %.not9.i = icmp eq i32 %84, 0, !dbg !39
  %.not7.i = icmp eq i32 %78, 0, !dbg !39
  %.not6.i = icmp eq i32 %77, 0, !dbg !39
  %.not5.i = icmp eq i32 %76, 0, !dbg !39
  %.not4.i = icmp eq i32 %75, 0, !dbg !39
  %.not3.i = icmp eq i32 %74, 0, !dbg !39
  %.not2.i = icmp eq i32 %72, 0, !dbg !39
  %108 = fneg float %t.0.i, !dbg !39
  %.not1.i = icmp eq i32 %71, 0, !dbg !39
  %109 = tail call float @llvm.nvvm.fma.rn.f(float %108, float 0x3FE62E4000000000, float %63) #3, !dbg !39
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %108, float 0x3FE62E4000000000, float %63) #3, !dbg !39
  %.04.i = select i1 %.not1.i, float %109, float %110, !dbg !39
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %108, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !39
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %108, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !39
  %.05.i = select i1 %.not2.i, float %111, float %112, !dbg !39
  %113 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !39
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !39
  %.07.i = select i1 %.not3.i, float %113, float %114, !dbg !39
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !39
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !39
  %.08.i = select i1 %.not4.i, float %115, float %116, !dbg !39
  %117 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !39
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !39
  %.09.i = select i1 %.not5.i, float %117, float %118, !dbg !39
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !39
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !39
  %.06.i = select i1 %.not6.i, float %119, float %120, !dbg !39
  %121 = fmul float %.05.i, %.06.i, !dbg !39
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %121, float %.05.i, float %.05.i) #3, !dbg !39
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %121, float %.05.i, float %.05.i) #3, !dbg !39
  %.01.i = select i1 %.not7.i, float %122, float %123, !dbg !39
  %124 = fadd float %.0.i, -1.000000e+00, !dbg !39
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i, float %124) #3, !dbg !39
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i, float %124) #3, !dbg !39
  %.02.i = select i1 %.not9.i, float %125, float %126, !dbg !39
  %127 = fadd float %.02.i, %.02.i, !dbg !39
  %u.0.i = select i1 %73, float %127, float %.02.i, !dbg !39
  %u.1.i = select i1 %107, float 0x7FF0000000000000, float %u.0.i, !dbg !39
  %u.2.i = select i1 %106, float -1.000000e+00, float %u.1.i, !dbg !39
  %u.3.i = select i1 %104, float %105, float %u.2.i, !dbg !39
  %128 = fcmp ogt float %64, 0.000000e+00, !dbg !40
  %129 = fcmp ogt float %63, 0.000000e+00, !dbg !40
  %.not7.i7 = icmp eq i32 %98, 0, !dbg !39
  %.not6.i8 = icmp eq i32 %97, 0, !dbg !39
  %.not5.i9 = icmp eq i32 %96, 0, !dbg !39
  %.not4.i10 = icmp eq i32 %95, 0, !dbg !39
  %.not3.i11 = icmp eq i32 %94, 0, !dbg !39
  %.not2.i12 = icmp eq i32 %92, 0, !dbg !39
  %130 = fneg float %t.0.i3, !dbg !39
  %.not1.i13 = icmp eq i32 %91, 0, !dbg !39
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %130, float 0x3FE62E4000000000, float %64) #3, !dbg !39
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %130, float 0x3FE62E4000000000, float %64) #3, !dbg !39
  %.04.i14 = select i1 %.not1.i13, float %131, float %132, !dbg !39
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %130, float 0x3EB7F7D1C0000000, float %.04.i14) #3, !dbg !39
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %130, float 0x3EB7F7D1C0000000, float %.04.i14) #3, !dbg !39
  %.05.i15 = select i1 %.not2.i12, float %133, float %134, !dbg !39
  %135 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i15, float 0x3F812ACC60000000) #3, !dbg !39
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i15, float 0x3F812ACC60000000) #3, !dbg !39
  %.07.i16 = select i1 %.not3.i11, float %135, float %136, !dbg !39
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i16, float %.05.i15, float 0x3FA5557C60000000) #3, !dbg !39
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i16, float %.05.i15, float 0x3FA5557C60000000) #3, !dbg !39
  %.08.i17 = select i1 %.not4.i10, float %137, float %138, !dbg !39
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i17, float %.05.i15, float 0x3FC5553EC0000000) #3, !dbg !39
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i17, float %.05.i15, float 0x3FC5553EC0000000) #3, !dbg !39
  %.09.i18 = select i1 %.not5.i9, float %139, float %140, !dbg !39
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i18, float %.05.i15, float 0x3FDFFFFFC0000000) #3, !dbg !39
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i18, float %.05.i15, float 0x3FDFFFFFC0000000) #3, !dbg !39
  %.06.i19 = select i1 %.not6.i8, float %141, float %142, !dbg !39
  %143 = fmul float %.05.i15, %.06.i19, !dbg !39
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %143, float %.05.i15, float %.05.i15) #3, !dbg !39
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %143, float %.05.i15, float %.05.i15) #3, !dbg !39
  %.01.i20 = select i1 %.not7.i7, float %144, float %145, !dbg !39
  %146 = fadd float %.0.i6, -1.000000e+00, !dbg !39
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not9.i21 = icmp eq i32 %147, 0, !dbg !39
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i20, float %.0.i6, float %146) #3, !dbg !39
  %149 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i20, float %.0.i6, float %146) #3, !dbg !39
  %.02.i22 = select i1 %.not9.i21, float %149, float %148, !dbg !39
  %150 = fadd float %.02.i22, %.02.i22, !dbg !39
  %u.0.i23 = select i1 %93, float %150, float %.02.i22, !dbg !39
  %151 = fcmp ogt float %j.0.i4, 1.280000e+02, !dbg !39
  %u.1.i24 = select i1 %151, float 0x7FF0000000000000, float %u.0.i23, !dbg !39
  %152 = fcmp olt float %j.0.i4, -2.500000e+01, !dbg !39
  %u.2.i25 = select i1 %152, float -1.000000e+00, float %u.1.i24, !dbg !39
  %153 = fcmp oeq float %64, 0.000000e+00, !dbg !39
  %154 = fadd float %64, %64, !dbg !39
  %u.3.i26 = select i1 %153, float %154, float %u.2.i25, !dbg !39
  %155 = select i1 %129, float %63, float %u.3.i, !dbg !41
  %156 = select i1 %128, float %64, float %u.3.i26, !dbg !41
  %157 = sext i32 %12 to i64, !dbg !42
  %158 = getelementptr float, ptr addrspace(1) %4, i64 %157, !dbg !42
  %159 = bitcast float %155 to i32, !dbg !43
  %160 = bitcast float %156 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %159, i32 %160, ptr addrspace(1) %158, i1 %13) #3, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cs4vn3dlqyp2o4odhqqqim36gehzknxylf2k3a5heedej32awolc.py", directory: "inductor_cache/s4")
!4 = !{ptr @triton_poi_fused_cat_elu_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_elu_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_elu_1", linkageName: "triton_poi_fused_cat_elu_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 33, column: 35, scope: !7)
!18 = !DILocation(line: 33, column: 48, scope: !7)
!19 = !DILocation(line: 33, column: 45, scope: !7)
!20 = !DILocation(line: 33, column: 30, scope: !7)
!21 = !DILocation(line: 25, column: 19, scope: !7)
!22 = !DILocation(line: 38, column: 20, scope: !7)
!23 = !DILocation(line: 32, column: 18, scope: !7)
!24 = !DILocation(line: 33, column: 60, scope: !7)
!25 = !DILocation(line: 33, column: 53, scope: !7)
!26 = !DILocation(line: 34, column: 30, scope: !7)
!27 = !DILocation(line: 34, column: 35, scope: !7)
!28 = !DILocation(line: 35, column: 18, scope: !7)
!29 = !DILocation(line: 41, column: 36, scope: !7)
!30 = !DILocation(line: 41, column: 40, scope: !7)
!31 = !DILocation(line: 41, column: 53, scope: !7)
!32 = !DILocation(line: 41, column: 31, scope: !7)
!33 = !DILocation(line: 41, column: 69, scope: !7)
!34 = !DILocation(line: 41, column: 61, scope: !7)
!35 = !DILocation(line: 42, column: 31, scope: !7)
!36 = !DILocation(line: 42, column: 43, scope: !7)
!37 = !DILocation(line: 43, column: 20, scope: !7)
!38 = !DILocation(line: 0, scope: !7)
!39 = !DILocation(line: 51, column: 28, scope: !7)
!40 = !DILocation(line: 48, column: 20, scope: !7)
!41 = !DILocation(line: 53, column: 35, scope: !7)
!42 = !DILocation(line: 54, column: 25, scope: !7)
!43 = !DILocation(line: 54, column: 37, scope: !7)
!44 = !DILocation(line: 54, column: 4, scope: !7)
