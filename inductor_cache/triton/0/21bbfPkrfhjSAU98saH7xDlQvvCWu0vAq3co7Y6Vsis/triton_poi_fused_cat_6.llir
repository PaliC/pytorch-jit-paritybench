; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = or disjoint i32 %9, 128, !dbg !13
  %11 = icmp slt i32 %9, 448, !dbg !14
  %12 = icmp slt i32 %10, 448, !dbg !14
  %13 = sdiv i32 %9, 112, !dbg !15
  %14 = sdiv i32 %10, 112, !dbg !15
  %15 = shl nsw i32 %13, 6, !dbg !16
  %16 = shl nsw i32 %14, 6, !dbg !16
  %17 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !17
  %18 = shufflevector <2 x i32> %17, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !17
  %19 = sdiv <2 x i32> %18, <i32 28, i32 7>, !dbg !17
  %20 = shufflevector <2 x i32> %19, <2 x i32> poison, <2 x i32> <i32 1, i32 poison>, !dbg !18
  %21 = insertelement <2 x i32> %20, i32 %9, i64 1, !dbg !18
  %22 = srem <2 x i32> %21, <i32 16, i32 7>, !dbg !18
  %23 = srem <2 x i32> %19, splat (i32 4), !dbg !19
  %24 = extractelement <2 x i32> %22, i64 1, !dbg !20
  %25 = icmp slt i32 %24, 4, !dbg !21
  %26 = shl nsw i32 %24, 4, !dbg !22
  %27 = extractelement <2 x i32> %22, i64 0, !dbg !23
  %28 = add nsw i32 %27, %26, !dbg !23
  %29 = add nsw i32 %28, %15, !dbg !24
  %30 = sext i32 %29 to i64, !dbg !25
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !25
  %32 = and i1 %11, %25, !dbg !26
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %32, i32 0, i1 %32) #1, !dbg !27
  %34 = icmp sgt i32 %24, 3, !dbg !28
  %35 = add nsw i32 %28, -64, !dbg !29
  %36 = add nsw i32 %35, %15, !dbg !30
  %37 = sext i32 %36 to i64, !dbg !31
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !31
  %39 = and i1 %11, %34, !dbg !32
  %40 = mul nsw <2 x i32> %23, <i32 7, i32 28>, !dbg !33
  %41 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !17
  %42 = shufflevector <2 x i32> %41, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !17
  %43 = sdiv <2 x i32> %42, <i32 28, i32 7>, !dbg !17
  %44 = shufflevector <2 x i32> %43, <2 x i32> poison, <2 x i32> <i32 1, i32 poison>, !dbg !18
  %45 = insertelement <2 x i32> %44, i32 %10, i64 1, !dbg !18
  %46 = srem <2 x i32> %45, <i32 16, i32 7>, !dbg !18
  %47 = srem <2 x i32> %43, splat (i32 4), !dbg !19
  %48 = extractelement <2 x i32> %46, i64 1, !dbg !20
  %49 = icmp slt i32 %48, 4, !dbg !21
  %50 = shl nsw i32 %48, 4, !dbg !22
  %51 = extractelement <2 x i32> %46, i64 0, !dbg !23
  %52 = add nsw i32 %51, %50, !dbg !23
  %53 = add nsw i32 %52, %16, !dbg !24
  %54 = sext i32 %53 to i64, !dbg !25
  %55 = getelementptr float, ptr addrspace(1) %0, i64 %54, !dbg !25
  %56 = and i1 %12, %49, !dbg !26
  %57 = icmp sgt i32 %48, 3, !dbg !28
  %58 = add nsw i32 %52, -64, !dbg !29
  %59 = add nsw i32 %58, %16, !dbg !30
  %60 = sext i32 %59 to i64, !dbg !31
  %61 = getelementptr float, ptr addrspace(1) %1, i64 %60, !dbg !31
  %62 = and i1 %12, %57, !dbg !32
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %56, i32 0, i1 %56) #1, !dbg !27
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %39, i32 0, i1 %39) #1, !dbg !34
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %61, i1 %62, i32 0, i1 %62) #1, !dbg !34
  %.v = select i1 %25, i32 %33, i32 %64, !dbg !35
  %.v1 = select i1 %49, i32 %63, i32 %65, !dbg !35
  %66 = mul nsw <2 x i32> %47, <i32 7, i32 28>, !dbg !33
  %67 = mul nsw i32 %13, 112, !dbg !36
  %68 = mul nsw i32 %14, 112, !dbg !36
  %69 = add nsw i32 %67, %24, !dbg !20
  %70 = extractelement <2 x i32> %40, i64 0, !dbg !37
  %71 = add i32 %69, %70, !dbg !37
  %72 = extractelement <2 x i32> %40, i64 1, !dbg !38
  %73 = add i32 %71, %72, !dbg !38
  %74 = add nsw i32 %68, %48, !dbg !20
  %75 = extractelement <2 x i32> %66, i64 0, !dbg !37
  %76 = add i32 %74, %75, !dbg !37
  %77 = extractelement <2 x i32> %66, i64 1, !dbg !38
  %78 = add i32 %76, %77, !dbg !38
  %79 = sext i32 %73 to i64, !dbg !39
  %80 = getelementptr float, ptr addrspace(1) %2, i64 %79, !dbg !39
  %81 = sext i32 %78 to i64, !dbg !39
  %82 = getelementptr float, ptr addrspace(1) %2, i64 %81, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %.v, ptr addrspace(1) %80, i1 %11) #1, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %.v1, ptr addrspace(1) %82, i1 %12) #1, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjydmcjz3t3ekh54ipouyw5t4wcvwu3eqvvwdnyhdb6vlnf3adiv.py", directory: "inductor_cache/jy")
!4 = !{ptr @triton_poi_fused_cat_6, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_6, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_6", linkageName: "triton_poi_fused_cat_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 34, column: 48, scope: !7)
!17 = !DILocation(line: 28, column: 21, scope: !7)
!18 = !DILocation(line: 26, column: 26, scope: !7)
!19 = !DILocation(line: 28, column: 27, scope: !7)
!20 = !DILocation(line: 40, column: 30, scope: !7)
!21 = !DILocation(line: 33, column: 18, scope: !7)
!22 = !DILocation(line: 34, column: 39, scope: !7)
!23 = !DILocation(line: 34, column: 35, scope: !7)
!24 = !DILocation(line: 34, column: 45, scope: !7)
!25 = !DILocation(line: 34, column: 30, scope: !7)
!26 = !DILocation(line: 34, column: 60, scope: !7)
!27 = !DILocation(line: 34, column: 53, scope: !7)
!28 = !DILocation(line: 35, column: 19, scope: !7)
!29 = !DILocation(line: 38, column: 35, scope: !7)
!30 = !DILocation(line: 38, column: 52, scope: !7)
!31 = !DILocation(line: 38, column: 30, scope: !7)
!32 = !DILocation(line: 38, column: 67, scope: !7)
!33 = !DILocation(line: 40, column: 32, scope: !7)
!34 = !DILocation(line: 38, column: 60, scope: !7)
!35 = !DILocation(line: 39, column: 33, scope: !7)
!36 = !DILocation(line: 40, column: 49, scope: !7)
!37 = !DILocation(line: 40, column: 37, scope: !7)
!38 = !DILocation(line: 40, column: 45, scope: !7)
!39 = !DILocation(line: 40, column: 25, scope: !7)
!40 = !DILocation(line: 40, column: 61, scope: !7)
!41 = !DILocation(line: 40, column: 4, scope: !7)
