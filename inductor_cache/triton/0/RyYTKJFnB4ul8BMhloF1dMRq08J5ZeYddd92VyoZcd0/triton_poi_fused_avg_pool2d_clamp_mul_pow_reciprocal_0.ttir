#loc = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":19:0)
module {
  tt.func public @triton_poi_fused_avg_pool2d_clamp_mul_pow_reciprocal_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 1.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<9.99999997E-7> : tensor<16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<6.250000e-02> : tensor<16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<15> : tensor<16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<14> : tensor<16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<13> : tensor<16xi32> loc(#loc1)
    %cst_5 = arith.constant dense<12> : tensor<16xi32> loc(#loc1)
    %cst_6 = arith.constant dense<11> : tensor<16xi32> loc(#loc1)
    %cst_7 = arith.constant dense<10> : tensor<16xi32> loc(#loc1)
    %cst_8 = arith.constant dense<9> : tensor<16xi32> loc(#loc1)
    %cst_9 = arith.constant dense<8> : tensor<16xi32> loc(#loc1)
    %cst_10 = arith.constant dense<7> : tensor<16xi32> loc(#loc1)
    %cst_11 = arith.constant dense<6> : tensor<16xi32> loc(#loc1)
    %cst_12 = arith.constant dense<5> : tensor<16xi32> loc(#loc1)
    %cst_13 = arith.constant dense<4> : tensor<16xi32> loc(#loc1)
    %cst_14 = arith.constant dense<3> : tensor<16xi32> loc(#loc1)
    %cst_15 = arith.constant dense<2> : tensor<16xi32> loc(#loc1)
    %cst_16 = arith.constant dense<1> : tensor<16xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_17 = arith.constant dense<16> : tensor<16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<16xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<16xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_17 : tensor<16xi32> loc(#loc6)
    %6 = arith.muli %4, %cst_17 : tensor<16xi32> loc(#loc7)
    %7 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc8)
    %9 = tt.load %8, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %arg2, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc10)
    %11 = tt.load %10 : !tt.ptr<f32> loc(#loc11)
    %12 = tt.splat %11 : f32 -> tensor<16xf32> loc(#loc12)
    %13 = arith.addi %6, %cst_16 : tensor<16xi32> loc(#loc13)
    %14 = tt.addptr %7, %13 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc14)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc15)
    %16 = arith.addi %6, %cst_15 : tensor<16xi32> loc(#loc16)
    %17 = tt.addptr %7, %16 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc17)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc18)
    %19 = arith.addi %6, %cst_14 : tensor<16xi32> loc(#loc19)
    %20 = tt.addptr %7, %19 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc20)
    %21 = tt.load %20, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc21)
    %22 = arith.addi %6, %cst_13 : tensor<16xi32> loc(#loc22)
    %23 = tt.addptr %7, %22 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc23)
    %24 = tt.load %23, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc24)
    %25 = arith.addi %6, %cst_12 : tensor<16xi32> loc(#loc25)
    %26 = tt.addptr %7, %25 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc26)
    %27 = tt.load %26, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc27)
    %28 = arith.addi %6, %cst_11 : tensor<16xi32> loc(#loc28)
    %29 = tt.addptr %7, %28 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc29)
    %30 = tt.load %29, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc30)
    %31 = arith.addi %6, %cst_10 : tensor<16xi32> loc(#loc31)
    %32 = tt.addptr %7, %31 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc32)
    %33 = tt.load %32, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc33)
    %34 = arith.addi %6, %cst_9 : tensor<16xi32> loc(#loc34)
    %35 = tt.addptr %7, %34 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc35)
    %36 = tt.load %35, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc36)
    %37 = arith.addi %6, %cst_8 : tensor<16xi32> loc(#loc37)
    %38 = tt.addptr %7, %37 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc38)
    %39 = tt.load %38, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc39)
    %40 = arith.addi %6, %cst_7 : tensor<16xi32> loc(#loc40)
    %41 = tt.addptr %7, %40 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc41)
    %42 = tt.load %41, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc42)
    %43 = arith.addi %6, %cst_6 : tensor<16xi32> loc(#loc43)
    %44 = tt.addptr %7, %43 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc44)
    %45 = tt.load %44, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc45)
    %46 = arith.addi %6, %cst_5 : tensor<16xi32> loc(#loc46)
    %47 = tt.addptr %7, %46 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc47)
    %48 = tt.load %47, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc48)
    %49 = arith.addi %6, %cst_4 : tensor<16xi32> loc(#loc49)
    %50 = tt.addptr %7, %49 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc50)
    %51 = tt.load %50, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc51)
    %52 = arith.addi %6, %cst_3 : tensor<16xi32> loc(#loc52)
    %53 = tt.addptr %7, %52 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc53)
    %54 = tt.load %53, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc54)
    %55 = arith.addi %6, %cst_2 : tensor<16xi32> loc(#loc55)
    %56 = tt.addptr %7, %55 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc56)
    %57 = tt.load %56, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc57)
    %58 = arith.cmpf ogt, %9, %cst_0 : tensor<16xf32> loc(#loc115)
    %59 = arith.cmpf une, %9, %9 : tensor<16xf32> loc(#loc116)
    %60 = arith.ori %58, %59 : tensor<16xi1> loc(#loc117)
    %61 = arith.select %60, %9, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc118)
    %62 = tt.extern_elementwise %61, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc63)
    %63 = arith.cmpf ogt, %15, %cst_0 : tensor<16xf32> loc(#loc119)
    %64 = arith.cmpf une, %15, %15 : tensor<16xf32> loc(#loc120)
    %65 = arith.ori %63, %64 : tensor<16xi1> loc(#loc121)
    %66 = arith.select %65, %15, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc122)
    %67 = tt.extern_elementwise %66, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc65)
    %68 = arith.addf %67, %62 : tensor<16xf32> loc(#loc66)
    %69 = arith.cmpf ogt, %18, %cst_0 : tensor<16xf32> loc(#loc123)
    %70 = arith.cmpf une, %18, %18 : tensor<16xf32> loc(#loc124)
    %71 = arith.ori %69, %70 : tensor<16xi1> loc(#loc125)
    %72 = arith.select %71, %18, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc126)
    %73 = tt.extern_elementwise %72, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc68)
    %74 = arith.addf %73, %68 : tensor<16xf32> loc(#loc69)
    %75 = arith.cmpf ogt, %21, %cst_0 : tensor<16xf32> loc(#loc127)
    %76 = arith.cmpf une, %21, %21 : tensor<16xf32> loc(#loc128)
    %77 = arith.ori %75, %76 : tensor<16xi1> loc(#loc129)
    %78 = arith.select %77, %21, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc130)
    %79 = tt.extern_elementwise %78, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc71)
    %80 = arith.addf %79, %74 : tensor<16xf32> loc(#loc72)
    %81 = arith.cmpf ogt, %24, %cst_0 : tensor<16xf32> loc(#loc131)
    %82 = arith.cmpf une, %24, %24 : tensor<16xf32> loc(#loc132)
    %83 = arith.ori %81, %82 : tensor<16xi1> loc(#loc133)
    %84 = arith.select %83, %24, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc134)
    %85 = tt.extern_elementwise %84, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc74)
    %86 = arith.addf %85, %80 : tensor<16xf32> loc(#loc75)
    %87 = arith.cmpf ogt, %27, %cst_0 : tensor<16xf32> loc(#loc135)
    %88 = arith.cmpf une, %27, %27 : tensor<16xf32> loc(#loc136)
    %89 = arith.ori %87, %88 : tensor<16xi1> loc(#loc137)
    %90 = arith.select %89, %27, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc138)
    %91 = tt.extern_elementwise %90, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc77)
    %92 = arith.addf %91, %86 : tensor<16xf32> loc(#loc78)
    %93 = arith.cmpf ogt, %30, %cst_0 : tensor<16xf32> loc(#loc139)
    %94 = arith.cmpf une, %30, %30 : tensor<16xf32> loc(#loc140)
    %95 = arith.ori %93, %94 : tensor<16xi1> loc(#loc141)
    %96 = arith.select %95, %30, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc142)
    %97 = tt.extern_elementwise %96, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc80)
    %98 = arith.addf %97, %92 : tensor<16xf32> loc(#loc81)
    %99 = arith.cmpf ogt, %33, %cst_0 : tensor<16xf32> loc(#loc143)
    %100 = arith.cmpf une, %33, %33 : tensor<16xf32> loc(#loc144)
    %101 = arith.ori %99, %100 : tensor<16xi1> loc(#loc145)
    %102 = arith.select %101, %33, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc146)
    %103 = tt.extern_elementwise %102, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc83)
    %104 = arith.addf %103, %98 : tensor<16xf32> loc(#loc84)
    %105 = arith.cmpf ogt, %36, %cst_0 : tensor<16xf32> loc(#loc147)
    %106 = arith.cmpf une, %36, %36 : tensor<16xf32> loc(#loc148)
    %107 = arith.ori %105, %106 : tensor<16xi1> loc(#loc149)
    %108 = arith.select %107, %36, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc150)
    %109 = tt.extern_elementwise %108, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc86)
    %110 = arith.addf %109, %104 : tensor<16xf32> loc(#loc87)
    %111 = arith.cmpf ogt, %39, %cst_0 : tensor<16xf32> loc(#loc151)
    %112 = arith.cmpf une, %39, %39 : tensor<16xf32> loc(#loc152)
    %113 = arith.ori %111, %112 : tensor<16xi1> loc(#loc153)
    %114 = arith.select %113, %39, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc154)
    %115 = tt.extern_elementwise %114, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc89)
    %116 = arith.addf %115, %110 : tensor<16xf32> loc(#loc90)
    %117 = arith.cmpf ogt, %42, %cst_0 : tensor<16xf32> loc(#loc155)
    %118 = arith.cmpf une, %42, %42 : tensor<16xf32> loc(#loc156)
    %119 = arith.ori %117, %118 : tensor<16xi1> loc(#loc157)
    %120 = arith.select %119, %42, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc158)
    %121 = tt.extern_elementwise %120, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc92)
    %122 = arith.addf %121, %116 : tensor<16xf32> loc(#loc93)
    %123 = arith.cmpf ogt, %45, %cst_0 : tensor<16xf32> loc(#loc159)
    %124 = arith.cmpf une, %45, %45 : tensor<16xf32> loc(#loc160)
    %125 = arith.ori %123, %124 : tensor<16xi1> loc(#loc161)
    %126 = arith.select %125, %45, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc162)
    %127 = tt.extern_elementwise %126, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc95)
    %128 = arith.addf %127, %122 : tensor<16xf32> loc(#loc96)
    %129 = arith.cmpf ogt, %48, %cst_0 : tensor<16xf32> loc(#loc163)
    %130 = arith.cmpf une, %48, %48 : tensor<16xf32> loc(#loc164)
    %131 = arith.ori %129, %130 : tensor<16xi1> loc(#loc165)
    %132 = arith.select %131, %48, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc166)
    %133 = tt.extern_elementwise %132, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc98)
    %134 = arith.addf %133, %128 : tensor<16xf32> loc(#loc99)
    %135 = arith.cmpf ogt, %51, %cst_0 : tensor<16xf32> loc(#loc167)
    %136 = arith.cmpf une, %51, %51 : tensor<16xf32> loc(#loc168)
    %137 = arith.ori %135, %136 : tensor<16xi1> loc(#loc169)
    %138 = arith.select %137, %51, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc170)
    %139 = tt.extern_elementwise %138, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc101)
    %140 = arith.addf %139, %134 : tensor<16xf32> loc(#loc102)
    %141 = arith.cmpf ogt, %54, %cst_0 : tensor<16xf32> loc(#loc171)
    %142 = arith.cmpf une, %54, %54 : tensor<16xf32> loc(#loc172)
    %143 = arith.ori %141, %142 : tensor<16xi1> loc(#loc173)
    %144 = arith.select %143, %54, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc174)
    %145 = tt.extern_elementwise %144, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc104)
    %146 = arith.addf %145, %140 : tensor<16xf32> loc(#loc105)
    %147 = arith.cmpf ogt, %57, %cst_0 : tensor<16xf32> loc(#loc175)
    %148 = arith.cmpf une, %57, %57 : tensor<16xf32> loc(#loc176)
    %149 = arith.ori %147, %148 : tensor<16xi1> loc(#loc177)
    %150 = arith.select %149, %57, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc178)
    %151 = tt.extern_elementwise %150, %12 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc107)
    %152 = arith.addf %151, %146 : tensor<16xf32> loc(#loc108)
    %153 = arith.mulf %152, %cst_1 : tensor<16xf32> loc(#loc109)
    %154 = arith.divf %cst, %11 : f32 loc(#loc110)
    %155 = tt.splat %154 : f32 -> tensor<16xf32> loc(#loc110)
    %156 = tt.extern_elementwise %153, %155 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<16xf32>, tensor<16xf32>) -> tensor<16xf32> loc(#loc111)
    %157 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc112)
    %158 = tt.addptr %157, %4 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc112)
    tt.store %158, %156, %5 : tensor<16x!tt.ptr<f32>> loc(#loc113)
    tt.return loc(#loc114)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":21:28)
#loc3 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":21:33)
#loc4 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":22:36)
#loc5 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":22:23)
#loc6 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":23:21)
#loc7 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":25:33)
#loc8 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":25:30)
#loc9 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":25:38)
#loc10 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":26:30)
#loc11 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":26:19)
#loc12 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":27:33)
#loc13 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":28:34)
#loc14 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":28:30)
#loc15 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":28:42)
#loc16 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":29:35)
#loc17 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":29:31)
#loc18 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":29:43)
#loc19 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":30:35)
#loc20 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":30:31)
#loc21 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":30:43)
#loc22 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":31:35)
#loc23 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":31:31)
#loc24 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":31:43)
#loc25 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":32:35)
#loc26 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":32:31)
#loc27 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":32:43)
#loc28 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":33:35)
#loc29 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":33:31)
#loc30 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":33:43)
#loc31 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":34:35)
#loc32 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":34:31)
#loc33 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":34:43)
#loc34 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":35:35)
#loc35 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":35:31)
#loc36 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":35:43)
#loc37 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":36:35)
#loc38 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":36:31)
#loc39 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":36:43)
#loc40 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":37:36)
#loc41 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":37:31)
#loc42 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":37:44)
#loc43 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":38:36)
#loc44 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":38:31)
#loc45 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":38:44)
#loc46 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":39:36)
#loc47 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":39:31)
#loc48 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":39:44)
#loc49 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":40:36)
#loc50 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":40:31)
#loc51 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":40:44)
#loc52 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":41:36)
#loc53 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":41:31)
#loc54 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":41:44)
#loc55 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":42:36)
#loc56 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":42:31)
#loc57 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":42:44)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc59 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":44:40)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc63 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":45:31)
#loc64 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":46:40)
#loc65 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":47:31)
#loc66 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":48:18)
#loc67 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":49:42)
#loc68 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":50:33)
#loc69 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":51:20)
#loc70 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":52:42)
#loc71 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":53:33)
#loc72 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":54:20)
#loc73 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":55:42)
#loc74 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":56:33)
#loc75 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":57:20)
#loc76 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":58:42)
#loc77 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":59:33)
#loc78 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":60:20)
#loc79 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":61:42)
#loc80 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":62:33)
#loc81 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":63:20)
#loc82 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":64:42)
#loc83 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":65:33)
#loc84 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":66:20)
#loc85 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":67:42)
#loc86 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":68:33)
#loc87 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":69:20)
#loc88 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":70:42)
#loc89 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":71:33)
#loc90 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":72:20)
#loc91 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":73:42)
#loc92 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":74:33)
#loc93 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":75:20)
#loc94 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":76:42)
#loc95 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":77:33)
#loc96 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":78:20)
#loc97 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":79:42)
#loc98 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":80:33)
#loc99 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":81:20)
#loc100 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":82:42)
#loc101 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":83:33)
#loc102 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":84:20)
#loc103 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":85:42)
#loc104 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":86:33)
#loc105 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":87:20)
#loc106 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":88:42)
#loc107 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":89:33)
#loc108 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":90:20)
#loc109 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":92:20)
#loc110 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":94:20)
#loc111 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":97:33)
#loc112 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":98:28)
#loc113 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":98:40)
#loc114 = loc("inductor_cache/yv/cyvg47ku6kmnx7uyd6ww3hswowuyvnn6ec57b2q4gnl7mu5fdda7.py":98:4)
#loc115 = loc(callsite(#loc58 at #loc59))
#loc116 = loc(callsite(#loc60 at #loc59))
#loc117 = loc(callsite(#loc61 at #loc59))
#loc118 = loc(callsite(#loc62 at #loc59))
#loc119 = loc(callsite(#loc58 at #loc64))
#loc120 = loc(callsite(#loc60 at #loc64))
#loc121 = loc(callsite(#loc61 at #loc64))
#loc122 = loc(callsite(#loc62 at #loc64))
#loc123 = loc(callsite(#loc58 at #loc67))
#loc124 = loc(callsite(#loc60 at #loc67))
#loc125 = loc(callsite(#loc61 at #loc67))
#loc126 = loc(callsite(#loc62 at #loc67))
#loc127 = loc(callsite(#loc58 at #loc70))
#loc128 = loc(callsite(#loc60 at #loc70))
#loc129 = loc(callsite(#loc61 at #loc70))
#loc130 = loc(callsite(#loc62 at #loc70))
#loc131 = loc(callsite(#loc58 at #loc73))
#loc132 = loc(callsite(#loc60 at #loc73))
#loc133 = loc(callsite(#loc61 at #loc73))
#loc134 = loc(callsite(#loc62 at #loc73))
#loc135 = loc(callsite(#loc58 at #loc76))
#loc136 = loc(callsite(#loc60 at #loc76))
#loc137 = loc(callsite(#loc61 at #loc76))
#loc138 = loc(callsite(#loc62 at #loc76))
#loc139 = loc(callsite(#loc58 at #loc79))
#loc140 = loc(callsite(#loc60 at #loc79))
#loc141 = loc(callsite(#loc61 at #loc79))
#loc142 = loc(callsite(#loc62 at #loc79))
#loc143 = loc(callsite(#loc58 at #loc82))
#loc144 = loc(callsite(#loc60 at #loc82))
#loc145 = loc(callsite(#loc61 at #loc82))
#loc146 = loc(callsite(#loc62 at #loc82))
#loc147 = loc(callsite(#loc58 at #loc85))
#loc148 = loc(callsite(#loc60 at #loc85))
#loc149 = loc(callsite(#loc61 at #loc85))
#loc150 = loc(callsite(#loc62 at #loc85))
#loc151 = loc(callsite(#loc58 at #loc88))
#loc152 = loc(callsite(#loc60 at #loc88))
#loc153 = loc(callsite(#loc61 at #loc88))
#loc154 = loc(callsite(#loc62 at #loc88))
#loc155 = loc(callsite(#loc58 at #loc91))
#loc156 = loc(callsite(#loc60 at #loc91))
#loc157 = loc(callsite(#loc61 at #loc91))
#loc158 = loc(callsite(#loc62 at #loc91))
#loc159 = loc(callsite(#loc58 at #loc94))
#loc160 = loc(callsite(#loc60 at #loc94))
#loc161 = loc(callsite(#loc61 at #loc94))
#loc162 = loc(callsite(#loc62 at #loc94))
#loc163 = loc(callsite(#loc58 at #loc97))
#loc164 = loc(callsite(#loc60 at #loc97))
#loc165 = loc(callsite(#loc61 at #loc97))
#loc166 = loc(callsite(#loc62 at #loc97))
#loc167 = loc(callsite(#loc58 at #loc100))
#loc168 = loc(callsite(#loc60 at #loc100))
#loc169 = loc(callsite(#loc61 at #loc100))
#loc170 = loc(callsite(#loc62 at #loc100))
#loc171 = loc(callsite(#loc58 at #loc103))
#loc172 = loc(callsite(#loc60 at #loc103))
#loc173 = loc(callsite(#loc61 at #loc103))
#loc174 = loc(callsite(#loc62 at #loc103))
#loc175 = loc(callsite(#loc58 at #loc106))
#loc176 = loc(callsite(#loc60 at #loc106))
#loc177 = loc(callsite(#loc61 at #loc106))
#loc178 = loc(callsite(#loc62 at #loc106))
