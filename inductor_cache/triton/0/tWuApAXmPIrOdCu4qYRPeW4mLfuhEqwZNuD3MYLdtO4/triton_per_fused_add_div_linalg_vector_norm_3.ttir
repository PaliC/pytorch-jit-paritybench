#loc = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":19:0)
#loc1 = loc(unknown)
#loc10 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":34:24)
#loc20 = loc(callsite(#loc1 at #loc10))
module {
  tt.func public @triton_per_fused_add_div_linalg_vector_norm_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":19:0), %arg2: i32 loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999996E-13> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x128xf32> loc(#loc1)
    %cst_1 = arith.constant dense<100> : tensor<1x128xi32> loc(#loc1)
    %0 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc3)
    %2 = arith.cmpi slt, %1, %cst_1 : tensor<1x128xi32> loc(#loc4)
    %3 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc5)
    %4 = tt.addptr %3, %1 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc5)
    %5 = tt.load %4, %2, %cst_0 : tensor<1x128x!tt.ptr<f32>> loc(#loc6)
    %6 = arith.mulf %5, %5 : tensor<1x128xf32> loc(#loc7)
    %7 = arith.select %2, %6, %cst_0 : tensor<1x128xi1>, tensor<1x128xf32> loc(#loc8)
    %8 = "tt.reduce"(%7) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc10)), %arg4: f32 loc(callsite(#loc1 at #loc10))):
      %16 = arith.addf %arg3, %arg4 : f32 loc(#loc22)
      tt.reduce.return %16 : f32 loc(#loc19)
    }) : (tensor<1x128xf32>) -> tensor<1xf32> loc(#loc19)
    %9 = tt.expand_dims %8 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc12)
    %10 = tt.extern_elementwise %9 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc13)
    %11 = arith.addf %10, %cst : tensor<1x1xf32> loc(#loc14)
    %12 = tt.broadcast %11 : tensor<1x1xf32> -> tensor<1x128xf32> loc(#loc15)
    %13 = arith.divf %5, %12 : tensor<1x128xf32> loc(#loc15)
    %14 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc16)
    %15 = tt.addptr %14, %1 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc16)
    tt.store %15, %13, %2 : tensor<1x128x!tt.ptr<f32>> loc(#loc17)
    tt.return loc(#loc18)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":26:26)
#loc3 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":26:34)
#loc4 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":28:21)
#loc5 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":30:30)
#loc6 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":30:35)
#loc7 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":31:18)
#loc8 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":33:33)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc12 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":34:27)
#loc13 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":35:26)
#loc14 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":37:18)
#loc15 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":38:18)
#loc16 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":39:25)
#loc17 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":39:71)
#loc18 = loc("inductor_cache/iu/ciuj67mb5fd7mxylmexaiglpuxglry7eopp7hra7atmqzyd6dh3w.py":39:4)
#loc19 = loc(callsite(#loc9 at #loc10))
#loc21 = loc(callsite(#loc11 at #loc9))
#loc22 = loc(callsite(#loc21 at #loc10))
