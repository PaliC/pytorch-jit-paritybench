//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_7,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_8,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<34>;
	.reg .b32 	%r<70>;
	.reg .f32 	%f<58>;
	.reg .b64 	%rd<32>;
	.loc	1 19 0                          // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd21, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_0];
	ld.param.u64 	%rd22, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_1];
$L__tmp0:
	.loc	1 24 28                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd23, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_2];
	.loc	1 27 26                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:27:26
	mov.u32 	%r43, %tid.x;
	shl.b32 	%r44, %r43, 2;
	ld.param.u64 	%rd24, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_3];
	and.b32  	%r45, %r44, 252;
	ld.param.u64 	%rd25, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_4];
	.loc	1 32 19                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:32:19
	shr.s32 	%r46, %r1, 31;
	shr.u32 	%r47, %r46, 24;
	add.s32 	%r48, %r1, %r47;
	and.b32  	%r49, %r48, -256;
	sub.s32 	%r50, %r1, %r49;
	ld.param.u64 	%rd26, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_5];
	.loc	1 33 39                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:33:39
	shl.b32 	%r51, %r1, 8;
	ld.param.u64 	%rd27, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_6];
	.loc	1 33 35                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:33:35
	or.b32  	%r52, %r51, %r45;
	ld.param.u64 	%rd28, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_9_param_7];
	.loc	1 33 30                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:33:30
	mul.wide.s32 	%rd29, %r52, 4;
	add.s64 	%rd1, %rd22, %rd29;
	mov.pred 	%p1, -1;
	.loc	1 33 44                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:33:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:34:30
	add.s64 	%rd2, %rd23, %rd29;
	.loc	1 34 44                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:34:44
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:35:30
	mul.wide.s32 	%rd30, %r50, 4;
	add.s64 	%rd3, %rd24, %rd30;
	.loc	1 35 35                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:35:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 36 30                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:36:30
	add.s64 	%rd7, %rd25, %rd30;
	.loc	1 36 35                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:36:35
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r17;
	.loc	1 37 31                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:37:31
	add.s64 	%rd11, %rd26, %rd30;
	.loc	1 37 36                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:37:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:38:31
	add.s64 	%rd15, %rd27, %rd30;
	.loc	1 38 36                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:38:36
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 41 18                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:41:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 42 26                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:42:26
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 34 44                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:34:44
	mov.b32 	%f4, %r9;
	.loc	1 35 35                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:35:35
	mov.b32 	%f5, %r13;
	.loc	1 39 18                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:39:18
	sub.f32 	%f6, %f4, %f5;
	.loc	1 34 44                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:34:44
	mov.b32 	%f7, %r8;
	.loc	1 39 18                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:39:18
	sub.f32 	%f8, %f7, %f5;
	.loc	1 34 44                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:34:44
	mov.b32 	%f9, %r7;
	.loc	1 39 18                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:39:18
	sub.f32 	%f10, %f9, %f5;
	.loc	1 34 44                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:34:44
	mov.b32 	%f11, %r6;
	.loc	1 39 18                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:39:18
	sub.f32 	%f12, %f11, %f5;
	.loc	1 38 36                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:38:36
	mov.b32 	%f13, %r25;
	.loc	1 37 36                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:37:36
	mov.b32 	%f14, %r21;
	.loc	1 33 44                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:33:44
	mov.b32 	%f15, %r5;
	mov.b32 	%f16, %r4;
	mov.b32 	%f17, %r3;
	mov.b32 	%f18, %r2;
	.loc	1 27 26                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:27:26
	and.b32  	%r53, %r43, 31;
	.loc	1 44 18                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:44:18
	mov.b32 	%r28, %f3;
	mov.b32 	%r27, 1065353216;
	// begin inline asm
	div.full.f32 %r26, %r27, %r28;
	// end inline asm
	mov.b32 	%f19, %r26;
	.loc	1 47 19                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:47:19
	mul.f32 	%f20, %f12, %f19;
	mul.f32 	%f21, %f10, %f19;
	mul.f32 	%f22, %f8, %f19;
	mul.f32 	%f23, %f6, %f19;
	.loc	1 49 20                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:49:20
	fma.rn.f32 	%f24, %f20, %f14, %f13;
	fma.rn.f32 	%f25, %f21, %f14, %f13;
	fma.rn.f32 	%f26, %f22, %f14, %f13;
	fma.rn.f32 	%f27, %f23, %f14, %f13;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p24, %f24, 0f00000000;
	setp.lt.f32 	%p25, %f25, 0f00000000;
	setp.lt.f32 	%p26, %f26, 0f00000000;
	setp.lt.f32 	%p27, %f27, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f28, 0f00000000, %f24, %p24;
	selp.f32 	%f29, 0f00000000, %f25, %p25;
	selp.f32 	%f30, 0f00000000, %f26, %p26;
	selp.f32 	%f31, 0f00000000, %f27, %p27;
$L__tmp2:
	.loc	1 52 19                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:52:19
	add.f32 	%f32, %f28, %f18;
	add.f32 	%f33, %f29, %f17;
	add.f32 	%f34, %f30, %f16;
	add.f32 	%f35, %f31, %f15;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p28, %f32, 0f00000000;
	setp.lt.f32 	%p29, %f33, 0f00000000;
	setp.lt.f32 	%p30, %f34, 0f00000000;
	setp.lt.f32 	%p31, %f35, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f36, 0f00000000, %f32, %p28;
	selp.f32 	%f37, 0f00000000, %f33, %p29;
	selp.f32 	%f38, 0f00000000, %f34, %p30;
	selp.f32 	%f39, 0f00000000, %f35, %p31;
$L__tmp4:
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f40, %f36, %f37;
	add.f32 	%f41, %f38, %f40;
	add.f32 	%f42, %f39, %f41;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f42;
	shfl.sync.bfly.b32	%r55, %r54, 16, 31, -1;
	mov.b32 	%f43, %r55;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f44;
	shfl.sync.bfly.b32	%r57, %r56, 8, 31, -1;
	mov.b32 	%f45, %r57;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f46;
	shfl.sync.bfly.b32	%r59, %r58, 4, 31, -1;
	mov.b32 	%f47, %r59;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f48;
	shfl.sync.bfly.b32	%r61, %r60, 2, 31, -1;
	mov.b32 	%f49, %r61;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f50;
	shfl.sync.bfly.b32	%r63, %r62, 1, 31, -1;
	mov.b32 	%f51, %r63;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	3 267 36                        // standard.py:267:36
	setp.eq.s32 	%p19, %r53, 0;
	shr.u32 	%r64, %r43, 3;
	and.b32  	%r65, %r64, 4;
	mov.u32 	%r66, global_smem;
	add.s32 	%r29, %r66, %r65;
	mov.b32 	%r30, %f52;
	// begin inline asm
	@%p19 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p20, %r43, 2;
	add.s32 	%r32, %r66, %r44;
	// begin inline asm
	@%p20 ld.shared.b32 %r31, [ %r32 + 0 ];
	// end inline asm
	mov.b32 	%f53, %r31;
	shfl.sync.bfly.b32	%r67, %r31, 1, 31, -1;
	mov.b32 	%f54, %r67;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r68, %r43, 1;
	setp.eq.b32 	%p32, %r68, 1;
	not.pred 	%p33, %p32;
	and.pred  	%p21, %p20, %p33;
	mov.b32 	%r34, %f55;
	// begin inline asm
	@%p21 st.shared.b32 [ %r32 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f56, [global_smem];
$L__tmp5:
	.loc	2 73 15                         // triton_helpers.py:73:15
	add.f32 	%f57, %f56, 0f00000000;
$L__tmp6:
	.loc	1 57 20                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:57:20
	mov.b32 	%r36, %f57;
	mov.b32 	%r37, 1132462080;
	// begin inline asm
	div.full.f32 %r42, %r36, %r37;
	// end inline asm
	.loc	1 58 25                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:58:25
	add.s64 	%rd19, %rd28, %rd29;
	.loc	1 58 46                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:58:46
	mov.b32 	%r38, %f36;
	mov.b32 	%r39, %f37;
	mov.b32 	%r40, %f38;
	mov.b32 	%r41, %f39;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd19 + 0 ], { %r38, %r39, %r40, %r41 };
	// end inline asm
	.loc	1 59 4                          // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:59:4
	bar.sync 	0;
	.loc	1 60 28                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:60:28
	mul.wide.s32 	%rd31, %r1, 4;
	add.s64 	%rd20, %rd21, %rd31;
	.loc	1 60 40                         // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:60:40
	and.b32  	%r69, %r43, 63;
	setp.eq.s32 	%p23, %r69, 0;
	// begin inline asm
	@%p23 st.global.b32 [ %rd20 + 0 ], { %r42 };
	// end inline asm
	.loc	1 60 4                          // cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py:60:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/jb/cjb3mpdvwjcglely4qe5kcxmhswvjufo3lxrjyrbsyhoefqnbxdl.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 286                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x117 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 98
.b8 51
.b8 109
.b8 112
.b8 100
.b8 118
.b8 119
.b8 106
.b8 99
.b8 103
.b8 108
.b8 101
.b8 108
.b8 121
.b8 52
.b8 113
.b8 101
.b8 53
.b8 107
.b8 99
.b8 120
.b8 109
.b8 104
.b8 115
.b8 119
.b8 118
.b8 106
.b8 117
.b8 102
.b8 111
.b8 51
.b8 108
.b8 120
.b8 114
.b8 106
.b8 121
.b8 114
.b8 98
.b8 115
.b8 121
.b8 104
.b8 111
.b8 101
.b8 102
.b8 113
.b8 110
.b8 98
.b8 120
.b8 100
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 98
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x48 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x108:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
