#loc = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":19:0)
#loc1 = loc(unknown)
#loc19 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":41:57)
#loc26 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":48:59)
#loc40 = loc(callsite(#loc1 at #loc19))
#loc44 = loc(callsite(#loc1 at #loc26))
module {
  tt.func public @triton_per_fused_add_convolution_native_group_norm_32(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_0 = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc3)
    %2 = arith.divsi %1, %cst_2 : tensor<256xi32> loc(#loc4)
    %3 = arith.remsi %0, %c32_i32 : i32 loc(#loc5)
    %4 = arith.muli %0, %c256_i32 : i32 loc(#loc6)
    %5 = tt.splat %4 : i32 -> tensor<256xi32> loc(#loc7)
    %6 = arith.addi %1, %5 : tensor<256xi32> loc(#loc7)
    %7 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc8)
    %9 = tt.load %8 : tensor<256x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.addptr %10, %6 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc10)
    %12 = tt.load %11 : tensor<256x!tt.ptr<f32>> loc(#loc11)
    %13 = arith.muli %3, %c16_i32 : i32 loc(#loc12)
    %14 = tt.splat %13 : i32 -> tensor<256xi32> loc(#loc13)
    %15 = arith.addi %2, %14 : tensor<256xi32> loc(#loc13)
    %16 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc14)
    %17 = tt.addptr %16, %15 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc14)
    %18 = tt.load %17 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc15)
    %19 = arith.addf %12, %18 : tensor<256xf32> loc(#loc16)
    %20 = arith.addf %9, %19 : tensor<256xf32> loc(#loc17)
    %21 = "tt.reduce"(%20) <{axis = 0 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc19)), %arg9: f32 loc(callsite(#loc1 at #loc19))):
      %41 = arith.addf %arg8, %arg9 : f32 loc(#loc46)
      tt.reduce.return %41 : f32 loc(#loc39)
    }) : (tensor<256xf32>) -> f32 loc(#loc39)
    %22 = arith.addf %21, %cst_1 : f32 loc(#loc42)
    %23 = arith.divf %22, %cst_0 : f32 loc(#loc23)
    %24 = tt.splat %23 : f32 -> tensor<1xf32> loc(#loc23)
    %25 = tt.splat %23 : f32 -> tensor<256xf32> loc(#loc24)
    %26 = arith.subf %20, %25 : tensor<256xf32> loc(#loc24)
    %27 = arith.mulf %26, %26 : tensor<256xf32> loc(#loc25)
    %28 = "tt.reduce"(%27) <{axis = 0 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc26)), %arg9: f32 loc(callsite(#loc1 at #loc26))):
      %41 = arith.addf %arg8, %arg9 : f32 loc(#loc47)
      tt.reduce.return %41 : f32 loc(#loc43)
    }) : (tensor<256xf32>) -> f32 loc(#loc43)
    %29 = arith.addf %28, %cst_1 : f32 loc(#loc45)
    %30 = tt.splat %29 : f32 -> tensor<1xf32> loc(#loc45)
    %31 = arith.divf %29, %cst_0 : f32 loc(#loc28)
    %32 = arith.addf %31, %cst : f32 loc(#loc29)
    %33 = tt.extern_elementwise %32 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc30)
    %34 = tt.splat %33 : f32 -> tensor<1xf32> loc(#loc30)
    tt.store %11, %20 : tensor<256x!tt.ptr<f32>> loc(#loc31)
    %35 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc32)
    %36 = tt.splat %35 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc32)
    tt.store %36, %34 : tensor<1x!tt.ptr<f32>> loc(#loc33)
    %37 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc34)
    %38 = tt.splat %37 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc34)
    tt.store %38, %24 : tensor<1x!tt.ptr<f32>> loc(#loc35)
    %39 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc36)
    %40 = tt.splat %39 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc36)
    tt.store %40, %30 : tensor<1x!tt.ptr<f32>> loc(#loc37)
    tt.return loc(#loc38)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":24:28)
#loc3 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":27:26)
#loc4 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":32:19)
#loc5 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":33:19)
#loc6 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":34:39)
#loc7 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":34:35)
#loc8 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":34:30)
#loc9 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":34:44)
#loc10 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":35:34)
#loc11 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":35:48)
#loc12 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":36:38)
#loc13 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":36:35)
#loc14 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":36:30)
#loc15 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":36:43)
#loc16 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":37:18)
#loc17 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":38:18)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc22 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":41:44)
#loc23 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":44:19)
#loc24 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":45:19)
#loc25 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":46:20)
#loc27 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":48:45)
#loc28 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":50:20)
#loc29 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":52:20)
#loc30 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":53:28)
#loc31 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":54:48)
#loc32 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":55:25)
#loc33 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":55:37)
#loc34 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":56:25)
#loc35 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":56:37)
#loc36 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":57:25)
#loc37 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":57:37)
#loc38 = loc("inductor_cache/72/c72dl646vhvhelbi45r545qsyweljxno23r5fb437fkvpmjrpsbl.py":57:4)
#loc39 = loc(callsite(#loc18 at #loc19))
#loc41 = loc(callsite(#loc20 at #loc18))
#loc42 = loc(callsite(#loc21 at #loc22))
#loc43 = loc(callsite(#loc18 at #loc26))
#loc45 = loc(callsite(#loc21 at #loc27))
#loc46 = loc(callsite(#loc41 at #loc19))
#loc47 = loc(callsite(#loc41 at #loc26))
