; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_avg_pool2d_15(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %.frozen = freeze i32 %9, !dbg !14
  %10 = sdiv i32 %.frozen, 256, !dbg !14
  %11 = mul i32 %10, 256, !dbg !15
  %.decomposed = sub i32 %.frozen, %11, !dbg !15
  %12 = srem i32 %10, 8, !dbg !16
  %13 = sdiv i32 %9, 2048, !dbg !17
  %14 = shl nsw i32 %12, 9, !dbg !18
  %15 = shl i32 %13, 13, !dbg !19
  %16 = add i32 %15, %.decomposed, !dbg !20
  %17 = add i32 %16, %14, !dbg !21
  %18 = sext i32 %17 to i64, !dbg !22
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !22
  %20 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !23
  %21 = extractvalue { i32, i32, i32, i32 } %20, 0, !dbg !23
  %22 = extractvalue { i32, i32, i32, i32 } %20, 1, !dbg !23
  %23 = extractvalue { i32, i32, i32, i32 } %20, 2, !dbg !23
  %24 = extractvalue { i32, i32, i32, i32 } %20, 3, !dbg !23
  %25 = bitcast i32 %21 to float, !dbg !23
  %26 = bitcast i32 %22 to float, !dbg !23
  %27 = bitcast i32 %23 to float, !dbg !23
  %28 = bitcast i32 %24 to float, !dbg !23
  %29 = add i32 %16, 256, !dbg !24
  %30 = add i32 %29, %14, !dbg !25
  %31 = sext i32 %30 to i64, !dbg !26
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !26
  %33 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %32, i1 true) #1, !dbg !27
  %34 = extractvalue { i32, i32, i32, i32 } %33, 0, !dbg !27
  %35 = extractvalue { i32, i32, i32, i32 } %33, 1, !dbg !27
  %36 = extractvalue { i32, i32, i32, i32 } %33, 2, !dbg !27
  %37 = extractvalue { i32, i32, i32, i32 } %33, 3, !dbg !27
  %38 = bitcast i32 %34 to float, !dbg !27
  %39 = bitcast i32 %35 to float, !dbg !27
  %40 = bitcast i32 %36 to float, !dbg !27
  %41 = bitcast i32 %37 to float, !dbg !27
  %42 = add i32 %16, 4096, !dbg !28
  %43 = add i32 %42, %14, !dbg !29
  %44 = sext i32 %43 to i64, !dbg !30
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !30
  %46 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %45, i1 true) #1, !dbg !31
  %47 = extractvalue { i32, i32, i32, i32 } %46, 0, !dbg !31
  %48 = extractvalue { i32, i32, i32, i32 } %46, 1, !dbg !31
  %49 = extractvalue { i32, i32, i32, i32 } %46, 2, !dbg !31
  %50 = extractvalue { i32, i32, i32, i32 } %46, 3, !dbg !31
  %51 = bitcast i32 %47 to float, !dbg !31
  %52 = bitcast i32 %48 to float, !dbg !31
  %53 = bitcast i32 %49 to float, !dbg !31
  %54 = bitcast i32 %50 to float, !dbg !31
  %55 = add i32 %16, 4352, !dbg !32
  %56 = add i32 %55, %14, !dbg !33
  %57 = sext i32 %56 to i64, !dbg !34
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !34
  %59 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %58, i1 true) #1, !dbg !35
  %60 = extractvalue { i32, i32, i32, i32 } %59, 0, !dbg !35
  %61 = extractvalue { i32, i32, i32, i32 } %59, 1, !dbg !35
  %62 = extractvalue { i32, i32, i32, i32 } %59, 2, !dbg !35
  %63 = extractvalue { i32, i32, i32, i32 } %59, 3, !dbg !35
  %64 = bitcast i32 %60 to float, !dbg !35
  %65 = bitcast i32 %61 to float, !dbg !35
  %66 = bitcast i32 %62 to float, !dbg !35
  %67 = bitcast i32 %63 to float, !dbg !35
  %68 = fadd float %25, %38, !dbg !36
  %69 = fadd float %26, %39, !dbg !36
  %70 = fadd float %27, %40, !dbg !36
  %71 = fadd float %28, %41, !dbg !36
  %72 = fadd float %68, %51, !dbg !37
  %73 = fadd float %69, %52, !dbg !37
  %74 = fadd float %70, %53, !dbg !37
  %75 = fadd float %71, %54, !dbg !37
  %76 = fadd float %72, %64, !dbg !38
  %77 = fadd float %73, %65, !dbg !38
  %78 = fadd float %74, %66, !dbg !38
  %79 = fadd float %75, %67, !dbg !38
  %80 = fmul float %76, 2.500000e-01, !dbg !39
  %81 = fmul float %77, 2.500000e-01, !dbg !39
  %82 = fmul float %78, 2.500000e-01, !dbg !39
  %83 = fmul float %79, 2.500000e-01, !dbg !39
  %84 = sext i32 %9 to i64, !dbg !40
  %85 = getelementptr float, ptr addrspace(1) %1, i64 %84, !dbg !40
  %86 = bitcast float %80 to i32, !dbg !41
  %87 = bitcast float %81 to i32, !dbg !41
  %88 = bitcast float %82 to i32, !dbg !41
  %89 = bitcast float %83 to i32, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %86, i32 %87, i32 %88, i32 %89, ptr addrspace(1) %85, i1 true) #1, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cntwwdcmuy32zeoebar2ptjciuu5tkgmesizekohbcp4l2gk3gcj.py", directory: "inductor_cache/nt")
!4 = !{ptr @triton_poi_fused_avg_pool2d_15, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_15, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_15", linkageName: "triton_poi_fused_avg_pool2d_15", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 28, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 39, scope: !7)
!19 = !DILocation(line: 28, column: 49, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 44, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 54, scope: !7)
!24 = !DILocation(line: 29, column: 41, scope: !7)
!25 = !DILocation(line: 29, column: 50, scope: !7)
!26 = !DILocation(line: 29, column: 30, scope: !7)
!27 = !DILocation(line: 29, column: 60, scope: !7)
!28 = !DILocation(line: 30, column: 42, scope: !7)
!29 = !DILocation(line: 30, column: 51, scope: !7)
!30 = !DILocation(line: 30, column: 30, scope: !7)
!31 = !DILocation(line: 30, column: 61, scope: !7)
!32 = !DILocation(line: 31, column: 42, scope: !7)
!33 = !DILocation(line: 31, column: 51, scope: !7)
!34 = !DILocation(line: 31, column: 30, scope: !7)
!35 = !DILocation(line: 31, column: 61, scope: !7)
!36 = !DILocation(line: 32, column: 18, scope: !7)
!37 = !DILocation(line: 33, column: 18, scope: !7)
!38 = !DILocation(line: 34, column: 18, scope: !7)
!39 = !DILocation(line: 36, column: 18, scope: !7)
!40 = !DILocation(line: 37, column: 25, scope: !7)
!41 = !DILocation(line: 37, column: 36, scope: !7)
!42 = !DILocation(line: 37, column: 4, scope: !7)
