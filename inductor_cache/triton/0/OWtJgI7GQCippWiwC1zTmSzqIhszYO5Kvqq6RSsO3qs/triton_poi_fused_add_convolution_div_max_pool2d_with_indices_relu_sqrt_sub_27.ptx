//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_div_max_pool2d_with_indices_relu_sqrt_sub_27 // -- Begin function triton_poi_fused_add_convolution_div_max_pool2d_with_indices_relu_sqrt_sub_27
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_add_convolution_div_max_pool2d_with_indices_relu_sqrt_sub_27
.visible .entry triton_poi_fused_add_convolution_div_max_pool2d_with_indices_relu_sqrt_sub_27(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_div_max_pool2d_with_indices_relu_sqrt_sub_27_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_div_max_pool2d_with_indices_relu_sqrt_sub_27_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_div_max_pool2d_with_indices_relu_sqrt_sub_27_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_div_max_pool2d_with_indices_relu_sqrt_sub_27_param_3,
	.param .u32 triton_poi_fused_add_convolution_div_max_pool2d_with_indices_relu_sqrt_sub_27_param_4,
	.param .u32 triton_poi_fused_add_convolution_div_max_pool2d_with_indices_relu_sqrt_sub_27_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<47>;
	.reg .b32 	%r<249>;
	.reg .f32 	%f<117>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd14, [triton_poi_fused_add_convolution_div_max_pool2d_with_indices_relu_sqrt_sub_27_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused_add_convolution_div_max_pool2d_with_indices_relu_sqrt_sub_27_param_1];
$L__tmp0:
	.loc	1 22 28                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:22:33
	shl.b32 	%r134, %r1, 8;
	ld.param.u64 	%rd16, [triton_poi_fused_add_convolution_div_max_pool2d_with_indices_relu_sqrt_sub_27_param_2];
	.loc	1 23 44                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:23:44
	mov.u32 	%r135, %tid.x;
	ld.param.u64 	%rd17, [triton_poi_fused_add_convolution_div_max_pool2d_with_indices_relu_sqrt_sub_27_param_3];
	shl.b32 	%r137, %r135, 2;
	and.b32  	%r138, %r137, 12;
	and.b32  	%r139, %r137, 252;
	bfe.u32 	%r140, %r135, 2, 6;
	or.b32  	%r141, %r140, 64;
	or.b32  	%r142, %r140, 128;
	or.b32  	%r143, %r140, 192;
	and.b32  	%r144, %r135, 255;
	.loc	1 23 23                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:23:23
	or.b32  	%r145, %r134, %r139;
	or.b32  	%r146, %r134, %r140;
	or.b32  	%r147, %r134, %r141;
	or.b32  	%r148, %r134, %r142;
	or.b32  	%r149, %r134, %r143;
	or.b32  	%r150, %r134, %r144;
	.loc	1 25 28                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:25:33
	shl.b32 	%r151, %r2, 4;
	.loc	1 26 44                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:26:44
	bfe.u32 	%r152, %r135, 6, 2;
	.loc	1 26 23                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:26:23
	or.b32  	%r153, %r151, %r152;
	or.b32  	%r154, %r153, 4;
	or.b32  	%r155, %r153, 8;
	or.b32  	%r156, %r153, 12;
	or.b32  	%r157, %r151, %r138;
	.loc	1 27 21                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:27:21
	setp.lt.s32 	%p1, %r153, 16;
	setp.lt.s32 	%p2, %r154, 16;
	setp.lt.s32 	%p3, %r155, 16;
	setp.lt.s32 	%p4, %r156, 16;
	setp.lt.s32 	%p22, %r157, 16;
	.loc	1 30 19                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:30:19
	bfe.s32 	%r158, %r1, 23, 1;
	shr.u32 	%r159, %r158, 23;
	add.s32 	%r160, %r145, %r159;
	.loc	1 29 19                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:29:19
	and.b32  	%r161, %r160, -512;
	sub.s32 	%r162, %r145, %r161;
	add.s32 	%r163, %r150, %r159;
	and.b32  	%r164, %r163, -512;
	sub.s32 	%r165, %r150, %r164;
	.loc	1 30 19                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:30:19
	add.s32 	%r166, %r146, %r159;
	shr.s32 	%r167, %r166, 9;
	add.s32 	%r168, %r147, %r159;
	shr.s32 	%r169, %r168, 9;
	add.s32 	%r170, %r148, %r159;
	shr.s32 	%r171, %r170, 9;
	add.s32 	%r172, %r149, %r159;
	shr.s32 	%r173, %r172, 9;
	.loc	1 32 39                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:32:39
	shl.b32 	%r174, %r153, 9;
	shl.b32 	%r175, %r154, 9;
	shl.b32 	%r176, %r155, 9;
	shl.b32 	%r177, %r156, 9;
	.loc	1 32 49                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:32:49
	shl.b32 	%r178, %r160, 4;
	and.b32  	%r179, %r178, -8192;
	.loc	1 32 35                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:32:35
	add.s32 	%r180, %r179, %r162;
	.loc	1 32 44                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:32:44
	add.s32 	%r181, %r180, %r174;
	add.s32 	%r182, %r180, %r175;
	add.s32 	%r183, %r180, %r176;
	add.s32 	%r184, %r180, %r177;
	.loc	1 32 30                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:32:30
	mul.wide.s32 	%rd18, %r181, 4;
	add.s64 	%rd1, %rd14, %rd18;
	mul.wide.s32 	%rd19, %r182, 4;
	add.s64 	%rd2, %rd14, %rd19;
	mul.wide.s32 	%rd20, %r183, 4;
	add.s64 	%rd3, %rd14, %rd20;
	mul.wide.s32 	%rd21, %r184, 4;
	add.s64 	%rd4, %rd14, %rd21;
	.loc	1 32 54                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:32:54
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r34, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r28, %r30, %r32, %r34 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r42, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r36, %r38, %r40, %r42 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r50, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r44, %r46, %r48, %r50 }, [ %rd4 + 0 ];
	// end inline asm
	shl.b32 	%r185, %r135, 6;
	and.b32  	%r186, %r185, 4032;
	or.b32  	%r187, %r186, %r152;
	and.b32  	%r188, %r137, 1020;
	shr.u32 	%r189, %r186, 2;
	mov.u32 	%r190, global_smem;
	add.s32 	%r191, %r190, %r189;
	shl.b32 	%r192, %r187, 2;
	add.s32 	%r19, %r191, %r192;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r193, %r186, 16;
	shr.u32 	%r194, %r193, 2;
	add.s32 	%r195, %r190, %r194;
	add.s32 	%r196, %r195, %r192;
	add.s32 	%r21, %r196, 64;
	// begin inline asm
	@%p5 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	or.b32  	%r197, %r186, 32;
	shr.u32 	%r198, %r197, 2;
	add.s32 	%r199, %r190, %r198;
	add.s32 	%r200, %r199, %r192;
	add.s32 	%r23, %r200, 128;
	// begin inline asm
	@%p5 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r201, %r186, 48;
	shr.u32 	%r202, %r201, 2;
	add.s32 	%r203, %r190, %r202;
	add.s32 	%r204, %r203, %r192;
	add.s32 	%r25, %r204, 192;
	// begin inline asm
	@%p5 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r19, 16;
	// begin inline asm
	@%p5 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r196, 80;
	// begin inline asm
	@%p5 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r200, 144;
	// begin inline asm
	@%p5 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r204, 208;
	// begin inline asm
	@%p5 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r19, 32;
	// begin inline asm
	@%p5 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r196, 96;
	// begin inline asm
	@%p5 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r200, 160;
	// begin inline asm
	@%p5 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r204, 224;
	// begin inline asm
	@%p5 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r19, 48;
	// begin inline asm
	@%p5 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r196, 112;
	// begin inline asm
	@%p5 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r200, 176;
	// begin inline asm
	@%p5 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r204, 240;
	// begin inline asm
	@%p5 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r205, %r135, 252;
	add.s32 	%r206, %r190, %r205;
	shl.b32 	%r207, %r188, 2;
	add.s32 	%r208, %r206, %r207;
	ld.shared.f32 	%f1, [%r208];
	ld.shared.f32 	%f2, [%r208+4];
	ld.shared.f32 	%f3, [%r208+8];
	ld.shared.f32 	%f4, [%r208+12];
	or.b32  	%r209, %r188, 1024;
	shr.u32 	%r210, %r209, 2;
	and.b32  	%r211, %r210, 508;
	add.s32 	%r212, %r190, %r211;
	add.s32 	%r213, %r212, %r207;
	ld.shared.f32 	%f5, [%r213+4096];
	ld.shared.f32 	%f6, [%r213+4100];
	ld.shared.f32 	%f7, [%r213+4104];
	ld.shared.f32 	%f8, [%r213+4108];
	or.b32  	%r214, %r188, 2048;
	shr.u32 	%r215, %r214, 2;
	and.b32  	%r216, %r215, 764;
	add.s32 	%r217, %r190, %r216;
	add.s32 	%r218, %r217, %r207;
	ld.shared.f32 	%f9, [%r218+8192];
	ld.shared.f32 	%f10, [%r218+8196];
	ld.shared.f32 	%f11, [%r218+8200];
	ld.shared.f32 	%f12, [%r218+8204];
	or.b32  	%r219, %r188, 3072;
	shr.u32 	%r220, %r219, 2;
	and.b32  	%r221, %r220, 1020;
	add.s32 	%r222, %r190, %r221;
	add.s32 	%r223, %r222, %r207;
	ld.shared.f32 	%f13, [%r223+12288];
	ld.shared.f32 	%f14, [%r223+12292];
	ld.shared.f32 	%f15, [%r223+12296];
	ld.shared.f32 	%f16, [%r223+12300];
	.loc	1 33 30                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:33:30
	mul.wide.s32 	%rd22, %r165, 4;
	add.s64 	%rd5, %rd15, %rd22;
	.loc	1 33 35                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:33:35
	// begin inline asm
	mov.u32 %r69, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r69 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 38                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:34:38
	shl.b32 	%r224, %r167, 4;
	shl.b32 	%r225, %r169, 4;
	shl.b32 	%r226, %r171, 4;
	shl.b32 	%r227, %r173, 4;
	.loc	1 34 35                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:34:35
	add.s32 	%r228, %r224, %r157;
	add.s32 	%r229, %r225, %r157;
	add.s32 	%r230, %r226, %r157;
	add.s32 	%r231, %r227, %r157;
	.loc	1 34 30                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:34:30
	mul.wide.s32 	%rd23, %r228, 4;
	add.s64 	%rd6, %rd16, %rd23;
	mul.wide.s32 	%rd24, %r229, 4;
	add.s64 	%rd7, %rd16, %rd24;
	mul.wide.s32 	%rd25, %r230, 4;
	add.s64 	%rd8, %rd16, %rd25;
	mul.wide.s32 	%rd26, %r231, 4;
	add.s64 	%rd9, %rd16, %rd26;
	.loc	1 34 43                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:34:43
	// begin inline asm
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	@%p22 ld.global.L1::evict_last.v4.b32 { %r52, %r53, %r54, %r55 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r52;
	mov.b32 	%f18, %r53;
	mov.b32 	%f19, %r54;
	mov.b32 	%f20, %r55;
	// begin inline asm
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	@%p22 ld.global.L1::evict_last.v4.b32 { %r56, %r57, %r58, %r59 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r56;
	mov.b32 	%f22, %r57;
	mov.b32 	%f23, %r58;
	mov.b32 	%f24, %r59;
	// begin inline asm
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	mov.u32 %r62, 0x0;
	mov.u32 %r63, 0x0;
	@%p22 ld.global.L1::evict_last.v4.b32 { %r60, %r61, %r62, %r63 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r60;
	mov.b32 	%f26, %r61;
	mov.b32 	%f27, %r62;
	mov.b32 	%f28, %r63;
	// begin inline asm
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	mov.u32 %r66, 0x0;
	mov.u32 %r67, 0x0;
	@%p22 ld.global.L1::evict_last.v4.b32 { %r64, %r65, %r66, %r67 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r64;
	mov.b32 	%f30, %r65;
	mov.b32 	%f31, %r66;
	mov.b32 	%f32, %r67;
$L__tmp1:
	.loc	2 121 29                        // triton_helpers.py:121:29
	bar.sync 	0;
	shl.b32 	%r232, %r144, 3;
	add.s32 	%r68, %r190, %r232;
	// begin inline asm
	@%p5 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r233, %r140, 3;
	add.s32 	%r234, %r190, %r233;
	ld.shared.f32 	%f33, [%r234];
	shl.b32 	%r235, %r141, 3;
	add.s32 	%r236, %r190, %r235;
	ld.shared.f32 	%f34, [%r236];
	shl.b32 	%r237, %r142, 3;
	add.s32 	%r238, %r190, %r237;
	ld.shared.f32 	%f35, [%r238];
	shl.b32 	%r239, %r143, 3;
	add.s32 	%r240, %r190, %r239;
	ld.shared.f32 	%f36, [%r240];
$L__tmp2:
	.loc	1 39 18                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:39:18
	add.f32 	%f37, %f17, 0f3089705F;
	add.f32 	%f38, %f18, 0f3089705F;
	add.f32 	%f39, %f19, 0f3089705F;
	add.f32 	%f40, %f20, 0f3089705F;
	add.f32 	%f41, %f21, 0f3089705F;
	add.f32 	%f42, %f22, 0f3089705F;
	add.f32 	%f43, %f23, 0f3089705F;
	add.f32 	%f44, %f24, 0f3089705F;
	add.f32 	%f45, %f25, 0f3089705F;
	add.f32 	%f46, %f26, 0f3089705F;
	add.f32 	%f47, %f27, 0f3089705F;
	add.f32 	%f48, %f28, 0f3089705F;
	add.f32 	%f49, %f29, 0f3089705F;
	add.f32 	%f50, %f30, 0f3089705F;
	add.f32 	%f51, %f31, 0f3089705F;
	add.f32 	%f52, %f32, 0f3089705F;
	.loc	1 40 26                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:40:26
	sqrt.approx.ftz.f32 	%f53, %f37;
	sqrt.approx.ftz.f32 	%f54, %f38;
	sqrt.approx.ftz.f32 	%f55, %f39;
	sqrt.approx.ftz.f32 	%f56, %f40;
	sqrt.approx.ftz.f32 	%f57, %f41;
	sqrt.approx.ftz.f32 	%f58, %f42;
	sqrt.approx.ftz.f32 	%f59, %f43;
	sqrt.approx.ftz.f32 	%f60, %f44;
	sqrt.approx.ftz.f32 	%f61, %f45;
	sqrt.approx.ftz.f32 	%f62, %f46;
	sqrt.approx.ftz.f32 	%f63, %f47;
	sqrt.approx.ftz.f32 	%f64, %f48;
	sqrt.approx.ftz.f32 	%f65, %f49;
	sqrt.approx.ftz.f32 	%f66, %f50;
	sqrt.approx.ftz.f32 	%f67, %f51;
	sqrt.approx.ftz.f32 	%f68, %f52;
	.loc	1 35 18                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:35:18
	add.f32 	%f69, %f16, %f36;
	add.f32 	%f70, %f15, %f36;
	add.f32 	%f71, %f14, %f36;
	add.f32 	%f72, %f13, %f36;
	add.f32 	%f73, %f12, %f35;
	add.f32 	%f74, %f11, %f35;
	add.f32 	%f75, %f10, %f35;
	add.f32 	%f76, %f9, %f35;
	add.f32 	%f77, %f8, %f34;
	add.f32 	%f78, %f7, %f34;
	add.f32 	%f79, %f6, %f34;
	add.f32 	%f80, %f5, %f34;
	add.f32 	%f81, %f4, %f33;
	add.f32 	%f82, %f3, %f33;
	add.f32 	%f83, %f2, %f33;
	add.f32 	%f84, %f1, %f33;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p31, %f84, 0f00000000;
	setp.lt.f32 	%p32, %f83, 0f00000000;
	setp.lt.f32 	%p33, %f82, 0f00000000;
	setp.lt.f32 	%p34, %f81, 0f00000000;
	setp.lt.f32 	%p35, %f80, 0f00000000;
	setp.lt.f32 	%p36, %f79, 0f00000000;
	setp.lt.f32 	%p37, %f78, 0f00000000;
	setp.lt.f32 	%p38, %f77, 0f00000000;
	setp.lt.f32 	%p39, %f76, 0f00000000;
	setp.lt.f32 	%p40, %f75, 0f00000000;
	setp.lt.f32 	%p41, %f74, 0f00000000;
	setp.lt.f32 	%p42, %f73, 0f00000000;
	setp.lt.f32 	%p43, %f72, 0f00000000;
	setp.lt.f32 	%p44, %f71, 0f00000000;
	setp.lt.f32 	%p45, %f70, 0f00000000;
	setp.lt.f32 	%p46, %f69, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f85, 0f00000000, %f69, %p46;
	selp.f32 	%f86, 0f00000000, %f70, %p45;
	selp.f32 	%f87, 0f00000000, %f71, %p44;
	selp.f32 	%f88, 0f00000000, %f72, %p43;
	selp.f32 	%f89, 0f00000000, %f73, %p42;
	selp.f32 	%f90, 0f00000000, %f74, %p41;
	selp.f32 	%f91, 0f00000000, %f75, %p40;
	selp.f32 	%f92, 0f00000000, %f76, %p39;
	selp.f32 	%f93, 0f00000000, %f77, %p38;
	selp.f32 	%f94, 0f00000000, %f78, %p37;
	selp.f32 	%f95, 0f00000000, %f79, %p36;
	selp.f32 	%f96, 0f00000000, %f80, %p35;
	selp.f32 	%f97, 0f00000000, %f81, %p34;
	selp.f32 	%f98, 0f00000000, %f82, %p33;
	selp.f32 	%f99, 0f00000000, %f83, %p32;
	selp.f32 	%f100, 0f00000000, %f84, %p31;
$L__tmp4:
	.loc	1 42 19                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:42:19
	add.f32 	%f101, %f53, 0f2EDBE6FF;
	add.f32 	%f102, %f54, 0f2EDBE6FF;
	add.f32 	%f103, %f55, 0f2EDBE6FF;
	add.f32 	%f104, %f56, 0f2EDBE6FF;
	add.f32 	%f105, %f57, 0f2EDBE6FF;
	add.f32 	%f106, %f58, 0f2EDBE6FF;
	add.f32 	%f107, %f59, 0f2EDBE6FF;
	add.f32 	%f108, %f60, 0f2EDBE6FF;
	add.f32 	%f109, %f61, 0f2EDBE6FF;
	add.f32 	%f110, %f62, 0f2EDBE6FF;
	add.f32 	%f111, %f63, 0f2EDBE6FF;
	add.f32 	%f112, %f64, 0f2EDBE6FF;
	add.f32 	%f113, %f65, 0f2EDBE6FF;
	add.f32 	%f114, %f66, 0f2EDBE6FF;
	add.f32 	%f115, %f67, 0f2EDBE6FF;
	add.f32 	%f116, %f68, 0f2EDBE6FF;
	.loc	1 43 19                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:43:19
	mov.b32 	%r71, %f100;
	mov.b32 	%r72, %f101;
	// begin inline asm
	div.full.f32 %r118, %r71, %r72;
	// end inline asm
	mov.b32 	%r74, %f99;
	mov.b32 	%r75, %f102;
	// begin inline asm
	div.full.f32 %r119, %r74, %r75;
	// end inline asm
	mov.b32 	%r77, %f98;
	mov.b32 	%r78, %f103;
	// begin inline asm
	div.full.f32 %r120, %r77, %r78;
	// end inline asm
	mov.b32 	%r80, %f97;
	mov.b32 	%r81, %f104;
	// begin inline asm
	div.full.f32 %r121, %r80, %r81;
	// end inline asm
	mov.b32 	%r83, %f96;
	mov.b32 	%r84, %f105;
	// begin inline asm
	div.full.f32 %r122, %r83, %r84;
	// end inline asm
	mov.b32 	%r86, %f95;
	mov.b32 	%r87, %f106;
	// begin inline asm
	div.full.f32 %r123, %r86, %r87;
	// end inline asm
	mov.b32 	%r89, %f94;
	mov.b32 	%r90, %f107;
	// begin inline asm
	div.full.f32 %r124, %r89, %r90;
	// end inline asm
	mov.b32 	%r92, %f93;
	mov.b32 	%r93, %f108;
	// begin inline asm
	div.full.f32 %r125, %r92, %r93;
	// end inline asm
	mov.b32 	%r95, %f92;
	mov.b32 	%r96, %f109;
	// begin inline asm
	div.full.f32 %r126, %r95, %r96;
	// end inline asm
	mov.b32 	%r98, %f91;
	mov.b32 	%r99, %f110;
	// begin inline asm
	div.full.f32 %r127, %r98, %r99;
	// end inline asm
	mov.b32 	%r101, %f90;
	mov.b32 	%r102, %f111;
	// begin inline asm
	div.full.f32 %r128, %r101, %r102;
	// end inline asm
	mov.b32 	%r104, %f89;
	mov.b32 	%r105, %f112;
	// begin inline asm
	div.full.f32 %r129, %r104, %r105;
	// end inline asm
	mov.b32 	%r107, %f88;
	mov.b32 	%r108, %f113;
	// begin inline asm
	div.full.f32 %r130, %r107, %r108;
	// end inline asm
	mov.b32 	%r110, %f87;
	mov.b32 	%r111, %f114;
	// begin inline asm
	div.full.f32 %r131, %r110, %r111;
	// end inline asm
	mov.b32 	%r113, %f86;
	mov.b32 	%r114, %f115;
	// begin inline asm
	div.full.f32 %r132, %r113, %r114;
	// end inline asm
	mov.b32 	%r116, %f85;
	mov.b32 	%r117, %f116;
	// begin inline asm
	div.full.f32 %r133, %r116, %r117;
	// end inline asm
	.loc	1 44 33                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:44:33
	shl.b32 	%r241, %r146, 4;
	shl.b32 	%r242, %r147, 4;
	shl.b32 	%r243, %r148, 4;
	shl.b32 	%r244, %r149, 4;
	.loc	1 44 30                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:44:30
	add.s32 	%r245, %r157, %r241;
	add.s32 	%r246, %r157, %r242;
	add.s32 	%r247, %r157, %r243;
	add.s32 	%r248, %r157, %r244;
	.loc	1 44 25                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:44:25
	mul.wide.s32 	%rd27, %r245, 4;
	add.s64 	%rd10, %rd17, %rd27;
	mul.wide.s32 	%rd28, %r246, 4;
	add.s64 	%rd11, %rd17, %rd28;
	mul.wide.s32 	%rd29, %r247, 4;
	add.s64 	%rd12, %rd17, %rd29;
	mul.wide.s32 	%rd30, %r248, 4;
	add.s64 	%rd13, %rd17, %rd30;
	.loc	1 44 45                         // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:44:45
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd10 + 0 ], { %r118, %r119, %r120, %r121 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd11 + 0 ], { %r122, %r123, %r124, %r125 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd12 + 0 ], { %r126, %r127, %r128, %r129 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd13 + 0 ], { %r130, %r131, %r132, %r133 };
	// end inline asm
	.loc	1 44 4                          // ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py:44:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/cl/ccljzmuxbr5tarlykww7ppu7qt3dkbsji2kxj3d36i7zxsoae6it.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 222                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 108
.b8 106
.b8 122
.b8 109
.b8 117
.b8 120
.b8 98
.b8 114
.b8 53
.b8 116
.b8 97
.b8 114
.b8 108
.b8 121
.b8 107
.b8 119
.b8 119
.b8 55
.b8 112
.b8 112
.b8 117
.b8 55
.b8 113
.b8 116
.b8 51
.b8 100
.b8 107
.b8 98
.b8 115
.b8 106
.b8 105
.b8 50
.b8 107
.b8 120
.b8 106
.b8 51
.b8 100
.b8 51
.b8 54
.b8 105
.b8 55
.b8 122
.b8 120
.b8 115
.b8 111
.b8 97
.b8 101
.b8 54
.b8 105
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x50 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 97
.b8 120
.b8 95
.b8 112
.b8 111
.b8 111
.b8 108
.b8 50
.b8 100
.b8 95
.b8 119
.b8 105
.b8 116
.b8 104
.b8 95
.b8 105
.b8 110
.b8 100
.b8 105
.b8 99
.b8 101
.b8 115
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb3:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
