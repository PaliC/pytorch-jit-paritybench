//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__unsafe_index_add_mul_sub_10 // -- Begin function triton_poi_fused__unsafe_index_add_mul_sub_10
                                        // @triton_poi_fused__unsafe_index_add_mul_sub_10
.visible .entry triton_poi_fused__unsafe_index_add_mul_sub_10(
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_10_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_10_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_10_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_10_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_10_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_10_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_10_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_10_param_7,
	.param .u32 triton_poi_fused__unsafe_index_add_mul_sub_10_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<15>;
	.reg .b32 	%r<45>;
	.reg .f32 	%f<42>;
	.reg .b64 	%rd<36>;
	.loc	1 19 0                          // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:19:0

// %bb.0:
	ld.param.u64 	%rd17, [triton_poi_fused__unsafe_index_add_mul_sub_10_param_0];
	ld.param.u64 	%rd18, [triton_poi_fused__unsafe_index_add_mul_sub_10_param_1];
$L__tmp0:
	.loc	1 21 28                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:21:33
	shl.b32 	%r24, %r1, 8;
	ld.param.u64 	%rd19, [triton_poi_fused__unsafe_index_add_mul_sub_10_param_3];
	.loc	1 22 36                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:22:36
	mov.u32 	%r25, %tid.x;
	shl.b32 	%r26, %r25, 1;
	and.b32  	%r27, %r26, 254;
	ld.param.u64 	%rd20, [triton_poi_fused__unsafe_index_add_mul_sub_10_param_5];
	.loc	1 22 23                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:22:23
	or.b32  	%r28, %r24, %r27;
	ld.param.u64 	%rd21, [triton_poi_fused__unsafe_index_add_mul_sub_10_param_6];
	ld.param.u64 	%rd22, [triton_poi_fused__unsafe_index_add_mul_sub_10_param_7];
	.loc	1 24 21                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:24:21
	shr.s32 	%r30, %r28, 31;
	shr.u32 	%r31, %r30, 30;
	add.s32 	%r32, %r28, %r31;
	shr.s32 	%r33, %r32, 2;
	.loc	1 24 26                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:24:26
	shr.u32 	%r34, %r33, 30;
	add.s32 	%r35, %r33, %r34;
	and.b32  	%r36, %r35, -4;
	sub.s32 	%r37, %r33, %r36;
	.loc	1 25 19                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:25:19
	and.b32  	%r38, %r32, -4;
	sub.s32 	%r39, %r28, %r38;
	.loc	1 26 19                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:26:19
	bfe.s32 	%r40, %r1, 23, 1;
	shr.u32 	%r41, %r40, 28;
	add.s32 	%r42, %r28, %r41;
	shr.s32 	%r43, %r42, 4;
	.loc	1 28 30                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:28:30
	mul.wide.s32 	%rd23, %r37, 8;
	add.s64 	%rd2, %rd18, %rd23;
	mov.pred 	%p1, -1;
	.loc	1 28 35                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:28:35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 31 31                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:31:31
	mul.wide.s32 	%rd24, %r39, 4;
	add.s64 	%rd5, %rd20, %rd24;
	.loc	1 31 36                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:31:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r2, %r3 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r2;
	mov.b32 	%f10, %r3;
	.loc	1 32 31                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:32:31
	add.s64 	%rd7, %rd21, %rd23;
	.loc	1 32 36                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:32:36
	// begin inline asm
	mov.u64 %rd6, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd6 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd8, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd8 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 33 31                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:33:31
	mul.wide.s32 	%rd25, %r37, 4;
	add.s64 	%rd10, %rd22, %rd25;
	.loc	1 33 36                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:33:36
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r5;
	.loc	1 35 18                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:35:18
	add.s64 	%rd26, %rd1, 24;
	.loc	1 36 18                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:36:18
	setp.lt.s64 	%p13, %rd1, 0;
	.loc	1 37 32                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:37:32
	selp.b64 	%rd27, %rd26, %rd1, %p13;
	.loc	1 42 41                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:42:41
	mul.lo.s32 	%r44, %r43, 24;
	.loc	1 42 31                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:42:31
	shl.b64 	%rd28, %rd27, 2;
	add.s64 	%rd29, %rd19, %rd28;
	mul.wide.s32 	%rd30, %r44, 4;
	add.s64 	%rd12, %rd29, %rd30;
	.loc	1 42 46                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:42:46
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r7;
	mov.f32 	%f15, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f16, %f15, %f13;
	sub.f32 	%f17, %f15, %f14;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f16, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f17, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f18, %f1, 0f3F800000;
	add.f32 	%f19, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r10, %f18;
	mov.b32 	%r9, 1065353216;
	// begin inline asm
	div.full.f32 %r8, %r9, %r10;
	// end inline asm
	mov.b32 	%f20, %r8;
	mov.b32 	%r13, %f19;
	// begin inline asm
	div.full.f32 %r11, %r9, %r13;
	// end inline asm
	mov.b32 	%f21, %r11;
$L__tmp2:
	.loc	1 47 20                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:47:20
	sub.f32 	%f22, %f20, %f20;
	sub.f32 	%f23, %f21, %f21;
	.loc	1 49 20                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:49:20
	fma.rn.f32 	%f24, %f22, %f9, %f20;
	fma.rn.f32 	%f25, %f23, %f10, %f21;
	.loc	1 50 20                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:50:20
	add.s64 	%rd31, %rd6, 24;
	.loc	1 51 20                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:51:20
	setp.lt.s64 	%p14, %rd6, 0;
	.loc	1 52 35                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:52:35
	selp.b64 	%rd32, %rd31, %rd6, %p14;
	.loc	1 53 31                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:53:31
	shl.b64 	%rd33, %rd32, 2;
	add.s64 	%rd34, %rd19, %rd33;
	add.s64 	%rd14, %rd34, %rd30;
	.loc	1 53 47                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:53:47
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r15;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f28, %f15, %f26;
	sub.f32 	%f29, %f15, %f27;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f6, %f28, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f29, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f30, %f5, 0f3F800000;
	add.f32 	%f31, %f7, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r18, %f30;
	// begin inline asm
	div.full.f32 %r16, %r9, %r18;
	// end inline asm
	mov.b32 	%f32, %r16;
	mov.b32 	%r21, %f31;
	// begin inline asm
	div.full.f32 %r19, %r9, %r21;
	// end inline asm
	mov.b32 	%f33, %r19;
$L__tmp4:
	.loc	1 55 20                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:55:20
	sub.f32 	%f34, %f32, %f32;
	sub.f32 	%f35, %f33, %f33;
	.loc	1 57 20                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:57:20
	fma.rn.f32 	%f36, %f34, %f9, %f32;
	fma.rn.f32 	%f37, %f35, %f10, %f33;
	.loc	1 58 20                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:58:20
	sub.f32 	%f38, %f36, %f24;
	sub.f32 	%f39, %f37, %f25;
	.loc	1 60 20                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:60:20
	fma.rn.f32 	%f40, %f38, %f11, %f24;
	fma.rn.f32 	%f41, %f39, %f12, %f25;
	.loc	1 61 28                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:61:28
	mul.wide.s32 	%rd35, %r28, 4;
	add.s64 	%rd16, %rd17, %rd35;
	.loc	1 61 40                         // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:61:40
	mov.b32 	%r22, %f40;
	mov.b32 	%r23, %f41;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd16 + 0 ], { %r22, %r23 };
	// end inline asm
	.loc	1 61 4                          // c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py:61:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/4y/c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 121
.b8 100
.b8 117
.b8 111
.b8 118
.b8 107
.b8 53
.b8 54
.b8 105
.b8 98
.b8 99
.b8 51
.b8 100
.b8 113
.b8 98
.b8 51
.b8 112
.b8 100
.b8 107
.b8 121
.b8 97
.b8 103
.b8 121
.b8 116
.b8 117
.b8 102
.b8 105
.b8 98
.b8 50
.b8 99
.b8 101
.b8 97
.b8 113
.b8 55
.b8 113
.b8 54
.b8 113
.b8 112
.b8 97
.b8 122
.b8 99
.b8 121
.b8 55
.b8 110
.b8 101
.b8 54
.b8 118
.b8 53
.b8 99
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 52
.b8 121
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x30 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 49
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x93:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
