; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_mul_sub_10(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) nocapture readnone %2, ptr addrspace(1) %3, ptr addrspace(1) nocapture readnone %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %11 = shl i32 %10, 8, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = shl i32 %12, 1, !dbg !12
  %14 = and i32 %13, 254, !dbg !12
  %15 = or disjoint i32 %11, %14, !dbg !13
  %.frozen = freeze i32 %15, !dbg !14
  %16 = sdiv i32 %.frozen, 4, !dbg !14
  %17 = srem i32 %16, 4, !dbg !15
  %18 = mul i32 %16, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %18, !dbg !16
  %19 = sdiv i32 %15, 16, !dbg !17
  %20 = sext i32 %17 to i64, !dbg !18
  %21 = getelementptr i64, ptr addrspace(1) %1, i64 %20, !dbg !18
  %22 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !19
  %23 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !19
  %24 = sext i32 %.decomposed to i64, !dbg !20
  %25 = getelementptr float, ptr addrspace(1) %5, i64 %24, !dbg !20
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %25, i1 true) #1, !dbg !21
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !21
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !21
  %29 = bitcast i32 %27 to float, !dbg !21
  %30 = bitcast i32 %28 to float, !dbg !21
  %31 = getelementptr i64, ptr addrspace(1) %6, i64 %20, !dbg !22
  %32 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !23
  %33 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !23
  %34 = getelementptr float, ptr addrspace(1) %7, i64 %20, !dbg !24
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #1, !dbg !25
  %36 = bitcast i32 %35 to float, !dbg !25
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #1, !dbg !25
  %38 = bitcast i32 %37 to float, !dbg !25
  %39 = add i64 %22, 24, !dbg !26
  %40 = icmp slt i64 %22, 0, !dbg !27
  %41 = select i1 %40, i64 %39, i64 %22, !dbg !28
  %42 = mul i32 %19, 24, !dbg !29
  %43 = sext i32 %42 to i64, !dbg !30
  %44 = getelementptr float, ptr addrspace(1) %3, i64 %41, !dbg !31
  %45 = getelementptr float, ptr addrspace(1) %44, i64 %43, !dbg !31
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #1, !dbg !32
  %47 = bitcast i32 %46 to float, !dbg !32
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #1, !dbg !32
  %49 = bitcast i32 %48 to float, !dbg !32
  %50 = fsub float 0.000000e+00, %47, !dbg !33
  %51 = fsub float 0.000000e+00, %49, !dbg !33
  %52 = fmul float %50, 0x3FF7154760000000, !dbg !37
  %53 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %52) #1, !dbg !37
  %54 = fmul float %51, 0x3FF7154760000000, !dbg !37
  %55 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %54) #1, !dbg !37
  %56 = fadd float %53, 1.000000e+00, !dbg !38
  %57 = fadd float %55, 1.000000e+00, !dbg !38
  %58 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %56) #1, !dbg !39
  %59 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %57) #1, !dbg !39
  %60 = fsub float %58, %58, !dbg !40
  %61 = fsub float %59, %59, !dbg !40
  %62 = fmul float %60, %29, !dbg !41
  %63 = fmul float %61, %30, !dbg !41
  %64 = fadd float %58, %62, !dbg !42
  %65 = fadd float %59, %63, !dbg !42
  %66 = add i64 %32, 24, !dbg !43
  %67 = icmp slt i64 %32, 0, !dbg !44
  %68 = select i1 %67, i64 %66, i64 %32, !dbg !45
  %69 = getelementptr float, ptr addrspace(1) %3, i64 %68, !dbg !46
  %70 = getelementptr float, ptr addrspace(1) %69, i64 %43, !dbg !46
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %70, i1 true) #1, !dbg !47
  %72 = bitcast i32 %71 to float, !dbg !47
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %70, i1 true) #1, !dbg !47
  %74 = bitcast i32 %73 to float, !dbg !47
  %75 = fsub float 0.000000e+00, %72, !dbg !48
  %76 = fsub float 0.000000e+00, %74, !dbg !48
  %77 = fmul float %75, 0x3FF7154760000000, !dbg !50
  %78 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %77) #1, !dbg !50
  %79 = fmul float %76, 0x3FF7154760000000, !dbg !50
  %80 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %79) #1, !dbg !50
  %81 = fadd float %78, 1.000000e+00, !dbg !51
  %82 = fadd float %80, 1.000000e+00, !dbg !51
  %83 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %81) #1, !dbg !52
  %84 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %82) #1, !dbg !52
  %85 = fsub float %83, %83, !dbg !53
  %86 = fsub float %84, %84, !dbg !53
  %87 = fmul float %85, %29, !dbg !54
  %88 = fmul float %86, %30, !dbg !54
  %89 = fadd float %83, %87, !dbg !55
  %90 = fadd float %84, %88, !dbg !55
  %91 = fsub float %89, %64, !dbg !56
  %92 = fsub float %90, %65, !dbg !56
  %93 = fmul float %91, %36, !dbg !57
  %94 = fmul float %92, %38, !dbg !57
  %95 = fadd float %64, %93, !dbg !58
  %96 = fadd float %65, %94, !dbg !58
  %97 = sext i32 %15 to i64, !dbg !59
  %98 = getelementptr float, ptr addrspace(1) %0, i64 %97, !dbg !59
  %99 = bitcast float %95 to i32, !dbg !60
  %100 = bitcast float %96 to i32, !dbg !60
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %99, i32 %100, ptr addrspace(1) %98, i1 true) #1, !dbg !60
  ret void, !dbg !61
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py", directory: "inductor_cache/4y")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_10, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_10, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_mul_sub_10", linkageName: "triton_poi_fused__unsafe_index_add_mul_sub_10", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 26, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 31, column: 31, scope: !7)
!21 = !DILocation(line: 31, column: 36, scope: !7)
!22 = !DILocation(line: 32, column: 31, scope: !7)
!23 = !DILocation(line: 32, column: 36, scope: !7)
!24 = !DILocation(line: 33, column: 31, scope: !7)
!25 = !DILocation(line: 33, column: 36, scope: !7)
!26 = !DILocation(line: 35, column: 18, scope: !7)
!27 = !DILocation(line: 36, column: 18, scope: !7)
!28 = !DILocation(line: 37, column: 32, scope: !7)
!29 = !DILocation(line: 42, column: 41, scope: !7)
!30 = !DILocation(line: 42, column: 38, scope: !7)
!31 = !DILocation(line: 42, column: 31, scope: !7)
!32 = !DILocation(line: 42, column: 46, scope: !7)
!33 = !DILocation(line: 47, column: 30, scope: !34, inlinedAt: !36)
!34 = distinct !DILexicalBlockFile(scope: !7, file: !35, discriminator: 0)
!35 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!36 = !DILocation(line: 43, column: 23, scope: !7)
!37 = !DILocation(line: 47, column: 29, scope: !34, inlinedAt: !36)
!38 = !DILocation(line: 47, column: 20, scope: !34, inlinedAt: !36)
!39 = !DILocation(line: 47, column: 16, scope: !34, inlinedAt: !36)
!40 = !DILocation(line: 47, column: 20, scope: !7)
!41 = !DILocation(line: 48, column: 20, scope: !7)
!42 = !DILocation(line: 49, column: 20, scope: !7)
!43 = !DILocation(line: 50, column: 20, scope: !7)
!44 = !DILocation(line: 51, column: 20, scope: !7)
!45 = !DILocation(line: 52, column: 35, scope: !7)
!46 = !DILocation(line: 53, column: 31, scope: !7)
!47 = !DILocation(line: 53, column: 47, scope: !7)
!48 = !DILocation(line: 47, column: 30, scope: !34, inlinedAt: !49)
!49 = !DILocation(line: 54, column: 23, scope: !7)
!50 = !DILocation(line: 47, column: 29, scope: !34, inlinedAt: !49)
!51 = !DILocation(line: 47, column: 20, scope: !34, inlinedAt: !49)
!52 = !DILocation(line: 47, column: 16, scope: !34, inlinedAt: !49)
!53 = !DILocation(line: 55, column: 20, scope: !7)
!54 = !DILocation(line: 56, column: 20, scope: !7)
!55 = !DILocation(line: 57, column: 20, scope: !7)
!56 = !DILocation(line: 58, column: 20, scope: !7)
!57 = !DILocation(line: 59, column: 20, scope: !7)
!58 = !DILocation(line: 60, column: 20, scope: !7)
!59 = !DILocation(line: 61, column: 28, scope: !7)
!60 = !DILocation(line: 61, column: 40, scope: !7)
!61 = !DILocation(line: 61, column: 4, scope: !7)
