; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_70(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = add i32 %9, -3072, !dbg !14
  %11 = sext i32 %10 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = add i32 %9, -2048, !dbg !16
  %14 = sext i32 %13 to i64, !dbg !17
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !17
  %16 = add i32 %9, -1024, !dbg !18
  %17 = sext i32 %16 to i64, !dbg !19
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !19
  %19 = sext i32 %9 to i64, !dbg !20
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !20
  %21 = add i32 %9, 1024, !dbg !21
  %22 = sext i32 %21 to i64, !dbg !22
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !22
  %24 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !23
  %25 = shufflevector <2 x i32> %24, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !23
  %26 = sdiv <2 x i32> %25, <i32 2048, i32 1024>, !dbg !23
  %27 = srem <2 x i32> %26, splat (i32 2), !dbg !24
  %28 = extractelement <2 x i32> %27, i64 0, !dbg !25
  %29 = icmp sgt i32 %28, 0, !dbg !26
  %30 = extractelement <2 x i32> %27, i64 1, !dbg !25
  %31 = icmp sgt i32 %30, 0, !dbg !27
  %32 = and i1 %29, %31, !dbg !28
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %12, i1 %32, i32 -8388608, i1 %32) #1, !dbg !29
  %34 = bitcast i32 %33 to float, !dbg !29
  %35 = icmp sgt i32 %30, -1, !dbg !30
  %36 = and i1 %29, %35, !dbg !31
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %15, i1 %36, i32 -8388608, i1 %36) #1, !dbg !32
  %38 = bitcast i32 %37 to float, !dbg !32
  %39 = fcmp ogt float %38, %34, !dbg !33
  %40 = fcmp uno float %38, 0.000000e+00, !dbg !37
  %41 = or i1 %39, %40, !dbg !38
  %42 = select i1 %41, float %38, float %34, !dbg !39
  %43 = icmp slt <2 x i32> %27, splat (i32 1), !dbg !40
  %44 = extractelement <2 x i1> %43, i64 1, !dbg !41
  %45 = and i1 %29, %44, !dbg !41
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %45, i32 -8388608, i1 %45) #1, !dbg !42
  %47 = bitcast i32 %46 to float, !dbg !42
  %48 = fcmp olt float %42, %47, !dbg !43
  %49 = fcmp uno float %47, 0.000000e+00, !dbg !45
  %50 = or i1 %49, %48, !dbg !46
  %51 = select i1 %50, float %47, float %42, !dbg !47
  %52 = icmp sgt i32 %28, -1, !dbg !48
  %53 = and i1 %52, %31, !dbg !49
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %53, i32 -8388608, i1 %53) #1, !dbg !50
  %55 = bitcast i32 %54 to float, !dbg !50
  %56 = fcmp olt float %51, %55, !dbg !51
  %57 = fcmp uno float %55, 0.000000e+00, !dbg !53
  %58 = or i1 %57, %56, !dbg !54
  %59 = select i1 %58, float %55, float %51, !dbg !55
  %60 = or i32 %28, %30, !dbg !25
  %61 = icmp sgt i32 %60, -1, !dbg !25
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %61, i32 -8388608, i1 %61) #1, !dbg !56
  %63 = bitcast i32 %62 to float, !dbg !56
  %64 = fcmp olt float %59, %63, !dbg !57
  %65 = fcmp uno float %63, 0.000000e+00, !dbg !59
  %66 = or i1 %65, %64, !dbg !60
  %67 = select i1 %66, float %63, float %59, !dbg !61
  %68 = and i1 %52, %44, !dbg !62
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 %68, i32 -8388608, i1 %68) #1, !dbg !63
  %70 = bitcast i32 %69 to float, !dbg !63
  %71 = fcmp olt float %67, %70, !dbg !64
  %72 = fcmp uno float %70, 0.000000e+00, !dbg !66
  %73 = or i1 %72, %71, !dbg !67
  %74 = select i1 %73, float %70, float %67, !dbg !68
  %75 = extractelement <2 x i1> %43, i64 0, !dbg !69
  %76 = and i1 %75, %31, !dbg !69
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 %76, i32 -8388608, i1 %76) #1, !dbg !70
  %78 = bitcast i32 %77 to float, !dbg !70
  %79 = fcmp olt float %74, %78, !dbg !71
  %80 = fcmp uno float %78, 0.000000e+00, !dbg !73
  %81 = or i1 %80, %79, !dbg !74
  %82 = select i1 %81, float %78, float %74, !dbg !75
  %83 = and i1 %75, %35, !dbg !76
  %84 = add i32 %9, 2048, !dbg !77
  %85 = sext i32 %84 to i64, !dbg !78
  %86 = getelementptr float, ptr addrspace(1) %0, i64 %85, !dbg !78
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %86, i1 %83, i32 -8388608, i1 %83) #1, !dbg !79
  %88 = bitcast i32 %87 to float, !dbg !79
  %89 = fcmp olt float %82, %88, !dbg !80
  %90 = fcmp uno float %88, 0.000000e+00, !dbg !82
  %91 = or i1 %90, %89, !dbg !83
  %92 = select i1 %91, float %88, float %82, !dbg !84
  %93 = and i1 %75, %44, !dbg !85
  %94 = add i32 %9, 3072, !dbg !86
  %95 = sext i32 %94 to i64, !dbg !87
  %96 = getelementptr float, ptr addrspace(1) %0, i64 %95, !dbg !87
  %97 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %96, i1 %93, i32 -8388608, i1 %93) #1, !dbg !88
  %98 = bitcast i32 %97 to float, !dbg !88
  %99 = fcmp olt float %92, %98, !dbg !89
  %100 = fcmp uno float %98, 0.000000e+00, !dbg !91
  %101 = or i1 %100, %99, !dbg !92
  %102 = zext i1 %39 to i8, !dbg !93
  %103 = select i1 %48, i8 2, i8 %102, !dbg !94
  %104 = select i1 %56, i8 3, i8 %103, !dbg !95
  %105 = select i1 %64, i8 4, i8 %104, !dbg !96
  %106 = select i1 %71, i8 5, i8 %105, !dbg !97
  %107 = select i1 %79, i8 6, i8 %106, !dbg !98
  %108 = select i1 %89, i8 7, i8 %107, !dbg !99
  %109 = select i1 %99, i8 8, i8 %108, !dbg !100
  %110 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !101
  %111 = bitcast float %92 to i32, !dbg !102
  %112 = select i1 %101, i32 %97, i32 %111, !dbg !103
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %112, ptr addrspace(1) %110, i1 true) #1, !dbg !102
  %113 = getelementptr i8, ptr addrspace(1) %2, i64 %19, !dbg !104
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %109, ptr addrspace(1) %113, i1 true) #1, !dbg !105
  ret void, !dbg !106
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cssqaaizju4e2g5j67xkvwhganzdppofqy2j3aju7zuoiqzkxmgw.py", directory: "inductor_cache/ss")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_70, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_70, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_70", linkageName: "triton_poi_fused_max_pool2d_with_indices_70", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 38, column: 41, scope: !7)
!15 = !DILocation(line: 38, column: 31, scope: !7)
!16 = !DILocation(line: 44, column: 41, scope: !7)
!17 = !DILocation(line: 44, column: 31, scope: !7)
!18 = !DILocation(line: 51, column: 41, scope: !7)
!19 = !DILocation(line: 51, column: 31, scope: !7)
!20 = !DILocation(line: 61, column: 31, scope: !7)
!21 = !DILocation(line: 64, column: 38, scope: !7)
!22 = !DILocation(line: 64, column: 31, scope: !7)
!23 = !DILocation(line: 24, column: 21, scope: !7)
!24 = !DILocation(line: 24, column: 29, scope: !7)
!25 = !DILocation(line: 60, column: 20, scope: !7)
!26 = !DILocation(line: 29, column: 19, scope: !7)
!27 = !DILocation(line: 34, column: 19, scope: !7)
!28 = !DILocation(line: 37, column: 19, scope: !7)
!29 = !DILocation(line: 38, column: 46, scope: !7)
!30 = !DILocation(line: 40, column: 21, scope: !7)
!31 = !DILocation(line: 43, column: 19, scope: !7)
!32 = !DILocation(line: 44, column: 46, scope: !7)
!33 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !36)
!34 = distinct !DILexicalBlockFile(scope: !7, file: !35, discriminator: 0)
!35 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!36 = !DILocation(line: 45, column: 42, scope: !7)
!37 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !36)
!38 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !36)
!39 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !36)
!40 = !DILocation(line: 68, column: 20, scope: !7)
!41 = !DILocation(line: 50, column: 19, scope: !7)
!42 = !DILocation(line: 51, column: 46, scope: !7)
!43 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !44)
!44 = !DILocation(line: 52, column: 42, scope: !7)
!45 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !44)
!46 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !44)
!47 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !44)
!48 = !DILocation(line: 54, column: 21, scope: !7)
!49 = !DILocation(line: 57, column: 20, scope: !7)
!50 = !DILocation(line: 58, column: 46, scope: !7)
!51 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !52)
!52 = !DILocation(line: 59, column: 42, scope: !7)
!53 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !52)
!54 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !52)
!55 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !52)
!56 = !DILocation(line: 61, column: 36, scope: !7)
!57 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !58)
!58 = !DILocation(line: 62, column: 42, scope: !7)
!59 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !58)
!60 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !58)
!61 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !58)
!62 = !DILocation(line: 63, column: 20, scope: !7)
!63 = !DILocation(line: 64, column: 43, scope: !7)
!64 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !65)
!65 = !DILocation(line: 65, column: 42, scope: !7)
!66 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !65)
!67 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !65)
!68 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !65)
!69 = !DILocation(line: 70, column: 20, scope: !7)
!70 = !DILocation(line: 71, column: 43, scope: !7)
!71 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !72)
!72 = !DILocation(line: 72, column: 42, scope: !7)
!73 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !72)
!74 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !72)
!75 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !72)
!76 = !DILocation(line: 73, column: 20, scope: !7)
!77 = !DILocation(line: 74, column: 38, scope: !7)
!78 = !DILocation(line: 74, column: 31, scope: !7)
!79 = !DILocation(line: 74, column: 43, scope: !7)
!80 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !81)
!81 = !DILocation(line: 75, column: 42, scope: !7)
!82 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !81)
!83 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !81)
!84 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !81)
!85 = !DILocation(line: 76, column: 20, scope: !7)
!86 = !DILocation(line: 77, column: 38, scope: !7)
!87 = !DILocation(line: 77, column: 31, scope: !7)
!88 = !DILocation(line: 77, column: 43, scope: !7)
!89 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !90)
!90 = !DILocation(line: 78, column: 42, scope: !7)
!91 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !90)
!92 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !90)
!93 = !DILocation(line: 82, column: 35, scope: !7)
!94 = !DILocation(line: 85, column: 35, scope: !7)
!95 = !DILocation(line: 88, column: 35, scope: !7)
!96 = !DILocation(line: 91, column: 35, scope: !7)
!97 = !DILocation(line: 94, column: 35, scope: !7)
!98 = !DILocation(line: 97, column: 35, scope: !7)
!99 = !DILocation(line: 100, column: 35, scope: !7)
!100 = !DILocation(line: 103, column: 35, scope: !7)
!101 = !DILocation(line: 104, column: 25, scope: !7)
!102 = !DILocation(line: 104, column: 37, scope: !7)
!103 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !90)
!104 = !DILocation(line: 105, column: 25, scope: !7)
!105 = !DILocation(line: 105, column: 37, scope: !7)
!106 = !DILocation(line: 105, column: 4, scope: !7)
