//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_gather_sort_0 // -- Begin function triton_per_fused_gather_sort_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 102, 99, 47, 99, 102, 99, 98, 100, 102, 108, 52, 118, 111, 50, 103, 54, 54, 106, 53, 117, 99, 102, 118, 108, 113, 52, 119, 108, 105, 107, 50, 115, 107, 104, 111, 53, 120, 97, 111, 97, 111, 104, 118, 50, 104, 99, 54, 106, 102, 108, 121, 54, 122, 97, 53, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 49, 48, 32, 60, 32, 52};
                                        // @triton_per_fused_gather_sort_0
.visible .entry triton_per_fused_gather_sort_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_gather_sort_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_gather_sort_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_gather_sort_0_param_2,
	.param .u32 triton_per_fused_gather_sort_0_param_3,
	.param .u32 triton_per_fused_gather_sort_0_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<40>;
	.reg .b64 	%rd<72>;
	.loc	1 19 0                          // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_per_fused_gather_sort_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:23:28
	// begin inline asm
	mov.u32 %r4, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:23:33
	shl.b32 	%r5, %r4, 3;
	.loc	1 24 44                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:24:44
	mov.u32 	%r1, %tid.x;
	bfe.u32 	%r6, %r1, 2, 3;
	.loc	1 24 23                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:24:23
	or.b32  	%r2, %r5, %r6;
	.loc	1 25 21                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:25:21
	setp.gt.s32 	%p3, %r2, 255;
	setp.lt.s32 	%p2, %r2, 256;
	.loc	1 26 34                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:26:34
	and.b32  	%r7, %r1, 1;
	and.b32  	%r8, %r1, 3;
	.loc	1 31 41                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:31:41
	shl.b32 	%r3, %r2, 2;
	.loc	1 31 39                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:31:39
	or.b32  	%r9, %r3, %r8;
	.loc	1 31 34                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:31:34
	mul.wide.s32 	%rd8, %r9, 8;
	add.s64 	%rd6, %rd7, %rd8;
	.loc	1 31 46                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:31:46
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p2 ld.global.b64 { %rd5 }, [ %rd6 + 0 ];
	@!%p2 mov.u64 %rd5, 0x0;
	// end inline asm
$L__tmp1:
	.loc	2 575 44                        // triton_helpers.py:575:44
	shr.u32 	%r10, %r1, 1;
	bfe.u32 	%r11, %r1, 1, 1;
	.loc	2 504 51                        // triton_helpers.py:504:51
	cvt.u64.u32 	%rd9, %r11;
	cvt.u64.u32 	%rd10, %r7;
	.loc	2 505 21                        // triton_helpers.py:505:21
	xor.b64  	%rd11, %rd9, 1;
	xor.b64  	%rd12, %rd10, 1;
	.loc	2 506 40                        // triton_helpers.py:506:40
	mul.lo.s64 	%rd13, %rd5, %rd12;
	.loc	3 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r12}, %rd13; }
	cvt.u32.u64 	%r13, %rd13;
	shfl.sync.bfly.b32	%r14, %r13, 1, 31, -1;
	shfl.sync.bfly.b32	%r15, %r12, 1, 31, -1;
	cvt.u64.u32 	%rd14, %r14;
	cvt.u64.u32 	%rd15, %r15;
	shl.b64 	%rd16, %rd15, 32;
	or.b64  	%rd17, %rd14, %rd16;
	.loc	3 256 15                        // standard.py:256:15
	add.s64 	%rd18, %rd13, %rd17;
	.loc	2 507 41                        // triton_helpers.py:507:41
	mul.lo.s64 	%rd19, %rd5, %rd10;
	.loc	3 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r16}, %rd19; }
	cvt.u32.u64 	%r17, %rd19;
	shfl.sync.bfly.b32	%r18, %r17, 1, 31, -1;
	shfl.sync.bfly.b32	%r19, %r16, 1, 31, -1;
	cvt.u64.u32 	%rd20, %r18;
	cvt.u64.u32 	%rd21, %r19;
	shl.b64 	%rd22, %rd21, 32;
	or.b64  	%rd23, %rd20, %rd22;
	.loc	3 256 15                        // standard.py:256:15
	add.s64 	%rd24, %rd19, %rd23;
	.loc	2 547 28                        // triton_helpers.py:547:28
	and.b32  	%r20, %r10, 1;
	setp.eq.b32 	%p4, %r20, 1;
	setp.le.s64 	%p5, %rd18, %rd24;
	xor.pred  	%p6, %p5, %p4;
	.loc	2 548 38                        // triton_helpers.py:548:38
	xor.b64  	%rd25, %rd24, %rd18;
	.loc	2 548 46                        // triton_helpers.py:548:46
	selp.b64 	%rd26, 0, %rd25, %p6;
	.loc	2 548 15                        // triton_helpers.py:548:15
	xor.b64  	%rd27, %rd26, %rd5;
	.loc	2 506 40                        // triton_helpers.py:506:40
	mul.lo.s64 	%rd28, %rd27, %rd11;
	.loc	3 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r21}, %rd28; }
	cvt.u32.u64 	%r22, %rd28;
	shfl.sync.bfly.b32	%r23, %r22, 2, 31, -1;
	shfl.sync.bfly.b32	%r24, %r21, 2, 31, -1;
	cvt.u64.u32 	%rd29, %r23;
	cvt.u64.u32 	%rd30, %r24;
	shl.b64 	%rd31, %rd30, 32;
	or.b64  	%rd32, %rd29, %rd31;
	.loc	3 256 15                        // standard.py:256:15
	add.s64 	%rd33, %rd28, %rd32;
	.loc	2 507 41                        // triton_helpers.py:507:41
	mul.lo.s64 	%rd34, %rd27, %rd9;
	.loc	3 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r25}, %rd34; }
	cvt.u32.u64 	%r26, %rd34;
	shfl.sync.bfly.b32	%r27, %r26, 2, 31, -1;
	shfl.sync.bfly.b32	%r28, %r25, 2, 31, -1;
	cvt.u64.u32 	%rd35, %r27;
	cvt.u64.u32 	%rd36, %r28;
	shl.b64 	%rd37, %rd36, 32;
	or.b64  	%rd38, %rd35, %rd37;
	.loc	3 256 15                        // standard.py:256:15
	add.s64 	%rd39, %rd34, %rd38;
	.loc	2 538 22                        // triton_helpers.py:538:22
	setp.gt.s64 	%p7, %rd33, %rd39;
	.loc	2 548 38                        // triton_helpers.py:548:38
	xor.b64  	%rd40, %rd33, %rd39;
	.loc	2 548 46                        // triton_helpers.py:548:46
	selp.b64 	%rd41, %rd40, 0, %p7;
	.loc	2 548 15                        // triton_helpers.py:548:15
	xor.b64  	%rd42, %rd41, %rd27;
	.loc	2 506 40                        // triton_helpers.py:506:40
	mul.lo.s64 	%rd43, %rd42, %rd12;
	.loc	3 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r29}, %rd43; }
	cvt.u32.u64 	%r30, %rd43;
	shfl.sync.bfly.b32	%r31, %r30, 1, 31, -1;
	shfl.sync.bfly.b32	%r32, %r29, 1, 31, -1;
	cvt.u64.u32 	%rd44, %r31;
	cvt.u64.u32 	%rd45, %r32;
	shl.b64 	%rd46, %rd45, 32;
	or.b64  	%rd47, %rd44, %rd46;
	.loc	3 256 15                        // standard.py:256:15
	add.s64 	%rd48, %rd43, %rd47;
	.loc	2 507 41                        // triton_helpers.py:507:41
	mul.lo.s64 	%rd49, %rd42, %rd10;
	.loc	3 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r33}, %rd49; }
	cvt.u32.u64 	%r34, %rd49;
	shfl.sync.bfly.b32	%r35, %r34, 1, 31, -1;
	shfl.sync.bfly.b32	%r36, %r33, 1, 31, -1;
	cvt.u64.u32 	%rd50, %r35;
	cvt.u64.u32 	%rd51, %r36;
	shl.b64 	%rd52, %rd51, 32;
	or.b64  	%rd53, %rd50, %rd52;
	.loc	3 256 15                        // standard.py:256:15
	add.s64 	%rd54, %rd49, %rd53;
	.loc	2 538 22                        // triton_helpers.py:538:22
	setp.gt.s64 	%p8, %rd48, %rd54;
	.loc	2 548 38                        // triton_helpers.py:548:38
	xor.b64  	%rd55, %rd48, %rd54;
	.loc	2 548 46                        // triton_helpers.py:548:46
	selp.b64 	%rd56, %rd55, 0, %p8;
	.loc	2 548 15                        // triton_helpers.py:548:15
	xor.b64  	%rd57, %rd56, %rd42;
$L__tmp2:
	.loc	1 40 33                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:40:33
	shr.u64 	%rd58, %rd57, 61;
	and.b64  	%rd59, %rd58, 4;
	add.s64 	%rd2, %rd59, %rd57;
	.loc	1 41 38                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:41:38
	setp.lt.u64 	%p9, %rd2, 4;
	.loc	1 41 62                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:41:62
	or.pred  	%p10, %p3, %p9;
	@%p10 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 62                          // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:0:62
	ld.param.u64 	%rd4, [triton_per_fused_gather_sort_0_param_2];
	ld.param.u64 	%rd3, [triton_per_fused_gather_sort_0_param_1];
	cvt.s64.s32 	%rd1, %r9;
	.loc	1 41 62                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:41:62
	bar.sync 	0;
	.loc	1 42 31                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:42:31
	shl.b64 	%rd62, %rd2, 2;
	add.s64 	%rd63, %rd3, %rd62;
	mul.wide.s32 	%rd64, %r3, 4;
	add.s64 	%rd60, %rd63, %rd64;
	.loc	1 42 46                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:42:46
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r38 }, [ %rd60 + 0 ];
	// end inline asm
	.loc	1 43 25                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:43:25
	shl.b64 	%rd65, %rd1, 2;
	add.s64 	%rd61, %rd4, %rd65;
	.loc	1 43 44                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:43:44
	and.b32  	%r39, %r1, 32;
	setp.eq.s32 	%p13, %r39, 0;
	and.pred  	%p12, %p13, %p2;
	// begin inline asm
	@%p12 st.global.b32 [ %rd61 + 0 ], { %r38 };
	// end inline asm
	.loc	1 43 4                          // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:43:4
	ret;
$L__BB0_1:
	.loc	1 41 62                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:41:62
	mov.u64 	%rd66, assertMessage_0;
	cvta.global.u64 	%rd67, %rd66;
	mov.u64 	%rd68, assertFile_0;
	cvta.global.u64 	%rd69, %rd68;
	mov.u64 	%rd70, assertFunc_0;
	cvta.global.u64 	%rd71, %rd70;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd67;
	.param .b64 param1;
	st.param.b64 	[param1], %rd69;
	.param .b32 param2;
	st.param.b32 	[param2], 41;
	.param .b64 param3;
	st.param.b64 	[param3], %rd71;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 175                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 99
.b8 98
.b8 100
.b8 102
.b8 108
.b8 52
.b8 118
.b8 111
.b8 50
.b8 103
.b8 54
.b8 54
.b8 106
.b8 53
.b8 117
.b8 99
.b8 102
.b8 118
.b8 108
.b8 113
.b8 52
.b8 119
.b8 108
.b8 105
.b8 107
.b8 50
.b8 115
.b8 107
.b8 104
.b8 111
.b8 53
.b8 120
.b8 97
.b8 111
.b8 97
.b8 111
.b8 104
.b8 118
.b8 50
.b8 104
.b8 99
.b8 54
.b8 106
.b8 102
.b8 108
.b8 121
.b8 54
.b8 122
.b8 97
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 99
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x21 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 103
.b8 97
.b8 116
.b8 104
.b8 101
.b8 114
.b8 95
.b8 115
.b8 111
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x84:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x99:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 67                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
