; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_affine_grid_generator_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 10, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %5, 1, !dbg !13
  %11 = or disjoint i32 %9, 512, !dbg !13
  %12 = ashr exact i32 %9, 1, !dbg !14
  %13 = or disjoint i32 %12, 1, !dbg !14
  %14 = ashr exact i32 %11, 1, !dbg !14
  %15 = or disjoint i32 %12, 257, !dbg !14
  %16 = srem i32 %10, 2, !dbg !15
  %17 = sdiv i32 %9, 100352, !dbg !16
  %18 = sdiv i32 %11, 100352, !dbg !16
  %19 = mul nsw i32 %16, 3, !dbg !17
  %20 = mul nsw i32 %17, 6, !dbg !18
  %21 = mul nsw i32 %18, 6, !dbg !18
  %22 = add nsw i32 %19, %20, !dbg !19
  %23 = add nsw i32 %19, %21, !dbg !19
  %24 = sext i32 %20 to i64, !dbg !20
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !20
  %26 = sext i32 %22 to i64, !dbg !20
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !20
  %28 = sext i32 %21 to i64, !dbg !20
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !20
  %30 = sext i32 %23 to i64, !dbg !20
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !20
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #1, !dbg !21
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !21
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #1, !dbg !21
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !21
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #1, !dbg !21
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !21
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #1, !dbg !21
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !21
  %40 = or disjoint i32 %20, 1, !dbg !22
  %41 = or disjoint i32 %21, 1, !dbg !22
  %42 = sext i32 %40 to i64, !dbg !23
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !23
  %44 = getelementptr i8, ptr addrspace(1) %27, i64 4, !dbg !23
  %45 = sext i32 %41 to i64, !dbg !23
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !23
  %47 = getelementptr i8, ptr addrspace(1) %31, i64 4, !dbg !23
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 true) #1, !dbg !24
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #1, !dbg !24
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 true) #1, !dbg !24
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #1, !dbg !24
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #1, !dbg !24
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #1, !dbg !24
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #1, !dbg !24
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #1, !dbg !24
  %56 = getelementptr i8, ptr addrspace(1) %25, i64 8, !dbg !25
  %57 = getelementptr i8, ptr addrspace(1) %27, i64 8, !dbg !25
  %58 = getelementptr i8, ptr addrspace(1) %29, i64 8, !dbg !25
  %59 = getelementptr i8, ptr addrspace(1) %31, i64 8, !dbg !25
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 true) #1, !dbg !26
  %61 = bitcast i32 %60 to float, !dbg !26
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 true) #1, !dbg !26
  %63 = bitcast i32 %62 to float, !dbg !26
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 true) #1, !dbg !26
  %65 = bitcast i32 %64 to float, !dbg !26
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 true) #1, !dbg !26
  %67 = bitcast i32 %66 to float, !dbg !26
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 true) #1, !dbg !26
  %69 = bitcast i32 %68 to float, !dbg !26
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 true) #1, !dbg !26
  %71 = bitcast i32 %70 to float, !dbg !26
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 true) #1, !dbg !26
  %73 = bitcast i32 %72 to float, !dbg !26
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 true) #1, !dbg !26
  %75 = bitcast i32 %74 to float, !dbg !26
  %76 = srem i32 %12, 50176, !dbg !27
  %77 = insertelement <2 x i32> poison, i32 %32, i64 0, !dbg !21
  %78 = insertelement <2 x i32> %77, i32 %48, i64 1, !dbg !21
  %79 = bitcast <2 x i32> %78 to <2 x float>, !dbg !21
  %.frozen = freeze i32 %76, !dbg !28
  %80 = sdiv i32 %.frozen, 224, !dbg !28
  %81 = mul i32 %80, 224, !dbg !29
  %.decomposed = sub i32 %.frozen, %81, !dbg !29
  %82 = insertelement <2 x i32> poison, i32 %.decomposed, i64 0, !dbg !30
  %83 = insertelement <2 x i32> %82, i32 %80, i64 1, !dbg !30
  %84 = sitofp <2 x i32> %83 to <2 x float>, !dbg !30
  %85 = insertelement <2 x i32> %83, i32 %76, i64 1, !dbg !31
  %86 = icmp slt <2 x i32> %85, <i32 112, i32 25088>, !dbg !31
  %87 = fmul <2 x float> %84, splat (float 0x3F824924A0000000), !dbg !32
  %88 = fadd <2 x float> %87, splat (float 0xBFEFDB6DC0000000), !dbg !33
  %89 = sub nsw <2 x i32> splat (i32 223), %83, !dbg !34
  %90 = uitofp <2 x i32> %89 to <2 x float>, !dbg !35
  %91 = fmul <2 x float> %90, splat (float 0x3F824924A0000000), !dbg !36
  %92 = fsub <2 x float> splat (float 0x3FEFDB6DC0000000), %91, !dbg !37
  %93 = select <2 x i1> %86, <2 x float> %88, <2 x float> %92, !dbg !38
  %94 = fmul <2 x float> %93, %79, !dbg !39
  %95 = insertelement <2 x i32> poison, i32 %33, i64 0, !dbg !21
  %96 = insertelement <2 x i32> %95, i32 %49, i64 1, !dbg !21
  %97 = bitcast <2 x i32> %96 to <2 x float>, !dbg !21
  %98 = fmul <2 x float> %93, %97, !dbg !39
  %99 = srem i32 %13, 50176, !dbg !27
  %100 = insertelement <2 x i32> poison, i32 %34, i64 0, !dbg !21
  %101 = insertelement <2 x i32> %100, i32 %50, i64 1, !dbg !21
  %102 = bitcast <2 x i32> %101 to <2 x float>, !dbg !21
  %.frozen8 = freeze i32 %99, !dbg !28
  %103 = sdiv i32 %.frozen8, 224, !dbg !28
  %104 = mul i32 %103, 224, !dbg !29
  %.decomposed9 = sub i32 %.frozen8, %104, !dbg !29
  %105 = insertelement <2 x i32> poison, i32 %.decomposed9, i64 0, !dbg !30
  %106 = insertelement <2 x i32> %105, i32 %103, i64 1, !dbg !30
  %107 = sitofp <2 x i32> %106 to <2 x float>, !dbg !30
  %108 = insertelement <2 x i32> %106, i32 %99, i64 1, !dbg !31
  %109 = icmp slt <2 x i32> %108, <i32 112, i32 25088>, !dbg !31
  %110 = fmul <2 x float> %107, splat (float 0x3F824924A0000000), !dbg !32
  %111 = fadd <2 x float> %110, splat (float 0xBFEFDB6DC0000000), !dbg !33
  %112 = sub nsw <2 x i32> splat (i32 223), %106, !dbg !34
  %113 = uitofp <2 x i32> %112 to <2 x float>, !dbg !35
  %114 = fmul <2 x float> %113, splat (float 0x3F824924A0000000), !dbg !36
  %115 = fsub <2 x float> splat (float 0x3FEFDB6DC0000000), %114, !dbg !37
  %116 = select <2 x i1> %109, <2 x float> %111, <2 x float> %115, !dbg !38
  %117 = fmul <2 x float> %116, %102, !dbg !39
  %118 = insertelement <2 x i32> poison, i32 %35, i64 0, !dbg !21
  %119 = insertelement <2 x i32> %118, i32 %51, i64 1, !dbg !21
  %120 = bitcast <2 x i32> %119 to <2 x float>, !dbg !21
  %121 = fmul <2 x float> %116, %120, !dbg !39
  %122 = srem i32 %14, 50176, !dbg !27
  %123 = insertelement <2 x i32> poison, i32 %36, i64 0, !dbg !21
  %124 = insertelement <2 x i32> %123, i32 %52, i64 1, !dbg !21
  %125 = bitcast <2 x i32> %124 to <2 x float>, !dbg !21
  %.frozen10 = freeze i32 %122, !dbg !28
  %126 = sdiv i32 %.frozen10, 224, !dbg !28
  %127 = mul i32 %126, 224, !dbg !29
  %.decomposed11 = sub i32 %.frozen10, %127, !dbg !29
  %128 = insertelement <2 x i32> poison, i32 %.decomposed11, i64 0, !dbg !30
  %129 = insertelement <2 x i32> %128, i32 %126, i64 1, !dbg !30
  %130 = sitofp <2 x i32> %129 to <2 x float>, !dbg !30
  %131 = insertelement <2 x i32> %129, i32 %122, i64 1, !dbg !31
  %132 = icmp slt <2 x i32> %131, <i32 112, i32 25088>, !dbg !31
  %133 = fmul <2 x float> %130, splat (float 0x3F824924A0000000), !dbg !32
  %134 = fadd <2 x float> %133, splat (float 0xBFEFDB6DC0000000), !dbg !33
  %135 = sub nsw <2 x i32> splat (i32 223), %129, !dbg !34
  %136 = uitofp <2 x i32> %135 to <2 x float>, !dbg !35
  %137 = fmul <2 x float> %136, splat (float 0x3F824924A0000000), !dbg !36
  %138 = fsub <2 x float> splat (float 0x3FEFDB6DC0000000), %137, !dbg !37
  %139 = select <2 x i1> %132, <2 x float> %134, <2 x float> %138, !dbg !38
  %140 = fmul <2 x float> %139, %125, !dbg !39
  %141 = insertelement <2 x i32> poison, i32 %37, i64 0, !dbg !21
  %142 = insertelement <2 x i32> %141, i32 %53, i64 1, !dbg !21
  %143 = bitcast <2 x i32> %142 to <2 x float>, !dbg !21
  %144 = fmul <2 x float> %139, %143, !dbg !39
  %145 = srem i32 %15, 50176, !dbg !27
  %146 = insertelement <2 x i32> poison, i32 %38, i64 0, !dbg !21
  %147 = insertelement <2 x i32> %146, i32 %54, i64 1, !dbg !21
  %148 = bitcast <2 x i32> %147 to <2 x float>, !dbg !21
  %.frozen12 = freeze i32 %145, !dbg !28
  %149 = sdiv i32 %.frozen12, 224, !dbg !28
  %150 = mul i32 %149, 224, !dbg !29
  %.decomposed13 = sub i32 %.frozen12, %150, !dbg !29
  %151 = insertelement <2 x i32> poison, i32 %.decomposed13, i64 0, !dbg !30
  %152 = insertelement <2 x i32> %151, i32 %149, i64 1, !dbg !30
  %153 = sitofp <2 x i32> %152 to <2 x float>, !dbg !30
  %154 = insertelement <2 x i32> %152, i32 %145, i64 1, !dbg !31
  %155 = icmp slt <2 x i32> %154, <i32 112, i32 25088>, !dbg !31
  %156 = fmul <2 x float> %153, splat (float 0x3F824924A0000000), !dbg !32
  %157 = fadd <2 x float> %156, splat (float 0xBFEFDB6DC0000000), !dbg !33
  %158 = sub nsw <2 x i32> splat (i32 223), %152, !dbg !34
  %159 = uitofp <2 x i32> %158 to <2 x float>, !dbg !35
  %160 = fmul <2 x float> %159, splat (float 0x3F824924A0000000), !dbg !36
  %161 = fsub <2 x float> splat (float 0x3FEFDB6DC0000000), %160, !dbg !37
  %162 = select <2 x i1> %155, <2 x float> %157, <2 x float> %161, !dbg !38
  %163 = fmul <2 x float> %162, %148, !dbg !39
  %164 = insertelement <2 x i32> poison, i32 %39, i64 0, !dbg !21
  %165 = insertelement <2 x i32> %164, i32 %55, i64 1, !dbg !21
  %166 = bitcast <2 x i32> %165 to <2 x float>, !dbg !21
  %167 = fmul <2 x float> %162, %166, !dbg !39
  %shift = shufflevector <2 x float> %94, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %168 = fadd <2 x float> %94, %shift, !dbg !40
  %169 = extractelement <2 x float> %168, i64 0, !dbg !40
  %shift1 = shufflevector <2 x float> %98, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %170 = fadd <2 x float> %98, %shift1, !dbg !40
  %171 = extractelement <2 x float> %170, i64 0, !dbg !40
  %shift2 = shufflevector <2 x float> %117, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %172 = fadd <2 x float> %117, %shift2, !dbg !40
  %173 = extractelement <2 x float> %172, i64 0, !dbg !40
  %shift3 = shufflevector <2 x float> %121, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %174 = fadd <2 x float> %121, %shift3, !dbg !40
  %175 = extractelement <2 x float> %174, i64 0, !dbg !40
  %shift4 = shufflevector <2 x float> %140, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %176 = fadd <2 x float> %140, %shift4, !dbg !40
  %177 = extractelement <2 x float> %176, i64 0, !dbg !40
  %shift5 = shufflevector <2 x float> %144, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %178 = fadd <2 x float> %144, %shift5, !dbg !40
  %179 = extractelement <2 x float> %178, i64 0, !dbg !40
  %shift6 = shufflevector <2 x float> %163, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %180 = fadd <2 x float> %163, %shift6, !dbg !40
  %181 = extractelement <2 x float> %180, i64 0, !dbg !40
  %shift7 = shufflevector <2 x float> %167, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %182 = fadd <2 x float> %167, %shift7, !dbg !40
  %183 = extractelement <2 x float> %182, i64 0, !dbg !40
  %184 = fadd float %169, %61, !dbg !41
  %185 = fadd float %171, %63, !dbg !41
  %186 = fadd float %173, %65, !dbg !41
  %187 = fadd float %175, %67, !dbg !41
  %188 = fadd float %177, %69, !dbg !41
  %189 = fadd float %179, %71, !dbg !41
  %190 = fadd float %181, %73, !dbg !41
  %191 = fadd float %183, %75, !dbg !41
  %192 = sext i32 %9 to i64, !dbg !42
  %193 = getelementptr float, ptr addrspace(1) %1, i64 %192, !dbg !42
  %194 = sext i32 %11 to i64, !dbg !42
  %195 = getelementptr float, ptr addrspace(1) %1, i64 %194, !dbg !42
  %196 = bitcast float %184 to i32, !dbg !43
  %197 = bitcast float %185 to i32, !dbg !43
  %198 = bitcast float %186 to i32, !dbg !43
  %199 = bitcast float %187 to i32, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %196, i32 %197, i32 %198, i32 %199, ptr addrspace(1) %193, i1 true) #1, !dbg !43
  %200 = bitcast float %188 to i32, !dbg !43
  %201 = bitcast float %189 to i32, !dbg !43
  %202 = bitcast float %190 to i32, !dbg !43
  %203 = bitcast float %191 to i32, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %200, i32 %201, i32 %202, i32 %203, ptr addrspace(1) %195, i1 true) #1, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czpn2gzkowgapo4tv7fx2fkirklqn26v63v4dgax6yr4eyh7a4bx.py", directory: "inductor_cache/zp")
!4 = !{ptr @triton_poi_fused_affine_grid_generator_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_affine_grid_generator_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_affine_grid_generator_0", linkageName: "triton_poi_fused_affine_grid_generator_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 33, scope: !7)
!18 = !DILocation(line: 28, column: 40, scope: !7)
!19 = !DILocation(line: 28, column: 38, scope: !7)
!20 = !DILocation(line: 28, column: 31, scope: !7)
!21 = !DILocation(line: 28, column: 45, scope: !7)
!22 = !DILocation(line: 29, column: 42, scope: !7)
!23 = !DILocation(line: 29, column: 31, scope: !7)
!24 = !DILocation(line: 29, column: 49, scope: !7)
!25 = !DILocation(line: 30, column: 32, scope: !7)
!26 = !DILocation(line: 30, column: 50, scope: !7)
!27 = !DILocation(line: 25, column: 26, scope: !7)
!28 = !DILocation(line: 97, column: 18, scope: !7)
!29 = !DILocation(line: 34, column: 36, scope: !7)
!30 = !DILocation(line: 35, column: 19, scope: !7)
!31 = !DILocation(line: 37, column: 18, scope: !7)
!32 = !DILocation(line: 39, column: 18, scope: !7)
!33 = !DILocation(line: 41, column: 19, scope: !7)
!34 = !DILocation(line: 42, column: 19, scope: !7)
!35 = !DILocation(line: 43, column: 21, scope: !7)
!36 = !DILocation(line: 44, column: 20, scope: !7)
!37 = !DILocation(line: 46, column: 20, scope: !7)
!38 = !DILocation(line: 47, column: 34, scope: !7)
!39 = !DILocation(line: 77, column: 20, scope: !7)
!40 = !DILocation(line: 119, column: 20, scope: !7)
!41 = !DILocation(line: 162, column: 21, scope: !7)
!42 = !DILocation(line: 163, column: 25, scope: !7)
!43 = !DILocation(line: 163, column: 38, scope: !7)
!44 = !DILocation(line: 163, column: 4, scope: !7)
