#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":19:0)
#loc1 = loc(unknown)
#loc78 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":67:26)
#loc96 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":84:26)
#loc116 = loc(callsite(#loc1 at #loc78))
#loc131 = loc(callsite(#loc1 at #loc96))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_min_mul_sub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<2.000000e+00> : tensor<1x16xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<3> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<12> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<15> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<8> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<10> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<5> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<16> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<4> : tensor<1x16xi32, #blocked> loc(#loc1)
    %0 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x16xi32, #blocked> loc(#loc2)
    %2 = arith.divsi %1, %cst_9 : tensor<1x16xi32, #blocked> loc(#loc3)
    %3 = arith.remsi %1, %cst_9 : tensor<1x16xi32, #blocked> loc(#loc4)
    %4 = arith.muli %2, %cst_8 : tensor<1x16xi32, #blocked> loc(#loc5)
    %5 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc6)
    %6 = tt.addptr %5, %4 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc6)
    %7 = tt.load %6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc7)
    %8 = arith.muli %3, %cst_7 : tensor<1x16xi32, #blocked> loc(#loc8)
    %9 = arith.addi %8, %4 : tensor<1x16xi32, #blocked> loc(#loc9)
    %10 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc10)
    %11 = tt.addptr %10, %9 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc10)
    %12 = tt.load %11 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc11)
    %13 = arith.addi %3, %4 : tensor<1x16xi32, #blocked> loc(#loc12)
    %14 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc13)
    %15 = tt.addptr %14, %13 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc13)
    %16 = tt.load %15 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc14)
    %17 = arith.addi %4, %cst_7 : tensor<1x16xi32, #blocked> loc(#loc15)
    %18 = tt.addptr %5, %17 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc16)
    %19 = tt.load %18 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc17)
    %20 = arith.addi %3, %cst_9 : tensor<1x16xi32, #blocked> loc(#loc18)
    %21 = arith.addi %20, %4 : tensor<1x16xi32, #blocked> loc(#loc19)
    %22 = tt.addptr %14, %21 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc20)
    %23 = tt.load %22 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc21)
    %24 = arith.addi %4, %cst_6 : tensor<1x16xi32, #blocked> loc(#loc22)
    %25 = tt.addptr %5, %24 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc23)
    %26 = tt.load %25 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc24)
    %27 = arith.addi %3, %cst_5 : tensor<1x16xi32, #blocked> loc(#loc25)
    %28 = arith.addi %27, %4 : tensor<1x16xi32, #blocked> loc(#loc26)
    %29 = tt.addptr %14, %28 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc27)
    %30 = tt.load %29 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc28)
    %31 = arith.addi %4, %cst_4 : tensor<1x16xi32, #blocked> loc(#loc29)
    %32 = tt.addptr %5, %31 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc30)
    %33 = tt.load %32 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc31)
    %34 = arith.addi %3, %cst_3 : tensor<1x16xi32, #blocked> loc(#loc32)
    %35 = arith.addi %34, %4 : tensor<1x16xi32, #blocked> loc(#loc33)
    %36 = tt.addptr %14, %35 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc34)
    %37 = tt.load %36 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc35)
    %38 = tt.addptr %5, %9 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc36)
    %39 = tt.load %38 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc37)
    %40 = tt.addptr %10, %4 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc38)
    %41 = tt.load %40 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc39)
    %42 = arith.muli %1, %cst_9 : tensor<1x16xi32, #blocked> loc(#loc40)
    %43 = tt.addptr %14, %42 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc41)
    %44 = tt.load %43 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc42)
    %45 = tt.addptr %10, %17 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc43)
    %46 = tt.load %45 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc44)
    %47 = arith.addi %42, %cst_2 : tensor<1x16xi32, #blocked> loc(#loc45)
    %48 = tt.addptr %14, %47 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc46)
    %49 = tt.load %48 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc47)
    %50 = tt.addptr %10, %24 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc48)
    %51 = tt.load %50 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc49)
    %52 = arith.addi %42, %cst_1 : tensor<1x16xi32, #blocked> loc(#loc50)
    %53 = tt.addptr %14, %52 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc51)
    %54 = tt.load %53 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc52)
    %55 = tt.addptr %10, %31 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc53)
    %56 = tt.load %55 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc54)
    %57 = arith.addi %42, %cst_0 : tensor<1x16xi32, #blocked> loc(#loc55)
    %58 = tt.addptr %14, %57 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc56)
    %59 = tt.load %58 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc57)
    %60 = arith.addf %7, %12 : tensor<1x16xf32, #blocked> loc(#loc58)
    %61 = arith.mulf %16, %cst : tensor<1x16xf32, #blocked> loc(#loc59)
    %62 = arith.subf %60, %61 : tensor<1x16xf32, #blocked> loc(#loc60)
    %63 = arith.addf %19, %12 : tensor<1x16xf32, #blocked> loc(#loc61)
    %64 = arith.mulf %23, %cst : tensor<1x16xf32, #blocked> loc(#loc62)
    %65 = arith.subf %63, %64 : tensor<1x16xf32, #blocked> loc(#loc63)
    %66 = arith.cmpf olt, %62, %65 : tensor<1x16xf32, #blocked> loc(#loc103)
    %67 = arith.cmpf une, %62, %62 : tensor<1x16xf32, #blocked> loc(#loc104)
    %68 = arith.ori %66, %67 : tensor<1x16xi1, #blocked> loc(#loc105)
    %69 = arith.select %68, %62, %65 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc106)
    %70 = arith.addf %26, %12 : tensor<1x16xf32, #blocked> loc(#loc69)
    %71 = arith.mulf %30, %cst : tensor<1x16xf32, #blocked> loc(#loc70)
    %72 = arith.subf %70, %71 : tensor<1x16xf32, #blocked> loc(#loc71)
    %73 = arith.cmpf olt, %69, %72 : tensor<1x16xf32, #blocked> loc(#loc107)
    %74 = arith.cmpf une, %69, %69 : tensor<1x16xf32, #blocked> loc(#loc108)
    %75 = arith.ori %73, %74 : tensor<1x16xi1, #blocked> loc(#loc109)
    %76 = arith.select %75, %69, %72 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc110)
    %77 = arith.addf %33, %12 : tensor<1x16xf32, #blocked> loc(#loc73)
    %78 = arith.mulf %37, %cst : tensor<1x16xf32, #blocked> loc(#loc74)
    %79 = arith.subf %77, %78 : tensor<1x16xf32, #blocked> loc(#loc75)
    %80 = arith.cmpf olt, %76, %79 : tensor<1x16xf32, #blocked> loc(#loc111)
    %81 = arith.cmpf une, %76, %76 : tensor<1x16xf32, #blocked> loc(#loc112)
    %82 = arith.ori %80, %81 : tensor<1x16xi1, #blocked> loc(#loc113)
    %83 = arith.select %82, %76, %79 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc114)
    %84 = "tt.reduce"(%83) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc78)), %arg6: f32 loc(callsite(#loc1 at #loc78))):
      %115 = arith.addf %arg5, %arg6 : f32 loc(#loc132)
      tt.reduce.return %115 : f32 loc(#loc115)
    }) : (tensor<1x16xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc115)
    %85 = tt.expand_dims %84 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc80)
    %86 = arith.addf %39, %41 : tensor<1x16xf32, #blocked> loc(#loc81)
    %87 = arith.mulf %44, %cst : tensor<1x16xf32, #blocked> loc(#loc82)
    %88 = arith.subf %86, %87 : tensor<1x16xf32, #blocked> loc(#loc83)
    %89 = arith.addf %39, %46 : tensor<1x16xf32, #blocked> loc(#loc84)
    %90 = arith.mulf %49, %cst : tensor<1x16xf32, #blocked> loc(#loc85)
    %91 = arith.subf %89, %90 : tensor<1x16xf32, #blocked> loc(#loc86)
    %92 = arith.cmpf olt, %88, %91 : tensor<1x16xf32, #blocked> loc(#loc118)
    %93 = arith.cmpf une, %88, %88 : tensor<1x16xf32, #blocked> loc(#loc119)
    %94 = arith.ori %92, %93 : tensor<1x16xi1, #blocked> loc(#loc120)
    %95 = arith.select %94, %88, %91 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc121)
    %96 = arith.addf %39, %51 : tensor<1x16xf32, #blocked> loc(#loc88)
    %97 = arith.mulf %54, %cst : tensor<1x16xf32, #blocked> loc(#loc89)
    %98 = arith.subf %96, %97 : tensor<1x16xf32, #blocked> loc(#loc90)
    %99 = arith.cmpf olt, %95, %98 : tensor<1x16xf32, #blocked> loc(#loc122)
    %100 = arith.cmpf une, %95, %95 : tensor<1x16xf32, #blocked> loc(#loc123)
    %101 = arith.ori %99, %100 : tensor<1x16xi1, #blocked> loc(#loc124)
    %102 = arith.select %101, %95, %98 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc125)
    %103 = arith.addf %39, %56 : tensor<1x16xf32, #blocked> loc(#loc92)
    %104 = arith.mulf %59, %cst : tensor<1x16xf32, #blocked> loc(#loc93)
    %105 = arith.subf %103, %104 : tensor<1x16xf32, #blocked> loc(#loc94)
    %106 = arith.cmpf olt, %102, %105 : tensor<1x16xf32, #blocked> loc(#loc126)
    %107 = arith.cmpf une, %102, %102 : tensor<1x16xf32, #blocked> loc(#loc127)
    %108 = arith.ori %106, %107 : tensor<1x16xi1, #blocked> loc(#loc128)
    %109 = arith.select %108, %102, %105 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc129)
    %110 = "tt.reduce"(%109) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc96)), %arg6: f32 loc(callsite(#loc1 at #loc96))):
      %115 = arith.addf %arg5, %arg6 : f32 loc(#loc133)
      tt.reduce.return %115 : f32 loc(#loc130)
    }) : (tensor<1x16xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc130)
    %111 = tt.expand_dims %110 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc97)
    %112 = arith.addf %85, %111 : tensor<1x1xf32, #blocked> loc(#loc98)
    gpu.barrier loc(#loc99)
    %113 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc100)
    %114 = tt.splat %113 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc101)
    tt.store %114, %112 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc101)
    tt.return loc(#loc102)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":26:34)
#loc3 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":29:19)
#loc4 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":30:19)
#loc5 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":32:33)
#loc6 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":32:30)
#loc7 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":32:38)
#loc8 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":33:32)
#loc9 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":33:37)
#loc10 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":33:30)
#loc11 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":33:45)
#loc12 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":34:35)
#loc13 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":34:30)
#loc14 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":34:43)
#loc15 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":35:34)
#loc16 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":35:30)
#loc17 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":35:42)
#loc18 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":36:34)
#loc19 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":36:39)
#loc20 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":36:30)
#loc21 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":36:47)
#loc22 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":37:36)
#loc23 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":37:31)
#loc24 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":37:44)
#loc25 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":38:35)
#loc26 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":38:40)
#loc27 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":38:31)
#loc28 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":38:48)
#loc29 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":39:36)
#loc30 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":39:31)
#loc31 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":39:44)
#loc32 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":40:36)
#loc33 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":40:41)
#loc34 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":40:31)
#loc35 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":40:49)
#loc36 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":41:31)
#loc37 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":41:46)
#loc38 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":42:31)
#loc39 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":42:39)
#loc40 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":43:33)
#loc41 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":43:31)
#loc42 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":43:38)
#loc43 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":44:31)
#loc44 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":44:43)
#loc45 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":45:35)
#loc46 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":45:31)
#loc47 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":45:42)
#loc48 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":46:31)
#loc49 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":46:44)
#loc50 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":47:35)
#loc51 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":47:31)
#loc52 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":47:42)
#loc53 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":48:31)
#loc54 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":48:44)
#loc55 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":49:35)
#loc56 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":49:31)
#loc57 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":49:42)
#loc58 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":50:18)
#loc59 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":52:18)
#loc60 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":53:18)
#loc61 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":54:18)
#loc62 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":55:19)
#loc63 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":56:19)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc65 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":57:41)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc69 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":58:20)
#loc70 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":59:20)
#loc71 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":60:20)
#loc72 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":61:42)
#loc73 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":62:20)
#loc74 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":63:20)
#loc75 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":64:20)
#loc76 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":65:42)
#loc77 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc79 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc80 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":67:29)
#loc81 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":68:20)
#loc82 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":69:20)
#loc83 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":70:20)
#loc84 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":71:20)
#loc85 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":72:20)
#loc86 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":73:20)
#loc87 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":74:42)
#loc88 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":75:20)
#loc89 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":76:20)
#loc90 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":77:20)
#loc91 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":78:42)
#loc92 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":79:20)
#loc93 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":80:20)
#loc94 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":81:20)
#loc95 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":82:42)
#loc97 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":84:29)
#loc98 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":85:20)
#loc99 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":86:4)
#loc100 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":87:28)
#loc101 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":87:71)
#loc102 = loc("inductor_cache/ab/cab6cme63nm3waacbjkefwhzq2ibvho5quxsgayzzrzjursvf3tx.py":87:4)
#loc103 = loc(callsite(#loc64 at #loc65))
#loc104 = loc(callsite(#loc66 at #loc65))
#loc105 = loc(callsite(#loc67 at #loc65))
#loc106 = loc(callsite(#loc68 at #loc65))
#loc107 = loc(callsite(#loc64 at #loc72))
#loc108 = loc(callsite(#loc66 at #loc72))
#loc109 = loc(callsite(#loc67 at #loc72))
#loc110 = loc(callsite(#loc68 at #loc72))
#loc111 = loc(callsite(#loc64 at #loc76))
#loc112 = loc(callsite(#loc66 at #loc76))
#loc113 = loc(callsite(#loc67 at #loc76))
#loc114 = loc(callsite(#loc68 at #loc76))
#loc115 = loc(callsite(#loc77 at #loc78))
#loc117 = loc(callsite(#loc79 at #loc77))
#loc118 = loc(callsite(#loc64 at #loc87))
#loc119 = loc(callsite(#loc66 at #loc87))
#loc120 = loc(callsite(#loc67 at #loc87))
#loc121 = loc(callsite(#loc68 at #loc87))
#loc122 = loc(callsite(#loc64 at #loc91))
#loc123 = loc(callsite(#loc66 at #loc91))
#loc124 = loc(callsite(#loc67 at #loc91))
#loc125 = loc(callsite(#loc68 at #loc91))
#loc126 = loc(callsite(#loc64 at #loc95))
#loc127 = loc(callsite(#loc66 at #loc95))
#loc128 = loc(callsite(#loc67 at #loc95))
#loc129 = loc(callsite(#loc68 at #loc95))
#loc130 = loc(callsite(#loc77 at #loc96))
#loc132 = loc(callsite(#loc117 at #loc78))
#loc133 = loc(callsite(#loc117 at #loc96))
