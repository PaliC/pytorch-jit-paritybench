//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_mean_2 // -- Begin function triton_red_fused_mean_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_mean_2
.visible .entry triton_red_fused_mean_2(
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_2_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_2_param_1,
	.param .u32 triton_red_fused_mean_2_param_2,
	.param .u32 triton_red_fused_mean_2_param_3
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<42>;
	.reg .b32 	%r<134>;
	.reg .f32 	%f<60>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_red_fused_mean_2_param_0];
	ld.param.u64 	%rd11, [triton_red_fused_mean_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:24:21
	setp.lt.s32 	%p29, %r1, 7;
	.loc	1 25 33                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:25:33
	mov.u32 	%r41, %tid.x;
	shl.b32 	%r42, %r41, 1;
	and.b32  	%r43, %r42, 1022;
	.loc	1 32 25                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:32:25
	mul.lo.s32 	%r44, %r1, 7690;
	.loc	1 32 20                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:32:20
	add.s32 	%r45, %r43, %r44;
	add.s32 	%r46, %r45, 1024;
	.loc	1 34 22                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:34:22
	setp.lt.s32 	%p30, %r45, 53824;
	setp.lt.s32 	%p31, %r46, 53824;
	.loc	1 35 52                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:52
	mul.hi.s32 	%r47, %r45, -1680195291;
	mad.lo.s32 	%r48, %r45, 1, %r47;
	shr.u32 	%r49, %r48, 31;
	shr.s32 	%r50, %r48, 15;
	add.s32 	%r51, %r50, %r49;
	mul.lo.s32 	%r52, %r51, 53824;
	sub.s32 	%r53, %r45, %r52;
	mul.hi.s32 	%r54, %r46, -1680195291;
	mad.lo.s32 	%r55, %r46, 1, %r54;
	shr.u32 	%r56, %r55, 31;
	shr.s32 	%r57, %r55, 15;
	add.s32 	%r58, %r57, %r56;
	mul.lo.s32 	%r59, %r58, 53824;
	sub.s32 	%r60, %r46, %r59;
	.loc	1 35 35                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:35
	mul.wide.s32 	%rd12, %r53, 4;
	add.s64 	%rd1, %rd10, %rd12;
	mul.wide.s32 	%rd13, %r60, 4;
	add.s64 	%rd2, %rd10, %rd13;
	.loc	1 35 76                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:76
	and.pred  	%p1, %p29, %p30;
	and.pred  	%p4, %p29, %p31;
	mov.b32 	%r4, 0;
	.loc	1 35 61                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:61
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	@!%p4 mov.u32 %r6, %r4;
	@!%p4 mov.u32 %r7, %r4;
	// end inline asm
	mov.b32 	%f1, %r6;
	mov.b32 	%f2, %r7;
	.loc	1 37 23                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:37:23
	add.f32 	%f3, %f1, 0f00000000;
	add.f32 	%f4, %f2, 0f00000000;
	.loc	1 32 20                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:32:20
	add.s32 	%r61, %r45, 2048;
	add.s32 	%r62, %r45, 3072;
	.loc	1 34 22                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:34:22
	setp.lt.s32 	%p32, %r61, 53824;
	setp.lt.s32 	%p33, %r62, 53824;
	.loc	1 35 52                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:52
	mul.hi.s32 	%r63, %r61, -1680195291;
	mad.lo.s32 	%r64, %r61, 1, %r63;
	shr.u32 	%r65, %r64, 31;
	shr.s32 	%r66, %r64, 15;
	add.s32 	%r67, %r66, %r65;
	mul.lo.s32 	%r68, %r67, 53824;
	sub.s32 	%r69, %r61, %r68;
	mul.hi.s32 	%r70, %r62, -1680195291;
	mad.lo.s32 	%r71, %r62, 1, %r70;
	shr.u32 	%r72, %r71, 31;
	shr.s32 	%r73, %r71, 15;
	add.s32 	%r74, %r73, %r72;
	mul.lo.s32 	%r75, %r74, 53824;
	sub.s32 	%r76, %r62, %r75;
	.loc	1 35 35                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:35
	mul.wide.s32 	%rd14, %r69, 4;
	add.s64 	%rd3, %rd10, %rd14;
	mul.wide.s32 	%rd15, %r76, 4;
	add.s64 	%rd4, %rd10, %rd15;
	.loc	1 35 76                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:76
	and.pred  	%p7, %p29, %p32;
	and.pred  	%p10, %p29, %p33;
	.loc	1 35 61                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:61
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p7 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd3 + 0 ];
	@!%p7 mov.u32 %r10, %r4;
	@!%p7 mov.u32 %r11, %r4;
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p10 ld.global.L1::evict_last.v2.b32 { %r14, %r15 }, [ %rd4 + 0 ];
	@!%p10 mov.u32 %r14, %r4;
	@!%p10 mov.u32 %r15, %r4;
	// end inline asm
	mov.b32 	%f5, %r14;
	mov.b32 	%f6, %r15;
	.loc	1 37 23                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:37:23
	add.f32 	%f7, %f3, %f5;
	add.f32 	%f8, %f4, %f6;
	.loc	1 32 20                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:32:20
	add.s32 	%r77, %r45, 4096;
	add.s32 	%r78, %r45, 5120;
	.loc	1 34 22                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:34:22
	setp.lt.s32 	%p34, %r77, 53824;
	setp.lt.s32 	%p35, %r78, 53824;
	.loc	1 35 52                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:52
	mul.hi.s32 	%r79, %r77, -1680195291;
	mad.lo.s32 	%r80, %r77, 1, %r79;
	shr.u32 	%r81, %r80, 31;
	shr.s32 	%r82, %r80, 15;
	add.s32 	%r83, %r82, %r81;
	mul.lo.s32 	%r84, %r83, 53824;
	sub.s32 	%r85, %r77, %r84;
	mul.hi.s32 	%r86, %r78, -1680195291;
	mad.lo.s32 	%r87, %r78, 1, %r86;
	shr.u32 	%r88, %r87, 31;
	shr.s32 	%r89, %r87, 15;
	add.s32 	%r90, %r89, %r88;
	mul.lo.s32 	%r91, %r90, 53824;
	sub.s32 	%r92, %r78, %r91;
	.loc	1 35 35                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:35
	mul.wide.s32 	%rd16, %r85, 4;
	add.s64 	%rd5, %rd10, %rd16;
	mul.wide.s32 	%rd17, %r92, 4;
	add.s64 	%rd6, %rd10, %rd17;
	.loc	1 35 76                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:76
	and.pred  	%p13, %p29, %p34;
	and.pred  	%p16, %p29, %p35;
	.loc	1 35 61                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:61
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p13 ld.global.L1::evict_last.v2.b32 { %r18, %r19 }, [ %rd5 + 0 ];
	@!%p13 mov.u32 %r18, %r4;
	@!%p13 mov.u32 %r19, %r4;
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p16 ld.global.L1::evict_last.v2.b32 { %r22, %r23 }, [ %rd6 + 0 ];
	@!%p16 mov.u32 %r22, %r4;
	@!%p16 mov.u32 %r23, %r4;
	// end inline asm
	mov.b32 	%f9, %r22;
	mov.b32 	%f10, %r23;
	.loc	1 37 23                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:37:23
	add.f32 	%f11, %f7, %f9;
	add.f32 	%f12, %f8, %f10;
	.loc	1 38 46                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:38:46
	selp.f32 	%f13, %f11, 0f00000000, %p29;
	selp.f32 	%f14, %f12, 0f00000000, %p29;
	.loc	1 29 27                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:29:27
	or.b32  	%r93, %r43, 7168;
	.loc	1 30 25                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:30:25
	setp.lt.u32 	%p36, %r93, 7690;
	.loc	1 32 20                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:32:20
	add.s32 	%r94, %r45, 6144;
	add.s32 	%r95, %r93, %r44;
	.loc	1 34 22                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:34:22
	setp.lt.s32 	%p37, %r94, 53824;
	setp.lt.s32 	%p38, %r95, 53824;
	.loc	1 35 52                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:52
	mul.hi.s32 	%r96, %r94, -1680195291;
	mad.lo.s32 	%r97, %r94, 1, %r96;
	shr.u32 	%r98, %r97, 31;
	shr.s32 	%r99, %r97, 15;
	add.s32 	%r100, %r99, %r98;
	mul.lo.s32 	%r101, %r100, 53824;
	sub.s32 	%r102, %r94, %r101;
	mul.hi.s32 	%r103, %r95, -1680195291;
	mad.lo.s32 	%r104, %r95, 1, %r103;
	shr.u32 	%r105, %r104, 31;
	shr.s32 	%r106, %r104, 15;
	add.s32 	%r107, %r106, %r105;
	mul.lo.s32 	%r108, %r107, 53824;
	sub.s32 	%r109, %r95, %r108;
	.loc	1 35 35                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:35
	mul.wide.s32 	%rd18, %r102, 4;
	add.s64 	%rd7, %rd10, %rd18;
	mul.wide.s32 	%rd19, %r109, 4;
	add.s64 	%rd8, %rd10, %rd19;
	.loc	1 35 76                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:76
	and.pred  	%p19, %p29, %p37;
	.loc	1 38 33                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:38:33
	and.pred  	%p39, %p29, %p36;
	.loc	1 35 76                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:76
	and.pred  	%p22, %p39, %p38;
	.loc	1 35 61                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:61
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p19 ld.global.L1::evict_last.v2.b32 { %r26, %r27 }, [ %rd7 + 0 ];
	@!%p19 mov.u32 %r26, %r4;
	@!%p19 mov.u32 %r27, %r4;
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	@%p22 ld.global.L1::evict_last.v2.b32 { %r30, %r31 }, [ %rd8 + 0 ];
	@!%p22 mov.u32 %r30, %r4;
	@!%p22 mov.u32 %r31, %r4;
	// end inline asm
	mov.b32 	%f15, %r30;
	mov.b32 	%f16, %r31;
	mov.b32 	%f17, %r3;
	mov.b32 	%f18, %r2;
	.loc	1 37 23                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:37:23
	add.f32 	%f19, %f18, 0f00000000;
	add.f32 	%f20, %f17, 0f00000000;
	.loc	1 35 61                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:61
	mov.b32 	%f21, %r10;
	mov.b32 	%f22, %r11;
	.loc	1 37 23                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:37:23
	add.f32 	%f23, %f20, %f22;
	add.f32 	%f24, %f19, %f21;
	.loc	1 35 61                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:61
	mov.b32 	%f25, %r19;
	mov.b32 	%f26, %r18;
	.loc	1 37 23                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:37:23
	add.f32 	%f27, %f24, %f26;
	add.f32 	%f28, %f23, %f25;
	.loc	1 35 61                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:35:61
	mov.b32 	%f29, %r26;
	mov.b32 	%f30, %r27;
	.loc	1 37 23                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:37:23
	add.f32 	%f31, %f28, %f30;
	add.f32 	%f32, %f27, %f29;
	add.f32 	%f33, %f13, %f15;
	add.f32 	%f34, %f14, %f16;
	.loc	1 38 46                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:38:46
	selp.f32 	%f35, %f33, %f13, %p39;
	selp.f32 	%f36, %f34, %f14, %p39;
	.loc	1 25 33                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:25:33
	and.b32  	%r110, %r41, 31;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f32, %f31;
	selp.f32 	%f38, %f37, 0f00000000, %p29;
	add.f32 	%f39, %f35, %f38;
	add.f32 	%f40, %f36, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r111, %f40;
	shfl.sync.bfly.b32	%r112, %r111, 16, 31, -1;
	mov.b32 	%f41, %r112;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r113, %f42;
	shfl.sync.bfly.b32	%r114, %r113, 8, 31, -1;
	mov.b32 	%f43, %r114;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f44;
	shfl.sync.bfly.b32	%r116, %r115, 4, 31, -1;
	mov.b32 	%f45, %r116;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r117, %f46;
	shfl.sync.bfly.b32	%r118, %r117, 2, 31, -1;
	mov.b32 	%f47, %r118;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r119, %f48;
	shfl.sync.bfly.b32	%r120, %r119, 1, 31, -1;
	mov.b32 	%f49, %r120;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p25, %r110, 0;
	shr.u32 	%r121, %r41, 3;
	and.b32  	%r122, %r121, 60;
	mov.u32 	%r123, global_smem;
	add.s32 	%r34, %r123, %r122;
	mov.b32 	%r35, %f50;
	// begin inline asm
	@%p25 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p26, %r41, 16;
	shl.b32 	%r124, %r41, 2;
	add.s32 	%r37, %r123, %r124;
	// begin inline asm
	@%p26 ld.shared.b32 %r36, [ %r37 + 0 ];
	// end inline asm
	mov.b32 	%f51, %r36;
	shfl.sync.bfly.b32	%r125, %r36, 8, 31, -1;
	mov.b32 	%f52, %r125;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r126, %f53;
	shfl.sync.bfly.b32	%r127, %r126, 4, 31, -1;
	mov.b32 	%f54, %r127;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r128, %f55;
	shfl.sync.bfly.b32	%r129, %r128, 2, 31, -1;
	mov.b32 	%f56, %r129;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r130, %f57;
	shfl.sync.bfly.b32	%r131, %r130, 1, 31, -1;
	mov.b32 	%f58, %r131;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r132, %r41, 15;
	setp.eq.s32 	%p40, %r132, 0;
	and.pred  	%p27, %p26, %p40;
	mov.b32 	%r39, %f59;
	// begin inline asm
	@%p27 st.shared.b32 [ %r37 + 0 ], %r39;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r40, [global_smem];
$L__tmp2:
	.loc	1 40 25                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:40:25
	mul.wide.s32 	%rd20, %r1, 4;
	add.s64 	%rd9, %rd11, %rd20;
	.loc	1 40 36                         // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:40:36
	and.b32  	%r133, %r41, 511;
	setp.eq.s32 	%p41, %r133, 0;
	and.pred  	%p28, %p41, %p29;
	// begin inline asm
	@%p28 st.global.b32 [ %rd9 + 0 ], { %r40 };
	// end inline asm
	.loc	1 40 4                          // crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py:40:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/rs/crsephn34to33o4kuvxshb6ypngiimrcxqwhocex6wxdtazu7g7a.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 168                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 115
.b8 101
.b8 112
.b8 104
.b8 110
.b8 51
.b8 52
.b8 116
.b8 111
.b8 51
.b8 51
.b8 111
.b8 52
.b8 107
.b8 117
.b8 118
.b8 120
.b8 115
.b8 104
.b8 98
.b8 54
.b8 121
.b8 112
.b8 110
.b8 103
.b8 105
.b8 105
.b8 109
.b8 114
.b8 99
.b8 120
.b8 113
.b8 119
.b8 104
.b8 111
.b8 99
.b8 101
.b8 120
.b8 54
.b8 119
.b8 120
.b8 100
.b8 116
.b8 97
.b8 122
.b8 117
.b8 55
.b8 103
.b8 55
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7d:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x92:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
