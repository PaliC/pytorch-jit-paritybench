//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_mul_1  // -- Begin function triton_poi_fused_mul_1
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_mul_1
.visible .entry triton_poi_fused_mul_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_1_param_2,
	.param .u32 triton_poi_fused_mul_1_param_3,
	.param .u32 triton_poi_fused_mul_1_param_4
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<46>;
	.reg .f32 	%f<10>;
	.reg .b64 	%rd<10>;
	.loc	1 19 0                          // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_mul_1_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused_mul_1_param_1];
$L__tmp0:
	.loc	1 22 28                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:22:33
	shl.b32 	%r11, %r1, 3;
	ld.param.u64 	%rd6, [triton_poi_fused_mul_1_param_2];
	.loc	1 23 44                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:23:44
	mov.u32 	%r12, %tid.x;
	bfe.u32 	%r13, %r12, 2, 3;
	and.b32  	%r14, %r12, 3;
	and.b32  	%r15, %r12, 7;
	.loc	1 23 23                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:23:23
	or.b32  	%r16, %r11, %r13;
	or.b32  	%r17, %r11, %r15;
	.loc	1 24 21                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:24:21
	setp.lt.s32 	%p5, %r16, 16;
	setp.lt.s32 	%p2, %r17, 16;
	.loc	1 25 28                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:25:33
	shl.b32 	%r18, %r2, 2;
	.loc	1 26 44                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:26:44
	bfe.u32 	%r19, %r12, 3, 2;
	.loc	1 26 23                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:26:23
	or.b32  	%r20, %r18, %r14;
	or.b32  	%r21, %r18, %r19;
	.loc	1 27 21                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:27:21
	setp.lt.s32 	%p6, %r20, 4;
	setp.lt.s32 	%p7, %r21, 4;
	.loc	1 30 19                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:30:19
	shr.s32 	%r23, %r17, 31;
	shr.u32 	%r24, %r23, 30;
	add.s32 	%r25, %r17, %r24;
	.loc	1 29 19                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:29:19
	and.b32  	%r26, %r25, -4;
	sub.s32 	%r27, %r17, %r26;
	.loc	1 32 37                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:32:37
	shl.b32 	%r28, %r21, 2;
	.loc	1 32 35                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:32:35
	add.s32 	%r29, %r28, %r27;
	.loc	1 32 45                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:32:45
	shl.b32 	%r30, %r25, 2;
	and.b32  	%r31, %r30, -16;
	.loc	1 32 42                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:32:42
	add.s32 	%r32, %r29, %r31;
	.loc	1 32 30                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:32:30
	mul.wide.s32 	%rd7, %r32, 4;
	add.s64 	%rd1, %rd4, %rd7;
	.loc	1 32 58                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:32:58
	and.pred  	%p4, %p5, %p6;
	and.pred  	%p1, %p2, %p7;
	.loc	1 32 50                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:32:50
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r3;
	.loc	1 33 30                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:33:30
	mul.wide.s32 	%rd8, %r17, 4;
	add.s64 	%rd2, %rd5, %rd8;
	.loc	1 33 35                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:33:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r4;
	mov.f32 	%f5, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f6, %f5, %f4;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f6, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f7, %f1, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r7, %f7;
	mov.b32 	%r6, 1065353216;
	// begin inline asm
	div.full.f32 %r5, %r6, %r7;
	// end inline asm
	mov.b32 	%f8, %r5;
$L__tmp2:
	.loc	1 35 18                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:35:18
	mul.f32 	%f9, %f8, %f3;
	.loc	1 36 32                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:36:32
	shl.b32 	%r33, %r16, 2;
	.loc	1 36 30                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:36:30
	add.s32 	%r34, %r20, %r33;
	.loc	1 36 25                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:36:25
	mul.wide.s32 	%rd9, %r34, 4;
	add.s64 	%rd3, %rd6, %rd9;
	.loc	1 36 43                         // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:36:43
	shl.b32 	%r35, %r12, 2;
	and.b32  	%r36, %r35, 28;
	or.b32  	%r37, %r36, %r19;
	and.b32  	%r38, %r12, 31;
	mov.u32 	%r39, global_smem;
	add.s32 	%r40, %r39, %r36;
	shl.b32 	%r41, %r37, 2;
	add.s32 	%r8, %r40, %r41;
	mov.b32 	%r9, %f9;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r42, %r12, 28;
	add.s32 	%r43, %r39, %r42;
	shl.b32 	%r44, %r38, 2;
	add.s32 	%r45, %r43, %r44;
	ld.shared.u32 	%r10, [%r45];
	// begin inline asm
	@%p4 st.global.b32 [ %rd3 + 0 ], { %r10 };
	// end inline asm
	.loc	1 36 4                          // chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py:36:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hl/chlvfmnwhsqwza3rjf5o34eavzozjv7vwysgqplbegrw6p2imtt6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 167                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 108
.b8 118
.b8 102
.b8 109
.b8 110
.b8 119
.b8 104
.b8 115
.b8 113
.b8 119
.b8 122
.b8 97
.b8 51
.b8 114
.b8 106
.b8 102
.b8 53
.b8 111
.b8 51
.b8 52
.b8 101
.b8 97
.b8 118
.b8 122
.b8 111
.b8 122
.b8 106
.b8 118
.b8 55
.b8 118
.b8 119
.b8 121
.b8 115
.b8 103
.b8 113
.b8 112
.b8 108
.b8 98
.b8 101
.b8 103
.b8 114
.b8 119
.b8 54
.b8 112
.b8 50
.b8 105
.b8 109
.b8 116
.b8 116
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x19 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7c:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x91:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 34                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
