#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":19:0), %arg5: i32 loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0x7F800000 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<4xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0x7F800000> : tensor<4xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<4xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<4xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<4xi32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<4xi32, #blocked> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<4xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<4xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_5 : tensor<4xi32, #blocked> loc(#loc6)
    %6 = arith.muli %4, %cst_5 : tensor<4xi32, #blocked> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>, #blocked> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<4x!tt.ptr<f32>, #blocked>, tensor<4xi32, #blocked> loc(#loc8)
    %9 = tt.load %8, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>, #blocked> loc(#loc9)
    %10 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc10)
    %11 = tt.load %10 : !tt.ptr<f32> loc(#loc11)
    %12 = arith.addi %6, %cst_4 : tensor<4xi32, #blocked> loc(#loc12)
    %13 = tt.addptr %7, %12 : tensor<4x!tt.ptr<f32>, #blocked>, tensor<4xi32, #blocked> loc(#loc13)
    %14 = tt.load %13, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>, #blocked> loc(#loc14)
    %15 = arith.addi %6, %cst_3 : tensor<4xi32, #blocked> loc(#loc15)
    %16 = tt.addptr %7, %15 : tensor<4x!tt.ptr<f32>, #blocked>, tensor<4xi32, #blocked> loc(#loc16)
    %17 = tt.load %16, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>, #blocked> loc(#loc17)
    %18 = arith.addi %6, %cst_2 : tensor<4xi32, #blocked> loc(#loc18)
    %19 = tt.addptr %7, %18 : tensor<4x!tt.ptr<f32>, #blocked>, tensor<4xi32, #blocked> loc(#loc19)
    %20 = tt.load %19, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>, #blocked> loc(#loc20)
    %21 = math.exp %11 : f32 loc(#loc21)
    %22 = arith.cmpf olt, %21, %cst : f32 loc(#loc66)
    %23 = arith.cmpf une, %21, %21 : f32 loc(#loc67)
    %24 = arith.ori %22, %23 : i1 loc(#loc68)
    %25 = arith.select %24, %21, %cst : f32 loc(#loc69)
    %26 = tt.splat %25 : f32 -> tensor<4xf32, #blocked> loc(#loc69)
    %27 = arith.mulf %9, %26 : tensor<4xf32, #blocked> loc(#loc27)
    %28 = arith.mulf %14, %26 : tensor<4xf32, #blocked> loc(#loc28)
    %29 = arith.cmpf ogt, %27, %28 : tensor<4xf32, #blocked> loc(#loc70)
    %30 = arith.cmpf une, %27, %27 : tensor<4xf32, #blocked> loc(#loc71)
    %31 = arith.ori %29, %30 : tensor<4xi1, #blocked> loc(#loc72)
    %32 = arith.select %31, %27, %28 : tensor<4xi1, #blocked>, tensor<4xf32, #blocked> loc(#loc73)
    %33 = arith.mulf %17, %26 : tensor<4xf32, #blocked> loc(#loc34)
    %34 = arith.cmpf ogt, %32, %33 : tensor<4xf32, #blocked> loc(#loc74)
    %35 = arith.cmpf une, %32, %32 : tensor<4xf32, #blocked> loc(#loc75)
    %36 = arith.ori %34, %35 : tensor<4xi1, #blocked> loc(#loc76)
    %37 = arith.select %36, %32, %33 : tensor<4xi1, #blocked>, tensor<4xf32, #blocked> loc(#loc77)
    %38 = arith.mulf %20, %26 : tensor<4xf32, #blocked> loc(#loc36)
    %39 = arith.cmpf ogt, %37, %38 : tensor<4xf32, #blocked> loc(#loc78)
    %40 = arith.cmpf une, %37, %37 : tensor<4xf32, #blocked> loc(#loc79)
    %41 = arith.ori %39, %40 : tensor<4xi1, #blocked> loc(#loc80)
    %42 = arith.select %41, %37, %38 : tensor<4xi1, #blocked>, tensor<4xf32, #blocked> loc(#loc81)
    %43 = arith.subf %27, %42 : tensor<4xf32, #blocked> loc(#loc38)
    %44 = arith.subf %28, %42 : tensor<4xf32, #blocked> loc(#loc39)
    %45 = arith.cmpf ogt, %43, %44 : tensor<4xf32, #blocked> loc(#loc82)
    %46 = arith.cmpf une, %43, %43 : tensor<4xf32, #blocked> loc(#loc83)
    %47 = arith.ori %45, %46 : tensor<4xi1, #blocked> loc(#loc84)
    %48 = arith.select %47, %43, %44 : tensor<4xi1, #blocked>, tensor<4xf32, #blocked> loc(#loc85)
    %49 = arith.subf %33, %42 : tensor<4xf32, #blocked> loc(#loc41)
    %50 = arith.cmpf ogt, %48, %49 : tensor<4xf32, #blocked> loc(#loc86)
    %51 = arith.cmpf une, %48, %48 : tensor<4xf32, #blocked> loc(#loc87)
    %52 = arith.ori %50, %51 : tensor<4xi1, #blocked> loc(#loc88)
    %53 = arith.select %52, %48, %49 : tensor<4xi1, #blocked>, tensor<4xf32, #blocked> loc(#loc89)
    %54 = arith.subf %38, %42 : tensor<4xf32, #blocked> loc(#loc43)
    %55 = arith.cmpf ogt, %53, %54 : tensor<4xf32, #blocked> loc(#loc90)
    %56 = arith.cmpf une, %53, %53 : tensor<4xf32, #blocked> loc(#loc91)
    %57 = arith.ori %55, %56 : tensor<4xi1, #blocked> loc(#loc92)
    %58 = arith.select %57, %53, %54 : tensor<4xi1, #blocked>, tensor<4xf32, #blocked> loc(#loc93)
    %59 = math.absf %58 : tensor<4xf32, #blocked> loc(#loc45)
    %60 = arith.cmpf oeq, %59, %cst_1 : tensor<4xf32, #blocked> loc(#loc46)
    %61 = arith.select %60, %cst_0, %58 : tensor<4xi1, #blocked>, tensor<4xf32, #blocked> loc(#loc47)
    %62 = arith.subf %43, %61 : tensor<4xf32, #blocked> loc(#loc48)
    %63 = math.exp %62 : tensor<4xf32, #blocked> loc(#loc49)
    %64 = arith.subf %44, %61 : tensor<4xf32, #blocked> loc(#loc50)
    %65 = math.exp %64 : tensor<4xf32, #blocked> loc(#loc51)
    %66 = arith.addf %63, %65 : tensor<4xf32, #blocked> loc(#loc52)
    %67 = arith.subf %49, %61 : tensor<4xf32, #blocked> loc(#loc53)
    %68 = math.exp %67 : tensor<4xf32, #blocked> loc(#loc54)
    %69 = arith.addf %66, %68 : tensor<4xf32, #blocked> loc(#loc55)
    %70 = arith.subf %54, %61 : tensor<4xf32, #blocked> loc(#loc56)
    %71 = math.exp %70 : tensor<4xf32, #blocked> loc(#loc57)
    %72 = arith.addf %69, %71 : tensor<4xf32, #blocked> loc(#loc58)
    %73 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>, #blocked> loc(#loc59)
    %74 = tt.addptr %73, %4 : tensor<4x!tt.ptr<f32>, #blocked>, tensor<4xi32, #blocked> loc(#loc59)
    tt.store %74, %42, %5 : tensor<4x!tt.ptr<f32>, #blocked> loc(#loc60)
    %75 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>, #blocked> loc(#loc61)
    %76 = tt.addptr %75, %4 : tensor<4x!tt.ptr<f32>, #blocked>, tensor<4xi32, #blocked> loc(#loc61)
    tt.store %76, %58, %5 : tensor<4x!tt.ptr<f32>, #blocked> loc(#loc62)
    %77 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>, #blocked> loc(#loc63)
    %78 = tt.addptr %77, %4 : tensor<4x!tt.ptr<f32>, #blocked>, tensor<4xi32, #blocked> loc(#loc63)
    tt.store %78, %72, %5 : tensor<4x!tt.ptr<f32>, #blocked> loc(#loc64)
    tt.return loc(#loc65)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":21:28)
#loc3 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":21:33)
#loc4 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":22:36)
#loc5 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":22:23)
#loc6 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":23:21)
#loc7 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":25:32)
#loc8 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":25:30)
#loc9 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":25:37)
#loc10 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":26:30)
#loc11 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":26:19)
#loc12 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":28:34)
#loc13 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":28:30)
#loc14 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":28:41)
#loc15 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":29:35)
#loc16 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":29:31)
#loc17 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":29:42)
#loc18 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":30:35)
#loc19 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":30:31)
#loc20 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":30:42)
#loc21 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":31:23)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc23 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":33:40)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc27 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":34:18)
#loc28 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":35:18)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc30 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":36:40)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc34 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":37:20)
#loc35 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":38:41)
#loc36 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":39:20)
#loc37 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":40:42)
#loc38 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":41:19)
#loc39 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":42:19)
#loc40 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":43:42)
#loc41 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":44:20)
#loc42 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":45:42)
#loc43 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":46:20)
#loc44 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":47:42)
#loc45 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":48:24)
#loc46 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":49:21)
#loc47 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":51:35)
#loc48 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":52:20)
#loc49 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":53:24)
#loc50 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":54:20)
#loc51 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":55:24)
#loc52 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":56:20)
#loc53 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":57:20)
#loc54 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":58:24)
#loc55 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":59:20)
#loc56 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":60:20)
#loc57 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":61:24)
#loc58 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":62:20)
#loc59 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":63:25)
#loc60 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":63:37)
#loc61 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":64:25)
#loc62 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":64:37)
#loc63 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":65:25)
#loc64 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":65:37)
#loc65 = loc("inductor_cache/s7/cs7nrebzqfi67yjjshgg5whkjabb7g5ddwzfqtpd6bw4nq5drmta.py":65:4)
#loc66 = loc(callsite(#loc22 at #loc23))
#loc67 = loc(callsite(#loc24 at #loc23))
#loc68 = loc(callsite(#loc25 at #loc23))
#loc69 = loc(callsite(#loc26 at #loc23))
#loc70 = loc(callsite(#loc29 at #loc30))
#loc71 = loc(callsite(#loc31 at #loc30))
#loc72 = loc(callsite(#loc32 at #loc30))
#loc73 = loc(callsite(#loc33 at #loc30))
#loc74 = loc(callsite(#loc29 at #loc35))
#loc75 = loc(callsite(#loc31 at #loc35))
#loc76 = loc(callsite(#loc32 at #loc35))
#loc77 = loc(callsite(#loc33 at #loc35))
#loc78 = loc(callsite(#loc29 at #loc37))
#loc79 = loc(callsite(#loc31 at #loc37))
#loc80 = loc(callsite(#loc32 at #loc37))
#loc81 = loc(callsite(#loc33 at #loc37))
#loc82 = loc(callsite(#loc29 at #loc40))
#loc83 = loc(callsite(#loc31 at #loc40))
#loc84 = loc(callsite(#loc32 at #loc40))
#loc85 = loc(callsite(#loc33 at #loc40))
#loc86 = loc(callsite(#loc29 at #loc42))
#loc87 = loc(callsite(#loc31 at #loc42))
#loc88 = loc(callsite(#loc32 at #loc42))
#loc89 = loc(callsite(#loc33 at #loc42))
#loc90 = loc(callsite(#loc29 at #loc44))
#loc91 = loc(callsite(#loc31 at #loc44))
#loc92 = loc(callsite(#loc32 at #loc44))
#loc93 = loc(callsite(#loc33 at #loc44))
