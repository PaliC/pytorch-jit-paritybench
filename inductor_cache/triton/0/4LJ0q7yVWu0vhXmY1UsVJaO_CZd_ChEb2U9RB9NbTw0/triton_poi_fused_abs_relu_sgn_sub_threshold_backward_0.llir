; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_abs_relu_sgn_sub_threshold_backward_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %8 = shl i32 %7, 6, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 62, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 64, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %14 = sdiv i32 %.frozen, 16, !dbg !15
  %15 = mul i32 %14, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %15, !dbg !16
  %16 = srem i32 %12, 4, !dbg !17
  %17 = shl i32 %14, 6, !dbg !18
  %18 = add i32 %17, %.decomposed, !dbg !19
  %19 = add i32 %18, 16, !dbg !20
  %20 = sext i32 %19 to i64, !dbg !21
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !21
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %21, i1 %13) #2, !dbg !22
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !22
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !22
  %25 = sext i32 %16 to i64, !dbg !23
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !23
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %26, i1 %13) #2, !dbg !24
  %28 = extractvalue { i32, i32 } %27, 0, !dbg !24
  %29 = extractvalue { i32, i32 } %27, 1, !dbg !24
  %30 = sext i32 %18 to i64, !dbg !25
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !25
  %32 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %31, i1 %13) #2, !dbg !26
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !26
  %34 = extractvalue { i32, i32 } %32, 1, !dbg !26
  %35 = sext i32 %12 to i64, !dbg !27
  %36 = getelementptr float, ptr addrspace(1) %2, i64 %35, !dbg !27
  %37 = getelementptr float, ptr addrspace(1) %3, i64 %35, !dbg !28
  %38 = getelementptr i1, ptr addrspace(1) %4, i64 %35, !dbg !29
  %39 = insertelement <2 x i32> poison, i32 %23, i64 0, !dbg !22
  %40 = insertelement <2 x i32> %39, i32 %24, i64 1, !dbg !22
  %41 = bitcast <2 x i32> %40 to <2 x float>, !dbg !22
  %42 = insertelement <2 x i32> poison, i32 %28, i64 0, !dbg !24
  %43 = insertelement <2 x i32> %42, i32 %29, i64 1, !dbg !24
  %44 = bitcast <2 x i32> %43 to <2 x float>, !dbg !24
  %45 = insertelement <2 x i32> poison, i32 %33, i64 0, !dbg !26
  %46 = insertelement <2 x i32> %45, i32 %34, i64 1, !dbg !26
  %47 = bitcast <2 x i32> %46 to <2 x float>, !dbg !26
  %48 = fsub <2 x float> %44, %47, !dbg !30
  %49 = tail call <2 x float> @llvm.fabs.v2f32(<2 x float> %48), !dbg !31
  %50 = fsub <2 x float> %41, %49, !dbg !32
  %51 = fcmp olt <2 x float> %50, zeroinitializer, !dbg !33
  %52 = select <2 x i1> %51, <2 x float> zeroinitializer, <2 x float> %50, !dbg !37
  %53 = extractelement <2 x float> %48, i64 0, !dbg !38
  %54 = fcmp ogt float %53, 0.000000e+00, !dbg !39
  %55 = extractelement <2 x float> %48, i64 1, !dbg !38
  %56 = fcmp ogt float %55, 0.000000e+00, !dbg !39
  %57 = zext i1 %54 to i8, !dbg !40
  %58 = zext i1 %56 to i8, !dbg !40
  %59 = fcmp olt float %53, 0.000000e+00, !dbg !38
  %60 = fcmp olt float %55, 0.000000e+00, !dbg !38
  %.neg = sext i1 %59 to i8, !dbg !41
  %.neg1 = sext i1 %60 to i8, !dbg !41
  %61 = add nsw i8 %.neg, %57, !dbg !42
  %62 = add nsw i8 %.neg1, %58, !dbg !42
  %63 = sitofp i8 %61 to float, !dbg !43
  %64 = sitofp i8 %62 to float, !dbg !43
  %65 = fcmp ole <2 x float> %52, zeroinitializer, !dbg !44
  %bc = bitcast <2 x float> %52 to <2 x i32>, !dbg !45
  %66 = extractelement <2 x i32> %bc, i64 0, !dbg !45
  %bc2 = bitcast <2 x float> %52 to <2 x i32>, !dbg !45
  %67 = extractelement <2 x i32> %bc2, i64 1, !dbg !45
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %66, i32 %67, ptr addrspace(1) %36, i1 %13) #2, !dbg !45
  %68 = bitcast float %63 to i32, !dbg !46
  %69 = bitcast float %64 to i32, !dbg !46
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %68, i32 %69, ptr addrspace(1) %37, i1 %13) #2, !dbg !46
  %70 = zext <2 x i1> %65 to <2 x i8>, !dbg !47
  %71 = bitcast <2 x i8> %70 to i16, !dbg !47
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %71, ptr addrspace(1) %38, i1 %13) #2, !dbg !47
  ret void, !dbg !48
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c5glfoavslsjm7qezi6ityxv7ftvsq6distaren23prfqxnbeiye.py", directory: "inductor_cache/5g")
!4 = !{ptr @triton_poi_fused_abs_relu_sgn_sub_threshold_backward_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_abs_relu_sgn_sub_threshold_backward_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_abs_relu_sgn_sub_threshold_backward_0", linkageName: "triton_poi_fused_abs_relu_sgn_sub_threshold_backward_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 43, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 40, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 48, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 35, scope: !7)
!25 = !DILocation(line: 30, column: 30, scope: !7)
!26 = !DILocation(line: 30, column: 43, scope: !7)
!27 = !DILocation(line: 44, column: 25, scope: !7)
!28 = !DILocation(line: 45, column: 25, scope: !7)
!29 = !DILocation(line: 46, column: 25, scope: !7)
!30 = !DILocation(line: 31, column: 18, scope: !7)
!31 = !DILocation(line: 32, column: 23, scope: !7)
!32 = !DILocation(line: 33, column: 18, scope: !7)
!33 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !36)
!34 = distinct !DILexicalBlockFile(scope: !7, file: !35, discriminator: 0)
!35 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!36 = !DILocation(line: 35, column: 40, scope: !7)
!37 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !36)
!38 = !DILocation(line: 38, column: 19, scope: !7)
!39 = !DILocation(line: 36, column: 18, scope: !7)
!40 = !DILocation(line: 37, column: 19, scope: !7)
!41 = !DILocation(line: 39, column: 21, scope: !7)
!42 = !DILocation(line: 40, column: 19, scope: !7)
!43 = !DILocation(line: 41, column: 21, scope: !7)
!44 = !DILocation(line: 43, column: 20, scope: !7)
!45 = !DILocation(line: 44, column: 36, scope: !7)
!46 = !DILocation(line: 45, column: 37, scope: !7)
!47 = !DILocation(line: 46, column: 37, scope: !7)
!48 = !DILocation(line: 46, column: 4, scope: !7)
