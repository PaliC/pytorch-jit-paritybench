; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused__log_softmax_convolution_37(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 7, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %.lobit1 = lshr i32 %9, 5, !dbg !12
  %10 = and i32 %.lobit1, 7, !dbg !12
  %11 = or disjoint i32 %10, 8, !dbg !12
  %12 = or disjoint i32 %10, 16, !dbg !12
  %13 = or disjoint i32 %10, 24, !dbg !12
  %14 = or disjoint i32 %10, 32, !dbg !12
  %15 = or disjoint i32 %10, 40, !dbg !12
  %16 = or disjoint i32 %10, 48, !dbg !12
  %17 = or disjoint i32 %10, 56, !dbg !12
  %18 = or disjoint i32 %10, 64, !dbg !12
  %19 = or disjoint i32 %10, 72, !dbg !12
  %20 = or disjoint i32 %10, 80, !dbg !12
  %21 = or disjoint i32 %10, 88, !dbg !12
  %22 = or disjoint i32 %10, 96, !dbg !12
  %23 = or disjoint i32 %10, 104, !dbg !12
  %24 = or disjoint i32 %10, 112, !dbg !12
  %25 = or disjoint i32 %10, 120, !dbg !12
  %26 = and i32 %9, 31, !dbg !12
  %27 = and i32 %9, 127, !dbg !12
  %28 = or disjoint i32 %8, %10, !dbg !13
  %29 = or disjoint i32 %8, %11, !dbg !13
  %30 = or disjoint i32 %8, %12, !dbg !13
  %31 = or disjoint i32 %8, %13, !dbg !13
  %32 = or disjoint i32 %8, %14, !dbg !13
  %33 = or disjoint i32 %8, %15, !dbg !13
  %34 = or disjoint i32 %8, %16, !dbg !13
  %35 = or disjoint i32 %8, %17, !dbg !13
  %36 = or disjoint i32 %8, %18, !dbg !13
  %37 = or disjoint i32 %8, %19, !dbg !13
  %38 = or disjoint i32 %8, %20, !dbg !13
  %39 = or disjoint i32 %8, %21, !dbg !13
  %40 = or disjoint i32 %8, %22, !dbg !13
  %41 = or disjoint i32 %8, %23, !dbg !13
  %42 = or disjoint i32 %8, %24, !dbg !13
  %43 = or disjoint i32 %8, %25, !dbg !13
  %44 = or disjoint i32 %8, %27, !dbg !13
  %45 = icmp samesign ult i32 %26, 21, !dbg !14
  %46 = mul i32 %28, 21, !dbg !15
  %47 = mul i32 %29, 21, !dbg !15
  %48 = mul i32 %30, 21, !dbg !15
  %49 = mul i32 %31, 21, !dbg !15
  %50 = mul i32 %32, 21, !dbg !15
  %51 = mul i32 %33, 21, !dbg !15
  %52 = mul i32 %34, 21, !dbg !15
  %53 = mul i32 %35, 21, !dbg !15
  %54 = mul i32 %36, 21, !dbg !15
  %55 = mul i32 %37, 21, !dbg !15
  %56 = mul i32 %38, 21, !dbg !15
  %57 = mul i32 %39, 21, !dbg !15
  %58 = mul i32 %40, 21, !dbg !15
  %59 = mul i32 %41, 21, !dbg !15
  %60 = mul i32 %42, 21, !dbg !15
  %61 = mul i32 %43, 21, !dbg !15
  %62 = add i32 %46, %26, !dbg !16
  %63 = add i32 %47, %26, !dbg !16
  %64 = add i32 %48, %26, !dbg !16
  %65 = add i32 %49, %26, !dbg !16
  %66 = add i32 %50, %26, !dbg !16
  %67 = add i32 %51, %26, !dbg !16
  %68 = add i32 %52, %26, !dbg !16
  %69 = add i32 %53, %26, !dbg !16
  %70 = add i32 %54, %26, !dbg !16
  %71 = add i32 %55, %26, !dbg !16
  %72 = add i32 %56, %26, !dbg !16
  %73 = add i32 %57, %26, !dbg !16
  %74 = add i32 %58, %26, !dbg !16
  %75 = add i32 %59, %26, !dbg !16
  %76 = add i32 %60, %26, !dbg !16
  %77 = add i32 %61, %26, !dbg !16
  %78 = sext i32 %62 to i64, !dbg !17
  %79 = getelementptr float, ptr addrspace(1) %0, i64 %78, !dbg !17
  %80 = sext i32 %63 to i64, !dbg !17
  %81 = getelementptr float, ptr addrspace(1) %0, i64 %80, !dbg !17
  %82 = sext i32 %64 to i64, !dbg !17
  %83 = getelementptr float, ptr addrspace(1) %0, i64 %82, !dbg !17
  %84 = sext i32 %65 to i64, !dbg !17
  %85 = getelementptr float, ptr addrspace(1) %0, i64 %84, !dbg !17
  %86 = sext i32 %66 to i64, !dbg !17
  %87 = getelementptr float, ptr addrspace(1) %0, i64 %86, !dbg !17
  %88 = sext i32 %67 to i64, !dbg !17
  %89 = getelementptr float, ptr addrspace(1) %0, i64 %88, !dbg !17
  %90 = sext i32 %68 to i64, !dbg !17
  %91 = getelementptr float, ptr addrspace(1) %0, i64 %90, !dbg !17
  %92 = sext i32 %69 to i64, !dbg !17
  %93 = getelementptr float, ptr addrspace(1) %0, i64 %92, !dbg !17
  %94 = sext i32 %70 to i64, !dbg !17
  %95 = getelementptr float, ptr addrspace(1) %0, i64 %94, !dbg !17
  %96 = sext i32 %71 to i64, !dbg !17
  %97 = getelementptr float, ptr addrspace(1) %0, i64 %96, !dbg !17
  %98 = sext i32 %72 to i64, !dbg !17
  %99 = getelementptr float, ptr addrspace(1) %0, i64 %98, !dbg !17
  %100 = sext i32 %73 to i64, !dbg !17
  %101 = getelementptr float, ptr addrspace(1) %0, i64 %100, !dbg !17
  %102 = sext i32 %74 to i64, !dbg !17
  %103 = getelementptr float, ptr addrspace(1) %0, i64 %102, !dbg !17
  %104 = sext i32 %75 to i64, !dbg !17
  %105 = getelementptr float, ptr addrspace(1) %0, i64 %104, !dbg !17
  %106 = sext i32 %76 to i64, !dbg !17
  %107 = getelementptr float, ptr addrspace(1) %0, i64 %106, !dbg !17
  %108 = sext i32 %77 to i64, !dbg !17
  %109 = getelementptr float, ptr addrspace(1) %0, i64 %108, !dbg !17
  %110 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %79, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %111 = bitcast i32 %110 to float, !dbg !18
  %112 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %81, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %113 = bitcast i32 %112 to float, !dbg !18
  %114 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %83, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %115 = bitcast i32 %114 to float, !dbg !18
  %116 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %85, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %117 = bitcast i32 %116 to float, !dbg !18
  %118 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %87, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %119 = bitcast i32 %118 to float, !dbg !18
  %120 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %89, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %121 = bitcast i32 %120 to float, !dbg !18
  %122 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %91, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %123 = bitcast i32 %122 to float, !dbg !18
  %124 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %93, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %125 = bitcast i32 %124 to float, !dbg !18
  %126 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %95, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %127 = bitcast i32 %126 to float, !dbg !18
  %128 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %97, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %129 = bitcast i32 %128 to float, !dbg !18
  %130 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %99, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %131 = bitcast i32 %130 to float, !dbg !18
  %132 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %101, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %133 = bitcast i32 %132 to float, !dbg !18
  %134 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %103, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %135 = bitcast i32 %134 to float, !dbg !18
  %136 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %105, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %137 = bitcast i32 %136 to float, !dbg !18
  %138 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %107, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %139 = bitcast i32 %138 to float, !dbg !18
  %140 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %109, i1 %45, i32 0, i1 %45) #3, !dbg !18
  %141 = bitcast i32 %140 to float, !dbg !18
  %142 = zext nneg i32 %26 to i64, !dbg !19
  %143 = getelementptr float, ptr addrspace(1) %1, i64 %142, !dbg !19
  %144 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %143, i1 %45, i32 0, i1 %45) #3, !dbg !20
  %145 = bitcast i32 %144 to float, !dbg !20
  %146 = fadd float %111, %145, !dbg !21
  %147 = fadd float %113, %145, !dbg !21
  %148 = fadd float %115, %145, !dbg !21
  %149 = fadd float %117, %145, !dbg !21
  %150 = fadd float %119, %145, !dbg !21
  %151 = fadd float %121, %145, !dbg !21
  %152 = fadd float %123, %145, !dbg !21
  %153 = fadd float %125, %145, !dbg !21
  %154 = fadd float %127, %145, !dbg !21
  %155 = fadd float %129, %145, !dbg !21
  %156 = fadd float %131, %145, !dbg !21
  %157 = fadd float %133, %145, !dbg !21
  %158 = fadd float %135, %145, !dbg !21
  %159 = fadd float %137, %145, !dbg !21
  %160 = fadd float %139, %145, !dbg !21
  %161 = fadd float %141, %145, !dbg !21
  %162 = select i1 %45, float %146, float 0xFFF0000000000000, !dbg !22
  %163 = select i1 %45, float %147, float 0xFFF0000000000000, !dbg !22
  %164 = select i1 %45, float %148, float 0xFFF0000000000000, !dbg !22
  %165 = select i1 %45, float %149, float 0xFFF0000000000000, !dbg !22
  %166 = select i1 %45, float %150, float 0xFFF0000000000000, !dbg !22
  %167 = select i1 %45, float %151, float 0xFFF0000000000000, !dbg !22
  %168 = select i1 %45, float %152, float 0xFFF0000000000000, !dbg !22
  %169 = select i1 %45, float %153, float 0xFFF0000000000000, !dbg !22
  %170 = select i1 %45, float %154, float 0xFFF0000000000000, !dbg !22
  %171 = select i1 %45, float %155, float 0xFFF0000000000000, !dbg !22
  %172 = select i1 %45, float %156, float 0xFFF0000000000000, !dbg !22
  %173 = select i1 %45, float %157, float 0xFFF0000000000000, !dbg !22
  %174 = select i1 %45, float %158, float 0xFFF0000000000000, !dbg !22
  %175 = select i1 %45, float %159, float 0xFFF0000000000000, !dbg !22
  %176 = select i1 %45, float %160, float 0xFFF0000000000000, !dbg !22
  %177 = select i1 %45, float %161, float 0xFFF0000000000000, !dbg !22
  %178 = bitcast float %162 to i32, !dbg !23
  %179 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %178, i32 16, i32 31), !dbg !23
  %180 = bitcast i32 %179 to float, !dbg !23
  %181 = fcmp ogt float %162, %180, !dbg !27
  %182 = fcmp uno float %162, 0.000000e+00, !dbg !29
  %183 = or i1 %181, %182, !dbg !30
  %184 = select i1 %183, float %162, float %180, !dbg !31
  %185 = bitcast float %184 to i32, !dbg !23
  %186 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %185, i32 8, i32 31), !dbg !23
  %187 = bitcast i32 %186 to float, !dbg !23
  %188 = fcmp ogt float %184, %187, !dbg !27
  %189 = fcmp uno float %184, 0.000000e+00, !dbg !29
  %190 = or i1 %188, %189, !dbg !30
  %191 = select i1 %190, float %184, float %187, !dbg !31
  %192 = bitcast float %191 to i32, !dbg !23
  %193 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %192, i32 4, i32 31), !dbg !23
  %194 = bitcast i32 %193 to float, !dbg !23
  %195 = fcmp ogt float %191, %194, !dbg !27
  %196 = fcmp uno float %191, 0.000000e+00, !dbg !29
  %197 = or i1 %195, %196, !dbg !30
  %198 = select i1 %197, float %191, float %194, !dbg !31
  %199 = bitcast float %198 to i32, !dbg !23
  %200 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %199, i32 2, i32 31), !dbg !23
  %201 = bitcast i32 %200 to float, !dbg !23
  %202 = fcmp ogt float %198, %201, !dbg !27
  %203 = fcmp uno float %198, 0.000000e+00, !dbg !29
  %204 = or i1 %202, %203, !dbg !30
  %205 = select i1 %204, float %198, float %201, !dbg !31
  %206 = bitcast float %205 to i32, !dbg !23
  %207 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %206, i32 1, i32 31), !dbg !23
  %208 = bitcast i32 %207 to float, !dbg !23
  %209 = fcmp ogt float %205, %208, !dbg !27
  %210 = fcmp uno float %205, 0.000000e+00, !dbg !29
  %211 = or i1 %209, %210, !dbg !30
  %212 = select i1 %211, float %205, float %208, !dbg !31
  %213 = bitcast float %163 to i32, !dbg !23
  %214 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %213, i32 16, i32 31), !dbg !23
  %215 = bitcast i32 %214 to float, !dbg !23
  %216 = fcmp ogt float %163, %215, !dbg !27
  %217 = fcmp uno float %163, 0.000000e+00, !dbg !29
  %218 = or i1 %217, %216, !dbg !30
  %219 = select i1 %218, float %163, float %215, !dbg !31
  %220 = bitcast float %219 to i32, !dbg !23
  %221 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %220, i32 8, i32 31), !dbg !23
  %222 = bitcast i32 %221 to float, !dbg !23
  %223 = fcmp ogt float %219, %222, !dbg !27
  %224 = fcmp uno float %219, 0.000000e+00, !dbg !29
  %225 = or i1 %223, %224, !dbg !30
  %226 = select i1 %225, float %219, float %222, !dbg !31
  %227 = bitcast float %226 to i32, !dbg !23
  %228 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %227, i32 4, i32 31), !dbg !23
  %229 = bitcast i32 %228 to float, !dbg !23
  %230 = fcmp ogt float %226, %229, !dbg !27
  %231 = fcmp uno float %226, 0.000000e+00, !dbg !29
  %232 = or i1 %230, %231, !dbg !30
  %233 = select i1 %232, float %226, float %229, !dbg !31
  %234 = bitcast float %233 to i32, !dbg !23
  %235 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %234, i32 2, i32 31), !dbg !23
  %236 = bitcast i32 %235 to float, !dbg !23
  %237 = fcmp ogt float %233, %236, !dbg !27
  %238 = fcmp uno float %233, 0.000000e+00, !dbg !29
  %239 = or i1 %237, %238, !dbg !30
  %240 = select i1 %239, float %233, float %236, !dbg !31
  %241 = bitcast float %240 to i32, !dbg !23
  %242 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %241, i32 1, i32 31), !dbg !23
  %243 = bitcast i32 %242 to float, !dbg !23
  %244 = fcmp ogt float %240, %243, !dbg !27
  %245 = fcmp uno float %240, 0.000000e+00, !dbg !29
  %246 = or i1 %244, %245, !dbg !30
  %247 = select i1 %246, float %240, float %243, !dbg !31
  %248 = bitcast float %164 to i32, !dbg !23
  %249 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %248, i32 16, i32 31), !dbg !23
  %250 = bitcast i32 %249 to float, !dbg !23
  %251 = fcmp ogt float %164, %250, !dbg !27
  %252 = fcmp uno float %164, 0.000000e+00, !dbg !29
  %253 = or i1 %252, %251, !dbg !30
  %254 = select i1 %253, float %164, float %250, !dbg !31
  %255 = bitcast float %254 to i32, !dbg !23
  %256 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %255, i32 8, i32 31), !dbg !23
  %257 = bitcast i32 %256 to float, !dbg !23
  %258 = fcmp ogt float %254, %257, !dbg !27
  %259 = fcmp uno float %254, 0.000000e+00, !dbg !29
  %260 = or i1 %258, %259, !dbg !30
  %261 = select i1 %260, float %254, float %257, !dbg !31
  %262 = bitcast float %261 to i32, !dbg !23
  %263 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %262, i32 4, i32 31), !dbg !23
  %264 = bitcast i32 %263 to float, !dbg !23
  %265 = fcmp ogt float %261, %264, !dbg !27
  %266 = fcmp uno float %261, 0.000000e+00, !dbg !29
  %267 = or i1 %265, %266, !dbg !30
  %268 = select i1 %267, float %261, float %264, !dbg !31
  %269 = bitcast float %268 to i32, !dbg !23
  %270 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %269, i32 2, i32 31), !dbg !23
  %271 = bitcast i32 %270 to float, !dbg !23
  %272 = fcmp ogt float %268, %271, !dbg !27
  %273 = fcmp uno float %268, 0.000000e+00, !dbg !29
  %274 = or i1 %272, %273, !dbg !30
  %275 = select i1 %274, float %268, float %271, !dbg !31
  %276 = bitcast float %275 to i32, !dbg !23
  %277 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %276, i32 1, i32 31), !dbg !23
  %278 = bitcast i32 %277 to float, !dbg !23
  %279 = fcmp ogt float %275, %278, !dbg !27
  %280 = fcmp uno float %275, 0.000000e+00, !dbg !29
  %281 = or i1 %279, %280, !dbg !30
  %282 = select i1 %281, float %275, float %278, !dbg !31
  %283 = bitcast float %165 to i32, !dbg !23
  %284 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %283, i32 16, i32 31), !dbg !23
  %285 = bitcast i32 %284 to float, !dbg !23
  %286 = fcmp ogt float %165, %285, !dbg !27
  %287 = fcmp uno float %165, 0.000000e+00, !dbg !29
  %288 = or i1 %287, %286, !dbg !30
  %289 = select i1 %288, float %165, float %285, !dbg !31
  %290 = bitcast float %289 to i32, !dbg !23
  %291 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %290, i32 8, i32 31), !dbg !23
  %292 = bitcast i32 %291 to float, !dbg !23
  %293 = fcmp ogt float %289, %292, !dbg !27
  %294 = fcmp uno float %289, 0.000000e+00, !dbg !29
  %295 = or i1 %293, %294, !dbg !30
  %296 = select i1 %295, float %289, float %292, !dbg !31
  %297 = bitcast float %296 to i32, !dbg !23
  %298 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %297, i32 4, i32 31), !dbg !23
  %299 = bitcast i32 %298 to float, !dbg !23
  %300 = fcmp ogt float %296, %299, !dbg !27
  %301 = fcmp uno float %296, 0.000000e+00, !dbg !29
  %302 = or i1 %300, %301, !dbg !30
  %303 = select i1 %302, float %296, float %299, !dbg !31
  %304 = bitcast float %303 to i32, !dbg !23
  %305 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %304, i32 2, i32 31), !dbg !23
  %306 = bitcast i32 %305 to float, !dbg !23
  %307 = fcmp ogt float %303, %306, !dbg !27
  %308 = fcmp uno float %303, 0.000000e+00, !dbg !29
  %309 = or i1 %307, %308, !dbg !30
  %310 = select i1 %309, float %303, float %306, !dbg !31
  %311 = bitcast float %310 to i32, !dbg !23
  %312 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %311, i32 1, i32 31), !dbg !23
  %313 = bitcast i32 %312 to float, !dbg !23
  %314 = fcmp ogt float %310, %313, !dbg !27
  %315 = fcmp uno float %310, 0.000000e+00, !dbg !29
  %316 = or i1 %314, %315, !dbg !30
  %317 = select i1 %316, float %310, float %313, !dbg !31
  %318 = bitcast float %166 to i32, !dbg !23
  %319 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %318, i32 16, i32 31), !dbg !23
  %320 = bitcast i32 %319 to float, !dbg !23
  %321 = fcmp ogt float %166, %320, !dbg !27
  %322 = fcmp uno float %166, 0.000000e+00, !dbg !29
  %323 = or i1 %322, %321, !dbg !30
  %324 = select i1 %323, float %166, float %320, !dbg !31
  %325 = bitcast float %324 to i32, !dbg !23
  %326 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %325, i32 8, i32 31), !dbg !23
  %327 = bitcast i32 %326 to float, !dbg !23
  %328 = fcmp ogt float %324, %327, !dbg !27
  %329 = fcmp uno float %324, 0.000000e+00, !dbg !29
  %330 = or i1 %328, %329, !dbg !30
  %331 = select i1 %330, float %324, float %327, !dbg !31
  %332 = bitcast float %331 to i32, !dbg !23
  %333 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %332, i32 4, i32 31), !dbg !23
  %334 = bitcast i32 %333 to float, !dbg !23
  %335 = fcmp ogt float %331, %334, !dbg !27
  %336 = fcmp uno float %331, 0.000000e+00, !dbg !29
  %337 = or i1 %335, %336, !dbg !30
  %338 = select i1 %337, float %331, float %334, !dbg !31
  %339 = bitcast float %338 to i32, !dbg !23
  %340 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %339, i32 2, i32 31), !dbg !23
  %341 = bitcast i32 %340 to float, !dbg !23
  %342 = fcmp ogt float %338, %341, !dbg !27
  %343 = fcmp uno float %338, 0.000000e+00, !dbg !29
  %344 = or i1 %342, %343, !dbg !30
  %345 = select i1 %344, float %338, float %341, !dbg !31
  %346 = bitcast float %345 to i32, !dbg !23
  %347 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %346, i32 1, i32 31), !dbg !23
  %348 = bitcast i32 %347 to float, !dbg !23
  %349 = fcmp ogt float %345, %348, !dbg !27
  %350 = fcmp uno float %345, 0.000000e+00, !dbg !29
  %351 = or i1 %349, %350, !dbg !30
  %352 = select i1 %351, float %345, float %348, !dbg !31
  %353 = bitcast float %167 to i32, !dbg !23
  %354 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %353, i32 16, i32 31), !dbg !23
  %355 = bitcast i32 %354 to float, !dbg !23
  %356 = fcmp ogt float %167, %355, !dbg !27
  %357 = fcmp uno float %167, 0.000000e+00, !dbg !29
  %358 = or i1 %357, %356, !dbg !30
  %359 = select i1 %358, float %167, float %355, !dbg !31
  %360 = bitcast float %359 to i32, !dbg !23
  %361 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %360, i32 8, i32 31), !dbg !23
  %362 = bitcast i32 %361 to float, !dbg !23
  %363 = fcmp ogt float %359, %362, !dbg !27
  %364 = fcmp uno float %359, 0.000000e+00, !dbg !29
  %365 = or i1 %363, %364, !dbg !30
  %366 = select i1 %365, float %359, float %362, !dbg !31
  %367 = bitcast float %366 to i32, !dbg !23
  %368 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %367, i32 4, i32 31), !dbg !23
  %369 = bitcast i32 %368 to float, !dbg !23
  %370 = fcmp ogt float %366, %369, !dbg !27
  %371 = fcmp uno float %366, 0.000000e+00, !dbg !29
  %372 = or i1 %370, %371, !dbg !30
  %373 = select i1 %372, float %366, float %369, !dbg !31
  %374 = bitcast float %373 to i32, !dbg !23
  %375 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %374, i32 2, i32 31), !dbg !23
  %376 = bitcast i32 %375 to float, !dbg !23
  %377 = fcmp ogt float %373, %376, !dbg !27
  %378 = fcmp uno float %373, 0.000000e+00, !dbg !29
  %379 = or i1 %377, %378, !dbg !30
  %380 = select i1 %379, float %373, float %376, !dbg !31
  %381 = bitcast float %380 to i32, !dbg !23
  %382 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %381, i32 1, i32 31), !dbg !23
  %383 = bitcast i32 %382 to float, !dbg !23
  %384 = fcmp ogt float %380, %383, !dbg !27
  %385 = fcmp uno float %380, 0.000000e+00, !dbg !29
  %386 = or i1 %384, %385, !dbg !30
  %387 = select i1 %386, float %380, float %383, !dbg !31
  %388 = bitcast float %168 to i32, !dbg !23
  %389 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %388, i32 16, i32 31), !dbg !23
  %390 = bitcast i32 %389 to float, !dbg !23
  %391 = fcmp ogt float %168, %390, !dbg !27
  %392 = fcmp uno float %168, 0.000000e+00, !dbg !29
  %393 = or i1 %392, %391, !dbg !30
  %394 = select i1 %393, float %168, float %390, !dbg !31
  %395 = bitcast float %394 to i32, !dbg !23
  %396 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %395, i32 8, i32 31), !dbg !23
  %397 = bitcast i32 %396 to float, !dbg !23
  %398 = fcmp ogt float %394, %397, !dbg !27
  %399 = fcmp uno float %394, 0.000000e+00, !dbg !29
  %400 = or i1 %398, %399, !dbg !30
  %401 = select i1 %400, float %394, float %397, !dbg !31
  %402 = bitcast float %401 to i32, !dbg !23
  %403 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %402, i32 4, i32 31), !dbg !23
  %404 = bitcast i32 %403 to float, !dbg !23
  %405 = fcmp ogt float %401, %404, !dbg !27
  %406 = fcmp uno float %401, 0.000000e+00, !dbg !29
  %407 = or i1 %405, %406, !dbg !30
  %408 = select i1 %407, float %401, float %404, !dbg !31
  %409 = bitcast float %408 to i32, !dbg !23
  %410 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %409, i32 2, i32 31), !dbg !23
  %411 = bitcast i32 %410 to float, !dbg !23
  %412 = fcmp ogt float %408, %411, !dbg !27
  %413 = fcmp uno float %408, 0.000000e+00, !dbg !29
  %414 = or i1 %412, %413, !dbg !30
  %415 = select i1 %414, float %408, float %411, !dbg !31
  %416 = bitcast float %415 to i32, !dbg !23
  %417 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %416, i32 1, i32 31), !dbg !23
  %418 = bitcast i32 %417 to float, !dbg !23
  %419 = fcmp ogt float %415, %418, !dbg !27
  %420 = fcmp uno float %415, 0.000000e+00, !dbg !29
  %421 = or i1 %419, %420, !dbg !30
  %422 = select i1 %421, float %415, float %418, !dbg !31
  %423 = bitcast float %169 to i32, !dbg !23
  %424 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %423, i32 16, i32 31), !dbg !23
  %425 = bitcast i32 %424 to float, !dbg !23
  %426 = fcmp ogt float %169, %425, !dbg !27
  %427 = fcmp uno float %169, 0.000000e+00, !dbg !29
  %428 = or i1 %427, %426, !dbg !30
  %429 = select i1 %428, float %169, float %425, !dbg !31
  %430 = bitcast float %429 to i32, !dbg !23
  %431 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %430, i32 8, i32 31), !dbg !23
  %432 = bitcast i32 %431 to float, !dbg !23
  %433 = fcmp ogt float %429, %432, !dbg !27
  %434 = fcmp uno float %429, 0.000000e+00, !dbg !29
  %435 = or i1 %433, %434, !dbg !30
  %436 = select i1 %435, float %429, float %432, !dbg !31
  %437 = bitcast float %436 to i32, !dbg !23
  %438 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %437, i32 4, i32 31), !dbg !23
  %439 = bitcast i32 %438 to float, !dbg !23
  %440 = fcmp ogt float %436, %439, !dbg !27
  %441 = fcmp uno float %436, 0.000000e+00, !dbg !29
  %442 = or i1 %440, %441, !dbg !30
  %443 = select i1 %442, float %436, float %439, !dbg !31
  %444 = bitcast float %443 to i32, !dbg !23
  %445 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %444, i32 2, i32 31), !dbg !23
  %446 = bitcast i32 %445 to float, !dbg !23
  %447 = fcmp ogt float %443, %446, !dbg !27
  %448 = fcmp uno float %443, 0.000000e+00, !dbg !29
  %449 = or i1 %447, %448, !dbg !30
  %450 = select i1 %449, float %443, float %446, !dbg !31
  %451 = bitcast float %450 to i32, !dbg !23
  %452 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %451, i32 1, i32 31), !dbg !23
  %453 = bitcast i32 %452 to float, !dbg !23
  %454 = fcmp ogt float %450, %453, !dbg !27
  %455 = fcmp uno float %450, 0.000000e+00, !dbg !29
  %456 = or i1 %454, %455, !dbg !30
  %457 = select i1 %456, float %450, float %453, !dbg !31
  %458 = bitcast float %170 to i32, !dbg !23
  %459 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %458, i32 16, i32 31), !dbg !23
  %460 = bitcast i32 %459 to float, !dbg !23
  %461 = fcmp ogt float %170, %460, !dbg !27
  %462 = fcmp uno float %170, 0.000000e+00, !dbg !29
  %463 = or i1 %462, %461, !dbg !30
  %464 = select i1 %463, float %170, float %460, !dbg !31
  %465 = bitcast float %464 to i32, !dbg !23
  %466 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %465, i32 8, i32 31), !dbg !23
  %467 = bitcast i32 %466 to float, !dbg !23
  %468 = fcmp ogt float %464, %467, !dbg !27
  %469 = fcmp uno float %464, 0.000000e+00, !dbg !29
  %470 = or i1 %468, %469, !dbg !30
  %471 = select i1 %470, float %464, float %467, !dbg !31
  %472 = bitcast float %471 to i32, !dbg !23
  %473 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %472, i32 4, i32 31), !dbg !23
  %474 = bitcast i32 %473 to float, !dbg !23
  %475 = fcmp ogt float %471, %474, !dbg !27
  %476 = fcmp uno float %471, 0.000000e+00, !dbg !29
  %477 = or i1 %475, %476, !dbg !30
  %478 = select i1 %477, float %471, float %474, !dbg !31
  %479 = bitcast float %478 to i32, !dbg !23
  %480 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %479, i32 2, i32 31), !dbg !23
  %481 = bitcast i32 %480 to float, !dbg !23
  %482 = fcmp ogt float %478, %481, !dbg !27
  %483 = fcmp uno float %478, 0.000000e+00, !dbg !29
  %484 = or i1 %482, %483, !dbg !30
  %485 = select i1 %484, float %478, float %481, !dbg !31
  %486 = bitcast float %485 to i32, !dbg !23
  %487 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %486, i32 1, i32 31), !dbg !23
  %488 = bitcast i32 %487 to float, !dbg !23
  %489 = fcmp ogt float %485, %488, !dbg !27
  %490 = fcmp uno float %485, 0.000000e+00, !dbg !29
  %491 = or i1 %489, %490, !dbg !30
  %492 = select i1 %491, float %485, float %488, !dbg !31
  %493 = bitcast float %171 to i32, !dbg !23
  %494 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %493, i32 16, i32 31), !dbg !23
  %495 = bitcast i32 %494 to float, !dbg !23
  %496 = fcmp ogt float %171, %495, !dbg !27
  %497 = fcmp uno float %171, 0.000000e+00, !dbg !29
  %498 = or i1 %497, %496, !dbg !30
  %499 = select i1 %498, float %171, float %495, !dbg !31
  %500 = bitcast float %499 to i32, !dbg !23
  %501 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %500, i32 8, i32 31), !dbg !23
  %502 = bitcast i32 %501 to float, !dbg !23
  %503 = fcmp ogt float %499, %502, !dbg !27
  %504 = fcmp uno float %499, 0.000000e+00, !dbg !29
  %505 = or i1 %503, %504, !dbg !30
  %506 = select i1 %505, float %499, float %502, !dbg !31
  %507 = bitcast float %506 to i32, !dbg !23
  %508 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %507, i32 4, i32 31), !dbg !23
  %509 = bitcast i32 %508 to float, !dbg !23
  %510 = fcmp ogt float %506, %509, !dbg !27
  %511 = fcmp uno float %506, 0.000000e+00, !dbg !29
  %512 = or i1 %510, %511, !dbg !30
  %513 = select i1 %512, float %506, float %509, !dbg !31
  %514 = bitcast float %513 to i32, !dbg !23
  %515 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %514, i32 2, i32 31), !dbg !23
  %516 = bitcast i32 %515 to float, !dbg !23
  %517 = fcmp ogt float %513, %516, !dbg !27
  %518 = fcmp uno float %513, 0.000000e+00, !dbg !29
  %519 = or i1 %517, %518, !dbg !30
  %520 = select i1 %519, float %513, float %516, !dbg !31
  %521 = bitcast float %520 to i32, !dbg !23
  %522 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %521, i32 1, i32 31), !dbg !23
  %523 = bitcast i32 %522 to float, !dbg !23
  %524 = fcmp ogt float %520, %523, !dbg !27
  %525 = fcmp uno float %520, 0.000000e+00, !dbg !29
  %526 = or i1 %524, %525, !dbg !30
  %527 = select i1 %526, float %520, float %523, !dbg !31
  %528 = bitcast float %172 to i32, !dbg !23
  %529 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %528, i32 16, i32 31), !dbg !23
  %530 = bitcast i32 %529 to float, !dbg !23
  %531 = fcmp ogt float %172, %530, !dbg !27
  %532 = fcmp uno float %172, 0.000000e+00, !dbg !29
  %533 = or i1 %532, %531, !dbg !30
  %534 = select i1 %533, float %172, float %530, !dbg !31
  %535 = bitcast float %534 to i32, !dbg !23
  %536 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %535, i32 8, i32 31), !dbg !23
  %537 = bitcast i32 %536 to float, !dbg !23
  %538 = fcmp ogt float %534, %537, !dbg !27
  %539 = fcmp uno float %534, 0.000000e+00, !dbg !29
  %540 = or i1 %538, %539, !dbg !30
  %541 = select i1 %540, float %534, float %537, !dbg !31
  %542 = bitcast float %541 to i32, !dbg !23
  %543 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %542, i32 4, i32 31), !dbg !23
  %544 = bitcast i32 %543 to float, !dbg !23
  %545 = fcmp ogt float %541, %544, !dbg !27
  %546 = fcmp uno float %541, 0.000000e+00, !dbg !29
  %547 = or i1 %545, %546, !dbg !30
  %548 = select i1 %547, float %541, float %544, !dbg !31
  %549 = bitcast float %548 to i32, !dbg !23
  %550 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %549, i32 2, i32 31), !dbg !23
  %551 = bitcast i32 %550 to float, !dbg !23
  %552 = fcmp ogt float %548, %551, !dbg !27
  %553 = fcmp uno float %548, 0.000000e+00, !dbg !29
  %554 = or i1 %552, %553, !dbg !30
  %555 = select i1 %554, float %548, float %551, !dbg !31
  %556 = bitcast float %555 to i32, !dbg !23
  %557 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %556, i32 1, i32 31), !dbg !23
  %558 = bitcast i32 %557 to float, !dbg !23
  %559 = fcmp ogt float %555, %558, !dbg !27
  %560 = fcmp uno float %555, 0.000000e+00, !dbg !29
  %561 = or i1 %559, %560, !dbg !30
  %562 = select i1 %561, float %555, float %558, !dbg !31
  %563 = bitcast float %173 to i32, !dbg !23
  %564 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %563, i32 16, i32 31), !dbg !23
  %565 = bitcast i32 %564 to float, !dbg !23
  %566 = fcmp ogt float %173, %565, !dbg !27
  %567 = fcmp uno float %173, 0.000000e+00, !dbg !29
  %568 = or i1 %567, %566, !dbg !30
  %569 = select i1 %568, float %173, float %565, !dbg !31
  %570 = bitcast float %569 to i32, !dbg !23
  %571 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %570, i32 8, i32 31), !dbg !23
  %572 = bitcast i32 %571 to float, !dbg !23
  %573 = fcmp ogt float %569, %572, !dbg !27
  %574 = fcmp uno float %569, 0.000000e+00, !dbg !29
  %575 = or i1 %573, %574, !dbg !30
  %576 = select i1 %575, float %569, float %572, !dbg !31
  %577 = bitcast float %576 to i32, !dbg !23
  %578 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %577, i32 4, i32 31), !dbg !23
  %579 = bitcast i32 %578 to float, !dbg !23
  %580 = fcmp ogt float %576, %579, !dbg !27
  %581 = fcmp uno float %576, 0.000000e+00, !dbg !29
  %582 = or i1 %580, %581, !dbg !30
  %583 = select i1 %582, float %576, float %579, !dbg !31
  %584 = bitcast float %583 to i32, !dbg !23
  %585 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %584, i32 2, i32 31), !dbg !23
  %586 = bitcast i32 %585 to float, !dbg !23
  %587 = fcmp ogt float %583, %586, !dbg !27
  %588 = fcmp uno float %583, 0.000000e+00, !dbg !29
  %589 = or i1 %587, %588, !dbg !30
  %590 = select i1 %589, float %583, float %586, !dbg !31
  %591 = bitcast float %590 to i32, !dbg !23
  %592 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %591, i32 1, i32 31), !dbg !23
  %593 = bitcast i32 %592 to float, !dbg !23
  %594 = fcmp ogt float %590, %593, !dbg !27
  %595 = fcmp uno float %590, 0.000000e+00, !dbg !29
  %596 = or i1 %594, %595, !dbg !30
  %597 = select i1 %596, float %590, float %593, !dbg !31
  %598 = bitcast float %174 to i32, !dbg !23
  %599 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %598, i32 16, i32 31), !dbg !23
  %600 = bitcast i32 %599 to float, !dbg !23
  %601 = fcmp ogt float %174, %600, !dbg !27
  %602 = fcmp uno float %174, 0.000000e+00, !dbg !29
  %603 = or i1 %602, %601, !dbg !30
  %604 = select i1 %603, float %174, float %600, !dbg !31
  %605 = bitcast float %604 to i32, !dbg !23
  %606 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %605, i32 8, i32 31), !dbg !23
  %607 = bitcast i32 %606 to float, !dbg !23
  %608 = fcmp ogt float %604, %607, !dbg !27
  %609 = fcmp uno float %604, 0.000000e+00, !dbg !29
  %610 = or i1 %608, %609, !dbg !30
  %611 = select i1 %610, float %604, float %607, !dbg !31
  %612 = bitcast float %611 to i32, !dbg !23
  %613 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %612, i32 4, i32 31), !dbg !23
  %614 = bitcast i32 %613 to float, !dbg !23
  %615 = fcmp ogt float %611, %614, !dbg !27
  %616 = fcmp uno float %611, 0.000000e+00, !dbg !29
  %617 = or i1 %615, %616, !dbg !30
  %618 = select i1 %617, float %611, float %614, !dbg !31
  %619 = bitcast float %618 to i32, !dbg !23
  %620 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %619, i32 2, i32 31), !dbg !23
  %621 = bitcast i32 %620 to float, !dbg !23
  %622 = fcmp ogt float %618, %621, !dbg !27
  %623 = fcmp uno float %618, 0.000000e+00, !dbg !29
  %624 = or i1 %622, %623, !dbg !30
  %625 = select i1 %624, float %618, float %621, !dbg !31
  %626 = bitcast float %625 to i32, !dbg !23
  %627 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %626, i32 1, i32 31), !dbg !23
  %628 = bitcast i32 %627 to float, !dbg !23
  %629 = fcmp ogt float %625, %628, !dbg !27
  %630 = fcmp uno float %625, 0.000000e+00, !dbg !29
  %631 = or i1 %629, %630, !dbg !30
  %632 = select i1 %631, float %625, float %628, !dbg !31
  %633 = bitcast float %175 to i32, !dbg !23
  %634 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %633, i32 16, i32 31), !dbg !23
  %635 = bitcast i32 %634 to float, !dbg !23
  %636 = fcmp ogt float %175, %635, !dbg !27
  %637 = fcmp uno float %175, 0.000000e+00, !dbg !29
  %638 = or i1 %637, %636, !dbg !30
  %639 = select i1 %638, float %175, float %635, !dbg !31
  %640 = bitcast float %639 to i32, !dbg !23
  %641 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %640, i32 8, i32 31), !dbg !23
  %642 = bitcast i32 %641 to float, !dbg !23
  %643 = fcmp ogt float %639, %642, !dbg !27
  %644 = fcmp uno float %639, 0.000000e+00, !dbg !29
  %645 = or i1 %643, %644, !dbg !30
  %646 = select i1 %645, float %639, float %642, !dbg !31
  %647 = bitcast float %646 to i32, !dbg !23
  %648 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %647, i32 4, i32 31), !dbg !23
  %649 = bitcast i32 %648 to float, !dbg !23
  %650 = fcmp ogt float %646, %649, !dbg !27
  %651 = fcmp uno float %646, 0.000000e+00, !dbg !29
  %652 = or i1 %650, %651, !dbg !30
  %653 = select i1 %652, float %646, float %649, !dbg !31
  %654 = bitcast float %653 to i32, !dbg !23
  %655 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %654, i32 2, i32 31), !dbg !23
  %656 = bitcast i32 %655 to float, !dbg !23
  %657 = fcmp ogt float %653, %656, !dbg !27
  %658 = fcmp uno float %653, 0.000000e+00, !dbg !29
  %659 = or i1 %657, %658, !dbg !30
  %660 = select i1 %659, float %653, float %656, !dbg !31
  %661 = bitcast float %660 to i32, !dbg !23
  %662 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %661, i32 1, i32 31), !dbg !23
  %663 = bitcast i32 %662 to float, !dbg !23
  %664 = fcmp ogt float %660, %663, !dbg !27
  %665 = fcmp uno float %660, 0.000000e+00, !dbg !29
  %666 = or i1 %664, %665, !dbg !30
  %667 = select i1 %666, float %660, float %663, !dbg !31
  %668 = bitcast float %176 to i32, !dbg !23
  %669 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %668, i32 16, i32 31), !dbg !23
  %670 = bitcast i32 %669 to float, !dbg !23
  %671 = fcmp ogt float %176, %670, !dbg !27
  %672 = fcmp uno float %176, 0.000000e+00, !dbg !29
  %673 = or i1 %672, %671, !dbg !30
  %674 = select i1 %673, float %176, float %670, !dbg !31
  %675 = bitcast float %674 to i32, !dbg !23
  %676 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %675, i32 8, i32 31), !dbg !23
  %677 = bitcast i32 %676 to float, !dbg !23
  %678 = fcmp ogt float %674, %677, !dbg !27
  %679 = fcmp uno float %674, 0.000000e+00, !dbg !29
  %680 = or i1 %678, %679, !dbg !30
  %681 = select i1 %680, float %674, float %677, !dbg !31
  %682 = bitcast float %681 to i32, !dbg !23
  %683 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %682, i32 4, i32 31), !dbg !23
  %684 = bitcast i32 %683 to float, !dbg !23
  %685 = fcmp ogt float %681, %684, !dbg !27
  %686 = fcmp uno float %681, 0.000000e+00, !dbg !29
  %687 = or i1 %685, %686, !dbg !30
  %688 = select i1 %687, float %681, float %684, !dbg !31
  %689 = bitcast float %688 to i32, !dbg !23
  %690 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %689, i32 2, i32 31), !dbg !23
  %691 = bitcast i32 %690 to float, !dbg !23
  %692 = fcmp ogt float %688, %691, !dbg !27
  %693 = fcmp uno float %688, 0.000000e+00, !dbg !29
  %694 = or i1 %692, %693, !dbg !30
  %695 = select i1 %694, float %688, float %691, !dbg !31
  %696 = bitcast float %695 to i32, !dbg !23
  %697 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %696, i32 1, i32 31), !dbg !23
  %698 = bitcast i32 %697 to float, !dbg !23
  %699 = fcmp ogt float %695, %698, !dbg !27
  %700 = fcmp uno float %695, 0.000000e+00, !dbg !29
  %701 = or i1 %699, %700, !dbg !30
  %702 = select i1 %701, float %695, float %698, !dbg !31
  %703 = bitcast float %177 to i32, !dbg !23
  %704 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %703, i32 16, i32 31), !dbg !23
  %705 = bitcast i32 %704 to float, !dbg !23
  %706 = fcmp ogt float %177, %705, !dbg !27
  %707 = fcmp uno float %177, 0.000000e+00, !dbg !29
  %708 = or i1 %707, %706, !dbg !30
  %709 = select i1 %708, float %177, float %705, !dbg !31
  %710 = bitcast float %709 to i32, !dbg !23
  %711 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %710, i32 8, i32 31), !dbg !23
  %712 = bitcast i32 %711 to float, !dbg !23
  %713 = fcmp ogt float %709, %712, !dbg !27
  %714 = fcmp uno float %709, 0.000000e+00, !dbg !29
  %715 = or i1 %713, %714, !dbg !30
  %716 = select i1 %715, float %709, float %712, !dbg !31
  %717 = bitcast float %716 to i32, !dbg !23
  %718 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %717, i32 4, i32 31), !dbg !23
  %719 = bitcast i32 %718 to float, !dbg !23
  %720 = fcmp ogt float %716, %719, !dbg !27
  %721 = fcmp uno float %716, 0.000000e+00, !dbg !29
  %722 = or i1 %720, %721, !dbg !30
  %723 = select i1 %722, float %716, float %719, !dbg !31
  %724 = bitcast float %723 to i32, !dbg !23
  %725 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %724, i32 2, i32 31), !dbg !23
  %726 = bitcast i32 %725 to float, !dbg !23
  %727 = fcmp ogt float %723, %726, !dbg !27
  %728 = fcmp uno float %723, 0.000000e+00, !dbg !29
  %729 = or i1 %727, %728, !dbg !30
  %730 = select i1 %729, float %723, float %726, !dbg !31
  %731 = bitcast float %730 to i32, !dbg !23
  %732 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %731, i32 1, i32 31), !dbg !23
  %733 = bitcast i32 %732 to float, !dbg !23
  %734 = fcmp ogt float %730, %733, !dbg !27
  %735 = fcmp uno float %730, 0.000000e+00, !dbg !29
  %736 = or i1 %734, %735, !dbg !30
  %737 = select i1 %736, float %730, float %733, !dbg !31
  %738 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %10, !dbg !32
  %739 = bitcast float %212 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %738, <1 x i32> %739, i1 true) #3, !dbg !32
  %740 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %11, !dbg !32
  %741 = bitcast float %247 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %740, <1 x i32> %741, i1 true) #3, !dbg !32
  %742 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %12, !dbg !32
  %743 = bitcast float %282 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %742, <1 x i32> %743, i1 true) #3, !dbg !32
  %744 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %13, !dbg !32
  %745 = bitcast float %317 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %744, <1 x i32> %745, i1 true) #3, !dbg !32
  %746 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %14, !dbg !32
  %747 = bitcast float %352 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %746, <1 x i32> %747, i1 true) #3, !dbg !32
  %748 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %15, !dbg !32
  %749 = bitcast float %387 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %748, <1 x i32> %749, i1 true) #3, !dbg !32
  %750 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %16, !dbg !32
  %751 = bitcast float %422 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %750, <1 x i32> %751, i1 true) #3, !dbg !32
  %752 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %17, !dbg !32
  %753 = bitcast float %457 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %752, <1 x i32> %753, i1 true) #3, !dbg !32
  %754 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %18, !dbg !32
  %755 = bitcast float %492 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %754, <1 x i32> %755, i1 true) #3, !dbg !32
  %756 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %19, !dbg !32
  %757 = bitcast float %527 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %756, <1 x i32> %757, i1 true) #3, !dbg !32
  %758 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %20, !dbg !32
  %759 = bitcast float %562 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %758, <1 x i32> %759, i1 true) #3, !dbg !32
  %760 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %21, !dbg !32
  %761 = bitcast float %597 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %760, <1 x i32> %761, i1 true) #3, !dbg !32
  %762 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %22, !dbg !32
  %763 = bitcast float %632 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %762, <1 x i32> %763, i1 true) #3, !dbg !32
  %764 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %23, !dbg !32
  %765 = bitcast float %667 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %764, <1 x i32> %765, i1 true) #3, !dbg !32
  %766 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %24, !dbg !32
  %767 = bitcast float %702 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %766, <1 x i32> %767, i1 true) #3, !dbg !32
  %768 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %25, !dbg !32
  %769 = bitcast float %737 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %768, <1 x i32> %769, i1 true) #3, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %770 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %27, !dbg !32
  %771 = load i32, ptr addrspace(3) %770, align 4, !dbg !32
  %772 = fsub float %146, %212, !dbg !33
  %773 = fsub float %147, %247, !dbg !33
  %774 = fsub float %148, %282, !dbg !33
  %775 = fsub float %149, %317, !dbg !33
  %776 = fsub float %150, %352, !dbg !33
  %777 = fsub float %151, %387, !dbg !33
  %778 = fsub float %152, %422, !dbg !33
  %779 = fsub float %153, %457, !dbg !33
  %780 = fsub float %154, %492, !dbg !33
  %781 = fsub float %155, %527, !dbg !33
  %782 = fsub float %156, %562, !dbg !33
  %783 = fsub float %157, %597, !dbg !33
  %784 = fsub float %158, %632, !dbg !33
  %785 = fsub float %159, %667, !dbg !33
  %786 = fsub float %160, %702, !dbg !33
  %787 = fsub float %161, %737, !dbg !33
  %788 = fmul float %772, 0x3FF7154760000000, !dbg !34
  %789 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %788) #3, !dbg !34
  %790 = fmul float %773, 0x3FF7154760000000, !dbg !34
  %791 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %790) #3, !dbg !34
  %792 = fmul float %774, 0x3FF7154760000000, !dbg !34
  %793 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %792) #3, !dbg !34
  %794 = fmul float %775, 0x3FF7154760000000, !dbg !34
  %795 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %794) #3, !dbg !34
  %796 = fmul float %776, 0x3FF7154760000000, !dbg !34
  %797 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %796) #3, !dbg !34
  %798 = fmul float %777, 0x3FF7154760000000, !dbg !34
  %799 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %798) #3, !dbg !34
  %800 = fmul float %778, 0x3FF7154760000000, !dbg !34
  %801 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %800) #3, !dbg !34
  %802 = fmul float %779, 0x3FF7154760000000, !dbg !34
  %803 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %802) #3, !dbg !34
  %804 = fmul float %780, 0x3FF7154760000000, !dbg !34
  %805 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %804) #3, !dbg !34
  %806 = fmul float %781, 0x3FF7154760000000, !dbg !34
  %807 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %806) #3, !dbg !34
  %808 = fmul float %782, 0x3FF7154760000000, !dbg !34
  %809 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %808) #3, !dbg !34
  %810 = fmul float %783, 0x3FF7154760000000, !dbg !34
  %811 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %810) #3, !dbg !34
  %812 = fmul float %784, 0x3FF7154760000000, !dbg !34
  %813 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %812) #3, !dbg !34
  %814 = fmul float %785, 0x3FF7154760000000, !dbg !34
  %815 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %814) #3, !dbg !34
  %816 = fmul float %786, 0x3FF7154760000000, !dbg !34
  %817 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %816) #3, !dbg !34
  %818 = fmul float %787, 0x3FF7154760000000, !dbg !34
  %819 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %818) #3, !dbg !34
  %820 = select i1 %45, float %789, float 0.000000e+00, !dbg !35
  %821 = select i1 %45, float %791, float 0.000000e+00, !dbg !35
  %822 = select i1 %45, float %793, float 0.000000e+00, !dbg !35
  %823 = select i1 %45, float %795, float 0.000000e+00, !dbg !35
  %824 = select i1 %45, float %797, float 0.000000e+00, !dbg !35
  %825 = select i1 %45, float %799, float 0.000000e+00, !dbg !35
  %826 = select i1 %45, float %801, float 0.000000e+00, !dbg !35
  %827 = select i1 %45, float %803, float 0.000000e+00, !dbg !35
  %828 = select i1 %45, float %805, float 0.000000e+00, !dbg !35
  %829 = select i1 %45, float %807, float 0.000000e+00, !dbg !35
  %830 = select i1 %45, float %809, float 0.000000e+00, !dbg !35
  %831 = select i1 %45, float %811, float 0.000000e+00, !dbg !35
  %832 = select i1 %45, float %813, float 0.000000e+00, !dbg !35
  %833 = select i1 %45, float %815, float 0.000000e+00, !dbg !35
  %834 = select i1 %45, float %817, float 0.000000e+00, !dbg !35
  %835 = select i1 %45, float %819, float 0.000000e+00, !dbg !35
  %836 = bitcast float %820 to i32, !dbg !36
  %837 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %836, i32 16, i32 31), !dbg !36
  %838 = bitcast i32 %837 to float, !dbg !36
  %839 = fadd float %820, %838, !dbg !40
  %840 = bitcast float %839 to i32, !dbg !36
  %841 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %840, i32 8, i32 31), !dbg !36
  %842 = bitcast i32 %841 to float, !dbg !36
  %843 = fadd float %839, %842, !dbg !40
  %844 = bitcast float %843 to i32, !dbg !36
  %845 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %844, i32 4, i32 31), !dbg !36
  %846 = bitcast i32 %845 to float, !dbg !36
  %847 = fadd float %843, %846, !dbg !40
  %848 = bitcast float %847 to i32, !dbg !36
  %849 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %848, i32 2, i32 31), !dbg !36
  %850 = bitcast i32 %849 to float, !dbg !36
  %851 = fadd float %847, %850, !dbg !40
  %852 = bitcast float %851 to i32, !dbg !36
  %853 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %852, i32 1, i32 31), !dbg !36
  %854 = bitcast i32 %853 to float, !dbg !36
  %855 = fadd float %851, %854, !dbg !40
  %856 = bitcast float %821 to i32, !dbg !36
  %857 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %856, i32 16, i32 31), !dbg !36
  %858 = bitcast i32 %857 to float, !dbg !36
  %859 = fadd float %821, %858, !dbg !40
  %860 = bitcast float %859 to i32, !dbg !36
  %861 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %860, i32 8, i32 31), !dbg !36
  %862 = bitcast i32 %861 to float, !dbg !36
  %863 = fadd float %859, %862, !dbg !40
  %864 = bitcast float %863 to i32, !dbg !36
  %865 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %864, i32 4, i32 31), !dbg !36
  %866 = bitcast i32 %865 to float, !dbg !36
  %867 = fadd float %863, %866, !dbg !40
  %868 = bitcast float %867 to i32, !dbg !36
  %869 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %868, i32 2, i32 31), !dbg !36
  %870 = bitcast i32 %869 to float, !dbg !36
  %871 = fadd float %867, %870, !dbg !40
  %872 = bitcast float %871 to i32, !dbg !36
  %873 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %872, i32 1, i32 31), !dbg !36
  %874 = bitcast i32 %873 to float, !dbg !36
  %875 = fadd float %871, %874, !dbg !40
  %876 = bitcast float %822 to i32, !dbg !36
  %877 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %876, i32 16, i32 31), !dbg !36
  %878 = bitcast i32 %877 to float, !dbg !36
  %879 = fadd float %822, %878, !dbg !40
  %880 = bitcast float %879 to i32, !dbg !36
  %881 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %880, i32 8, i32 31), !dbg !36
  %882 = bitcast i32 %881 to float, !dbg !36
  %883 = fadd float %879, %882, !dbg !40
  %884 = bitcast float %883 to i32, !dbg !36
  %885 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %884, i32 4, i32 31), !dbg !36
  %886 = bitcast i32 %885 to float, !dbg !36
  %887 = fadd float %883, %886, !dbg !40
  %888 = bitcast float %887 to i32, !dbg !36
  %889 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %888, i32 2, i32 31), !dbg !36
  %890 = bitcast i32 %889 to float, !dbg !36
  %891 = fadd float %887, %890, !dbg !40
  %892 = bitcast float %891 to i32, !dbg !36
  %893 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %892, i32 1, i32 31), !dbg !36
  %894 = bitcast i32 %893 to float, !dbg !36
  %895 = fadd float %891, %894, !dbg !40
  %896 = bitcast float %823 to i32, !dbg !36
  %897 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %896, i32 16, i32 31), !dbg !36
  %898 = bitcast i32 %897 to float, !dbg !36
  %899 = fadd float %823, %898, !dbg !40
  %900 = bitcast float %899 to i32, !dbg !36
  %901 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %900, i32 8, i32 31), !dbg !36
  %902 = bitcast i32 %901 to float, !dbg !36
  %903 = fadd float %899, %902, !dbg !40
  %904 = bitcast float %903 to i32, !dbg !36
  %905 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %904, i32 4, i32 31), !dbg !36
  %906 = bitcast i32 %905 to float, !dbg !36
  %907 = fadd float %903, %906, !dbg !40
  %908 = bitcast float %907 to i32, !dbg !36
  %909 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %908, i32 2, i32 31), !dbg !36
  %910 = bitcast i32 %909 to float, !dbg !36
  %911 = fadd float %907, %910, !dbg !40
  %912 = bitcast float %911 to i32, !dbg !36
  %913 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %912, i32 1, i32 31), !dbg !36
  %914 = bitcast i32 %913 to float, !dbg !36
  %915 = fadd float %911, %914, !dbg !40
  %916 = bitcast float %824 to i32, !dbg !36
  %917 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %916, i32 16, i32 31), !dbg !36
  %918 = bitcast i32 %917 to float, !dbg !36
  %919 = fadd float %824, %918, !dbg !40
  %920 = bitcast float %919 to i32, !dbg !36
  %921 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %920, i32 8, i32 31), !dbg !36
  %922 = bitcast i32 %921 to float, !dbg !36
  %923 = fadd float %919, %922, !dbg !40
  %924 = bitcast float %923 to i32, !dbg !36
  %925 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %924, i32 4, i32 31), !dbg !36
  %926 = bitcast i32 %925 to float, !dbg !36
  %927 = fadd float %923, %926, !dbg !40
  %928 = bitcast float %927 to i32, !dbg !36
  %929 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %928, i32 2, i32 31), !dbg !36
  %930 = bitcast i32 %929 to float, !dbg !36
  %931 = fadd float %927, %930, !dbg !40
  %932 = bitcast float %931 to i32, !dbg !36
  %933 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %932, i32 1, i32 31), !dbg !36
  %934 = bitcast i32 %933 to float, !dbg !36
  %935 = fadd float %931, %934, !dbg !40
  %936 = bitcast float %825 to i32, !dbg !36
  %937 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %936, i32 16, i32 31), !dbg !36
  %938 = bitcast i32 %937 to float, !dbg !36
  %939 = fadd float %825, %938, !dbg !40
  %940 = bitcast float %939 to i32, !dbg !36
  %941 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %940, i32 8, i32 31), !dbg !36
  %942 = bitcast i32 %941 to float, !dbg !36
  %943 = fadd float %939, %942, !dbg !40
  %944 = bitcast float %943 to i32, !dbg !36
  %945 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %944, i32 4, i32 31), !dbg !36
  %946 = bitcast i32 %945 to float, !dbg !36
  %947 = fadd float %943, %946, !dbg !40
  %948 = bitcast float %947 to i32, !dbg !36
  %949 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %948, i32 2, i32 31), !dbg !36
  %950 = bitcast i32 %949 to float, !dbg !36
  %951 = fadd float %947, %950, !dbg !40
  %952 = bitcast float %951 to i32, !dbg !36
  %953 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %952, i32 1, i32 31), !dbg !36
  %954 = bitcast i32 %953 to float, !dbg !36
  %955 = fadd float %951, %954, !dbg !40
  %956 = bitcast float %826 to i32, !dbg !36
  %957 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %956, i32 16, i32 31), !dbg !36
  %958 = bitcast i32 %957 to float, !dbg !36
  %959 = fadd float %826, %958, !dbg !40
  %960 = bitcast float %959 to i32, !dbg !36
  %961 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %960, i32 8, i32 31), !dbg !36
  %962 = bitcast i32 %961 to float, !dbg !36
  %963 = fadd float %959, %962, !dbg !40
  %964 = bitcast float %963 to i32, !dbg !36
  %965 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %964, i32 4, i32 31), !dbg !36
  %966 = bitcast i32 %965 to float, !dbg !36
  %967 = fadd float %963, %966, !dbg !40
  %968 = bitcast float %967 to i32, !dbg !36
  %969 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %968, i32 2, i32 31), !dbg !36
  %970 = bitcast i32 %969 to float, !dbg !36
  %971 = fadd float %967, %970, !dbg !40
  %972 = bitcast float %971 to i32, !dbg !36
  %973 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %972, i32 1, i32 31), !dbg !36
  %974 = bitcast i32 %973 to float, !dbg !36
  %975 = fadd float %971, %974, !dbg !40
  %976 = bitcast float %827 to i32, !dbg !36
  %977 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %976, i32 16, i32 31), !dbg !36
  %978 = bitcast i32 %977 to float, !dbg !36
  %979 = fadd float %827, %978, !dbg !40
  %980 = bitcast float %979 to i32, !dbg !36
  %981 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %980, i32 8, i32 31), !dbg !36
  %982 = bitcast i32 %981 to float, !dbg !36
  %983 = fadd float %979, %982, !dbg !40
  %984 = bitcast float %983 to i32, !dbg !36
  %985 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %984, i32 4, i32 31), !dbg !36
  %986 = bitcast i32 %985 to float, !dbg !36
  %987 = fadd float %983, %986, !dbg !40
  %988 = bitcast float %987 to i32, !dbg !36
  %989 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %988, i32 2, i32 31), !dbg !36
  %990 = bitcast i32 %989 to float, !dbg !36
  %991 = fadd float %987, %990, !dbg !40
  %992 = bitcast float %991 to i32, !dbg !36
  %993 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %992, i32 1, i32 31), !dbg !36
  %994 = bitcast i32 %993 to float, !dbg !36
  %995 = fadd float %991, %994, !dbg !40
  %996 = bitcast float %828 to i32, !dbg !36
  %997 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %996, i32 16, i32 31), !dbg !36
  %998 = bitcast i32 %997 to float, !dbg !36
  %999 = fadd float %828, %998, !dbg !40
  %1000 = bitcast float %999 to i32, !dbg !36
  %1001 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1000, i32 8, i32 31), !dbg !36
  %1002 = bitcast i32 %1001 to float, !dbg !36
  %1003 = fadd float %999, %1002, !dbg !40
  %1004 = bitcast float %1003 to i32, !dbg !36
  %1005 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1004, i32 4, i32 31), !dbg !36
  %1006 = bitcast i32 %1005 to float, !dbg !36
  %1007 = fadd float %1003, %1006, !dbg !40
  %1008 = bitcast float %1007 to i32, !dbg !36
  %1009 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1008, i32 2, i32 31), !dbg !36
  %1010 = bitcast i32 %1009 to float, !dbg !36
  %1011 = fadd float %1007, %1010, !dbg !40
  %1012 = bitcast float %1011 to i32, !dbg !36
  %1013 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1012, i32 1, i32 31), !dbg !36
  %1014 = bitcast i32 %1013 to float, !dbg !36
  %1015 = fadd float %1011, %1014, !dbg !40
  %1016 = bitcast float %829 to i32, !dbg !36
  %1017 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1016, i32 16, i32 31), !dbg !36
  %1018 = bitcast i32 %1017 to float, !dbg !36
  %1019 = fadd float %829, %1018, !dbg !40
  %1020 = bitcast float %1019 to i32, !dbg !36
  %1021 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1020, i32 8, i32 31), !dbg !36
  %1022 = bitcast i32 %1021 to float, !dbg !36
  %1023 = fadd float %1019, %1022, !dbg !40
  %1024 = bitcast float %1023 to i32, !dbg !36
  %1025 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1024, i32 4, i32 31), !dbg !36
  %1026 = bitcast i32 %1025 to float, !dbg !36
  %1027 = fadd float %1023, %1026, !dbg !40
  %1028 = bitcast float %1027 to i32, !dbg !36
  %1029 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1028, i32 2, i32 31), !dbg !36
  %1030 = bitcast i32 %1029 to float, !dbg !36
  %1031 = fadd float %1027, %1030, !dbg !40
  %1032 = bitcast float %1031 to i32, !dbg !36
  %1033 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1032, i32 1, i32 31), !dbg !36
  %1034 = bitcast i32 %1033 to float, !dbg !36
  %1035 = fadd float %1031, %1034, !dbg !40
  %1036 = bitcast float %830 to i32, !dbg !36
  %1037 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1036, i32 16, i32 31), !dbg !36
  %1038 = bitcast i32 %1037 to float, !dbg !36
  %1039 = fadd float %830, %1038, !dbg !40
  %1040 = bitcast float %1039 to i32, !dbg !36
  %1041 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1040, i32 8, i32 31), !dbg !36
  %1042 = bitcast i32 %1041 to float, !dbg !36
  %1043 = fadd float %1039, %1042, !dbg !40
  %1044 = bitcast float %1043 to i32, !dbg !36
  %1045 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1044, i32 4, i32 31), !dbg !36
  %1046 = bitcast i32 %1045 to float, !dbg !36
  %1047 = fadd float %1043, %1046, !dbg !40
  %1048 = bitcast float %1047 to i32, !dbg !36
  %1049 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1048, i32 2, i32 31), !dbg !36
  %1050 = bitcast i32 %1049 to float, !dbg !36
  %1051 = fadd float %1047, %1050, !dbg !40
  %1052 = bitcast float %1051 to i32, !dbg !36
  %1053 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1052, i32 1, i32 31), !dbg !36
  %1054 = bitcast i32 %1053 to float, !dbg !36
  %1055 = fadd float %1051, %1054, !dbg !40
  %1056 = bitcast float %831 to i32, !dbg !36
  %1057 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1056, i32 16, i32 31), !dbg !36
  %1058 = bitcast i32 %1057 to float, !dbg !36
  %1059 = fadd float %831, %1058, !dbg !40
  %1060 = bitcast float %1059 to i32, !dbg !36
  %1061 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1060, i32 8, i32 31), !dbg !36
  %1062 = bitcast i32 %1061 to float, !dbg !36
  %1063 = fadd float %1059, %1062, !dbg !40
  %1064 = bitcast float %1063 to i32, !dbg !36
  %1065 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1064, i32 4, i32 31), !dbg !36
  %1066 = bitcast i32 %1065 to float, !dbg !36
  %1067 = fadd float %1063, %1066, !dbg !40
  %1068 = bitcast float %1067 to i32, !dbg !36
  %1069 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1068, i32 2, i32 31), !dbg !36
  %1070 = bitcast i32 %1069 to float, !dbg !36
  %1071 = fadd float %1067, %1070, !dbg !40
  %1072 = bitcast float %1071 to i32, !dbg !36
  %1073 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1072, i32 1, i32 31), !dbg !36
  %1074 = bitcast i32 %1073 to float, !dbg !36
  %1075 = fadd float %1071, %1074, !dbg !40
  %1076 = bitcast float %832 to i32, !dbg !36
  %1077 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1076, i32 16, i32 31), !dbg !36
  %1078 = bitcast i32 %1077 to float, !dbg !36
  %1079 = fadd float %832, %1078, !dbg !40
  %1080 = bitcast float %1079 to i32, !dbg !36
  %1081 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1080, i32 8, i32 31), !dbg !36
  %1082 = bitcast i32 %1081 to float, !dbg !36
  %1083 = fadd float %1079, %1082, !dbg !40
  %1084 = bitcast float %1083 to i32, !dbg !36
  %1085 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1084, i32 4, i32 31), !dbg !36
  %1086 = bitcast i32 %1085 to float, !dbg !36
  %1087 = fadd float %1083, %1086, !dbg !40
  %1088 = bitcast float %1087 to i32, !dbg !36
  %1089 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1088, i32 2, i32 31), !dbg !36
  %1090 = bitcast i32 %1089 to float, !dbg !36
  %1091 = fadd float %1087, %1090, !dbg !40
  %1092 = bitcast float %1091 to i32, !dbg !36
  %1093 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1092, i32 1, i32 31), !dbg !36
  %1094 = bitcast i32 %1093 to float, !dbg !36
  %1095 = fadd float %1091, %1094, !dbg !40
  %1096 = bitcast float %833 to i32, !dbg !36
  %1097 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1096, i32 16, i32 31), !dbg !36
  %1098 = bitcast i32 %1097 to float, !dbg !36
  %1099 = fadd float %833, %1098, !dbg !40
  %1100 = bitcast float %1099 to i32, !dbg !36
  %1101 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1100, i32 8, i32 31), !dbg !36
  %1102 = bitcast i32 %1101 to float, !dbg !36
  %1103 = fadd float %1099, %1102, !dbg !40
  %1104 = bitcast float %1103 to i32, !dbg !36
  %1105 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1104, i32 4, i32 31), !dbg !36
  %1106 = bitcast i32 %1105 to float, !dbg !36
  %1107 = fadd float %1103, %1106, !dbg !40
  %1108 = bitcast float %1107 to i32, !dbg !36
  %1109 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1108, i32 2, i32 31), !dbg !36
  %1110 = bitcast i32 %1109 to float, !dbg !36
  %1111 = fadd float %1107, %1110, !dbg !40
  %1112 = bitcast float %1111 to i32, !dbg !36
  %1113 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1112, i32 1, i32 31), !dbg !36
  %1114 = bitcast i32 %1113 to float, !dbg !36
  %1115 = fadd float %1111, %1114, !dbg !40
  %1116 = bitcast float %834 to i32, !dbg !36
  %1117 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1116, i32 16, i32 31), !dbg !36
  %1118 = bitcast i32 %1117 to float, !dbg !36
  %1119 = fadd float %834, %1118, !dbg !40
  %1120 = bitcast float %1119 to i32, !dbg !36
  %1121 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1120, i32 8, i32 31), !dbg !36
  %1122 = bitcast i32 %1121 to float, !dbg !36
  %1123 = fadd float %1119, %1122, !dbg !40
  %1124 = bitcast float %1123 to i32, !dbg !36
  %1125 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1124, i32 4, i32 31), !dbg !36
  %1126 = bitcast i32 %1125 to float, !dbg !36
  %1127 = fadd float %1123, %1126, !dbg !40
  %1128 = bitcast float %1127 to i32, !dbg !36
  %1129 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1128, i32 2, i32 31), !dbg !36
  %1130 = bitcast i32 %1129 to float, !dbg !36
  %1131 = fadd float %1127, %1130, !dbg !40
  %1132 = bitcast float %1131 to i32, !dbg !36
  %1133 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1132, i32 1, i32 31), !dbg !36
  %1134 = bitcast i32 %1133 to float, !dbg !36
  %1135 = fadd float %1131, %1134, !dbg !40
  %1136 = bitcast float %835 to i32, !dbg !36
  %1137 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1136, i32 16, i32 31), !dbg !36
  %1138 = bitcast i32 %1137 to float, !dbg !36
  %1139 = fadd float %835, %1138, !dbg !40
  %1140 = bitcast float %1139 to i32, !dbg !36
  %1141 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1140, i32 8, i32 31), !dbg !36
  %1142 = bitcast i32 %1141 to float, !dbg !36
  %1143 = fadd float %1139, %1142, !dbg !40
  %1144 = bitcast float %1143 to i32, !dbg !36
  %1145 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1144, i32 4, i32 31), !dbg !36
  %1146 = bitcast i32 %1145 to float, !dbg !36
  %1147 = fadd float %1143, %1146, !dbg !40
  %1148 = bitcast float %1147 to i32, !dbg !36
  %1149 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1148, i32 2, i32 31), !dbg !36
  %1150 = bitcast i32 %1149 to float, !dbg !36
  %1151 = fadd float %1147, %1150, !dbg !40
  %1152 = bitcast float %1151 to i32, !dbg !36
  %1153 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1152, i32 1, i32 31), !dbg !36
  %1154 = bitcast i32 %1153 to float, !dbg !36
  %1155 = fadd float %1151, %1154, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %1156 = bitcast float %855 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %738, <1 x i32> %1156, i1 true) #3, !dbg !42
  %1157 = bitcast float %875 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %740, <1 x i32> %1157, i1 true) #3, !dbg !42
  %1158 = bitcast float %895 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %742, <1 x i32> %1158, i1 true) #3, !dbg !42
  %1159 = bitcast float %915 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %744, <1 x i32> %1159, i1 true) #3, !dbg !42
  %1160 = bitcast float %935 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %746, <1 x i32> %1160, i1 true) #3, !dbg !42
  %1161 = bitcast float %955 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %748, <1 x i32> %1161, i1 true) #3, !dbg !42
  %1162 = bitcast float %975 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %750, <1 x i32> %1162, i1 true) #3, !dbg !42
  %1163 = bitcast float %995 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %752, <1 x i32> %1163, i1 true) #3, !dbg !42
  %1164 = bitcast float %1015 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %754, <1 x i32> %1164, i1 true) #3, !dbg !42
  %1165 = bitcast float %1035 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %756, <1 x i32> %1165, i1 true) #3, !dbg !42
  %1166 = bitcast float %1055 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %758, <1 x i32> %1166, i1 true) #3, !dbg !42
  %1167 = bitcast float %1075 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %760, <1 x i32> %1167, i1 true) #3, !dbg !42
  %1168 = bitcast float %1095 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %762, <1 x i32> %1168, i1 true) #3, !dbg !42
  %1169 = bitcast float %1115 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %764, <1 x i32> %1169, i1 true) #3, !dbg !42
  %1170 = bitcast float %1135 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %766, <1 x i32> %1170, i1 true) #3, !dbg !42
  %1171 = bitcast float %1155 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %768, <1 x i32> %1171, i1 true) #3, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %1172 = load i32, ptr addrspace(3) %770, align 4, !dbg !42
  %1173 = sext i32 %44 to i64, !dbg !43
  %1174 = getelementptr float, ptr addrspace(1) %2, i64 %1173, !dbg !43
  %1175 = and i32 %9, 128, !dbg !44
  %1176 = icmp eq i32 %1175, 0, !dbg !44
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %771, ptr addrspace(1) %1174, i1 %1176) #3, !dbg !44
  %1177 = getelementptr float, ptr addrspace(1) %3, i64 %1173, !dbg !45
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1172, ptr addrspace(1) %1177, i1 %1176) #3, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py", directory: "inductor_cache/3u")
!4 = !{ptr @triton_per_fused__log_softmax_convolution_37, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__log_softmax_convolution_37, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__log_softmax_convolution_37", linkageName: "triton_per_fused__log_softmax_convolution_37", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 28, column: 21, scope: !7)
!15 = !DILocation(line: 31, column: 38, scope: !7)
!16 = !DILocation(line: 31, column: 35, scope: !7)
!17 = !DILocation(line: 31, column: 30, scope: !7)
!18 = !DILocation(line: 31, column: 43, scope: !7)
!19 = !DILocation(line: 32, column: 30, scope: !7)
!20 = !DILocation(line: 32, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 18, scope: !7)
!22 = !DILocation(line: 35, column: 33, scope: !7)
!23 = !DILocation(line: 131, column: 29, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!25 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!26 = !DILocation(line: 36, column: 37, scope: !7)
!27 = !DILocation(line: 118, column: 15, scope: !28, inlinedAt: !26)
!28 = distinct !DILexicalBlockFile(scope: !24, file: !25, discriminator: 0)
!29 = !DILocation(line: 120, column: 21, scope: !28, inlinedAt: !26)
!30 = !DILocation(line: 120, column: 16, scope: !28, inlinedAt: !26)
!31 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !26)
!32 = !DILocation(line: 36, column: 40, scope: !7)
!33 = !DILocation(line: 37, column: 18, scope: !7)
!34 = !DILocation(line: 38, column: 23, scope: !7)
!35 = !DILocation(line: 40, column: 34, scope: !7)
!36 = !DILocation(line: 267, column: 36, scope: !37, inlinedAt: !39)
!37 = distinct !DILexicalBlockFile(scope: !7, file: !38, discriminator: 0)
!38 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!39 = !DILocation(line: 41, column: 26, scope: !7)
!40 = !DILocation(line: 256, column: 15, scope: !41, inlinedAt: !39)
!41 = distinct !DILexicalBlockFile(scope: !37, file: !38, discriminator: 0)
!42 = !DILocation(line: 41, column: 29, scope: !7)
!43 = !DILocation(line: 42, column: 25, scope: !7)
!44 = !DILocation(line: 42, column: 36, scope: !7)
!45 = !DILocation(line: 43, column: 25, scope: !7)
!46 = !DILocation(line: 43, column: 37, scope: !7)
!47 = !DILocation(line: 43, column: 4, scope: !7)
