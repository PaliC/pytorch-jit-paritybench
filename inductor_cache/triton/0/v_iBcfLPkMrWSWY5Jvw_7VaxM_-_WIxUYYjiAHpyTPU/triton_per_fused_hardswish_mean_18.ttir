#loc = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":19:0)
#loc1 = loc(unknown)
#loc29 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":45:26)
#loc46 = loc(callsite(#loc1 at #loc29))
module {
  tt.func public @triton_per_fused_hardswish_mean_18(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":19:0)) attributes {noinline = false} {
    %c1536_i32 = arith.constant 1536 : i32 loc(#loc1)
    %c96_i32 = arith.constant 96 : i32 loc(#loc1)
    %c384_i32 = arith.constant 384 : i32 loc(#loc1)
    %cst = arith.constant dense<6.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.166666672> : tensor<1x16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<3.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_4 = arith.constant dense<96> : tensor<1x16xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c384_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.remsi %0, %c96_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c96_i32 : i32 loc(#loc7)
    %7 = arith.muli %4, %cst_4 : tensor<1x16xi32> loc(#loc8)
    %8 = tt.splat %5 : i32 -> tensor<1x16xi32> loc(#loc9)
    %9 = arith.addi %8, %7 : tensor<1x16xi32> loc(#loc9)
    %10 = arith.muli %6, %c1536_i32 : i32 loc(#loc10)
    %11 = tt.splat %10 : i32 -> tensor<1x16xi32> loc(#loc11)
    %12 = arith.addi %9, %11 : tensor<1x16xi32> loc(#loc11)
    %13 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %13, %12 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc12)
    %15 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc13)
    %16 = tt.load %14, %15, %cst_3 : tensor<1x16x!tt.ptr<f32>> loc(#loc13)
    %17 = arith.addf %16, %cst_2 : tensor<1x16xf32> loc(#loc14)
    %18 = arith.cmpf ogt, %17, %cst_3 : tensor<1x16xf32> loc(#loc37)
    %19 = arith.cmpf une, %17, %17 : tensor<1x16xf32> loc(#loc38)
    %20 = arith.ori %18, %19 : tensor<1x16xi1> loc(#loc39)
    %21 = arith.select %20, %17, %cst_3 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc40)
    %22 = arith.cmpf olt, %21, %cst : tensor<1x16xf32> loc(#loc41)
    %23 = arith.cmpf une, %21, %21 : tensor<1x16xf32> loc(#loc42)
    %24 = arith.ori %22, %23 : tensor<1x16xi1> loc(#loc43)
    %25 = arith.select %24, %21, %cst : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc44)
    %26 = arith.mulf %16, %25 : tensor<1x16xf32> loc(#loc25)
    %27 = arith.mulf %26, %cst_1 : tensor<1x16xf32> loc(#loc26)
    %28 = arith.select %15, %27, %cst_3 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc27)
    %29 = "tt.reduce"(%28) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc29)), %arg5: f32 loc(callsite(#loc1 at #loc29))):
      %34 = arith.addf %arg4, %arg5 : f32 loc(#loc48)
      tt.reduce.return %34 : f32 loc(#loc45)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc45)
    %30 = tt.expand_dims %29 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc31)
    %31 = arith.divf %30, %cst_0 : tensor<1x1xf32> loc(#loc32)
    gpu.barrier loc(#loc33)
    %32 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc34)
    %33 = tt.splat %32 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc34)
    tt.store %33, %31, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc35)
    tt.return loc(#loc36)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":23:28)
#loc3 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":25:21)
#loc4 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":26:26)
#loc5 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":26:34)
#loc6 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":30:19)
#loc7 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":31:19)
#loc8 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":33:38)
#loc9 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":33:35)
#loc10 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":33:48)
#loc11 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":33:43)
#loc12 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":33:30)
#loc13 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":33:53)
#loc14 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":35:18)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc16 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":37:40)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc21 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":39:40)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc25 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":40:18)
#loc26 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":42:18)
#loc27 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":44:35)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc31 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":45:29)
#loc32 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":47:20)
#loc33 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":48:4)
#loc34 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":49:28)
#loc35 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":49:40)
#loc36 = loc("inductor_cache/5x/c5xof3c6ewxjv5ojnpb4pbgdt6kfk47poww6bnblk7sba255pgzk.py":49:4)
#loc37 = loc(callsite(#loc15 at #loc16))
#loc38 = loc(callsite(#loc17 at #loc16))
#loc39 = loc(callsite(#loc18 at #loc16))
#loc40 = loc(callsite(#loc19 at #loc16))
#loc41 = loc(callsite(#loc20 at #loc21))
#loc42 = loc(callsite(#loc22 at #loc21))
#loc43 = loc(callsite(#loc23 at #loc21))
#loc44 = loc(callsite(#loc24 at #loc21))
#loc45 = loc(callsite(#loc28 at #loc29))
#loc47 = loc(callsite(#loc30 at #loc28))
#loc48 = loc(callsite(#loc47 at #loc29))
