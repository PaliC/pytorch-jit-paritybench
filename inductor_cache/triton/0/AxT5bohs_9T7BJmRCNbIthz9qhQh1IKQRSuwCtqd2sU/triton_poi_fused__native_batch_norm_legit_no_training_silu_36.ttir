#loc = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_silu_36(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":19:0)) attributes {noinline = false} {
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %c768_i32 = arith.constant 768 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<256x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<256x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<4> : tensor<256x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e-03> : tensor<256x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<768> : tensor<256x1xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.get_program_id x : i32 loc(#loc4)
    %3 = arith.muli %2, %c256_i32 : i32 loc(#loc5)
    %4 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc6)
    %5 = tt.expand_dims %4 {axis = 1 : i32} : tensor<256xi32> -> tensor<256x1xi32> loc(#loc7)
    %6 = tt.splat %3 : i32 -> tensor<256x1xi32> loc(#loc8)
    %7 = arith.addi %6, %5 : tensor<256x1xi32> loc(#loc8)
    %8 = arith.cmpi slt, %7, %cst_3 : tensor<256x1xi32> loc(#loc9)
    %9 = arith.remsi %0, %c4_i32 : i32 loc(#loc10)
    %10 = arith.divsi %0, %c4_i32 : i32 loc(#loc11)
    %11 = arith.muli %0, %c768_i32 : i32 loc(#loc12)
    %12 = tt.splat %11 : i32 -> tensor<256x1xi32> loc(#loc13)
    %13 = arith.addi %7, %12 : tensor<256x1xi32> loc(#loc13)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x1x!tt.ptr<f32>> loc(#loc14)
    %15 = tt.addptr %14, %13 : tensor<256x1x!tt.ptr<f32>>, tensor<256x1xi32> loc(#loc14)
    %16 = tt.splat %1 : i1 -> tensor<256x1xi1> loc(#loc15)
    %17 = arith.andi %8, %16 : tensor<256x1xi1> loc(#loc15)
    %18 = tt.load %15, %17 evictionPolicy = evict_last : tensor<256x1x!tt.ptr<f32>> loc(#loc16)
    %19 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x1x!tt.ptr<f32>> loc(#loc17)
    %20 = tt.addptr %19, %7 : tensor<256x1x!tt.ptr<f32>>, tensor<256x1xi32> loc(#loc17)
    %21 = tt.load %20, %8 evictionPolicy = evict_last : tensor<256x1x!tt.ptr<f32>> loc(#loc18)
    %22 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x1x!tt.ptr<f32>> loc(#loc19)
    %23 = tt.addptr %22, %7 : tensor<256x1x!tt.ptr<f32>>, tensor<256x1xi32> loc(#loc19)
    %24 = tt.load %23, %8 evictionPolicy = evict_last : tensor<256x1x!tt.ptr<f32>> loc(#loc20)
    %25 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x1x!tt.ptr<f32>> loc(#loc21)
    %26 = tt.addptr %25, %7 : tensor<256x1x!tt.ptr<f32>>, tensor<256x1xi32> loc(#loc21)
    %27 = tt.load %26, %8 evictionPolicy = evict_last : tensor<256x1x!tt.ptr<f32>> loc(#loc22)
    %28 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x1x!tt.ptr<f32>> loc(#loc23)
    %29 = tt.addptr %28, %7 : tensor<256x1x!tt.ptr<f32>>, tensor<256x1xi32> loc(#loc23)
    %30 = tt.load %29, %8 evictionPolicy = evict_last : tensor<256x1x!tt.ptr<f32>> loc(#loc24)
    %31 = arith.subf %18, %21 : tensor<256x1xf32> loc(#loc25)
    %32 = arith.addf %24, %cst_2 : tensor<256x1xf32> loc(#loc26)
    %33 = tt.extern_elementwise %32 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256x1xf32>) -> tensor<256x1xf32> loc(#loc27)
    %34 = arith.divf %cst_0, %33 : tensor<256x1xf32> loc(#loc28)
    %35 = arith.mulf %31, %34 : tensor<256x1xf32> loc(#loc29)
    %36 = arith.mulf %35, %27 : tensor<256x1xf32> loc(#loc30)
    %37 = arith.addf %36, %30 : tensor<256x1xf32> loc(#loc31)
    %38 = arith.subf %cst, %37 : tensor<256x1xf32> loc(#loc45)
    %39 = math.exp %38 : tensor<256x1xf32> loc(#loc46)
    %40 = arith.addf %39, %cst_0 : tensor<256x1xf32> loc(#loc47)
    %41 = arith.divf %cst_0, %40 : tensor<256x1xf32> loc(#loc48)
    %42 = arith.mulf %37, %41 : tensor<256x1xf32> loc(#loc37)
    %43 = arith.muli %7, %cst_1 : tensor<256x1xi32> loc(#loc38)
    %44 = tt.splat %9 : i32 -> tensor<256x1xi32> loc(#loc39)
    %45 = arith.addi %44, %43 : tensor<256x1xi32> loc(#loc39)
    %46 = arith.muli %10, %c3072_i32 : i32 loc(#loc40)
    %47 = tt.splat %46 : i32 -> tensor<256x1xi32> loc(#loc41)
    %48 = arith.addi %45, %47 : tensor<256x1xi32> loc(#loc41)
    %49 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x1x!tt.ptr<f32>> loc(#loc42)
    %50 = tt.addptr %49, %48 : tensor<256x1x!tt.ptr<f32>>, tensor<256x1xi32> loc(#loc42)
    tt.store %50, %42, %17 : tensor<256x1x!tt.ptr<f32>> loc(#loc43)
    tt.return loc(#loc44)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":22:28)
#loc3 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":24:21)
#loc4 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":25:28)
#loc5 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":25:33)
#loc6 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":26:36)
#loc7 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":26:44)
#loc8 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":26:23)
#loc9 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":27:21)
#loc10 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":30:19)
#loc11 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":31:19)
#loc12 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":32:39)
#loc13 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":32:35)
#loc14 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":32:30)
#loc15 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":32:52)
#loc16 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":32:44)
#loc17 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":33:30)
#loc18 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":33:35)
#loc19 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":34:30)
#loc20 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":34:35)
#loc21 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":35:31)
#loc22 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":35:36)
#loc23 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":36:31)
#loc24 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":36:36)
#loc25 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":37:18)
#loc26 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":39:18)
#loc27 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":40:26)
#loc28 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":42:18)
#loc29 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":45:19)
#loc30 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":46:20)
#loc31 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":47:20)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc33 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":48:23)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc37 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":49:20)
#loc38 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":50:32)
#loc39 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":50:30)
#loc40 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":50:42)
#loc41 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":50:37)
#loc42 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":50:25)
#loc43 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":50:54)
#loc44 = loc("inductor_cache/4n/c4nn53ziifdqt5bndupcx3ef3xthtffilq47mfmemdhnmd2mcopc.py":50:4)
#loc45 = loc(callsite(#loc32 at #loc33))
#loc46 = loc(callsite(#loc34 at #loc33))
#loc47 = loc(callsite(#loc35 at #loc33))
#loc48 = loc(callsite(#loc36 at #loc33))
