; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__log_softmax_div_exp_mean_mul_neg_pow_rsub_sum_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = shl i32 %5, 2, !dbg !10
  %7 = and i32 %6, 252, !dbg !10
  %8 = zext nneg i32 %7 to i64, !dbg !11
  %9 = getelementptr float, ptr addrspace(1) %1, i64 %8, !dbg !11
  %10 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %9, i1 true) #4, !dbg !12
  %11 = and i32 %6, 204, !dbg !13
  %12 = zext nneg i32 %11 to i64, !dbg !14
  %13 = getelementptr float, ptr addrspace(1) %1, i64 %12, !dbg !14
  %14 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %13, i1 true) #4, !dbg !15
  %15 = extractvalue { i32, i32, i32, i32 } %14, 0, !dbg !15
  %16 = extractvalue { i32, i32, i32, i32 } %14, 1, !dbg !15
  %17 = extractvalue { i32, i32, i32, i32 } %14, 2, !dbg !15
  %18 = extractvalue { i32, i32, i32, i32 } %14, 3, !dbg !15
  %19 = bitcast i32 %15 to float, !dbg !15
  %20 = bitcast i32 %16 to float, !dbg !15
  %21 = bitcast i32 %17 to float, !dbg !15
  %22 = bitcast i32 %18 to float, !dbg !15
  %23 = or disjoint i32 %11, 16, !dbg !16
  %24 = zext nneg i32 %23 to i64, !dbg !17
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !17
  %26 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %25, i1 true) #4, !dbg !18
  %27 = extractvalue { i32, i32, i32, i32 } %26, 0, !dbg !18
  %28 = extractvalue { i32, i32, i32, i32 } %26, 1, !dbg !18
  %29 = extractvalue { i32, i32, i32, i32 } %26, 2, !dbg !18
  %30 = extractvalue { i32, i32, i32, i32 } %26, 3, !dbg !18
  %31 = bitcast i32 %27 to float, !dbg !18
  %32 = bitcast i32 %28 to float, !dbg !18
  %33 = bitcast i32 %29 to float, !dbg !18
  %34 = bitcast i32 %30 to float, !dbg !18
  %35 = or disjoint i32 %11, 32, !dbg !19
  %36 = zext nneg i32 %35 to i64, !dbg !20
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !20
  %38 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %37, i1 true) #4, !dbg !21
  %39 = extractvalue { i32, i32, i32, i32 } %38, 0, !dbg !21
  %40 = extractvalue { i32, i32, i32, i32 } %38, 1, !dbg !21
  %41 = extractvalue { i32, i32, i32, i32 } %38, 2, !dbg !21
  %42 = extractvalue { i32, i32, i32, i32 } %38, 3, !dbg !21
  %43 = bitcast i32 %39 to float, !dbg !21
  %44 = bitcast i32 %40 to float, !dbg !21
  %45 = bitcast i32 %41 to float, !dbg !21
  %46 = bitcast i32 %42 to float, !dbg !21
  %47 = or disjoint i32 %11, 48, !dbg !22
  %48 = zext nneg i32 %47 to i64, !dbg !23
  %49 = getelementptr float, ptr addrspace(1) %1, i64 %48, !dbg !23
  %50 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %49, i1 true) #4, !dbg !24
  %51 = extractvalue { i32, i32, i32, i32 } %50, 0, !dbg !24
  %52 = extractvalue { i32, i32, i32, i32 } %50, 1, !dbg !24
  %53 = extractvalue { i32, i32, i32, i32 } %50, 2, !dbg !24
  %54 = extractvalue { i32, i32, i32, i32 } %50, 3, !dbg !24
  %55 = bitcast i32 %51 to float, !dbg !24
  %56 = bitcast i32 %52 to float, !dbg !24
  %57 = bitcast i32 %53 to float, !dbg !24
  %58 = bitcast i32 %54 to float, !dbg !24
  %59 = getelementptr float, ptr addrspace(1) %2, i64 %8, !dbg !25
  %60 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %59, i1 true) #4, !dbg !26
  %61 = fmul float %19, 0x3FF7154760000000, !dbg !27
  %62 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %61) #4, !dbg !27
  %63 = fmul float %20, 0x3FF7154760000000, !dbg !27
  %64 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %63) #4, !dbg !27
  %65 = fmul float %21, 0x3FF7154760000000, !dbg !27
  %66 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %65) #4, !dbg !27
  %67 = fmul float %22, 0x3FF7154760000000, !dbg !27
  %68 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %67) #4, !dbg !27
  %69 = fmul float %31, 0x3FF7154760000000, !dbg !28
  %70 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %69) #4, !dbg !28
  %71 = fmul float %32, 0x3FF7154760000000, !dbg !28
  %72 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %71) #4, !dbg !28
  %73 = fmul float %33, 0x3FF7154760000000, !dbg !28
  %74 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %73) #4, !dbg !28
  %75 = fmul float %34, 0x3FF7154760000000, !dbg !28
  %76 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %75) #4, !dbg !28
  %77 = fadd float %62, %70, !dbg !29
  %78 = fadd float %64, %72, !dbg !29
  %79 = fadd float %66, %74, !dbg !29
  %80 = fadd float %68, %76, !dbg !29
  %81 = fmul float %43, 0x3FF7154760000000, !dbg !30
  %82 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %81) #4, !dbg !30
  %83 = fmul float %44, 0x3FF7154760000000, !dbg !30
  %84 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %83) #4, !dbg !30
  %85 = fmul float %45, 0x3FF7154760000000, !dbg !30
  %86 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %85) #4, !dbg !30
  %87 = fmul float %46, 0x3FF7154760000000, !dbg !30
  %88 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %87) #4, !dbg !30
  %89 = fadd float %77, %82, !dbg !31
  %90 = fadd float %78, %84, !dbg !31
  %91 = fadd float %79, %86, !dbg !31
  %92 = fadd float %80, %88, !dbg !31
  %93 = fmul float %55, 0x3FF7154760000000, !dbg !32
  %94 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %93) #4, !dbg !32
  %95 = fmul float %56, 0x3FF7154760000000, !dbg !32
  %96 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %95) #4, !dbg !32
  %97 = fmul float %57, 0x3FF7154760000000, !dbg !32
  %98 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %97) #4, !dbg !32
  %99 = fmul float %58, 0x3FF7154760000000, !dbg !32
  %100 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %99) #4, !dbg !32
  %101 = fadd float %89, %94, !dbg !33
  %102 = fadd float %90, %96, !dbg !33
  %103 = fadd float %91, %98, !dbg !33
  %104 = fadd float %92, %100, !dbg !33
  %105 = fcmp olt float %101, 0x3810000000000000, !dbg !34
  %106 = fmul float %101, 0x4160000000000000, !dbg !34
  %.02.i = select i1 %105, float %106, float %101, !dbg !34
  %i.i.0.i = select i1 %105, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %107 = bitcast float %.02.i to i32, !dbg !34
  %108 = add i32 %107, -1059760811, !dbg !34
  %109 = and i32 %108, -8388608, !dbg !34
  %110 = sub i32 %107, %109, !dbg !34
  %111 = bitcast i32 %110 to float, !dbg !34
  %112 = sitofp i32 %109 to float, !dbg !34
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not.i = icmp eq i32 %113, 0, !dbg !34
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %112, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !34
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %112, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !34
  %.08.i = select i1 %.not.i, float %115, float %114, !dbg !34
  %116 = fadd float %111, -1.000000e+00, !dbg !34
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not1.i = icmp eq i32 %117, 0, !dbg !34
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %116, float 0x3FC2073EC0000000) #4, !dbg !34
  %119 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %116, float 0x3FC2073EC0000000) #4, !dbg !34
  %.010.i = select i1 %.not1.i, float %119, float %118, !dbg !34
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not2.i = icmp eq i32 %120, 0, !dbg !34
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %116, float 0xBFBF19B980000000) #4, !dbg !34
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %116, float 0xBFBF19B980000000) #4, !dbg !34
  %.011.i = select i1 %.not2.i, float %122, float %121, !dbg !34
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not3.i = icmp eq i32 %123, 0, !dbg !34
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %116, float 0x3FC1E52AA0000000) #4, !dbg !34
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %116, float 0x3FC1E52AA0000000) #4, !dbg !34
  %.012.i = select i1 %.not3.i, float %125, float %124, !dbg !34
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not4.i = icmp eq i32 %126, 0, !dbg !34
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %116, float 0xBFC55B1720000000) #4, !dbg !34
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %116, float 0xBFC55B1720000000) #4, !dbg !34
  %.09.i = select i1 %.not4.i, float %128, float %127, !dbg !34
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not5.i = icmp eq i32 %129, 0, !dbg !34
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %116, float 0x3FC99DA160000000) #4, !dbg !34
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %116, float 0x3FC99DA160000000) #4, !dbg !34
  %.05.i = select i1 %.not5.i, float %131, float %130, !dbg !34
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not6.i = icmp eq i32 %132, 0, !dbg !34
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %116, float 0xBFCFFFE440000000) #4, !dbg !34
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %116, float 0xBFCFFFE440000000) #4, !dbg !34
  %.01.i = select i1 %.not6.i, float %134, float %133, !dbg !34
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not7.i = icmp eq i32 %135, 0, !dbg !34
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %116, float 0x3FD5554F00000000) #4, !dbg !34
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %116, float 0x3FD5554F00000000) #4, !dbg !34
  %.0.i = select i1 %.not7.i, float %137, float %136, !dbg !34
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not8.i = icmp eq i32 %138, 0, !dbg !34
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %116, float -5.000000e-01) #4, !dbg !34
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %116, float -5.000000e-01) #4, !dbg !34
  %.07.i = select i1 %.not8.i, float %140, float %139, !dbg !34
  %141 = fmul float %116, %.07.i, !dbg !34
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not9.i = icmp eq i32 %142, 0, !dbg !34
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %141, float %116, float %116) #4, !dbg !34
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %141, float %116, float %116) #4, !dbg !34
  %.06.i = select i1 %.not9.i, float %144, float %143, !dbg !34
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not10.i = icmp eq i32 %145, 0, !dbg !34
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !34
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !34
  %.04.i = select i1 %.not10.i, float %147, float %146, !dbg !34
  %148 = icmp ugt i32 %107, 2139095039, !dbg !34
  br i1 %148, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !34

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not11.i = icmp eq i32 %149, 0, !dbg !34
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %.03.i = select i1 %.not11.i, float %151, float %150, !dbg !34
  br label %__nv_logf.exit, !dbg !34

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !34
  %152 = fcmp olt float %102, 0x3810000000000000, !dbg !34
  %153 = fmul float %102, 0x4160000000000000, !dbg !34
  %.02.i1 = select i1 %152, float %153, float %102, !dbg !34
  %i.i.0.i2 = select i1 %152, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %154 = bitcast float %.02.i1 to i32, !dbg !34
  %155 = add i32 %154, -1059760811, !dbg !34
  %156 = and i32 %155, -8388608, !dbg !34
  %157 = sub i32 %154, %156, !dbg !34
  %158 = bitcast i32 %157 to float, !dbg !34
  %159 = sitofp i32 %156 to float, !dbg !34
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not.i3 = icmp eq i32 %160, 0, !dbg !34
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %159, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !34
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %159, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !34
  %.08.i4 = select i1 %.not.i3, float %162, float %161, !dbg !34
  %163 = fadd float %158, -1.000000e+00, !dbg !34
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not1.i5 = icmp eq i32 %164, 0, !dbg !34
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %163, float 0x3FC2073EC0000000) #4, !dbg !34
  %166 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %163, float 0x3FC2073EC0000000) #4, !dbg !34
  %.010.i6 = select i1 %.not1.i5, float %166, float %165, !dbg !34
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not2.i7 = icmp eq i32 %167, 0, !dbg !34
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %163, float 0xBFBF19B980000000) #4, !dbg !34
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %163, float 0xBFBF19B980000000) #4, !dbg !34
  %.011.i8 = select i1 %.not2.i7, float %169, float %168, !dbg !34
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not3.i9 = icmp eq i32 %170, 0, !dbg !34
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %163, float 0x3FC1E52AA0000000) #4, !dbg !34
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %163, float 0x3FC1E52AA0000000) #4, !dbg !34
  %.012.i10 = select i1 %.not3.i9, float %172, float %171, !dbg !34
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not4.i11 = icmp eq i32 %173, 0, !dbg !34
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %163, float 0xBFC55B1720000000) #4, !dbg !34
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %163, float 0xBFC55B1720000000) #4, !dbg !34
  %.09.i12 = select i1 %.not4.i11, float %175, float %174, !dbg !34
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not5.i13 = icmp eq i32 %176, 0, !dbg !34
  %177 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %163, float 0x3FC99DA160000000) #4, !dbg !34
  %178 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %163, float 0x3FC99DA160000000) #4, !dbg !34
  %.05.i14 = select i1 %.not5.i13, float %178, float %177, !dbg !34
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not6.i15 = icmp eq i32 %179, 0, !dbg !34
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %163, float 0xBFCFFFE440000000) #4, !dbg !34
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %163, float 0xBFCFFFE440000000) #4, !dbg !34
  %.01.i16 = select i1 %.not6.i15, float %181, float %180, !dbg !34
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not7.i17 = icmp eq i32 %182, 0, !dbg !34
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %163, float 0x3FD5554F00000000) #4, !dbg !34
  %184 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %163, float 0x3FD5554F00000000) #4, !dbg !34
  %.0.i18 = select i1 %.not7.i17, float %184, float %183, !dbg !34
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not8.i19 = icmp eq i32 %185, 0, !dbg !34
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %163, float -5.000000e-01) #4, !dbg !34
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %163, float -5.000000e-01) #4, !dbg !34
  %.07.i20 = select i1 %.not8.i19, float %187, float %186, !dbg !34
  %188 = fmul float %163, %.07.i20, !dbg !34
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not9.i21 = icmp eq i32 %189, 0, !dbg !34
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %188, float %163, float %163) #4, !dbg !34
  %191 = tail call float @llvm.nvvm.fma.rn.f(float %188, float %163, float %163) #4, !dbg !34
  %.06.i22 = select i1 %.not9.i21, float %191, float %190, !dbg !34
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not10.i23 = icmp eq i32 %192, 0, !dbg !34
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !34
  %194 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !34
  %.04.i24 = select i1 %.not10.i23, float %194, float %193, !dbg !34
  %195 = icmp ugt i32 %154, 2139095039, !dbg !34
  br i1 %195, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !34

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not11.i28 = icmp eq i32 %196, 0, !dbg !34
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %.03.i29 = select i1 %.not11.i28, float %198, float %197, !dbg !34
  br label %__nv_logf.exit30, !dbg !34

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !34
  %199 = fcmp olt float %103, 0x3810000000000000, !dbg !34
  %200 = fmul float %103, 0x4160000000000000, !dbg !34
  %.02.i31 = select i1 %199, float %200, float %103, !dbg !34
  %i.i.0.i32 = select i1 %199, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %201 = bitcast float %.02.i31 to i32, !dbg !34
  %202 = add i32 %201, -1059760811, !dbg !34
  %203 = and i32 %202, -8388608, !dbg !34
  %204 = sub i32 %201, %203, !dbg !34
  %205 = bitcast i32 %204 to float, !dbg !34
  %206 = sitofp i32 %203 to float, !dbg !34
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not.i33 = icmp eq i32 %207, 0, !dbg !34
  %208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %206, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !34
  %209 = tail call float @llvm.nvvm.fma.rn.f(float %206, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !34
  %.08.i34 = select i1 %.not.i33, float %209, float %208, !dbg !34
  %210 = fadd float %205, -1.000000e+00, !dbg !34
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not1.i35 = icmp eq i32 %211, 0, !dbg !34
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %210, float 0x3FC2073EC0000000) #4, !dbg !34
  %213 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %210, float 0x3FC2073EC0000000) #4, !dbg !34
  %.010.i36 = select i1 %.not1.i35, float %213, float %212, !dbg !34
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not2.i37 = icmp eq i32 %214, 0, !dbg !34
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %210, float 0xBFBF19B980000000) #4, !dbg !34
  %216 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %210, float 0xBFBF19B980000000) #4, !dbg !34
  %.011.i38 = select i1 %.not2.i37, float %216, float %215, !dbg !34
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not3.i39 = icmp eq i32 %217, 0, !dbg !34
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %210, float 0x3FC1E52AA0000000) #4, !dbg !34
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %210, float 0x3FC1E52AA0000000) #4, !dbg !34
  %.012.i40 = select i1 %.not3.i39, float %219, float %218, !dbg !34
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not4.i41 = icmp eq i32 %220, 0, !dbg !34
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %210, float 0xBFC55B1720000000) #4, !dbg !34
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %210, float 0xBFC55B1720000000) #4, !dbg !34
  %.09.i42 = select i1 %.not4.i41, float %222, float %221, !dbg !34
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not5.i43 = icmp eq i32 %223, 0, !dbg !34
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %210, float 0x3FC99DA160000000) #4, !dbg !34
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %210, float 0x3FC99DA160000000) #4, !dbg !34
  %.05.i44 = select i1 %.not5.i43, float %225, float %224, !dbg !34
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not6.i45 = icmp eq i32 %226, 0, !dbg !34
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %210, float 0xBFCFFFE440000000) #4, !dbg !34
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %210, float 0xBFCFFFE440000000) #4, !dbg !34
  %.01.i46 = select i1 %.not6.i45, float %228, float %227, !dbg !34
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not7.i47 = icmp eq i32 %229, 0, !dbg !34
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %210, float 0x3FD5554F00000000) #4, !dbg !34
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %210, float 0x3FD5554F00000000) #4, !dbg !34
  %.0.i48 = select i1 %.not7.i47, float %231, float %230, !dbg !34
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not8.i49 = icmp eq i32 %232, 0, !dbg !34
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %210, float -5.000000e-01) #4, !dbg !34
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %210, float -5.000000e-01) #4, !dbg !34
  %.07.i50 = select i1 %.not8.i49, float %234, float %233, !dbg !34
  %235 = fmul float %210, %.07.i50, !dbg !34
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not9.i51 = icmp eq i32 %236, 0, !dbg !34
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %235, float %210, float %210) #4, !dbg !34
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %235, float %210, float %210) #4, !dbg !34
  %.06.i52 = select i1 %.not9.i51, float %238, float %237, !dbg !34
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not10.i53 = icmp eq i32 %239, 0, !dbg !34
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !34
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !34
  %.04.i54 = select i1 %.not10.i53, float %241, float %240, !dbg !34
  %242 = icmp ugt i32 %201, 2139095039, !dbg !34
  br i1 %242, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !34

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not11.i58 = icmp eq i32 %243, 0, !dbg !34
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %245 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %.03.i59 = select i1 %.not11.i58, float %245, float %244, !dbg !34
  br label %__nv_logf.exit60, !dbg !34

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !34
  %246 = fcmp olt float %104, 0x3810000000000000, !dbg !34
  %247 = fmul float %104, 0x4160000000000000, !dbg !34
  %.02.i61 = select i1 %246, float %247, float %104, !dbg !34
  %i.i.0.i62 = select i1 %246, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %248 = bitcast float %.02.i61 to i32, !dbg !34
  %249 = add i32 %248, -1059760811, !dbg !34
  %250 = and i32 %249, -8388608, !dbg !34
  %251 = sub i32 %248, %250, !dbg !34
  %252 = bitcast i32 %251 to float, !dbg !34
  %253 = sitofp i32 %250 to float, !dbg !34
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not.i63 = icmp eq i32 %254, 0, !dbg !34
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %253, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !34
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %253, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !34
  %.08.i64 = select i1 %.not.i63, float %256, float %255, !dbg !34
  %257 = fadd float %252, -1.000000e+00, !dbg !34
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not1.i65 = icmp eq i32 %258, 0, !dbg !34
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %257, float 0x3FC2073EC0000000) #4, !dbg !34
  %260 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %257, float 0x3FC2073EC0000000) #4, !dbg !34
  %.010.i66 = select i1 %.not1.i65, float %260, float %259, !dbg !34
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not2.i67 = icmp eq i32 %261, 0, !dbg !34
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %257, float 0xBFBF19B980000000) #4, !dbg !34
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %257, float 0xBFBF19B980000000) #4, !dbg !34
  %.011.i68 = select i1 %.not2.i67, float %263, float %262, !dbg !34
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not3.i69 = icmp eq i32 %264, 0, !dbg !34
  %265 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %257, float 0x3FC1E52AA0000000) #4, !dbg !34
  %266 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %257, float 0x3FC1E52AA0000000) #4, !dbg !34
  %.012.i70 = select i1 %.not3.i69, float %266, float %265, !dbg !34
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not4.i71 = icmp eq i32 %267, 0, !dbg !34
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %257, float 0xBFC55B1720000000) #4, !dbg !34
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %257, float 0xBFC55B1720000000) #4, !dbg !34
  %.09.i72 = select i1 %.not4.i71, float %269, float %268, !dbg !34
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not5.i73 = icmp eq i32 %270, 0, !dbg !34
  %271 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %257, float 0x3FC99DA160000000) #4, !dbg !34
  %272 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %257, float 0x3FC99DA160000000) #4, !dbg !34
  %.05.i74 = select i1 %.not5.i73, float %272, float %271, !dbg !34
  %273 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not6.i75 = icmp eq i32 %273, 0, !dbg !34
  %274 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %257, float 0xBFCFFFE440000000) #4, !dbg !34
  %275 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %257, float 0xBFCFFFE440000000) #4, !dbg !34
  %.01.i76 = select i1 %.not6.i75, float %275, float %274, !dbg !34
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not7.i77 = icmp eq i32 %276, 0, !dbg !34
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %257, float 0x3FD5554F00000000) #4, !dbg !34
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %257, float 0x3FD5554F00000000) #4, !dbg !34
  %.0.i78 = select i1 %.not7.i77, float %278, float %277, !dbg !34
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not8.i79 = icmp eq i32 %279, 0, !dbg !34
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %257, float -5.000000e-01) #4, !dbg !34
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %257, float -5.000000e-01) #4, !dbg !34
  %.07.i80 = select i1 %.not8.i79, float %281, float %280, !dbg !34
  %282 = fmul float %257, %.07.i80, !dbg !34
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not9.i81 = icmp eq i32 %283, 0, !dbg !34
  %284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %282, float %257, float %257) #4, !dbg !34
  %285 = tail call float @llvm.nvvm.fma.rn.f(float %282, float %257, float %257) #4, !dbg !34
  %.06.i82 = select i1 %.not9.i81, float %285, float %284, !dbg !34
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not10.i83 = icmp eq i32 %286, 0, !dbg !34
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !34
  %288 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !34
  %.04.i84 = select i1 %.not10.i83, float %288, float %287, !dbg !34
  %289 = icmp ugt i32 %248, 2139095039, !dbg !34
  br i1 %289, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !34

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not11.i88 = icmp eq i32 %290, 0, !dbg !34
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %292 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %.03.i89 = select i1 %.not11.i88, float %292, float %291, !dbg !34
  br label %__nv_logf.exit90, !dbg !34

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !34
  %293 = insertelement <2 x float> poison, float %.02.i31, i64 0, !dbg !34
  %294 = insertelement <2 x float> %293, float %.02.i61, i64 1, !dbg !34
  %295 = fcmp oeq <2 x float> %294, zeroinitializer, !dbg !34
  %296 = insertelement <2 x float> poison, float %.02.i, i64 0, !dbg !34
  %297 = insertelement <2 x float> %296, float %.02.i1, i64 1, !dbg !34
  %298 = fcmp oeq <2 x float> %297, zeroinitializer, !dbg !34
  %299 = extractvalue { i32, i32, i32, i32 } %60, 3, !dbg !26
  %300 = extractvalue { i32, i32, i32, i32 } %60, 2, !dbg !26
  %301 = extractvalue { i32, i32, i32, i32 } %60, 1, !dbg !26
  %302 = extractvalue { i32, i32, i32, i32 } %60, 0, !dbg !26
  %303 = extractvalue { i32, i32, i32, i32 } %10, 3, !dbg !12
  %304 = extractvalue { i32, i32, i32, i32 } %10, 2, !dbg !12
  %305 = extractvalue { i32, i32, i32, i32 } %10, 1, !dbg !12
  %306 = extractvalue { i32, i32, i32, i32 } %10, 0, !dbg !12
  %307 = lshr i32 %5, 5, !dbg !10
  %308 = and i32 %5, 31, !dbg !10
  %309 = insertelement <2 x float> poison, float %r.i.0.i, i64 0, !dbg !34
  %310 = insertelement <2 x float> %309, float %r.i.0.i25, i64 1, !dbg !34
  %311 = select <2 x i1> %298, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %310, !dbg !34
  %312 = insertelement <2 x i32> poison, i32 %302, i64 0, !dbg !26
  %313 = insertelement <2 x i32> %312, i32 %301, i64 1, !dbg !26
  %314 = bitcast <2 x i32> %313 to <2 x float>, !dbg !26
  %315 = insertelement <2 x i32> poison, i32 %306, i64 0, !dbg !12
  %316 = insertelement <2 x i32> %315, i32 %305, i64 1, !dbg !12
  %317 = bitcast <2 x i32> %316 to <2 x float>, !dbg !12
  %318 = fsub <2 x float> %317, %311, !dbg !35
  %319 = fmul <2 x float> %318, %314, !dbg !36
  %320 = insertelement <2 x i32> poison, i32 %300, i64 0, !dbg !26
  %321 = insertelement <2 x i32> %320, i32 %299, i64 1, !dbg !26
  %322 = bitcast <2 x i32> %321 to <2 x float>, !dbg !26
  %323 = insertelement <2 x i32> poison, i32 %304, i64 0, !dbg !12
  %324 = insertelement <2 x i32> %323, i32 %303, i64 1, !dbg !12
  %325 = bitcast <2 x i32> %324 to <2 x float>, !dbg !12
  %326 = insertelement <2 x float> poison, float %r.i.0.i55, i64 0, !dbg !34
  %327 = insertelement <2 x float> %326, float %r.i.0.i85, i64 1, !dbg !34
  %328 = select <2 x i1> %295, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %327, !dbg !34
  %329 = fsub <2 x float> %325, %328, !dbg !35
  %330 = fmul <2 x float> %329, %322, !dbg !36
  %shift = shufflevector <2 x float> %319, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !37
  %331 = fadd <2 x float> %319, %shift, !dbg !37
  %332 = fadd <2 x float> %331, %330, !dbg !37
  %shift91 = shufflevector <2 x float> %330, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !37
  %333 = fadd <2 x float> %332, %shift91, !dbg !37
  %334 = extractelement <2 x float> %333, i64 0, !dbg !37
  %335 = bitcast float %334 to i32, !dbg !42
  %336 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %335, i32 16, i32 31), !dbg !42
  %337 = bitcast i32 %336 to float, !dbg !42
  %338 = fadd float %334, %337, !dbg !37
  %339 = bitcast float %338 to i32, !dbg !42
  %340 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %339, i32 8, i32 31), !dbg !42
  %341 = bitcast i32 %340 to float, !dbg !42
  %342 = fadd float %338, %341, !dbg !37
  %343 = bitcast float %342 to i32, !dbg !42
  %344 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %343, i32 4, i32 31), !dbg !42
  %345 = bitcast i32 %344 to float, !dbg !42
  %346 = fadd float %342, %345, !dbg !37
  %347 = bitcast float %346 to i32, !dbg !42
  %348 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %347, i32 2, i32 31), !dbg !42
  %349 = bitcast i32 %348 to float, !dbg !42
  %350 = fadd float %346, %349, !dbg !37
  %351 = bitcast float %350 to i32, !dbg !42
  %352 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %351, i32 1, i32 31), !dbg !42
  %353 = bitcast i32 %352 to float, !dbg !42
  %354 = fadd float %350, %353, !dbg !37
  %355 = icmp eq i32 %308, 0, !dbg !42
  %356 = and i32 %307, 1, !dbg !42
  %357 = zext nneg i32 %356 to i64, !dbg !42
  %358 = getelementptr float, ptr addrspace(3) @global_smem, i64 %357, !dbg !42
  %359 = bitcast float %354 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %358, <1 x i32> %359, i1 %355) #4, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %360 = icmp slt i32 %5, 2, !dbg !42
  %361 = sext i32 %5 to i64, !dbg !42
  %362 = getelementptr float, ptr addrspace(3) @global_smem, i64 %361, !dbg !42
  %363 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %362, i1 %360) #4, !dbg !42
  %364 = bitcast i32 %363 to float, !dbg !42
  %365 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %363, i32 1, i32 31), !dbg !42
  %366 = bitcast i32 %365 to float, !dbg !42
  %367 = fadd float %364, %366, !dbg !37
  %368 = and i32 %5, 1, !dbg !42
  %369 = icmp eq i32 %368, 0, !dbg !42
  %370 = and i1 %360, %369, !dbg !42
  %371 = bitcast float %367 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %362, <1 x i32> %371, i1 %370) #4, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %372 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !42
  %373 = fadd float %372, 0.000000e+00, !dbg !43
  %374 = fsub float 0.000000e+00, %373, !dbg !47
  %375 = fmul float %374, 1.562500e-02, !dbg !48
  %376 = fsub float 0.000000e+00, %375, !dbg !49
  %377 = fmul float %376, 0x3FF7154760000000, !dbg !50
  %378 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %377) #4, !dbg !50
  %379 = fsub float 1.000000e+00, %378, !dbg !51
  %380 = fmul float %379, %379, !dbg !52
  %381 = fmul float %380, %375, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !54
  %urem = and i32 %5, 63, !dbg !55
  %382 = icmp eq i32 %urem, 0, !dbg !55
  %383 = bitcast float %381 to i32, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %383, ptr addrspace(1) %0, i1 %382) #4, !dbg !55
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c5wpk2pmvtbfpa6nmqnicdk55lbknzpwha5ofqqgobhvn7bnpwpu.py", directory: "inductor_cache/5w")
!4 = !{ptr @triton_per_fused__log_softmax_div_exp_mean_mul_neg_pow_rsub_sum_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__log_softmax_div_exp_mean_mul_neg_pow_rsub_sum_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__log_softmax_div_exp_mean_mul_neg_pow_rsub_sum_1", linkageName: "triton_per_fused__log_softmax_div_exp_mean_mul_neg_pow_rsub_sum_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 33, column: 30, scope: !7)
!12 = !DILocation(line: 33, column: 35, scope: !7)
!13 = !DILocation(line: 34, column: 35, scope: !7)
!14 = !DILocation(line: 34, column: 30, scope: !7)
!15 = !DILocation(line: 34, column: 43, scope: !7)
!16 = !DILocation(line: 35, column: 40, scope: !7)
!17 = !DILocation(line: 35, column: 30, scope: !7)
!18 = !DILocation(line: 35, column: 48, scope: !7)
!19 = !DILocation(line: 36, column: 40, scope: !7)
!20 = !DILocation(line: 36, column: 30, scope: !7)
!21 = !DILocation(line: 36, column: 48, scope: !7)
!22 = !DILocation(line: 37, column: 40, scope: !7)
!23 = !DILocation(line: 37, column: 30, scope: !7)
!24 = !DILocation(line: 37, column: 48, scope: !7)
!25 = !DILocation(line: 38, column: 31, scope: !7)
!26 = !DILocation(line: 38, column: 36, scope: !7)
!27 = !DILocation(line: 39, column: 23, scope: !7)
!28 = !DILocation(line: 40, column: 23, scope: !7)
!29 = !DILocation(line: 41, column: 18, scope: !7)
!30 = !DILocation(line: 42, column: 23, scope: !7)
!31 = !DILocation(line: 43, column: 18, scope: !7)
!32 = !DILocation(line: 44, column: 24, scope: !7)
!33 = !DILocation(line: 45, column: 19, scope: !7)
!34 = !DILocation(line: 46, column: 24, scope: !7)
!35 = !DILocation(line: 47, column: 19, scope: !7)
!36 = !DILocation(line: 48, column: 20, scope: !7)
!37 = !DILocation(line: 256, column: 15, scope: !38, inlinedAt: !41)
!38 = distinct !DILexicalBlockFile(scope: !40, file: !39, discriminator: 0)
!39 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!40 = distinct !DILexicalBlockFile(scope: !7, file: !39, discriminator: 0)
!41 = !DILocation(line: 50, column: 59, scope: !7)
!42 = !DILocation(line: 267, column: 36, scope: !40, inlinedAt: !41)
!43 = !DILocation(line: 73, column: 15, scope: !44, inlinedAt: !46)
!44 = distinct !DILexicalBlockFile(scope: !7, file: !45, discriminator: 0)
!45 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!46 = !DILocation(line: 50, column: 45, scope: !7)
!47 = !DILocation(line: 51, column: 13, scope: !7)
!48 = !DILocation(line: 53, column: 20, scope: !7)
!49 = !DILocation(line: 54, column: 13, scope: !7)
!50 = !DILocation(line: 55, column: 24, scope: !7)
!51 = !DILocation(line: 57, column: 20, scope: !7)
!52 = !DILocation(line: 58, column: 20, scope: !7)
!53 = !DILocation(line: 59, column: 20, scope: !7)
!54 = !DILocation(line: 61, column: 4, scope: !7)
!55 = !DILocation(line: 62, column: 63, scope: !7)
!56 = !DILocation(line: 62, column: 4, scope: !7)
