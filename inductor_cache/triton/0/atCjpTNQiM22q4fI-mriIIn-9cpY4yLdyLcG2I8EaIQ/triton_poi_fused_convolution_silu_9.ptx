//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_silu_9 // -- Begin function triton_poi_fused_convolution_silu_9
                                        // @triton_poi_fused_convolution_silu_9
.visible .entry triton_poi_fused_convolution_silu_9(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_silu_9_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_silu_9_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_silu_9_param_2,
	.param .u32 triton_poi_fused_convolution_silu_9_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<68>;
	.reg .f32 	%f<74>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused_convolution_silu_9_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_convolution_silu_9_param_1];
$L__tmp0:
	.loc	1 21 28                         // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:21:33
	shl.b32 	%r58, %r1, 10;
	ld.param.u64 	%rd11, [triton_poi_fused_convolution_silu_9_param_2];
	.loc	1 22 36                         // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:22:36
	mov.u32 	%r59, %tid.x;
	shl.b32 	%r60, %r59, 2;
	and.b32  	%r61, %r60, 508;
	.loc	1 22 23                         // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:22:23
	or.b32  	%r62, %r58, %r61;
	.loc	1 25 19                         // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:25:19
	bfe.s32 	%r63, %r1, 21, 1;
	shr.u32 	%r64, %r63, 27;
	add.s32 	%r65, %r62, %r64;
	and.b32  	%r66, %r65, -32;
	sub.s32 	%r67, %r62, %r66;
	.loc	1 26 34                         // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:26:34
	mul.wide.s32 	%rd12, %r62, 4;
	add.s64 	%rd1, %rd9, %rd12;
	add.s64 	%rd2, %rd1, 2048;
	mov.pred 	%p1, -1;
	.loc	1 26 39                         // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:26:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r2;
	mov.b32 	%f18, %r3;
	mov.b32 	%f19, %r4;
	mov.b32 	%f20, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r6;
	mov.b32 	%f22, %r7;
	mov.b32 	%f23, %r8;
	mov.b32 	%f24, %r9;
	.loc	1 27 30                         // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:27:30
	mul.wide.s32 	%rd13, %r67, 4;
	add.s64 	%rd3, %rd10, %rd13;
	.loc	1 27 35                         // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:27:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r10;
	mov.b32 	%f26, %r11;
	mov.b32 	%f27, %r12;
	mov.b32 	%f28, %r13;
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r14;
	mov.b32 	%f30, %r15;
	mov.b32 	%f31, %r16;
	mov.b32 	%f32, %r17;
	.loc	1 28 18                         // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:28:18
	add.f32 	%f33, %f17, %f25;
	add.f32 	%f34, %f18, %f26;
	add.f32 	%f35, %f19, %f27;
	add.f32 	%f36, %f20, %f28;
	add.f32 	%f37, %f21, %f29;
	add.f32 	%f38, %f22, %f30;
	add.f32 	%f39, %f23, %f31;
	add.f32 	%f40, %f24, %f32;
	mov.f32 	%f41, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f42, %f41, %f33;
	sub.f32 	%f43, %f41, %f34;
	sub.f32 	%f44, %f41, %f35;
	sub.f32 	%f45, %f41, %f36;
	sub.f32 	%f46, %f41, %f37;
	sub.f32 	%f47, %f41, %f38;
	sub.f32 	%f48, %f41, %f39;
	sub.f32 	%f49, %f41, %f40;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f42, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f43, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f44, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f45, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	mul.f32 	%f10, %f46, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f47, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	mul.f32 	%f14, %f48, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f49, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f50, %f1, 0f3F800000;
	add.f32 	%f51, %f3, 0f3F800000;
	add.f32 	%f52, %f5, 0f3F800000;
	add.f32 	%f53, %f7, 0f3F800000;
	add.f32 	%f54, %f9, 0f3F800000;
	add.f32 	%f55, %f11, 0f3F800000;
	add.f32 	%f56, %f13, 0f3F800000;
	add.f32 	%f57, %f15, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r20, %f50;
	mov.b32 	%r19, 1065353216;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f58, %r18;
	mov.b32 	%r23, %f51;
	// begin inline asm
	div.full.f32 %r21, %r19, %r23;
	// end inline asm
	mov.b32 	%f59, %r21;
	mov.b32 	%r26, %f52;
	// begin inline asm
	div.full.f32 %r24, %r19, %r26;
	// end inline asm
	mov.b32 	%f60, %r24;
	mov.b32 	%r29, %f53;
	// begin inline asm
	div.full.f32 %r27, %r19, %r29;
	// end inline asm
	mov.b32 	%f61, %r27;
	mov.b32 	%r32, %f54;
	// begin inline asm
	div.full.f32 %r30, %r19, %r32;
	// end inline asm
	mov.b32 	%f62, %r30;
	mov.b32 	%r35, %f55;
	// begin inline asm
	div.full.f32 %r33, %r19, %r35;
	// end inline asm
	mov.b32 	%f63, %r33;
	mov.b32 	%r38, %f56;
	// begin inline asm
	div.full.f32 %r36, %r19, %r38;
	// end inline asm
	mov.b32 	%f64, %r36;
	mov.b32 	%r41, %f57;
	// begin inline asm
	div.full.f32 %r39, %r19, %r41;
	// end inline asm
	mov.b32 	%f65, %r39;
$L__tmp2:
	.loc	1 30 18                         // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:30:18
	mul.f32 	%f66, %f33, %f58;
	mul.f32 	%f67, %f34, %f59;
	mul.f32 	%f68, %f35, %f60;
	mul.f32 	%f69, %f36, %f61;
	mul.f32 	%f70, %f37, %f62;
	mul.f32 	%f71, %f38, %f63;
	mul.f32 	%f72, %f39, %f64;
	mul.f32 	%f73, %f40, %f65;
	.loc	1 31 39                         // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:31:39
	mov.b32 	%r42, %f33;
	mov.b32 	%r43, %f34;
	mov.b32 	%r44, %f35;
	mov.b32 	%r45, %f36;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r42, %r43, %r44, %r45 };
	// end inline asm
	mov.b32 	%r46, %f37;
	mov.b32 	%r47, %f38;
	mov.b32 	%r48, %f39;
	mov.b32 	%r49, %f40;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r46, %r47, %r48, %r49 };
	// end inline asm
	.loc	1 32 25                         // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:32:25
	add.s64 	%rd7, %rd11, %rd12;
	add.s64 	%rd8, %rd7, 2048;
	.loc	1 32 36                         // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:32:36
	mov.b32 	%r50, %f66;
	mov.b32 	%r51, %f67;
	mov.b32 	%r52, %f68;
	mov.b32 	%r53, %f69;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd7 + 0 ], { %r50, %r51, %r52, %r53 };
	// end inline asm
	mov.b32 	%r54, %f70;
	mov.b32 	%r55, %f71;
	mov.b32 	%r56, %f72;
	mov.b32 	%r57, %f73;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd8 + 0 ], { %r54, %r55, %r56, %r57 };
	// end inline asm
	.loc	1 32 4                          // c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py:32:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6n/c6nei7x3mxvwwtdqvy6uvy5rjsjnrqxkm3t7cewnshg6ickbsbxa.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 180                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xad DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 110
.b8 101
.b8 105
.b8 55
.b8 120
.b8 51
.b8 109
.b8 120
.b8 118
.b8 119
.b8 119
.b8 116
.b8 100
.b8 113
.b8 118
.b8 121
.b8 54
.b8 117
.b8 118
.b8 121
.b8 53
.b8 114
.b8 106
.b8 115
.b8 106
.b8 110
.b8 114
.b8 113
.b8 120
.b8 107
.b8 109
.b8 51
.b8 116
.b8 55
.b8 99
.b8 101
.b8 119
.b8 110
.b8 115
.b8 104
.b8 103
.b8 54
.b8 105
.b8 99
.b8 107
.b8 98
.b8 115
.b8 98
.b8 120
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 115
.b8 105
.b8 108
.b8 117
.b8 95
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 29                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
