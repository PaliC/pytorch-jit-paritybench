//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_abs_add_div_mean_mul_std_sub_0 // -- Begin function triton_per_fused_abs_add_div_mean_mul_std_sub_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_abs_add_div_mean_mul_std_sub_0
.visible .entry triton_per_fused_abs_add_div_mean_mul_std_sub_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_mean_mul_std_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_mean_mul_std_sub_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_mean_mul_std_sub_0_param_2,
	.param .u32 triton_per_fused_abs_add_div_mean_mul_std_sub_0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<15>;
	.reg .b32 	%r<95>;
	.reg .f32 	%f<81>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd3, [triton_per_fused_abs_add_div_mean_mul_std_sub_0_param_0];
	ld.param.u64 	%rd4, [triton_per_fused_abs_add_div_mean_mul_std_sub_0_param_1];
$L__tmp0:
	.loc	1 27 26                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:27:26
	mov.u32 	%r49, %tid.x;
	and.b32  	%r50, %r49, 31;
	ld.param.u64 	%rd5, [triton_per_fused_abs_add_div_mean_mul_std_sub_0_param_2];
	shl.b32 	%r51, %r49, 2;
	and.b32  	%r52, %r51, 252;
	.loc	1 31 30                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:31:30
	mul.wide.u32 	%rd6, %r52, 4;
	add.s64 	%rd1, %rd4, %rd6;
	mov.pred 	%p1, -1;
	.loc	1 31 35                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:31:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r20, 0x0;
	@%p1 ld.global.v4.b32 { %r11, %r14, %r17, %r20 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r11;
	mov.b32 	%f2, %r14;
	mov.b32 	%f3, %r17;
	mov.b32 	%f4, %r20;
	.loc	1 32 30                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:32:30
	add.s64 	%rd2, %rd5, %rd6;
	.loc	1 32 35                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:32:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r5;
	mov.b32 	%f6, %r6;
	mov.b32 	%f7, %r7;
	mov.b32 	%f8, %r8;
	.loc	1 33 18                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:33:18
	sub.f32 	%f9, %f1, %f5;
	sub.f32 	%f10, %f2, %f6;
	sub.f32 	%f11, %f3, %f7;
	sub.f32 	%f12, %f4, %f8;
	.loc	1 34 18                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:34:18
	mov.b32 	%r10, %f9;
	// begin inline asm
	div.full.f32 %r9, %r10, %r11;
	// end inline asm
	and.b32  	%r53, %r9, 2147483647;
	mov.b32 	%f13, %r53;
	mov.b32 	%r13, %f10;
	// begin inline asm
	div.full.f32 %r12, %r13, %r14;
	// end inline asm
	and.b32  	%r54, %r12, 2147483647;
	mov.b32 	%f14, %r54;
	mov.b32 	%r16, %f11;
	// begin inline asm
	div.full.f32 %r15, %r16, %r17;
	// end inline asm
	and.b32  	%r55, %r15, 2147483647;
	mov.b32 	%f15, %r55;
	mov.b32 	%r19, %f12;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	and.b32  	%r56, %r18, 2147483647;
	mov.b32 	%f16, %r56;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f13, %f14;
	add.f32 	%f18, %f17, %f15;
	add.f32 	%f19, %f18, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f19;
	shfl.sync.bfly.b32	%r58, %r57, 16, 31, -1;
	mov.b32 	%f20, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f21;
	shfl.sync.bfly.b32	%r60, %r59, 8, 31, -1;
	mov.b32 	%f22, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f23;
	shfl.sync.bfly.b32	%r62, %r61, 4, 31, -1;
	mov.b32 	%f24, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f25;
	shfl.sync.bfly.b32	%r64, %r63, 2, 31, -1;
	mov.b32 	%f26, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f27;
	shfl.sync.bfly.b32	%r66, %r65, 1, 31, -1;
	mov.b32 	%f28, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p3, %r50, 0;
	shr.u32 	%r67, %r49, 3;
	and.b32  	%r68, %r67, 4;
	mov.u32 	%r69, global_smem;
	add.s32 	%r21, %r69, %r68;
	mov.b32 	%r22, %f29;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p4, %r49, 2;
	add.s32 	%r24, %r69, %r51;
	// begin inline asm
	@%p4 ld.shared.b32 %r23, [ %r24 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r23;
	shfl.sync.bfly.b32	%r70, %r23, 1, 31, -1;
	mov.b32 	%f31, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r71, %r49, 1;
	setp.eq.b32 	%p13, %r71, 1;
	not.pred 	%p14, %p13;
	and.pred  	%p5, %p4, %p14;
	mov.b32 	%r26, %f32;
	// begin inline asm
	@%p5 st.shared.b32 [ %r24 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f33, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f34, %f33, 0f00000000;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f9, %f10;
	add.f32 	%f36, %f11, %f35;
	add.f32 	%f37, %f12, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f37;
	shfl.sync.bfly.b32	%r73, %r72, 16, 31, -1;
	mov.b32 	%f38, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f39;
	shfl.sync.bfly.b32	%r75, %r74, 8, 31, -1;
	mov.b32 	%f40, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f41;
	shfl.sync.bfly.b32	%r77, %r76, 4, 31, -1;
	mov.b32 	%f42, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f43;
	shfl.sync.bfly.b32	%r79, %r78, 2, 31, -1;
	mov.b32 	%f44, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f45;
	shfl.sync.bfly.b32	%r81, %r80, 1, 31, -1;
	mov.b32 	%f46, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f47;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p4 ld.shared.b32 %r29, [ %r24 + 0 ];
	// end inline asm
	mov.b32 	%f48, %r29;
	shfl.sync.bfly.b32	%r82, %r29, 1, 31, -1;
	mov.b32 	%f49, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f50;
	// begin inline asm
	@%p5 st.shared.b32 [ %r24 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f51, [global_smem];
$L__tmp4:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f52, %f51, 0f00000000;
$L__tmp5:
	.loc	1 43 20                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:43:20
	mov.b32 	%r34, %f52;
	mov.b32 	%r35, 1132462080;
	// begin inline asm
	div.full.f32 %r33, %r34, %r35;
	// end inline asm
	mov.b32 	%f53, %r33;
	.loc	1 44 19                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:44:19
	sub.f32 	%f54, %f9, %f53;
	sub.f32 	%f55, %f10, %f53;
	sub.f32 	%f56, %f11, %f53;
	sub.f32 	%f57, %f12, %f53;
	.loc	1 45 20                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:45:20
	mul.f32 	%f58, %f55, %f55;
$L__tmp6:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f59, %f54, %f54, %f58;
	fma.rn.f32 	%f60, %f56, %f56, %f59;
	fma.rn.f32 	%f61, %f57, %f57, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f61;
	shfl.sync.bfly.b32	%r84, %r83, 16, 31, -1;
	mov.b32 	%f62, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f63;
	shfl.sync.bfly.b32	%r86, %r85, 8, 31, -1;
	mov.b32 	%f64, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r87, %f65;
	shfl.sync.bfly.b32	%r88, %r87, 4, 31, -1;
	mov.b32 	%f66, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f67;
	shfl.sync.bfly.b32	%r90, %r89, 2, 31, -1;
	mov.b32 	%f68, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f69, %f67, %f68;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f69;
	shfl.sync.bfly.b32	%r92, %r91, 1, 31, -1;
	mov.b32 	%f70, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f71, %f69, %f70;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f71;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r37;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p4 ld.shared.b32 %r38, [ %r24 + 0 ];
	// end inline asm
	mov.b32 	%f72, %r38;
	shfl.sync.bfly.b32	%r93, %r38, 1, 31, -1;
	mov.b32 	%f73, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f74;
	// begin inline asm
	@%p5 st.shared.b32 [ %r24 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f75, [global_smem];
$L__tmp7:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f76, %f75, 0f00000000;
$L__tmp8:
	.loc	1 49 19                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:49:19
	mov.b32 	%r43, %f34;
	// begin inline asm
	div.full.f32 %r42, %r43, %r35;
	// end inline asm
	mov.b32 	%f77, %r42;
	.loc	1 51 20                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:51:20
	mov.b32 	%r46, %f76;
	mov.b32 	%r47, 1132396544;
	// begin inline asm
	div.full.f32 %r45, %r46, %r47;
	// end inline asm
	mov.b32 	%f78, %r45;
	.loc	1 52 27                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:52:27
	sqrt.approx.ftz.f32 	%f79, %f78;
	.loc	1 55 20                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:55:20
	fma.rn.f32 	%f80, %f79, 0f00000000, %f77;
	.loc	1 56 4                          // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:56:4
	bar.sync 	0;
	.loc	1 57 63                         // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:57:63
	and.b32  	%r94, %r49, 63;
	setp.eq.s32 	%p12, %r94, 0;
	mov.b32 	%r48, %f80;
	// begin inline asm
	@%p12 st.global.b32 [ %rd3 + 0 ], { %r48 };
	// end inline asm
	.loc	1 57 4                          // c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py:57:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6x/c6xaa6f3ztrtwvhi37qk4224xni5xnkjtaxpkjyybkqabohavuqh.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 312                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x131 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 120
.b8 97
.b8 97
.b8 54
.b8 102
.b8 51
.b8 122
.b8 116
.b8 114
.b8 116
.b8 119
.b8 118
.b8 104
.b8 105
.b8 51
.b8 55
.b8 113
.b8 107
.b8 52
.b8 50
.b8 50
.b8 52
.b8 120
.b8 110
.b8 105
.b8 53
.b8 120
.b8 110
.b8 107
.b8 106
.b8 116
.b8 97
.b8 120
.b8 112
.b8 107
.b8 106
.b8 121
.b8 121
.b8 98
.b8 107
.b8 113
.b8 97
.b8 98
.b8 111
.b8 104
.b8 97
.b8 118
.b8 117
.b8 113
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x32 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 98
.b8 115
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 116
.b8 100
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x95:0xa6 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xaa:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xda:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x10a:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp6                           // DW_AT_low_pc
.b64 $L__tmp7                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x122:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
