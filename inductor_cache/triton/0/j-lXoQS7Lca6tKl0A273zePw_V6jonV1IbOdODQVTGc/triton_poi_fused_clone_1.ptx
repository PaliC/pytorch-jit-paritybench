//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_1 // -- Begin function triton_poi_fused_clone_1
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_clone_1
.visible .entry triton_poi_fused_clone_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_1_param_2,
	.param .u32 triton_poi_fused_clone_1_param_3,
	.param .u32 triton_poi_fused_clone_1_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<65>;
	.reg .f32 	%f<10>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_clone_1_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_clone_1_param_1];
$L__tmp0:
	.loc	1 22 28                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:22:33
	shl.b32 	%r23, %r1, 4;
	ld.param.u64 	%rd9, [triton_poi_fused_clone_1_param_2];
	.loc	1 23 44                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:23:44
	mov.u32 	%r24, %tid.x;
	shl.b32 	%r25, %r24, 2;
	and.b32  	%r26, %r25, 12;
	bfe.u32 	%r27, %r24, 3, 4;
	.loc	1 23 23                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:23:23
	or.b32  	%r28, %r23, %r26;
	or.b32  	%r29, %r23, %r27;
	.loc	1 24 21                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:24:21
	setp.lt.s32 	%p11, %r28, 16;
	setp.lt.s32 	%p12, %r29, 16;
	.loc	1 25 28                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:25:33
	shl.b32 	%r30, %r2, 5;
	.loc	1 26 44                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:26:44
	bfe.u32 	%r31, %r24, 2, 5;
	and.b32  	%r32, %r25, 28;
	.loc	1 26 23                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:26:23
	or.b32  	%r33, %r30, %r31;
	or.b32  	%r34, %r30, %r32;
	.loc	1 27 21                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:27:21
	setp.lt.s32 	%p2, %r33, 32;
	setp.lt.s32 	%p13, %r34, 32;
	.loc	1 32 37                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:32:37
	shl.b32 	%r35, %r33, 2;
	.loc	1 32 46                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:32:46
	shl.b32 	%r36, %r28, 5;
	.loc	1 32 42                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:32:42
	add.s32 	%r37, %r35, %r36;
	.loc	1 32 30                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:32:30
	mul.wide.s32 	%rd10, %r37, 4;
	add.s64 	%rd1, %rd7, %rd10;
	.loc	1 32 59                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:32:59
	and.pred  	%p1, %p11, %p2;
	and.pred  	%p10, %p12, %p13;
	.loc	1 32 51                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:32:51
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	.loc	1 33 30                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:33:30
	mul.wide.s32 	%rd11, %r33, 4;
	add.s64 	%rd2, %rd8, %rd11;
	.loc	1 33 35                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:33:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r7 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r8 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r9 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r10;
	.loc	1 34 18                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:34:18
	add.f32 	%f6, %f1, %f5;
	add.f32 	%f7, %f2, %f5;
	add.f32 	%f8, %f3, %f5;
	add.f32 	%f9, %f4, %f5;
	.loc	1 35 33                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:35:33
	shl.b32 	%r38, %r29, 5;
	.loc	1 35 30                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:35:30
	add.s32 	%r39, %r34, %r38;
	.loc	1 35 25                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:35:25
	mul.wide.s32 	%rd12, %r39, 4;
	add.s64 	%rd6, %rd9, %rd12;
	.loc	1 35 44                         // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:35:44
	shl.b32 	%r40, %r24, 7;
	and.b32  	%r41, %r40, 384;
	or.b32  	%r42, %r41, %r31;
	shr.u32 	%r43, %r41, 3;
	mov.u32 	%r44, global_smem;
	add.s32 	%r45, %r44, %r43;
	shl.b32 	%r46, %r42, 2;
	add.s32 	%r11, %r45, %r46;
	mov.b32 	%r12, %f6;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	or.b32  	%r47, %r41, 32;
	shr.u32 	%r48, %r47, 3;
	add.s32 	%r49, %r44, %r48;
	add.s32 	%r50, %r49, %r46;
	add.s32 	%r13, %r50, 128;
	mov.b32 	%r14, %f7;
	// begin inline asm
	@%p6 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	or.b32  	%r51, %r41, 64;
	shr.u32 	%r52, %r51, 3;
	add.s32 	%r53, %r44, %r52;
	add.s32 	%r54, %r53, %r46;
	add.s32 	%r15, %r54, 256;
	mov.b32 	%r16, %f8;
	// begin inline asm
	@%p6 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	or.b32  	%r55, %r41, 96;
	shr.u32 	%r56, %r55, 3;
	add.s32 	%r57, %r44, %r56;
	add.s32 	%r58, %r57, %r46;
	add.s32 	%r17, %r58, 384;
	mov.b32 	%r18, %f9;
	// begin inline asm
	@%p6 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r59, %r24, 1;
	and.b32  	%r60, %r59, 60;
	add.s32 	%r61, %r44, %r60;
	shl.b32 	%r62, %r24, 4;
	and.b32  	%r63, %r62, 2032;
	add.s32 	%r64, %r61, %r63;
	ld.shared.u32 	%r19, [%r64];
	ld.shared.u32 	%r20, [%r64+4];
	ld.shared.u32 	%r21, [%r64+8];
	ld.shared.u32 	%r22, [%r64+12];
	// begin inline asm
	@%p10 st.global.v4.b32 [ %rd6 + 0 ], { %r19, %r20, %r21, %r22 };
	// end inline asm
	.loc	1 35 4                          // clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/lv/clv5cru7ueezfb37w54w6y5373fk22gxyjousrsckathtaj2sxnz.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 118
.b8 53
.b8 99
.b8 114
.b8 117
.b8 55
.b8 117
.b8 101
.b8 101
.b8 122
.b8 102
.b8 98
.b8 51
.b8 55
.b8 119
.b8 53
.b8 52
.b8 119
.b8 54
.b8 121
.b8 53
.b8 51
.b8 55
.b8 51
.b8 102
.b8 107
.b8 50
.b8 50
.b8 103
.b8 120
.b8 121
.b8 106
.b8 111
.b8 117
.b8 115
.b8 114
.b8 115
.b8 99
.b8 107
.b8 97
.b8 116
.b8 104
.b8 116
.b8 97
.b8 106
.b8 50
.b8 115
.b8 120
.b8 110
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 108
.b8 118
.b8 0
	}
	.section	.debug_macinfo	{	}
