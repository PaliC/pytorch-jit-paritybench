#loc = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":19:0)
module {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<8> : tensor<256xi8> loc(#loc1)
    %cst_0 = arith.constant dense<7> : tensor<256xi8> loc(#loc1)
    %cst_1 = arith.constant dense<6> : tensor<256xi8> loc(#loc1)
    %cst_2 = arith.constant dense<5> : tensor<256xi8> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<256xi8> loc(#loc1)
    %cst_4 = arith.constant dense<3> : tensor<256xi8> loc(#loc1)
    %cst_5 = arith.constant dense<2> : tensor<256xi8> loc(#loc1)
    %cst_6 = arith.constant dense<0> : tensor<256xi8> loc(#loc1)
    %cst_7 = arith.constant dense<1> : tensor<256xi8> loc(#loc1)
    %cst_8 = arith.constant dense<62> : tensor<256xi32> loc(#loc1)
    %cst_9 = arith.constant dense<61> : tensor<256xi32> loc(#loc1)
    %cst_10 = arith.constant dense<32> : tensor<256xi32> loc(#loc1)
    %cst_11 = arith.constant dense<31> : tensor<256xi32> loc(#loc1)
    %cst_12 = arith.constant dense<30> : tensor<256xi32> loc(#loc1)
    %cst_13 = arith.constant dense<1> : tensor<256xi32> loc(#loc1)
    %cst_14 = arith.constant dense<0xFF800000> : tensor<256xf32> loc(#loc1)
    %cst_15 = arith.constant dense<3616> : tensor<256xi32> loc(#loc1)
    %cst_16 = arith.constant dense<30> : tensor<256xi64> loc(#loc1)
    %cst_17 = arith.constant dense<0> : tensor<256xi64> loc(#loc1)
    %cst_18 = arith.constant dense<2> : tensor<256xi32> loc(#loc1)
    %cst_19 = arith.constant dense<60> : tensor<256xi32> loc(#loc1)
    %cst_20 = arith.constant dense<900> : tensor<256xi32> loc(#loc1)
    %cst_21 = arith.constant dense<15> : tensor<256xi32> loc(#loc1)
    %cst_22 = arith.constant dense<3600> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_22 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_21 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_21 : tensor<256xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_21 : tensor<256xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_20 : tensor<256xi32> loc(#loc10)
    %10 = arith.remsi %6, %cst_19 : tensor<256xi32> loc(#loc11)
    %11 = arith.muli %7, %cst_18 : tensor<256xi32> loc(#loc12)
    %12 = arith.extsi %11 : tensor<256xi32> to tensor<256xi64> loc(#loc13)
    %13 = arith.cmpi sge, %12, %cst_17 : tensor<256xi64> loc(#loc13)
    %14 = arith.cmpi slt, %12, %cst_16 : tensor<256xi64> loc(#loc14)
    %15 = arith.andi %13, %14 : tensor<256xi1> loc(#loc15)
    %16 = arith.muli %8, %cst_18 : tensor<256xi32> loc(#loc16)
    %17 = arith.extsi %16 : tensor<256xi32> to tensor<256xi64> loc(#loc17)
    %18 = arith.cmpi sge, %17, %cst_17 : tensor<256xi64> loc(#loc17)
    %19 = arith.cmpi slt, %17, %cst_16 : tensor<256xi64> loc(#loc18)
    %20 = arith.andi %18, %19 : tensor<256xi1> loc(#loc19)
    %21 = arith.andi %15, %20 : tensor<256xi1> loc(#loc20)
    %22 = arith.muli %10, %cst_19 : tensor<256xi32> loc(#loc21)
    %23 = arith.addi %16, %22 : tensor<256xi32> loc(#loc22)
    %24 = arith.muli %9, %cst_15 : tensor<256xi32> loc(#loc23)
    %25 = arith.addi %23, %24 : tensor<256xi32> loc(#loc24)
    %26 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc25)
    %27 = tt.addptr %26, %25 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc25)
    %28 = arith.andi %21, %5 : tensor<256xi1> loc(#loc26)
    %29 = tt.load %27, %28, %cst_14 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc27)
    %30 = arith.addi %16, %cst_13 : tensor<256xi32> loc(#loc28)
    %31 = arith.extsi %30 : tensor<256xi32> to tensor<256xi64> loc(#loc29)
    %32 = arith.cmpi sge, %31, %cst_17 : tensor<256xi64> loc(#loc29)
    %33 = arith.cmpi slt, %31, %cst_16 : tensor<256xi64> loc(#loc30)
    %34 = arith.andi %32, %33 : tensor<256xi1> loc(#loc31)
    %35 = arith.andi %15, %34 : tensor<256xi1> loc(#loc32)
    %36 = arith.addi %30, %22 : tensor<256xi32> loc(#loc33)
    %37 = arith.addi %36, %24 : tensor<256xi32> loc(#loc34)
    %38 = tt.addptr %26, %37 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc35)
    %39 = arith.andi %35, %5 : tensor<256xi1> loc(#loc36)
    %40 = tt.load %38, %39, %cst_14 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc37)
    %41 = arith.cmpf ogt, %40, %29 : tensor<256xf32> loc(#loc123)
    %42 = arith.cmpf une, %40, %40 : tensor<256xf32> loc(#loc124)
    %43 = arith.ori %41, %42 : tensor<256xi1> loc(#loc125)
    %44 = arith.select %43, %40, %29 : tensor<256xi1>, tensor<256xf32> loc(#loc126)
    %45 = arith.addi %16, %cst_18 : tensor<256xi32> loc(#loc43)
    %46 = arith.extsi %45 : tensor<256xi32> to tensor<256xi64> loc(#loc44)
    %47 = arith.cmpi sge, %46, %cst_17 : tensor<256xi64> loc(#loc44)
    %48 = arith.cmpi slt, %46, %cst_16 : tensor<256xi64> loc(#loc45)
    %49 = arith.andi %47, %48 : tensor<256xi1> loc(#loc46)
    %50 = arith.andi %15, %49 : tensor<256xi1> loc(#loc47)
    %51 = arith.addi %45, %22 : tensor<256xi32> loc(#loc48)
    %52 = arith.addi %51, %24 : tensor<256xi32> loc(#loc49)
    %53 = tt.addptr %26, %52 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc50)
    %54 = arith.andi %50, %5 : tensor<256xi1> loc(#loc51)
    %55 = tt.load %53, %54, %cst_14 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc52)
    %56 = arith.cmpf ogt, %55, %44 : tensor<256xf32> loc(#loc127)
    %57 = arith.cmpf une, %55, %55 : tensor<256xf32> loc(#loc128)
    %58 = arith.ori %56, %57 : tensor<256xi1> loc(#loc129)
    %59 = arith.select %58, %55, %44 : tensor<256xi1>, tensor<256xf32> loc(#loc130)
    %60 = arith.addi %11, %cst_13 : tensor<256xi32> loc(#loc54)
    %61 = arith.extsi %60 : tensor<256xi32> to tensor<256xi64> loc(#loc55)
    %62 = arith.cmpi sge, %61, %cst_17 : tensor<256xi64> loc(#loc55)
    %63 = arith.cmpi slt, %61, %cst_16 : tensor<256xi64> loc(#loc56)
    %64 = arith.andi %62, %63 : tensor<256xi1> loc(#loc57)
    %65 = arith.andi %64, %20 : tensor<256xi1> loc(#loc58)
    %66 = arith.addi %16, %cst_12 : tensor<256xi32> loc(#loc59)
    %67 = arith.addi %66, %22 : tensor<256xi32> loc(#loc60)
    %68 = arith.addi %67, %24 : tensor<256xi32> loc(#loc61)
    %69 = tt.addptr %26, %68 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc62)
    %70 = arith.andi %65, %5 : tensor<256xi1> loc(#loc63)
    %71 = tt.load %69, %70, %cst_14 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc64)
    %72 = arith.cmpf ogt, %71, %59 : tensor<256xf32> loc(#loc131)
    %73 = arith.cmpf une, %71, %71 : tensor<256xf32> loc(#loc132)
    %74 = arith.ori %72, %73 : tensor<256xi1> loc(#loc133)
    %75 = arith.select %74, %71, %59 : tensor<256xi1>, tensor<256xf32> loc(#loc134)
    %76 = arith.andi %64, %34 : tensor<256xi1> loc(#loc66)
    %77 = arith.addi %16, %cst_11 : tensor<256xi32> loc(#loc67)
    %78 = arith.addi %77, %22 : tensor<256xi32> loc(#loc68)
    %79 = arith.addi %78, %24 : tensor<256xi32> loc(#loc69)
    %80 = tt.addptr %26, %79 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc70)
    %81 = arith.andi %76, %5 : tensor<256xi1> loc(#loc71)
    %82 = tt.load %80, %81, %cst_14 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc72)
    %83 = arith.cmpf ogt, %82, %75 : tensor<256xf32> loc(#loc135)
    %84 = arith.cmpf une, %82, %82 : tensor<256xf32> loc(#loc136)
    %85 = arith.ori %83, %84 : tensor<256xi1> loc(#loc137)
    %86 = arith.select %85, %82, %75 : tensor<256xi1>, tensor<256xf32> loc(#loc138)
    %87 = arith.andi %64, %49 : tensor<256xi1> loc(#loc74)
    %88 = arith.addi %16, %cst_10 : tensor<256xi32> loc(#loc75)
    %89 = arith.addi %88, %22 : tensor<256xi32> loc(#loc76)
    %90 = arith.addi %89, %24 : tensor<256xi32> loc(#loc77)
    %91 = tt.addptr %26, %90 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc78)
    %92 = arith.andi %87, %5 : tensor<256xi1> loc(#loc79)
    %93 = tt.load %91, %92, %cst_14 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc80)
    %94 = arith.cmpf ogt, %93, %86 : tensor<256xf32> loc(#loc139)
    %95 = arith.cmpf une, %93, %93 : tensor<256xf32> loc(#loc140)
    %96 = arith.ori %94, %95 : tensor<256xi1> loc(#loc141)
    %97 = arith.select %96, %93, %86 : tensor<256xi1>, tensor<256xf32> loc(#loc142)
    %98 = arith.addi %11, %cst_18 : tensor<256xi32> loc(#loc82)
    %99 = arith.extsi %98 : tensor<256xi32> to tensor<256xi64> loc(#loc83)
    %100 = arith.cmpi sge, %99, %cst_17 : tensor<256xi64> loc(#loc83)
    %101 = arith.cmpi slt, %99, %cst_16 : tensor<256xi64> loc(#loc84)
    %102 = arith.andi %100, %101 : tensor<256xi1> loc(#loc85)
    %103 = arith.andi %102, %20 : tensor<256xi1> loc(#loc86)
    %104 = arith.addi %16, %cst_19 : tensor<256xi32> loc(#loc87)
    %105 = arith.addi %104, %22 : tensor<256xi32> loc(#loc88)
    %106 = arith.addi %105, %24 : tensor<256xi32> loc(#loc89)
    %107 = tt.addptr %26, %106 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc90)
    %108 = arith.andi %103, %5 : tensor<256xi1> loc(#loc91)
    %109 = tt.load %107, %108, %cst_14 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc92)
    %110 = arith.cmpf ogt, %109, %97 : tensor<256xf32> loc(#loc143)
    %111 = arith.cmpf une, %109, %109 : tensor<256xf32> loc(#loc144)
    %112 = arith.ori %110, %111 : tensor<256xi1> loc(#loc145)
    %113 = arith.select %112, %109, %97 : tensor<256xi1>, tensor<256xf32> loc(#loc146)
    %114 = arith.andi %102, %34 : tensor<256xi1> loc(#loc94)
    %115 = arith.addi %16, %cst_9 : tensor<256xi32> loc(#loc95)
    %116 = arith.addi %115, %22 : tensor<256xi32> loc(#loc96)
    %117 = arith.addi %116, %24 : tensor<256xi32> loc(#loc97)
    %118 = tt.addptr %26, %117 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc98)
    %119 = arith.andi %114, %5 : tensor<256xi1> loc(#loc99)
    %120 = tt.load %118, %119, %cst_14 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc100)
    %121 = arith.cmpf ogt, %120, %113 : tensor<256xf32> loc(#loc147)
    %122 = arith.cmpf une, %120, %120 : tensor<256xf32> loc(#loc148)
    %123 = arith.ori %121, %122 : tensor<256xi1> loc(#loc149)
    %124 = arith.select %123, %120, %113 : tensor<256xi1>, tensor<256xf32> loc(#loc150)
    %125 = arith.andi %102, %49 : tensor<256xi1> loc(#loc102)
    %126 = arith.addi %16, %cst_8 : tensor<256xi32> loc(#loc103)
    %127 = arith.addi %126, %22 : tensor<256xi32> loc(#loc104)
    %128 = arith.addi %127, %24 : tensor<256xi32> loc(#loc105)
    %129 = tt.addptr %26, %128 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc106)
    %130 = arith.andi %125, %5 : tensor<256xi1> loc(#loc107)
    %131 = tt.load %129, %130, %cst_14 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc108)
    %132 = arith.cmpf ogt, %131, %124 : tensor<256xf32> loc(#loc151)
    %133 = arith.cmpf une, %131, %131 : tensor<256xf32> loc(#loc152)
    %134 = arith.ori %132, %133 : tensor<256xi1> loc(#loc153)
    %135 = arith.select %134, %131, %124 : tensor<256xi1>, tensor<256xf32> loc(#loc154)
    %136 = arith.select %41, %cst_7, %cst_6 : tensor<256xi1>, tensor<256xi8> loc(#loc110)
    %137 = arith.select %56, %cst_5, %136 : tensor<256xi1>, tensor<256xi8> loc(#loc111)
    %138 = arith.select %72, %cst_4, %137 : tensor<256xi1>, tensor<256xi8> loc(#loc112)
    %139 = arith.select %83, %cst_3, %138 : tensor<256xi1>, tensor<256xi8> loc(#loc113)
    %140 = arith.select %94, %cst_2, %139 : tensor<256xi1>, tensor<256xi8> loc(#loc114)
    %141 = arith.select %110, %cst_1, %140 : tensor<256xi1>, tensor<256xi8> loc(#loc115)
    %142 = arith.select %121, %cst_0, %141 : tensor<256xi1>, tensor<256xi8> loc(#loc116)
    %143 = arith.select %132, %cst, %142 : tensor<256xi1>, tensor<256xi8> loc(#loc117)
    %144 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc118)
    %145 = tt.addptr %144, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc118)
    tt.store %145, %135, %5 : tensor<256x!tt.ptr<f32>> loc(#loc119)
    %146 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<256x!tt.ptr<i8>> loc(#loc120)
    %147 = tt.addptr %146, %4 : tensor<256x!tt.ptr<i8>>, tensor<256xi32> loc(#loc120)
    tt.store %147, %143, %5 : tensor<256x!tt.ptr<i8>> loc(#loc121)
    tt.return loc(#loc122)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":21:28)
#loc3 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":21:33)
#loc4 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":22:36)
#loc5 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":22:23)
#loc6 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":23:21)
#loc7 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":24:21)
#loc8 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":24:27)
#loc9 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":25:19)
#loc10 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":26:19)
#loc11 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":27:27)
#loc12 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":29:13)
#loc13 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":31:19)
#loc14 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":33:18)
#loc15 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":34:18)
#loc16 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":35:13)
#loc17 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":36:19)
#loc18 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":37:18)
#loc19 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":38:18)
#loc20 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":39:19)
#loc21 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":40:41)
#loc22 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":40:38)
#loc23 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":40:51)
#loc24 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":40:46)
#loc25 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":40:31)
#loc26 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":40:64)
#loc27 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":40:56)
#loc28 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":41:16)
#loc29 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":42:21)
#loc30 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":43:20)
#loc31 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":44:20)
#loc32 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":45:19)
#loc33 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":46:42)
#loc34 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":46:50)
#loc35 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":46:31)
#loc36 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":46:68)
#loc37 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":46:60)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc39 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":47:42)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc43 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":48:16)
#loc44 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":49:21)
#loc45 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":50:20)
#loc46 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":51:20)
#loc47 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":52:19)
#loc48 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":53:42)
#loc49 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":53:50)
#loc50 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":53:31)
#loc51 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":53:68)
#loc52 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":53:60)
#loc53 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":54:42)
#loc54 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":55:16)
#loc55 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":56:21)
#loc56 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":57:20)
#loc57 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":58:20)
#loc58 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":59:20)
#loc59 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":60:36)
#loc60 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":60:43)
#loc61 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":60:51)
#loc62 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":60:31)
#loc63 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":60:69)
#loc64 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":60:61)
#loc65 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":61:42)
#loc66 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":62:20)
#loc67 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":63:36)
#loc68 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":63:43)
#loc69 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":63:51)
#loc70 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":63:31)
#loc71 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":63:69)
#loc72 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":63:61)
#loc73 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":64:42)
#loc74 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":65:20)
#loc75 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":66:36)
#loc76 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":66:43)
#loc77 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":66:51)
#loc78 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":66:31)
#loc79 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":66:69)
#loc80 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":66:61)
#loc81 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":67:42)
#loc82 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":68:16)
#loc83 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":69:21)
#loc84 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":70:20)
#loc85 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":71:20)
#loc86 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":72:20)
#loc87 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":73:36)
#loc88 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":73:43)
#loc89 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":73:51)
#loc90 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":73:31)
#loc91 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":73:69)
#loc92 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":73:61)
#loc93 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":74:42)
#loc94 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":75:20)
#loc95 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":76:36)
#loc96 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":76:43)
#loc97 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":76:51)
#loc98 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":76:31)
#loc99 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":76:69)
#loc100 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":76:61)
#loc101 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":77:42)
#loc102 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":78:20)
#loc103 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":79:36)
#loc104 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":79:43)
#loc105 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":79:51)
#loc106 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":79:31)
#loc107 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":79:69)
#loc108 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":79:61)
#loc109 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":80:42)
#loc110 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":84:35)
#loc111 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":87:35)
#loc112 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":90:35)
#loc113 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":93:35)
#loc114 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":96:35)
#loc115 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":99:35)
#loc116 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":102:35)
#loc117 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":105:35)
#loc118 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":106:25)
#loc119 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":106:37)
#loc120 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":107:25)
#loc121 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":107:37)
#loc122 = loc("inductor_cache/e5/ce5hmblhslqvdnm5pdece46vw25hxkpxyzbp4v5g6eiyssagy2zw.py":107:4)
#loc123 = loc(callsite(#loc38 at #loc39))
#loc124 = loc(callsite(#loc40 at #loc39))
#loc125 = loc(callsite(#loc41 at #loc39))
#loc126 = loc(callsite(#loc42 at #loc39))
#loc127 = loc(callsite(#loc38 at #loc53))
#loc128 = loc(callsite(#loc40 at #loc53))
#loc129 = loc(callsite(#loc41 at #loc53))
#loc130 = loc(callsite(#loc42 at #loc53))
#loc131 = loc(callsite(#loc38 at #loc65))
#loc132 = loc(callsite(#loc40 at #loc65))
#loc133 = loc(callsite(#loc41 at #loc65))
#loc134 = loc(callsite(#loc42 at #loc65))
#loc135 = loc(callsite(#loc38 at #loc73))
#loc136 = loc(callsite(#loc40 at #loc73))
#loc137 = loc(callsite(#loc41 at #loc73))
#loc138 = loc(callsite(#loc42 at #loc73))
#loc139 = loc(callsite(#loc38 at #loc81))
#loc140 = loc(callsite(#loc40 at #loc81))
#loc141 = loc(callsite(#loc41 at #loc81))
#loc142 = loc(callsite(#loc42 at #loc81))
#loc143 = loc(callsite(#loc38 at #loc93))
#loc144 = loc(callsite(#loc40 at #loc93))
#loc145 = loc(callsite(#loc41 at #loc93))
#loc146 = loc(callsite(#loc42 at #loc93))
#loc147 = loc(callsite(#loc38 at #loc101))
#loc148 = loc(callsite(#loc40 at #loc101))
#loc149 = loc(callsite(#loc41 at #loc101))
#loc150 = loc(callsite(#loc42 at #loc101))
#loc151 = loc(callsite(#loc38 at #loc109))
#loc152 = loc(callsite(#loc40 at #loc109))
#loc153 = loc(callsite(#loc41 at #loc109))
#loc154 = loc(callsite(#loc42 at #loc109))
