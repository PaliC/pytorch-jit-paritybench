//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mean_3 // -- Begin function triton_per_fused_mean_3
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mean_3
.visible .entry triton_per_fused_mean_3(
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_3_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_3_param_2,
	.param .u32 triton_per_fused_mean_3_param_3,
	.param .u32 triton_per_fused_mean_3_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<23>;
	.reg .b32 	%r<160>;
	.reg .f32 	%f<49>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_per_fused_mean_3_param_0];
	ld.param.u64 	%rd8, [triton_per_fused_mean_3_param_1];
$L__tmp0:
	.loc	1 23 28                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:23:33
	shl.b32 	%r35, %r1, 5;
	ld.param.u64 	%rd9, [triton_per_fused_mean_3_param_2];
	.loc	1 24 44                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:24:44
	mov.u32 	%r36, %tid.x;
	shl.b32 	%r38, %r36, 2;
	and.b32  	%r39, %r38, 28;
	bfe.u32 	%r40, %r36, 4, 3;
	and.b32  	%r41, %r36, 15;
	and.b32  	%r42, %r36, 31;
	.loc	1 24 23                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:24:23
	or.b32  	%r43, %r35, %r39;
	or.b32  	%r44, %r35, %r40;
	or.b32  	%r45, %r35, %r42;
	.loc	1 26 34                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:26:34
	bfe.u32 	%r46, %r36, 3, 4;
	.loc	1 28 21                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:28:21
	setp.lt.u32 	%p1, %r46, 9;
	setp.lt.u32 	%p10, %r41, 9;
	.loc	1 31 19                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:31:19
	bfe.s32 	%r47, %r1, 26, 1;
	shr.u32 	%r48, %r47, 20;
	add.s32 	%r49, %r43, %r48;
	shr.s32 	%r50, %r49, 12;
	.loc	1 30 19                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:30:19
	and.b32  	%r51, %r49, -4096;
	sub.s32 	%r52, %r43, %r51;
	.loc	1 31 19                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:31:19
	add.s32 	%r53, %r44, %r48;
	shr.s32 	%r54, %r53, 12;
	add.s32 	%r55, %r53, 8;
	shr.s32 	%r56, %r55, 12;
	add.s32 	%r57, %r53, 16;
	shr.s32 	%r58, %r57, 12;
	add.s32 	%r59, %r53, 24;
	shr.s32 	%r60, %r59, 12;
	.loc	1 32 29                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:32:29
	shr.u32 	%r61, %r54, 23;
	add.s32 	%r62, %r54, %r61;
	and.b32  	%r63, %r62, -512;
	sub.s32 	%r64, %r54, %r63;
	shr.u32 	%r65, %r56, 23;
	add.s32 	%r66, %r56, %r65;
	and.b32  	%r67, %r66, -512;
	sub.s32 	%r68, %r56, %r67;
	shr.u32 	%r69, %r58, 23;
	add.s32 	%r70, %r58, %r69;
	and.b32  	%r71, %r70, -512;
	sub.s32 	%r72, %r58, %r71;
	shr.u32 	%r73, %r60, 23;
	add.s32 	%r74, %r60, %r73;
	and.b32  	%r75, %r74, -512;
	sub.s32 	%r76, %r60, %r75;
	.loc	1 34 40                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:40
	shl.b32 	%r77, %r46, 12;
	.loc	1 34 35                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:35
	add.s32 	%r78, %r52, %r77;
	.loc	1 34 45                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:45
	mad.lo.s32 	%r79, %r50, 36864, %r78;
	.loc	1 34 30                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:30
	mul.wide.s32 	%rd10, %r79, 4;
	add.s64 	%rd1, %rd7, %rd10;
	mov.b32 	%r6, 0;
	.loc	1 34 56                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:56
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v4.b32 { %r11, %r13, %r15, %r17 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r13, %r6;
	@!%p1 mov.u32 %r15, %r6;
	@!%p1 mov.u32 %r17, %r6;
	// end inline asm
	shl.b32 	%r80, %r36, 6;
	and.b32  	%r81, %r80, 448;
	or.b32  	%r82, %r81, %r46;
	and.b32  	%r83, %r36, 127;
	shr.u32 	%r84, %r81, 2;
	mov.u32 	%r85, global_smem;
	add.s32 	%r86, %r85, %r84;
	shl.b32 	%r87, %r82, 2;
	add.s32 	%r10, %r86, %r87;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	or.b32  	%r88, %r81, 16;
	shr.u32 	%r89, %r88, 2;
	add.s32 	%r90, %r85, %r89;
	add.s32 	%r91, %r90, %r87;
	add.s32 	%r12, %r91, 64;
	// begin inline asm
	@%p6 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	or.b32  	%r92, %r81, 32;
	shr.u32 	%r93, %r92, 2;
	add.s32 	%r94, %r85, %r93;
	add.s32 	%r95, %r94, %r87;
	add.s32 	%r14, %r95, 128;
	// begin inline asm
	@%p6 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	or.b32  	%r96, %r81, 48;
	shr.u32 	%r97, %r96, 2;
	add.s32 	%r98, %r85, %r97;
	add.s32 	%r99, %r98, %r87;
	add.s32 	%r16, %r99, 192;
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r100, %r36, 2;
	and.b32  	%r101, %r100, 28;
	add.s32 	%r102, %r85, %r101;
	shl.b32 	%r103, %r83, 2;
	add.s32 	%r104, %r102, %r103;
	ld.shared.f32 	%f1, [%r104];
	or.b32  	%r105, %r83, 128;
	shr.u32 	%r106, %r105, 2;
	and.b32  	%r107, %r106, 60;
	add.s32 	%r108, %r85, %r107;
	add.s32 	%r109, %r108, %r103;
	ld.shared.f32 	%f2, [%r109+512];
	or.b32  	%r110, %r83, 256;
	shr.u32 	%r111, %r110, 2;
	and.b32  	%r112, %r111, 92;
	add.s32 	%r113, %r85, %r112;
	add.s32 	%r114, %r113, %r103;
	ld.shared.f32 	%f3, [%r114+1024];
	or.b32  	%r115, %r83, 384;
	shr.u32 	%r116, %r115, 2;
	and.b32  	%r117, %r116, 124;
	add.s32 	%r118, %r85, %r117;
	add.s32 	%r119, %r118, %r103;
	ld.shared.f32 	%f4, [%r119+1536];
	.loc	1 35 35                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:35:35
	mad.lo.s32 	%r120, %r64, 9, %r41;
	mad.lo.s32 	%r121, %r68, 9, %r41;
	mad.lo.s32 	%r122, %r72, 9, %r41;
	mad.lo.s32 	%r123, %r76, 9, %r41;
	.loc	1 35 30                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:35:30
	mul.wide.s32 	%rd11, %r120, 4;
	add.s64 	%rd2, %rd8, %rd11;
	mul.wide.s32 	%rd12, %r121, 4;
	add.s64 	%rd3, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r122, 4;
	add.s64 	%rd4, %rd8, %rd13;
	mul.wide.s32 	%rd14, %r123, 4;
	add.s64 	%rd5, %rd8, %rd14;
	.loc	1 35 42                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:35:42
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r18 }, [ %rd2 + 0 ];
	@!%p10 mov.u32 %r18, %r6;
	// end inline asm
	mov.b32 	%f5, %r18;
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r20 }, [ %rd3 + 0 ];
	@!%p10 mov.u32 %r20, %r6;
	// end inline asm
	mov.b32 	%f6, %r20;
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r22 }, [ %rd4 + 0 ];
	@!%p10 mov.u32 %r22, %r6;
	// end inline asm
	mov.b32 	%f7, %r22;
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r24 }, [ %rd5 + 0 ];
	@!%p10 mov.u32 %r24, %r6;
	// end inline asm
	mov.b32 	%f8, %r24;
	.loc	1 36 18                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:36:18
	add.f32 	%f9, %f1, %f5;
	add.f32 	%f10, %f2, %f6;
	add.f32 	%f11, %f3, %f7;
	add.f32 	%f12, %f4, %f8;
	.loc	1 38 33                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:38:33
	selp.f32 	%f13, %f9, 0f00000000, %p10;
	selp.f32 	%f14, %f10, 0f00000000, %p10;
	selp.f32 	%f15, %f11, 0f00000000, %p10;
	selp.f32 	%f16, %f12, 0f00000000, %p10;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r124, %f13;
	shfl.sync.bfly.b32	%r125, %r124, 8, 31, -1;
	mov.b32 	%f17, %r125;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f13, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r126, %f18;
	shfl.sync.bfly.b32	%r127, %r126, 4, 31, -1;
	mov.b32 	%f19, %r127;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r128, %f20;
	shfl.sync.bfly.b32	%r129, %r128, 2, 31, -1;
	mov.b32 	%f21, %r129;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r130, %f22;
	shfl.sync.bfly.b32	%r131, %r130, 1, 31, -1;
	mov.b32 	%f23, %r131;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r132, %f14;
	shfl.sync.bfly.b32	%r133, %r132, 8, 31, -1;
	mov.b32 	%f25, %r133;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f14, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r134, %f26;
	shfl.sync.bfly.b32	%r135, %r134, 4, 31, -1;
	mov.b32 	%f27, %r135;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r136, %f28;
	shfl.sync.bfly.b32	%r137, %r136, 2, 31, -1;
	mov.b32 	%f29, %r137;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r138, %f30;
	shfl.sync.bfly.b32	%r139, %r138, 1, 31, -1;
	mov.b32 	%f31, %r139;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r140, %f15;
	shfl.sync.bfly.b32	%r141, %r140, 8, 31, -1;
	mov.b32 	%f33, %r141;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f15, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r142, %f34;
	shfl.sync.bfly.b32	%r143, %r142, 4, 31, -1;
	mov.b32 	%f35, %r143;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r144, %f36;
	shfl.sync.bfly.b32	%r145, %r144, 2, 31, -1;
	mov.b32 	%f37, %r145;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r146, %f38;
	shfl.sync.bfly.b32	%r147, %r146, 1, 31, -1;
	mov.b32 	%f39, %r147;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r148, %f16;
	shfl.sync.bfly.b32	%r149, %r148, 8, 31, -1;
	mov.b32 	%f41, %r149;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f16, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r150, %f42;
	shfl.sync.bfly.b32	%r151, %r150, 4, 31, -1;
	mov.b32 	%f43, %r151;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r152, %f44;
	shfl.sync.bfly.b32	%r153, %r152, 2, 31, -1;
	mov.b32 	%f45, %r153;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r154, %f46;
	shfl.sync.bfly.b32	%r155, %r154, 1, 31, -1;
	mov.b32 	%f47, %r155;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
$L__tmp2:
	.loc	1 39 27                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:39:27
	bar.sync 	0;
	shl.b32 	%r156, %r40, 2;
	add.s32 	%r26, %r85, %r156;
	mov.b32 	%r27, %f24;
	// begin inline asm
	@%p6 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	add.s32 	%r28, %r26, 32;
	mov.b32 	%r29, %f32;
	// begin inline asm
	@%p6 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	add.s32 	%r30, %r26, 64;
	mov.b32 	%r31, %f40;
	// begin inline asm
	@%p6 st.shared.b32 [ %r30 + 0 ], %r31;
	// end inline asm
	add.s32 	%r32, %r26, 96;
	mov.b32 	%r33, %f48;
	// begin inline asm
	@%p6 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r157, %r42, 2;
	add.s32 	%r158, %r85, %r157;
	ld.shared.u32 	%r34, [%r158];
	.loc	1 40 25                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:40:25
	mul.wide.s32 	%rd15, %r45, 4;
	add.s64 	%rd6, %rd9, %rd15;
	.loc	1 40 36                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:40:36
	and.b32  	%r159, %r36, 96;
	setp.eq.s32 	%p22, %r159, 0;
	// begin inline asm
	@%p22 st.global.b32 [ %rd6 + 0 ], { %r34 };
	// end inline asm
	.loc	1 40 4                          // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:40:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 168                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 107
.b8 115
.b8 121
.b8 53
.b8 108
.b8 104
.b8 55
.b8 115
.b8 102
.b8 109
.b8 118
.b8 99
.b8 118
.b8 107
.b8 107
.b8 53
.b8 50
.b8 51
.b8 116
.b8 51
.b8 103
.b8 117
.b8 107
.b8 114
.b8 110
.b8 99
.b8 115
.b8 109
.b8 112
.b8 101
.b8 97
.b8 50
.b8 116
.b8 105
.b8 53
.b8 108
.b8 104
.b8 54
.b8 103
.b8 50
.b8 52
.b8 117
.b8 97
.b8 113
.b8 113
.b8 102
.b8 110
.b8 115
.b8 107
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7d:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x92:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
