; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_red_fused__log_softmax__softmax_mul_sum_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, ptr addrspace(1) %10, i32 %11, i32 %12) local_unnamed_addr !dbg !7 {
  %14 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %15 = icmp slt i32 %14, 16, !dbg !11
  %16 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %17 = shl i32 %16, 2, !dbg !12
  %18 = and i32 %17, 2044, !dbg !12
  %19 = sdiv i32 %14, 4, !dbg !13
  %20 = sext i32 %19 to i64, !dbg !14
  %21 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !14
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %15) #4, !dbg !15
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %15) #4, !dbg !15
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %15) #4, !dbg !15
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %15) #4, !dbg !15
  %26 = bitcast i32 %25 to float, !dbg !15
  %27 = getelementptr float, ptr addrspace(1) %2, i64 %20, !dbg !16
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %15) #4, !dbg !17
  %29 = bitcast i32 %28 to float, !dbg !17
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %15) #4, !dbg !17
  %31 = bitcast i32 %30 to float, !dbg !17
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %15) #4, !dbg !17
  %33 = bitcast i32 %32 to float, !dbg !17
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %15) #4, !dbg !17
  %35 = bitcast i32 %34 to float, !dbg !17
  %36 = getelementptr float, ptr addrspace(1) %3, i64 %20, !dbg !18
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %15) #4, !dbg !19
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %15) #4, !dbg !19
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %15) #4, !dbg !19
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %15) #4, !dbg !19
  %41 = bitcast i32 %40 to float, !dbg !19
  %42 = getelementptr float, ptr addrspace(1) %4, i64 %20, !dbg !20
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %15) #4, !dbg !21
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %15) #4, !dbg !21
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %15) #4, !dbg !21
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %15) #4, !dbg !21
  %47 = bitcast i32 %46 to float, !dbg !21
  %48 = getelementptr float, ptr addrspace(1) %6, i64 %20, !dbg !22
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %15) #4, !dbg !23
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %15) #4, !dbg !23
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %15) #4, !dbg !23
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %15) #4, !dbg !23
  %53 = getelementptr float, ptr addrspace(1) %7, i64 %20, !dbg !24
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %15) #4, !dbg !25
  %55 = bitcast i32 %54 to float, !dbg !25
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %15) #4, !dbg !25
  %57 = bitcast i32 %56 to float, !dbg !25
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %15) #4, !dbg !25
  %59 = bitcast i32 %58 to float, !dbg !25
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %15) #4, !dbg !25
  %61 = bitcast i32 %60 to float, !dbg !25
  %62 = getelementptr float, ptr addrspace(1) %8, i64 %20, !dbg !26
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 %15) #4, !dbg !27
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 %15) #4, !dbg !27
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 %15) #4, !dbg !27
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 %15) #4, !dbg !27
  %67 = getelementptr float, ptr addrspace(1) %9, i64 %20, !dbg !28
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %67, i1 %15) #4, !dbg !29
  %69 = bitcast i32 %68 to float, !dbg !29
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %67, i1 %15) #4, !dbg !29
  %71 = bitcast i32 %70 to float, !dbg !29
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %67, i1 %15) #4, !dbg !29
  %73 = bitcast i32 %72 to float, !dbg !29
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %67, i1 %15) #4, !dbg !29
  %75 = bitcast i32 %74 to float, !dbg !29
  %76 = mul i32 %14, 8032, !dbg !30
  %77 = fcmp olt float %29, 0x3810000000000000, !dbg !31
  %78 = fmul float %29, 0x4160000000000000, !dbg !31
  %.02.i = select i1 %77, float %78, float %29, !dbg !31
  %79 = bitcast float %.02.i to i32, !dbg !31
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %91 = icmp ugt i32 %79, 2139095039, !dbg !31
  br i1 %91, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !31

__nv_fmaf_rn.exit.i.i:                            ; preds = %13
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  br label %__nv_logf.exit, !dbg !31

__nv_logf.exit:                                   ; preds = %13, %__nv_fmaf_rn.exit.i.i
  %93 = fcmp olt float %31, 0x3810000000000000, !dbg !31
  %94 = fmul float %31, 0x4160000000000000, !dbg !31
  %.02.i1 = select i1 %93, float %94, float %31, !dbg !31
  %95 = bitcast float %.02.i1 to i32, !dbg !31
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %107 = icmp ugt i32 %95, 2139095039, !dbg !31
  br i1 %107, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !31

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  br label %__nv_logf.exit30, !dbg !31

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %109 = fcmp olt float %33, 0x3810000000000000, !dbg !31
  %110 = fmul float %33, 0x4160000000000000, !dbg !31
  %.02.i31 = select i1 %109, float %110, float %33, !dbg !31
  %111 = bitcast float %.02.i31 to i32, !dbg !31
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %123 = icmp ugt i32 %111, 2139095039, !dbg !31
  br i1 %123, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !31

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  br label %__nv_logf.exit60, !dbg !31

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %125 = fcmp olt float %35, 0x3810000000000000, !dbg !31
  %126 = fmul float %35, 0x4160000000000000, !dbg !31
  %.02.i61 = select i1 %125, float %126, float %35, !dbg !31
  %i.i.0.i62 = select i1 %125, float -2.300000e+01, float 0.000000e+00, !dbg !31
  %127 = bitcast float %.02.i61 to i32, !dbg !31
  %128 = add i32 %127, -1059760811, !dbg !31
  %129 = and i32 %128, -8388608, !dbg !31
  %130 = sub i32 %127, %129, !dbg !31
  %131 = bitcast i32 %130 to float, !dbg !31
  %132 = sitofp i32 %129 to float, !dbg !31
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not.i63 = icmp eq i32 %133, 0, !dbg !31
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %132, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !31
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %132, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !31
  %.08.i64 = select i1 %.not.i63, float %135, float %134, !dbg !31
  %136 = fadd float %131, -1.000000e+00, !dbg !31
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not1.i65 = icmp eq i32 %137, 0, !dbg !31
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %136, float 0x3FC2073EC0000000) #4, !dbg !31
  %139 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %136, float 0x3FC2073EC0000000) #4, !dbg !31
  %.010.i66 = select i1 %.not1.i65, float %139, float %138, !dbg !31
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not2.i67 = icmp eq i32 %140, 0, !dbg !31
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %136, float 0xBFBF19B980000000) #4, !dbg !31
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %136, float 0xBFBF19B980000000) #4, !dbg !31
  %.011.i68 = select i1 %.not2.i67, float %142, float %141, !dbg !31
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not3.i69 = icmp eq i32 %143, 0, !dbg !31
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %136, float 0x3FC1E52AA0000000) #4, !dbg !31
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %136, float 0x3FC1E52AA0000000) #4, !dbg !31
  %.012.i70 = select i1 %.not3.i69, float %145, float %144, !dbg !31
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not4.i71 = icmp eq i32 %146, 0, !dbg !31
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %136, float 0xBFC55B1720000000) #4, !dbg !31
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %136, float 0xBFC55B1720000000) #4, !dbg !31
  %.09.i72 = select i1 %.not4.i71, float %148, float %147, !dbg !31
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not5.i73 = icmp eq i32 %149, 0, !dbg !31
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %136, float 0x3FC99DA160000000) #4, !dbg !31
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %136, float 0x3FC99DA160000000) #4, !dbg !31
  %.05.i74 = select i1 %.not5.i73, float %151, float %150, !dbg !31
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not6.i75 = icmp eq i32 %152, 0, !dbg !31
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %136, float 0xBFCFFFE440000000) #4, !dbg !31
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %136, float 0xBFCFFFE440000000) #4, !dbg !31
  %.01.i76 = select i1 %.not6.i75, float %154, float %153, !dbg !31
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not7.i77 = icmp eq i32 %155, 0, !dbg !31
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %136, float 0x3FD5554F00000000) #4, !dbg !31
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %136, float 0x3FD5554F00000000) #4, !dbg !31
  %.0.i78 = select i1 %.not7.i77, float %157, float %156, !dbg !31
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not8.i79 = icmp eq i32 %158, 0, !dbg !31
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %136, float -5.000000e-01) #4, !dbg !31
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %136, float -5.000000e-01) #4, !dbg !31
  %.07.i80 = select i1 %.not8.i79, float %160, float %159, !dbg !31
  %161 = fmul float %136, %.07.i80, !dbg !31
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not9.i81 = icmp eq i32 %162, 0, !dbg !31
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %161, float %136, float %136) #4, !dbg !31
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %161, float %136, float %136) #4, !dbg !31
  %.06.i82 = select i1 %.not9.i81, float %164, float %163, !dbg !31
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not10.i83 = icmp eq i32 %165, 0, !dbg !31
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !31
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !31
  %.04.i84 = select i1 %.not10.i83, float %167, float %166, !dbg !31
  %168 = icmp ugt i32 %127, 2139095039, !dbg !31
  br i1 %168, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !31

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not11.i88 = icmp eq i32 %169, 0, !dbg !31
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !31
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !31
  %.03.i89 = select i1 %.not11.i88, float %171, float %170, !dbg !31
  br label %__nv_logf.exit90, !dbg !31

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !31
  %172 = fcmp oeq float %.02.i61, 0.000000e+00, !dbg !31
  %r.i.1.i86 = select i1 %172, float 0xFFF0000000000000, float %r.i.0.i85, !dbg !31
  %173 = fcmp olt float %55, 0x3810000000000000, !dbg !32
  %174 = fmul float %55, 0x4160000000000000, !dbg !32
  %.02.i91 = select i1 %173, float %174, float %55, !dbg !32
  %175 = bitcast float %.02.i91 to i32, !dbg !32
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %187 = icmp ugt i32 %175, 2139095039, !dbg !32
  br i1 %187, label %__nv_fmaf_rn.exit.i.i117, label %__nv_logf.exit120, !dbg !32

__nv_fmaf_rn.exit.i.i117:                         ; preds = %__nv_logf.exit90
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  br label %__nv_logf.exit120, !dbg !32

__nv_logf.exit120:                                ; preds = %__nv_logf.exit90, %__nv_fmaf_rn.exit.i.i117
  %189 = fcmp olt float %57, 0x3810000000000000, !dbg !32
  %190 = fmul float %57, 0x4160000000000000, !dbg !32
  %.02.i121 = select i1 %189, float %190, float %57, !dbg !32
  %191 = bitcast float %.02.i121 to i32, !dbg !32
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %203 = icmp ugt i32 %191, 2139095039, !dbg !32
  br i1 %203, label %__nv_fmaf_rn.exit.i.i147, label %__nv_logf.exit150, !dbg !32

__nv_fmaf_rn.exit.i.i147:                         ; preds = %__nv_logf.exit120
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  br label %__nv_logf.exit150, !dbg !32

__nv_logf.exit150:                                ; preds = %__nv_logf.exit120, %__nv_fmaf_rn.exit.i.i147
  %205 = fcmp olt float %59, 0x3810000000000000, !dbg !32
  %206 = fmul float %59, 0x4160000000000000, !dbg !32
  %.02.i151 = select i1 %205, float %206, float %59, !dbg !32
  %207 = bitcast float %.02.i151 to i32, !dbg !32
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %219 = icmp ugt i32 %207, 2139095039, !dbg !32
  br i1 %219, label %__nv_fmaf_rn.exit.i.i177, label %__nv_logf.exit180, !dbg !32

__nv_fmaf_rn.exit.i.i177:                         ; preds = %__nv_logf.exit150
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  br label %__nv_logf.exit180, !dbg !32

__nv_logf.exit180:                                ; preds = %__nv_logf.exit150, %__nv_fmaf_rn.exit.i.i177
  %221 = fcmp olt float %61, 0x3810000000000000, !dbg !32
  %222 = fmul float %61, 0x4160000000000000, !dbg !32
  %.02.i181 = select i1 %221, float %222, float %61, !dbg !32
  %i.i.0.i182 = select i1 %221, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %223 = bitcast float %.02.i181 to i32, !dbg !32
  %224 = add i32 %223, -1059760811, !dbg !32
  %225 = and i32 %224, -8388608, !dbg !32
  %226 = sub i32 %223, %225, !dbg !32
  %227 = bitcast i32 %226 to float, !dbg !32
  %228 = sitofp i32 %225 to float, !dbg !32
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i183 = icmp eq i32 %229, 0, !dbg !32
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %228, float 0x3E80000000000000, float %i.i.0.i182) #4, !dbg !32
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %228, float 0x3E80000000000000, float %i.i.0.i182) #4, !dbg !32
  %.08.i184 = select i1 %.not.i183, float %231, float %230, !dbg !32
  %232 = fadd float %227, -1.000000e+00, !dbg !32
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i185 = icmp eq i32 %233, 0, !dbg !32
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %232, float 0x3FC2073EC0000000) #4, !dbg !32
  %235 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %232, float 0x3FC2073EC0000000) #4, !dbg !32
  %.010.i186 = select i1 %.not1.i185, float %235, float %234, !dbg !32
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i187 = icmp eq i32 %236, 0, !dbg !32
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i186, float %232, float 0xBFBF19B980000000) #4, !dbg !32
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i186, float %232, float 0xBFBF19B980000000) #4, !dbg !32
  %.011.i188 = select i1 %.not2.i187, float %238, float %237, !dbg !32
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i189 = icmp eq i32 %239, 0, !dbg !32
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i188, float %232, float 0x3FC1E52AA0000000) #4, !dbg !32
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i188, float %232, float 0x3FC1E52AA0000000) #4, !dbg !32
  %.012.i190 = select i1 %.not3.i189, float %241, float %240, !dbg !32
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i191 = icmp eq i32 %242, 0, !dbg !32
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i190, float %232, float 0xBFC55B1720000000) #4, !dbg !32
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i190, float %232, float 0xBFC55B1720000000) #4, !dbg !32
  %.09.i192 = select i1 %.not4.i191, float %244, float %243, !dbg !32
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i193 = icmp eq i32 %245, 0, !dbg !32
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i192, float %232, float 0x3FC99DA160000000) #4, !dbg !32
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i192, float %232, float 0x3FC99DA160000000) #4, !dbg !32
  %.05.i194 = select i1 %.not5.i193, float %247, float %246, !dbg !32
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i195 = icmp eq i32 %248, 0, !dbg !32
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i194, float %232, float 0xBFCFFFE440000000) #4, !dbg !32
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i194, float %232, float 0xBFCFFFE440000000) #4, !dbg !32
  %.01.i196 = select i1 %.not6.i195, float %250, float %249, !dbg !32
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i197 = icmp eq i32 %251, 0, !dbg !32
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i196, float %232, float 0x3FD5554F00000000) #4, !dbg !32
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i196, float %232, float 0x3FD5554F00000000) #4, !dbg !32
  %.0.i198 = select i1 %.not7.i197, float %253, float %252, !dbg !32
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i199 = icmp eq i32 %254, 0, !dbg !32
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i198, float %232, float -5.000000e-01) #4, !dbg !32
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i198, float %232, float -5.000000e-01) #4, !dbg !32
  %.07.i200 = select i1 %.not8.i199, float %256, float %255, !dbg !32
  %257 = fmul float %232, %.07.i200, !dbg !32
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not9.i201 = icmp eq i32 %258, 0, !dbg !32
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %257, float %232, float %232) #4, !dbg !32
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %257, float %232, float %232) #4, !dbg !32
  %.06.i202 = select i1 %.not9.i201, float %260, float %259, !dbg !32
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not10.i203 = icmp eq i32 %261, 0, !dbg !32
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i184, float 0x3FE62E4300000000, float %.06.i202) #4, !dbg !32
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i184, float 0x3FE62E4300000000, float %.06.i202) #4, !dbg !32
  %.04.i204 = select i1 %.not10.i203, float %263, float %262, !dbg !32
  %264 = icmp ugt i32 %223, 2139095039, !dbg !32
  br i1 %264, label %__nv_fmaf_rn.exit.i.i207, label %__nv_logf.exit210, !dbg !32

__nv_fmaf_rn.exit.i.i207:                         ; preds = %__nv_logf.exit180
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not11.i208 = icmp eq i32 %265, 0, !dbg !32
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i181, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i181, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %.03.i209 = select i1 %.not11.i208, float %267, float %266, !dbg !32
  br label %__nv_logf.exit210, !dbg !32

__nv_logf.exit210:                                ; preds = %__nv_logf.exit180, %__nv_fmaf_rn.exit.i.i207
  %r.i.0.i205 = phi float [ %.03.i209, %__nv_fmaf_rn.exit.i.i207 ], [ %.04.i204, %__nv_logf.exit180 ], !dbg !32
  %268 = fcmp oeq float %.02.i181, 0.000000e+00, !dbg !32
  %r.i.1.i206 = select i1 %268, float 0xFFF0000000000000, float %r.i.0.i205, !dbg !32
  %269 = fcmp olt float %69, 0x3810000000000000, !dbg !33
  %270 = fmul float %69, 0x4160000000000000, !dbg !33
  %.02.i211 = select i1 %269, float %270, float %69, !dbg !33
  %271 = bitcast float %.02.i211 to i32, !dbg !33
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %273 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %283 = icmp ugt i32 %271, 2139095039, !dbg !33
  br i1 %283, label %__nv_fmaf_rn.exit.i.i237, label %__nv_logf.exit240, !dbg !33

__nv_fmaf_rn.exit.i.i237:                         ; preds = %__nv_logf.exit210
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  br label %__nv_logf.exit240, !dbg !33

__nv_logf.exit240:                                ; preds = %__nv_logf.exit210, %__nv_fmaf_rn.exit.i.i237
  %285 = fcmp olt float %71, 0x3810000000000000, !dbg !33
  %286 = fmul float %71, 0x4160000000000000, !dbg !33
  %.02.i241 = select i1 %285, float %286, float %71, !dbg !33
  %287 = bitcast float %.02.i241 to i32, !dbg !33
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %299 = icmp ugt i32 %287, 2139095039, !dbg !33
  br i1 %299, label %__nv_fmaf_rn.exit.i.i267, label %__nv_logf.exit270, !dbg !33

__nv_fmaf_rn.exit.i.i267:                         ; preds = %__nv_logf.exit240
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  br label %__nv_logf.exit270, !dbg !33

__nv_logf.exit270:                                ; preds = %__nv_logf.exit240, %__nv_fmaf_rn.exit.i.i267
  %301 = fcmp olt float %73, 0x3810000000000000, !dbg !33
  %302 = fmul float %73, 0x4160000000000000, !dbg !33
  %.02.i271 = select i1 %301, float %302, float %73, !dbg !33
  %303 = bitcast float %.02.i271 to i32, !dbg !33
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %315 = icmp ugt i32 %303, 2139095039, !dbg !33
  br i1 %315, label %__nv_fmaf_rn.exit.i.i297, label %__nv_logf.exit300, !dbg !33

__nv_fmaf_rn.exit.i.i297:                         ; preds = %__nv_logf.exit270
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  br label %__nv_logf.exit300, !dbg !33

__nv_logf.exit300:                                ; preds = %__nv_logf.exit270, %__nv_fmaf_rn.exit.i.i297
  %317 = fcmp olt float %75, 0x3810000000000000, !dbg !33
  %318 = fmul float %75, 0x4160000000000000, !dbg !33
  %.02.i301 = select i1 %317, float %318, float %75, !dbg !33
  %i.i.0.i302 = select i1 %317, float -2.300000e+01, float 0.000000e+00, !dbg !33
  %319 = bitcast float %.02.i301 to i32, !dbg !33
  %320 = add i32 %319, -1059760811, !dbg !33
  %321 = and i32 %320, -8388608, !dbg !33
  %322 = sub i32 %319, %321, !dbg !33
  %323 = bitcast i32 %322 to float, !dbg !33
  %324 = sitofp i32 %321 to float, !dbg !33
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not.i303 = icmp eq i32 %325, 0, !dbg !33
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %324, float 0x3E80000000000000, float %i.i.0.i302) #4, !dbg !33
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %324, float 0x3E80000000000000, float %i.i.0.i302) #4, !dbg !33
  %.08.i304 = select i1 %.not.i303, float %327, float %326, !dbg !33
  %328 = fadd float %323, -1.000000e+00, !dbg !33
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not1.i305 = icmp eq i32 %329, 0, !dbg !33
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %328, float 0x3FC2073EC0000000) #4, !dbg !33
  %331 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %328, float 0x3FC2073EC0000000) #4, !dbg !33
  %.010.i306 = select i1 %.not1.i305, float %331, float %330, !dbg !33
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not2.i307 = icmp eq i32 %332, 0, !dbg !33
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i306, float %328, float 0xBFBF19B980000000) #4, !dbg !33
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i306, float %328, float 0xBFBF19B980000000) #4, !dbg !33
  %.011.i308 = select i1 %.not2.i307, float %334, float %333, !dbg !33
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not3.i309 = icmp eq i32 %335, 0, !dbg !33
  %336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i308, float %328, float 0x3FC1E52AA0000000) #4, !dbg !33
  %337 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i308, float %328, float 0x3FC1E52AA0000000) #4, !dbg !33
  %.012.i310 = select i1 %.not3.i309, float %337, float %336, !dbg !33
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not4.i311 = icmp eq i32 %338, 0, !dbg !33
  %339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i310, float %328, float 0xBFC55B1720000000) #4, !dbg !33
  %340 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i310, float %328, float 0xBFC55B1720000000) #4, !dbg !33
  %.09.i312 = select i1 %.not4.i311, float %340, float %339, !dbg !33
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not5.i313 = icmp eq i32 %341, 0, !dbg !33
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i312, float %328, float 0x3FC99DA160000000) #4, !dbg !33
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i312, float %328, float 0x3FC99DA160000000) #4, !dbg !33
  %.05.i314 = select i1 %.not5.i313, float %343, float %342, !dbg !33
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not6.i315 = icmp eq i32 %344, 0, !dbg !33
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i314, float %328, float 0xBFCFFFE440000000) #4, !dbg !33
  %346 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i314, float %328, float 0xBFCFFFE440000000) #4, !dbg !33
  %.01.i316 = select i1 %.not6.i315, float %346, float %345, !dbg !33
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not7.i317 = icmp eq i32 %347, 0, !dbg !33
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i316, float %328, float 0x3FD5554F00000000) #4, !dbg !33
  %349 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i316, float %328, float 0x3FD5554F00000000) #4, !dbg !33
  %.0.i318 = select i1 %.not7.i317, float %349, float %348, !dbg !33
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not8.i319 = icmp eq i32 %350, 0, !dbg !33
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i318, float %328, float -5.000000e-01) #4, !dbg !33
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i318, float %328, float -5.000000e-01) #4, !dbg !33
  %.07.i320 = select i1 %.not8.i319, float %352, float %351, !dbg !33
  %353 = fmul float %328, %.07.i320, !dbg !33
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not9.i321 = icmp eq i32 %354, 0, !dbg !33
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %353, float %328, float %328) #4, !dbg !33
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %353, float %328, float %328) #4, !dbg !33
  %.06.i322 = select i1 %.not9.i321, float %356, float %355, !dbg !33
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not10.i323 = icmp eq i32 %357, 0, !dbg !33
  %358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i304, float 0x3FE62E4300000000, float %.06.i322) #4, !dbg !33
  %359 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i304, float 0x3FE62E4300000000, float %.06.i322) #4, !dbg !33
  %.04.i324 = select i1 %.not10.i323, float %359, float %358, !dbg !33
  %360 = icmp ugt i32 %319, 2139095039, !dbg !33
  br i1 %360, label %__nv_fmaf_rn.exit.i.i327, label %__nv_logf.exit330, !dbg !33

__nv_fmaf_rn.exit.i.i327:                         ; preds = %__nv_logf.exit300
  %361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not11.i328 = icmp eq i32 %361, 0, !dbg !33
  %362 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i301, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !33
  %363 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i301, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !33
  %.03.i329 = select i1 %.not11.i328, float %363, float %362, !dbg !33
  br label %__nv_logf.exit330, !dbg !33

__nv_logf.exit330:                                ; preds = %__nv_logf.exit300, %__nv_fmaf_rn.exit.i.i327
  %r.i.0.i325 = phi float [ %.03.i329, %__nv_fmaf_rn.exit.i.i327 ], [ %.04.i324, %__nv_logf.exit300 ], !dbg !33
  %364 = fcmp oeq float %.02.i301, 0.000000e+00, !dbg !33
  %r.i.1.i326 = select i1 %364, float 0xFFF0000000000000, float %r.i.0.i325, !dbg !33
  %365 = zext nneg i32 %18 to i64, !dbg !34
  %366 = insertelement <4 x i32> poison, i32 %52, i64 0, !dbg !35
  %367 = bitcast <4 x i32> %366 to <4 x float>, !dbg !35
  %368 = shufflevector <4 x float> %367, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !35
  %369 = insertelement <4 x float> poison, float %r.i.1.i206, i64 0, !dbg !36
  %370 = shufflevector <4 x float> %369, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !36
  %371 = insertelement <4 x i32> poison, i32 %66, i64 0, !dbg !37
  %372 = bitcast <4 x i32> %371 to <4 x float>, !dbg !37
  %373 = shufflevector <4 x float> %372, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !37
  %374 = insertelement <4 x float> poison, float %r.i.1.i326, i64 0, !dbg !38
  %375 = shufflevector <4 x float> %374, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  br label %376, !dbg !34

376:                                              ; preds = %__nv_logf.exit330, %376
  %indvars.iv = phi i64 [ 0, %__nv_logf.exit330 ], [ %indvars.iv.next, %376 ]
  %377 = phi <4 x float> [ zeroinitializer, %__nv_logf.exit330 ], [ %441, %376 ]
  %378 = or disjoint i64 %indvars.iv, %365, !dbg !39
  %379 = icmp samesign ult i64 %378, 8032, !dbg !40
  %380 = trunc nuw nsw i64 %378 to i32, !dbg !41
  %381 = add i32 %76, %380, !dbg !41
  %382 = sext i32 %381 to i64, !dbg !42
  %383 = getelementptr float, ptr addrspace(1) %0, i64 %382, !dbg !42
  %384 = and i1 %15, %379, !dbg !43
  %385 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %383, i1 %384, i32 0, i1 %384, i32 0, i1 %384, i32 0, i1 %384, i32 0, i1 %384) #4, !dbg !44
  %386 = extractvalue { i32, i32, i32, i32 } %385, 0, !dbg !44
  %387 = extractvalue { i32, i32, i32, i32 } %385, 1, !dbg !44
  %388 = extractvalue { i32, i32, i32, i32 } %385, 2, !dbg !44
  %389 = extractvalue { i32, i32, i32, i32 } %385, 3, !dbg !44
  %390 = bitcast i32 %386 to float, !dbg !44
  %391 = bitcast i32 %387 to float, !dbg !44
  %392 = bitcast i32 %388 to float, !dbg !44
  %393 = bitcast i32 %389 to float, !dbg !44
  %394 = getelementptr float, ptr addrspace(1) %5, i64 %382, !dbg !45
  %395 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %394, i1 %384, i32 0, i1 %384, i32 0, i1 %384, i32 0, i1 %384, i32 0, i1 %384) #4, !dbg !46
  %396 = extractvalue { i32, i32, i32, i32 } %395, 0, !dbg !46
  %397 = extractvalue { i32, i32, i32, i32 } %395, 1, !dbg !46
  %398 = extractvalue { i32, i32, i32, i32 } %395, 2, !dbg !46
  %399 = extractvalue { i32, i32, i32, i32 } %395, 3, !dbg !46
  %400 = fsub float %390, %26, !dbg !47
  %401 = fsub float %391, %26, !dbg !47
  %402 = fsub float %392, %26, !dbg !47
  %403 = fsub float %393, %26, !dbg !47
  %404 = fsub float %400, %r.i.1.i86, !dbg !48
  %405 = fsub float %401, %r.i.1.i86, !dbg !48
  %406 = fsub float %402, %r.i.1.i86, !dbg !48
  %407 = fsub float %403, %r.i.1.i86, !dbg !48
  %408 = fsub float %404, %41, !dbg !49
  %409 = fsub float %405, %41, !dbg !49
  %410 = fsub float %406, %41, !dbg !49
  %411 = fsub float %407, %41, !dbg !49
  %412 = fmul float %408, 0x3FF7154760000000, !dbg !50
  %413 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %412) #4, !dbg !50
  %414 = fmul float %409, 0x3FF7154760000000, !dbg !50
  %415 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %414) #4, !dbg !50
  %416 = fmul float %410, 0x3FF7154760000000, !dbg !50
  %417 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %416) #4, !dbg !50
  %418 = fmul float %411, 0x3FF7154760000000, !dbg !50
  %419 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %418) #4, !dbg !50
  %420 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %413, float %47) #4, !dbg !51
  %421 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %415, float %47) #4, !dbg !51
  %422 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %417, float %47) #4, !dbg !51
  %423 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %419, float %47) #4, !dbg !51
  %424 = insertelement <4 x i32> poison, i32 %396, i64 0, !dbg !46
  %425 = insertelement <4 x i32> %424, i32 %397, i64 1, !dbg !46
  %426 = insertelement <4 x i32> %425, i32 %398, i64 2, !dbg !46
  %427 = insertelement <4 x i32> %426, i32 %399, i64 3, !dbg !46
  %428 = bitcast <4 x i32> %427 to <4 x float>, !dbg !46
  %429 = fsub <4 x float> %428, %368, !dbg !35
  %430 = fsub <4 x float> %429, %370, !dbg !36
  %431 = fsub <4 x float> %430, %373, !dbg !37
  %432 = fsub <4 x float> %431, %375, !dbg !38
  %433 = insertelement <4 x float> poison, float %420, i64 0, !dbg !52
  %434 = insertelement <4 x float> %433, float %421, i64 1, !dbg !52
  %435 = insertelement <4 x float> %434, float %422, i64 2, !dbg !52
  %436 = insertelement <4 x float> %435, float %423, i64 3, !dbg !52
  %437 = fmul <4 x float> %436, %432, !dbg !52
  %438 = fadd <4 x float> %377, %437, !dbg !53
  %439 = insertelement <4 x i1> poison, i1 %384, i64 0, !dbg !54
  %440 = shufflevector <4 x i1> %439, <4 x i1> poison, <4 x i32> zeroinitializer, !dbg !54
  %441 = select <4 x i1> %440, <4 x float> %438, <4 x float> %377, !dbg !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 2048, !dbg !34
  %442 = icmp samesign ult i64 %indvars.iv, 5984, !dbg !34
  br i1 %442, label %376, label %443, !dbg !34

443:                                              ; preds = %376
  %444 = lshr i32 %16, 5, !dbg !12
  %445 = and i32 %16, 31, !dbg !12
  %shift = shufflevector <4 x float> %441, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !55
  %446 = fadd <4 x float> %441, %shift, !dbg !55
  %shift340 = shufflevector <4 x float> %441, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !55
  %447 = fadd <4 x float> %shift340, %446, !dbg !55
  %shift341 = shufflevector <4 x float> %441, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !55
  %448 = fadd <4 x float> %shift341, %447, !dbg !55
  %449 = extractelement <4 x float> %448, i64 0, !dbg !55
  %450 = bitcast float %449 to i32, !dbg !60
  %451 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %450, i32 16, i32 31), !dbg !60
  %452 = bitcast i32 %451 to float, !dbg !60
  %453 = fadd float %449, %452, !dbg !55
  %454 = bitcast float %453 to i32, !dbg !60
  %455 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %454, i32 8, i32 31), !dbg !60
  %456 = bitcast i32 %455 to float, !dbg !60
  %457 = fadd float %453, %456, !dbg !55
  %458 = bitcast float %457 to i32, !dbg !60
  %459 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %458, i32 4, i32 31), !dbg !60
  %460 = bitcast i32 %459 to float, !dbg !60
  %461 = fadd float %457, %460, !dbg !55
  %462 = bitcast float %461 to i32, !dbg !60
  %463 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %462, i32 2, i32 31), !dbg !60
  %464 = bitcast i32 %463 to float, !dbg !60
  %465 = fadd float %461, %464, !dbg !55
  %466 = bitcast float %465 to i32, !dbg !60
  %467 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %466, i32 1, i32 31), !dbg !60
  %468 = bitcast i32 %467 to float, !dbg !60
  %469 = fadd float %465, %468, !dbg !55
  %470 = icmp eq i32 %445, 0, !dbg !60
  %471 = and i32 %444, 15, !dbg !60
  %472 = zext nneg i32 %471 to i64, !dbg !60
  %473 = getelementptr float, ptr addrspace(3) @global_smem, i64 %472, !dbg !60
  %474 = bitcast float %469 to <1 x i32>, !dbg !60
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %473, <1 x i32> %474, i1 %470) #4, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !60
  %475 = icmp slt i32 %16, 16, !dbg !60
  %476 = sext i32 %16 to i64, !dbg !60
  %477 = getelementptr float, ptr addrspace(3) @global_smem, i64 %476, !dbg !60
  %478 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %477, i1 %475) #4, !dbg !60
  %479 = bitcast i32 %478 to float, !dbg !60
  %480 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %478, i32 8, i32 31), !dbg !60
  %481 = bitcast i32 %480 to float, !dbg !60
  %482 = fadd float %479, %481, !dbg !55
  %483 = bitcast float %482 to i32, !dbg !60
  %484 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %483, i32 4, i32 31), !dbg !60
  %485 = bitcast i32 %484 to float, !dbg !60
  %486 = fadd float %482, %485, !dbg !55
  %487 = bitcast float %486 to i32, !dbg !60
  %488 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %487, i32 2, i32 31), !dbg !60
  %489 = bitcast i32 %488 to float, !dbg !60
  %490 = fadd float %486, %489, !dbg !55
  %491 = bitcast float %490 to i32, !dbg !60
  %492 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %491, i32 1, i32 31), !dbg !60
  %493 = bitcast i32 %492 to float, !dbg !60
  %494 = fadd float %490, %493, !dbg !55
  %495 = and i32 %16, 15, !dbg !60
  %496 = icmp eq i32 %495, 0, !dbg !60
  %497 = and i1 %475, %496, !dbg !60
  %498 = bitcast float %494 to <1 x i32>, !dbg !60
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %477, <1 x i32> %498, i1 %497) #4, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !60
  %499 = load i32, ptr addrspace(3) @global_smem, align 16, !dbg !60
  %500 = sext i32 %14 to i64, !dbg !61
  %501 = getelementptr float, ptr addrspace(1) %10, i64 %500, !dbg !61
  %urem = and i32 %16, 511, !dbg !62
  %502 = icmp eq i32 %urem, 0, !dbg !62
  %503 = and i1 %502, %15, !dbg !62
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %499, ptr addrspace(1) %501, i1 %503) #4, !dbg !62
  ret void, !dbg !63
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cb476mfmtunxk3kfwctyqltxtrr5chgtz2lztgdpnjimlkzdtn5i.py", directory: "inductor_cache/b4")
!4 = !{ptr @triton_red_fused__log_softmax__softmax_mul_sum_6, !"kernel", i32 1}
!5 = !{ptr @triton_red_fused__log_softmax__softmax_mul_sum_6, !"reqntidx", i32 512}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_red_fused__log_softmax__softmax_mul_sum_6", linkageName: "triton_red_fused__log_softmax__softmax_mul_sum_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 24, column: 21, scope: !7)
!12 = !DILocation(line: 25, column: 33, scope: !7)
!13 = !DILocation(line: 27, column: 19, scope: !7)
!14 = !DILocation(line: 28, column: 30, scope: !7)
!15 = !DILocation(line: 28, column: 35, scope: !7)
!16 = !DILocation(line: 29, column: 30, scope: !7)
!17 = !DILocation(line: 29, column: 35, scope: !7)
!18 = !DILocation(line: 30, column: 30, scope: !7)
!19 = !DILocation(line: 30, column: 35, scope: !7)
!20 = !DILocation(line: 31, column: 31, scope: !7)
!21 = !DILocation(line: 31, column: 36, scope: !7)
!22 = !DILocation(line: 32, column: 31, scope: !7)
!23 = !DILocation(line: 32, column: 36, scope: !7)
!24 = !DILocation(line: 33, column: 31, scope: !7)
!25 = !DILocation(line: 33, column: 36, scope: !7)
!26 = !DILocation(line: 34, column: 31, scope: !7)
!27 = !DILocation(line: 34, column: 36, scope: !7)
!28 = !DILocation(line: 35, column: 31, scope: !7)
!29 = !DILocation(line: 35, column: 36, scope: !7)
!30 = !DILocation(line: 41, column: 44, scope: !7)
!31 = !DILocation(line: 44, column: 27, scope: !7)
!32 = !DILocation(line: 53, column: 28, scope: !7)
!33 = !DILocation(line: 58, column: 28, scope: !7)
!34 = !DILocation(line: 37, column: 36, scope: !7)
!35 = !DILocation(line: 52, column: 24, scope: !7)
!36 = !DILocation(line: 54, column: 24, scope: !7)
!37 = !DILocation(line: 56, column: 24, scope: !7)
!38 = !DILocation(line: 59, column: 24, scope: !7)
!39 = !DILocation(line: 38, column: 27, scope: !7)
!40 = !DILocation(line: 39, column: 25, scope: !7)
!41 = !DILocation(line: 41, column: 39, scope: !7)
!42 = !DILocation(line: 41, column: 34, scope: !7)
!43 = !DILocation(line: 41, column: 57, scope: !7)
!44 = !DILocation(line: 41, column: 49, scope: !7)
!45 = !DILocation(line: 42, column: 35, scope: !7)
!46 = !DILocation(line: 42, column: 50, scope: !7)
!47 = !DILocation(line: 43, column: 22, scope: !7)
!48 = !DILocation(line: 45, column: 22, scope: !7)
!49 = !DILocation(line: 48, column: 22, scope: !7)
!50 = !DILocation(line: 50, column: 28, scope: !7)
!51 = !DILocation(line: 51, column: 24, scope: !7)
!52 = !DILocation(line: 60, column: 24, scope: !7)
!53 = !DILocation(line: 62, column: 25, scope: !7)
!54 = !DILocation(line: 63, column: 48, scope: !7)
!55 = !DILocation(line: 256, column: 15, scope: !56, inlinedAt: !59)
!56 = distinct !DILexicalBlockFile(scope: !58, file: !57, discriminator: 0)
!57 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!58 = distinct !DILexicalBlockFile(scope: !7, file: !57, discriminator: 0)
!59 = !DILocation(line: 64, column: 27, scope: !7)
!60 = !DILocation(line: 267, column: 36, scope: !58, inlinedAt: !59)
!61 = !DILocation(line: 65, column: 25, scope: !7)
!62 = !DILocation(line: 65, column: 37, scope: !7)
!63 = !DILocation(line: 65, column: 4, scope: !7)
