//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_div_33 // -- Begin function triton_poi_fused_div_33
                                        // @triton_poi_fused_div_33
.visible .entry triton_poi_fused_div_33(
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_33_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_33_param_1,
	.param .u32 triton_poi_fused_div_33_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<23>;
	.reg .b32 	%r<73>;
	.reg .f32 	%f<25>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_div_33_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_div_33_param_1];
$L__tmp0:
	.loc	1 21 28                         // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:21:33
	shl.b32 	%r50, %r1, 10;
	.loc	1 22 36                         // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:22:36
	mov.u32 	%r51, %tid.x;
	shl.b32 	%r52, %r51, 2;
	and.b32  	%r53, %r52, 508;
	.loc	1 22 23                         // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:22:23
	or.b32  	%r54, %r50, %r53;
	or.b32  	%r55, %r54, 512;
	.loc	1 25 19                         // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:25:19
	bfe.s32 	%r56, %r1, 21, 1;
	shr.u32 	%r57, %r56, 20;
	add.s32 	%r58, %r54, %r57;
	and.b32  	%r59, %r58, -4096;
	sub.s32 	%r60, %r54, %r59;
	add.s32 	%r61, %r55, %r57;
	and.b32  	%r62, %r61, -4096;
	sub.s32 	%r63, %r55, %r62;
	.loc	1 26 19                         // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:26:19
	shr.u32 	%r64, %r56, 14;
	add.s32 	%r65, %r54, %r64;
	shr.s32 	%r66, %r65, 18;
	add.s32 	%r67, %r55, %r64;
	shr.s32 	%r68, %r67, 18;
	.loc	1 27 34                         // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:27:34
	mul.wide.s32 	%rd9, %r54, 4;
	add.s64 	%rd1, %rd7, %rd9;
	add.s64 	%rd2, %rd1, 2048;
	mov.pred 	%p1, -1;
	.loc	1 27 39                         // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:27:39
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r28, 0x0;
	@%p1 ld.global.v4.b32 { %r19, %r22, %r25, %r28 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r40, 0x0;
	@%p1 ld.global.v4.b32 { %r31, %r34, %r37, %r40 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 28 40                         // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:28:40
	shl.b32 	%r69, %r66, 12;
	shl.b32 	%r70, %r68, 12;
	.loc	1 28 35                         // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:28:35
	add.s32 	%r71, %r69, %r60;
	add.s32 	%r72, %r70, %r63;
	.loc	1 28 30                         // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:28:30
	mul.wide.s32 	%rd10, %r71, 4;
	add.s64 	%rd3, %rd8, %rd10;
	mul.wide.s32 	%rd11, %r72, 4;
	add.s64 	%rd4, %rd8, %rd11;
	.loc	1 28 45                         // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:28:45
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r10;
	mov.b32 	%f2, %r11;
	mov.b32 	%f3, %r12;
	mov.b32 	%f4, %r13;
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r14;
	mov.b32 	%f6, %r15;
	mov.b32 	%f7, %r16;
	mov.b32 	%f8, %r17;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p7, %f1, 0f2B8CBCCC;
	setp.gt.f32 	%p8, %f2, 0f2B8CBCCC;
	setp.gt.f32 	%p9, %f3, 0f2B8CBCCC;
	setp.gt.f32 	%p10, %f4, 0f2B8CBCCC;
	setp.gt.f32 	%p11, %f5, 0f2B8CBCCC;
	setp.gt.f32 	%p12, %f6, 0f2B8CBCCC;
	setp.gt.f32 	%p13, %f7, 0f2B8CBCCC;
	setp.gt.f32 	%p14, %f8, 0f2B8CBCCC;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p15, %f1, %f1;
	setp.nan.f32 	%p16, %f2, %f2;
	setp.nan.f32 	%p17, %f3, %f3;
	setp.nan.f32 	%p18, %f4, %f4;
	setp.nan.f32 	%p19, %f5, %f5;
	setp.nan.f32 	%p20, %f6, %f6;
	setp.nan.f32 	%p21, %f7, %f7;
	setp.nan.f32 	%p22, %f8, %f8;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f9, %f1, 0f2B8CBCCC, %p15;
	selp.f32 	%f10, %f1, %f9, %p7;
	selp.f32 	%f11, %f2, 0f2B8CBCCC, %p16;
	selp.f32 	%f12, %f2, %f11, %p8;
	selp.f32 	%f13, %f3, 0f2B8CBCCC, %p17;
	selp.f32 	%f14, %f3, %f13, %p9;
	selp.f32 	%f15, %f4, 0f2B8CBCCC, %p18;
	selp.f32 	%f16, %f4, %f15, %p10;
	selp.f32 	%f17, %f5, 0f2B8CBCCC, %p19;
	selp.f32 	%f18, %f5, %f17, %p11;
	selp.f32 	%f19, %f6, 0f2B8CBCCC, %p20;
	selp.f32 	%f20, %f6, %f19, %p12;
	selp.f32 	%f21, %f7, 0f2B8CBCCC, %p21;
	selp.f32 	%f22, %f7, %f21, %p13;
	selp.f32 	%f23, %f8, 0f2B8CBCCC, %p22;
	selp.f32 	%f24, %f8, %f23, %p14;
$L__tmp2:
	.loc	1 31 18                         // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:31:18
	mov.b32 	%r20, %f10;
	// begin inline asm
	div.full.f32 %r42, %r19, %r20;
	// end inline asm
	mov.b32 	%r23, %f12;
	// begin inline asm
	div.full.f32 %r43, %r22, %r23;
	// end inline asm
	mov.b32 	%r26, %f14;
	// begin inline asm
	div.full.f32 %r44, %r25, %r26;
	// end inline asm
	mov.b32 	%r29, %f16;
	// begin inline asm
	div.full.f32 %r45, %r28, %r29;
	// end inline asm
	mov.b32 	%r32, %f18;
	// begin inline asm
	div.full.f32 %r46, %r31, %r32;
	// end inline asm
	mov.b32 	%r35, %f20;
	// begin inline asm
	div.full.f32 %r47, %r34, %r35;
	// end inline asm
	mov.b32 	%r38, %f22;
	// begin inline asm
	div.full.f32 %r48, %r37, %r38;
	// end inline asm
	mov.b32 	%r41, %f24;
	// begin inline asm
	div.full.f32 %r49, %r40, %r41;
	// end inline asm
	.loc	1 32 39                         // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:32:39
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r42, %r43, %r44, %r45 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r46, %r47, %r48, %r49 };
	// end inline asm
	.loc	1 32 4                          // cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py:32:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/s2/cs2225cim66f5oxb2yckanyqrk4yaurnxnovsxnekwgsioegy2lq.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 168                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 50
.b8 50
.b8 50
.b8 53
.b8 99
.b8 105
.b8 109
.b8 54
.b8 54
.b8 102
.b8 53
.b8 111
.b8 120
.b8 98
.b8 50
.b8 121
.b8 99
.b8 107
.b8 97
.b8 110
.b8 121
.b8 113
.b8 114
.b8 107
.b8 52
.b8 121
.b8 97
.b8 117
.b8 114
.b8 110
.b8 120
.b8 110
.b8 111
.b8 118
.b8 115
.b8 120
.b8 110
.b8 101
.b8 107
.b8 119
.b8 103
.b8 115
.b8 105
.b8 111
.b8 101
.b8 103
.b8 121
.b8 50
.b8 108
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 50
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 51
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7d:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x92:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 30                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
