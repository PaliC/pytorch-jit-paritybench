#loc = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":19:0)
module {
  tt.func public @triton_poi_fused_stack_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-4> : tensor<128xi32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_1 = arith.constant dense<16> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<2> : tensor<128xi32> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<128xi64> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %cst_5 = arith.constant dense<64> : tensor<128xi32> loc(#loc1)
    %cst_6 = arith.constant dense<8> : tensor<128xi32> loc(#loc1)
    %cst_7 = arith.constant dense<1024> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_7 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_6 : tensor<128xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_6 : tensor<128xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_6 : tensor<128xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_5 : tensor<128xi32> loc(#loc10)
    %10 = arith.remsi %9, %cst_4 : tensor<128xi32> loc(#loc11)
    %11 = arith.extsi %7 : tensor<128xi32> to tensor<128xi64> loc(#loc12)
    %12 = arith.cmpi slt, %11, %cst_3 : tensor<128xi64> loc(#loc12)
    %13 = arith.remsi %8, %cst_2 : tensor<128xi32> loc(#loc13)
    %14 = arith.muli %13, %cst_4 : tensor<128xi32> loc(#loc14)
    %15 = arith.addi %14, %7 : tensor<128xi32> loc(#loc15)
    %16 = arith.extsi %15 : tensor<128xi32> to tensor<128xi64> loc(#loc16)
    %17 = arith.cmpi slt, %16, %cst_3 : tensor<128xi64> loc(#loc16)
    %18 = arith.andi %17, %12 : tensor<128xi1> loc(#loc17)
    %19 = arith.muli %15, %cst_4 : tensor<128xi32> loc(#loc18)
    %20 = arith.muli %9, %cst_1 : tensor<128xi32> loc(#loc19)
    %21 = arith.addi %19, %20 : tensor<128xi32> loc(#loc20)
    %22 = arith.divsi %8, %cst_2 : tensor<128xi32> loc(#loc21)
    %23 = arith.addi %21, %22 : tensor<128xi32> loc(#loc22)
    %24 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc23)
    %25 = tt.addptr %24, %23 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc23)
    %26 = arith.andi %18, %5 : tensor<128xi1> loc(#loc24)
    %27 = tt.load %25, %26, %cst_0 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc25)
    %28 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc26)
    %29 = tt.addptr %28, %10 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc26)
    %30 = tt.load %29, %26, %cst_0 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc27)
    %31 = arith.addf %27, %30 : tensor<128xf32> loc(#loc28)
    %32 = arith.select %18, %31, %cst_0 : tensor<128xi1>, tensor<128xf32> loc(#loc29)
    %33 = arith.cmpi sge, %16, %cst_3 : tensor<128xi64> loc(#loc30)
    %34 = arith.andi %33, %12 : tensor<128xi1> loc(#loc31)
    %35 = arith.addi %14, %cst : tensor<128xi32> loc(#loc32)
    %36 = arith.addi %35, %7 : tensor<128xi32> loc(#loc33)
    %37 = arith.muli %36, %cst_4 : tensor<128xi32> loc(#loc34)
    %38 = arith.addi %37, %20 : tensor<128xi32> loc(#loc35)
    %39 = arith.addi %38, %22 : tensor<128xi32> loc(#loc36)
    %40 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc37)
    %41 = tt.addptr %40, %39 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc37)
    %42 = arith.andi %34, %5 : tensor<128xi1> loc(#loc38)
    %43 = tt.load %41, %42, %cst_0 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc39)
    %44 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc40)
    %45 = tt.addptr %44, %10 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc40)
    %46 = tt.load %45, %42, %cst_0 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc41)
    %47 = arith.addf %43, %46 : tensor<128xf32> loc(#loc42)
    %48 = arith.select %34, %47, %cst_0 : tensor<128xi1>, tensor<128xf32> loc(#loc43)
    %49 = arith.select %17, %32, %48 : tensor<128xi1>, tensor<128xf32> loc(#loc44)
    %50 = arith.cmpi sge, %11, %cst_3 : tensor<128xi64> loc(#loc45)
    %51 = arith.addi %7, %cst : tensor<128xi32> loc(#loc46)
    %52 = arith.addi %14, %51 : tensor<128xi32> loc(#loc47)
    %53 = arith.extsi %52 : tensor<128xi32> to tensor<128xi64> loc(#loc48)
    %54 = arith.cmpi slt, %53, %cst_3 : tensor<128xi64> loc(#loc48)
    %55 = arith.andi %54, %50 : tensor<128xi1> loc(#loc49)
    %56 = arith.muli %52, %cst_4 : tensor<128xi32> loc(#loc50)
    %57 = arith.addi %56, %20 : tensor<128xi32> loc(#loc51)
    %58 = arith.addi %57, %22 : tensor<128xi32> loc(#loc52)
    %59 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc53)
    %60 = tt.addptr %59, %58 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc53)
    %61 = arith.andi %55, %5 : tensor<128xi1> loc(#loc54)
    %62 = tt.load %60, %61, %cst_0 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc55)
    %63 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc56)
    %64 = tt.addptr %63, %10 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc56)
    %65 = tt.load %64, %61, %cst_0 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc57)
    %66 = arith.addf %62, %65 : tensor<128xf32> loc(#loc58)
    %67 = arith.select %55, %66, %cst_0 : tensor<128xi1>, tensor<128xf32> loc(#loc59)
    %68 = arith.cmpi sge, %53, %cst_3 : tensor<128xi64> loc(#loc60)
    %69 = arith.andi %68, %50 : tensor<128xi1> loc(#loc61)
    %70 = arith.addi %35, %51 : tensor<128xi32> loc(#loc62)
    %71 = arith.muli %70, %cst_4 : tensor<128xi32> loc(#loc63)
    %72 = arith.addi %71, %20 : tensor<128xi32> loc(#loc64)
    %73 = arith.addi %72, %22 : tensor<128xi32> loc(#loc65)
    %74 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc66)
    %75 = tt.addptr %74, %73 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc66)
    %76 = arith.andi %69, %5 : tensor<128xi1> loc(#loc67)
    %77 = tt.load %75, %76, %cst_0 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc68)
    %78 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc69)
    %79 = tt.addptr %78, %10 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc69)
    %80 = tt.load %79, %76, %cst_0 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc70)
    %81 = arith.addf %77, %80 : tensor<128xf32> loc(#loc71)
    %82 = arith.select %69, %81, %cst_0 : tensor<128xi1>, tensor<128xf32> loc(#loc72)
    %83 = arith.select %54, %67, %82 : tensor<128xi1>, tensor<128xf32> loc(#loc73)
    %84 = arith.select %50, %83, %cst_0 : tensor<128xi1>, tensor<128xf32> loc(#loc74)
    %85 = arith.select %12, %49, %84 : tensor<128xi1>, tensor<128xf32> loc(#loc80)
    %86 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc77)
    %87 = tt.addptr %86, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc77)
    tt.store %87, %85, %5 : tensor<128x!tt.ptr<f32>> loc(#loc78)
    tt.return loc(#loc79)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":21:28)
#loc3 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":21:33)
#loc4 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":22:36)
#loc5 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":22:23)
#loc6 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":23:21)
#loc7 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":24:21)
#loc8 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":24:26)
#loc9 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":25:19)
#loc10 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":26:19)
#loc11 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":27:27)
#loc12 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":33:18)
#loc13 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":34:20)
#loc14 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":34:15)
#loc15 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":34:27)
#loc16 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":38:18)
#loc17 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":39:19)
#loc18 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":40:34)
#loc19 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":40:60)
#loc20 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":40:57)
#loc21 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":40:72)
#loc22 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":40:66)
#loc23 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":40:31)
#loc24 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":40:85)
#loc25 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":40:77)
#loc26 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":41:31)
#loc27 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":41:36)
#loc28 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":42:20)
#loc29 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":44:35)
#loc30 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":45:20)
#loc31 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":48:20)
#loc32 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":49:41)
#loc33 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":49:57)
#loc34 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":49:34)
#loc35 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":49:64)
#loc36 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":49:73)
#loc37 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":49:31)
#loc38 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":49:92)
#loc39 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":49:84)
#loc40 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":50:31)
#loc41 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":50:36)
#loc42 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":51:20)
#loc43 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":53:35)
#loc44 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":54:34)
#loc45 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":57:20)
#loc46 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":60:35)
#loc47 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":60:28)
#loc48 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":64:20)
#loc49 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":65:20)
#loc50 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":66:34)
#loc51 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":66:64)
#loc52 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":66:73)
#loc53 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":66:31)
#loc54 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":66:92)
#loc55 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":66:84)
#loc56 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":67:31)
#loc57 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":67:36)
#loc58 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":68:20)
#loc59 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":70:35)
#loc60 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":71:21)
#loc61 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":74:20)
#loc62 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":75:57)
#loc63 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":75:34)
#loc64 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":75:71)
#loc65 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":75:80)
#loc66 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":75:31)
#loc67 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":75:99)
#loc68 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":75:91)
#loc69 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":76:31)
#loc70 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":76:36)
#loc71 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":77:20)
#loc72 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":79:35)
#loc73 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":80:35)
#loc74 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":82:35)
#loc75 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":83:34)
#loc76 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":56:34)
#loc77 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":84:25)
#loc78 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":84:37)
#loc79 = loc("inductor_cache/4q/c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py":84:4)
#loc80 = loc(fused[#loc75, #loc76])
