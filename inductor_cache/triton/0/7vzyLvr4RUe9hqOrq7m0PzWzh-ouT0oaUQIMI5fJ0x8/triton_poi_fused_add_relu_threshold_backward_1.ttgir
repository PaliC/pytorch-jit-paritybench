#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_add_relu_threshold_backward_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":19:0), %arg2: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<256> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_0 : tensor<128xi32, #blocked> loc(#loc6)
    %6 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc7)
    %7 = tt.addptr %6, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc7)
    %8 = tt.load %7, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc9)
    %10 = tt.addptr %9, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc9)
    %11 = tt.load %10, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc10)
    %12 = arith.addf %8, %11 : tensor<128xf32, #blocked> loc(#loc11)
    %13 = arith.cmpf ogt, %cst, %12 : tensor<128xf32, #blocked> loc(#loc20)
    %14 = arith.select %13, %cst, %12 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc21)
    %15 = arith.cmpf ole, %14, %cst : tensor<128xf32, #blocked> loc(#loc15)
    tt.store %10, %14, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc16)
    %16 = tt.splat %arg2 : !tt.ptr<i1> -> tensor<128x!tt.ptr<i1>, #blocked> loc(#loc17)
    %17 = tt.addptr %16, %4 : tensor<128x!tt.ptr<i1>, #blocked>, tensor<128xi32, #blocked> loc(#loc17)
    %18 = tt.bitcast %17 : tensor<128x!tt.ptr<i1>, #blocked> -> tensor<128x!tt.ptr<i8>, #blocked> loc(#loc18)
    %19 = arith.extui %15 : tensor<128xi1, #blocked> to tensor<128xi8, #blocked> loc(#loc18)
    tt.store %18, %19, %5 : tensor<128x!tt.ptr<i8>, #blocked> loc(#loc18)
    tt.return loc(#loc19)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":21:28)
#loc3 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":21:33)
#loc4 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":22:36)
#loc5 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":22:23)
#loc6 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":23:21)
#loc7 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":25:30)
#loc8 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":25:35)
#loc9 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":26:34)
#loc10 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":26:39)
#loc11 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":27:18)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc13 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":29:40)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc15 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":31:19)
#loc16 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":32:39)
#loc17 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":33:25)
#loc18 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":33:36)
#loc19 = loc("inductor_cache/3h/c3hkxdzbxudvelhryrtcbabez6mxks7equgg2xio2v3zcukqg3ah.py":33:4)
#loc20 = loc(callsite(#loc12 at #loc13))
#loc21 = loc(callsite(#loc14 at #loc13))
