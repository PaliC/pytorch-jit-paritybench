; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__softmax_9(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 5, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 5, !dbg !12
  %9 = and i32 %8, 7, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 8, !dbg !13
  %12 = or disjoint i32 %10, 16, !dbg !13
  %13 = or disjoint i32 %10, 24, !dbg !13
  %14 = icmp slt i32 %10, 816, !dbg !14
  %15 = icmp slt i32 %11, 816, !dbg !14
  %16 = icmp slt i32 %12, 816, !dbg !14
  %17 = icmp slt i32 %13, 816, !dbg !14
  %18 = and i32 %7, 31, !dbg !15
  %19 = icmp samesign ult i32 %18, 17, !dbg !16
  %.frozen = freeze i32 %10, !dbg !17
  %20 = sdiv i32 %.frozen, 204, !dbg !17
  %21 = mul i32 %20, 204, !dbg !18
  %.decomposed = sub i32 %.frozen, %21, !dbg !18
  %.frozen1 = freeze i32 %11, !dbg !17
  %22 = sdiv i32 %.frozen1, 204, !dbg !17
  %23 = mul i32 %22, 204, !dbg !18
  %.decomposed2 = sub i32 %.frozen1, %23, !dbg !18
  %.frozen3 = freeze i32 %12, !dbg !17
  %24 = sdiv i32 %.frozen3, 204, !dbg !17
  %25 = mul i32 %24, 204, !dbg !18
  %.decomposed4 = sub i32 %.frozen3, %25, !dbg !18
  %.frozen5 = freeze i32 %13, !dbg !17
  %26 = sdiv i32 %.frozen5, 204, !dbg !17
  %27 = mul i32 %26, 204, !dbg !18
  %.decomposed6 = sub i32 %.frozen5, %27, !dbg !18
  %28 = mul i32 %10, 17, !dbg !19
  %29 = mul i32 %11, 17, !dbg !19
  %30 = mul i32 %12, 17, !dbg !19
  %31 = mul i32 %13, 17, !dbg !19
  %32 = add i32 %28, %18, !dbg !20
  %33 = add i32 %29, %18, !dbg !20
  %34 = add i32 %30, %18, !dbg !20
  %35 = add i32 %31, %18, !dbg !20
  %36 = sext i32 %32 to i64, !dbg !21
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !21
  %38 = sext i32 %33 to i64, !dbg !21
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !21
  %40 = sext i32 %34 to i64, !dbg !21
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !21
  %42 = sext i32 %35 to i64, !dbg !21
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !21
  %44 = and i1 %19, %14, !dbg !22
  %45 = and i1 %19, %15, !dbg !22
  %46 = and i1 %19, %16, !dbg !22
  %47 = and i1 %19, %17, !dbg !22
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %44, i32 0, i1 %44) #2, !dbg !23
  %49 = bitcast i32 %48 to float, !dbg !23
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %45, i32 0, i1 %45) #2, !dbg !23
  %51 = bitcast i32 %50 to float, !dbg !23
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %46, i32 0, i1 %46) #2, !dbg !23
  %53 = bitcast i32 %52 to float, !dbg !23
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %43, i1 %47, i32 0, i1 %47) #2, !dbg !23
  %55 = bitcast i32 %54 to float, !dbg !23
  %56 = select i1 %44, float %49, float 0xFFF0000000000000, !dbg !24
  %57 = select i1 %45, float %51, float 0xFFF0000000000000, !dbg !24
  %58 = select i1 %46, float %53, float 0xFFF0000000000000, !dbg !24
  %59 = select i1 %47, float %55, float 0xFFF0000000000000, !dbg !24
  %60 = bitcast float %56 to i32, !dbg !25
  %61 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %60, i32 16, i32 31), !dbg !25
  %62 = bitcast i32 %61 to float, !dbg !25
  %63 = fcmp ogt float %56, %62, !dbg !29
  %64 = fcmp uno float %56, 0.000000e+00, !dbg !31
  %65 = or i1 %64, %63, !dbg !32
  %66 = select i1 %65, float %56, float %62, !dbg !33
  %67 = bitcast float %66 to i32, !dbg !25
  %68 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %67, i32 8, i32 31), !dbg !25
  %69 = bitcast i32 %68 to float, !dbg !25
  %70 = fcmp ogt float %66, %69, !dbg !29
  %71 = fcmp uno float %66, 0.000000e+00, !dbg !31
  %72 = or i1 %70, %71, !dbg !32
  %73 = select i1 %72, float %66, float %69, !dbg !33
  %74 = bitcast float %73 to i32, !dbg !25
  %75 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %74, i32 4, i32 31), !dbg !25
  %76 = bitcast i32 %75 to float, !dbg !25
  %77 = fcmp ogt float %73, %76, !dbg !29
  %78 = fcmp uno float %73, 0.000000e+00, !dbg !31
  %79 = or i1 %77, %78, !dbg !32
  %80 = select i1 %79, float %73, float %76, !dbg !33
  %81 = bitcast float %80 to i32, !dbg !25
  %82 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %81, i32 2, i32 31), !dbg !25
  %83 = bitcast i32 %82 to float, !dbg !25
  %84 = fcmp ogt float %80, %83, !dbg !29
  %85 = fcmp uno float %80, 0.000000e+00, !dbg !31
  %86 = or i1 %84, %85, !dbg !32
  %87 = select i1 %86, float %80, float %83, !dbg !33
  %88 = bitcast float %87 to i32, !dbg !25
  %89 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %88, i32 1, i32 31), !dbg !25
  %90 = bitcast i32 %89 to float, !dbg !25
  %91 = fcmp ogt float %87, %90, !dbg !29
  %92 = fcmp uno float %87, 0.000000e+00, !dbg !31
  %93 = or i1 %91, %92, !dbg !32
  %94 = select i1 %93, float %87, float %90, !dbg !33
  %95 = bitcast float %57 to i32, !dbg !25
  %96 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %95, i32 16, i32 31), !dbg !25
  %97 = bitcast i32 %96 to float, !dbg !25
  %98 = fcmp ogt float %57, %97, !dbg !29
  %99 = fcmp uno float %57, 0.000000e+00, !dbg !31
  %100 = or i1 %99, %98, !dbg !32
  %101 = select i1 %100, float %57, float %97, !dbg !33
  %102 = bitcast float %101 to i32, !dbg !25
  %103 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %102, i32 8, i32 31), !dbg !25
  %104 = bitcast i32 %103 to float, !dbg !25
  %105 = fcmp ogt float %101, %104, !dbg !29
  %106 = fcmp uno float %101, 0.000000e+00, !dbg !31
  %107 = or i1 %105, %106, !dbg !32
  %108 = select i1 %107, float %101, float %104, !dbg !33
  %109 = bitcast float %108 to i32, !dbg !25
  %110 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %109, i32 4, i32 31), !dbg !25
  %111 = bitcast i32 %110 to float, !dbg !25
  %112 = fcmp ogt float %108, %111, !dbg !29
  %113 = fcmp uno float %108, 0.000000e+00, !dbg !31
  %114 = or i1 %112, %113, !dbg !32
  %115 = select i1 %114, float %108, float %111, !dbg !33
  %116 = bitcast float %115 to i32, !dbg !25
  %117 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %116, i32 2, i32 31), !dbg !25
  %118 = bitcast i32 %117 to float, !dbg !25
  %119 = fcmp ogt float %115, %118, !dbg !29
  %120 = fcmp uno float %115, 0.000000e+00, !dbg !31
  %121 = or i1 %119, %120, !dbg !32
  %122 = select i1 %121, float %115, float %118, !dbg !33
  %123 = bitcast float %122 to i32, !dbg !25
  %124 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %123, i32 1, i32 31), !dbg !25
  %125 = bitcast i32 %124 to float, !dbg !25
  %126 = fcmp ogt float %122, %125, !dbg !29
  %127 = fcmp uno float %122, 0.000000e+00, !dbg !31
  %128 = or i1 %126, %127, !dbg !32
  %129 = select i1 %128, float %122, float %125, !dbg !33
  %130 = bitcast float %58 to i32, !dbg !25
  %131 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %130, i32 16, i32 31), !dbg !25
  %132 = bitcast i32 %131 to float, !dbg !25
  %133 = fcmp ogt float %58, %132, !dbg !29
  %134 = fcmp uno float %58, 0.000000e+00, !dbg !31
  %135 = or i1 %134, %133, !dbg !32
  %136 = select i1 %135, float %58, float %132, !dbg !33
  %137 = bitcast float %136 to i32, !dbg !25
  %138 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %137, i32 8, i32 31), !dbg !25
  %139 = bitcast i32 %138 to float, !dbg !25
  %140 = fcmp ogt float %136, %139, !dbg !29
  %141 = fcmp uno float %136, 0.000000e+00, !dbg !31
  %142 = or i1 %140, %141, !dbg !32
  %143 = select i1 %142, float %136, float %139, !dbg !33
  %144 = bitcast float %143 to i32, !dbg !25
  %145 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %144, i32 4, i32 31), !dbg !25
  %146 = bitcast i32 %145 to float, !dbg !25
  %147 = fcmp ogt float %143, %146, !dbg !29
  %148 = fcmp uno float %143, 0.000000e+00, !dbg !31
  %149 = or i1 %147, %148, !dbg !32
  %150 = select i1 %149, float %143, float %146, !dbg !33
  %151 = bitcast float %150 to i32, !dbg !25
  %152 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %151, i32 2, i32 31), !dbg !25
  %153 = bitcast i32 %152 to float, !dbg !25
  %154 = fcmp ogt float %150, %153, !dbg !29
  %155 = fcmp uno float %150, 0.000000e+00, !dbg !31
  %156 = or i1 %154, %155, !dbg !32
  %157 = select i1 %156, float %150, float %153, !dbg !33
  %158 = bitcast float %157 to i32, !dbg !25
  %159 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %158, i32 1, i32 31), !dbg !25
  %160 = bitcast i32 %159 to float, !dbg !25
  %161 = fcmp ogt float %157, %160, !dbg !29
  %162 = fcmp uno float %157, 0.000000e+00, !dbg !31
  %163 = or i1 %161, %162, !dbg !32
  %164 = select i1 %163, float %157, float %160, !dbg !33
  %165 = bitcast float %59 to i32, !dbg !25
  %166 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %165, i32 16, i32 31), !dbg !25
  %167 = bitcast i32 %166 to float, !dbg !25
  %168 = fcmp ogt float %59, %167, !dbg !29
  %169 = fcmp uno float %59, 0.000000e+00, !dbg !31
  %170 = or i1 %169, %168, !dbg !32
  %171 = select i1 %170, float %59, float %167, !dbg !33
  %172 = bitcast float %171 to i32, !dbg !25
  %173 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %172, i32 8, i32 31), !dbg !25
  %174 = bitcast i32 %173 to float, !dbg !25
  %175 = fcmp ogt float %171, %174, !dbg !29
  %176 = fcmp uno float %171, 0.000000e+00, !dbg !31
  %177 = or i1 %175, %176, !dbg !32
  %178 = select i1 %177, float %171, float %174, !dbg !33
  %179 = bitcast float %178 to i32, !dbg !25
  %180 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %179, i32 4, i32 31), !dbg !25
  %181 = bitcast i32 %180 to float, !dbg !25
  %182 = fcmp ogt float %178, %181, !dbg !29
  %183 = fcmp uno float %178, 0.000000e+00, !dbg !31
  %184 = or i1 %182, %183, !dbg !32
  %185 = select i1 %184, float %178, float %181, !dbg !33
  %186 = bitcast float %185 to i32, !dbg !25
  %187 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %186, i32 2, i32 31), !dbg !25
  %188 = bitcast i32 %187 to float, !dbg !25
  %189 = fcmp ogt float %185, %188, !dbg !29
  %190 = fcmp uno float %185, 0.000000e+00, !dbg !31
  %191 = or i1 %189, %190, !dbg !32
  %192 = select i1 %191, float %185, float %188, !dbg !33
  %193 = bitcast float %192 to i32, !dbg !25
  %194 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %193, i32 1, i32 31), !dbg !25
  %195 = bitcast i32 %194 to float, !dbg !25
  %196 = fcmp ogt float %192, %195, !dbg !29
  %197 = fcmp uno float %192, 0.000000e+00, !dbg !31
  %198 = or i1 %196, %197, !dbg !32
  %199 = select i1 %198, float %192, float %195, !dbg !33
  %200 = fsub float %49, %94, !dbg !34
  %201 = fsub float %51, %129, !dbg !34
  %202 = fsub float %53, %164, !dbg !34
  %203 = fsub float %55, %199, !dbg !34
  %204 = fmul float %200, 1.250000e-01, !dbg !35
  %205 = fmul float %201, 1.250000e-01, !dbg !35
  %206 = fmul float %202, 1.250000e-01, !dbg !35
  %207 = fmul float %203, 1.250000e-01, !dbg !35
  %208 = fmul float %204, 0x3FF7154760000000, !dbg !36
  %209 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %208) #2, !dbg !36
  %210 = fmul float %205, 0x3FF7154760000000, !dbg !36
  %211 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %210) #2, !dbg !36
  %212 = fmul float %206, 0x3FF7154760000000, !dbg !36
  %213 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %212) #2, !dbg !36
  %214 = fmul float %207, 0x3FF7154760000000, !dbg !36
  %215 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %214) #2, !dbg !36
  %216 = select i1 %44, float %209, float 0.000000e+00, !dbg !37
  %217 = select i1 %45, float %211, float 0.000000e+00, !dbg !37
  %218 = select i1 %46, float %213, float 0.000000e+00, !dbg !37
  %219 = select i1 %47, float %215, float 0.000000e+00, !dbg !37
  %220 = bitcast float %216 to i32, !dbg !38
  %221 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %220, i32 16, i32 31), !dbg !38
  %222 = bitcast i32 %221 to float, !dbg !38
  %223 = fadd float %216, %222, !dbg !42
  %224 = bitcast float %223 to i32, !dbg !38
  %225 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %224, i32 8, i32 31), !dbg !38
  %226 = bitcast i32 %225 to float, !dbg !38
  %227 = fadd float %223, %226, !dbg !42
  %228 = bitcast float %227 to i32, !dbg !38
  %229 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %228, i32 4, i32 31), !dbg !38
  %230 = bitcast i32 %229 to float, !dbg !38
  %231 = fadd float %227, %230, !dbg !42
  %232 = bitcast float %231 to i32, !dbg !38
  %233 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %232, i32 2, i32 31), !dbg !38
  %234 = bitcast i32 %233 to float, !dbg !38
  %235 = fadd float %231, %234, !dbg !42
  %236 = bitcast float %235 to i32, !dbg !38
  %237 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %236, i32 1, i32 31), !dbg !38
  %238 = bitcast i32 %237 to float, !dbg !38
  %239 = fadd float %235, %238, !dbg !42
  %240 = bitcast float %217 to i32, !dbg !38
  %241 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %240, i32 16, i32 31), !dbg !38
  %242 = bitcast i32 %241 to float, !dbg !38
  %243 = fadd float %217, %242, !dbg !42
  %244 = bitcast float %243 to i32, !dbg !38
  %245 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %244, i32 8, i32 31), !dbg !38
  %246 = bitcast i32 %245 to float, !dbg !38
  %247 = fadd float %243, %246, !dbg !42
  %248 = bitcast float %247 to i32, !dbg !38
  %249 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %248, i32 4, i32 31), !dbg !38
  %250 = bitcast i32 %249 to float, !dbg !38
  %251 = fadd float %247, %250, !dbg !42
  %252 = bitcast float %251 to i32, !dbg !38
  %253 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %252, i32 2, i32 31), !dbg !38
  %254 = bitcast i32 %253 to float, !dbg !38
  %255 = fadd float %251, %254, !dbg !42
  %256 = bitcast float %255 to i32, !dbg !38
  %257 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %256, i32 1, i32 31), !dbg !38
  %258 = bitcast i32 %257 to float, !dbg !38
  %259 = fadd float %255, %258, !dbg !42
  %260 = bitcast float %218 to i32, !dbg !38
  %261 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %260, i32 16, i32 31), !dbg !38
  %262 = bitcast i32 %261 to float, !dbg !38
  %263 = fadd float %218, %262, !dbg !42
  %264 = bitcast float %263 to i32, !dbg !38
  %265 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %264, i32 8, i32 31), !dbg !38
  %266 = bitcast i32 %265 to float, !dbg !38
  %267 = fadd float %263, %266, !dbg !42
  %268 = bitcast float %267 to i32, !dbg !38
  %269 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %268, i32 4, i32 31), !dbg !38
  %270 = bitcast i32 %269 to float, !dbg !38
  %271 = fadd float %267, %270, !dbg !42
  %272 = bitcast float %271 to i32, !dbg !38
  %273 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %272, i32 2, i32 31), !dbg !38
  %274 = bitcast i32 %273 to float, !dbg !38
  %275 = fadd float %271, %274, !dbg !42
  %276 = bitcast float %275 to i32, !dbg !38
  %277 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %276, i32 1, i32 31), !dbg !38
  %278 = bitcast i32 %277 to float, !dbg !38
  %279 = fadd float %275, %278, !dbg !42
  %280 = bitcast float %219 to i32, !dbg !38
  %281 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %280, i32 16, i32 31), !dbg !38
  %282 = bitcast i32 %281 to float, !dbg !38
  %283 = fadd float %219, %282, !dbg !42
  %284 = bitcast float %283 to i32, !dbg !38
  %285 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %284, i32 8, i32 31), !dbg !38
  %286 = bitcast i32 %285 to float, !dbg !38
  %287 = fadd float %283, %286, !dbg !42
  %288 = bitcast float %287 to i32, !dbg !38
  %289 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %288, i32 4, i32 31), !dbg !38
  %290 = bitcast i32 %289 to float, !dbg !38
  %291 = fadd float %287, %290, !dbg !42
  %292 = bitcast float %291 to i32, !dbg !38
  %293 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %292, i32 2, i32 31), !dbg !38
  %294 = bitcast i32 %293 to float, !dbg !38
  %295 = fadd float %291, %294, !dbg !42
  %296 = bitcast float %295 to i32, !dbg !38
  %297 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %296, i32 1, i32 31), !dbg !38
  %298 = bitcast i32 %297 to float, !dbg !38
  %299 = fadd float %295, %298, !dbg !42
  %300 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %209, float %239) #2, !dbg !44
  %301 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %211, float %259) #2, !dbg !44
  %302 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %213, float %279) #2, !dbg !44
  %303 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %215, float %299) #2, !dbg !44
  %304 = mul nsw i32 %.decomposed, 17, !dbg !45
  %305 = mul nsw i32 %.decomposed2, 17, !dbg !45
  %306 = mul nsw i32 %.decomposed4, 17, !dbg !45
  %307 = mul nsw i32 %.decomposed6, 17, !dbg !45
  %308 = add nsw i32 %304, %18, !dbg !46
  %309 = add nsw i32 %305, %18, !dbg !46
  %310 = add nsw i32 %306, %18, !dbg !46
  %311 = add nsw i32 %307, %18, !dbg !46
  %312 = mul i32 %20, 3488, !dbg !47
  %313 = mul i32 %22, 3488, !dbg !47
  %314 = mul i32 %24, 3488, !dbg !47
  %315 = mul i32 %26, 3488, !dbg !47
  %316 = add i32 %308, %312, !dbg !48
  %317 = add i32 %309, %313, !dbg !48
  %318 = add i32 %310, %314, !dbg !48
  %319 = add i32 %311, %315, !dbg !48
  %320 = sext i32 %316 to i64, !dbg !49
  %321 = getelementptr float, ptr addrspace(1) %1, i64 %320, !dbg !49
  %322 = sext i32 %317 to i64, !dbg !49
  %323 = getelementptr float, ptr addrspace(1) %1, i64 %322, !dbg !49
  %324 = sext i32 %318 to i64, !dbg !49
  %325 = getelementptr float, ptr addrspace(1) %1, i64 %324, !dbg !49
  %326 = sext i32 %319 to i64, !dbg !49
  %327 = getelementptr float, ptr addrspace(1) %1, i64 %326, !dbg !49
  %328 = bitcast float %300 to i32, !dbg !50
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %328, ptr addrspace(1) %321, i1 %44) #2, !dbg !50
  %329 = bitcast float %301 to i32, !dbg !50
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %329, ptr addrspace(1) %323, i1 %45) #2, !dbg !50
  %330 = bitcast float %302 to i32, !dbg !50
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %330, ptr addrspace(1) %325, i1 %46) #2, !dbg !50
  %331 = bitcast float %303 to i32, !dbg !50
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %331, ptr addrspace(1) %327, i1 %47) #2, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py", directory: "inductor_cache/lf")
!4 = !{ptr @triton_per_fused__softmax_9, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_9, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_9", linkageName: "triton_per_fused__softmax_9", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 28, column: 21, scope: !7)
!17 = !DILocation(line: 32, column: 19, scope: !7)
!18 = !DILocation(line: 31, column: 19, scope: !7)
!19 = !DILocation(line: 33, column: 38, scope: !7)
!20 = !DILocation(line: 33, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 30, scope: !7)
!22 = !DILocation(line: 33, column: 51, scope: !7)
!23 = !DILocation(line: 33, column: 43, scope: !7)
!24 = !DILocation(line: 37, column: 41, scope: !7)
!25 = !DILocation(line: 131, column: 29, scope: !26, inlinedAt: !28)
!26 = distinct !DILexicalBlockFile(scope: !7, file: !27, discriminator: 0)
!27 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!28 = !DILocation(line: 38, column: 37, scope: !7)
!29 = !DILocation(line: 118, column: 15, scope: !30, inlinedAt: !28)
!30 = distinct !DILexicalBlockFile(scope: !26, file: !27, discriminator: 0)
!31 = !DILocation(line: 120, column: 21, scope: !30, inlinedAt: !28)
!32 = !DILocation(line: 120, column: 16, scope: !30, inlinedAt: !28)
!33 = !DILocation(line: 121, column: 29, scope: !30, inlinedAt: !28)
!34 = !DILocation(line: 39, column: 18, scope: !7)
!35 = !DILocation(line: 41, column: 18, scope: !7)
!36 = !DILocation(line: 42, column: 24, scope: !7)
!37 = !DILocation(line: 44, column: 43, scope: !7)
!38 = !DILocation(line: 267, column: 36, scope: !39, inlinedAt: !41)
!39 = distinct !DILexicalBlockFile(scope: !7, file: !40, discriminator: 0)
!40 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!41 = !DILocation(line: 45, column: 26, scope: !7)
!42 = !DILocation(line: 256, column: 15, scope: !43, inlinedAt: !41)
!43 = distinct !DILexicalBlockFile(scope: !39, file: !40, discriminator: 0)
!44 = !DILocation(line: 46, column: 20, scope: !7)
!45 = !DILocation(line: 47, column: 33, scope: !7)
!46 = !DILocation(line: 47, column: 30, scope: !7)
!47 = !DILocation(line: 47, column: 43, scope: !7)
!48 = !DILocation(line: 47, column: 38, scope: !7)
!49 = !DILocation(line: 47, column: 25, scope: !7)
!50 = !DILocation(line: 47, column: 55, scope: !7)
!51 = !DILocation(line: 47, column: 4, scope: !7)
