//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<53>;
	.reg .b32 	%r<235>;
	.reg .f32 	%f<121>;
	.reg .b64 	%rd<56>;
	.loc	1 19 0                          // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd29, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_0];
	ld.param.u64 	%rd30, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_1];
$L__tmp0:
	.loc	1 22 28                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:22:33
	shl.b32 	%r123, %r1, 10;
	ld.param.u64 	%rd31, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_2];
	.loc	1 23 44                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:23:44
	mov.u32 	%r124, %tid.x;
	ld.param.u64 	%rd32, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_3];
	shl.b32 	%r126, %r124, 2;
	ld.param.u64 	%rd33, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_4];
	and.b32  	%r127, %r126, 508;
	ld.param.u64 	%rd34, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_5];
	and.b32  	%r128, %r124, 127;
	ld.param.u64 	%rd35, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_6];
	or.b32  	%r129, %r128, 128;
	ld.param.u64 	%rd36, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_26_param_7];
	or.b32  	%r130, %r128, 256;
	or.b32  	%r131, %r128, 384;
	.loc	1 23 23                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:23:23
	or.b32  	%r132, %r123, %r127;
	or.b32  	%r133, %r123, %r128;
	or.b32  	%r134, %r123, %r129;
	or.b32  	%r135, %r123, %r130;
	or.b32  	%r136, %r123, %r131;
	or.b32  	%r137, %r133, 640;
	or.b32  	%r138, %r133, 896;
	.loc	1 25 28                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 27 21                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:27:21
	setp.lt.s32 	%p1, %r2, 256;
	.loc	1 30 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:30:19
	shr.s32 	%r140, %r132, 31;
	shr.u32 	%r141, %r140, 24;
	add.s32 	%r142, %r132, %r141;
	.loc	1 29 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:29:19
	and.b32  	%r143, %r142, -256;
	sub.s32 	%r144, %r132, %r143;
	.loc	1 30 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:30:19
	bfe.s32 	%r145, %r1, 21, 1;
	shr.u32 	%r146, %r145, 24;
	add.s32 	%r147, %r146, %r133;
	.loc	1 29 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:29:19
	and.b32  	%r148, %r147, 16776448;
	sub.s32 	%r149, %r133, %r148;
	.loc	1 30 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:30:19
	add.s32 	%r150, %r134, %r146;
	.loc	1 29 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:29:19
	and.b32  	%r151, %r150, 16776448;
	sub.s32 	%r152, %r134, %r151;
	.loc	1 30 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:30:19
	add.s32 	%r153, %r135, %r146;
	.loc	1 29 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:29:19
	and.b32  	%r154, %r153, 16776960;
	sub.s32 	%r155, %r135, %r154;
	.loc	1 30 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:30:19
	add.s32 	%r156, %r136, %r146;
	.loc	1 29 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:29:19
	and.b32  	%r157, %r156, 16776960;
	sub.s32 	%r158, %r136, %r157;
	.loc	1 30 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:30:19
	add.s32 	%r159, %r137, %r146;
	.loc	1 29 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:29:19
	and.b32  	%r160, %r159, 16776960;
	sub.s32 	%r161, %r137, %r160;
	.loc	1 30 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:30:19
	add.s32 	%r162, %r138, %r146;
	.loc	1 29 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:29:19
	and.b32  	%r163, %r162, 16776960;
	sub.s32 	%r164, %r138, %r163;
	.loc	1 30 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:30:19
	add.s32 	%r165, %r146, %r132;
	shl.b32 	%r166, %r165, 8;
	shl.b32 	%r167, %r147, 10;
	.loc	1 31 39                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:31:39
	shl.b32 	%r168, %r2, 8;
	.loc	1 31 35                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:31:35
	add.s32 	%r169, %r144, %r168;
	.loc	1 31 50                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:31:50
	shl.b32 	%r170, %r142, 8;
	and.b32  	%r171, %r170, -65536;
	add.s32 	%r172, %r166, 131072;
	and.b32  	%r173, %r172, -65536;
	.loc	1 31 44                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:31:44
	add.s32 	%r174, %r169, %r171;
	add.s32 	%r175, %r169, %r173;
	.loc	1 31 30                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:31:30
	mul.wide.s32 	%rd37, %r174, 4;
	add.s64 	%rd1, %rd29, %rd37;
	mul.wide.s32 	%rd38, %r175, 4;
	add.s64 	%rd2, %rd29, %rd38;
	.loc	1 31 55                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:31:55
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 32 30                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:32:30
	mul.wide.s32 	%rd39, %r144, 4;
	add.s64 	%rd3, %rd30, %rd39;
	mov.pred 	%p3, -1;
	.loc	1 32 35                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:32:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:33:30
	add.s64 	%rd5, %rd31, %rd39;
	.loc	1 33 35                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:33:35
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r19;
	mov.b32 	%f2, %r20;
	mov.b32 	%f3, %r21;
	mov.b32 	%f4, %r22;
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r23;
	mov.b32 	%f6, %r24;
	mov.b32 	%f7, %r25;
	mov.b32 	%f8, %r26;
	.loc	1 34 31                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:34:31
	add.s64 	%rd7, %rd32, %rd39;
	.loc	1 34 36                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:34:36
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:35:31
	add.s64 	%rd9, %rd33, %rd39;
	.loc	1 35 36                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:35:36
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r39, %r40, %r41, %r42 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 36 40                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:40
	add.s32 	%r176, %r2, 131072;
	.loc	1 36 49                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:49
	shl.b32 	%r177, %r149, 8;
	shl.b32 	%r178, %r152, 8;
	shl.b32 	%r179, %r155, 8;
	shl.b32 	%r180, %r158, 8;
	shl.b32 	%r181, %r161, 8;
	shl.b32 	%r182, %r164, 8;
	.loc	1 36 61                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:61
	and.b32  	%r183, %r167, -786432;
	shl.b32 	%r184, %r150, 10;
	and.b32  	%r185, %r184, -786432;
	shl.b32 	%r186, %r153, 10;
	and.b32  	%r187, %r186, -262144;
	shl.b32 	%r188, %r156, 10;
	and.b32  	%r189, %r188, -262144;
	or.b32  	%r190, %r167, 524288;
	and.b32  	%r191, %r190, -262144;
	shl.b32 	%r192, %r159, 10;
	and.b32  	%r193, %r192, -262144;
	add.s32 	%r194, %r167, 786432;
	and.b32  	%r195, %r194, -262144;
	shl.b32 	%r196, %r162, 10;
	and.b32  	%r197, %r196, -262144;
	.loc	1 36 45                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:45
	add.s32 	%r198, %r183, %r177;
	.loc	1 36 54                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:54
	add.s32 	%r199, %r198, %r176;
	.loc	1 36 45                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:45
	add.s32 	%r200, %r185, %r178;
	.loc	1 36 54                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:54
	add.s32 	%r201, %r200, %r176;
	.loc	1 36 45                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:45
	add.s32 	%r202, %r187, %r179;
	.loc	1 36 54                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:54
	add.s32 	%r203, %r202, %r176;
	.loc	1 36 45                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:45
	add.s32 	%r204, %r189, %r180;
	.loc	1 36 54                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:54
	add.s32 	%r205, %r204, %r176;
	.loc	1 36 45                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:45
	add.s32 	%r206, %r191, %r177;
	.loc	1 36 54                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:54
	add.s32 	%r207, %r206, %r176;
	.loc	1 36 45                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:45
	add.s32 	%r208, %r193, %r181;
	.loc	1 36 54                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:54
	add.s32 	%r209, %r208, %r176;
	.loc	1 36 45                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:45
	add.s32 	%r210, %r195, %r177;
	.loc	1 36 54                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:54
	add.s32 	%r211, %r210, %r176;
	.loc	1 36 45                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:45
	add.s32 	%r212, %r197, %r182;
	.loc	1 36 54                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:54
	add.s32 	%r213, %r212, %r176;
	.loc	1 36 31                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:31
	mul.wide.s32 	%rd40, %r199, 4;
	add.s64 	%rd11, %rd34, %rd40;
	mul.wide.s32 	%rd41, %r201, 4;
	add.s64 	%rd12, %rd34, %rd41;
	mul.wide.s32 	%rd42, %r203, 4;
	add.s64 	%rd13, %rd34, %rd42;
	mul.wide.s32 	%rd43, %r205, 4;
	add.s64 	%rd14, %rd34, %rd43;
	mul.wide.s32 	%rd44, %r207, 4;
	add.s64 	%rd15, %rd34, %rd44;
	mul.wide.s32 	%rd45, %r209, 4;
	add.s64 	%rd16, %rd34, %rd45;
	mul.wide.s32 	%rd46, %r211, 4;
	add.s64 	%rd17, %rd34, %rd46;
	mul.wide.s32 	%rd47, %r213, 4;
	add.s64 	%rd18, %rd34, %rd47;
	.loc	1 36 66                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:66
	// begin inline asm
	mov.u32 %r43, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r43 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r44 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r45, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r45 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r46 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r47, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r47 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r48 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r49, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r49 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r50, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r50 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 39 18                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:39:18
	add.f32 	%f9, %f1, 0f3727C5AC;
	add.f32 	%f10, %f2, 0f3727C5AC;
	add.f32 	%f11, %f3, 0f3727C5AC;
	add.f32 	%f12, %f4, 0f3727C5AC;
	add.f32 	%f13, %f5, 0f3727C5AC;
	add.f32 	%f14, %f6, 0f3727C5AC;
	add.f32 	%f15, %f7, 0f3727C5AC;
	add.f32 	%f16, %f8, 0f3727C5AC;
	.loc	1 40 26                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:40:26
	sqrt.approx.ftz.f32 	%f17, %f9;
	sqrt.approx.ftz.f32 	%f18, %f10;
	sqrt.approx.ftz.f32 	%f19, %f11;
	sqrt.approx.ftz.f32 	%f20, %f12;
	sqrt.approx.ftz.f32 	%f21, %f13;
	sqrt.approx.ftz.f32 	%f22, %f14;
	sqrt.approx.ftz.f32 	%f23, %f15;
	sqrt.approx.ftz.f32 	%f24, %f16;
	.loc	1 36 66                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:36:66
	mov.b32 	%f25, %r50;
	mov.b32 	%f26, %r49;
	mov.b32 	%f27, %r48;
	mov.b32 	%f28, %r47;
	mov.b32 	%f29, %r46;
	mov.b32 	%f30, %r45;
	mov.b32 	%f31, %r44;
	mov.b32 	%f32, %r43;
	.loc	1 42 18                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:42:18
	mov.b32 	%r53, %f17;
	mov.b32 	%r52, 1065353216;
	// begin inline asm
	div.full.f32 %r51, %r52, %r53;
	// end inline asm
	mov.b32 	%f33, %r51;
	mov.b32 	%r56, %f18;
	// begin inline asm
	div.full.f32 %r54, %r52, %r56;
	// end inline asm
	mov.b32 	%f34, %r54;
	mov.b32 	%r59, %f19;
	// begin inline asm
	div.full.f32 %r57, %r52, %r59;
	// end inline asm
	mov.b32 	%f35, %r57;
	mov.b32 	%r62, %f20;
	// begin inline asm
	div.full.f32 %r60, %r52, %r62;
	// end inline asm
	mov.b32 	%f36, %r60;
	mov.b32 	%r65, %f21;
	// begin inline asm
	div.full.f32 %r63, %r52, %r65;
	// end inline asm
	mov.b32 	%f37, %r63;
	mov.b32 	%r68, %f22;
	// begin inline asm
	div.full.f32 %r66, %r52, %r68;
	// end inline asm
	mov.b32 	%f38, %r66;
	mov.b32 	%r71, %f23;
	// begin inline asm
	div.full.f32 %r69, %r52, %r71;
	// end inline asm
	mov.b32 	%f39, %r69;
	mov.b32 	%r74, %f24;
	// begin inline asm
	div.full.f32 %r72, %r52, %r74;
	// end inline asm
	mov.b32 	%f40, %r72;
	.loc	1 31 55                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:31:55
	mov.b32 	%f41, %r6;
	mov.b32 	%f42, %r5;
	mov.b32 	%f43, %r4;
	mov.b32 	%f44, %r3;
	mov.b32 	%f45, %r10;
	mov.b32 	%f46, %r9;
	mov.b32 	%f47, %r8;
	mov.b32 	%f48, %r7;
	.loc	1 32 35                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:32:35
	mov.b32 	%f49, %r18;
	mov.b32 	%f50, %r17;
	mov.b32 	%f51, %r16;
	mov.b32 	%f52, %r15;
	mov.b32 	%f53, %r14;
	mov.b32 	%f54, %r13;
	mov.b32 	%f55, %r12;
	mov.b32 	%f56, %r11;
	.loc	1 37 18                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:37:18
	sub.f32 	%f57, %f44, %f56;
	sub.f32 	%f58, %f43, %f55;
	sub.f32 	%f59, %f42, %f54;
	sub.f32 	%f60, %f41, %f53;
	sub.f32 	%f61, %f48, %f52;
	sub.f32 	%f62, %f47, %f51;
	sub.f32 	%f63, %f46, %f50;
	sub.f32 	%f64, %f45, %f49;
	.loc	1 35 36                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:35:36
	mov.b32 	%f65, %r42;
	mov.b32 	%f66, %r41;
	mov.b32 	%f67, %r40;
	mov.b32 	%f68, %r39;
	mov.b32 	%f69, %r38;
	mov.b32 	%f70, %r37;
	mov.b32 	%f71, %r36;
	mov.b32 	%f72, %r35;
	.loc	1 34 36                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:34:36
	mov.b32 	%f73, %r34;
	mov.b32 	%f74, %r33;
	mov.b32 	%f75, %r32;
	mov.b32 	%f76, %r31;
	mov.b32 	%f77, %r30;
	mov.b32 	%f78, %r29;
	mov.b32 	%f79, %r28;
	mov.b32 	%f80, %r27;
	.loc	1 45 19                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:45:19
	mul.f32 	%f81, %f64, %f40;
	mul.f32 	%f82, %f63, %f39;
	mul.f32 	%f83, %f62, %f38;
	mul.f32 	%f84, %f61, %f37;
	mul.f32 	%f85, %f60, %f36;
	mul.f32 	%f86, %f59, %f35;
	mul.f32 	%f87, %f58, %f34;
	mul.f32 	%f88, %f57, %f33;
	.loc	1 47 20                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:47:20
	fma.rn.f32 	%f89, %f88, %f80, %f72;
	fma.rn.f32 	%f90, %f87, %f79, %f71;
	fma.rn.f32 	%f91, %f86, %f78, %f70;
	fma.rn.f32 	%f92, %f85, %f77, %f69;
	fma.rn.f32 	%f93, %f84, %f76, %f68;
	fma.rn.f32 	%f94, %f83, %f75, %f67;
	fma.rn.f32 	%f95, %f82, %f74, %f66;
	fma.rn.f32 	%f96, %f81, %f73, %f65;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p45, %f96, 0f00000000;
	setp.lt.f32 	%p46, %f95, 0f00000000;
	setp.lt.f32 	%p47, %f94, 0f00000000;
	setp.lt.f32 	%p48, %f93, 0f00000000;
	setp.lt.f32 	%p49, %f92, 0f00000000;
	setp.lt.f32 	%p50, %f91, 0f00000000;
	setp.lt.f32 	%p51, %f90, 0f00000000;
	setp.lt.f32 	%p52, %f89, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f97, 0f00000000, %f89, %p52;
	selp.f32 	%f98, 0f00000000, %f90, %p51;
	selp.f32 	%f99, 0f00000000, %f91, %p50;
	selp.f32 	%f100, 0f00000000, %f92, %p49;
	selp.f32 	%f101, 0f00000000, %f93, %p48;
	selp.f32 	%f102, 0f00000000, %f94, %p47;
	selp.f32 	%f103, 0f00000000, %f95, %p46;
	selp.f32 	%f104, 0f00000000, %f96, %p45;
	shl.b32 	%r214, %r127, 3;
	mov.u32 	%r215, global_smem;
	add.s32 	%r75, %r215, %r214;
	mov.b32 	%r76, %f97;
	// begin inline asm
	@%p3 st.shared.b32 [ %r75 + 0 ], %r76;
	// end inline asm
	add.s32 	%r77, %r75, 8;
	mov.b32 	%r78, %f98;
	// begin inline asm
	@%p3 st.shared.b32 [ %r77 + 0 ], %r78;
	// end inline asm
	add.s32 	%r79, %r75, 16;
	mov.b32 	%r80, %f99;
	// begin inline asm
	@%p3 st.shared.b32 [ %r79 + 0 ], %r80;
	// end inline asm
	add.s32 	%r81, %r75, 24;
	mov.b32 	%r82, %f100;
	// begin inline asm
	@%p3 st.shared.b32 [ %r81 + 0 ], %r82;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r216, %r128, 3;
	add.s32 	%r217, %r215, %r216;
	ld.shared.f32 	%f105, [%r217];
	shl.b32 	%r218, %r129, 3;
	add.s32 	%r219, %r215, %r218;
	ld.shared.f32 	%f106, [%r219];
	shl.b32 	%r220, %r130, 3;
	add.s32 	%r221, %r215, %r220;
	ld.shared.f32 	%f107, [%r221];
	shl.b32 	%r222, %r131, 3;
	add.s32 	%r223, %r215, %r222;
	ld.shared.f32 	%f108, [%r223];
	bar.sync 	0;
	mov.b32 	%r84, %f101;
	// begin inline asm
	@%p3 st.shared.b32 [ %r75 + 0 ], %r84;
	// end inline asm
	mov.b32 	%r86, %f102;
	// begin inline asm
	@%p3 st.shared.b32 [ %r77 + 0 ], %r86;
	// end inline asm
	mov.b32 	%r88, %f103;
	// begin inline asm
	@%p3 st.shared.b32 [ %r79 + 0 ], %r88;
	// end inline asm
	mov.b32 	%r90, %f104;
	// begin inline asm
	@%p3 st.shared.b32 [ %r81 + 0 ], %r90;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f109, [%r217];
	ld.shared.f32 	%f110, [%r219];
	ld.shared.f32 	%f111, [%r221];
	ld.shared.f32 	%f112, [%r223];
$L__tmp2:
	.loc	1 50 20                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:50:20
	add.f32 	%f113, %f105, %f32;
	add.f32 	%f114, %f106, %f31;
	add.f32 	%f115, %f107, %f30;
	add.f32 	%f116, %f108, %f29;
	add.f32 	%f117, %f109, %f28;
	add.f32 	%f118, %f110, %f27;
	add.f32 	%f119, %f111, %f26;
	add.f32 	%f120, %f112, %f25;
	.loc	1 51 39                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:51:39
	add.s32 	%r224, %r198, %r2;
	add.s32 	%r225, %r200, %r2;
	add.s32 	%r226, %r202, %r2;
	add.s32 	%r227, %r204, %r2;
	add.s32 	%r228, %r206, %r2;
	add.s32 	%r229, %r208, %r2;
	add.s32 	%r230, %r210, %r2;
	add.s32 	%r231, %r212, %r2;
	.loc	1 51 25                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:51:25
	mul.wide.s32 	%rd48, %r224, 4;
	add.s64 	%rd19, %rd35, %rd48;
	mul.wide.s32 	%rd49, %r225, 4;
	add.s64 	%rd20, %rd35, %rd49;
	mul.wide.s32 	%rd50, %r226, 4;
	add.s64 	%rd21, %rd35, %rd50;
	mul.wide.s32 	%rd51, %r227, 4;
	add.s64 	%rd22, %rd35, %rd51;
	mul.wide.s32 	%rd52, %r228, 4;
	add.s64 	%rd23, %rd35, %rd52;
	mul.wide.s32 	%rd53, %r229, 4;
	add.s64 	%rd24, %rd35, %rd53;
	mul.wide.s32 	%rd54, %r230, 4;
	add.s64 	%rd25, %rd35, %rd54;
	mul.wide.s32 	%rd55, %r231, 4;
	add.s64 	%rd26, %rd35, %rd55;
	.loc	1 51 58                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:51:58
	mov.b32 	%r91, %f105;
	// begin inline asm
	@%p1 st.global.b32 [ %rd19 + 0 ], { %r91 };
	// end inline asm
	mov.b32 	%r92, %f106;
	// begin inline asm
	@%p1 st.global.b32 [ %rd20 + 0 ], { %r92 };
	// end inline asm
	mov.b32 	%r93, %f107;
	// begin inline asm
	@%p1 st.global.b32 [ %rd21 + 0 ], { %r93 };
	// end inline asm
	mov.b32 	%r94, %f108;
	// begin inline asm
	@%p1 st.global.b32 [ %rd22 + 0 ], { %r94 };
	// end inline asm
	mov.b32 	%r95, %f109;
	// begin inline asm
	@%p1 st.global.b32 [ %rd23 + 0 ], { %r95 };
	// end inline asm
	mov.b32 	%r96, %f110;
	// begin inline asm
	@%p1 st.global.b32 [ %rd24 + 0 ], { %r96 };
	// end inline asm
	mov.b32 	%r97, %f111;
	// begin inline asm
	@%p1 st.global.b32 [ %rd25 + 0 ], { %r97 };
	// end inline asm
	mov.b32 	%r98, %f112;
	// begin inline asm
	@%p1 st.global.b32 [ %rd26 + 0 ], { %r98 };
	// end inline asm
	.loc	1 52 25                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:52:25
	add.s64 	%rd27, %rd36, %rd37;
	add.s64 	%rd28, %rd36, %rd38;
	.loc	1 52 57                         // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:52:57
	bar.sync 	0;
	shl.b32 	%r232, %r128, 2;
	sub.s32 	%r107, %r217, %r232;
	mov.b32 	%r100, %f113;
	// begin inline asm
	@%p3 st.shared.b32 [ %r107 + 0 ], %r100;
	// end inline asm
	add.s32 	%r101, %r107, 512;
	mov.b32 	%r102, %f114;
	// begin inline asm
	@%p3 st.shared.b32 [ %r101 + 0 ], %r102;
	// end inline asm
	add.s32 	%r103, %r107, 1024;
	mov.b32 	%r104, %f115;
	// begin inline asm
	@%p3 st.shared.b32 [ %r103 + 0 ], %r104;
	// end inline asm
	add.s32 	%r105, %r107, 1536;
	mov.b32 	%r106, %f116;
	// begin inline asm
	@%p3 st.shared.b32 [ %r105 + 0 ], %r106;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r233, %r127, 2;
	add.s32 	%r234, %r215, %r233;
	ld.shared.v4.u32 	{%r115, %r116, %r117, %r118}, [%r234];
	bar.sync 	0;
	mov.b32 	%r108, %f117;
	// begin inline asm
	@%p3 st.shared.b32 [ %r107 + 0 ], %r108;
	// end inline asm
	mov.b32 	%r110, %f118;
	// begin inline asm
	@%p3 st.shared.b32 [ %r101 + 0 ], %r110;
	// end inline asm
	mov.b32 	%r112, %f119;
	// begin inline asm
	@%p3 st.shared.b32 [ %r103 + 0 ], %r112;
	// end inline asm
	mov.b32 	%r114, %f120;
	// begin inline asm
	@%p3 st.shared.b32 [ %r105 + 0 ], %r114;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r119, %r120, %r121, %r122}, [%r234];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd27 + 0 ], { %r115, %r116, %r117, %r118 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd28 + 0 ], { %r119, %r120, %r121, %r122 };
	// end inline asm
	.loc	1 52 4                          // cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py:52:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/sp/cspx66u3rf6ftkwdx6g53jr2ifsa4djmfbqqn2yiwbnhtrrrvcwi.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 210                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 112
.b8 120
.b8 54
.b8 54
.b8 117
.b8 51
.b8 114
.b8 102
.b8 54
.b8 102
.b8 116
.b8 107
.b8 119
.b8 100
.b8 120
.b8 54
.b8 103
.b8 53
.b8 51
.b8 106
.b8 114
.b8 50
.b8 105
.b8 102
.b8 115
.b8 97
.b8 52
.b8 100
.b8 106
.b8 109
.b8 102
.b8 98
.b8 113
.b8 113
.b8 110
.b8 50
.b8 121
.b8 105
.b8 119
.b8 98
.b8 110
.b8 104
.b8 116
.b8 114
.b8 114
.b8 114
.b8 118
.b8 99
.b8 119
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 112
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x44 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 50
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa7:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
