//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5 // -- Begin function triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5
                                        // @triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5
.visible .entry triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5_param_4,
	.param .u32 triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<25>;
	.reg .f32 	%f<19>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5_param_1];
$L__tmp0:
	.loc	1 21 28                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:21:33
	shl.b32 	%r12, %r1, 9;
	ld.param.u64 	%rd11, [triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5_param_2];
	ld.param.u64 	%rd12, [triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5_param_3];
	.loc	1 22 36                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:22:36
	mov.u32 	%r13, %tid.x;
	shl.b32 	%r14, %r13, 1;
	ld.param.u64 	%rd13, [triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_5_param_4];
	and.b32  	%r15, %r14, 510;
	.loc	1 22 23                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:22:23
	or.b32  	%r16, %r12, %r15;
	.loc	1 25 21                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:25:21
	bfe.s32 	%r17, %r1, 22, 1;
	shr.u32 	%r18, %r17, 22;
	add.s32 	%r19, %r16, %r18;
	shr.s32 	%r20, %r19, 10;
	.loc	1 25 29                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:25:29
	shr.u32 	%r21, %r20, 26;
	add.s32 	%r22, %r20, %r21;
	and.b32  	%r23, %r22, -64;
	sub.s32 	%r24, %r20, %r23;
	.loc	1 26 30                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:26:30
	cvt.s64.s32 	%rd14, %r16;
	mul.wide.s32 	%rd15, %r16, 4;
	add.s64 	%rd1, %rd10, %rd15;
	mov.pred 	%p1, -1;
	.loc	1 26 35                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:26:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 27 30                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:27:30
	mul.wide.s32 	%rd16, %r24, 4;
	add.s64 	%rd2, %rd11, %rd16;
	.loc	1 27 35                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:27:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 28 34                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:28:34
	add.s64 	%rd4, %rd9, %rd15;
	.loc	1 28 39                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:28:39
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r6;
	mov.b32 	%f2, %r7;
	.loc	1 29 30                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:29:30
	add.s64 	%rd5, %rd12, %rd16;
	.loc	1 29 35                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:29:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r9;
	.loc	1 36 19                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:36:19
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 40 25                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:40:25
	add.s64 	%rd8, %rd13, %rd14;
	.loc	1 26 35                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:26:35
	mov.b32 	%f7, %r2;
	mov.b32 	%f8, %r3;
	.loc	1 27 35                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:27:35
	mov.b32 	%f9, %r4;
	mov.b32 	%f10, %r5;
	.loc	1 30 18                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:30:18
	add.f32 	%f11, %f8, %f10;
	add.f32 	%f12, %f7, %f9;
	.loc	1 32 18                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:32:18
	setp.gt.f32 	%p9, %f12, 0f00000000;
	setp.gt.f32 	%p10, %f11, 0f00000000;
	.loc	1 34 18                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:34:18
	mul.f32 	%f13, %f12, 0f3C23D70A;
	mul.f32 	%f14, %f11, 0f3C23D70A;
	.loc	1 35 32                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:35:32
	selp.f32 	%f15, %f11, %f14, %p10;
	selp.f32 	%f16, %f12, %f13, %p9;
	.loc	1 37 19                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:37:19
	add.f32 	%f17, %f16, %f5;
	add.f32 	%f18, %f15, %f6;
	.loc	1 38 19                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:38:19
	setp.gt.f32 	%p11, %f15, 0f00000000;
	setp.gt.f32 	%p12, %f16, 0f00000000;
	.loc	1 39 40                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:39:40
	mov.b32 	%r10, %f17;
	mov.b32 	%r11, %f18;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd4 + 0 ], { %r10, %r11 };
	// end inline asm
	.loc	1 40 37                         // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:40:37
	selp.u16 	%rs2, 1, 0, %p12;
	selp.u16 	%rs3, 1, 0, %p11;
	shl.b16 	%rs4, %rs3, 8;
	or.b16  	%rs1, %rs2, %rs4;
	// begin inline asm
	@%p1 st.global.b16 [ %rd8 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 40 4                          // cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py:40:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/n7/cn7aagnmj34li3tm5uo7oi4rldzk46mlcs7qxbkvvaxdscd5vzm3.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 55
.b8 97
.b8 97
.b8 103
.b8 110
.b8 109
.b8 106
.b8 51
.b8 52
.b8 108
.b8 105
.b8 51
.b8 116
.b8 109
.b8 53
.b8 117
.b8 111
.b8 55
.b8 111
.b8 105
.b8 52
.b8 114
.b8 108
.b8 100
.b8 122
.b8 107
.b8 52
.b8 54
.b8 109
.b8 108
.b8 99
.b8 115
.b8 55
.b8 113
.b8 120
.b8 98
.b8 107
.b8 118
.b8 118
.b8 97
.b8 120
.b8 100
.b8 115
.b8 99
.b8 100
.b8 53
.b8 118
.b8 122
.b8 109
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 55
.b8 0
	}
	.section	.debug_macinfo	{	}
