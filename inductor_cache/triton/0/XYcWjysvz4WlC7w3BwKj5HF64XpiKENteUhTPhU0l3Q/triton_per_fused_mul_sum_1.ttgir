#blocked = #triton_gpu.blocked<{sizePerThread = [1, 2], threadsPerWarp = [4, 8], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0)
#loc1 = loc(unknown)
#loc48 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":52:26)
#loc59 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":62:26)
#loc63 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":66:26)
#loc81 = loc(callsite(#loc1 at #loc48))
#loc92 = loc(callsite(#loc1 at #loc59))
#loc94 = loc(callsite(#loc1 at #loc63))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_mul_sum_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<8x16xf32, #blocked> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<64> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<9.99999996E-13> : tensor<8x1xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<8x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<8x1xi32, #blocked1> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_0 : tensor<8x1xi32, #blocked> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_1 : tensor<8x1xi32, #blocked1> loc(#loc6)
    %12 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %13 = tt.expand_dims %12 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x16xi32, #blocked> loc(#loc7)
    %14 = arith.remsi %8, %cst_2 : tensor<8x1xi32, #blocked> loc(#loc8)
    %15 = arith.divsi %8, %cst_3 : tensor<8x1xi32, #blocked> loc(#loc9)
    %16 = arith.divsi %8, %cst_2 : tensor<8x1xi32, #blocked> loc(#loc10)
    %17 = arith.muli %14, %cst_3 : tensor<8x1xi32, #blocked> loc(#loc11)
    %18 = tt.broadcast %13 : tensor<1x16xi32, #blocked> -> tensor<8x16xi32, #blocked> loc(#loc12)
    %19 = tt.broadcast %17 : tensor<8x1xi32, #blocked> -> tensor<8x16xi32, #blocked> loc(#loc12)
    %20 = arith.addi %18, %19 : tensor<8x16xi32, #blocked> loc(#loc12)
    %21 = arith.muli %15, %cst_0 : tensor<8x1xi32, #blocked> loc(#loc13)
    %22 = tt.broadcast %21 : tensor<8x1xi32, #blocked> -> tensor<8x16xi32, #blocked> loc(#loc14)
    %23 = arith.addi %20, %22 : tensor<8x16xi32, #blocked> loc(#loc14)
    %24 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>, #blocked> loc(#loc15)
    %25 = tt.addptr %24, %23 : tensor<8x16x!tt.ptr<f32>, #blocked>, tensor<8x16xi32, #blocked> loc(#loc15)
    %26 = tt.broadcast %10 : tensor<8x1xi1, #blocked> -> tensor<8x16xi1, #blocked> loc(#loc16)
    %27 = tt.load %25, %26, %cst evictionPolicy = evict_last : tensor<8x16x!tt.ptr<f32>, #blocked> loc(#loc16)
    %28 = arith.muli %15, %cst_2 : tensor<8x1xi32, #blocked> loc(#loc17)
    %29 = arith.addi %14, %28 : tensor<8x1xi32, #blocked> loc(#loc18)
    %30 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc19)
    %31 = tt.addptr %30, %29 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc19)
    %32 = tt.load %31, %10 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc20)
    %33 = arith.muli %16, %cst_3 : tensor<8x1xi32, #blocked> loc(#loc21)
    %34 = tt.broadcast %33 : tensor<8x1xi32, #blocked> -> tensor<8x16xi32, #blocked> loc(#loc22)
    %35 = arith.addi %18, %34 : tensor<8x16xi32, #blocked> loc(#loc22)
    %36 = tt.addptr %24, %35 : tensor<8x16x!tt.ptr<f32>, #blocked>, tensor<8x16xi32, #blocked> loc(#loc23)
    %37 = tt.load %36, %26, %cst evictionPolicy = evict_last : tensor<8x16x!tt.ptr<f32>, #blocked> loc(#loc24)
    %38 = tt.addptr %30, %16 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc25)
    %39 = tt.load %38, %10 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc26)
    %40 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>, #blocked> loc(#loc27)
    %41 = tt.addptr %40, %23 : tensor<8x16x!tt.ptr<f32>, #blocked>, tensor<8x16xi32, #blocked> loc(#loc27)
    %42 = tt.load %41, %26, %cst evictionPolicy = evict_last : tensor<8x16x!tt.ptr<f32>, #blocked> loc(#loc28)
    %43 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc29)
    %44 = tt.addptr %43, %29 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc29)
    %45 = tt.load %44, %10 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc30)
    %46 = tt.addptr %40, %35 : tensor<8x16x!tt.ptr<f32>, #blocked>, tensor<8x16xi32, #blocked> loc(#loc31)
    %47 = tt.load %46, %26, %cst evictionPolicy = evict_last : tensor<8x16x!tt.ptr<f32>, #blocked> loc(#loc32)
    %48 = tt.addptr %43, %16 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc33)
    %49 = tt.load %48, %10 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc34)
    %50 = tt.extern_elementwise %32 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<8x1xf32, #blocked>) -> tensor<8x1xf32, #blocked> loc(#loc35)
    %51 = arith.cmpf ogt, %50, %cst_4 : tensor<8x1xf32, #blocked> loc(#loc72)
    %52 = arith.cmpf une, %50, %50 : tensor<8x1xf32, #blocked> loc(#loc73)
    %53 = arith.ori %51, %52 : tensor<8x1xi1, #blocked> loc(#loc74)
    %54 = arith.select %53, %50, %cst_4 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc75)
    %55 = tt.broadcast %54 : tensor<8x1xf32, #blocked> -> tensor<8x16xf32, #blocked> loc(#loc41)
    %56 = arith.divf %27, %55 : tensor<8x16xf32, #blocked> loc(#loc41)
    %57 = tt.extern_elementwise %39 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<8x1xf32, #blocked>) -> tensor<8x1xf32, #blocked> loc(#loc42)
    %58 = arith.cmpf ogt, %57, %cst_4 : tensor<8x1xf32, #blocked> loc(#loc76)
    %59 = arith.cmpf une, %57, %57 : tensor<8x1xf32, #blocked> loc(#loc77)
    %60 = arith.ori %58, %59 : tensor<8x1xi1, #blocked> loc(#loc78)
    %61 = arith.select %60, %57, %cst_4 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc79)
    %62 = tt.broadcast %61 : tensor<8x1xf32, #blocked> -> tensor<8x16xf32, #blocked> loc(#loc44)
    %63 = arith.divf %37, %62 : tensor<8x16xf32, #blocked> loc(#loc44)
    %64 = arith.mulf %56, %63 : tensor<8x16xf32, #blocked> loc(#loc45)
    %65 = arith.select %26, %64, %cst : tensor<8x16xi1, #blocked>, tensor<8x16xf32, #blocked> loc(#loc46)
    %66 = "tt.reduce"(%65) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc48)), %arg10: f32 loc(callsite(#loc1 at #loc48))):
      %99 = arith.addf %arg9, %arg10 : f32 loc(#loc95)
      tt.reduce.return %99 : f32 loc(#loc80)
    }) : (tensor<8x16xf32, #blocked>) -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc80)
    %67 = triton_gpu.convert_layout %66 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc50)
    %68 = tt.expand_dims %67 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xf32, #blocked1> loc(#loc50)
    %69 = tt.extern_elementwise %45 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<8x1xf32, #blocked>) -> tensor<8x1xf32, #blocked> loc(#loc51)
    %70 = arith.cmpf ogt, %69, %cst_4 : tensor<8x1xf32, #blocked> loc(#loc83)
    %71 = arith.cmpf une, %69, %69 : tensor<8x1xf32, #blocked> loc(#loc84)
    %72 = arith.ori %70, %71 : tensor<8x1xi1, #blocked> loc(#loc85)
    %73 = arith.select %72, %69, %cst_4 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc86)
    %74 = tt.broadcast %73 : tensor<8x1xf32, #blocked> -> tensor<8x16xf32, #blocked> loc(#loc53)
    %75 = arith.divf %42, %74 : tensor<8x16xf32, #blocked> loc(#loc53)
    %76 = tt.extern_elementwise %49 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<8x1xf32, #blocked>) -> tensor<8x1xf32, #blocked> loc(#loc54)
    %77 = arith.cmpf ogt, %76, %cst_4 : tensor<8x1xf32, #blocked> loc(#loc87)
    %78 = arith.cmpf une, %76, %76 : tensor<8x1xf32, #blocked> loc(#loc88)
    %79 = arith.ori %77, %78 : tensor<8x1xi1, #blocked> loc(#loc89)
    %80 = arith.select %79, %76, %cst_4 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc90)
    %81 = tt.broadcast %80 : tensor<8x1xf32, #blocked> -> tensor<8x16xf32, #blocked> loc(#loc56)
    %82 = arith.divf %47, %81 : tensor<8x16xf32, #blocked> loc(#loc56)
    %83 = arith.mulf %75, %82 : tensor<8x16xf32, #blocked> loc(#loc57)
    %84 = arith.select %26, %83, %cst : tensor<8x16xi1, #blocked>, tensor<8x16xf32, #blocked> loc(#loc58)
    %85 = "tt.reduce"(%84) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc59)), %arg10: f32 loc(callsite(#loc1 at #loc59))):
      %99 = arith.addf %arg9, %arg10 : f32 loc(#loc96)
      tt.reduce.return %99 : f32 loc(#loc91)
    }) : (tensor<8x16xf32, #blocked>) -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc91)
    %86 = triton_gpu.convert_layout %85 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc60)
    %87 = tt.expand_dims %86 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xf32, #blocked1> loc(#loc60)
    %88 = arith.mulf %75, %63 : tensor<8x16xf32, #blocked> loc(#loc61)
    %89 = arith.select %26, %88, %cst : tensor<8x16xi1, #blocked>, tensor<8x16xf32, #blocked> loc(#loc62)
    %90 = "tt.reduce"(%89) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc63)), %arg10: f32 loc(callsite(#loc1 at #loc63))):
      %99 = arith.addf %arg9, %arg10 : f32 loc(#loc97)
      tt.reduce.return %99 : f32 loc(#loc93)
    }) : (tensor<8x16xf32, #blocked>) -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc93)
    %91 = triton_gpu.convert_layout %90 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc64)
    %92 = tt.expand_dims %91 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xf32, #blocked1> loc(#loc64)
    %93 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked1> loc(#loc65)
    %94 = tt.addptr %93, %9 : tensor<8x1x!tt.ptr<f32>, #blocked1>, tensor<8x1xi32, #blocked1> loc(#loc65)
    tt.store %94, %68, %11 : tensor<8x1x!tt.ptr<f32>, #blocked1> loc(#loc66)
    %95 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked1> loc(#loc67)
    %96 = tt.addptr %95, %9 : tensor<8x1x!tt.ptr<f32>, #blocked1>, tensor<8x1xi32, #blocked1> loc(#loc67)
    tt.store %96, %87, %11 : tensor<8x1x!tt.ptr<f32>, #blocked1> loc(#loc68)
    %97 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked1> loc(#loc69)
    %98 = tt.addptr %97, %9 : tensor<8x1x!tt.ptr<f32>, #blocked1>, tensor<8x1xi32, #blocked1> loc(#loc69)
    tt.store %98, %92, %11 : tensor<8x1x!tt.ptr<f32>, #blocked1> loc(#loc70)
    tt.return loc(#loc71)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":23:28)
#loc3 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":23:33)
#loc4 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":24:44)
#loc5 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":24:23)
#loc6 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":25:21)
#loc7 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":26:34)
#loc8 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":30:19)
#loc9 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":31:19)
#loc10 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":32:19)
#loc11 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":34:38)
#loc12 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":34:35)
#loc13 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":34:46)
#loc14 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":34:43)
#loc15 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":34:30)
#loc16 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":34:51)
#loc17 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":35:37)
#loc18 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":35:35)
#loc19 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":35:30)
#loc20 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":35:42)
#loc21 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":36:38)
#loc22 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":36:35)
#loc23 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":36:30)
#loc24 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":36:43)
#loc25 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":37:30)
#loc26 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":37:35)
#loc27 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":38:31)
#loc28 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":38:52)
#loc29 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":39:31)
#loc30 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":39:43)
#loc31 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":40:31)
#loc32 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":40:44)
#loc33 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":41:31)
#loc34 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":41:36)
#loc35 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":42:26)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc37 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":44:40)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc41 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":45:18)
#loc42 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":46:26)
#loc43 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":47:40)
#loc44 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":48:19)
#loc45 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":49:19)
#loc46 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":51:35)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc50 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":52:29)
#loc51 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":53:27)
#loc52 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":54:42)
#loc53 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":55:20)
#loc54 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":56:27)
#loc55 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":57:42)
#loc56 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":58:20)
#loc57 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":59:20)
#loc58 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":61:35)
#loc60 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":62:29)
#loc61 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":63:20)
#loc62 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":65:35)
#loc64 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":66:29)
#loc65 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":67:25)
#loc66 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":67:37)
#loc67 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":68:25)
#loc68 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":68:37)
#loc69 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":69:25)
#loc70 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":69:37)
#loc71 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":69:4)
#loc72 = loc(callsite(#loc36 at #loc37))
#loc73 = loc(callsite(#loc38 at #loc37))
#loc74 = loc(callsite(#loc39 at #loc37))
#loc75 = loc(callsite(#loc40 at #loc37))
#loc76 = loc(callsite(#loc36 at #loc43))
#loc77 = loc(callsite(#loc38 at #loc43))
#loc78 = loc(callsite(#loc39 at #loc43))
#loc79 = loc(callsite(#loc40 at #loc43))
#loc80 = loc(callsite(#loc47 at #loc48))
#loc82 = loc(callsite(#loc49 at #loc47))
#loc83 = loc(callsite(#loc36 at #loc52))
#loc84 = loc(callsite(#loc38 at #loc52))
#loc85 = loc(callsite(#loc39 at #loc52))
#loc86 = loc(callsite(#loc40 at #loc52))
#loc87 = loc(callsite(#loc36 at #loc55))
#loc88 = loc(callsite(#loc38 at #loc55))
#loc89 = loc(callsite(#loc39 at #loc55))
#loc90 = loc(callsite(#loc40 at #loc55))
#loc91 = loc(callsite(#loc47 at #loc59))
#loc93 = loc(callsite(#loc47 at #loc63))
#loc95 = loc(callsite(#loc82 at #loc48))
#loc96 = loc(callsite(#loc82 at #loc59))
#loc97 = loc(callsite(#loc82 at #loc63))
