; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_max_pool2d_with_indices_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 7, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 128, !dbg !14
  %12 = sdiv i32 %10, 4, !dbg !15
  %.frozen = freeze i32 %10, !dbg !16
  %13 = sdiv i32 %.frozen, 32, !dbg !16
  %14 = mul i32 %13, 32, !dbg !17
  %.decomposed = sub i32 %.frozen, %14, !dbg !17
  %15 = sext i32 %10 to i64, !dbg !18
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !18
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %11) #1, !dbg !19
  %18 = add i32 %10, -10, !dbg !20
  %19 = sext i32 %18 to i64, !dbg !21
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !21
  %21 = add i32 %10, -9, !dbg !22
  %22 = sext i32 %21 to i64, !dbg !23
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !23
  %24 = add i32 %10, -8, !dbg !24
  %25 = sext i32 %24 to i64, !dbg !25
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !25
  %27 = add i32 %10, -7, !dbg !26
  %28 = sext i32 %27 to i64, !dbg !27
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !27
  %30 = add i32 %10, -6, !dbg !28
  %31 = sext i32 %30 to i64, !dbg !29
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !29
  %33 = add i32 %10, -5, !dbg !30
  %34 = sext i32 %33 to i64, !dbg !31
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !31
  %36 = add i32 %10, -4, !dbg !32
  %37 = sext i32 %36 to i64, !dbg !33
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !33
  %39 = add i32 %10, -3, !dbg !34
  %40 = sext i32 %39 to i64, !dbg !35
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !35
  %42 = add i32 %10, -2, !dbg !36
  %43 = sext i32 %42 to i64, !dbg !37
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !37
  %45 = add i32 %10, -1, !dbg !38
  %46 = sext i32 %45 to i64, !dbg !39
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !39
  %48 = add i32 %10, 1, !dbg !40
  %49 = sext i32 %48 to i64, !dbg !41
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !41
  %51 = add i32 %10, 2, !dbg !42
  %52 = sext i32 %51 to i64, !dbg !43
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !43
  %54 = add i32 %10, 3, !dbg !44
  %55 = sext i32 %54 to i64, !dbg !45
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !45
  %57 = add i32 %10, 4, !dbg !46
  %58 = sext i32 %57 to i64, !dbg !47
  %59 = getelementptr float, ptr addrspace(1) %0, i64 %58, !dbg !47
  %60 = add i32 %10, 5, !dbg !48
  %61 = sext i32 %60 to i64, !dbg !49
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !49
  %63 = add i32 %10, 6, !dbg !50
  %64 = sext i32 %63 to i64, !dbg !51
  %65 = getelementptr float, ptr addrspace(1) %0, i64 %64, !dbg !51
  %66 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !52
  %67 = insertelement <2 x i32> %66, i32 %10, i64 1, !dbg !52
  %68 = srem <2 x i32> %67, splat (i32 4), !dbg !52
  %69 = extractelement <2 x i32> %68, i64 0, !dbg !53
  %70 = icmp sgt i32 %69, 1, !dbg !54
  %71 = extractelement <2 x i32> %68, i64 1, !dbg !55
  %72 = icmp sgt i32 %71, 1, !dbg !56
  %73 = and i1 %72, %70, !dbg !57
  %74 = and i1 %11, %73, !dbg !58
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %74, i32 -8388608, i1 %74) #1, !dbg !59
  %76 = bitcast i32 %75 to float, !dbg !59
  %77 = icmp sgt i32 %71, 0, !dbg !60
  %78 = and i1 %77, %70, !dbg !61
  %79 = and i1 %11, %78, !dbg !62
  %80 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 %79, i32 -8388608, i1 %79) #1, !dbg !63
  %81 = bitcast i32 %80 to float, !dbg !63
  %82 = fcmp ogt float %81, %76, !dbg !64
  %83 = fcmp uno float %81, 0.000000e+00, !dbg !68
  %84 = or i1 %82, %83, !dbg !69
  %85 = select i1 %84, float %81, float %76, !dbg !70
  %86 = icmp sgt i32 %71, -1, !dbg !71
  %87 = and i1 %86, %70, !dbg !72
  %88 = and i1 %11, %87, !dbg !73
  %89 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %88, i32 -8388608, i1 %88) #1, !dbg !74
  %90 = bitcast i32 %89 to float, !dbg !74
  %91 = fcmp olt float %85, %90, !dbg !75
  %92 = fcmp uno float %90, 0.000000e+00, !dbg !77
  %93 = or i1 %92, %91, !dbg !78
  %94 = select i1 %93, float %90, float %85, !dbg !79
  %95 = add nsw i32 %71, 1, !dbg !80
  %96 = icmp ult i32 %95, 4, !dbg !80
  %97 = and i1 %70, %96, !dbg !81
  %98 = and i1 %11, %97, !dbg !82
  %99 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %98, i32 -8388608, i1 %98) #1, !dbg !83
  %100 = bitcast i32 %99 to float, !dbg !83
  %101 = fcmp olt float %94, %100, !dbg !84
  %102 = fcmp uno float %100, 0.000000e+00, !dbg !86
  %103 = or i1 %102, %101, !dbg !87
  %104 = select i1 %103, float %100, float %94, !dbg !88
  %105 = add nsw <2 x i32> %68, splat (i32 2), !dbg !89
  %106 = extractelement <2 x i32> %105, i64 1, !dbg !90
  %107 = icmp ult i32 %106, 4, !dbg !91
  %108 = and i1 %70, %107, !dbg !92
  %109 = and i1 %11, %108, !dbg !93
  %110 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %109, i32 -8388608, i1 %109) #1, !dbg !94
  %111 = bitcast i32 %110 to float, !dbg !94
  %112 = fcmp olt float %104, %111, !dbg !95
  %113 = fcmp uno float %111, 0.000000e+00, !dbg !97
  %114 = or i1 %113, %112, !dbg !98
  %115 = select i1 %114, float %111, float %104, !dbg !99
  %116 = icmp sgt i32 %69, 0, !dbg !100
  %117 = and i1 %72, %116, !dbg !101
  %118 = and i1 %11, %117, !dbg !102
  %119 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %118, i32 -8388608, i1 %118) #1, !dbg !103
  %120 = bitcast i32 %119 to float, !dbg !103
  %121 = fcmp olt float %115, %120, !dbg !104
  %122 = fcmp uno float %120, 0.000000e+00, !dbg !106
  %123 = or i1 %122, %121, !dbg !107
  %124 = select i1 %123, float %120, float %115, !dbg !108
  %125 = and i1 %77, %116, !dbg !109
  %126 = and i1 %11, %125, !dbg !110
  %127 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %126, i32 -8388608, i1 %126) #1, !dbg !111
  %128 = bitcast i32 %127 to float, !dbg !111
  %129 = fcmp olt float %124, %128, !dbg !112
  %130 = fcmp uno float %128, 0.000000e+00, !dbg !114
  %131 = or i1 %130, %129, !dbg !115
  %132 = select i1 %131, float %128, float %124, !dbg !116
  %133 = and i1 %86, %116, !dbg !117
  %134 = and i1 %11, %133, !dbg !118
  %135 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %134, i32 -8388608, i1 %134) #1, !dbg !119
  %136 = bitcast i32 %135 to float, !dbg !119
  %137 = fcmp olt float %132, %136, !dbg !120
  %138 = fcmp uno float %136, 0.000000e+00, !dbg !122
  %139 = or i1 %138, %137, !dbg !123
  %140 = select i1 %139, float %136, float %132, !dbg !124
  %141 = and i1 %116, %96, !dbg !125
  %142 = and i1 %11, %141, !dbg !126
  %143 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %142, i32 -8388608, i1 %142) #1, !dbg !127
  %144 = bitcast i32 %143 to float, !dbg !127
  %145 = fcmp olt float %140, %144, !dbg !128
  %146 = fcmp uno float %144, 0.000000e+00, !dbg !130
  %147 = or i1 %146, %145, !dbg !131
  %148 = select i1 %147, float %144, float %140, !dbg !132
  %149 = and i1 %116, %107, !dbg !133
  %150 = and i1 %11, %149, !dbg !134
  %151 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %44, i1 %150, i32 -8388608, i1 %150) #1, !dbg !135
  %152 = bitcast i32 %151 to float, !dbg !135
  %153 = fcmp olt float %148, %152, !dbg !136
  %154 = fcmp uno float %152, 0.000000e+00, !dbg !138
  %155 = or i1 %154, %153, !dbg !139
  %156 = select i1 %155, float %152, float %148, !dbg !140
  %157 = icmp sgt i32 %69, -1, !dbg !141
  %158 = and i1 %72, %157, !dbg !142
  %159 = and i1 %11, %158, !dbg !143
  %160 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %44, i1 %159, i32 -8388608, i1 %159) #1, !dbg !144
  %161 = bitcast i32 %160 to float, !dbg !144
  %162 = fcmp olt float %156, %161, !dbg !145
  %163 = fcmp uno float %161, 0.000000e+00, !dbg !147
  %164 = or i1 %163, %162, !dbg !148
  %165 = select i1 %164, float %161, float %156, !dbg !149
  %166 = and i1 %77, %157, !dbg !150
  %167 = and i1 %11, %166, !dbg !151
  %168 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %167, i32 -8388608, i1 %167) #1, !dbg !152
  %169 = bitcast i32 %168 to float, !dbg !152
  %170 = fcmp olt float %165, %169, !dbg !153
  %171 = fcmp uno float %169, 0.000000e+00, !dbg !155
  %172 = or i1 %171, %170, !dbg !156
  %173 = select i1 %172, float %169, float %165, !dbg !157
  %174 = or i32 %69, %71, !dbg !55
  %175 = icmp sgt i32 %174, -1, !dbg !55
  %176 = and i1 %11, %175, !dbg !158
  %177 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %16, i1 %176, i32 -8388608, i1 %176) #1, !dbg !159
  %178 = bitcast i32 %177 to float, !dbg !159
  %179 = fcmp olt float %173, %178, !dbg !160
  %180 = fcmp uno float %178, 0.000000e+00, !dbg !162
  %181 = or i1 %180, %179, !dbg !163
  %182 = select i1 %181, float %178, float %173, !dbg !164
  %183 = and i1 %157, %96, !dbg !165
  %184 = and i1 %11, %183, !dbg !166
  %185 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %184, i32 -8388608, i1 %184) #1, !dbg !167
  %186 = bitcast i32 %185 to float, !dbg !167
  %187 = fcmp olt float %182, %186, !dbg !168
  %188 = fcmp uno float %186, 0.000000e+00, !dbg !170
  %189 = or i1 %188, %187, !dbg !171
  %190 = select i1 %189, float %186, float %182, !dbg !172
  %191 = and i1 %157, %107, !dbg !173
  %192 = and i1 %11, %191, !dbg !174
  %193 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %53, i1 %192, i32 -8388608, i1 %192) #1, !dbg !175
  %194 = bitcast i32 %193 to float, !dbg !175
  %195 = fcmp olt float %190, %194, !dbg !176
  %196 = fcmp uno float %194, 0.000000e+00, !dbg !178
  %197 = or i1 %196, %195, !dbg !179
  %198 = select i1 %197, float %194, float %190, !dbg !180
  %199 = add nsw i32 %69, 1, !dbg !53
  %200 = icmp ult i32 %199, 4, !dbg !53
  %201 = and i1 %72, %200, !dbg !181
  %202 = and i1 %11, %201, !dbg !182
  %203 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %53, i1 %202, i32 -8388608, i1 %202) #1, !dbg !183
  %204 = bitcast i32 %203 to float, !dbg !183
  %205 = fcmp olt float %198, %204, !dbg !184
  %206 = fcmp uno float %204, 0.000000e+00, !dbg !186
  %207 = or i1 %206, %205, !dbg !187
  %208 = select i1 %207, float %204, float %198, !dbg !188
  %209 = and i1 %77, %200, !dbg !189
  %210 = and i1 %11, %209, !dbg !190
  %211 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %210, i32 -8388608, i1 %210) #1, !dbg !191
  %212 = bitcast i32 %211 to float, !dbg !191
  %213 = fcmp olt float %208, %212, !dbg !192
  %214 = fcmp uno float %212, 0.000000e+00, !dbg !194
  %215 = or i1 %214, %213, !dbg !195
  %216 = select i1 %215, float %212, float %208, !dbg !196
  %217 = and i1 %86, %200, !dbg !197
  %218 = and i1 %11, %217, !dbg !198
  %219 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %59, i1 %218, i32 -8388608, i1 %218) #1, !dbg !199
  %220 = bitcast i32 %219 to float, !dbg !199
  %221 = fcmp olt float %216, %220, !dbg !200
  %222 = fcmp uno float %220, 0.000000e+00, !dbg !202
  %223 = or i1 %222, %221, !dbg !203
  %224 = select i1 %223, float %220, float %216, !dbg !204
  %225 = or i32 %199, %95, !dbg !205
  %226 = icmp ult i32 %225, 4, !dbg !205
  %227 = and i1 %11, %226, !dbg !206
  %228 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %227, i32 -8388608, i1 %227) #1, !dbg !207
  %229 = bitcast i32 %228 to float, !dbg !207
  %230 = fcmp olt float %224, %229, !dbg !208
  %231 = fcmp uno float %229, 0.000000e+00, !dbg !210
  %232 = or i1 %231, %230, !dbg !211
  %233 = select i1 %232, float %229, float %224, !dbg !212
  %234 = or i32 %199, %106, !dbg !213
  %235 = icmp ult i32 %234, 4, !dbg !213
  %236 = and i1 %11, %235, !dbg !214
  %237 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %236, i32 -8388608, i1 %236) #1, !dbg !215
  %238 = bitcast i32 %237 to float, !dbg !215
  %239 = fcmp olt float %233, %238, !dbg !216
  %240 = fcmp uno float %238, 0.000000e+00, !dbg !218
  %241 = or i1 %240, %239, !dbg !219
  %242 = select i1 %241, float %238, float %233, !dbg !220
  %243 = extractelement <2 x i32> %105, i64 0, !dbg !90
  %244 = icmp ult i32 %243, 4, !dbg !89
  %245 = and i1 %72, %244, !dbg !221
  %246 = and i1 %11, %245, !dbg !222
  %247 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %246, i32 -8388608, i1 %246) #1, !dbg !223
  %248 = bitcast i32 %247 to float, !dbg !223
  %249 = fcmp olt float %242, %248, !dbg !224
  %250 = fcmp uno float %248, 0.000000e+00, !dbg !226
  %251 = or i1 %250, %249, !dbg !227
  %252 = select i1 %251, float %248, float %242, !dbg !228
  %253 = and i1 %77, %244, !dbg !229
  %254 = add i32 %10, 7, !dbg !230
  %255 = sext i32 %254 to i64, !dbg !231
  %256 = getelementptr float, ptr addrspace(1) %0, i64 %255, !dbg !231
  %257 = and i1 %11, %253, !dbg !232
  %258 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %256, i1 %257, i32 -8388608, i1 %257) #1, !dbg !233
  %259 = bitcast i32 %258 to float, !dbg !233
  %260 = fcmp olt float %252, %259, !dbg !234
  %261 = fcmp uno float %259, 0.000000e+00, !dbg !236
  %262 = or i1 %261, %260, !dbg !237
  %263 = select i1 %262, float %259, float %252, !dbg !238
  %264 = and i1 %86, %244, !dbg !239
  %265 = add i32 %10, 8, !dbg !240
  %266 = sext i32 %265 to i64, !dbg !241
  %267 = getelementptr float, ptr addrspace(1) %0, i64 %266, !dbg !241
  %268 = and i1 %11, %264, !dbg !242
  %269 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %267, i1 %268, i32 -8388608, i1 %268) #1, !dbg !243
  %270 = bitcast i32 %269 to float, !dbg !243
  %271 = fcmp olt float %263, %270, !dbg !244
  %272 = fcmp uno float %270, 0.000000e+00, !dbg !246
  %273 = or i1 %272, %271, !dbg !247
  %274 = select i1 %273, float %270, float %263, !dbg !248
  %275 = or i32 %243, %95, !dbg !249
  %276 = icmp ult i32 %275, 4, !dbg !249
  %277 = add i32 %10, 9, !dbg !250
  %278 = sext i32 %277 to i64, !dbg !251
  %279 = getelementptr float, ptr addrspace(1) %0, i64 %278, !dbg !251
  %280 = and i1 %11, %276, !dbg !252
  %281 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %279, i1 %280, i32 -8388608, i1 %280) #1, !dbg !253
  %282 = bitcast i32 %281 to float, !dbg !253
  %283 = fcmp olt float %274, %282, !dbg !254
  %284 = fcmp uno float %282, 0.000000e+00, !dbg !256
  %285 = or i1 %284, %283, !dbg !257
  %286 = select i1 %285, float %282, float %274, !dbg !258
  %287 = or i32 %243, %106, !dbg !90
  %288 = icmp ult i32 %287, 4, !dbg !90
  %289 = add i32 %10, 10, !dbg !259
  %290 = sext i32 %289 to i64, !dbg !260
  %291 = getelementptr float, ptr addrspace(1) %0, i64 %290, !dbg !260
  %292 = and i1 %11, %288, !dbg !261
  %293 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %291, i1 %292, i32 -8388608, i1 %292) #1, !dbg !262
  %294 = bitcast i32 %293 to float, !dbg !262
  %295 = fcmp olt float %286, %294, !dbg !263
  %296 = fcmp uno float %294, 0.000000e+00, !dbg !265
  %297 = or i1 %296, %295, !dbg !266
  %298 = zext i1 %82 to i8, !dbg !267
  %299 = select i1 %91, i8 2, i8 %298, !dbg !268
  %300 = select i1 %101, i8 3, i8 %299, !dbg !269
  %301 = select i1 %112, i8 4, i8 %300, !dbg !270
  %302 = select i1 %121, i8 5, i8 %301, !dbg !271
  %303 = select i1 %129, i8 6, i8 %302, !dbg !272
  %304 = select i1 %137, i8 7, i8 %303, !dbg !273
  %305 = select i1 %145, i8 8, i8 %304, !dbg !274
  %306 = select i1 %153, i8 9, i8 %305, !dbg !275
  %307 = select i1 %162, i8 10, i8 %306, !dbg !276
  %308 = select i1 %170, i8 11, i8 %307, !dbg !277
  %309 = select i1 %179, i8 12, i8 %308, !dbg !278
  %310 = select i1 %187, i8 13, i8 %309, !dbg !279
  %311 = select i1 %195, i8 14, i8 %310, !dbg !280
  %312 = select i1 %205, i8 15, i8 %311, !dbg !281
  %313 = select i1 %213, i8 16, i8 %312, !dbg !282
  %314 = select i1 %221, i8 17, i8 %313, !dbg !283
  %315 = select i1 %230, i8 18, i8 %314, !dbg !284
  %316 = select i1 %239, i8 19, i8 %315, !dbg !285
  %317 = select i1 %249, i8 20, i8 %316, !dbg !286
  %318 = select i1 %260, i8 21, i8 %317, !dbg !287
  %319 = select i1 %271, i8 22, i8 %318, !dbg !288
  %320 = select i1 %283, i8 23, i8 %319, !dbg !289
  %321 = select i1 %295, i8 24, i8 %320, !dbg !290
  %322 = shl i32 %13, 7, !dbg !291
  %323 = add i32 %322, %.decomposed, !dbg !292
  %324 = sext i32 %323 to i64, !dbg !293
  %325 = getelementptr float, ptr addrspace(1) %1, i64 %324, !dbg !293
  %326 = bitcast float %286 to i32, !dbg !294
  %327 = select i1 %297, i32 %293, i32 %326, !dbg !295
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %327, ptr addrspace(1) %325, i1 %11) #1, !dbg !294
  %328 = getelementptr i8, ptr addrspace(1) %2, i64 %15, !dbg !296
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %321, ptr addrspace(1) %328, i1 %11) #1, !dbg !297
  %329 = getelementptr float, ptr addrspace(1) %3, i64 %324, !dbg !298
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %17, ptr addrspace(1) %329, i1 %11) #1, !dbg !299
  ret void, !dbg !300
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmrn33hh6vyumutkyw7zgyh5glvis5ihvysbfwep2kfhznroktnl.py", directory: "inductor_cache/mr")
!4 = !{ptr @triton_poi_fused_cat_max_pool2d_with_indices_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_max_pool2d_with_indices_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_max_pool2d_with_indices_2", linkageName: "triton_poi_fused_cat_max_pool2d_with_indices_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 27, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 19, scope: !7)
!18 = !DILocation(line: 29, column: 32, scope: !7)
!19 = !DILocation(line: 29, column: 37, scope: !7)
!20 = !DILocation(line: 41, column: 39, scope: !7)
!21 = !DILocation(line: 41, column: 31, scope: !7)
!22 = !DILocation(line: 47, column: 38, scope: !7)
!23 = !DILocation(line: 47, column: 31, scope: !7)
!24 = !DILocation(line: 54, column: 38, scope: !7)
!25 = !DILocation(line: 54, column: 31, scope: !7)
!26 = !DILocation(line: 61, column: 38, scope: !7)
!27 = !DILocation(line: 61, column: 31, scope: !7)
!28 = !DILocation(line: 68, column: 38, scope: !7)
!29 = !DILocation(line: 68, column: 31, scope: !7)
!30 = !DILocation(line: 78, column: 38, scope: !7)
!31 = !DILocation(line: 78, column: 31, scope: !7)
!32 = !DILocation(line: 81, column: 38, scope: !7)
!33 = !DILocation(line: 81, column: 31, scope: !7)
!34 = !DILocation(line: 84, column: 38, scope: !7)
!35 = !DILocation(line: 84, column: 31, scope: !7)
!36 = !DILocation(line: 87, column: 38, scope: !7)
!37 = !DILocation(line: 87, column: 31, scope: !7)
!38 = !DILocation(line: 97, column: 38, scope: !7)
!39 = !DILocation(line: 97, column: 31, scope: !7)
!40 = !DILocation(line: 103, column: 35, scope: !7)
!41 = !DILocation(line: 103, column: 31, scope: !7)
!42 = !DILocation(line: 106, column: 35, scope: !7)
!43 = !DILocation(line: 106, column: 31, scope: !7)
!44 = !DILocation(line: 116, column: 35, scope: !7)
!45 = !DILocation(line: 116, column: 31, scope: !7)
!46 = !DILocation(line: 119, column: 35, scope: !7)
!47 = !DILocation(line: 119, column: 31, scope: !7)
!48 = !DILocation(line: 122, column: 35, scope: !7)
!49 = !DILocation(line: 122, column: 31, scope: !7)
!50 = !DILocation(line: 125, column: 35, scope: !7)
!51 = !DILocation(line: 125, column: 31, scope: !7)
!52 = !DILocation(line: 24, column: 26, scope: !7)
!53 = !DILocation(line: 111, column: 20, scope: !7)
!54 = !DILocation(line: 32, column: 19, scope: !7)
!55 = !DILocation(line: 99, column: 20, scope: !7)
!56 = !DILocation(line: 37, column: 19, scope: !7)
!57 = !DILocation(line: 40, column: 19, scope: !7)
!58 = !DILocation(line: 41, column: 52, scope: !7)
!59 = !DILocation(line: 41, column: 44, scope: !7)
!60 = !DILocation(line: 43, column: 21, scope: !7)
!61 = !DILocation(line: 46, column: 19, scope: !7)
!62 = !DILocation(line: 47, column: 51, scope: !7)
!63 = !DILocation(line: 47, column: 43, scope: !7)
!64 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !67)
!65 = distinct !DILexicalBlockFile(scope: !7, file: !66, discriminator: 0)
!66 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!67 = !DILocation(line: 48, column: 42, scope: !7)
!68 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !67)
!69 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !67)
!70 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !67)
!71 = !DILocation(line: 50, column: 21, scope: !7)
!72 = !DILocation(line: 53, column: 19, scope: !7)
!73 = !DILocation(line: 54, column: 51, scope: !7)
!74 = !DILocation(line: 54, column: 43, scope: !7)
!75 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !76)
!76 = !DILocation(line: 55, column: 42, scope: !7)
!77 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !76)
!78 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !76)
!79 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !76)
!80 = !DILocation(line: 59, column: 20, scope: !7)
!81 = !DILocation(line: 60, column: 19, scope: !7)
!82 = !DILocation(line: 61, column: 51, scope: !7)
!83 = !DILocation(line: 61, column: 43, scope: !7)
!84 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !85)
!85 = !DILocation(line: 62, column: 42, scope: !7)
!86 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !85)
!87 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !85)
!88 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !85)
!89 = !DILocation(line: 130, column: 21, scope: !7)
!90 = !DILocation(line: 143, column: 22, scope: !7)
!91 = !DILocation(line: 66, column: 20, scope: !7)
!92 = !DILocation(line: 67, column: 19, scope: !7)
!93 = !DILocation(line: 68, column: 51, scope: !7)
!94 = !DILocation(line: 68, column: 43, scope: !7)
!95 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !96)
!96 = !DILocation(line: 69, column: 42, scope: !7)
!97 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !96)
!98 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !96)
!99 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !96)
!100 = !DILocation(line: 71, column: 21, scope: !7)
!101 = !DILocation(line: 74, column: 20, scope: !7)
!102 = !DILocation(line: 75, column: 51, scope: !7)
!103 = !DILocation(line: 75, column: 43, scope: !7)
!104 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !105)
!105 = !DILocation(line: 76, column: 42, scope: !7)
!106 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !105)
!107 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !105)
!108 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !105)
!109 = !DILocation(line: 77, column: 20, scope: !7)
!110 = !DILocation(line: 78, column: 51, scope: !7)
!111 = !DILocation(line: 78, column: 43, scope: !7)
!112 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !113)
!113 = !DILocation(line: 79, column: 42, scope: !7)
!114 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !113)
!115 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !113)
!116 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !113)
!117 = !DILocation(line: 80, column: 20, scope: !7)
!118 = !DILocation(line: 81, column: 51, scope: !7)
!119 = !DILocation(line: 81, column: 43, scope: !7)
!120 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !121)
!121 = !DILocation(line: 82, column: 42, scope: !7)
!122 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !121)
!123 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !121)
!124 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !121)
!125 = !DILocation(line: 83, column: 20, scope: !7)
!126 = !DILocation(line: 84, column: 51, scope: !7)
!127 = !DILocation(line: 84, column: 43, scope: !7)
!128 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !129)
!129 = !DILocation(line: 85, column: 42, scope: !7)
!130 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !129)
!131 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !129)
!132 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !129)
!133 = !DILocation(line: 86, column: 20, scope: !7)
!134 = !DILocation(line: 87, column: 51, scope: !7)
!135 = !DILocation(line: 87, column: 43, scope: !7)
!136 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !137)
!137 = !DILocation(line: 88, column: 42, scope: !7)
!138 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !137)
!139 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !137)
!140 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !137)
!141 = !DILocation(line: 90, column: 21, scope: !7)
!142 = !DILocation(line: 93, column: 20, scope: !7)
!143 = !DILocation(line: 94, column: 51, scope: !7)
!144 = !DILocation(line: 94, column: 43, scope: !7)
!145 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !146)
!146 = !DILocation(line: 95, column: 42, scope: !7)
!147 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !146)
!148 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !146)
!149 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !146)
!150 = !DILocation(line: 96, column: 20, scope: !7)
!151 = !DILocation(line: 97, column: 51, scope: !7)
!152 = !DILocation(line: 97, column: 43, scope: !7)
!153 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !154)
!154 = !DILocation(line: 98, column: 42, scope: !7)
!155 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !154)
!156 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !154)
!157 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !154)
!158 = !DILocation(line: 100, column: 44, scope: !7)
!159 = !DILocation(line: 100, column: 36, scope: !7)
!160 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !161)
!161 = !DILocation(line: 101, column: 42, scope: !7)
!162 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !161)
!163 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !161)
!164 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !161)
!165 = !DILocation(line: 102, column: 20, scope: !7)
!166 = !DILocation(line: 103, column: 48, scope: !7)
!167 = !DILocation(line: 103, column: 40, scope: !7)
!168 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !169)
!169 = !DILocation(line: 104, column: 42, scope: !7)
!170 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !169)
!171 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !169)
!172 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !169)
!173 = !DILocation(line: 105, column: 20, scope: !7)
!174 = !DILocation(line: 106, column: 48, scope: !7)
!175 = !DILocation(line: 106, column: 40, scope: !7)
!176 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !177)
!177 = !DILocation(line: 107, column: 42, scope: !7)
!178 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !177)
!179 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !177)
!180 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !177)
!181 = !DILocation(line: 112, column: 20, scope: !7)
!182 = !DILocation(line: 113, column: 48, scope: !7)
!183 = !DILocation(line: 113, column: 40, scope: !7)
!184 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !185)
!185 = !DILocation(line: 114, column: 42, scope: !7)
!186 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !185)
!187 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !185)
!188 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !185)
!189 = !DILocation(line: 115, column: 20, scope: !7)
!190 = !DILocation(line: 116, column: 48, scope: !7)
!191 = !DILocation(line: 116, column: 40, scope: !7)
!192 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !193)
!193 = !DILocation(line: 117, column: 42, scope: !7)
!194 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !193)
!195 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !193)
!196 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !193)
!197 = !DILocation(line: 118, column: 20, scope: !7)
!198 = !DILocation(line: 119, column: 48, scope: !7)
!199 = !DILocation(line: 119, column: 40, scope: !7)
!200 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !201)
!201 = !DILocation(line: 120, column: 42, scope: !7)
!202 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !201)
!203 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !201)
!204 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !201)
!205 = !DILocation(line: 121, column: 20, scope: !7)
!206 = !DILocation(line: 122, column: 48, scope: !7)
!207 = !DILocation(line: 122, column: 40, scope: !7)
!208 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !209)
!209 = !DILocation(line: 123, column: 42, scope: !7)
!210 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !209)
!211 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !209)
!212 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !209)
!213 = !DILocation(line: 124, column: 20, scope: !7)
!214 = !DILocation(line: 125, column: 48, scope: !7)
!215 = !DILocation(line: 125, column: 40, scope: !7)
!216 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !217)
!217 = !DILocation(line: 126, column: 42, scope: !7)
!218 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !217)
!219 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !217)
!220 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !217)
!221 = !DILocation(line: 131, column: 22, scope: !7)
!222 = !DILocation(line: 132, column: 50, scope: !7)
!223 = !DILocation(line: 132, column: 41, scope: !7)
!224 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !225)
!225 = !DILocation(line: 133, column: 44, scope: !7)
!226 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !225)
!227 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !225)
!228 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !225)
!229 = !DILocation(line: 134, column: 22, scope: !7)
!230 = !DILocation(line: 135, column: 36, scope: !7)
!231 = !DILocation(line: 135, column: 32, scope: !7)
!232 = !DILocation(line: 135, column: 50, scope: !7)
!233 = !DILocation(line: 135, column: 41, scope: !7)
!234 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !235)
!235 = !DILocation(line: 136, column: 44, scope: !7)
!236 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !235)
!237 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !235)
!238 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !235)
!239 = !DILocation(line: 137, column: 22, scope: !7)
!240 = !DILocation(line: 138, column: 36, scope: !7)
!241 = !DILocation(line: 138, column: 32, scope: !7)
!242 = !DILocation(line: 138, column: 50, scope: !7)
!243 = !DILocation(line: 138, column: 41, scope: !7)
!244 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !245)
!245 = !DILocation(line: 139, column: 44, scope: !7)
!246 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !245)
!247 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !245)
!248 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !245)
!249 = !DILocation(line: 140, column: 22, scope: !7)
!250 = !DILocation(line: 141, column: 36, scope: !7)
!251 = !DILocation(line: 141, column: 32, scope: !7)
!252 = !DILocation(line: 141, column: 50, scope: !7)
!253 = !DILocation(line: 141, column: 41, scope: !7)
!254 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !255)
!255 = !DILocation(line: 142, column: 44, scope: !7)
!256 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !255)
!257 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !255)
!258 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !255)
!259 = !DILocation(line: 144, column: 37, scope: !7)
!260 = !DILocation(line: 144, column: 32, scope: !7)
!261 = !DILocation(line: 144, column: 51, scope: !7)
!262 = !DILocation(line: 144, column: 42, scope: !7)
!263 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !264)
!264 = !DILocation(line: 145, column: 44, scope: !7)
!265 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !264)
!266 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !264)
!267 = !DILocation(line: 149, column: 38, scope: !7)
!268 = !DILocation(line: 152, column: 38, scope: !7)
!269 = !DILocation(line: 155, column: 38, scope: !7)
!270 = !DILocation(line: 158, column: 38, scope: !7)
!271 = !DILocation(line: 161, column: 38, scope: !7)
!272 = !DILocation(line: 164, column: 38, scope: !7)
!273 = !DILocation(line: 167, column: 38, scope: !7)
!274 = !DILocation(line: 170, column: 38, scope: !7)
!275 = !DILocation(line: 173, column: 38, scope: !7)
!276 = !DILocation(line: 176, column: 38, scope: !7)
!277 = !DILocation(line: 179, column: 38, scope: !7)
!278 = !DILocation(line: 182, column: 38, scope: !7)
!279 = !DILocation(line: 185, column: 38, scope: !7)
!280 = !DILocation(line: 188, column: 38, scope: !7)
!281 = !DILocation(line: 191, column: 38, scope: !7)
!282 = !DILocation(line: 194, column: 38, scope: !7)
!283 = !DILocation(line: 197, column: 38, scope: !7)
!284 = !DILocation(line: 200, column: 38, scope: !7)
!285 = !DILocation(line: 203, column: 38, scope: !7)
!286 = !DILocation(line: 206, column: 38, scope: !7)
!287 = !DILocation(line: 209, column: 38, scope: !7)
!288 = !DILocation(line: 212, column: 38, scope: !7)
!289 = !DILocation(line: 215, column: 38, scope: !7)
!290 = !DILocation(line: 218, column: 38, scope: !7)
!291 = !DILocation(line: 219, column: 34, scope: !7)
!292 = !DILocation(line: 219, column: 30, scope: !7)
!293 = !DILocation(line: 219, column: 25, scope: !7)
!294 = !DILocation(line: 219, column: 47, scope: !7)
!295 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !264)
!296 = !DILocation(line: 220, column: 25, scope: !7)
!297 = !DILocation(line: 220, column: 38, scope: !7)
!298 = !DILocation(line: 221, column: 25, scope: !7)
!299 = !DILocation(line: 221, column: 47, scope: !7)
!300 = !DILocation(line: 221, column: 4, scope: !7)
