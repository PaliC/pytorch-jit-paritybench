#loc = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":19:0)
#loc1 = loc(unknown)
#loc45 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":47:39)
#loc53 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":49:39)
#loc67 = loc(callsite(#loc1 at #loc45))
#loc73 = loc(callsite(#loc1 at #loc53))
module {
  tt.func public @triton_per_fused__to_copy_max_min_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":19:0), %arg3: i32 loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4.000000e+00> : tensor<8x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<8x64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0x7F800000> : tensor<8x64xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<8x64xf32> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %cst_4 = arith.constant dense<9> : tensor<1x64xi32> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<1x64xi32> loc(#loc1)
    %cst_6 = arith.constant dense<-5> : tensor<8x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<-1> : tensor<1x64xi32> loc(#loc1)
    %cst_8 = arith.constant dense<4> : tensor<8x64xi64> loc(#loc1)
    %cst_9 = arith.constant dense<0> : tensor<8x64xi64> loc(#loc1)
    %cst_10 = arith.constant dense<3> : tensor<1x64xi32> loc(#loc1)
    %cst_11 = arith.constant dense<-1> : tensor<8x1xi32> loc(#loc1)
    %cst_12 = arith.constant dense<4> : tensor<8x1xi32> loc(#loc1)
    %cst_13 = arith.constant dense<16> : tensor<8x1xi32> loc(#loc1)
    %cst_14 = arith.constant dense<36> : tensor<1x64xi32> loc(#loc1)
    %cst_15 = arith.constant dense<64> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_15 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_14 : tensor<1x64xi32> loc(#loc10)
    %10 = arith.remsi %5, %cst_13 : tensor<8x1xi32> loc(#loc11)
    %11 = arith.divsi %5, %cst_13 : tensor<8x1xi32> loc(#loc12)
    %12 = arith.divsi %10, %cst_12 : tensor<8x1xi32> loc(#loc13)
    %13 = arith.addi %12, %cst_11 : tensor<8x1xi32> loc(#loc14)
    %14 = arith.divsi %8, %cst_10 : tensor<1x64xi32> loc(#loc15)
    %15 = arith.remsi %14, %cst_10 : tensor<1x64xi32> loc(#loc16)
    %16 = tt.broadcast %13 : tensor<8x1xi32> -> tensor<8x64xi32> loc(#loc17)
    %17 = tt.broadcast %15 : tensor<1x64xi32> -> tensor<8x64xi32> loc(#loc17)
    %18 = arith.addi %16, %17 : tensor<8x64xi32> loc(#loc17)
    %19 = arith.extsi %18 : tensor<8x64xi32> to tensor<8x64xi64> loc(#loc18)
    %20 = arith.cmpi sge, %19, %cst_9 : tensor<8x64xi64> loc(#loc18)
    %21 = arith.cmpi slt, %19, %cst_8 : tensor<8x64xi64> loc(#loc19)
    %22 = arith.remsi %8, %cst_10 : tensor<1x64xi32> loc(#loc20)
    %23 = arith.addi %22, %cst_7 : tensor<1x64xi32> loc(#loc21)
    %24 = arith.remsi %10, %cst_12 : tensor<8x1xi32> loc(#loc22)
    %25 = tt.broadcast %23 : tensor<1x64xi32> -> tensor<8x64xi32> loc(#loc23)
    %26 = tt.broadcast %24 : tensor<8x1xi32> -> tensor<8x64xi32> loc(#loc23)
    %27 = arith.addi %25, %26 : tensor<8x64xi32> loc(#loc23)
    %28 = arith.extsi %27 : tensor<8x64xi32> to tensor<8x64xi64> loc(#loc24)
    %29 = arith.cmpi sge, %28, %cst_9 : tensor<8x64xi64> loc(#loc24)
    %30 = arith.cmpi slt, %28, %cst_8 : tensor<8x64xi64> loc(#loc25)
    %31 = arith.andi %20, %21 : tensor<8x64xi1> loc(#loc26)
    %32 = arith.andi %31, %29 : tensor<8x64xi1> loc(#loc27)
    %33 = arith.andi %32, %30 : tensor<8x64xi1> loc(#loc28)
    %34 = arith.addi %10, %cst_6 : tensor<8x1xi32> loc(#loc29)
    %35 = arith.muli %15, %cst_5 : tensor<1x64xi32> loc(#loc30)
    %36 = tt.broadcast %34 : tensor<8x1xi32> -> tensor<8x64xi32> loc(#loc31)
    %37 = tt.broadcast %35 : tensor<1x64xi32> -> tensor<8x64xi32> loc(#loc31)
    %38 = arith.addi %36, %37 : tensor<8x64xi32> loc(#loc31)
    %39 = arith.divsi %8, %cst_4 : tensor<1x64xi32> loc(#loc32)
    %40 = arith.muli %39, %cst_3 : tensor<1x64xi32> loc(#loc33)
    %41 = tt.broadcast %40 : tensor<1x64xi32> -> tensor<8x64xi32> loc(#loc34)
    %42 = arith.addi %38, %41 : tensor<8x64xi32> loc(#loc34)
    %43 = arith.muli %11, %cst_15 : tensor<8x1xi32> loc(#loc35)
    %44 = tt.broadcast %43 : tensor<8x1xi32> -> tensor<8x64xi32> loc(#loc36)
    %45 = arith.addi %42, %44 : tensor<8x64xi32> loc(#loc36)
    %46 = tt.broadcast %22 : tensor<1x64xi32> -> tensor<8x64xi32> loc(#loc37)
    %47 = arith.addi %45, %46 : tensor<8x64xi32> loc(#loc37)
    %48 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x64x!tt.ptr<f32>> loc(#loc38)
    %49 = tt.addptr %48, %47 : tensor<8x64x!tt.ptr<f32>>, tensor<8x64xi32> loc(#loc38)
    %50 = tt.broadcast %9 : tensor<1x64xi1> -> tensor<8x64xi1> loc(#loc39)
    %51 = arith.andi %50, %33 : tensor<8x64xi1> loc(#loc39)
    %52 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x64xi1> loc(#loc40)
    %53 = arith.andi %51, %52 : tensor<8x64xi1> loc(#loc40)
    %54 = tt.load %49, %53, %cst_2 : tensor<8x64x!tt.ptr<f32>> loc(#loc41)
    %55 = arith.andi %50, %52 : tensor<8x64xi1> loc(#loc42)
    %56 = arith.select %55, %54, %cst_1 : tensor<8x64xi1>, tensor<8x64xf32> loc(#loc43)
    %57 = "tt.reduce"(%56) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc45)), %arg5: f32 loc(callsite(#loc1 at #loc45))):
      %67 = arith.cmpf olt, %arg4, %arg5 : f32 loc(#loc78)
      %68 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc79)
      %69 = arith.ori %67, %68 : i1 loc(#loc80)
      %70 = arith.select %69, %arg4, %arg5 : f32 loc(#loc81)
      tt.reduce.return %70 : f32 loc(#loc66)
    }) : (tensor<8x64xf32>) -> tensor<8xf32> loc(#loc66)
    %58 = tt.expand_dims %57 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc50)
    %59 = arith.select %55, %54, %cst_0 : tensor<8x64xi1>, tensor<8x64xf32> loc(#loc51)
    %60 = "tt.reduce"(%59) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc53)), %arg5: f32 loc(callsite(#loc1 at #loc53))):
      %67 = arith.cmpf ogt, %arg4, %arg5 : f32 loc(#loc82)
      %68 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc83)
      %69 = arith.ori %67, %68 : i1 loc(#loc84)
      %70 = arith.select %69, %arg4, %arg5 : f32 loc(#loc85)
      tt.reduce.return %70 : f32 loc(#loc72)
    }) : (tensor<8x64xf32>) -> tensor<8xf32> loc(#loc72)
    %61 = tt.expand_dims %60 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc58)
    %62 = arith.subf %61, %58 : tensor<8x1xf32> loc(#loc59)
    %63 = arith.cmpf ogt, %62, %cst : tensor<8x1xf32> loc(#loc60)
    %64 = arith.uitofp %63 : tensor<8x1xi1> to tensor<8x1xf32> loc(#loc61)
    gpu.barrier loc(#loc62)
    %65 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc63)
    %66 = tt.addptr %65, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc63)
    tt.store %66, %64, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc64)
    tt.return loc(#loc65)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":23:28)
#loc3 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":23:33)
#loc4 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":24:36)
#loc5 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":24:44)
#loc6 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":24:23)
#loc7 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":25:21)
#loc8 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":26:26)
#loc9 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":26:34)
#loc10 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":28:21)
#loc11 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":30:19)
#loc12 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":31:19)
#loc13 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":33:25)
#loc14 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":33:19)
#loc15 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":33:39)
#loc16 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":33:44)
#loc17 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":33:32)
#loc18 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":35:19)
#loc19 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":37:18)
#loc20 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":38:25)
#loc21 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":38:20)
#loc22 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":38:38)
#loc23 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":38:33)
#loc24 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":39:19)
#loc25 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":40:18)
#loc26 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":41:18)
#loc27 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":42:18)
#loc28 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":43:19)
#loc29 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":44:38)
#loc30 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":44:47)
#loc31 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":44:43)
#loc32 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":44:75)
#loc33 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":44:69)
#loc34 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":44:65)
#loc35 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":44:83)
#loc36 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":44:80)
#loc37 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":44:90)
#loc38 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":44:31)
#loc39 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":44:109)
#loc40 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":44:117)
#loc41 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":44:101)
#loc42 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":46:29)
#loc43 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":46:43)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":126:29)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc50 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":47:42)
#loc51 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":48:43)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc58 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":49:42)
#loc59 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":50:20)
#loc60 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":52:20)
#loc61 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":53:21)
#loc62 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":54:4)
#loc63 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":55:28)
#loc64 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":55:40)
#loc65 = loc("inductor_cache/gd/cgdua4vc53scmbo2kiaajignh3rrosbwhk2ruhwcuh7ngfkpeyrs.py":55:4)
#loc66 = loc(callsite(#loc44 at #loc45))
#loc68 = loc(callsite(#loc46 at #loc44))
#loc69 = loc(callsite(#loc47 at #loc44))
#loc70 = loc(callsite(#loc48 at #loc44))
#loc71 = loc(callsite(#loc49 at #loc44))
#loc72 = loc(callsite(#loc52 at #loc53))
#loc74 = loc(callsite(#loc54 at #loc52))
#loc75 = loc(callsite(#loc55 at #loc52))
#loc76 = loc(callsite(#loc56 at #loc52))
#loc77 = loc(callsite(#loc57 at #loc52))
#loc78 = loc(callsite(#loc68 at #loc45))
#loc79 = loc(callsite(#loc69 at #loc45))
#loc80 = loc(callsite(#loc70 at #loc45))
#loc81 = loc(callsite(#loc71 at #loc45))
#loc82 = loc(callsite(#loc74 at #loc53))
#loc83 = loc(callsite(#loc75 at #loc53))
#loc84 = loc(callsite(#loc76 at #loc53))
#loc85 = loc(callsite(#loc77 at #loc53))
