#loc = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0)
#loc1 = loc(unknown)
#loc64 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":71:26)
#loc81 = loc(callsite(#loc1 at #loc64))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_no_training__prelu_kernel_add_cat_mean_mul_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<8x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<8x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.600000e+01> : tensor<8x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999974E-6> : tensor<8x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<-2> : tensor<8x1xi32> loc(#loc1)
    %cst_4 = arith.constant dense<32> : tensor<8x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<2> : tensor<8x1xi64> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<8x16xf32> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<8x1xi32> loc(#loc1)
    %cst_8 = arith.constant dense<16> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_8 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_7 : tensor<8x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_7 : tensor<8x1xi32> loc(#loc11)
    %11 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc12)
    %12 = tt.addptr %11, %9 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc12)
    %13 = tt.load %12, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc13)
    %14 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc14)
    %15 = tt.addptr %14, %9 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc14)
    %16 = tt.load %15, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc15)
    %17 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc16)
    %18 = tt.addptr %17, %9 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc16)
    %19 = tt.load %18, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc17)
    %20 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc18)
    %21 = tt.addptr %20, %9 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc18)
    %22 = tt.load %21, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc19)
    %23 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc20)
    %24 = tt.addptr %23, %9 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc20)
    %25 = tt.load %24, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc21)
    %26 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc22)
    %27 = tt.addptr %26, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc22)
    %28 = tt.load %27, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc23)
    %29 = arith.muli %5, %cst_8 : tensor<8x1xi32> loc(#loc24)
    %30 = tt.broadcast %8 : tensor<1x16xi32> -> tensor<8x16xi32> loc(#loc25)
    %31 = tt.broadcast %29 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc25)
    %32 = arith.addi %30, %31 : tensor<8x16xi32> loc(#loc25)
    %33 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc26)
    %34 = tt.addptr %33, %32 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc26)
    %35 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x16xi1> loc(#loc27)
    %36 = tt.load %34, %35, %cst_6 : tensor<8x16x!tt.ptr<f32>> loc(#loc27)
    %37 = arith.extsi %9 : tensor<8x1xi32> to tensor<8x1xi64> loc(#loc28)
    %38 = arith.cmpi slt, %37, %cst_5 : tensor<8x1xi64> loc(#loc28)
    %39 = arith.muli %9, %cst_8 : tensor<8x1xi32> loc(#loc29)
    %40 = tt.broadcast %39 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc30)
    %41 = arith.addi %30, %40 : tensor<8x16xi32> loc(#loc30)
    %42 = arith.muli %10, %cst_4 : tensor<8x1xi32> loc(#loc31)
    %43 = tt.broadcast %42 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc32)
    %44 = arith.addi %41, %43 : tensor<8x16xi32> loc(#loc32)
    %45 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc33)
    %46 = tt.addptr %45, %44 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc33)
    %47 = arith.andi %38, %6 : tensor<8x1xi1> loc(#loc34)
    %48 = tt.broadcast %47 : tensor<8x1xi1> -> tensor<8x16xi1> loc(#loc35)
    %49 = tt.load %46, %48, %cst_6 : tensor<8x16x!tt.ptr<f32>> loc(#loc35)
    %50 = arith.cmpi sge, %37, %cst_5 : tensor<8x1xi64> loc(#loc36)
    %51 = arith.addi %9, %cst_3 : tensor<8x1xi32> loc(#loc37)
    %52 = arith.muli %51, %cst_8 : tensor<8x1xi32> loc(#loc38)
    %53 = tt.broadcast %52 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc39)
    %54 = arith.addi %30, %53 : tensor<8x16xi32> loc(#loc39)
    %55 = arith.addi %54, %43 : tensor<8x16xi32> loc(#loc40)
    %56 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc41)
    %57 = tt.addptr %56, %55 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc41)
    %58 = arith.andi %50, %6 : tensor<8x1xi1> loc(#loc42)
    %59 = tt.broadcast %58 : tensor<8x1xi1> -> tensor<8x16xi1> loc(#loc43)
    %60 = tt.load %57, %59, %cst_6 : tensor<8x16x!tt.ptr<f32>> loc(#loc43)
    %61 = tt.broadcast %38 : tensor<8x1xi1> -> tensor<8x16xi1> loc(#loc44)
    %62 = arith.select %61, %49, %60 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc44)
    %63 = tt.broadcast %13 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc45)
    %64 = arith.subf %62, %63 : tensor<8x16xf32> loc(#loc45)
    %65 = arith.addf %16, %cst_2 : tensor<8x1xf32> loc(#loc46)
    %66 = tt.extern_elementwise %65 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<8x1xf32>) -> tensor<8x1xf32> loc(#loc47)
    %67 = arith.divf %cst_0, %66 : tensor<8x1xf32> loc(#loc48)
    %68 = tt.broadcast %67 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc49)
    %69 = arith.mulf %64, %68 : tensor<8x16xf32> loc(#loc49)
    %70 = tt.broadcast %19 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc50)
    %71 = arith.mulf %69, %70 : tensor<8x16xf32> loc(#loc50)
    %72 = tt.broadcast %22 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc51)
    %73 = arith.addf %71, %72 : tensor<8x16xf32> loc(#loc51)
    %74 = arith.cmpf ogt, %73, %cst_6 : tensor<8x16xf32> loc(#loc52)
    %75 = tt.broadcast %25 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc53)
    %76 = arith.mulf %75, %73 : tensor<8x16xf32> loc(#loc53)
    %77 = arith.select %74, %73, %76 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc54)
    %78 = arith.subf %cst, %28 : tensor<8x1xf32> loc(#loc76)
    %79 = math.exp %78 : tensor<8x1xf32> loc(#loc77)
    %80 = arith.addf %79, %cst_0 : tensor<8x1xf32> loc(#loc78)
    %81 = arith.divf %cst_0, %80 : tensor<8x1xf32> loc(#loc79)
    %82 = tt.broadcast %81 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc60)
    %83 = arith.mulf %77, %82 : tensor<8x16xf32> loc(#loc60)
    %84 = arith.addf %83, %36 : tensor<8x16xf32> loc(#loc61)
    %85 = arith.select %35, %77, %cst_6 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc62)
    %86 = "tt.reduce"(%85) <{axis = 1 : i32}> ({
    ^bb0(%arg14: f32 loc(callsite(#loc1 at #loc64)), %arg15: f32 loc(callsite(#loc1 at #loc64))):
      %95 = arith.addf %arg14, %arg15 : f32 loc(#loc83)
      tt.reduce.return %95 : f32 loc(#loc80)
    }) : (tensor<8x16xf32>) -> tensor<8xf32> loc(#loc80)
    %87 = tt.expand_dims %86 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc66)
    %88 = arith.divf %87, %cst_1 : tensor<8x1xf32> loc(#loc67)
    %89 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc68)
    %90 = tt.addptr %89, %32 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc68)
    tt.store %90, %62, %35 : tensor<8x16x!tt.ptr<f32>> loc(#loc69)
    %91 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc70)
    %92 = tt.addptr %91, %32 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc70)
    tt.store %92, %84, %35 : tensor<8x16x!tt.ptr<f32>> loc(#loc71)
    gpu.barrier loc(#loc72)
    %93 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc73)
    %94 = tt.addptr %93, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc73)
    tt.store %94, %88, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc74)
    tt.return loc(#loc75)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":23:28)
#loc3 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":23:33)
#loc4 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":24:36)
#loc5 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":24:44)
#loc6 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":24:23)
#loc7 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":25:21)
#loc8 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":26:26)
#loc9 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":26:34)
#loc10 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":29:19)
#loc11 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":31:19)
#loc12 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":33:31)
#loc13 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":33:36)
#loc14 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":34:31)
#loc15 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":34:36)
#loc16 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":35:31)
#loc17 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":35:36)
#loc18 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":36:31)
#loc19 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":36:36)
#loc20 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":37:31)
#loc21 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":37:36)
#loc22 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":38:31)
#loc23 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":38:36)
#loc24 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":39:39)
#loc25 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":39:36)
#loc26 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":39:31)
#loc27 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":39:44)
#loc28 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":44:18)
#loc29 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":45:39)
#loc30 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":45:35)
#loc31 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":45:48)
#loc32 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":45:45)
#loc33 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":45:30)
#loc34 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":45:60)
#loc35 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":45:53)
#loc36 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":46:19)
#loc37 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":49:46)
#loc38 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":49:39)
#loc39 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":49:35)
#loc40 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":49:52)
#loc41 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":49:30)
#loc42 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":49:67)
#loc43 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":49:60)
#loc44 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":50:33)
#loc45 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":51:20)
#loc46 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":53:20)
#loc47 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":54:27)
#loc48 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":56:20)
#loc49 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":59:20)
#loc50 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":60:20)
#loc51 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":61:20)
#loc52 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":63:20)
#loc53 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":64:20)
#loc54 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":65:35)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc56 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":66:23)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc60 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":67:20)
#loc61 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":68:20)
#loc62 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":70:35)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc66 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":71:29)
#loc67 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":73:20)
#loc68 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":74:25)
#loc69 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":74:45)
#loc70 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":75:25)
#loc71 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":75:45)
#loc72 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":76:4)
#loc73 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":77:28)
#loc74 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":77:40)
#loc75 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":77:4)
#loc76 = loc(callsite(#loc55 at #loc56))
#loc77 = loc(callsite(#loc57 at #loc56))
#loc78 = loc(callsite(#loc58 at #loc56))
#loc79 = loc(callsite(#loc59 at #loc56))
#loc80 = loc(callsite(#loc63 at #loc64))
#loc82 = loc(callsite(#loc65 at #loc63))
#loc83 = loc(callsite(#loc82 at #loc64))
