#loc = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":19:0)
#loc1 = loc(unknown)
#loc30 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":43:41)
#loc74 = loc(callsite(#loc1 at #loc30))
module {
  tt.func public @triton_red_fused_add_div_sqrt_sub_var_mean_22(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":19:0)) attributes {noinline = false} {
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c4608_i32 = arith.constant 4608 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e-10> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4.608000e+03> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_4 = arith.constant dense<4608> : tensor<1x2048xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5 = arith.muli %0, %c4608_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x2048xi32> loc(#loc7)
    %7 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc9)
    %9:3 = scf.for %arg5 = %c0_i32 to %c4608_i32 step %c2048_i32 iter_args(%arg6 = %cst_3, %arg7 = %cst_3, %arg8 = %cst_3) -> (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>)  : i32 {
      %25 = tt.splat %arg5 : i32 -> tensor<1x2048xi32> loc(#loc11)
      %26 = arith.addi %25, %4 : tensor<1x2048xi32> loc(#loc11)
      %27 = arith.cmpi slt, %26, %cst_4 : tensor<1x2048xi32> loc(#loc12)
      %28 = arith.addi %26, %6 : tensor<1x2048xi32> loc(#loc7)
      %29 = tt.addptr %7, %28 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc8)
      %30 = arith.andi %27, %8 : tensor<1x2048xi1> loc(#loc9)
      %31 = tt.load %29, %30, %cst_3 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc13)
      %32 = arith.cmpi eq, %arg5, %c0_i32 : i32 loc(#loc14)
      %33:3 = scf.if %32 -> (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) {
        scf.yield %cst_3, %31, %cst_0 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc65)
      } else {
        %37 = arith.subf %31, %arg6 : tensor<1x2048xf32> loc(#loc66)
        %38 = arith.addf %arg8, %cst_0 : tensor<1x2048xf32> loc(#loc67)
        %39 = arith.divf %37, %38 : tensor<1x2048xf32> loc(#loc68)
        %40 = arith.addf %arg6, %39 : tensor<1x2048xf32> loc(#loc69)
        %41 = arith.subf %31, %40 : tensor<1x2048xf32> loc(#loc70)
        %42 = arith.mulf %37, %41 : tensor<1x2048xf32> loc(#loc71)
        %43 = arith.addf %arg7, %42 : tensor<1x2048xf32> loc(#loc72)
        scf.yield %43, %40, %38 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc72)
      } loc(#loc64)
      %34 = arith.select %30, %33#1, %arg6 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc25)
      %35 = arith.select %30, %33#0, %arg7 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc26)
      %36 = arith.select %30, %33#2, %arg8 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc27)
      scf.yield %34, %35, %36 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc28)
    } loc(#loc10)
    %10:3 = "tt.reduce"(%9#0, %9#1, %9#2) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc30)), %arg6: f32 loc(callsite(#loc1 at #loc30)), %arg7: f32 loc(callsite(#loc1 at #loc30)), %arg8: f32 loc(callsite(#loc1 at #loc30)), %arg9: f32 loc(callsite(#loc1 at #loc30)), %arg10: f32 loc(callsite(#loc1 at #loc30))):
      %25 = arith.subf %arg8, %arg5 : f32 loc(#loc87)
      %26 = arith.addf %arg7, %arg10 : f32 loc(#loc88)
      %27 = arith.cmpf oeq, %26, %cst : f32 loc(#loc89)
      %28 = arith.divf %arg10, %26 : f32 loc(#loc90)
      %29 = arith.select %27, %cst, %28 : f32 loc(#loc91)
      %30 = arith.mulf %25, %29 : f32 loc(#loc92)
      %31 = arith.addf %arg5, %30 : f32 loc(#loc93)
      %32 = arith.addf %arg6, %arg9 : f32 loc(#loc94)
      %33 = arith.mulf %25, %25 : f32 loc(#loc95)
      %34 = arith.mulf %33, %arg7 : f32 loc(#loc96)
      %35 = arith.mulf %34, %29 : f32 loc(#loc97)
      %36 = arith.addf %32, %35 : f32 loc(#loc98)
      tt.reduce.return %31, %36, %26 : f32, f32, f32 loc(#loc73)
    }) : (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) -> (tensor<1xf32>, tensor<1xf32>, tensor<1xf32>) loc(#loc73)
    %11 = tt.expand_dims %10#0 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc43)
    %12 = tt.expand_dims %10#1 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc44)
    %13 = arith.divf %12, %cst_2 : tensor<1x1xf32> loc(#loc45)
    %14 = arith.addf %13, %cst_1 : tensor<1x1xf32> loc(#loc46)
    %15 = tt.extern_elementwise %14 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc47)
    gpu.barrier loc(#loc48)
    %16 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc49)
    %17 = tt.splat %16 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc49)
    tt.store %17, %15, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc50)
    %18 = arith.muli %0, %c4608_i32 : i32 loc(#loc51)
    %19 = tt.splat %18 : i32 -> tensor<1x2048xi32> loc(#loc52)
    %20 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc53)
    %21 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc54)
    %22 = tt.broadcast %11 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc55)
    %23 = tt.broadcast %15 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc56)
    %24 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc57)
    scf.for %arg5 = %c0_i32 to %c4608_i32 step %c2048_i32  : i32 {
      %25 = tt.splat %arg5 : i32 -> tensor<1x2048xi32> loc(#loc59)
      %26 = arith.addi %25, %4 : tensor<1x2048xi32> loc(#loc59)
      %27 = arith.cmpi slt, %26, %cst_4 : tensor<1x2048xi32> loc(#loc60)
      %28 = arith.addi %26, %19 : tensor<1x2048xi32> loc(#loc52)
      %29 = tt.addptr %20, %28 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc53)
      %30 = arith.andi %27, %21 : tensor<1x2048xi1> loc(#loc54)
      %31 = tt.load %29, %30, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc61)
      %32 = arith.subf %31, %22 : tensor<1x2048xf32> loc(#loc55)
      %33 = arith.divf %32, %23 : tensor<1x2048xf32> loc(#loc56)
      %34 = tt.addptr %24, %28 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc57)
      tt.store %34, %33, %30 : tensor<1x2048x!tt.ptr<f32>> loc(#loc62)
    } loc(#loc58)
    tt.return loc(#loc63)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":22:28)
#loc3 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":24:21)
#loc4 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":25:25)
#loc5 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":25:33)
#loc6 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":34:44)
#loc7 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":34:39)
#loc8 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":34:34)
#loc9 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":34:57)
#loc10 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":30:36)
#loc11 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":31:27)
#loc12 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":32:25)
#loc13 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":34:49)
#loc14 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":37:62)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc16 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":37:51)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc25 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":39:60)
#loc26 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":40:56)
#loc27 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":41:64)
#loc28 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":41:8)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc43 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":45:20)
#loc44 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":46:20)
#loc45 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":49:18)
#loc46 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":51:18)
#loc47 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":52:26)
#loc48 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":53:4)
#loc49 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":54:28)
#loc50 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":54:39)
#loc51 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":59:45)
#loc52 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":59:40)
#loc53 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":59:35)
#loc54 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":59:58)
#loc55 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":60:24)
#loc56 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":61:24)
#loc57 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":62:29)
#loc58 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":55:36)
#loc59 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":56:27)
#loc60 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":57:25)
#loc61 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":59:50)
#loc62 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":62:51)
#loc63 = loc("inductor_cache/dx/cdxngyaljmqanp3wpok7647nbeh7xolmtagngmsoslii3tyrqhy7.py":55:4)
#loc64 = loc(callsite(#loc15 at #loc16))
#loc65 = loc(callsite(#loc17 at #loc16))
#loc66 = loc(callsite(#loc18 at #loc16))
#loc67 = loc(callsite(#loc19 at #loc16))
#loc68 = loc(callsite(#loc20 at #loc16))
#loc69 = loc(callsite(#loc21 at #loc16))
#loc70 = loc(callsite(#loc22 at #loc16))
#loc71 = loc(callsite(#loc23 at #loc16))
#loc72 = loc(callsite(#loc24 at #loc16))
#loc73 = loc(callsite(#loc29 at #loc30))
#loc75 = loc(callsite(#loc31 at #loc29))
#loc76 = loc(callsite(#loc32 at #loc29))
#loc77 = loc(callsite(#loc33 at #loc29))
#loc78 = loc(callsite(#loc34 at #loc29))
#loc79 = loc(callsite(#loc35 at #loc29))
#loc80 = loc(callsite(#loc36 at #loc29))
#loc81 = loc(callsite(#loc37 at #loc29))
#loc82 = loc(callsite(#loc38 at #loc29))
#loc83 = loc(callsite(#loc39 at #loc29))
#loc84 = loc(callsite(#loc40 at #loc29))
#loc85 = loc(callsite(#loc41 at #loc29))
#loc86 = loc(callsite(#loc42 at #loc29))
#loc87 = loc(callsite(#loc75 at #loc30))
#loc88 = loc(callsite(#loc76 at #loc30))
#loc89 = loc(callsite(#loc77 at #loc30))
#loc90 = loc(callsite(#loc78 at #loc30))
#loc91 = loc(callsite(#loc79 at #loc30))
#loc92 = loc(callsite(#loc80 at #loc30))
#loc93 = loc(callsite(#loc81 at #loc30))
#loc94 = loc(callsite(#loc82 at #loc30))
#loc95 = loc(callsite(#loc83 at #loc30))
#loc96 = loc(callsite(#loc84 at #loc30))
#loc97 = loc(callsite(#loc85 at #loc30))
#loc98 = loc(callsite(#loc86 at #loc30))
