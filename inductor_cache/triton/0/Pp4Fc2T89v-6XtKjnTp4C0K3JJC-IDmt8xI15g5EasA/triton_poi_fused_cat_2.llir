; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 7, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 127, !dbg !12
  %11 = or disjoint i32 %8, %10, !dbg !13
  %12 = icmp slt i32 %11, 512, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %13 = sdiv i32 %.frozen, 16, !dbg !15
  %14 = srem i32 %13, 8, !dbg !16
  %15 = mul i32 %13, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %15, !dbg !17
  %.frozen1 = freeze i32 %11, !dbg !18
  %16 = sdiv i32 %.frozen1, 128, !dbg !18
  %17 = icmp slt i32 %14, 2, !dbg !19
  %18 = mul i32 %16, 128, !dbg !20
  %srem.decomposed = sub i32 %.frozen1, %18, !dbg !20
  %19 = shl nsw i32 %16, 5, !dbg !21
  %20 = add nsw i32 %19, %srem.decomposed, !dbg !22
  %21 = sext i32 %20 to i64, !dbg !23
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !23
  %23 = and i1 %12, %17, !dbg !24
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %23, i32 0, i1 %23) #1, !dbg !25
  %25 = bitcast i32 %24 to float, !dbg !25
  %26 = fsub float 0.000000e+00, %25, !dbg !26
  %27 = fmul float %26, 0x3FF7154760000000, !dbg !30
  %28 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %27) #1, !dbg !30
  %29 = fadd float %28, 1.000000e+00, !dbg !31
  %30 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %29) #1, !dbg !32
  %31 = fmul float %30, %25, !dbg !33
  %32 = and i32 %14, -2, !dbg !34
  %33 = icmp eq i32 %32, 2, !dbg !34
  %34 = shl nsw i32 %14, 4, !dbg !35
  %35 = add nsw i32 %19, %.decomposed, !dbg !35
  %36 = add nsw i32 %35, -32, !dbg !36
  %37 = add nsw i32 %36, %34, !dbg !37
  %38 = sext i32 %37 to i64, !dbg !38
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !38
  %40 = and i1 %12, %33, !dbg !39
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %40, i32 0, i1 %40) #1, !dbg !40
  %42 = bitcast i32 %41 to float, !dbg !40
  %43 = icmp eq i32 %32, 4, !dbg !41
  %44 = add nsw i32 %35, -64, !dbg !42
  %45 = add nsw i32 %44, %34, !dbg !43
  %46 = sext i32 %45 to i64, !dbg !44
  %47 = getelementptr float, ptr addrspace(1) %2, i64 %46, !dbg !44
  %48 = and i1 %12, %43, !dbg !45
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %48, i32 0, i1 %48) #1, !dbg !46
  %50 = bitcast i32 %49 to float, !dbg !46
  %51 = icmp sgt i32 %14, 5, !dbg !47
  %52 = add nsw i32 %35, -96, !dbg !48
  %53 = add nsw i32 %52, %34, !dbg !49
  %54 = sext i32 %53 to i64, !dbg !50
  %55 = getelementptr float, ptr addrspace(1) %3, i64 %54, !dbg !50
  %56 = and i1 %12, %51, !dbg !51
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %56, i32 0, i1 %56) #1, !dbg !52
  %58 = bitcast i32 %57 to float, !dbg !52
  %59 = fsub float 0.000000e+00, %58, !dbg !53
  %60 = fmul float %59, 0x3FF7154760000000, !dbg !55
  %61 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %60) #1, !dbg !55
  %62 = fadd float %61, 1.000000e+00, !dbg !56
  %63 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %62) #1, !dbg !57
  %64 = fmul float %63, %58, !dbg !58
  %65 = select i1 %51, float %64, float 0.000000e+00, !dbg !59
  %66 = select i1 %43, float %50, float %65, !dbg !60
  %67 = select i1 %33, float %42, float %66, !dbg !61
  %68 = select i1 %17, float %31, float %67, !dbg !62
  %69 = sext i32 %11 to i64, !dbg !63
  %70 = getelementptr float, ptr addrspace(1) %4, i64 %69, !dbg !63
  %71 = bitcast float %68 to i32, !dbg !64
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %71, ptr addrspace(1) %70, i1 %12) #1, !dbg !64
  ret void, !dbg !65
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjsvabwkmrklya3xybdnumtxvc7hvsir2hfmsgg54wglcotmklpk.py", directory: "inductor_cache/js")
!4 = !{ptr @triton_poi_fused_cat_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_2", linkageName: "triton_poi_fused_cat_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 48, scope: !7)
!22 = !DILocation(line: 33, column: 45, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 60, scope: !7)
!25 = !DILocation(line: 33, column: 53, scope: !7)
!26 = !DILocation(line: 47, column: 30, scope: !27, inlinedAt: !29)
!27 = distinct !DILexicalBlockFile(scope: !7, file: !28, discriminator: 0)
!28 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!29 = !DILocation(line: 34, column: 22, scope: !7)
!30 = !DILocation(line: 47, column: 29, scope: !27, inlinedAt: !29)
!31 = !DILocation(line: 47, column: 20, scope: !27, inlinedAt: !29)
!32 = !DILocation(line: 47, column: 16, scope: !27, inlinedAt: !29)
!33 = !DILocation(line: 35, column: 18, scope: !7)
!34 = !DILocation(line: 41, column: 20, scope: !7)
!35 = !DILocation(line: 42, column: 40, scope: !7)
!36 = !DILocation(line: 42, column: 36, scope: !7)
!37 = !DILocation(line: 42, column: 53, scope: !7)
!38 = !DILocation(line: 42, column: 31, scope: !7)
!39 = !DILocation(line: 42, column: 69, scope: !7)
!40 = !DILocation(line: 42, column: 61, scope: !7)
!41 = !DILocation(line: 46, column: 20, scope: !7)
!42 = !DILocation(line: 47, column: 36, scope: !7)
!43 = !DILocation(line: 47, column: 53, scope: !7)
!44 = !DILocation(line: 47, column: 31, scope: !7)
!45 = !DILocation(line: 47, column: 69, scope: !7)
!46 = !DILocation(line: 47, column: 61, scope: !7)
!47 = !DILocation(line: 48, column: 20, scope: !7)
!48 = !DILocation(line: 51, column: 36, scope: !7)
!49 = !DILocation(line: 51, column: 53, scope: !7)
!50 = !DILocation(line: 51, column: 31, scope: !7)
!51 = !DILocation(line: 51, column: 69, scope: !7)
!52 = !DILocation(line: 51, column: 61, scope: !7)
!53 = !DILocation(line: 47, column: 30, scope: !27, inlinedAt: !54)
!54 = !DILocation(line: 52, column: 23, scope: !7)
!55 = !DILocation(line: 47, column: 29, scope: !27, inlinedAt: !54)
!56 = !DILocation(line: 47, column: 20, scope: !27, inlinedAt: !54)
!57 = !DILocation(line: 47, column: 16, scope: !27, inlinedAt: !54)
!58 = !DILocation(line: 53, column: 20, scope: !7)
!59 = !DILocation(line: 55, column: 35, scope: !7)
!60 = !DILocation(line: 56, column: 35, scope: !7)
!61 = !DILocation(line: 57, column: 35, scope: !7)
!62 = !DILocation(line: 0, scope: !7)
!63 = !DILocation(line: 59, column: 25, scope: !7)
!64 = !DILocation(line: 59, column: 37, scope: !7)
!65 = !DILocation(line: 59, column: 4, scope: !7)
