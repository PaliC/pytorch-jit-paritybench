; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_div_exp_log_mul_pow_sub_sum_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %7 = shl i32 %6, 2, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 3, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 4, !dbg !14
  %12 = sext i32 %10 to i64, !dbg !15
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !15
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %13, i1 %11) #2, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #2, !dbg !17
  %16 = bitcast i32 %15 to float, !dbg !17
  %17 = getelementptr float, ptr addrspace(1) %2, i64 %12, !dbg !18
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %11) #2, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #2, !dbg !20
  %20 = getelementptr i8, ptr addrspace(1) %2, i64 4, !dbg !21
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #2, !dbg !22
  %22 = getelementptr i8, ptr addrspace(1) %2, i64 8, !dbg !23
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 true) #2, !dbg !24
  %24 = getelementptr i8, ptr addrspace(1) %2, i64 12, !dbg !25
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #2, !dbg !26
  %26 = fmul float %16, 0x3FF7154760000000, !dbg !27
  %27 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %26) #2, !dbg !27
  %28 = fadd float %27, 1.000000e+00, !dbg !28
  %29 = fcmp olt float %28, 0x3810000000000000, !dbg !29
  %30 = fmul float %28, 0x4160000000000000, !dbg !29
  %.02.i = select i1 %29, float %30, float %28, !dbg !29
  %i.i.0.i = select i1 %29, float -2.300000e+01, float 0.000000e+00, !dbg !29
  %31 = bitcast float %.02.i to i32, !dbg !29
  %32 = add i32 %31, -1059760811, !dbg !29
  %33 = and i32 %32, -8388608, !dbg !29
  %34 = sub i32 %31, %33, !dbg !29
  %35 = bitcast i32 %34 to float, !dbg !29
  %36 = sitofp i32 %33 to float, !dbg !29
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not.i = icmp eq i32 %37, 0, !dbg !29
  %38 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %36, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !29
  %39 = tail call float @llvm.nvvm.fma.rn.f(float %36, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !29
  %.08.i = select i1 %.not.i, float %39, float %38, !dbg !29
  %40 = fadd float %35, -1.000000e+00, !dbg !29
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not1.i = icmp eq i32 %41, 0, !dbg !29
  %42 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %40, float 0x3FC2073EC0000000) #2, !dbg !29
  %43 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %40, float 0x3FC2073EC0000000) #2, !dbg !29
  %.010.i = select i1 %.not1.i, float %43, float %42, !dbg !29
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not2.i = icmp eq i32 %44, 0, !dbg !29
  %45 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %40, float 0xBFBF19B980000000) #2, !dbg !29
  %46 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %40, float 0xBFBF19B980000000) #2, !dbg !29
  %.011.i = select i1 %.not2.i, float %46, float %45, !dbg !29
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not3.i = icmp eq i32 %47, 0, !dbg !29
  %48 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %40, float 0x3FC1E52AA0000000) #2, !dbg !29
  %49 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %40, float 0x3FC1E52AA0000000) #2, !dbg !29
  %.012.i = select i1 %.not3.i, float %49, float %48, !dbg !29
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not4.i = icmp eq i32 %50, 0, !dbg !29
  %51 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %40, float 0xBFC55B1720000000) #2, !dbg !29
  %52 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %40, float 0xBFC55B1720000000) #2, !dbg !29
  %.09.i = select i1 %.not4.i, float %52, float %51, !dbg !29
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not5.i = icmp eq i32 %53, 0, !dbg !29
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %40, float 0x3FC99DA160000000) #2, !dbg !29
  %55 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %40, float 0x3FC99DA160000000) #2, !dbg !29
  %.05.i = select i1 %.not5.i, float %55, float %54, !dbg !29
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not6.i = icmp eq i32 %56, 0, !dbg !29
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %40, float 0xBFCFFFE440000000) #2, !dbg !29
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %40, float 0xBFCFFFE440000000) #2, !dbg !29
  %.01.i = select i1 %.not6.i, float %58, float %57, !dbg !29
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not7.i = icmp eq i32 %59, 0, !dbg !29
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %40, float 0x3FD5554F00000000) #2, !dbg !29
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %40, float 0x3FD5554F00000000) #2, !dbg !29
  %.0.i = select i1 %.not7.i, float %61, float %60, !dbg !29
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not8.i = icmp eq i32 %62, 0, !dbg !29
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %40, float -5.000000e-01) #2, !dbg !29
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %40, float -5.000000e-01) #2, !dbg !29
  %.07.i = select i1 %.not8.i, float %64, float %63, !dbg !29
  %65 = fmul float %40, %.07.i, !dbg !29
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not9.i = icmp eq i32 %66, 0, !dbg !29
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %65, float %40, float %40) #2, !dbg !29
  %68 = tail call float @llvm.nvvm.fma.rn.f(float %65, float %40, float %40) #2, !dbg !29
  %.06.i = select i1 %.not9.i, float %68, float %67, !dbg !29
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not10.i = icmp eq i32 %69, 0, !dbg !29
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !29
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !29
  %.04.i = select i1 %.not10.i, float %71, float %70, !dbg !29
  %72 = icmp ugt i32 %31, 2139095039, !dbg !29
  br i1 %72, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !29

__nv_fmaf_rn.exit.i.i:                            ; preds = %5
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not11.i = icmp eq i32 %73, 0, !dbg !29
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !29
  %75 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !29
  %.03.i = select i1 %.not11.i, float %75, float %74, !dbg !29
  br label %__nv_logf.exit, !dbg !29

__nv_logf.exit:                                   ; preds = %5, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %5 ], !dbg !29
  %76 = bitcast i32 %25 to float, !dbg !26
  %77 = bitcast i32 %23 to float, !dbg !24
  %78 = bitcast i32 %21 to float, !dbg !22
  %79 = bitcast i32 %19 to float, !dbg !20
  %80 = bitcast i32 %18 to float, !dbg !19
  %81 = bitcast i32 %14 to float, !dbg !16
  %82 = and i32 %8, 28, !dbg !12
  %83 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !29
  %84 = fadd float %r.i.0.i, -1.000000e+00, !dbg !30
  %85 = select i1 %83, float 0xFFF0000000000000, float %84, !dbg !29
  %86 = fsub float %85, %16, !dbg !31
  %87 = fmul float %86, %80, !dbg !32
  %88 = fmul float %79, %79, !dbg !33
  %89 = fmul float %78, %78, !dbg !34
  %90 = fadd float %88, %89, !dbg !35
  %91 = fmul float %77, %77, !dbg !36
  %92 = fadd float %90, %91, !dbg !37
  %93 = fmul float %76, %76, !dbg !38
  %94 = fadd float %92, %93, !dbg !39
  %95 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %87, float %94) #2, !dbg !40
  %96 = fadd float %95, %81, !dbg !41
  %97 = getelementptr float, ptr addrspace(1) %3, i64 %12, !dbg !42
  %98 = icmp eq i32 %82, 0, !dbg !43
  %99 = bitcast float %96 to i32, !dbg !43
  %100 = and i1 %98, %11, !dbg !43
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %99, ptr addrspace(1) %97, i1 %100) #2, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c5gitnynignj6nsym4w2zsfuizentrqj7c7o4s64xbiq3el5z3ge.py", directory: "inductor_cache/5g")
!4 = !{ptr @triton_poi_fused_add_div_exp_log_mul_pow_sub_sum_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_exp_log_mul_pow_sub_sum_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_exp_log_mul_pow_sub_sum_1", linkageName: "triton_poi_fused_add_div_exp_log_mul_pow_sub_sum_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 29, column: 20, scope: !7)
!21 = !DILocation(line: 31, column: 31, scope: !7)
!22 = !DILocation(line: 31, column: 20, scope: !7)
!23 = !DILocation(line: 33, column: 31, scope: !7)
!24 = !DILocation(line: 33, column: 20, scope: !7)
!25 = !DILocation(line: 35, column: 31, scope: !7)
!26 = !DILocation(line: 35, column: 20, scope: !7)
!27 = !DILocation(line: 37, column: 23, scope: !7)
!28 = !DILocation(line: 39, column: 18, scope: !7)
!29 = !DILocation(line: 40, column: 23, scope: !7)
!30 = !DILocation(line: 41, column: 18, scope: !7)
!31 = !DILocation(line: 42, column: 18, scope: !7)
!32 = !DILocation(line: 43, column: 19, scope: !7)
!33 = !DILocation(line: 44, column: 20, scope: !7)
!34 = !DILocation(line: 45, column: 20, scope: !7)
!35 = !DILocation(line: 46, column: 20, scope: !7)
!36 = !DILocation(line: 47, column: 20, scope: !7)
!37 = !DILocation(line: 48, column: 20, scope: !7)
!38 = !DILocation(line: 49, column: 20, scope: !7)
!39 = !DILocation(line: 50, column: 20, scope: !7)
!40 = !DILocation(line: 51, column: 20, scope: !7)
!41 = !DILocation(line: 52, column: 19, scope: !7)
!42 = !DILocation(line: 53, column: 25, scope: !7)
!43 = !DILocation(line: 53, column: 37, scope: !7)
!44 = !DILocation(line: 53, column: 4, scope: !7)
