//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__unsafe_index_add_4 // -- Begin function triton_poi_fused__unsafe_index_add_4
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused__unsafe_index_add_4
.visible .entry triton_poi_fused__unsafe_index_add_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_4_param_3,
	.param .u32 triton_poi_fused__unsafe_index_add_4_param_4,
	.param .u32 triton_poi_fused__unsafe_index_add_4_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<60>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<33>;
	.loc	1 19 0                          // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_poi_fused__unsafe_index_add_4_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused__unsafe_index_add_4_param_1];
$L__tmp0:
	.loc	1 22 28                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:22:33
	shl.b32 	%r13, %r1, 4;
	ld.param.u64 	%rd14, [triton_poi_fused__unsafe_index_add_4_param_2];
	ld.param.u64 	%rd15, [triton_poi_fused__unsafe_index_add_4_param_3];
	.loc	1 23 44                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:23:44
	mov.u32 	%r14, %tid.x;
	bfe.u32 	%r15, %r14, 3, 4;
	shl.b32 	%r16, %r14, 1;
	and.b32  	%r17, %r16, 14;
	.loc	1 23 23                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:23:23
	or.b32  	%r18, %r13, %r15;
	or.b32  	%r19, %r13, %r17;
	.loc	1 24 21                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:24:21
	setp.lt.s32 	%p10, %r18, 512;
	setp.lt.s32 	%p11, %r19, 512;
	.loc	1 25 28                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:25:33
	shl.b32 	%r20, %r2, 4;
	.loc	1 26 23                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:26:23
	or.b32  	%r21, %r20, %r15;
	or.b32  	%r22, %r20, %r17;
	.loc	1 27 21                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:27:21
	setp.lt.s32 	%p1, %r21, 16;
	setp.lt.s32 	%p12, %r22, 16;
	.loc	1 28 19                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:28:19
	shr.s32 	%r24, %r21, 31;
	shr.u32 	%r25, %r24, 30;
	add.s32 	%r26, %r21, %r25;
	shr.s32 	%r27, %r26, 2;
	.loc	1 29 19                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:29:19
	and.b32  	%r28, %r26, -4;
	sub.s32 	%r29, %r21, %r28;
	.loc	1 31 19                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:31:19
	shr.s32 	%r31, %r19, 31;
	shr.u32 	%r32, %r31, 25;
	add.s32 	%r33, %r19, %r32;
	shr.s32 	%r34, %r33, 7;
	.loc	1 30 19                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:30:19
	and.b32  	%r35, %r33, -128;
	sub.s32 	%r36, %r19, %r35;
	.loc	1 34 30                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:34:30
	mul.wide.s32 	%rd16, %r27, 8;
	add.s64 	%rd2, %rd12, %rd16;
	.loc	1 34 35                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:34:35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:35:30
	mul.wide.s32 	%rd17, %r29, 8;
	add.s64 	%rd6, %rd12, %rd17;
	.loc	1 35 35                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:35:35
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 39                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:36:39
	shl.b32 	%r37, %r18, 4;
	.loc	1 36 36                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:36:36
	add.s32 	%r38, %r22, %r37;
	.loc	1 36 31                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:36:31
	mul.wide.s32 	%rd18, %r38, 4;
	add.s64 	%rd9, %rd14, %rd18;
	.loc	1 36 52                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:36:52
	and.pred  	%p5, %p10, %p12;
	and.pred  	%p8, %p11, %p1;
	.loc	1 36 44                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:36:44
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r8, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r6, %r8 }, [ %rd9 + 0 ];
	// end inline asm
	shl.b32 	%r39, %r14, 5;
	and.b32  	%r40, %r39, 224;
	or.b32  	%r41, %r40, %r15;
	shr.u32 	%r42, %r40, 1;
	mov.u32 	%r43, global_smem;
	add.s32 	%r44, %r43, %r42;
	shl.b32 	%r45, %r41, 2;
	add.s32 	%r5, %r44, %r45;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	or.b32  	%r46, %r40, 16;
	shr.u32 	%r47, %r46, 1;
	add.s32 	%r48, %r43, %r47;
	add.s32 	%r49, %r48, %r45;
	add.s32 	%r7, %r49, 64;
	// begin inline asm
	@%p6 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r50, %r14, 120;
	add.s32 	%r51, %r43, %r50;
	shl.b32 	%r52, %r14, 3;
	and.b32  	%r53, %r52, 1016;
	add.s32 	%r54, %r51, %r53;
	ld.shared.v2.f32 	{%f1, %f2}, [%r54];
	.loc	1 40 32                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:40:32
	shr.u64 	%rd19, %rd3, 57;
	and.b64  	%rd20, %rd19, 64;
	add.s64 	%rd21, %rd20, %rd3;
	.loc	1 43 32                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:43:32
	shr.u64 	%rd22, %rd7, 57;
	and.b64  	%rd23, %rd22, 64;
	add.s64 	%rd24, %rd23, %rd7;
	.loc	1 44 65                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:44:65
	shl.b32 	%r55, %r34, 19;
	.loc	1 44 30                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:44:30
	shl.b64 	%rd25, %rd24, 9;
	add.s64 	%rd26, %rd13, %rd25;
	mul.wide.s32 	%rd27, %r36, 4;
	add.s64 	%rd28, %rd26, %rd27;
	shl.b64 	%rd29, %rd21, 15;
	add.s64 	%rd30, %rd28, %rd29;
	mul.wide.s32 	%rd31, %r55, 4;
	add.s64 	%rd10, %rd30, %rd31;
	.loc	1 44 70                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:44:70
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p8 ld.global.v2.b32 { %r9, %r10 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r9;
	mov.b32 	%f4, %r10;
	.loc	1 45 19                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:45:19
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 46 34                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:46:34
	shl.b32 	%r56, %r21, 7;
	.loc	1 46 30                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:46:30
	add.s32 	%r57, %r56, %r36;
	.loc	1 46 44                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:46:44
	shl.b32 	%r58, %r34, 11;
	.loc	1 46 39                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:46:39
	add.s32 	%r59, %r57, %r58;
	.loc	1 46 25                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:46:25
	mul.wide.s32 	%rd32, %r59, 4;
	add.s64 	%rd11, %rd15, %rd32;
	.loc	1 46 56                         // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:46:56
	mov.b32 	%r11, %f5;
	mov.b32 	%r12, %f6;
	// begin inline asm
	@%p8 st.global.v2.b32 [ %rd11 + 0 ], { %r11, %r12 };
	// end inline asm
	.loc	1 46 4                          // cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py:46:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/v5/cv5lqiyv2o7e3u2pkp4yb7derdn4hbss36shhmvaympeuv4wlue5.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 53
.b8 108
.b8 113
.b8 105
.b8 121
.b8 118
.b8 50
.b8 111
.b8 55
.b8 101
.b8 51
.b8 117
.b8 50
.b8 112
.b8 107
.b8 112
.b8 52
.b8 121
.b8 98
.b8 55
.b8 100
.b8 101
.b8 114
.b8 100
.b8 110
.b8 52
.b8 104
.b8 98
.b8 115
.b8 115
.b8 51
.b8 54
.b8 115
.b8 104
.b8 104
.b8 109
.b8 118
.b8 97
.b8 121
.b8 109
.b8 112
.b8 101
.b8 117
.b8 118
.b8 52
.b8 119
.b8 108
.b8 117
.b8 101
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 53
.b8 0
	}
	.section	.debug_macinfo	{	}
