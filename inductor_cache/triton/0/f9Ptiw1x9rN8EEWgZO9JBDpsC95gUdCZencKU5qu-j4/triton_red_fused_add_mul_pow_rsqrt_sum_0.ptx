//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_add_mul_pow_rsqrt_sum_0 // -- Begin function triton_red_fused_add_mul_pow_rsqrt_sum_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_add_mul_pow_rsqrt_sum_0
.visible .entry triton_red_fused_add_mul_pow_rsqrt_sum_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_3,
	.param .u32 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_4,
	.param .u32 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_5
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<114>;
	.reg .b32 	%r<350>;
	.reg .f32 	%f<130>;
	.reg .b64 	%rd<98>;
	.loc	1 19 0                          // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:19:0

// %bb.0:
	ld.param.u64 	%rd28, [triton_red_fused_add_mul_pow_rsqrt_sum_0_param_3];
	ld.param.u64 	%rd27, [triton_red_fused_add_mul_pow_rsqrt_sum_0_param_2];
	ld.param.u64 	%rd26, [triton_red_fused_add_mul_pow_rsqrt_sum_0_param_0];
	ld.param.u64 	%rd30, [triton_red_fused_add_mul_pow_rsqrt_sum_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:22:28
	// begin inline asm
	mov.u32 %r38, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:22:33
	shl.b32 	%r39, %r38, 6;
	.loc	1 23 44                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:23:44
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 63;
	shr.u32 	%r40, %r2, 4;
	bfe.u32 	%r4, %r2, 4, 5;
	.loc	1 23 23                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:23:23
	or.b32  	%r5, %r39, %r3;
	or.b32  	%r6, %r39, %r4;
	or.b32  	%r7, %r6, 32;
	.loc	1 24 21                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:24:21
	setp.lt.s32 	%p80, %r5, 384;
	.loc	1 25 33                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:25:33
	shr.u32 	%r8, %r2, 6;
	bfe.u32 	%r41, %r2, 6, 1;
	and.b32  	%r42, %r8, 2;
	or.b32  	%r43, %r41, %r42;
	and.b32  	%r44, %r8, 4;
	or.b32  	%r9, %r43, %r44;
	or.b32  	%r45, %r9, 32;
	or.b32  	%r46, %r9, 40;
	or.b32  	%r47, %r9, 48;
	or.b32  	%r48, %r9, 56;
	shl.b32 	%r10, %r2, 2;
	and.b32  	%r49, %r10, 60;
	.loc	1 26 19                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:26:19
	mul.hi.s32 	%r50, %r6, 715827883;
	shr.u32 	%r51, %r50, 31;
	shr.u32 	%r52, %r50, 4;
	add.s32 	%r53, %r52, %r51;
	mul.lo.s32 	%r54, %r53, 96;
	sub.s32 	%r55, %r6, %r54;
	mul.hi.s32 	%r56, %r7, 715827883;
	shr.u32 	%r57, %r56, 31;
	shr.u32 	%r58, %r56, 4;
	add.s32 	%r59, %r58, %r57;
	mul.lo.s32 	%r60, %r59, 96;
	sub.s32 	%r61, %r7, %r60;
	.loc	1 35 43                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:35:43
	mul.lo.s32 	%r62, %r55, 864;
	mul.lo.s32 	%r63, %r61, 864;
	.loc	1 36 42                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:36:42
	mul.hi.s32 	%r64, %r5, 715827883;
	shr.u32 	%r65, %r64, 31;
	shr.u32 	%r66, %r64, 4;
	add.s32 	%r67, %r66, %r65;
	mul.lo.s32 	%r11, %r67, 96;
	shl.b32 	%r68, %r2, 8;
	and.b32  	%r69, %r68, 3840;
	or.b32  	%r70, %r69, %r4;
	and.b32  	%r71, %r2, 511;
	shr.u32 	%r72, %r69, 4;
	mov.u32 	%r73, global_smem;
	add.s32 	%r74, %r73, %r72;
	shl.b32 	%r75, %r70, 2;
	add.s32 	%r258, %r74, %r75;
	or.b32  	%r76, %r69, 64;
	shr.u32 	%r77, %r76, 4;
	add.s32 	%r78, %r73, %r77;
	add.s32 	%r79, %r78, %r75;
	add.s32 	%r260, %r79, 256;
	or.b32  	%r80, %r69, 128;
	shr.u32 	%r81, %r80, 4;
	add.s32 	%r82, %r73, %r81;
	add.s32 	%r83, %r82, %r75;
	add.s32 	%r262, %r83, 512;
	or.b32  	%r84, %r69, 192;
	shr.u32 	%r85, %r84, 4;
	add.s32 	%r86, %r73, %r85;
	add.s32 	%r87, %r86, %r75;
	add.s32 	%r264, %r87, 768;
	add.s32 	%r266, %r258, 128;
	add.s32 	%r268, %r79, 384;
	add.s32 	%r270, %r83, 640;
	add.s32 	%r272, %r87, 896;
	and.b32  	%r88, %r40, 28;
	add.s32 	%r89, %r73, %r88;
	shl.b32 	%r90, %r71, 2;
	add.s32 	%r20, %r89, %r90;
	or.b32  	%r91, %r71, 512;
	shr.u32 	%r92, %r91, 4;
	and.b32  	%r93, %r92, 60;
	add.s32 	%r94, %r73, %r93;
	add.s32 	%r21, %r94, %r90;
	or.b32  	%r95, %r71, 1024;
	shr.u32 	%r96, %r95, 4;
	and.b32  	%r97, %r96, 92;
	add.s32 	%r98, %r73, %r97;
	add.s32 	%r22, %r98, %r90;
	or.b32  	%r99, %r71, 1536;
	shr.u32 	%r100, %r99, 4;
	and.b32  	%r101, %r100, 124;
	add.s32 	%r102, %r73, %r101;
	add.s32 	%r23, %r102, %r90;
	or.b32  	%r103, %r71, 2048;
	shr.u32 	%r104, %r103, 4;
	and.b32  	%r105, %r104, 156;
	add.s32 	%r106, %r73, %r105;
	add.s32 	%r24, %r106, %r90;
	or.b32  	%r107, %r71, 2560;
	shr.u32 	%r108, %r107, 4;
	and.b32  	%r109, %r108, 188;
	add.s32 	%r110, %r73, %r109;
	add.s32 	%r25, %r110, %r90;
	or.b32  	%r111, %r71, 3072;
	shr.u32 	%r112, %r111, 4;
	and.b32  	%r113, %r112, 220;
	add.s32 	%r114, %r73, %r113;
	add.s32 	%r26, %r114, %r90;
	or.b32  	%r115, %r71, 3584;
	shr.u32 	%r116, %r115, 4;
	and.b32  	%r117, %r116, 252;
	add.s32 	%r118, %r73, %r117;
	add.s32 	%r27, %r118, %r90;
	.loc	1 30 36                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:30:36
	cvt.u64.u32 	%rd1, %r49;
	cvt.u64.u32 	%rd5, %r48;
	cvt.u64.u32 	%rd4, %r47;
	cvt.u64.u32 	%rd3, %r46;
	cvt.u64.u32 	%rd2, %r45;
	or.b32  	%r119, %r44, %r42;
	or.b32  	%r120, %r119, %r41;
	cvt.u64.u32 	%rd6, %r120;
	and.b32  	%r121, %r2, 15;
	mul.wide.u32 	%rd31, %r121, 16;
	mul.wide.s32 	%rd32, %r63, 4;
	add.s64 	%rd33, %rd31, %rd32;
	add.s64 	%rd96, %rd30, %rd33;
	mul.wide.s32 	%rd34, %r62, 4;
	add.s64 	%rd35, %rd31, %rd34;
	add.s64 	%rd95, %rd30, %rd35;
	mov.f32 	%f122, 0f00000000;
	mov.u64 	%rd94, -64;
	mov.u64 	%rd92, %rd95;
	mov.u64 	%rd93, %rd96;
	mov.f32 	%f123, %f122;
	mov.f32 	%f124, %f122;
	mov.f32 	%f125, %f122;
	mov.f32 	%f126, %f122;
	mov.f32 	%f127, %f122;
	mov.f32 	%f128, %f122;
	mov.f32 	%f129, %f122;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 24 21                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:24:21
	setp.lt.s32 	%p47, %r7, 384;
	setp.lt.s32 	%p48, %r6, 384;
	.loc	1 31 27                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:31:27
	add.s64 	%rd12, %rd94, 64;
	or.b64  	%rd46, %rd12, %rd5;
	cvt.u32.u64 	%r170, %rd46;
	or.b64  	%rd47, %rd12, %rd4;
	cvt.u32.u64 	%r171, %rd47;
	or.b64  	%rd48, %rd12, %rd3;
	cvt.u32.u64 	%r172, %rd48;
	or.b64  	%rd49, %rd12, %rd2;
	cvt.u32.u64 	%r173, %rd49;
	.loc	1 32 25                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:32:25
	add.s64 	%rd50, %rd12, %rd1;
	setp.lt.u64 	%p49, %rd50, 864;
	.loc	1 34 23                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:34:23
	add.s64 	%rd51, %rd6, %rd94;
	cvt.u32.u64 	%r174, %rd51;
	add.s32 	%r175, %r174, 64;
	mul.hi.u32 	%r176, %r175, 954437177;
	shr.u32 	%r177, %r176, 1;
	add.s32 	%r178, %r174, 72;
	mul.hi.u32 	%r179, %r178, 954437177;
	shr.u32 	%r180, %r179, 1;
	add.s32 	%r181, %r174, 80;
	mul.hi.u32 	%r182, %r181, 954437177;
	shr.u32 	%r183, %r182, 1;
	add.s32 	%r184, %r174, 88;
	mul.hi.u32 	%r185, %r184, 954437177;
	shr.u32 	%r186, %r185, 1;
	mul.hi.u32 	%r187, %r173, 954437177;
	shr.u32 	%r188, %r187, 1;
	mul.hi.u32 	%r189, %r172, 954437177;
	shr.u32 	%r190, %r189, 1;
	mul.hi.u32 	%r191, %r171, 954437177;
	shr.u32 	%r192, %r191, 1;
	mul.hi.u32 	%r193, %r170, 954437177;
	shr.u32 	%r194, %r193, 1;
	.loc	1 35 56                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:35:56
	and.pred  	%p13, %p48, %p49;
	and.pred  	%p18, %p47, %p49;
	mov.b32 	%r246, 0;
	.loc	1 35 48                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:35:48
	// begin inline asm
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	mov.u32 %r125, 0x0;
	@%p13 ld.global.L1::evict_last.v4.b32 { %r122, %r123, %r124, %r125 }, [ %rd92 + 0 ];
	@!%p13 mov.u32 %r122, %r246;
	@!%p13 mov.u32 %r123, %r246;
	@!%p13 mov.u32 %r124, %r246;
	@!%p13 mov.u32 %r125, %r246;
	// end inline asm
	// begin inline asm
	mov.u32 %r130, 0x0;
	mov.u32 %r131, 0x0;
	mov.u32 %r132, 0x0;
	mov.u32 %r133, 0x0;
	@%p18 ld.global.L1::evict_last.v4.b32 { %r130, %r131, %r132, %r133 }, [ %rd93 + 0 ];
	@!%p18 mov.u32 %r130, %r246;
	@!%p18 mov.u32 %r131, %r246;
	@!%p18 mov.u32 %r132, %r246;
	@!%p18 mov.u32 %r133, %r246;
	// end inline asm
	bar.sync 	0;
	mov.pred 	%p72, -1;
	// begin inline asm
	@%p72 st.shared.b32 [ %r258 + 0 ], %r122;
	// end inline asm
	// begin inline asm
	@%p72 st.shared.b32 [ %r260 + 0 ], %r123;
	// end inline asm
	// begin inline asm
	@%p72 st.shared.b32 [ %r262 + 0 ], %r124;
	// end inline asm
	// begin inline asm
	@%p72 st.shared.b32 [ %r264 + 0 ], %r125;
	// end inline asm
	// begin inline asm
	@%p72 st.shared.b32 [ %r266 + 0 ], %r130;
	// end inline asm
	// begin inline asm
	@%p72 st.shared.b32 [ %r268 + 0 ], %r131;
	// end inline asm
	// begin inline asm
	@%p72 st.shared.b32 [ %r270 + 0 ], %r132;
	// end inline asm
	// begin inline asm
	@%p72 st.shared.b32 [ %r272 + 0 ], %r133;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f26, [%r20];
	ld.shared.f32 	%f27, [%r21+2048];
	ld.shared.f32 	%f28, [%r22+4096];
	ld.shared.f32 	%f29, [%r23+6144];
	ld.shared.f32 	%f30, [%r24+8192];
	ld.shared.f32 	%f31, [%r25+10240];
	ld.shared.f32 	%f32, [%r26+12288];
	ld.shared.f32 	%f33, [%r27+14336];
	.loc	1 36 39                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:36:39
	add.s32 	%r195, %r177, %r11;
	add.s32 	%r196, %r180, %r11;
	add.s32 	%r197, %r183, %r11;
	add.s32 	%r198, %r186, %r11;
	add.s32 	%r199, %r188, %r11;
	add.s32 	%r200, %r190, %r11;
	add.s32 	%r201, %r192, %r11;
	add.s32 	%r202, %r194, %r11;
	.loc	1 36 34                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:36:34
	mul.wide.s32 	%rd52, %r195, 4;
	add.s64 	%rd38, %rd27, %rd52;
	mul.wide.s32 	%rd53, %r196, 4;
	add.s64 	%rd39, %rd27, %rd53;
	mul.wide.s32 	%rd54, %r197, 4;
	add.s64 	%rd40, %rd27, %rd54;
	mul.wide.s32 	%rd55, %r198, 4;
	add.s64 	%rd41, %rd27, %rd55;
	mul.wide.s32 	%rd56, %r199, 4;
	add.s64 	%rd42, %rd27, %rd56;
	mul.wide.s32 	%rd57, %r200, 4;
	add.s64 	%rd43, %rd27, %rd57;
	mul.wide.s32 	%rd58, %r201, 4;
	add.s64 	%rd44, %rd27, %rd58;
	mul.wide.s32 	%rd59, %r202, 4;
	add.s64 	%rd45, %rd27, %rd59;
	.loc	1 36 47                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:36:47
	// begin inline asm
	mov.u32 %r154, 0x0;
	@%p80 ld.global.L1::evict_last.b32 { %r154 }, [ %rd38 + 0 ];
	@!%p80 mov.u32 %r154, %r246;
	// end inline asm
	// begin inline asm
	mov.u32 %r156, 0x0;
	@%p80 ld.global.L1::evict_last.b32 { %r156 }, [ %rd39 + 0 ];
	@!%p80 mov.u32 %r156, %r246;
	// end inline asm
	// begin inline asm
	mov.u32 %r158, 0x0;
	@%p80 ld.global.L1::evict_last.b32 { %r158 }, [ %rd40 + 0 ];
	@!%p80 mov.u32 %r158, %r246;
	// end inline asm
	// begin inline asm
	mov.u32 %r160, 0x0;
	@%p80 ld.global.L1::evict_last.b32 { %r160 }, [ %rd41 + 0 ];
	@!%p80 mov.u32 %r160, %r246;
	// end inline asm
	.loc	1 32 25                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:32:25
	setp.lt.u64 	%p50, %rd49, 864;
	setp.lt.u64 	%p51, %rd48, 864;
	setp.lt.u64 	%p52, %rd47, 864;
	setp.lt.u64 	%p53, %rd46, 864;
	.loc	1 35 56                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:35:56
	and.pred  	%p46, %p80, %p53;
	and.pred  	%p44, %p80, %p52;
	and.pred  	%p42, %p80, %p51;
	and.pred  	%p40, %p80, %p50;
	.loc	1 36 47                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:36:47
	// begin inline asm
	mov.u32 %r162, 0x0;
	@%p40 ld.global.L1::evict_last.b32 { %r162 }, [ %rd42 + 0 ];
	@!%p40 mov.u32 %r162, %r246;
	// end inline asm
	// begin inline asm
	mov.u32 %r164, 0x0;
	@%p42 ld.global.L1::evict_last.b32 { %r164 }, [ %rd43 + 0 ];
	@!%p42 mov.u32 %r164, %r246;
	// end inline asm
	// begin inline asm
	mov.u32 %r166, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r166 }, [ %rd44 + 0 ];
	@!%p44 mov.u32 %r166, %r246;
	// end inline asm
	// begin inline asm
	mov.u32 %r168, 0x0;
	@%p46 ld.global.L1::evict_last.b32 { %r168 }, [ %rd45 + 0 ];
	@!%p46 mov.u32 %r168, %r246;
	// end inline asm
	mov.b32 	%f34, %r162;
	mov.b32 	%f35, %r164;
	mov.b32 	%f36, %r166;
	mov.b32 	%f37, %r168;
	mov.b32 	%f38, %r154;
	mov.b32 	%f39, %r156;
	mov.b32 	%f40, %r158;
	mov.b32 	%f41, %r160;
	.loc	1 38 22                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:38:22
	add.f32 	%f42, %f37, 0f3F800000;
	add.f32 	%f43, %f36, 0f3F800000;
	add.f32 	%f44, %f35, 0f3F800000;
	add.f32 	%f45, %f34, 0f3F800000;
	add.f32 	%f46, %f41, 0f3F800000;
	add.f32 	%f47, %f40, 0f3F800000;
	add.f32 	%f48, %f39, 0f3F800000;
	add.f32 	%f49, %f38, 0f3F800000;
	.loc	1 39 22                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:39:22
	mul.f32 	%f50, %f30, %f45;
	mul.f32 	%f51, %f31, %f44;
	mul.f32 	%f52, %f32, %f43;
	mul.f32 	%f53, %f33, %f42;
	mul.f32 	%f54, %f26, %f49;
	mul.f32 	%f55, %f27, %f48;
	mul.f32 	%f56, %f28, %f47;
	mul.f32 	%f57, %f29, %f46;
	.loc	1 42 23                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:42:23
	fma.rn.f32 	%f58, %f53, %f53, %f129;
	fma.rn.f32 	%f59, %f52, %f52, %f128;
	fma.rn.f32 	%f60, %f51, %f51, %f127;
	fma.rn.f32 	%f61, %f50, %f50, %f126;
	fma.rn.f32 	%f62, %f57, %f57, %f125;
	fma.rn.f32 	%f63, %f56, %f56, %f124;
	fma.rn.f32 	%f64, %f55, %f55, %f123;
	fma.rn.f32 	%f65, %f54, %f54, %f122;
	.loc	1 43 46                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:43:46
	selp.f32 	%f126, %f61, %f126, %p40;
	selp.f32 	%f127, %f60, %f127, %p42;
	selp.f32 	%f128, %f59, %f128, %p44;
	selp.f32 	%f129, %f58, %f129, %p46;
	selp.f32 	%f122, %f65, %f122, %p80;
	selp.f32 	%f123, %f64, %f123, %p80;
	selp.f32 	%f124, %f63, %f124, %p80;
	selp.f32 	%f125, %f62, %f125, %p80;
	.loc	1 30 36                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:30:36
	add.s64 	%rd93, %rd93, 256;
	add.s64 	%rd92, %rd92, 256;
	setp.lt.u64 	%p54, %rd12, 800;
	mov.u64 	%rd94, %rd12;
	@%p54 bra 	$L__BB0_1;
// %bb.2:                               // %__nv_rsqrtf.exit
	.loc	1 0 36                          // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:0:36
	cvt.u32.u64 	%r210, %rd1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f122, %f123;
	add.f32 	%f67, %f124, %f66;
	add.f32 	%f68, %f125, %f67;
	add.f32 	%f69, %f126, %f68;
	add.f32 	%f70, %f127, %f69;
	add.f32 	%f71, %f128, %f70;
	add.f32 	%f72, %f129, %f71;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r211, %r8, 7;
	shl.b32 	%r212, %r211, 2;
	shl.b32 	%r213, %r3, 5;
	or.b32  	%r214, %r213, %r212;
	add.s32 	%r203, %r73, %r214;
	mov.b32 	%r204, %f72;
	// begin inline asm
	@%p72 st.shared.b32 [ %r203 + 0 ], %r204;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p56, %r2, 512;
	add.s32 	%r206, %r73, %r10;
	// begin inline asm
	@%p56 ld.shared.b32 %r205, [ %r206 + 0 ];
	// end inline asm
	mov.b32 	%f73, %r205;
	shfl.sync.bfly.b32	%r217, %r205, 4, 31, -1;
	mov.b32 	%f74, %r217;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f75, %f73, %f74;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r218, %f75;
	shfl.sync.bfly.b32	%r219, %r218, 2, 31, -1;
	mov.b32 	%f76, %r219;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f77, %f75, %f76;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r220, %f77;
	shfl.sync.bfly.b32	%r221, %r220, 1, 31, -1;
	mov.b32 	%f78, %r221;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f79, %f77, %f78;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r222, %r2, 7;
	setp.eq.s32 	%p60, %r222, 0;
	and.pred  	%p57, %p56, %p60;
	mov.b32 	%r208, %f79;
	// begin inline asm
	@%p57 st.shared.b32 [ %r206 + 0 ], %r208;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r223, %r73, %r213;
	ld.shared.f32 	%f80, [%r223];
$L__tmp2:
	.loc	1 46 19                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:46:19
	add.f32 	%f81, %f80, 0f322BCC77;
	.loc	1 47 28                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:47:28
	rsqrt.approx.ftz.f32 	%f17, %f81;
	.loc	1 48 4                          // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:48:4
	bar.sync 	0;
	.loc	1 49 28                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:49:28
	mul.wide.s32 	%rd62, %r5, 4;
	add.s64 	%rd60, %rd26, %rd62;
	.loc	1 49 40                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:49:40
	setp.eq.s32 	%p61, %r211, 0;
	mov.b32 	%r209, %f17;
	and.pred  	%p58, %p61, %p80;
	// begin inline asm
	@%p58 st.global.b32 [ %rd60 + 0 ], { %r209 };
	// end inline asm
	shl.b32 	%r224, %r2, 6;
	and.b32  	%r225, %r224, 4032;
	or.b32  	%r226, %r225, %r9;
	and.b32  	%r227, %r10, 2044;
	shr.u32 	%r228, %r225, 2;
	add.s32 	%r229, %r73, %r228;
	shl.b32 	%r230, %r226, 2;
	add.s32 	%r290, %r229, %r230;
	add.s32 	%r292, %r290, 32;
	add.s32 	%r294, %r290, 64;
	add.s32 	%r296, %r290, 96;
	add.s32 	%r298, %r290, 128;
	add.s32 	%r300, %r290, 160;
	add.s32 	%r302, %r290, 192;
	add.s32 	%r304, %r290, 224;
	shr.u32 	%r231, %r10, 2;
	and.b32  	%r232, %r231, 496;
	add.s32 	%r233, %r73, %r232;
	shl.b32 	%r234, %r227, 2;
	add.s32 	%r36, %r233, %r234;
	or.b32  	%r235, %r227, 2048;
	shr.u32 	%r236, %r235, 2;
	and.b32  	%r237, %r236, 1008;
	add.s32 	%r238, %r73, %r237;
	add.s32 	%r37, %r238, %r234;
	.loc	1 50 36                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:50:36
	mul.lo.s32 	%r239, %r4, 864;
	mad.lo.s32 	%r240, %r38, 55296, %r239;
	add.s32 	%r241, %r240, %r210;
	cvt.u64.u32 	%rd19, %r241;
	mov.u64 	%rd97, -64;
$L__BB0_3:                              // =>This Inner Loop Header: Depth=1
	add.s64 	%rd23, %rd97, 64;
	.loc	1 51 27                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:51:27
	add.s64 	%rd75, %rd23, %rd1;
	add.s64 	%rd76, %rd23, %rd2;
	add.s64 	%rd77, %rd23, %rd3;
	add.s64 	%rd78, %rd23, %rd4;
	.loc	1 52 25                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:52:25
	add.s64 	%rd79, %rd23, %rd5;
	setp.lt.u64 	%p108, %rd75, 864;
	setp.lt.u64 	%p109, %rd76, 864;
	setp.lt.u64 	%p110, %rd77, 864;
	setp.lt.u64 	%p111, %rd78, 864;
	setp.lt.u64 	%p112, %rd79, 864;
	.loc	1 54 23                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:54:23
	add.s64 	%rd80, %rd6, %rd97;
	cvt.u32.u64 	%r314, %rd80;
	add.s32 	%r315, %r314, 64;
	mul.hi.u32 	%r316, %r315, 954437177;
	shr.u32 	%r317, %r316, 1;
	add.s32 	%r318, %r314, 72;
	mul.hi.u32 	%r319, %r318, 954437177;
	shr.u32 	%r320, %r319, 1;
	add.s32 	%r321, %r314, 80;
	mul.hi.u32 	%r322, %r321, 954437177;
	shr.u32 	%r323, %r322, 1;
	add.s32 	%r324, %r314, 88;
	mul.hi.u32 	%r325, %r324, 954437177;
	shr.u32 	%r326, %r325, 1;
	cvt.u32.u64 	%r327, %rd76;
	mul.hi.u32 	%r328, %r327, 954437177;
	shr.u32 	%r329, %r328, 1;
	cvt.u32.u64 	%r330, %rd77;
	mul.hi.u32 	%r331, %r330, 954437177;
	shr.u32 	%r332, %r331, 1;
	cvt.u32.u64 	%r333, %rd78;
	mul.hi.u32 	%r334, %r333, 954437177;
	shr.u32 	%r335, %r334, 1;
	cvt.u32.u64 	%r336, %rd79;
	mul.hi.u32 	%r337, %r336, 954437177;
	shr.u32 	%r338, %r337, 1;
	.loc	1 55 57                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:55:57
	and.pred  	%p62, %p48, %p108;
	and.pred  	%p67, %p47, %p108;
	and.pred  	%p88, %p80, %p109;
	and.pred  	%p90, %p80, %p110;
	and.pred  	%p92, %p80, %p111;
	and.pred  	%p94, %p80, %p112;
	.loc	1 55 49                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:55:49
	// begin inline asm
	mov.u32 %r242, 0x0;
	mov.u32 %r243, 0x0;
	mov.u32 %r244, 0x0;
	mov.u32 %r245, 0x0;
	@%p62 ld.global.L1::evict_last.v4.b32 { %r242, %r243, %r244, %r245 }, [ %rd95 + 0 ];
	@!%p62 mov.u32 %r242, %r246;
	@!%p62 mov.u32 %r243, %r246;
	@!%p62 mov.u32 %r244, %r246;
	@!%p62 mov.u32 %r245, %r246;
	// end inline asm
	// begin inline asm
	mov.u32 %r250, 0x0;
	mov.u32 %r251, 0x0;
	mov.u32 %r252, 0x0;
	mov.u32 %r253, 0x0;
	@%p67 ld.global.L1::evict_last.v4.b32 { %r250, %r251, %r252, %r253 }, [ %rd96 + 0 ];
	@!%p67 mov.u32 %r250, %r246;
	@!%p67 mov.u32 %r251, %r246;
	@!%p67 mov.u32 %r252, %r246;
	@!%p67 mov.u32 %r253, %r246;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p72 st.shared.b32 [ %r258 + 0 ], %r242;
	// end inline asm
	// begin inline asm
	@%p72 st.shared.b32 [ %r260 + 0 ], %r243;
	// end inline asm
	// begin inline asm
	@%p72 st.shared.b32 [ %r262 + 0 ], %r244;
	// end inline asm
	// begin inline asm
	@%p72 st.shared.b32 [ %r264 + 0 ], %r245;
	// end inline asm
	// begin inline asm
	@%p72 st.shared.b32 [ %r266 + 0 ], %r250;
	// end inline asm
	// begin inline asm
	@%p72 st.shared.b32 [ %r268 + 0 ], %r251;
	// end inline asm
	// begin inline asm
	@%p72 st.shared.b32 [ %r270 + 0 ], %r252;
	// end inline asm
	// begin inline asm
	@%p72 st.shared.b32 [ %r272 + 0 ], %r253;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f82, [%r20];
	ld.shared.f32 	%f83, [%r21+2048];
	ld.shared.f32 	%f84, [%r22+4096];
	ld.shared.f32 	%f85, [%r23+6144];
	ld.shared.f32 	%f86, [%r24+8192];
	ld.shared.f32 	%f87, [%r25+10240];
	ld.shared.f32 	%f88, [%r26+12288];
	ld.shared.f32 	%f89, [%r27+14336];
	.loc	1 56 40                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:56:40
	add.s32 	%r339, %r317, %r11;
	add.s32 	%r340, %r320, %r11;
	add.s32 	%r341, %r323, %r11;
	add.s32 	%r342, %r326, %r11;
	add.s32 	%r343, %r329, %r11;
	add.s32 	%r344, %r332, %r11;
	add.s32 	%r345, %r335, %r11;
	add.s32 	%r346, %r338, %r11;
	.loc	1 56 35                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:56:35
	mul.wide.s32 	%rd81, %r339, 4;
	add.s64 	%rd65, %rd27, %rd81;
	mul.wide.s32 	%rd82, %r340, 4;
	add.s64 	%rd66, %rd27, %rd82;
	mul.wide.s32 	%rd83, %r341, 4;
	add.s64 	%rd67, %rd27, %rd83;
	mul.wide.s32 	%rd84, %r342, 4;
	add.s64 	%rd68, %rd27, %rd84;
	mul.wide.s32 	%rd85, %r343, 4;
	add.s64 	%rd69, %rd27, %rd85;
	mul.wide.s32 	%rd86, %r344, 4;
	add.s64 	%rd70, %rd27, %rd86;
	mul.wide.s32 	%rd87, %r345, 4;
	add.s64 	%rd71, %rd27, %rd87;
	mul.wide.s32 	%rd88, %r346, 4;
	add.s64 	%rd72, %rd27, %rd88;
	.loc	1 56 48                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:56:48
	// begin inline asm
	mov.u32 %r274, 0x0;
	@%p80 ld.global.L1::evict_last.b32 { %r274 }, [ %rd65 + 0 ];
	@!%p80 mov.u32 %r274, %r246;
	// end inline asm
	mov.b32 	%f90, %r274;
	// begin inline asm
	mov.u32 %r276, 0x0;
	@%p80 ld.global.L1::evict_last.b32 { %r276 }, [ %rd66 + 0 ];
	@!%p80 mov.u32 %r276, %r246;
	// end inline asm
	mov.b32 	%f91, %r276;
	// begin inline asm
	mov.u32 %r278, 0x0;
	@%p80 ld.global.L1::evict_last.b32 { %r278 }, [ %rd67 + 0 ];
	@!%p80 mov.u32 %r278, %r246;
	// end inline asm
	mov.b32 	%f92, %r278;
	// begin inline asm
	mov.u32 %r280, 0x0;
	@%p80 ld.global.L1::evict_last.b32 { %r280 }, [ %rd68 + 0 ];
	@!%p80 mov.u32 %r280, %r246;
	// end inline asm
	mov.b32 	%f93, %r280;
	// begin inline asm
	mov.u32 %r282, 0x0;
	@%p88 ld.global.L1::evict_last.b32 { %r282 }, [ %rd69 + 0 ];
	@!%p88 mov.u32 %r282, %r246;
	// end inline asm
	mov.b32 	%f94, %r282;
	// begin inline asm
	mov.u32 %r284, 0x0;
	@%p90 ld.global.L1::evict_last.b32 { %r284 }, [ %rd70 + 0 ];
	@!%p90 mov.u32 %r284, %r246;
	// end inline asm
	mov.b32 	%f95, %r284;
	// begin inline asm
	mov.u32 %r286, 0x0;
	@%p92 ld.global.L1::evict_last.b32 { %r286 }, [ %rd71 + 0 ];
	@!%p92 mov.u32 %r286, %r246;
	// end inline asm
	mov.b32 	%f96, %r286;
	// begin inline asm
	mov.u32 %r288, 0x0;
	@%p94 ld.global.L1::evict_last.b32 { %r288 }, [ %rd72 + 0 ];
	@!%p94 mov.u32 %r288, %r246;
	// end inline asm
	mov.b32 	%f97, %r288;
	.loc	1 58 24                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:58:24
	add.f32 	%f98, %f90, 0f3F800000;
	add.f32 	%f99, %f91, 0f3F800000;
	add.f32 	%f100, %f92, 0f3F800000;
	add.f32 	%f101, %f93, 0f3F800000;
	add.f32 	%f102, %f94, 0f3F800000;
	add.f32 	%f103, %f95, 0f3F800000;
	add.f32 	%f104, %f96, 0f3F800000;
	add.f32 	%f105, %f97, 0f3F800000;
	.loc	1 59 24                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:59:24
	mul.f32 	%f106, %f82, %f98;
	mul.f32 	%f107, %f83, %f99;
	mul.f32 	%f108, %f84, %f100;
	mul.f32 	%f109, %f85, %f101;
	mul.f32 	%f110, %f86, %f102;
	mul.f32 	%f111, %f87, %f103;
	mul.f32 	%f112, %f88, %f104;
	mul.f32 	%f113, %f89, %f105;
	.loc	1 60 24                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:60:24
	mul.f32 	%f114, %f17, %f106;
	mul.f32 	%f115, %f17, %f107;
	mul.f32 	%f116, %f17, %f108;
	mul.f32 	%f117, %f17, %f109;
	mul.f32 	%f118, %f17, %f110;
	mul.f32 	%f119, %f17, %f111;
	mul.f32 	%f120, %f17, %f112;
	mul.f32 	%f121, %f17, %f113;
	.loc	1 61 34                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:61:34
	add.s64 	%rd89, %rd19, %rd97;
	cvt.u32.u64 	%r347, %rd89;
	add.s32 	%r348, %r347, 64;
	.loc	1 61 29                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:61:29
	mul.wide.s32 	%rd90, %r348, 4;
	add.s64 	%rd73, %rd28, %rd90;
	add.s32 	%r349, %r347, 27712;
	mul.wide.s32 	%rd91, %r349, 4;
	add.s64 	%rd74, %rd28, %rd91;
	.loc	1 61 50                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:61:50
	bar.sync 	0;
	mov.b32 	%r291, %f114;
	// begin inline asm
	@%p72 st.shared.b32 [ %r290 + 0 ], %r291;
	// end inline asm
	mov.b32 	%r293, %f115;
	// begin inline asm
	@%p72 st.shared.b32 [ %r292 + 0 ], %r293;
	// end inline asm
	mov.b32 	%r295, %f116;
	// begin inline asm
	@%p72 st.shared.b32 [ %r294 + 0 ], %r295;
	// end inline asm
	mov.b32 	%r297, %f117;
	// begin inline asm
	@%p72 st.shared.b32 [ %r296 + 0 ], %r297;
	// end inline asm
	mov.b32 	%r299, %f118;
	// begin inline asm
	@%p72 st.shared.b32 [ %r298 + 0 ], %r299;
	// end inline asm
	mov.b32 	%r301, %f119;
	// begin inline asm
	@%p72 st.shared.b32 [ %r300 + 0 ], %r301;
	// end inline asm
	mov.b32 	%r303, %f120;
	// begin inline asm
	@%p72 st.shared.b32 [ %r302 + 0 ], %r303;
	// end inline asm
	mov.b32 	%r305, %f121;
	// begin inline asm
	@%p72 st.shared.b32 [ %r304 + 0 ], %r305;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r310, %r311, %r312, %r313}, [%r37+8192];
	ld.shared.v4.u32 	{%r306, %r307, %r308, %r309}, [%r36];
	// begin inline asm
	@%p62 st.global.v4.b32 [ %rd73 + 0 ], { %r306, %r307, %r308, %r309 };
	// end inline asm
	// begin inline asm
	@%p67 st.global.v4.b32 [ %rd74 + 0 ], { %r310, %r311, %r312, %r313 };
	// end inline asm
	.loc	1 50 36                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:50:36
	add.s64 	%rd96, %rd96, 256;
	add.s64 	%rd95, %rd95, 256;
	setp.lt.u64 	%p113, %rd23, 800;
	mov.u64 	%rd97, %rd23;
	@%p113 bra 	$L__BB0_3;
// %bb.4:
	.loc	1 50 4                          // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:50:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 185                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 107
.b8 121
.b8 51
.b8 107
.b8 118
.b8 117
.b8 112
.b8 110
.b8 117
.b8 116
.b8 108
.b8 105
.b8 98
.b8 116
.b8 51
.b8 102
.b8 110
.b8 53
.b8 113
.b8 107
.b8 117
.b8 114
.b8 105
.b8 115
.b8 107
.b8 122
.b8 51
.b8 53
.b8 107
.b8 103
.b8 98
.b8 105
.b8 117
.b8 107
.b8 99
.b8 102
.b8 107
.b8 122
.b8 100
.b8 119
.b8 103
.b8 53
.b8 110
.b8 55
.b8 122
.b8 106
.b8 113
.b8 118
.b8 102
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
