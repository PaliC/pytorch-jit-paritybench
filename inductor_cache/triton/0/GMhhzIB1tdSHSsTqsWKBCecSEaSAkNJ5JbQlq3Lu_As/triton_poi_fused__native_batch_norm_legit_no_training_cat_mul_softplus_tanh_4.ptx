//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<27>;
	.reg .b32 	%r<60>;
	.reg .f32 	%f<153>;
	.reg .b64 	%rd<27>;
	.loc	1 19 0                          // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_1];
$L__tmp0:
	.loc	1 21 28                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:21:28
	// begin inline asm
	mov.u32 %r7, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:21:33
	shl.b32 	%r14, %r7, 7;
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_3];
	.loc	1 22 36                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:22:36
	mov.u32 	%r15, %tid.x;
	and.b32  	%r16, %r15, 127;
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_4];
	.loc	1 22 23                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:22:23
	or.b32  	%r1, %r14, %r16;
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_5];
	.loc	1 23 21                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:23:21
	setp.lt.s32 	%p25, %r1, 512;
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_6];
	.loc	1 24 21                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:24:21
	shr.s32 	%r18, %r1, 31;
	shr.u32 	%r19, %r18, 28;
	add.s32 	%r20, %r1, %r19;
	shr.s32 	%r21, %r20, 4;
	.loc	1 24 27                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:24:27
	shr.u32 	%r22, %r21, 29;
	add.s32 	%r23, %r21, %r22;
	and.b32  	%r24, %r23, -8;
	sub.s32 	%r2, %r21, %r24;
	.loc	1 25 19                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:25:19
	and.b32  	%r25, %r20, -16;
	.loc	1 26 19                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:26:19
	shr.u32 	%r26, %r18, 25;
	add.s32 	%r27, %r1, %r26;
	shr.s32 	%r28, %r27, 7;
	.loc	1 28 31                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:28:31
	mul.wide.s32 	%rd14, %r2, 4;
	add.s64 	%rd4, %rd10, %rd14;
	.loc	1 28 36                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:28:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 29 31                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:29:31
	add.s64 	%rd5, %rd11, %rd14;
	.loc	1 29 36                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:29:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 30 31                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:30:31
	add.s64 	%rd6, %rd12, %rd14;
	.loc	1 30 36                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:30:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 31 31                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:31:31
	add.s64 	%rd7, %rd13, %rd14;
	.loc	1 31 36                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:31:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r11 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 18                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:36:18
	setp.lt.s32 	%p7, %r2, 4;
	.loc	1 37 35                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:37:35
	and.b32  	%r29, %r27, -128;
	sub.s32 	%r30, %r1, %r29;
	.loc	1 37 48                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:37:48
	shl.b32 	%r4, %r28, 6;
	.loc	1 37 45                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:37:45
	add.s32 	%r31, %r4, %r30;
	.loc	1 37 30                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:37:30
	mul.wide.s32 	%rd15, %r31, 4;
	add.s64 	%rd8, %rd9, %rd15;
	.loc	1 37 60                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:37:60
	and.pred  	%p5, %p25, %p7;
	mov.b32 	%r13, 0;
	.loc	1 37 53                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:37:53
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p5 ld.global.b32 { %r12 }, [ %rd8 + 0 ];
	@!%p5 mov.u32 %r12, %r13;
	// end inline asm
	mov.b32 	%f5, %r12;
	.loc	1 40 23                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:40:23
	mul.f32 	%f31, %f5, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f30, %f31;
	// end inline asm
	mov.f32 	%f32, 0f3F800000;
	.loc	1 41 27                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:41:27
	add.rz.ftz.f32 	%f33, %f30, %f32;
	mov.b32 	%r32, %f33;
	add.s32 	%r33, %r32, -1061158912;
	and.b32  	%r34, %r33, -8388608;
	mov.b32 	%r5, %f30;
	sub.s32 	%r35, %r5, %r34;
	mov.b32 	%f34, %r35;
	mov.b32 	%r36, 1082130432;
	sub.s32 	%r37, %r36, %r34;
	mov.b32 	%f35, %r37;
	mov.f32 	%f36, 0fBF800000;
	mov.f32 	%f37, 0f3E800000;
	fma.rn.ftz.f32 	%f38, %f37, %f35, %f36;
	add.f32 	%f39, %f38, %f34;
	cvt.rn.f32.s32 	%f40, %r34;
	mul.f32 	%f41, %f40, 0f34000000;
	mov.f32 	%f42, 0f3DD80012;
	mov.f32 	%f43, 0fBD39BF78;
	fma.rn.ftz.f32 	%f44, %f43, %f39, %f42;
	mov.f32 	%f45, 0fBE0778E0;
	fma.rn.ftz.f32 	%f46, %f44, %f39, %f45;
	mov.f32 	%f47, 0f3E146475;
	fma.rn.ftz.f32 	%f48, %f46, %f39, %f47;
	mov.f32 	%f49, 0fBE2A68DD;
	fma.rn.ftz.f32 	%f50, %f48, %f39, %f49;
	mov.f32 	%f51, 0f3E4CAF9E;
	fma.rn.ftz.f32 	%f52, %f50, %f39, %f51;
	mov.f32 	%f53, 0fBE800042;
	fma.rn.ftz.f32 	%f54, %f52, %f39, %f53;
	mov.f32 	%f55, 0f3EAAAAE6;
	fma.rn.ftz.f32 	%f56, %f54, %f39, %f55;
	mov.f32 	%f57, 0fBF000000;
	fma.rn.ftz.f32 	%f58, %f56, %f39, %f57;
	mul.f32 	%f59, %f39, %f58;
	fma.rn.ftz.f32 	%f60, %f59, %f39, %f39;
	mov.f32 	%f61, 0f3F317218;
	fma.rn.ftz.f32 	%f148, %f41, %f61, %f60;
	setp.lt.u32 	%p8, %r5, 2139095040;
	mov.f32 	%f146, 0f7F800000;
	@%p8 bra 	$L__BB0_4;
// %bb.1:
	setp.lt.s32 	%p9, %r5, -1082130431;
	@%p9 bra 	$L__BB0_3;
// %bb.2:                               // %__nv_fmaf_rn.exit.i
	.loc	1 0 27                          // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:0:27
	fma.rn.ftz.f32 	%f148, %f30, %f146, %f146;
$L__BB0_3:
	.loc	1 41 27                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:41:27
	setp.eq.f32 	%p10, %f30, 0f00000000;
	selp.f32 	%f148, 0f80000000, %f148, %p10;
$L__BB0_4:                              // %__nv_log1pf.exit
	.loc	1 0 27                          // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:0:27
	ld.param.u64 	%rd2, [triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_2];
	sub.s32 	%r3, %r1, %r25;
	mov.b32 	%f1, %r8;
	mov.b32 	%f2, %r9;
	mov.b32 	%f3, %r10;
	mov.b32 	%f4, %r11;
	.loc	1 39 18                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:39:18
	setp.gt.f32 	%p11, %f5, 0f41A00000;
	.loc	1 42 33                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:42:33
	selp.f32 	%f12, %f5, %f148, %p11;
	.loc	1 43 27                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:43:27
	abs.ftz.f32 	%f13, %f12;
	setp.ltu.f32 	%p12, %f13, 0f3F19999A;
	mov.f32 	%f140, 0fC0000000;
	mov.f32 	%f141, 0fBD563CAE;
	mov.f32 	%f142, 0f3C80F082;
	mov.f32 	%f143, 0f3E085941;
	mov.f32 	%f144, 0fBEAAA9ED;
	mov.f32 	%f145, 0f00000000;
	@%p12 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_5;
$L__BB0_6:                              // %__internal_fmad.exit3.i
	mul.f32 	%f71, %f12, %f12;
	fma.rn.ftz.f32 	%f74, %f142, %f71, %f141;
	fma.rn.ftz.f32 	%f76, %f74, %f71, %f143;
	fma.rn.ftz.f32 	%f78, %f76, %f71, %f144;
	fma.rn.ftz.f32 	%f80, %f78, %f71, %f145;
	fma.rn.ftz.f32 	%f149, %f80, %f12, %f12;
	bra.uni 	$L__BB0_7;
$L__BB0_5:                              // %__internal_fmad.exit1.i
	mul.f32 	%f65, %f13, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f66, %f65;
	add.f32 	%f64, %f66, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f63,%f64;
	// end inline asm
	fma.rn.ftz.f32 	%f69, %f63, %f140, %f32;
	setp.ge.f32 	%p13, %f13, 0f41102CB4;
	selp.f32 	%f70, 0f3F800000, %f69, %p13;
	mov.b32 	%r38, %f70;
	mov.b32 	%r39, %f12;
	and.b32  	%r40, %r39, -2147483648;
	or.b32  	%r41, %r40, %r38;
	mov.b32 	%f149, %r41;
$L__BB0_7:                              // %__nv_tanhf.exit
	.loc	1 44 19                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:44:19
	mul.f32 	%f83, %f149, %f5;
	.loc	1 47 20                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:47:20
	setp.gt.s32 	%p18, %r2, 3;
	.loc	1 50 40                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:50:40
	shl.b32 	%r47, %r2, 4;
	.loc	1 50 31                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:50:31
	cvt.s64.s32 	%rd17, %r47;
	cvt.s64.s32 	%rd18, %r4;
	cvt.s64.s32 	%rd19, %r3;
	add.s64 	%rd20, %rd19, %rd18;
	add.s64 	%rd21, %rd20, %rd17;
	shl.b64 	%rd22, %rd21, 2;
	add.s64 	%rd23, %rd2, %rd22;
	add.s64 	%rd16, %rd23, -256;
	.loc	1 50 69                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:50:69
	and.pred  	%p14, %p25, %p18;
	.loc	1 50 61                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:50:61
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p14 ld.global.b32 { %r42 }, [ %rd16 + 0 ];
	@!%p14 mov.u32 %r42, %r13;
	// end inline asm
	mov.b32 	%f84, %r42;
	.loc	1 0 0                           // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:0:0
	selp.f32 	%f17, %f83, %f84, %p7;
	.loc	1 52 20                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:52:20
	sub.f32 	%f85, %f17, %f1;
	.loc	1 54 20                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:54:20
	add.f32 	%f86, %f2, 0f3727C5AC;
	.loc	1 55 27                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:55:27
	sqrt.approx.ftz.f32 	%f87, %f86;
	.loc	1 57 20                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:57:20
	mov.b32 	%r46, %f87;
	mov.b32 	%r45, 1065353216;
	// begin inline asm
	div.full.f32 %r44, %r45, %r46;
	// end inline asm
	mov.b32 	%f88, %r44;
	.loc	1 60 20                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:60:20
	mul.f32 	%f89, %f85, %f88;
	.loc	1 62 20                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:62:20
	fma.rn.f32 	%f18, %f89, %f3, %f4;
	.loc	1 65 24                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:65:24
	mul.f32 	%f82, %f18, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f81, %f82;
	// end inline asm
	.loc	1 66 28                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:66:28
	add.rz.ftz.f32 	%f91, %f81, %f32;
	mov.b32 	%r48, %f91;
	add.s32 	%r49, %r48, -1061158912;
	and.b32  	%r50, %r49, -8388608;
	mov.b32 	%r6, %f81;
	sub.s32 	%r51, %r6, %r50;
	mov.b32 	%f92, %r51;
	sub.s32 	%r53, %r36, %r50;
	mov.b32 	%f93, %r53;
	fma.rn.ftz.f32 	%f96, %f37, %f93, %f36;
	add.f32 	%f97, %f96, %f92;
	cvt.rn.f32.s32 	%f98, %r50;
	mul.f32 	%f99, %f98, 0f34000000;
	fma.rn.ftz.f32 	%f102, %f43, %f97, %f42;
	fma.rn.ftz.f32 	%f104, %f102, %f97, %f45;
	fma.rn.ftz.f32 	%f106, %f104, %f97, %f47;
	fma.rn.ftz.f32 	%f108, %f106, %f97, %f49;
	fma.rn.ftz.f32 	%f110, %f108, %f97, %f51;
	fma.rn.ftz.f32 	%f112, %f110, %f97, %f53;
	fma.rn.ftz.f32 	%f114, %f112, %f97, %f55;
	fma.rn.ftz.f32 	%f116, %f114, %f97, %f57;
	mul.f32 	%f117, %f97, %f116;
	fma.rn.ftz.f32 	%f118, %f117, %f97, %f97;
	fma.rn.ftz.f32 	%f150, %f99, %f61, %f118;
	setp.lt.u32 	%p19, %r6, 2139095040;
	@%p19 bra 	$L__BB0_11;
// %bb.8:
	setp.lt.s32 	%p20, %r6, -1082130431;
	@%p20 bra 	$L__BB0_10;
// %bb.9:                               // %__nv_fmaf_rn.exit.i59
	.loc	1 0 28                          // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:0:28
	fma.rn.ftz.f32 	%f150, %f81, %f146, %f146;
$L__BB0_10:
	.loc	1 66 28                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:66:28
	setp.eq.f32 	%p21, %f81, 0f00000000;
	selp.f32 	%f150, 0f80000000, %f150, %p21;
$L__BB0_11:                             // %__nv_log1pf.exit62
	.loc	1 0 28                          // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:0:28
	ld.param.u64 	%rd3, [triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_7];
	ld.param.u64 	%rd1, [triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_4_param_0];
	.loc	1 64 20                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:64:20
	setp.gt.f32 	%p22, %f18, 0f41A00000;
	.loc	1 67 35                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:67:35
	selp.f32 	%f25, %f18, %f150, %p22;
	.loc	1 68 27                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:68:27
	abs.ftz.f32 	%f26, %f25;
	setp.ltu.f32 	%p23, %f26, 0f3F19999A;
	@%p23 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_12;
$L__BB0_13:                             // %__internal_fmad.exit3.i12
	mul.f32 	%f129, %f25, %f25;
	fma.rn.ftz.f32 	%f132, %f142, %f129, %f141;
	fma.rn.ftz.f32 	%f134, %f132, %f129, %f143;
	fma.rn.ftz.f32 	%f136, %f134, %f129, %f144;
	fma.rn.ftz.f32 	%f138, %f136, %f129, %f145;
	fma.rn.ftz.f32 	%f152, %f138, %f25, %f25;
	bra.uni 	$L__BB0_14;
$L__BB0_12:                             // %__internal_fmad.exit1.i7
	mul.f32 	%f123, %f26, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f124, %f123;
	add.f32 	%f122, %f124, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f121,%f122;
	// end inline asm
	fma.rn.ftz.f32 	%f127, %f121, %f140, %f32;
	setp.ge.f32 	%p24, %f26, 0f41102CB4;
	selp.f32 	%f128, 0f3F800000, %f127, %p24;
	mov.b32 	%r54, %f128;
	mov.b32 	%r55, %f25;
	and.b32  	%r56, %r55, -2147483648;
	or.b32  	%r57, %r56, %r54;
	mov.b32 	%f152, %r57;
$L__BB0_14:                             // %__nv_tanhf.exit23
	.loc	1 69 20                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:69:20
	mul.f32 	%f139, %f18, %f152;
	.loc	1 70 25                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:70:25
	mul.wide.s32 	%rd26, %r1, 4;
	add.s64 	%rd24, %rd3, %rd26;
	.loc	1 70 37                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:70:37
	mov.b32 	%r58, %f17;
	// begin inline asm
	@%p25 st.global.b32 [ %rd24 + 0 ], { %r58 };
	// end inline asm
	.loc	1 71 28                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:71:28
	add.s64 	%rd25, %rd1, %rd26;
	.loc	1 71 40                         // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:71:40
	mov.b32 	%r59, %f139;
	// begin inline asm
	@%p25 st.global.b32 [ %rd25 + 0 ], { %r59 };
	// end inline asm
	.loc	1 71 4                          // c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py:71:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7z/c7zdn7u55u3kxz5hdu7eaqjxekyidl5x3dwy7xgrvughyfkmmesk.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 122
.b8 100
.b8 110
.b8 55
.b8 117
.b8 53
.b8 53
.b8 117
.b8 51
.b8 107
.b8 120
.b8 122
.b8 53
.b8 104
.b8 100
.b8 117
.b8 55
.b8 101
.b8 97
.b8 113
.b8 106
.b8 120
.b8 101
.b8 107
.b8 121
.b8 105
.b8 100
.b8 108
.b8 53
.b8 120
.b8 51
.b8 100
.b8 119
.b8 121
.b8 55
.b8 120
.b8 103
.b8 114
.b8 118
.b8 117
.b8 103
.b8 104
.b8 121
.b8 102
.b8 107
.b8 109
.b8 109
.b8 101
.b8 115
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 122
.b8 0
	}
	.section	.debug_macinfo	{	}
