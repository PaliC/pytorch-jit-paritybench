//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<83>;
	.reg .b32 	%r<301>;
	.reg .f32 	%f<136>;
	.reg .b64 	%rd<42>;
	.loc	1 19 0                          // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_0];
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_1];
$L__tmp0:
	.loc	1 22 28                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:22:33
	shl.b32 	%r158, %r1, 8;
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_2];
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_3];
	.loc	1 23 44                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:23:44
	mov.u32 	%r159, %tid.x;
	shl.b32 	%r160, %r159, 2;
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_4];
	and.b32  	%r161, %r160, 12;
	ld.param.u64 	%rd26, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_5];
	and.b32  	%r162, %r160, 252;
	ld.param.u64 	%rd27, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_6];
	shr.u32 	%r163, %r159, 2;
	ld.param.u64 	%rd28, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_17_param_7];
	bfe.u32 	%r164, %r159, 2, 6;
	and.b32  	%r165, %r159, 255;
	.loc	1 23 23                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:23:23
	or.b32  	%r166, %r158, %r162;
	or.b32  	%r167, %r158, %r164;
	or.b32  	%r168, %r167, 64;
	or.b32  	%r169, %r167, 128;
	or.b32  	%r170, %r167, 192;
	or.b32  	%r171, %r158, %r165;
	.loc	1 24 21                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:24:21
	setp.lt.s32 	%p57, %r166, 512;
	setp.lt.s32 	%p58, %r167, 512;
	setp.lt.s32 	%p59, %r168, 512;
	setp.lt.s32 	%p60, %r169, 512;
	setp.lt.s32 	%p61, %r170, 512;
	setp.lt.s32 	%p9, %r171, 512;
	.loc	1 25 28                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:25:33
	shl.b32 	%r172, %r2, 4;
	.loc	1 26 44                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:26:44
	bfe.u32 	%r173, %r159, 6, 2;
	.loc	1 26 23                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:26:23
	or.b32  	%r174, %r172, %r173;
	or.b32  	%r175, %r174, 4;
	or.b32  	%r176, %r174, 8;
	or.b32  	%r177, %r174, 12;
	or.b32  	%r178, %r172, %r161;
	.loc	1 27 21                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:27:21
	setp.lt.s32 	%p62, %r174, 1024;
	setp.lt.s32 	%p63, %r175, 1024;
	setp.lt.s32 	%p64, %r176, 1024;
	setp.lt.s32 	%p65, %r177, 1024;
	setp.lt.s32 	%p66, %r178, 1024;
	.loc	1 30 19                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:30:19
	shr.s32 	%r180, %r166, 31;
	shr.u32 	%r181, %r180, 25;
	add.s32 	%r182, %r166, %r181;
	.loc	1 29 19                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:29:19
	and.b32  	%r183, %r182, -128;
	sub.s32 	%r184, %r166, %r183;
	.loc	1 30 19                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:30:19
	shr.s32 	%r186, %r167, 31;
	shr.u32 	%r187, %r186, 25;
	add.s32 	%r188, %r167, %r187;
	.loc	1 29 19                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:29:19
	and.b32  	%r189, %r188, 4194176;
	sub.s32 	%r190, %r167, %r189;
	.loc	1 30 19                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:30:19
	shr.s32 	%r192, %r168, 31;
	shr.u32 	%r193, %r192, 25;
	add.s32 	%r194, %r168, %r193;
	.loc	1 29 19                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:29:19
	and.b32  	%r195, %r194, 4194176;
	sub.s32 	%r196, %r168, %r195;
	.loc	1 30 19                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:30:19
	shr.s32 	%r198, %r170, 31;
	shr.u32 	%r199, %r198, 25;
	add.s32 	%r200, %r170, %r199;
	.loc	1 29 19                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:29:19
	and.b32  	%r201, %r200, 4194176;
	sub.s32 	%r202, %r170, %r201;
	bfe.s32 	%r203, %r1, 23, 1;
	.loc	1 30 19                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:30:19
	shr.u32 	%r204, %r203, 25;
	.loc	1 29 19                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:29:19
	add.s32 	%r205, %r171, %r204;
	and.b32  	%r206, %r205, -128;
	sub.s32 	%r207, %r171, %r206;
	.loc	1 30 19                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:30:19
	add.s32 	%r208, %r169, %r204;
	.loc	1 31 39                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:31:39
	shl.b32 	%r209, %r174, 7;
	shl.b32 	%r210, %r175, 7;
	shl.b32 	%r211, %r176, 7;
	shl.b32 	%r212, %r177, 7;
	.loc	1 31 51                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:31:51
	shl.b32 	%r213, %r182, 10;
	and.b32  	%r214, %r213, -131072;
	.loc	1 31 35                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:31:35
	add.s32 	%r215, %r214, %r184;
	.loc	1 31 44                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:31:44
	add.s32 	%r216, %r215, %r209;
	add.s32 	%r217, %r215, %r210;
	add.s32 	%r218, %r215, %r211;
	add.s32 	%r219, %r215, %r212;
	.loc	1 31 30                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:31:30
	mul.wide.s32 	%rd29, %r216, 4;
	add.s64 	%rd1, %rd21, %rd29;
	mul.wide.s32 	%rd30, %r217, 4;
	add.s64 	%rd2, %rd21, %rd30;
	mul.wide.s32 	%rd31, %r218, 4;
	add.s64 	%rd3, %rd21, %rd31;
	mul.wide.s32 	%rd32, %r219, 4;
	add.s64 	%rd4, %rd21, %rd32;
	.loc	1 31 64                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:31:64
	and.pred  	%p1, %p57, %p62;
	and.pred  	%p2, %p63, %p57;
	and.pred  	%p3, %p64, %p57;
	and.pred  	%p4, %p65, %p57;
	and.pred  	%p13, %p58, %p66;
	and.pred  	%p14, %p59, %p66;
	and.pred  	%p15, %p60, %p66;
	and.pred  	%p16, %p61, %p66;
	.loc	1 31 56                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:31:56
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r21, %r22, %r23 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd4 + 0 ];
	// end inline asm
	and.b32  	%r220, %r160, 1020;
	and.b32  	%r221, %r163, 48;
	mov.u32 	%r222, global_smem;
	add.s32 	%r223, %r222, %r221;
	shl.b32 	%r224, %r220, 2;
	add.s32 	%r19, %r223, %r224;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r19 + 0 ], { %r20, %r21, %r22, %r23 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r225, %r165, 2;
	add.s32 	%r226, %r222, %r225;
	ld.shared.f32 	%f1, [%r226];
	ld.shared.f32 	%f2, [%r226+1040];
	ld.shared.f32 	%f3, [%r226+2080];
	ld.shared.f32 	%f4, [%r226+3120];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r19 + 0 ], { %r25, %r26, %r27, %r28 };
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f5, [%r226];
	ld.shared.f32 	%f6, [%r226+1040];
	ld.shared.f32 	%f7, [%r226+2080];
	ld.shared.f32 	%f8, [%r226+3120];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r19 + 0 ], { %r30, %r31, %r32, %r33 };
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f9, [%r226];
	ld.shared.f32 	%f10, [%r226+1040];
	ld.shared.f32 	%f11, [%r226+2080];
	ld.shared.f32 	%f12, [%r226+3120];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r19 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f13, [%r226];
	ld.shared.f32 	%f14, [%r226+1040];
	ld.shared.f32 	%f15, [%r226+2080];
	ld.shared.f32 	%f16, [%r226+3120];
	.loc	1 32 30                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:32:30
	mul.wide.s32 	%rd33, %r207, 4;
	add.s64 	%rd5, %rd22, %rd33;
	.loc	1 32 35                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:32:35
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r39 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 33 30                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:33:30
	add.s64 	%rd6, %rd23, %rd33;
	.loc	1 33 35                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:33:35
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r40 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r40;
	.loc	1 34 31                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:34:31
	add.s64 	%rd7, %rd24, %rd33;
	.loc	1 34 36                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:34:36
	// begin inline asm
	mov.u32 %r41, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r41 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 35 31                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:35:31
	add.s64 	%rd8, %rd25, %rd33;
	.loc	1 35 36                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:35:36
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r42 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 36 40                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:36:40
	add.s32 	%r227, %r178, 262144;
	.loc	1 36 50                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:36:50
	shl.b32 	%r228, %r190, 10;
	shl.b32 	%r229, %r196, 10;
	shl.b32 	%r230, %r202, 10;
	.loc	1 36 62                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:36:62
	shl.b32 	%r231, %r188, 12;
	and.b32  	%r232, %r231, -524288;
	shl.b32 	%r233, %r194, 12;
	and.b32  	%r234, %r233, -524288;
	shl.b32 	%r235, %r208, 12;
	and.b32  	%r236, %r235, -524288;
	shl.b32 	%r237, %r200, 12;
	and.b32  	%r238, %r237, -524288;
	.loc	1 36 45                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:36:45
	add.s32 	%r239, %r232, %r228;
	.loc	1 36 55                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:36:55
	add.s32 	%r240, %r239, %r227;
	.loc	1 36 45                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:36:45
	add.s32 	%r241, %r234, %r229;
	.loc	1 36 55                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:36:55
	add.s32 	%r242, %r241, %r227;
	.loc	1 36 45                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:36:45
	add.s32 	%r243, %r236, %r228;
	.loc	1 36 55                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:36:55
	add.s32 	%r244, %r243, %r227;
	.loc	1 36 45                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:36:45
	add.s32 	%r245, %r238, %r230;
	.loc	1 36 55                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:36:55
	add.s32 	%r246, %r245, %r227;
	.loc	1 36 31                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:36:31
	mul.wide.s32 	%rd34, %r240, 4;
	add.s64 	%rd9, %rd26, %rd34;
	mul.wide.s32 	%rd35, %r242, 4;
	add.s64 	%rd10, %rd26, %rd35;
	mul.wide.s32 	%rd36, %r244, 4;
	add.s64 	%rd11, %rd26, %rd36;
	mul.wide.s32 	%rd37, %r246, 4;
	add.s64 	%rd12, %rd26, %rd37;
	.loc	1 36 67                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:36:67
	// begin inline asm
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	@%p13 ld.global.L1::evict_last.v4.b32 { %r43, %r44, %r45, %r46 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	@%p14 ld.global.L1::evict_last.v4.b32 { %r47, %r48, %r49, %r50 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	mov.u32 %r54, 0x0;
	@%p15 ld.global.L1::evict_last.v4.b32 { %r51, %r52, %r53, %r54 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	@%p16 ld.global.L1::evict_last.v4.b32 { %r55, %r56, %r57, %r58 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 39 18                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:39:18
	add.f32 	%f18, %f17, 0f3727C5AC;
	.loc	1 40 26                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:40:26
	sqrt.approx.ftz.f32 	%f19, %f18;
	.loc	1 36 67                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:36:67
	mov.b32 	%f20, %r58;
	mov.b32 	%f21, %r57;
	mov.b32 	%f22, %r56;
	mov.b32 	%f23, %r55;
	mov.b32 	%f24, %r54;
	mov.b32 	%f25, %r53;
	mov.b32 	%f26, %r52;
	mov.b32 	%f27, %r51;
	mov.b32 	%f28, %r50;
	mov.b32 	%f29, %r49;
	mov.b32 	%f30, %r48;
	mov.b32 	%f31, %r47;
	mov.b32 	%f32, %r46;
	mov.b32 	%f33, %r45;
	mov.b32 	%f34, %r44;
	mov.b32 	%f35, %r43;
	.loc	1 42 18                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:42:18
	mov.b32 	%r61, %f19;
	mov.b32 	%r60, 1065353216;
	// begin inline asm
	div.full.f32 %r59, %r60, %r61;
	// end inline asm
	mov.b32 	%f36, %r59;
	.loc	1 37 18                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:37:18
	mov.b32 	%f37, %r39;
	sub.f32 	%f38, %f1, %f37;
	sub.f32 	%f39, %f2, %f37;
	sub.f32 	%f40, %f3, %f37;
	sub.f32 	%f41, %f4, %f37;
	sub.f32 	%f42, %f5, %f37;
	sub.f32 	%f43, %f6, %f37;
	sub.f32 	%f44, %f7, %f37;
	sub.f32 	%f45, %f8, %f37;
	sub.f32 	%f46, %f9, %f37;
	sub.f32 	%f47, %f10, %f37;
	sub.f32 	%f48, %f11, %f37;
	sub.f32 	%f49, %f12, %f37;
	sub.f32 	%f50, %f13, %f37;
	sub.f32 	%f51, %f14, %f37;
	sub.f32 	%f52, %f15, %f37;
	sub.f32 	%f53, %f16, %f37;
	.loc	1 45 19                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:45:19
	mul.f32 	%f54, %f53, %f36;
	mul.f32 	%f55, %f52, %f36;
	mul.f32 	%f56, %f51, %f36;
	mul.f32 	%f57, %f50, %f36;
	mul.f32 	%f58, %f49, %f36;
	mul.f32 	%f59, %f48, %f36;
	mul.f32 	%f60, %f47, %f36;
	mul.f32 	%f61, %f46, %f36;
	mul.f32 	%f62, %f45, %f36;
	mul.f32 	%f63, %f44, %f36;
	mul.f32 	%f64, %f43, %f36;
	mul.f32 	%f65, %f42, %f36;
	mul.f32 	%f66, %f41, %f36;
	mul.f32 	%f67, %f40, %f36;
	mul.f32 	%f68, %f39, %f36;
	mul.f32 	%f69, %f38, %f36;
	.loc	1 46 20                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:46:20
	mov.b32 	%f70, %r41;
	.loc	1 47 20                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:47:20
	mov.b32 	%f71, %r42;
	fma.rn.f32 	%f72, %f69, %f70, %f71;
	fma.rn.f32 	%f73, %f68, %f70, %f71;
	fma.rn.f32 	%f74, %f67, %f70, %f71;
	fma.rn.f32 	%f75, %f66, %f70, %f71;
	fma.rn.f32 	%f76, %f65, %f70, %f71;
	fma.rn.f32 	%f77, %f64, %f70, %f71;
	fma.rn.f32 	%f78, %f63, %f70, %f71;
	fma.rn.f32 	%f79, %f62, %f70, %f71;
	fma.rn.f32 	%f80, %f61, %f70, %f71;
	fma.rn.f32 	%f81, %f60, %f70, %f71;
	fma.rn.f32 	%f82, %f59, %f70, %f71;
	fma.rn.f32 	%f83, %f58, %f70, %f71;
	fma.rn.f32 	%f84, %f57, %f70, %f71;
	fma.rn.f32 	%f85, %f56, %f70, %f71;
	fma.rn.f32 	%f86, %f55, %f70, %f71;
	fma.rn.f32 	%f87, %f54, %f70, %f71;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p67, %f87, 0f00000000;
	setp.lt.f32 	%p68, %f86, 0f00000000;
	setp.lt.f32 	%p69, %f85, 0f00000000;
	setp.lt.f32 	%p70, %f84, 0f00000000;
	setp.lt.f32 	%p71, %f83, 0f00000000;
	setp.lt.f32 	%p72, %f82, 0f00000000;
	setp.lt.f32 	%p73, %f81, 0f00000000;
	setp.lt.f32 	%p74, %f80, 0f00000000;
	setp.lt.f32 	%p75, %f79, 0f00000000;
	setp.lt.f32 	%p76, %f78, 0f00000000;
	setp.lt.f32 	%p77, %f77, 0f00000000;
	setp.lt.f32 	%p78, %f76, 0f00000000;
	setp.lt.f32 	%p79, %f75, 0f00000000;
	setp.lt.f32 	%p80, %f74, 0f00000000;
	setp.lt.f32 	%p81, %f73, 0f00000000;
	setp.lt.f32 	%p82, %f72, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f88, 0f00000000, %f72, %p82;
	selp.f32 	%f89, 0f00000000, %f73, %p81;
	selp.f32 	%f90, 0f00000000, %f74, %p80;
	selp.f32 	%f91, 0f00000000, %f75, %p79;
	selp.f32 	%f92, 0f00000000, %f76, %p78;
	selp.f32 	%f93, 0f00000000, %f77, %p77;
	selp.f32 	%f94, 0f00000000, %f78, %p76;
	selp.f32 	%f95, 0f00000000, %f79, %p75;
	selp.f32 	%f96, 0f00000000, %f80, %p74;
	selp.f32 	%f97, 0f00000000, %f81, %p73;
	selp.f32 	%f98, 0f00000000, %f82, %p72;
	selp.f32 	%f99, 0f00000000, %f83, %p71;
	selp.f32 	%f100, 0f00000000, %f84, %p70;
	selp.f32 	%f101, 0f00000000, %f85, %p69;
	selp.f32 	%f102, 0f00000000, %f86, %p68;
	selp.f32 	%f103, 0f00000000, %f87, %p67;
	bar.sync 	0;
	shl.b32 	%r247, %r159, 4;
	and.b32  	%r248, %r247, 4080;
	shr.u32 	%r249, %r248, 2;
	add.s32 	%r250, %r222, %r249;
	shl.b32 	%r251, %r248, 2;
	add.s32 	%r62, %r250, %r251;
	mov.b32 	%r63, %f88;
	// begin inline asm
	@%p5 st.shared.b32 [ %r62 + 0 ], %r63;
	// end inline asm
	add.s32 	%r64, %r62, 4;
	mov.b32 	%r65, %f89;
	// begin inline asm
	@%p5 st.shared.b32 [ %r64 + 0 ], %r65;
	// end inline asm
	add.s32 	%r66, %r62, 8;
	mov.b32 	%r67, %f90;
	// begin inline asm
	@%p5 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	add.s32 	%r68, %r62, 12;
	mov.b32 	%r69, %f91;
	// begin inline asm
	@%p5 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	add.s32 	%r70, %r62, 16;
	mov.b32 	%r71, %f92;
	// begin inline asm
	@%p5 st.shared.b32 [ %r70 + 0 ], %r71;
	// end inline asm
	add.s32 	%r72, %r62, 20;
	mov.b32 	%r73, %f93;
	// begin inline asm
	@%p5 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	add.s32 	%r74, %r62, 24;
	mov.b32 	%r75, %f94;
	// begin inline asm
	@%p5 st.shared.b32 [ %r74 + 0 ], %r75;
	// end inline asm
	add.s32 	%r76, %r62, 28;
	mov.b32 	%r77, %f95;
	// begin inline asm
	@%p5 st.shared.b32 [ %r76 + 0 ], %r77;
	// end inline asm
	add.s32 	%r78, %r62, 32;
	mov.b32 	%r79, %f96;
	// begin inline asm
	@%p5 st.shared.b32 [ %r78 + 0 ], %r79;
	// end inline asm
	add.s32 	%r80, %r62, 36;
	mov.b32 	%r81, %f97;
	// begin inline asm
	@%p5 st.shared.b32 [ %r80 + 0 ], %r81;
	// end inline asm
	add.s32 	%r82, %r62, 40;
	mov.b32 	%r83, %f98;
	// begin inline asm
	@%p5 st.shared.b32 [ %r82 + 0 ], %r83;
	// end inline asm
	add.s32 	%r84, %r62, 44;
	mov.b32 	%r85, %f99;
	// begin inline asm
	@%p5 st.shared.b32 [ %r84 + 0 ], %r85;
	// end inline asm
	add.s32 	%r86, %r62, 48;
	mov.b32 	%r87, %f100;
	// begin inline asm
	@%p5 st.shared.b32 [ %r86 + 0 ], %r87;
	// end inline asm
	add.s32 	%r88, %r62, 52;
	mov.b32 	%r89, %f101;
	// begin inline asm
	@%p5 st.shared.b32 [ %r88 + 0 ], %r89;
	// end inline asm
	add.s32 	%r90, %r62, 56;
	mov.b32 	%r91, %f102;
	// begin inline asm
	@%p5 st.shared.b32 [ %r90 + 0 ], %r91;
	// end inline asm
	add.s32 	%r92, %r62, 60;
	mov.b32 	%r93, %f103;
	// begin inline asm
	@%p5 st.shared.b32 [ %r92 + 0 ], %r93;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r252, %r159, 252;
	add.s32 	%r253, %r222, %r252;
	add.s32 	%r254, %r253, %r224;
	ld.shared.f32 	%f104, [%r254];
	ld.shared.f32 	%f105, [%r254+4];
	ld.shared.f32 	%f106, [%r254+8];
	ld.shared.f32 	%f107, [%r254+12];
	or.b32  	%r255, %r220, 1024;
	shr.u32 	%r256, %r255, 4;
	shl.b32 	%r257, %r256, 2;
	add.s32 	%r258, %r222, %r257;
	add.s32 	%r259, %r258, %r224;
	ld.shared.f32 	%f108, [%r259+4096];
	ld.shared.f32 	%f109, [%r259+4100];
	ld.shared.f32 	%f110, [%r259+4104];
	ld.shared.f32 	%f111, [%r259+4108];
	or.b32  	%r260, %r220, 2048;
	shr.u32 	%r261, %r260, 4;
	shl.b32 	%r262, %r261, 2;
	add.s32 	%r263, %r222, %r262;
	add.s32 	%r264, %r263, %r224;
	ld.shared.f32 	%f112, [%r264+8192];
	ld.shared.f32 	%f113, [%r264+8196];
	ld.shared.f32 	%f114, [%r264+8200];
	ld.shared.f32 	%f115, [%r264+8204];
	or.b32  	%r265, %r220, 3072;
	shr.u32 	%r266, %r265, 4;
	shl.b32 	%r267, %r266, 2;
	add.s32 	%r268, %r222, %r267;
	add.s32 	%r269, %r268, %r224;
	ld.shared.f32 	%f116, [%r269+12288];
	ld.shared.f32 	%f117, [%r269+12292];
	ld.shared.f32 	%f118, [%r269+12296];
	ld.shared.f32 	%f119, [%r269+12300];
$L__tmp2:
	.loc	1 50 20                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:50:20
	add.f32 	%f120, %f104, %f35;
	add.f32 	%f121, %f105, %f34;
	add.f32 	%f122, %f106, %f33;
	add.f32 	%f123, %f107, %f32;
	add.f32 	%f124, %f108, %f31;
	add.f32 	%f125, %f109, %f30;
	add.f32 	%f126, %f110, %f29;
	add.f32 	%f127, %f111, %f28;
	add.f32 	%f128, %f112, %f27;
	add.f32 	%f129, %f113, %f26;
	add.f32 	%f130, %f114, %f25;
	add.f32 	%f131, %f115, %f24;
	add.f32 	%f132, %f116, %f23;
	add.f32 	%f133, %f117, %f22;
	add.f32 	%f134, %f118, %f21;
	add.f32 	%f135, %f119, %f20;
	.loc	1 51 40                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:51:40
	add.s32 	%r270, %r239, %r178;
	add.s32 	%r271, %r241, %r178;
	add.s32 	%r272, %r243, %r178;
	add.s32 	%r273, %r245, %r178;
	.loc	1 51 25                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:51:25
	mul.wide.s32 	%rd38, %r270, 4;
	add.s64 	%rd13, %rd27, %rd38;
	mul.wide.s32 	%rd39, %r271, 4;
	add.s64 	%rd14, %rd27, %rd39;
	mul.wide.s32 	%rd40, %r272, 4;
	add.s64 	%rd15, %rd27, %rd40;
	mul.wide.s32 	%rd41, %r273, 4;
	add.s64 	%rd16, %rd27, %rd41;
	.loc	1 51 59                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:51:59
	mov.b32 	%r94, %f104;
	mov.b32 	%r95, %f105;
	mov.b32 	%r96, %f106;
	mov.b32 	%r97, %f107;
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd13 + 0 ], { %r94, %r95, %r96, %r97 };
	// end inline asm
	mov.b32 	%r98, %f108;
	mov.b32 	%r99, %f109;
	mov.b32 	%r100, %f110;
	mov.b32 	%r101, %f111;
	// begin inline asm
	@%p14 st.global.v4.b32 [ %rd14 + 0 ], { %r98, %r99, %r100, %r101 };
	// end inline asm
	mov.b32 	%r102, %f112;
	mov.b32 	%r103, %f113;
	mov.b32 	%r104, %f114;
	mov.b32 	%r105, %f115;
	// begin inline asm
	@%p15 st.global.v4.b32 [ %rd15 + 0 ], { %r102, %r103, %r104, %r105 };
	// end inline asm
	mov.b32 	%r106, %f116;
	mov.b32 	%r107, %f117;
	mov.b32 	%r108, %f118;
	mov.b32 	%r109, %f119;
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd16 + 0 ], { %r106, %r107, %r108, %r109 };
	// end inline asm
	.loc	1 52 25                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:52:25
	add.s64 	%rd17, %rd28, %rd29;
	add.s64 	%rd18, %rd28, %rd30;
	add.s64 	%rd19, %rd28, %rd31;
	add.s64 	%rd20, %rd28, %rd32;
	.loc	1 52 58                         // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:52:58
	bar.sync 	0;
	shl.b32 	%r274, %r159, 10;
	and.b32  	%r275, %r274, 3072;
	or.b32  	%r276, %r275, %r164;
	shr.u32 	%r277, %r275, 4;
	add.s32 	%r278, %r222, %r277;
	shl.b32 	%r279, %r276, 2;
	add.s32 	%r110, %r278, %r279;
	mov.b32 	%r111, %f120;
	// begin inline asm
	@%p5 st.shared.b32 [ %r110 + 0 ], %r111;
	// end inline asm
	or.b32  	%r280, %r275, 256;
	shr.u32 	%r281, %r280, 4;
	add.s32 	%r282, %r222, %r281;
	add.s32 	%r283, %r282, %r279;
	add.s32 	%r112, %r283, 1024;
	mov.b32 	%r113, %f121;
	// begin inline asm
	@%p5 st.shared.b32 [ %r112 + 0 ], %r113;
	// end inline asm
	or.b32  	%r284, %r275, 512;
	shr.u32 	%r285, %r284, 4;
	add.s32 	%r286, %r222, %r285;
	add.s32 	%r287, %r286, %r279;
	add.s32 	%r114, %r287, 2048;
	mov.b32 	%r115, %f122;
	// begin inline asm
	@%p5 st.shared.b32 [ %r114 + 0 ], %r115;
	// end inline asm
	or.b32  	%r288, %r275, 768;
	shr.u32 	%r289, %r288, 4;
	add.s32 	%r290, %r222, %r289;
	add.s32 	%r291, %r290, %r279;
	add.s32 	%r116, %r291, 3072;
	mov.b32 	%r117, %f123;
	// begin inline asm
	@%p5 st.shared.b32 [ %r116 + 0 ], %r117;
	// end inline asm
	add.s32 	%r118, %r110, 256;
	mov.b32 	%r119, %f124;
	// begin inline asm
	@%p5 st.shared.b32 [ %r118 + 0 ], %r119;
	// end inline asm
	add.s32 	%r120, %r283, 1280;
	mov.b32 	%r121, %f125;
	// begin inline asm
	@%p5 st.shared.b32 [ %r120 + 0 ], %r121;
	// end inline asm
	add.s32 	%r122, %r287, 2304;
	mov.b32 	%r123, %f126;
	// begin inline asm
	@%p5 st.shared.b32 [ %r122 + 0 ], %r123;
	// end inline asm
	add.s32 	%r124, %r291, 3328;
	mov.b32 	%r125, %f127;
	// begin inline asm
	@%p5 st.shared.b32 [ %r124 + 0 ], %r125;
	// end inline asm
	add.s32 	%r126, %r110, 512;
	mov.b32 	%r127, %f128;
	// begin inline asm
	@%p5 st.shared.b32 [ %r126 + 0 ], %r127;
	// end inline asm
	add.s32 	%r128, %r283, 1536;
	mov.b32 	%r129, %f129;
	// begin inline asm
	@%p5 st.shared.b32 [ %r128 + 0 ], %r129;
	// end inline asm
	add.s32 	%r130, %r287, 2560;
	mov.b32 	%r131, %f130;
	// begin inline asm
	@%p5 st.shared.b32 [ %r130 + 0 ], %r131;
	// end inline asm
	add.s32 	%r132, %r291, 3584;
	mov.b32 	%r133, %f131;
	// begin inline asm
	@%p5 st.shared.b32 [ %r132 + 0 ], %r133;
	// end inline asm
	add.s32 	%r134, %r110, 768;
	mov.b32 	%r135, %f132;
	// begin inline asm
	@%p5 st.shared.b32 [ %r134 + 0 ], %r135;
	// end inline asm
	add.s32 	%r136, %r283, 1792;
	mov.b32 	%r137, %f133;
	// begin inline asm
	@%p5 st.shared.b32 [ %r136 + 0 ], %r137;
	// end inline asm
	add.s32 	%r138, %r287, 2816;
	mov.b32 	%r139, %f134;
	// begin inline asm
	@%p5 st.shared.b32 [ %r138 + 0 ], %r139;
	// end inline asm
	add.s32 	%r140, %r291, 3840;
	mov.b32 	%r141, %f135;
	// begin inline asm
	@%p5 st.shared.b32 [ %r140 + 0 ], %r141;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r292, %r256, 112;
	add.s32 	%r293, %r222, %r292;
	add.s32 	%r294, %r293, %r224;
	ld.shared.v4.u32 	{%r146, %r147, %r148, %r149}, [%r294+4096];
	and.b32  	%r295, %r261, 176;
	add.s32 	%r296, %r222, %r295;
	add.s32 	%r297, %r296, %r224;
	ld.shared.v4.u32 	{%r150, %r151, %r152, %r153}, [%r297+8192];
	and.b32  	%r298, %r266, 240;
	add.s32 	%r299, %r222, %r298;
	add.s32 	%r300, %r299, %r224;
	ld.shared.v4.u32 	{%r154, %r155, %r156, %r157}, [%r300+12288];
	ld.shared.v4.u32 	{%r142, %r143, %r144, %r145}, [%r19];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd17 + 0 ], { %r142, %r143, %r144, %r145 };
	// end inline asm
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd18 + 0 ], { %r146, %r147, %r148, %r149 };
	// end inline asm
	// begin inline asm
	@%p3 st.global.v4.b32 [ %rd19 + 0 ], { %r150, %r151, %r152, %r153 };
	// end inline asm
	// begin inline asm
	@%p4 st.global.v4.b32 [ %rd20 + 0 ], { %r154, %r155, %r156, %r157 };
	// end inline asm
	.loc	1 52 4                          // c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py:52:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7d/c7dzfqqci2667ocbe5ipsyrgj46pujii763s7f535gidrnwflcad.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 210                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 100
.b8 122
.b8 102
.b8 113
.b8 113
.b8 99
.b8 105
.b8 50
.b8 54
.b8 54
.b8 55
.b8 111
.b8 99
.b8 98
.b8 101
.b8 53
.b8 105
.b8 112
.b8 115
.b8 121
.b8 114
.b8 103
.b8 106
.b8 52
.b8 54
.b8 112
.b8 117
.b8 106
.b8 105
.b8 105
.b8 55
.b8 54
.b8 51
.b8 115
.b8 55
.b8 102
.b8 53
.b8 51
.b8 53
.b8 103
.b8 105
.b8 100
.b8 114
.b8 110
.b8 119
.b8 102
.b8 108
.b8 99
.b8 97
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 100
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x44 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 49
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa7:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
