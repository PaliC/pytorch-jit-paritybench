; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_convolution_sigmoid_84(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = sext i32 %11 to i64, !dbg !14
  %13 = getelementptr float, ptr addrspace(1) %1, i64 %12, !dbg !14
  %14 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %13, i1 true) #1, !dbg !15
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !15
  %16 = extractvalue { i32, i32 } %14, 1, !dbg !15
  %17 = bitcast i32 %15 to float, !dbg !15
  %18 = bitcast i32 %16 to float, !dbg !15
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !16
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !17
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !17
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !17
  %23 = bitcast i32 %21 to float, !dbg !17
  %24 = bitcast i32 %22 to float, !dbg !17
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #1, !dbg !18
  %26 = bitcast i32 %25 to float, !dbg !18
  %27 = fadd float %23, %26, !dbg !19
  %28 = fadd float %24, %26, !dbg !19
  %29 = fadd float %27, %17, !dbg !20
  %30 = fadd float %28, %18, !dbg !20
  %31 = fsub float 0.000000e+00, %29, !dbg !21
  %32 = fsub float 0.000000e+00, %30, !dbg !21
  %33 = fmul float %31, 0x3FF7154760000000, !dbg !25
  %34 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %33) #1, !dbg !25
  %35 = fmul float %32, 0x3FF7154760000000, !dbg !25
  %36 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %35) #1, !dbg !25
  %37 = fadd float %34, 1.000000e+00, !dbg !26
  %38 = fadd float %36, 1.000000e+00, !dbg !26
  %39 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %37) #1, !dbg !27
  %40 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %38) #1, !dbg !27
  %41 = fsub float 0.000000e+00, %17, !dbg !28
  %42 = fsub float 0.000000e+00, %18, !dbg !28
  %43 = fmul float %41, 0x3FF7154760000000, !dbg !30
  %44 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %43) #1, !dbg !30
  %45 = fmul float %42, 0x3FF7154760000000, !dbg !30
  %46 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %45) #1, !dbg !30
  %47 = fadd float %44, 1.000000e+00, !dbg !31
  %48 = fadd float %46, 1.000000e+00, !dbg !31
  %49 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %47) #1, !dbg !32
  %50 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %48) #1, !dbg !32
  %51 = bitcast float %39 to i32, !dbg !33
  %52 = bitcast float %40 to i32, !dbg !33
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %51, i32 %52, ptr addrspace(1) %19, i1 true) #1, !dbg !33
  %53 = getelementptr float, ptr addrspace(1) %3, i64 %12, !dbg !34
  %54 = bitcast float %49 to i32, !dbg !35
  %55 = bitcast float %50 to i32, !dbg !35
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %54, i32 %55, ptr addrspace(1) %53, i1 true) #1, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnpj6nkktqis4eynomceo32binutpw3oynm6ryiif3kvqe3w7ar2.py", directory: "inductor_cache/np")
!4 = !{ptr @triton_poi_fused_add_convolution_sigmoid_84, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_convolution_sigmoid_84, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_convolution_sigmoid_84", linkageName: "triton_poi_fused_add_convolution_sigmoid_84", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 30, scope: !7)
!15 = !DILocation(line: 25, column: 35, scope: !7)
!16 = !DILocation(line: 26, column: 34, scope: !7)
!17 = !DILocation(line: 26, column: 39, scope: !7)
!18 = !DILocation(line: 27, column: 19, scope: !7)
!19 = !DILocation(line: 29, column: 18, scope: !7)
!20 = !DILocation(line: 30, column: 18, scope: !7)
!21 = !DILocation(line: 47, column: 30, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!24 = !DILocation(line: 31, column: 22, scope: !7)
!25 = !DILocation(line: 47, column: 29, scope: !22, inlinedAt: !24)
!26 = !DILocation(line: 47, column: 20, scope: !22, inlinedAt: !24)
!27 = !DILocation(line: 47, column: 16, scope: !22, inlinedAt: !24)
!28 = !DILocation(line: 47, column: 30, scope: !22, inlinedAt: !29)
!29 = !DILocation(line: 32, column: 22, scope: !7)
!30 = !DILocation(line: 47, column: 29, scope: !22, inlinedAt: !29)
!31 = !DILocation(line: 47, column: 20, scope: !22, inlinedAt: !29)
!32 = !DILocation(line: 47, column: 16, scope: !22, inlinedAt: !29)
!33 = !DILocation(line: 33, column: 39, scope: !7)
!34 = !DILocation(line: 34, column: 25, scope: !7)
!35 = !DILocation(line: 34, column: 36, scope: !7)
!36 = !DILocation(line: 34, column: 4, scope: !7)
