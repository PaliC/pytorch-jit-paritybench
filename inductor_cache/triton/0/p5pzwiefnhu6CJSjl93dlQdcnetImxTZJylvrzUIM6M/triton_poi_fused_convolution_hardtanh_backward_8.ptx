//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_hardtanh_backward_8 // -- Begin function triton_poi_fused_convolution_hardtanh_backward_8
                                        // @triton_poi_fused_convolution_hardtanh_backward_8
.visible .entry triton_poi_fused_convolution_hardtanh_backward_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_hardtanh_backward_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_hardtanh_backward_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_hardtanh_backward_8_param_2,
	.param .u32 triton_poi_fused_convolution_hardtanh_backward_8_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<28>;
	.reg .f32 	%f<13>;
	.reg .b64 	%rd<10>;
	.loc	1 19 0                          // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_convolution_hardtanh_backward_8_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused_convolution_hardtanh_backward_8_param_1];
$L__tmp0:
	.loc	1 21 28                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:21:33
	shl.b32 	%r11, %r1, 9;
	ld.param.u64 	%rd6, [triton_poi_fused_convolution_hardtanh_backward_8_param_2];
	.loc	1 22 36                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:22:36
	mov.u32 	%r12, %tid.x;
	shl.b32 	%r13, %r12, 2;
	and.b32  	%r14, %r13, 508;
	.loc	1 22 23                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:22:23
	or.b32  	%r15, %r11, %r14;
	.loc	1 23 21                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:23:21
	setp.lt.s32 	%p1, %r15, 57600;
	.loc	1 25 19                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:25:19
	bfe.s32 	%r16, %r1, 22, 1;
	shr.u32 	%r17, %r16, 26;
	add.s32 	%r18, %r15, %r17;
	and.b32  	%r19, %r18, -64;
	sub.s32 	%r20, %r15, %r19;
	.loc	1 26 30                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:26:30
	cvt.s64.s32 	%rd7, %r15;
	mul.wide.s32 	%rd8, %r15, 4;
	add.s64 	%rd1, %rd4, %rd8;
	.loc	1 26 35                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:26:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 27 30                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:27:30
	mul.wide.s32 	%rd9, %r20, 4;
	add.s64 	%rd2, %rd5, %rd9;
	.loc	1 27 35                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:27:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 25                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:34:25
	add.s64 	%rd3, %rd6, %rd7;
	.loc	1 26 35                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:26:35
	mov.b32 	%f1, %r5;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r3;
	mov.b32 	%f4, %r2;
	.loc	1 27 35                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:27:35
	mov.b32 	%f5, %r9;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r7;
	mov.b32 	%f8, %r6;
	.loc	1 28 18                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:28:18
	add.f32 	%f9, %f4, %f8;
	add.f32 	%f10, %f3, %f7;
	add.f32 	%f11, %f2, %f6;
	add.f32 	%f12, %f1, %f5;
	.loc	1 30 19                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:30:19
	setp.le.f32 	%p4, %f12, 0f00000000;
	setp.le.f32 	%p5, %f11, 0f00000000;
	setp.le.f32 	%p6, %f10, 0f00000000;
	setp.le.f32 	%p7, %f9, 0f00000000;
	.loc	1 32 19                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:32:19
	setp.ge.f32 	%p8, %f12, 0f40C00000;
	setp.ge.f32 	%p9, %f11, 0f40C00000;
	setp.ge.f32 	%p10, %f10, 0f40C00000;
	setp.ge.f32 	%p11, %f9, 0f40C00000;
	.loc	1 33 18                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:33:18
	or.pred  	%p12, %p7, %p11;
	or.pred  	%p13, %p6, %p10;
	or.pred  	%p14, %p5, %p9;
	or.pred  	%p15, %p4, %p8;
	.loc	1 34 36                         // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:34:36
	selp.u32 	%r21, 1, 0, %p15;
	selp.u32 	%r22, 1, 0, %p14;
	prmt.b32 	%r23, %r22, %r21, 0x3340U;
	selp.u32 	%r24, 1, 0, %p13;
	selp.u32 	%r25, 1, 0, %p12;
	prmt.b32 	%r26, %r25, %r24, 0x3340U;
	prmt.b32 	%r27, %r26, %r23, 0x5410U;
	// begin inline asm
	@%p1 st.global.b32 [ %rd3 + 0 ], { %r27 };
	// end inline asm
	.loc	1 34 4                          // c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py:34:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/4x/c4xqy4z2au546cwdx3npohjoael4cci5eed76v7hx4d2wa35czx3.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 120
.b8 113
.b8 121
.b8 52
.b8 122
.b8 50
.b8 97
.b8 117
.b8 53
.b8 52
.b8 54
.b8 99
.b8 119
.b8 100
.b8 120
.b8 51
.b8 110
.b8 112
.b8 111
.b8 104
.b8 106
.b8 111
.b8 97
.b8 101
.b8 108
.b8 52
.b8 99
.b8 99
.b8 105
.b8 53
.b8 101
.b8 101
.b8 100
.b8 55
.b8 54
.b8 118
.b8 55
.b8 104
.b8 120
.b8 52
.b8 100
.b8 50
.b8 119
.b8 97
.b8 51
.b8 53
.b8 99
.b8 122
.b8 120
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 52
.b8 120
.b8 0
	}
	.section	.debug_macinfo	{	}
