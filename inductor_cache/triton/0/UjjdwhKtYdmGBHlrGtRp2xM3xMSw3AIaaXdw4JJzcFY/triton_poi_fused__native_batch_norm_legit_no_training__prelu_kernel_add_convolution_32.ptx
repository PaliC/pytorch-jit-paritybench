//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_9,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_10,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_11
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<33>;
	.reg .b32 	%r<150>;
	.reg .f32 	%f<106>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_0];
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_1];
$L__tmp0:
	.loc	1 22 28                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:22:33
	shl.b32 	%r92, %r1, 6;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_2];
	.loc	1 23 44                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:23:44
	mov.u32 	%r93, %tid.x;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_3];
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_4];
	bfe.u32 	%r95, %r93, 2, 5;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_5];
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_6];
	shl.b32 	%r96, %r93, 2;
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_7];
	and.b32  	%r97, %r96, 12;
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_8];
	.loc	1 23 23                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:23:23
	or.b32  	%r98, %r92, %r95;
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_9];
	.loc	1 25 28                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:25:33
	shl.b32 	%r99, %r2, 4;
	.loc	1 26 23                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:26:23
	or.b32  	%r100, %r99, %r97;
	.loc	1 27 21                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:27:21
	setp.lt.s32 	%p1, %r100, 16;
	.loc	1 23 23                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:23:23
	shl.b32 	%r101, %r98, 4;
	.loc	1 32 39                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:32:39
	add.s32 	%r102, %r100, %r101;
	add.s32 	%r103, %r102, 512;
	.loc	1 32 34                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:32:34
	mul.wide.s32 	%rd26, %r102, 4;
	add.s64 	%rd1, %rd17, %rd26;
	mul.wide.s32 	%rd27, %r103, 4;
	add.s64 	%rd2, %rd17, %rd27;
	.loc	1 32 47                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:32:47
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:33:30
	mul.wide.s32 	%rd28, %r100, 4;
	add.s64 	%rd3, %rd18, %rd28;
	.loc	1 33 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:33:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:34:30
	add.s64 	%rd4, %rd19, %rd28;
	.loc	1 34 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:34:35
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:35:30
	add.s64 	%rd5, %rd20, %rd28;
	.loc	1 35 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:35:35
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r19;
	mov.b32 	%f2, %r20;
	mov.b32 	%f3, %r21;
	mov.b32 	%f4, %r22;
	.loc	1 36 31                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:36:31
	add.s64 	%rd6, %rd21, %rd28;
	.loc	1 36 36                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:36:36
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:37:31
	add.s64 	%rd7, %rd22, %rd28;
	.loc	1 37 36                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:37:36
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:38:31
	add.s64 	%rd8, %rd23, %rd26;
	add.s64 	%rd9, %rd23, %rd27;
	.loc	1 38 44                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:38:44
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd9 + 0 ];
	// end inline asm
	mov.pred 	%p10, -1;
	.loc	1 39 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:39:20
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p10 ld.global.b32 { %r39 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 44 18                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:44:18
	add.f32 	%f5, %f1, 0f3727C5AC;
	add.f32 	%f6, %f2, 0f3727C5AC;
	add.f32 	%f7, %f3, 0f3727C5AC;
	add.f32 	%f8, %f4, 0f3727C5AC;
	.loc	1 45 26                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:45:26
	sqrt.approx.ftz.f32 	%f9, %f5;
	sqrt.approx.ftz.f32 	%f10, %f6;
	sqrt.approx.ftz.f32 	%f11, %f7;
	sqrt.approx.ftz.f32 	%f12, %f8;
	.loc	1 39 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:39:20
	mov.b32 	%f13, %r39;
	.loc	1 23 44                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:23:44
	and.b32  	%r104, %r96, 60;
	.loc	1 23 23                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:23:23
	or.b32  	%r105, %r92, %r104;
	.loc	1 31 19                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:31:19
	bfe.s32 	%r106, %r1, 25, 1;
	shr.u32 	%r107, %r106, 22;
	add.s32 	%r108, %r105, %r107;
	.loc	1 30 19                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:30:19
	and.b32  	%r109, %r108, -1024;
	sub.s32 	%r110, %r105, %r109;
	.loc	1 26 44                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:26:44
	bfe.u32 	%r111, %r93, 4, 3;
	.loc	1 26 23                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:26:23
	or.b32  	%r112, %r111, %r99;
	or.b32  	%r113, %r112, 8;
	.loc	1 27 21                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:27:21
	setp.lt.s32 	%p24, %r113, 16;
	setp.lt.s32 	%p23, %r112, 16;
	.loc	1 47 19                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:47:19
	mov.b32 	%r42, %f9;
	mov.b32 	%r41, 1065353216;
	// begin inline asm
	div.full.f32 %r40, %r41, %r42;
	// end inline asm
	mov.b32 	%f14, %r40;
	mov.b32 	%r45, %f10;
	// begin inline asm
	div.full.f32 %r43, %r41, %r45;
	// end inline asm
	mov.b32 	%f15, %r43;
	mov.b32 	%r48, %f11;
	// begin inline asm
	div.full.f32 %r46, %r41, %r48;
	// end inline asm
	mov.b32 	%f16, %r46;
	mov.b32 	%r51, %f12;
	// begin inline asm
	div.full.f32 %r49, %r41, %r51;
	// end inline asm
	mov.b32 	%f17, %r49;
	.loc	1 33 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:33:35
	mov.b32 	%f18, %r14;
	mov.b32 	%f19, %r13;
	mov.b32 	%f20, %r12;
	mov.b32 	%f21, %r11;
	.loc	1 34 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:34:35
	mov.b32 	%f22, %r15;
	mov.b32 	%f23, %r16;
	mov.b32 	%f24, %r17;
	mov.b32 	%f25, %r18;
	.loc	1 32 47                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:32:47
	mov.b32 	%f26, %r10;
	mov.b32 	%f27, %r9;
	mov.b32 	%f28, %r8;
	mov.b32 	%f29, %r7;
	mov.b32 	%f30, %r6;
	mov.b32 	%f31, %r5;
	mov.b32 	%f32, %r4;
	mov.b32 	%f33, %r3;
	.loc	1 41 18                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:41:18
	add.f32 	%f34, %f21, %f33;
	add.f32 	%f35, %f20, %f32;
	add.f32 	%f36, %f19, %f31;
	add.f32 	%f37, %f18, %f30;
	add.f32 	%f38, %f21, %f29;
	add.f32 	%f39, %f20, %f28;
	add.f32 	%f40, %f19, %f27;
	add.f32 	%f41, %f18, %f26;
	.loc	1 42 18                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:42:18
	sub.f32 	%f42, %f41, %f25;
	sub.f32 	%f43, %f40, %f24;
	sub.f32 	%f44, %f39, %f23;
	sub.f32 	%f45, %f38, %f22;
	sub.f32 	%f46, %f37, %f25;
	sub.f32 	%f47, %f36, %f24;
	sub.f32 	%f48, %f35, %f23;
	sub.f32 	%f49, %f34, %f22;
	.loc	1 38 44                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:38:44
	mov.b32 	%f50, %r38;
	mov.b32 	%f51, %r37;
	mov.b32 	%f52, %r36;
	mov.b32 	%f53, %r35;
	mov.b32 	%f54, %r34;
	mov.b32 	%f55, %r33;
	mov.b32 	%f56, %r32;
	mov.b32 	%f57, %r31;
	.loc	1 37 36                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:37:36
	mov.b32 	%f58, %r27;
	mov.b32 	%f59, %r28;
	mov.b32 	%f60, %r29;
	mov.b32 	%f61, %r30;
	.loc	1 36 36                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:36:36
	mov.b32 	%f62, %r23;
	mov.b32 	%f63, %r24;
	mov.b32 	%f64, %r25;
	mov.b32 	%f65, %r26;
	.loc	1 50 19                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:50:19
	mul.f32 	%f66, %f49, %f14;
	mul.f32 	%f67, %f48, %f15;
	mul.f32 	%f68, %f47, %f16;
	mul.f32 	%f69, %f46, %f17;
	mul.f32 	%f70, %f45, %f14;
	mul.f32 	%f71, %f44, %f15;
	mul.f32 	%f72, %f43, %f16;
	mul.f32 	%f73, %f42, %f17;
	.loc	1 52 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:52:20
	fma.rn.f32 	%f74, %f73, %f65, %f61;
	fma.rn.f32 	%f75, %f72, %f64, %f60;
	fma.rn.f32 	%f76, %f71, %f63, %f59;
	fma.rn.f32 	%f77, %f70, %f62, %f58;
	fma.rn.f32 	%f78, %f69, %f65, %f61;
	fma.rn.f32 	%f79, %f68, %f64, %f60;
	fma.rn.f32 	%f80, %f67, %f63, %f59;
	fma.rn.f32 	%f81, %f66, %f62, %f58;
	.loc	1 53 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:53:20
	add.f32 	%f82, %f81, %f57;
	add.f32 	%f83, %f80, %f56;
	add.f32 	%f84, %f79, %f55;
	add.f32 	%f85, %f78, %f54;
	add.f32 	%f86, %f77, %f53;
	add.f32 	%f87, %f76, %f52;
	add.f32 	%f88, %f75, %f51;
	add.f32 	%f89, %f74, %f50;
	.loc	1 55 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:55:20
	setp.gt.f32 	%p25, %f89, 0f00000000;
	setp.gt.f32 	%p26, %f88, 0f00000000;
	setp.gt.f32 	%p27, %f87, 0f00000000;
	setp.gt.f32 	%p28, %f86, 0f00000000;
	setp.gt.f32 	%p29, %f85, 0f00000000;
	setp.gt.f32 	%p30, %f84, 0f00000000;
	setp.gt.f32 	%p31, %f83, 0f00000000;
	setp.gt.f32 	%p32, %f82, 0f00000000;
	.loc	1 56 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:56:20
	mul.f32 	%f90, %f82, %f13;
	mul.f32 	%f91, %f83, %f13;
	mul.f32 	%f92, %f84, %f13;
	mul.f32 	%f93, %f85, %f13;
	mul.f32 	%f94, %f86, %f13;
	mul.f32 	%f95, %f87, %f13;
	mul.f32 	%f96, %f88, %f13;
	mul.f32 	%f97, %f89, %f13;
	.loc	1 57 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:57:35
	selp.f32 	%f98, %f82, %f90, %p32;
	selp.f32 	%f99, %f83, %f91, %p31;
	selp.f32 	%f100, %f84, %f92, %p30;
	selp.f32 	%f101, %f85, %f93, %p29;
	selp.f32 	%f102, %f86, %f94, %p28;
	selp.f32 	%f103, %f87, %f95, %p27;
	selp.f32 	%f104, %f88, %f96, %p26;
	selp.f32 	%f105, %f89, %f97, %p25;
	.loc	1 58 4                          // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:58:4
	bar.sync 	0;
	.loc	1 59 47                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:59:47
	mov.b32 	%r56, %f38;
	mov.b32 	%r57, %f39;
	mov.b32 	%r58, %f40;
	mov.b32 	%r59, %f41;
	mov.b32 	%r52, %f34;
	mov.b32 	%r53, %f35;
	mov.b32 	%r54, %f36;
	mov.b32 	%r55, %f37;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r52, %r53, %r54, %r55 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r56, %r57, %r58, %r59 };
	// end inline asm
	.loc	1 60 25                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:60:25
	add.s64 	%rd13, %rd24, %rd26;
	add.s64 	%rd14, %rd24, %rd27;
	.loc	1 60 45                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:60:45
	mov.b32 	%r60, %f82;
	mov.b32 	%r61, %f83;
	mov.b32 	%r62, %f84;
	mov.b32 	%r63, %f85;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd13 + 0 ], { %r60, %r61, %r62, %r63 };
	// end inline asm
	mov.b32 	%r64, %f86;
	mov.b32 	%r65, %f87;
	mov.b32 	%r66, %f88;
	mov.b32 	%r67, %f89;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd14 + 0 ], { %r64, %r65, %r66, %r67 };
	// end inline asm
	.loc	1 61 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:35
	shl.b32 	%r114, %r112, 10;
	shl.b32 	%r115, %r113, 10;
	.loc	1 61 46                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:46
	shl.b32 	%r116, %r108, 4;
	and.b32  	%r117, %r116, -16384;
	.loc	1 61 30                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:30
	add.s32 	%r118, %r117, %r110;
	.loc	1 61 40                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:40
	add.s32 	%r119, %r118, %r114;
	add.s32 	%r120, %r118, %r115;
	.loc	1 61 25                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:25
	mul.wide.s32 	%rd29, %r119, 4;
	add.s64 	%rd15, %rd25, %rd29;
	mul.wide.s32 	%rd30, %r120, 4;
	add.s64 	%rd16, %rd25, %rd30;
	.loc	1 61 58                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:58
	shl.b32 	%r121, %r93, 8;
	and.b32  	%r122, %r121, 768;
	or.b32  	%r123, %r122, %r95;
	and.b32  	%r124, %r96, 508;
	shr.u32 	%r125, %r122, 2;
	mov.u32 	%r126, global_smem;
	add.s32 	%r127, %r126, %r125;
	shl.b32 	%r128, %r123, 2;
	add.s32 	%r68, %r127, %r128;
	mov.b32 	%r69, %f98;
	// begin inline asm
	@%p10 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	or.b32  	%r129, %r122, 64;
	shr.u32 	%r130, %r129, 2;
	add.s32 	%r131, %r126, %r130;
	add.s32 	%r132, %r131, %r128;
	add.s32 	%r70, %r132, 256;
	mov.b32 	%r71, %f99;
	// begin inline asm
	@%p10 st.shared.b32 [ %r70 + 0 ], %r71;
	// end inline asm
	or.b32  	%r133, %r122, 128;
	shr.u32 	%r134, %r133, 2;
	add.s32 	%r135, %r126, %r134;
	add.s32 	%r136, %r135, %r128;
	add.s32 	%r72, %r136, 512;
	mov.b32 	%r73, %f100;
	// begin inline asm
	@%p10 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	or.b32  	%r137, %r122, 192;
	shr.u32 	%r138, %r137, 2;
	add.s32 	%r139, %r126, %r138;
	add.s32 	%r140, %r139, %r128;
	add.s32 	%r74, %r140, 768;
	mov.b32 	%r75, %f101;
	// begin inline asm
	@%p10 st.shared.b32 [ %r74 + 0 ], %r75;
	// end inline asm
	add.s32 	%r76, %r68, 128;
	mov.b32 	%r77, %f102;
	// begin inline asm
	@%p10 st.shared.b32 [ %r76 + 0 ], %r77;
	// end inline asm
	add.s32 	%r78, %r132, 384;
	mov.b32 	%r79, %f103;
	// begin inline asm
	@%p10 st.shared.b32 [ %r78 + 0 ], %r79;
	// end inline asm
	add.s32 	%r80, %r136, 640;
	mov.b32 	%r81, %f104;
	// begin inline asm
	@%p10 st.shared.b32 [ %r80 + 0 ], %r81;
	// end inline asm
	add.s32 	%r82, %r140, 896;
	mov.b32 	%r83, %f105;
	// begin inline asm
	@%p10 st.shared.b32 [ %r82 + 0 ], %r83;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r141, %r93, 112;
	add.s32 	%r142, %r126, %r141;
	shl.b32 	%r143, %r124, 2;
	add.s32 	%r144, %r142, %r143;
	or.b32  	%r145, %r124, 512;
	shr.u32 	%r146, %r145, 2;
	and.b32  	%r147, %r146, 240;
	add.s32 	%r148, %r126, %r147;
	add.s32 	%r149, %r148, %r143;
	ld.shared.v4.u32 	{%r88, %r89, %r90, %r91}, [%r149+2048];
	ld.shared.v4.u32 	{%r84, %r85, %r86, %r87}, [%r144];
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd15 + 0 ], { %r84, %r85, %r86, %r87 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd16 + 0 ], { %r88, %r89, %r90, %r91 };
	// end inline asm
	.loc	1 61 4                          // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fq/cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 113
.b8 116
.b8 52
.b8 112
.b8 109
.b8 122
.b8 115
.b8 122
.b8 54
.b8 99
.b8 114
.b8 106
.b8 110
.b8 116
.b8 102
.b8 54
.b8 51
.b8 114
.b8 112
.b8 116
.b8 108
.b8 99
.b8 113
.b8 105
.b8 100
.b8 114
.b8 53
.b8 119
.b8 120
.b8 119
.b8 54
.b8 50
.b8 116
.b8 101
.b8 113
.b8 52
.b8 120
.b8 97
.b8 112
.b8 115
.b8 51
.b8 107
.b8 110
.b8 118
.b8 50
.b8 117
.b8 106
.b8 113
.b8 55
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 113
.b8 0
	}
	.section	.debug_macinfo	{	}
