#loc = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":19:0)
#loc1 = loc(unknown)
#loc21 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":39:24)
#loc28 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":47:26)
#loc50 = loc(callsite(#loc1 at #loc21))
#loc53 = loc(callsite(#loc1 at #loc28))
module {
  tt.func public @triton_per_fused_native_group_norm_relu_threshold_backward_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":19:0), %arg5: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999974E-6> : tensor<8x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.600000e+01> : tensor<8x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<8x16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<8x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_3 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_2 : tensor<8x1xi32> loc(#loc10)
    %10 = arith.muli %5, %cst_3 : tensor<8x1xi32> loc(#loc11)
    %11 = tt.broadcast %8 : tensor<1x16xi32> -> tensor<8x16xi32> loc(#loc12)
    %12 = tt.broadcast %10 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc12)
    %13 = arith.addi %11, %12 : tensor<8x16xi32> loc(#loc12)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc13)
    %15 = tt.addptr %14, %13 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc13)
    %16 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x16xi1> loc(#loc14)
    %17 = tt.load %15, %16, %cst_1 : tensor<8x16x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.addptr %18, %9 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc15)
    %20 = tt.load %19, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.addptr %21, %9 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc17)
    %23 = tt.load %22, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc18)
    %24 = arith.select %16, %17, %cst_1 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc19)
    %25 = "tt.reduce"(%24) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc21)), %arg10: f32 loc(callsite(#loc1 at #loc21))):
      %56 = arith.addf %arg9, %arg10 : f32 loc(#loc56)
      tt.reduce.return %56 : f32 loc(#loc49)
    }) : (tensor<8x16xf32>) -> tensor<8xf32> loc(#loc49)
    %26 = tt.expand_dims %25 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc23)
    %27 = arith.divf %26, %cst_0 : tensor<8x1xf32> loc(#loc24)
    %28 = tt.broadcast %27 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc25)
    %29 = arith.subf %17, %28 : tensor<8x16xf32> loc(#loc25)
    %30 = arith.mulf %29, %29 : tensor<8x16xf32> loc(#loc26)
    %31 = arith.select %16, %30, %cst_1 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc27)
    %32 = "tt.reduce"(%31) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc28)), %arg10: f32 loc(callsite(#loc1 at #loc28))):
      %56 = arith.addf %arg9, %arg10 : f32 loc(#loc57)
      tt.reduce.return %56 : f32 loc(#loc52)
    }) : (tensor<8x16xf32>) -> tensor<8xf32> loc(#loc52)
    %33 = tt.expand_dims %32 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc29)
    %34 = arith.divf %33, %cst_0 : tensor<8x1xf32> loc(#loc30)
    %35 = arith.addf %34, %cst : tensor<8x1xf32> loc(#loc31)
    %36 = tt.extern_elementwise %35 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<8x1xf32>) -> tensor<8x1xf32> loc(#loc32)
    %37 = tt.broadcast %36 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc33)
    %38 = arith.mulf %29, %37 : tensor<8x16xf32> loc(#loc33)
    %39 = tt.broadcast %20 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc34)
    %40 = arith.mulf %38, %39 : tensor<8x16xf32> loc(#loc34)
    %41 = tt.broadcast %23 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc35)
    %42 = arith.addf %40, %41 : tensor<8x16xf32> loc(#loc35)
    %43 = arith.cmpf ogt, %cst_1, %42 : tensor<8x16xf32> loc(#loc54)
    %44 = arith.select %43, %cst_1, %42 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc55)
    %45 = arith.cmpf ole, %44, %cst_1 : tensor<8x16xf32> loc(#loc39)
    %46 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc40)
    %47 = tt.addptr %46, %13 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc40)
    tt.store %47, %44, %16 : tensor<8x16x!tt.ptr<f32>> loc(#loc41)
    %48 = tt.splat %arg5 : !tt.ptr<i1> -> tensor<8x16x!tt.ptr<i1>> loc(#loc42)
    %49 = tt.addptr %48, %13 : tensor<8x16x!tt.ptr<i1>>, tensor<8x16xi32> loc(#loc42)
    %50 = tt.bitcast %49 : tensor<8x16x!tt.ptr<i1>> -> tensor<8x16x!tt.ptr<i8>> loc(#loc43)
    %51 = arith.extui %45 : tensor<8x16xi1> to tensor<8x16xi8> loc(#loc43)
    tt.store %50, %51, %16 : tensor<8x16x!tt.ptr<i8>> loc(#loc43)
    %52 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc44)
    %53 = tt.addptr %52, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc44)
    tt.store %53, %36, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc45)
    %54 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc46)
    %55 = tt.addptr %54, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc46)
    tt.store %55, %27, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc47)
    tt.return loc(#loc48)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":23:28)
#loc3 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":23:33)
#loc4 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":24:36)
#loc5 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":24:44)
#loc6 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":24:23)
#loc7 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":25:21)
#loc8 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":26:26)
#loc9 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":26:34)
#loc10 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":31:19)
#loc11 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":32:38)
#loc12 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":32:35)
#loc13 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":32:30)
#loc14 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":32:43)
#loc15 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":33:31)
#loc16 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":33:36)
#loc17 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":34:31)
#loc18 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":34:36)
#loc19 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":38:33)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc23 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":39:27)
#loc24 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":42:19)
#loc25 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":43:19)
#loc26 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":44:20)
#loc27 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":46:35)
#loc29 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":47:29)
#loc30 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":50:20)
#loc31 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":52:20)
#loc32 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":53:28)
#loc33 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":54:20)
#loc34 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":55:20)
#loc35 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":56:20)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc37 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":58:42)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc39 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":60:21)
#loc40 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":61:25)
#loc41 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":61:45)
#loc42 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":62:25)
#loc43 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":62:45)
#loc44 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":63:25)
#loc45 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":63:37)
#loc46 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":64:25)
#loc47 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":64:37)
#loc48 = loc("inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py":64:4)
#loc49 = loc(callsite(#loc20 at #loc21))
#loc51 = loc(callsite(#loc22 at #loc20))
#loc52 = loc(callsite(#loc20 at #loc28))
#loc54 = loc(callsite(#loc36 at #loc37))
#loc55 = loc(callsite(#loc38 at #loc37))
#loc56 = loc(callsite(#loc51 at #loc21))
#loc57 = loc(callsite(#loc51 at #loc28))
