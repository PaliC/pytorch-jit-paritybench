//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_native_group_norm_relu_threshold_backward_0 // -- Begin function triton_per_fused_native_group_norm_relu_threshold_backward_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_native_group_norm_relu_threshold_backward_0
.visible .entry triton_per_fused_native_group_norm_relu_threshold_backward_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_relu_threshold_backward_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_relu_threshold_backward_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_relu_threshold_backward_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_relu_threshold_backward_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_relu_threshold_backward_0_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_relu_threshold_backward_0_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_relu_threshold_backward_0_param_6,
	.param .u32 triton_per_fused_native_group_norm_relu_threshold_backward_0_param_7,
	.param .u32 triton_per_fused_native_group_norm_relu_threshold_backward_0_param_8
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<62>;
	.reg .f32 	%f<37>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd10, [triton_per_fused_native_group_norm_relu_threshold_backward_0_param_0];
	ld.param.u64 	%rd11, [triton_per_fused_native_group_norm_relu_threshold_backward_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:23:33
	shl.b32 	%r30, %r1, 3;
	ld.param.u64 	%rd12, [triton_per_fused_native_group_norm_relu_threshold_backward_0_param_2];
	ld.param.u64 	%rd13, [triton_per_fused_native_group_norm_relu_threshold_backward_0_param_3];
	.loc	1 24 44                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:24:44
	mov.u32 	%r31, %tid.x;
	ld.param.u64 	%rd14, [triton_per_fused_native_group_norm_relu_threshold_backward_0_param_4];
	bfe.u32 	%r32, %r31, 3, 3;
	ld.param.u64 	%rd15, [triton_per_fused_native_group_norm_relu_threshold_backward_0_param_5];
	and.b32  	%r33, %r31, 7;
	ld.param.u64 	%rd16, [triton_per_fused_native_group_norm_relu_threshold_backward_0_param_6];
	.loc	1 24 23                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:24:23
	or.b32  	%r34, %r30, %r32;
	.loc	1 25 21                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:25:21
	setp.lt.s32 	%p1, %r34, 16;
	.loc	1 26 34                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:26:34
	shl.b32 	%r35, %r31, 1;
	and.b32  	%r36, %r35, 14;
	.loc	1 31 19                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:31:19
	bfe.s32 	%r37, %r1, 28, 1;
	shr.u32 	%r38, %r37, 30;
	add.s32 	%r39, %r34, %r38;
	and.b32  	%r40, %r39, -4;
	sub.s32 	%r41, %r34, %r40;
	.loc	1 32 38                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:32:38
	shl.b32 	%r42, %r34, 4;
	.loc	1 32 35                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:32:35
	or.b32  	%r43, %r42, %r36;
	.loc	1 32 30                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:32:30
	cvt.s64.s32 	%rd17, %r43;
	mul.wide.s32 	%rd18, %r43, 4;
	add.s64 	%rd1, %rd10, %rd18;
	mov.b32 	%r4, 0;
	.loc	1 32 43                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:32:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 33 31                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:33:31
	mul.wide.s32 	%rd19, %r41, 4;
	add.s64 	%rd2, %rd11, %rd19;
	.loc	1 33 36                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:33:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 31                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:34:31
	add.s64 	%rd4, %rd12, %rd19;
	.loc	1 34 36                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:34:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd4 + 0 ];
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3, %f1, %f2;
	selp.f32 	%f4, %f3, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f4;
	shfl.sync.bfly.b32	%r45, %r44, 4, 31, -1;
	mov.b32 	%f5, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f4, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f6;
	shfl.sync.bfly.b32	%r47, %r46, 2, 31, -1;
	mov.b32 	%f7, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f6, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f8;
	shfl.sync.bfly.b32	%r49, %r48, 1, 31, -1;
	mov.b32 	%f9, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
$L__tmp2:
	.loc	1 42 19                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:42:19
	shl.b32 	%r50, %r32, 2;
	mov.u32 	%r51, global_smem;
	add.s32 	%r10, %r51, %r50;
	mov.b32 	%r11, %f10;
	mov.pred 	%p8, -1;
	// begin inline asm
	@%p8 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r52, %r33, 2;
	add.s32 	%r53, %r51, %r52;
	ld.shared.u32 	%r13, [%r53];
	mov.b32 	%r14, 1098907648;
	// begin inline asm
	div.full.f32 %r29, %r13, %r14;
	// end inline asm
	// begin inline asm
	div.full.f32 %r15, %r11, %r14;
	// end inline asm
	mov.b32 	%f11, %r15;
	.loc	1 43 19                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:43:19
	sub.f32 	%f12, %f1, %f11;
	sub.f32 	%f13, %f2, %f11;
	.loc	1 44 20                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:44:20
	mul.f32 	%f14, %f13, %f13;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f15, %f12, %f12, %f14;
	selp.f32 	%f16, %f15, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f16;
	shfl.sync.bfly.b32	%r55, %r54, 4, 31, -1;
	mov.b32 	%f17, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f18;
	shfl.sync.bfly.b32	%r57, %r56, 2, 31, -1;
	mov.b32 	%f19, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f20;
	shfl.sync.bfly.b32	%r59, %r58, 1, 31, -1;
	mov.b32 	%f21, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
$L__tmp4:
	.loc	1 53 28                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:53:28
	bar.sync 	0;
	mov.b32 	%r19, %f22;
	// begin inline asm
	@%p8 st.shared.b32 [ %r10 + 0 ], %r19;
	// end inline asm
	bar.sync 	0;
	.loc	1 50 20                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:50:20
	ld.shared.u32 	%r21, [%r53];
	// begin inline asm
	div.full.f32 %r20, %r21, %r14;
	// end inline asm
	mov.b32 	%f23, %r20;
	// begin inline asm
	div.full.f32 %r23, %r19, %r14;
	// end inline asm
	mov.b32 	%f24, %r23;
	.loc	1 52 20                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:52:20
	add.f32 	%f25, %f23, 0f3727C5AC;
	add.f32 	%f26, %f24, 0f3727C5AC;
	.loc	1 53 28                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:53:28
	rsqrt.approx.ftz.f32 	%f27, %f25;
	rsqrt.approx.ftz.f32 	%f28, %f26;
	.loc	1 34 36                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:34:36
	mov.b32 	%f29, %r9;
	.loc	1 33 36                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:33:36
	mov.b32 	%f30, %r7;
	.loc	1 24 23                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:24:23
	or.b32  	%r60, %r30, %r33;
	.loc	1 25 21                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:25:21
	setp.lt.s32 	%p14, %r60, 16;
	.loc	1 54 20                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:54:20
	mul.f32 	%f31, %f12, %f28;
	mul.f32 	%f32, %f13, %f28;
	.loc	1 56 20                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:56:20
	fma.rn.f32 	%f33, %f31, %f30, %f29;
	fma.rn.f32 	%f34, %f32, %f30, %f29;
$L__tmp5:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p15, %f33, 0f00000000;
	setp.lt.f32 	%p16, %f34, 0f00000000;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f35, 0f00000000, %f33, %p15;
	selp.f32 	%f36, 0f00000000, %f34, %p16;
$L__tmp6:
	.loc	1 60 21                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:60:21
	setp.le.f32 	%p17, %f35, 0f00000000;
	setp.le.f32 	%p18, %f36, 0f00000000;
	.loc	1 61 25                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:61:25
	add.s64 	%rd6, %rd14, %rd18;
	.loc	1 61 45                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:61:45
	mov.b32 	%r26, %f35;
	mov.b32 	%r27, %f36;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd6 + 0 ], { %r26, %r27 };
	// end inline asm
	.loc	1 62 25                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:62:25
	add.s64 	%rd7, %rd15, %rd17;
	.loc	1 62 45                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:62:45
	selp.u16 	%rs2, 1, 0, %p17;
	selp.u16 	%rs3, 1, 0, %p18;
	shl.b16 	%rs4, %rs3, 8;
	or.b16  	%rs1, %rs2, %rs4;
	// begin inline asm
	@%p1 st.global.b16 [ %rd7 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 63 25                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:63:25
	mul.wide.s32 	%rd20, %r60, 4;
	add.s64 	%rd8, %rd16, %rd20;
	.loc	1 63 37                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:63:37
	and.b32  	%r61, %r31, 56;
	setp.eq.s32 	%p19, %r61, 0;
	mov.b32 	%r28, %f27;
	and.pred  	%p12, %p19, %p14;
	// begin inline asm
	@%p12 st.global.b32 [ %rd8 + 0 ], { %r28 };
	// end inline asm
	.loc	1 64 25                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:64:25
	add.s64 	%rd9, %rd13, %rd20;
	.loc	1 64 37                         // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:64:37
	// begin inline asm
	@%p12 st.global.b32 [ %rd9 + 0 ], { %r29 };
	// end inline asm
	.loc	1 64 4                          // clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py:64:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/lg/clgvkhldtzmo6cpwkmf6ngdpdeiver63qxrjocquby6ymdutjrpt.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 253                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 103
.b8 118
.b8 107
.b8 104
.b8 108
.b8 100
.b8 116
.b8 122
.b8 109
.b8 111
.b8 54
.b8 99
.b8 112
.b8 119
.b8 107
.b8 109
.b8 102
.b8 54
.b8 110
.b8 103
.b8 100
.b8 112
.b8 100
.b8 101
.b8 105
.b8 118
.b8 101
.b8 114
.b8 54
.b8 51
.b8 113
.b8 120
.b8 114
.b8 106
.b8 111
.b8 99
.b8 113
.b8 117
.b8 98
.b8 121
.b8 54
.b8 121
.b8 109
.b8 100
.b8 117
.b8 116
.b8 106
.b8 114
.b8 112
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 108
.b8 103
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa2:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 58                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
