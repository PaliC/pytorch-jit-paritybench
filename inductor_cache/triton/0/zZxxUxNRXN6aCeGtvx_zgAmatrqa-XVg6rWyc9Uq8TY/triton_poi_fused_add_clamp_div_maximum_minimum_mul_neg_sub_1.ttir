#loc = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":19:0)
module {
  tt.func public @triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<5.000000e-01> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1> : tensor<256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_4 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_3 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %4, %cst_3 : tensor<256xi32> loc(#loc8)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc9)
    %9 = tt.addptr %8, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc9)
    %10 = tt.load %9, %5 : tensor<256x!tt.ptr<f32>> loc(#loc10)
    %11 = arith.muli %6, %cst_2 : tensor<256xi32> loc(#loc11)
    %12 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.addptr %12, %11 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc12)
    %14 = tt.load %13, %5, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc13)
    %15 = arith.addi %11, %cst_0 : tensor<256xi32> loc(#loc14)
    %16 = tt.addptr %12, %15 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc15)
    %17 = tt.load %16, %5, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc16)
    %18 = arith.mulf %17, %cst : tensor<256xf32> loc(#loc17)
    %19 = arith.addf %14, %18 : tensor<256xf32> loc(#loc18)
    %20 = arith.subf %14, %18 : tensor<256xf32> loc(#loc19)
    %21 = arith.subf %19, %20 : tensor<256xf32> loc(#loc20)
    %22 = arith.muli %7, %cst_2 : tensor<256xi32> loc(#loc21)
    %23 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc22)
    %24 = tt.addptr %23, %22 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc22)
    %25 = tt.load %24, %5, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc23)
    %26 = arith.addi %22, %cst_0 : tensor<256xi32> loc(#loc24)
    %27 = tt.addptr %23, %26 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc25)
    %28 = tt.load %27, %5, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc26)
    %29 = arith.mulf %28, %cst : tensor<256xf32> loc(#loc27)
    %30 = arith.addf %25, %29 : tensor<256xf32> loc(#loc28)
    %31 = arith.subf %25, %29 : tensor<256xf32> loc(#loc29)
    %32 = arith.subf %30, %31 : tensor<256xf32> loc(#loc30)
    %33 = arith.addf %21, %32 : tensor<256xf32> loc(#loc31)
    %34 = arith.cmpf olt, %19, %30 : tensor<256xf32> loc(#loc57)
    %35 = arith.cmpf une, %19, %19 : tensor<256xf32> loc(#loc58)
    %36 = arith.ori %34, %35 : tensor<256xi1> loc(#loc59)
    %37 = arith.select %36, %19, %30 : tensor<256xi1>, tensor<256xf32> loc(#loc60)
    %38 = arith.cmpf ogt, %20, %31 : tensor<256xf32> loc(#loc61)
    %39 = arith.cmpf une, %20, %20 : tensor<256xf32> loc(#loc62)
    %40 = arith.ori %38, %39 : tensor<256xi1> loc(#loc63)
    %41 = arith.select %40, %20, %31 : tensor<256xi1>, tensor<256xf32> loc(#loc64)
    %42 = arith.subf %37, %41 : tensor<256xf32> loc(#loc42)
    %43 = arith.cmpf ogt, %19, %30 : tensor<256xf32> loc(#loc65)
    %44 = arith.ori %43, %35 : tensor<256xi1> loc(#loc66)
    %45 = arith.select %44, %19, %30 : tensor<256xi1>, tensor<256xf32> loc(#loc67)
    %46 = arith.cmpf olt, %20, %31 : tensor<256xf32> loc(#loc68)
    %47 = arith.ori %46, %39 : tensor<256xi1> loc(#loc69)
    %48 = arith.select %47, %20, %31 : tensor<256xi1>, tensor<256xf32> loc(#loc70)
    %49 = arith.subf %45, %48 : tensor<256xf32> loc(#loc45)
    %50 = arith.cmpf ogt, %42, %cst_1 : tensor<256xf32> loc(#loc71)
    %51 = arith.cmpf une, %42, %42 : tensor<256xf32> loc(#loc72)
    %52 = arith.ori %50, %51 : tensor<256xi1> loc(#loc73)
    %53 = arith.select %52, %42, %cst_1 : tensor<256xi1>, tensor<256xf32> loc(#loc74)
    %54 = arith.subf %33, %53 : tensor<256xf32> loc(#loc47)
    %55 = arith.divf %53, %54 : tensor<256xf32> loc(#loc48)
    %56 = arith.cmpf ogt, %49, %cst_1 : tensor<256xf32> loc(#loc75)
    %57 = arith.cmpf une, %49, %49 : tensor<256xf32> loc(#loc76)
    %58 = arith.ori %56, %57 : tensor<256xi1> loc(#loc77)
    %59 = arith.select %58, %49, %cst_1 : tensor<256xi1>, tensor<256xf32> loc(#loc78)
    %60 = arith.subf %59, %54 : tensor<256xf32> loc(#loc50)
    %61 = arith.divf %60, %59 : tensor<256xf32> loc(#loc51)
    %62 = arith.subf %55, %61 : tensor<256xf32> loc(#loc52)
    %63 = arith.subf %cst_1, %62 : tensor<256xf32> loc(#loc53)
    %64 = arith.addf %10, %63 : tensor<256xf32> loc(#loc54)
    tt.store %9, %64, %5 : tensor<256x!tt.ptr<f32>> loc(#loc55)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":21:28)
#loc3 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":21:33)
#loc4 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":22:36)
#loc5 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":22:23)
#loc6 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":23:21)
#loc7 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":24:19)
#loc8 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":25:19)
#loc9 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":27:35)
#loc10 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":27:40)
#loc11 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":42:33)
#loc12 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":42:31)
#loc13 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":42:38)
#loc14 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":43:35)
#loc15 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":43:31)
#loc16 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":43:42)
#loc17 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":45:20)
#loc18 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":46:20)
#loc19 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":56:20)
#loc20 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":69:20)
#loc21 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":76:33)
#loc22 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":76:31)
#loc23 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":76:38)
#loc24 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":77:35)
#loc25 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":77:31)
#loc26 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":77:42)
#loc27 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":78:20)
#loc28 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":79:20)
#loc29 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":86:20)
#loc30 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":96:20)
#loc31 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":97:20)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc33 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":98:42)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc38 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":99:42)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc42 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":100:20)
#loc43 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":101:42)
#loc44 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":102:42)
#loc45 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":103:20)
#loc46 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":107:42)
#loc47 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":108:20)
#loc48 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":109:20)
#loc49 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":110:42)
#loc50 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":111:20)
#loc51 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":112:20)
#loc52 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":113:20)
#loc53 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":114:13)
#loc54 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":116:20)
#loc55 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":117:40)
#loc56 = loc("inductor_cache/eo/ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py":117:4)
#loc57 = loc(callsite(#loc32 at #loc33))
#loc58 = loc(callsite(#loc34 at #loc33))
#loc59 = loc(callsite(#loc35 at #loc33))
#loc60 = loc(callsite(#loc36 at #loc33))
#loc61 = loc(callsite(#loc37 at #loc38))
#loc62 = loc(callsite(#loc39 at #loc38))
#loc63 = loc(callsite(#loc40 at #loc38))
#loc64 = loc(callsite(#loc41 at #loc38))
#loc65 = loc(callsite(#loc37 at #loc43))
#loc66 = loc(callsite(#loc40 at #loc43))
#loc67 = loc(callsite(#loc41 at #loc43))
#loc68 = loc(callsite(#loc32 at #loc44))
#loc69 = loc(callsite(#loc35 at #loc44))
#loc70 = loc(callsite(#loc36 at #loc44))
#loc71 = loc(callsite(#loc37 at #loc46))
#loc72 = loc(callsite(#loc39 at #loc46))
#loc73 = loc(callsite(#loc40 at #loc46))
#loc74 = loc(callsite(#loc41 at #loc46))
#loc75 = loc(callsite(#loc37 at #loc49))
#loc76 = loc(callsite(#loc39 at #loc49))
#loc77 = loc(callsite(#loc40 at #loc49))
#loc78 = loc(callsite(#loc41 at #loc49))
