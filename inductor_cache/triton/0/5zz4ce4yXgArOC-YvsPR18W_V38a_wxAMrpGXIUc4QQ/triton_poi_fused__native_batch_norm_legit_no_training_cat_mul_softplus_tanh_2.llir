; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %11 = shl i32 %10, 8, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = shl i32 %12, 1, !dbg !12
  %14 = and i32 %13, 254, !dbg !12
  %15 = or disjoint i32 %11, %14, !dbg !13
  %16 = icmp slt i32 %15, 256, !dbg !14
  %.frozen = freeze i32 %15, !dbg !15
  %17 = sdiv i32 %.frozen, 16, !dbg !15
  %18 = srem i32 %17, 4, !dbg !16
  %19 = mul i32 %17, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %19, !dbg !17
  %.frozen69 = freeze i32 %15, !dbg !18
  %20 = sdiv i32 %.frozen69, 64, !dbg !18
  %21 = sext i32 %18 to i64, !dbg !19
  %22 = getelementptr float, ptr addrspace(1) %3, i64 %21, !dbg !19
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %16) #3, !dbg !20
  %24 = bitcast i32 %23 to float, !dbg !20
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %16) #3, !dbg !20
  %26 = bitcast i32 %25 to float, !dbg !20
  %27 = getelementptr float, ptr addrspace(1) %4, i64 %21, !dbg !21
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %16) #3, !dbg !22
  %29 = bitcast i32 %28 to float, !dbg !22
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %16) #3, !dbg !22
  %31 = bitcast i32 %30 to float, !dbg !22
  %32 = getelementptr float, ptr addrspace(1) %5, i64 %21, !dbg !23
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %16) #3, !dbg !24
  %34 = bitcast i32 %33 to float, !dbg !24
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %16) #3, !dbg !24
  %36 = bitcast i32 %35 to float, !dbg !24
  %37 = getelementptr float, ptr addrspace(1) %6, i64 %21, !dbg !25
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %16) #3, !dbg !26
  %39 = bitcast i32 %38 to float, !dbg !26
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %16) #3, !dbg !26
  %41 = bitcast i32 %40 to float, !dbg !26
  %42 = icmp slt i32 %18, 2, !dbg !27
  %43 = mul i32 %20, 64, !dbg !28
  %srem.decomposed = sub i32 %.frozen69, %43, !dbg !28
  %44 = shl nsw i32 %20, 5, !dbg !29
  %45 = add nsw i32 %44, %srem.decomposed, !dbg !30
  %46 = sext i32 %45 to i64, !dbg !31
  %47 = getelementptr float, ptr addrspace(1) %1, i64 %46, !dbg !31
  %48 = and i1 %16, %42, !dbg !32
  %49 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %47, i1 %48, i32 0, i1 %48, i32 0, i1 %48) #3, !dbg !33
  %50 = extractvalue { i32, i32 } %49, 0, !dbg !33
  %51 = extractvalue { i32, i32 } %49, 1, !dbg !33
  %52 = icmp sgt i32 %18, 1, !dbg !34
  %53 = shl nsw i32 %18, 4, !dbg !35
  %54 = add nsw i32 %.decomposed, -32, !dbg !35
  %55 = add nsw i32 %54, %44, !dbg !36
  %56 = add nsw i32 %55, %53, !dbg !37
  %57 = sext i32 %56 to i64, !dbg !38
  %58 = getelementptr float, ptr addrspace(1) %2, i64 %57, !dbg !38
  %59 = and i1 %16, %52, !dbg !39
  %60 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %58, i1 %59, i32 0, i1 %59, i32 0, i1 %59) #3, !dbg !40
  %61 = extractvalue { i32, i32 } %60, 0, !dbg !40
  %62 = extractvalue { i32, i32 } %60, 1, !dbg !40
  %.v = select i1 %42, i32 %50, i32 %61, !dbg !41
  %63 = bitcast i32 %.v to float, !dbg !41
  %.v1 = select i1 %42, i32 %51, i32 %62, !dbg !41
  %64 = bitcast i32 %.v1 to float, !dbg !41
  %65 = fsub float %63, %24, !dbg !42
  %66 = fsub float %64, %26, !dbg !42
  %67 = fadd float %29, 0x3EE4F8B580000000, !dbg !43
  %68 = fadd float %31, 0x3EE4F8B580000000, !dbg !43
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !44
  %.not.i = icmp eq i32 %69, 0, !dbg !44
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !44
  %.not1.i = icmp eq i32 %70, 0, !dbg !44
  br i1 %.not.i, label %76, label %71, !dbg !44

71:                                               ; preds = %9
  br i1 %.not1.i, label %74, label %72, !dbg !44

72:                                               ; preds = %71
  %73 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %67) #3, !dbg !44
  br label %__nv_sqrtf.exit, !dbg !44

74:                                               ; preds = %71
  %75 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %67) #3, !dbg !44
  br label %__nv_sqrtf.exit, !dbg !44

76:                                               ; preds = %9
  br i1 %.not1.i, label %79, label %77, !dbg !44

77:                                               ; preds = %76
  %78 = tail call float @llvm.nvvm.sqrt.rn.f(float %67) #3, !dbg !44
  br label %__nv_sqrtf.exit, !dbg !44

79:                                               ; preds = %76
  %80 = tail call float @llvm.nvvm.sqrt.approx.f(float %67) #3, !dbg !44
  br label %__nv_sqrtf.exit, !dbg !44

__nv_sqrtf.exit:                                  ; preds = %72, %74, %77, %79
  %.0.i = phi float [ %73, %72 ], [ %75, %74 ], [ %78, %77 ], [ %80, %79 ], !dbg !44
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !44
  %.not.i2 = icmp eq i32 %81, 0, !dbg !44
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !44
  %.not1.i5 = icmp eq i32 %82, 0, !dbg !44
  br i1 %.not.i2, label %88, label %83, !dbg !44

83:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i5, label %86, label %84, !dbg !44

84:                                               ; preds = %83
  %85 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %68) #3, !dbg !44
  br label %__nv_sqrtf.exit6, !dbg !44

86:                                               ; preds = %83
  %87 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %68) #3, !dbg !44
  br label %__nv_sqrtf.exit6, !dbg !44

88:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i5, label %91, label %89, !dbg !44

89:                                               ; preds = %88
  %90 = tail call float @llvm.nvvm.sqrt.rn.f(float %68) #3, !dbg !44
  br label %__nv_sqrtf.exit6, !dbg !44

91:                                               ; preds = %88
  %92 = tail call float @llvm.nvvm.sqrt.approx.f(float %68) #3, !dbg !44
  br label %__nv_sqrtf.exit6, !dbg !44

__nv_sqrtf.exit6:                                 ; preds = %84, %86, %89, %91
  %.0.i4 = phi float [ %85, %84 ], [ %87, %86 ], [ %90, %89 ], [ %92, %91 ], !dbg !44
  %93 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !45
  %94 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i4) #3, !dbg !45
  %95 = fmul float %65, %93, !dbg !46
  %96 = fmul float %66, %94, !dbg !46
  %97 = fmul float %95, %34, !dbg !47
  %98 = fmul float %96, %36, !dbg !47
  %99 = fadd float %97, %39, !dbg !48
  %100 = fadd float %98, %41, !dbg !48
  %101 = fcmp ogt float %99, 2.000000e+01, !dbg !49
  %102 = fcmp ogt float %100, 2.000000e+01, !dbg !49
  %103 = fmul float %99, 0x3FF7154760000000, !dbg !50
  %104 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %103) #3, !dbg !50
  %105 = fmul float %100, 0x3FF7154760000000, !dbg !50
  %106 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %105) #3, !dbg !50
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not.i30 = icmp eq i32 %107, 0, !dbg !51
  %108 = tail call float @llvm.nvvm.add.rz.ftz.f(float %104, float 1.000000e+00) #3, !dbg !51
  %109 = tail call float @llvm.nvvm.add.rz.f(float %104, float 1.000000e+00) #3, !dbg !51
  %.01.i31 = select i1 %.not.i30, float %109, float %108, !dbg !51
  %110 = bitcast float %.01.i31 to i32, !dbg !51
  %111 = add i32 %110, -1061158912, !dbg !51
  %112 = and i32 %111, -8388608, !dbg !51
  %113 = bitcast float %104 to i32, !dbg !51
  %114 = sub i32 %113, %112, !dbg !51
  %115 = bitcast i32 %114 to float, !dbg !51
  %116 = sub i32 1082130432, %112, !dbg !51
  %117 = bitcast i32 %116 to float, !dbg !51
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not14.i = icmp eq i32 %118, 0, !dbg !51
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %117, float -1.000000e+00) #3, !dbg !51
  %120 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %117, float -1.000000e+00) #3, !dbg !51
  %.09.i = select i1 %.not14.i, float %120, float %119, !dbg !51
  %121 = fadd float %.09.i, %115, !dbg !51
  %122 = sitofp i32 %112 to float, !dbg !51
  %123 = fmul float %122, 0x3E80000000000000, !dbg !51
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not15.i = icmp eq i32 %124, 0, !dbg !51
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %121, float 0x3FBB000240000000) #3, !dbg !51
  %126 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %121, float 0x3FBB000240000000) #3, !dbg !51
  %.012.i = select i1 %.not15.i, float %126, float %125, !dbg !51
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not16.i = icmp eq i32 %127, 0, !dbg !51
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %121, float 0xBFC0EF1C00000000) #3, !dbg !51
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %121, float 0xBFC0EF1C00000000) #3, !dbg !51
  %.010.i = select i1 %.not16.i, float %129, float %128, !dbg !51
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not17.i = icmp eq i32 %130, 0, !dbg !51
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %121, float 0x3FC28C8EA0000000) #3, !dbg !51
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %121, float 0x3FC28C8EA0000000) #3, !dbg !51
  %.06.i32 = select i1 %.not17.i, float %132, float %131, !dbg !51
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not18.i = icmp eq i32 %133, 0, !dbg !51
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i32, float %121, float 0xBFC54D1BA0000000) #3, !dbg !51
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i32, float %121, float 0xBFC54D1BA0000000) #3, !dbg !51
  %.02.i33 = select i1 %.not18.i, float %135, float %134, !dbg !51
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not19.i = icmp eq i32 %136, 0, !dbg !51
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i33, float %121, float 0x3FC995F3C0000000) #3, !dbg !51
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i33, float %121, float 0x3FC995F3C0000000) #3, !dbg !51
  %.0.i34 = select i1 %.not19.i, float %138, float %137, !dbg !51
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not20.i = icmp eq i32 %139, 0, !dbg !51
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i34, float %121, float 0xBFD0000840000000) #3, !dbg !51
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i34, float %121, float 0xBFD0000840000000) #3, !dbg !51
  %.011.i = select i1 %.not20.i, float %141, float %140, !dbg !51
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not21.i = icmp eq i32 %142, 0, !dbg !51
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %121, float 0x3FD5555CC0000000) #3, !dbg !51
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %121, float 0x3FD5555CC0000000) #3, !dbg !51
  %.08.i = select i1 %.not21.i, float %144, float %143, !dbg !51
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not22.i = icmp eq i32 %145, 0, !dbg !51
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %121, float -5.000000e-01) #3, !dbg !51
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %121, float -5.000000e-01) #3, !dbg !51
  %.07.i = select i1 %.not22.i, float %147, float %146, !dbg !51
  %148 = fmul float %121, %.07.i, !dbg !51
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not23.i = icmp eq i32 %149, 0, !dbg !51
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float %121, float %121) #3, !dbg !51
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %148, float %121, float %121) #3, !dbg !51
  %.05.i35 = select i1 %.not23.i, float %151, float %150, !dbg !51
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not24.i = icmp eq i32 %152, 0, !dbg !51
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %123, float 0x3FE62E4300000000, float %.05.i35) #3, !dbg !51
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %123, float 0x3FE62E4300000000, float %.05.i35) #3, !dbg !51
  %.04.i36 = select i1 %.not24.i, float %154, float %153, !dbg !51
  %155 = icmp ugt i32 %113, 2139095039, !dbg !51
  br i1 %155, label %156, label %__nv_log1pf.exit, !dbg !51

156:                                              ; preds = %__nv_sqrtf.exit6
  %157 = icmp sgt i32 %113, -1082130432, !dbg !51
  br i1 %157, label %__nv_fmaf_rn.exit.i, label %161, !dbg !51

__nv_fmaf_rn.exit.i:                              ; preds = %156
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not25.i = icmp eq i32 %158, 0, !dbg !51
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %104, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !51
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %104, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !51
  %.03.i37 = select i1 %.not25.i, float %160, float %159, !dbg !51
  br label %161, !dbg !51

161:                                              ; preds = %__nv_fmaf_rn.exit.i, %156
  %r.0.i = phi float [ %.03.i37, %__nv_fmaf_rn.exit.i ], [ %.04.i36, %156 ], !dbg !51
  %162 = fcmp oeq float %104, 0.000000e+00, !dbg !51
  %r.1.i = select i1 %162, float -0.000000e+00, float %r.0.i, !dbg !51
  br label %__nv_log1pf.exit, !dbg !51

__nv_log1pf.exit:                                 ; preds = %__nv_sqrtf.exit6, %161
  %r.2.i = phi float [ %r.1.i, %161 ], [ %.04.i36, %__nv_sqrtf.exit6 ], !dbg !51
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not.i38 = icmp eq i32 %163, 0, !dbg !51
  %164 = tail call float @llvm.nvvm.add.rz.ftz.f(float %106, float 1.000000e+00) #3, !dbg !51
  %165 = tail call float @llvm.nvvm.add.rz.f(float %106, float 1.000000e+00) #3, !dbg !51
  %.01.i39 = select i1 %.not.i38, float %165, float %164, !dbg !51
  %166 = bitcast float %.01.i39 to i32, !dbg !51
  %167 = add i32 %166, -1061158912, !dbg !51
  %168 = and i32 %167, -8388608, !dbg !51
  %169 = bitcast float %106 to i32, !dbg !51
  %170 = sub i32 %169, %168, !dbg !51
  %171 = bitcast i32 %170 to float, !dbg !51
  %172 = sub i32 1082130432, %168, !dbg !51
  %173 = bitcast i32 %172 to float, !dbg !51
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not14.i40 = icmp eq i32 %174, 0, !dbg !51
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %173, float -1.000000e+00) #3, !dbg !51
  %176 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %173, float -1.000000e+00) #3, !dbg !51
  %.09.i41 = select i1 %.not14.i40, float %176, float %175, !dbg !51
  %177 = fadd float %.09.i41, %171, !dbg !51
  %178 = sitofp i32 %168 to float, !dbg !51
  %179 = fmul float %178, 0x3E80000000000000, !dbg !51
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not15.i42 = icmp eq i32 %180, 0, !dbg !51
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %177, float 0x3FBB000240000000) #3, !dbg !51
  %182 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %177, float 0x3FBB000240000000) #3, !dbg !51
  %.012.i43 = select i1 %.not15.i42, float %182, float %181, !dbg !51
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not16.i44 = icmp eq i32 %183, 0, !dbg !51
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i43, float %177, float 0xBFC0EF1C00000000) #3, !dbg !51
  %185 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i43, float %177, float 0xBFC0EF1C00000000) #3, !dbg !51
  %.010.i45 = select i1 %.not16.i44, float %185, float %184, !dbg !51
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not17.i46 = icmp eq i32 %186, 0, !dbg !51
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i45, float %177, float 0x3FC28C8EA0000000) #3, !dbg !51
  %188 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i45, float %177, float 0x3FC28C8EA0000000) #3, !dbg !51
  %.06.i47 = select i1 %.not17.i46, float %188, float %187, !dbg !51
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not18.i48 = icmp eq i32 %189, 0, !dbg !51
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i47, float %177, float 0xBFC54D1BA0000000) #3, !dbg !51
  %191 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i47, float %177, float 0xBFC54D1BA0000000) #3, !dbg !51
  %.02.i49 = select i1 %.not18.i48, float %191, float %190, !dbg !51
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not19.i50 = icmp eq i32 %192, 0, !dbg !51
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i49, float %177, float 0x3FC995F3C0000000) #3, !dbg !51
  %194 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i49, float %177, float 0x3FC995F3C0000000) #3, !dbg !51
  %.0.i51 = select i1 %.not19.i50, float %194, float %193, !dbg !51
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not20.i52 = icmp eq i32 %195, 0, !dbg !51
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i51, float %177, float 0xBFD0000840000000) #3, !dbg !51
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i51, float %177, float 0xBFD0000840000000) #3, !dbg !51
  %.011.i53 = select i1 %.not20.i52, float %197, float %196, !dbg !51
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not21.i54 = icmp eq i32 %198, 0, !dbg !51
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i53, float %177, float 0x3FD5555CC0000000) #3, !dbg !51
  %200 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i53, float %177, float 0x3FD5555CC0000000) #3, !dbg !51
  %.08.i55 = select i1 %.not21.i54, float %200, float %199, !dbg !51
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not22.i56 = icmp eq i32 %201, 0, !dbg !51
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i55, float %177, float -5.000000e-01) #3, !dbg !51
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i55, float %177, float -5.000000e-01) #3, !dbg !51
  %.07.i57 = select i1 %.not22.i56, float %203, float %202, !dbg !51
  %204 = fmul float %177, %.07.i57, !dbg !51
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not23.i58 = icmp eq i32 %205, 0, !dbg !51
  %206 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %204, float %177, float %177) #3, !dbg !51
  %207 = tail call float @llvm.nvvm.fma.rn.f(float %204, float %177, float %177) #3, !dbg !51
  %.05.i59 = select i1 %.not23.i58, float %207, float %206, !dbg !51
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not24.i60 = icmp eq i32 %208, 0, !dbg !51
  %209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %179, float 0x3FE62E4300000000, float %.05.i59) #3, !dbg !51
  %210 = tail call float @llvm.nvvm.fma.rn.f(float %179, float 0x3FE62E4300000000, float %.05.i59) #3, !dbg !51
  %.04.i61 = select i1 %.not24.i60, float %210, float %209, !dbg !51
  %211 = icmp ugt i32 %169, 2139095039, !dbg !51
  br i1 %211, label %212, label %__nv_log1pf.exit68, !dbg !51

212:                                              ; preds = %__nv_log1pf.exit
  %213 = icmp sgt i32 %169, -1082130432, !dbg !51
  br i1 %213, label %__nv_fmaf_rn.exit.i65, label %217, !dbg !51

__nv_fmaf_rn.exit.i65:                            ; preds = %212
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not25.i66 = icmp eq i32 %214, 0, !dbg !51
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %106, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !51
  %216 = tail call float @llvm.nvvm.fma.rn.f(float %106, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !51
  %.03.i67 = select i1 %.not25.i66, float %216, float %215, !dbg !51
  br label %217, !dbg !51

217:                                              ; preds = %__nv_fmaf_rn.exit.i65, %212
  %r.0.i63 = phi float [ %.03.i67, %__nv_fmaf_rn.exit.i65 ], [ %.04.i61, %212 ], !dbg !51
  %218 = fcmp oeq float %106, 0.000000e+00, !dbg !51
  %r.1.i64 = select i1 %218, float -0.000000e+00, float %r.0.i63, !dbg !51
  br label %__nv_log1pf.exit68, !dbg !51

__nv_log1pf.exit68:                               ; preds = %__nv_log1pf.exit, %217
  %r.2.i62 = phi float [ %r.1.i64, %217 ], [ %.04.i61, %__nv_log1pf.exit ], !dbg !51
  %219 = select i1 %101, float %99, float %r.2.i, !dbg !52
  %220 = select i1 %102, float %100, float %r.2.i62, !dbg !52
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not.i7 = icmp eq i32 %221, 0, !dbg !53
  %222 = tail call float @llvm.nvvm.fabs.ftz.f(float %219) #3, !dbg !53
  %223 = tail call float @llvm.nvvm.fabs.f(float %219) #3, !dbg !53
  %.01.i = select i1 %.not.i7, float %223, float %222, !dbg !53
  %224 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !53
  br i1 %224, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !53

__internal_fmad.exit1.i:                          ; preds = %__nv_log1pf.exit68
  %225 = fmul float %.01.i, 0x4007154760000000, !dbg !53
  %226 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %225) #3, !dbg !53
  %227 = fadd float %226, 1.000000e+00, !dbg !53
  %228 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %227) #4, !dbg !53, !srcloc !54
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not6.i = icmp eq i32 %229, 0, !dbg !53
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %228, float -2.000000e+00, float 1.000000e+00) #3, !dbg !53
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %228, float -2.000000e+00, float 1.000000e+00) #3, !dbg !53
  %.03.i = select i1 %.not6.i, float %231, float %230, !dbg !53
  %232 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !53
  %s.0.i = select i1 %232, float 1.000000e+00, float %.03.i, !dbg !53
  %233 = bitcast float %s.0.i to i32, !dbg !53
  %234 = bitcast float %219 to i32, !dbg !53
  %235 = and i32 %234, -2147483648, !dbg !53
  %236 = or i32 %235, %233, !dbg !53
  %237 = bitcast i32 %236 to float, !dbg !53
  br label %__nv_tanhf.exit, !dbg !53

__internal_fmad.exit3.i:                          ; preds = %__nv_log1pf.exit68
  %238 = fmul float %219, %219, !dbg !53
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not1.i8 = icmp eq i32 %239, 0, !dbg !53
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %238, float 0xBFAAC795C0000000) #3, !dbg !53
  %241 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %238, float 0xBFAAC795C0000000) #3, !dbg !53
  %.06.i = select i1 %.not1.i8, float %241, float %240, !dbg !53
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not2.i9 = icmp eq i32 %242, 0, !dbg !53
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %238, float 0x3FC10B2820000000) #3, !dbg !53
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %238, float 0x3FC10B2820000000) #3, !dbg !53
  %.05.i = select i1 %.not2.i9, float %244, float %243, !dbg !53
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not3.i = icmp eq i32 %245, 0, !dbg !53
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %238, float 0xBFD5553DA0000000) #3, !dbg !53
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %238, float 0xBFD5553DA0000000) #3, !dbg !53
  %.0.i10 = select i1 %.not3.i, float %247, float %246, !dbg !53
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not4.i = icmp eq i32 %248, 0, !dbg !53
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i10, float %238, float 0.000000e+00) #3, !dbg !53
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i10, float %238, float 0.000000e+00) #3, !dbg !53
  %.04.i = select i1 %.not4.i, float %250, float %249, !dbg !53
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not5.i = icmp eq i32 %251, 0, !dbg !53
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %219, float %219) #3, !dbg !53
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %219, float %219) #3, !dbg !53
  %.02.i = select i1 %.not5.i, float %253, float %252, !dbg !53
  br label %__nv_tanhf.exit, !dbg !53

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %237, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !53
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not.i11 = icmp eq i32 %254, 0, !dbg !53
  %255 = tail call float @llvm.nvvm.fabs.ftz.f(float %220) #3, !dbg !53
  %256 = tail call float @llvm.nvvm.fabs.f(float %220) #3, !dbg !53
  %.01.i12 = select i1 %.not.i11, float %256, float %255, !dbg !53
  %257 = fcmp ult float %.01.i12, 0x3FE3333340000000, !dbg !53
  br i1 %257, label %__internal_fmad.exit3.i18, label %__internal_fmad.exit1.i13, !dbg !53

__internal_fmad.exit1.i13:                        ; preds = %__nv_tanhf.exit
  %258 = fmul float %.01.i12, 0x4007154760000000, !dbg !53
  %259 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %258) #3, !dbg !53
  %260 = fadd float %259, 1.000000e+00, !dbg !53
  %261 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %260) #4, !dbg !53, !srcloc !54
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not6.i14 = icmp eq i32 %262, 0, !dbg !53
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %261, float -2.000000e+00, float 1.000000e+00) #3, !dbg !53
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %261, float -2.000000e+00, float 1.000000e+00) #3, !dbg !53
  %.03.i15 = select i1 %.not6.i14, float %264, float %263, !dbg !53
  %265 = fcmp oge float %.01.i12, 0x4022059680000000, !dbg !53
  %s.0.i16 = select i1 %265, float 1.000000e+00, float %.03.i15, !dbg !53
  %266 = bitcast float %s.0.i16 to i32, !dbg !53
  %267 = bitcast float %220 to i32, !dbg !53
  %268 = and i32 %267, -2147483648, !dbg !53
  %269 = or i32 %268, %266, !dbg !53
  %270 = bitcast i32 %269 to float, !dbg !53
  br label %__nv_tanhf.exit29, !dbg !53

__internal_fmad.exit3.i18:                        ; preds = %__nv_tanhf.exit
  %271 = fmul float %220, %220, !dbg !53
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not1.i19 = icmp eq i32 %272, 0, !dbg !53
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %271, float 0xBFAAC795C0000000) #3, !dbg !53
  %274 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %271, float 0xBFAAC795C0000000) #3, !dbg !53
  %.06.i20 = select i1 %.not1.i19, float %274, float %273, !dbg !53
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not2.i21 = icmp eq i32 %275, 0, !dbg !53
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i20, float %271, float 0x3FC10B2820000000) #3, !dbg !53
  %277 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i20, float %271, float 0x3FC10B2820000000) #3, !dbg !53
  %.05.i22 = select i1 %.not2.i21, float %277, float %276, !dbg !53
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not3.i23 = icmp eq i32 %278, 0, !dbg !53
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i22, float %271, float 0xBFD5553DA0000000) #3, !dbg !53
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i22, float %271, float 0xBFD5553DA0000000) #3, !dbg !53
  %.0.i24 = select i1 %.not3.i23, float %280, float %279, !dbg !53
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not4.i25 = icmp eq i32 %281, 0, !dbg !53
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i24, float %271, float 0.000000e+00) #3, !dbg !53
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i24, float %271, float 0.000000e+00) #3, !dbg !53
  %.04.i26 = select i1 %.not4.i25, float %283, float %282, !dbg !53
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not5.i27 = icmp eq i32 %284, 0, !dbg !53
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i26, float %220, float %220) #3, !dbg !53
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i26, float %220, float %220) #3, !dbg !53
  %.02.i28 = select i1 %.not5.i27, float %286, float %285, !dbg !53
  br label %__nv_tanhf.exit29, !dbg !53

__nv_tanhf.exit29:                                ; preds = %__internal_fmad.exit1.i13, %__internal_fmad.exit3.i18
  %s.1.i17 = phi float [ %270, %__internal_fmad.exit1.i13 ], [ %.02.i28, %__internal_fmad.exit3.i18 ], !dbg !53
  %287 = fmul float %99, %s.1.i, !dbg !55
  %288 = fmul float %100, %s.1.i17, !dbg !55
  %289 = sext i32 %15 to i64, !dbg !56
  %290 = getelementptr float, ptr addrspace(1) %7, i64 %289, !dbg !56
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.v, i32 %.v1, ptr addrspace(1) %290, i1 %16) #3, !dbg !57
  %291 = getelementptr float, ptr addrspace(1) %0, i64 %289, !dbg !58
  %292 = bitcast float %287 to i32, !dbg !59
  %293 = bitcast float %288 to i32, !dbg !59
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %292, i32 %293, ptr addrspace(1) %291, i1 %16) #3, !dbg !59
  ret void, !dbg !60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ceqla4jl3lhqx3g4345b2dc3jqi4wgj7l25ef4fb7wa2meiox5t7.py", directory: "inductor_cache/eq")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_2", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 31, scope: !7)
!20 = !DILocation(line: 28, column: 36, scope: !7)
!21 = !DILocation(line: 29, column: 31, scope: !7)
!22 = !DILocation(line: 29, column: 36, scope: !7)
!23 = !DILocation(line: 30, column: 31, scope: !7)
!24 = !DILocation(line: 30, column: 36, scope: !7)
!25 = !DILocation(line: 31, column: 31, scope: !7)
!26 = !DILocation(line: 31, column: 36, scope: !7)
!27 = !DILocation(line: 36, column: 18, scope: !7)
!28 = !DILocation(line: 37, column: 35, scope: !7)
!29 = !DILocation(line: 37, column: 48, scope: !7)
!30 = !DILocation(line: 37, column: 45, scope: !7)
!31 = !DILocation(line: 37, column: 30, scope: !7)
!32 = !DILocation(line: 37, column: 60, scope: !7)
!33 = !DILocation(line: 37, column: 53, scope: !7)
!34 = !DILocation(line: 38, column: 19, scope: !7)
!35 = !DILocation(line: 41, column: 39, scope: !7)
!36 = !DILocation(line: 41, column: 35, scope: !7)
!37 = !DILocation(line: 41, column: 52, scope: !7)
!38 = !DILocation(line: 41, column: 30, scope: !7)
!39 = !DILocation(line: 41, column: 67, scope: !7)
!40 = !DILocation(line: 41, column: 60, scope: !7)
!41 = !DILocation(line: 42, column: 33, scope: !7)
!42 = !DILocation(line: 43, column: 20, scope: !7)
!43 = !DILocation(line: 45, column: 20, scope: !7)
!44 = !DILocation(line: 46, column: 27, scope: !7)
!45 = !DILocation(line: 48, column: 20, scope: !7)
!46 = !DILocation(line: 51, column: 20, scope: !7)
!47 = !DILocation(line: 52, column: 20, scope: !7)
!48 = !DILocation(line: 53, column: 20, scope: !7)
!49 = !DILocation(line: 55, column: 20, scope: !7)
!50 = !DILocation(line: 56, column: 24, scope: !7)
!51 = !DILocation(line: 57, column: 28, scope: !7)
!52 = !DILocation(line: 58, column: 35, scope: !7)
!53 = !DILocation(line: 59, column: 27, scope: !7)
!54 = !{i32 21046}
!55 = !DILocation(line: 60, column: 20, scope: !7)
!56 = !DILocation(line: 61, column: 25, scope: !7)
!57 = !DILocation(line: 61, column: 37, scope: !7)
!58 = !DILocation(line: 62, column: 28, scope: !7)
!59 = !DILocation(line: 62, column: 40, scope: !7)
!60 = !DILocation(line: 62, column: 4, scope: !7)
