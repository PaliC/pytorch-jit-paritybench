#loc = loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_17(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":19:0), %arg1: !tt.ptr<f32> loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<12> : tensor<64xi32> loc(#loc1)
    %cst_0 = arith.constant dense<16> : tensor<64xi32> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<64xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_1 : tensor<64xi32> loc(#loc6)
    %6 = arith.muli %4, %cst_0 : tensor<64xi32> loc(#loc7)
    %7 = arith.addi %6, %cst : tensor<64xi32> loc(#loc8)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc9)
    %9 = tt.addptr %8, %7 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc9)
    %10 = tt.load %9, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.addptr %11, %6 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc11)
    tt.store %12, %10, %5 : tensor<64x!tt.ptr<f32>> loc(#loc12)
    tt.return loc(#loc13)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":21:28)
#loc3 = loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":21:33)
#loc4 = loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":22:36)
#loc5 = loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":22:23)
#loc6 = loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":23:21)
#loc7 = loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":25:38)
#loc8 = loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":25:35)
#loc9 = loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":25:30)
#loc10 = loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":25:43)
#loc11 = loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":26:25)
#loc12 = loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":26:39)
#loc13 = loc("inductor_cache/6k/c6ktzbel6zunt7acmrr4bkh3e5eeo6biv4rcvlqpppteix4lqcxd.py":26:4)
