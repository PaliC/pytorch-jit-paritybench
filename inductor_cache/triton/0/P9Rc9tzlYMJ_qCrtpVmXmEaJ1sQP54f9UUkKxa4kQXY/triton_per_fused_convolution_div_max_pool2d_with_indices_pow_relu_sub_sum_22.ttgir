#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":39:57)
#loc27 = loc(callsite(#loc1 at #loc16))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_convolution_div_max_pool2d_with_indices_pow_relu_sub_sum_22(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc3)
    %2 = arith.muli %0, %c512_i32 : i32 loc(#loc4)
    %3 = tt.splat %2 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %1, %3 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc6)
    %6 = tt.addptr %5, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc6)
    %7 = tt.load %6 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc7)
    %8 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.addptr %8, %1 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc8)
    %10 = tt.load %9 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc9)
    %11 = arith.addf %7, %10 : tensor<512xf32, #blocked> loc(#loc10)
    %12 = arith.cmpf ogt, %cst_0, %11 : tensor<512xf32, #blocked> loc(#loc24)
    %13 = arith.select %12, %cst_0, %11 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc25)
    %14 = arith.mulf %13, %13 : tensor<512xf32, #blocked> loc(#loc14)
    %15 = "tt.reduce"(%14) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc16)), %arg6: f32 loc(callsite(#loc1 at #loc16))):
      %20 = arith.addf %arg5, %arg6 : f32 loc(#loc30)
      tt.reduce.return %20 : f32 loc(#loc26)
    }) : (tensor<512xf32, #blocked>) -> f32 loc(#loc26)
    %16 = arith.addf %15, %cst : f32 loc(#loc29)
    %17 = tt.splat %16 : f32 -> tensor<1xf32, #blocked1> loc(#loc29)
    tt.store %6, %13 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc20)
    %18 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc21)
    %19 = tt.splat %18 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc21)
    tt.store %19, %17 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc22)
    tt.return loc(#loc23)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":24:28)
#loc3 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":27:26)
#loc4 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":32:43)
#loc5 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":32:39)
#loc6 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":32:34)
#loc7 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":32:48)
#loc8 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":33:30)
#loc9 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":33:35)
#loc10 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":34:18)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc12 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":36:40)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc14 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":37:18)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc19 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":39:44)
#loc20 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":40:48)
#loc21 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":41:25)
#loc22 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":41:36)
#loc23 = loc("inductor_cache/6a/c6aeox6bxv2avzz6uqpw3ky26cawhffjvxgvejvmyaskzq2klkwk.py":41:4)
#loc24 = loc(callsite(#loc11 at #loc12))
#loc25 = loc(callsite(#loc13 at #loc12))
#loc26 = loc(callsite(#loc15 at #loc16))
#loc28 = loc(callsite(#loc17 at #loc15))
#loc29 = loc(callsite(#loc18 at #loc19))
#loc30 = loc(callsite(#loc28 at #loc16))
