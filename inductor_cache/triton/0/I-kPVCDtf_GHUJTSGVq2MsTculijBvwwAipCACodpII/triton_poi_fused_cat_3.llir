; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 1024, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 16, !dbg !15
  %12 = srem i32 %11, 16, !dbg !16
  %13 = mul i32 %11, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %13, !dbg !17
  %.frozen4 = freeze i32 %9, !dbg !18
  %14 = sdiv i32 %.frozen4, 256, !dbg !18
  %15 = icmp slt i32 %12, 4, !dbg !19
  %16 = shl nsw i32 %14, 6, !dbg !20
  %17 = add nsw i32 %16, %.decomposed, !dbg !21
  %18 = sext i32 %17 to i64, !dbg !22
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !22
  %20 = and i1 %10, %15, !dbg !23
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %20, i32 0, i1 %20) #1, !dbg !24
  %22 = bitcast i32 %21 to float, !dbg !24
  %23 = fsub float 0.000000e+00, %22, !dbg !25
  %24 = fmul float %23, 0x3FF7154760000000, !dbg !29
  %25 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %24) #1, !dbg !29
  %26 = fadd float %25, 1.000000e+00, !dbg !30
  %27 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %26) #1, !dbg !31
  %28 = mul i32 %14, 256, !dbg !32
  %srem.decomposed = sub i32 %.frozen4, %28, !dbg !32
  %29 = sext i32 %srem.decomposed to i64, !dbg !33
  %30 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !33
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %20, i32 0, i1 %20) #1, !dbg !34
  %32 = bitcast i32 %31 to float, !dbg !34
  %33 = fmul float %27, %32, !dbg !35
  %34 = and i32 %12, -4, !dbg !36
  %35 = icmp eq i32 %34, 4, !dbg !36
  %36 = getelementptr i8, ptr addrspace(1) %19, i64 64, !dbg !37
  %37 = and i1 %10, %35, !dbg !38
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %37, i32 0, i1 %37) #1, !dbg !39
  %39 = bitcast i32 %38 to float, !dbg !39
  %40 = fsub float 0.000000e+00, %39, !dbg !40
  %41 = fmul float %40, 0x3FF7154760000000, !dbg !42
  %42 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %41) #1, !dbg !42
  %43 = fadd float %42, 1.000000e+00, !dbg !43
  %44 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %43) #1, !dbg !44
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %37, i32 0, i1 %37) #1, !dbg !45
  %46 = bitcast i32 %45 to float, !dbg !45
  %47 = fmul float %44, %46, !dbg !46
  %48 = icmp eq i32 %34, 8, !dbg !47
  %49 = getelementptr i8, ptr addrspace(1) %19, i64 128, !dbg !48
  %50 = and i1 %10, %48, !dbg !49
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %50, i32 0, i1 %50) #1, !dbg !50
  %52 = bitcast i32 %51 to float, !dbg !50
  %53 = fsub float 0.000000e+00, %52, !dbg !51
  %54 = fmul float %53, 0x3FF7154760000000, !dbg !53
  %55 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %54) #1, !dbg !53
  %56 = fadd float %55, 1.000000e+00, !dbg !54
  %57 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %56) #1, !dbg !55
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %50, i32 0, i1 %50) #1, !dbg !56
  %59 = bitcast i32 %58 to float, !dbg !56
  %60 = fmul float %57, %59, !dbg !57
  %61 = icmp sgt i32 %12, 11, !dbg !58
  %62 = getelementptr i8, ptr addrspace(1) %19, i64 192, !dbg !59
  %63 = and i1 %10, %61, !dbg !60
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %63, i32 0, i1 %63) #1, !dbg !61
  %65 = bitcast i32 %64 to float, !dbg !61
  %66 = fsub float 0.000000e+00, %65, !dbg !62
  %67 = fmul float %66, 0x3FF7154760000000, !dbg !64
  %68 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %67) #1, !dbg !64
  %69 = fadd float %68, 1.000000e+00, !dbg !65
  %70 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %69) #1, !dbg !66
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %63, i32 0, i1 %63) #1, !dbg !67
  %72 = bitcast i32 %71 to float, !dbg !67
  %73 = fmul float %70, %72, !dbg !68
  %74 = select i1 %61, float %73, float 0.000000e+00, !dbg !69
  %75 = select i1 %48, float %60, float %74, !dbg !70
  %76 = select i1 %35, float %47, float %75, !dbg !70
  %77 = select i1 %15, float %33, float %76, !dbg !70
  %78 = sext i32 %9 to i64, !dbg !71
  %79 = getelementptr float, ptr addrspace(1) %2, i64 %78, !dbg !71
  %80 = bitcast float %77 to i32, !dbg !72
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %80, ptr addrspace(1) %79, i1 %10) #1, !dbg !72
  ret void, !dbg !73
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py", directory: "inductor_cache/lz")
!4 = !{ptr @triton_poi_fused_cat_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_3", linkageName: "triton_poi_fused_cat_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 38, scope: !7)
!21 = !DILocation(line: 33, column: 35, scope: !7)
!22 = !DILocation(line: 33, column: 30, scope: !7)
!23 = !DILocation(line: 33, column: 50, scope: !7)
!24 = !DILocation(line: 33, column: 43, scope: !7)
!25 = !DILocation(line: 47, column: 30, scope: !26, inlinedAt: !28)
!26 = distinct !DILexicalBlockFile(scope: !7, file: !27, discriminator: 0)
!27 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!28 = !DILocation(line: 34, column: 22, scope: !7)
!29 = !DILocation(line: 47, column: 29, scope: !26, inlinedAt: !28)
!30 = !DILocation(line: 47, column: 20, scope: !26, inlinedAt: !28)
!31 = !DILocation(line: 47, column: 16, scope: !26, inlinedAt: !28)
!32 = !DILocation(line: 35, column: 35, scope: !7)
!33 = !DILocation(line: 35, column: 30, scope: !7)
!34 = !DILocation(line: 35, column: 45, scope: !7)
!35 = !DILocation(line: 36, column: 18, scope: !7)
!36 = !DILocation(line: 42, column: 20, scope: !7)
!37 = !DILocation(line: 43, column: 31, scope: !7)
!38 = !DILocation(line: 43, column: 57, scope: !7)
!39 = !DILocation(line: 43, column: 49, scope: !7)
!40 = !DILocation(line: 47, column: 30, scope: !26, inlinedAt: !41)
!41 = !DILocation(line: 44, column: 23, scope: !7)
!42 = !DILocation(line: 47, column: 29, scope: !26, inlinedAt: !41)
!43 = !DILocation(line: 47, column: 20, scope: !26, inlinedAt: !41)
!44 = !DILocation(line: 47, column: 16, scope: !26, inlinedAt: !41)
!45 = !DILocation(line: 45, column: 58, scope: !7)
!46 = !DILocation(line: 46, column: 20, scope: !7)
!47 = !DILocation(line: 52, column: 20, scope: !7)
!48 = !DILocation(line: 53, column: 31, scope: !7)
!49 = !DILocation(line: 53, column: 57, scope: !7)
!50 = !DILocation(line: 53, column: 49, scope: !7)
!51 = !DILocation(line: 47, column: 30, scope: !26, inlinedAt: !52)
!52 = !DILocation(line: 54, column: 23, scope: !7)
!53 = !DILocation(line: 47, column: 29, scope: !26, inlinedAt: !52)
!54 = !DILocation(line: 47, column: 20, scope: !26, inlinedAt: !52)
!55 = !DILocation(line: 47, column: 16, scope: !26, inlinedAt: !52)
!56 = !DILocation(line: 55, column: 59, scope: !7)
!57 = !DILocation(line: 56, column: 20, scope: !7)
!58 = !DILocation(line: 59, column: 20, scope: !7)
!59 = !DILocation(line: 62, column: 31, scope: !7)
!60 = !DILocation(line: 62, column: 57, scope: !7)
!61 = !DILocation(line: 62, column: 49, scope: !7)
!62 = !DILocation(line: 47, column: 30, scope: !26, inlinedAt: !63)
!63 = !DILocation(line: 63, column: 23, scope: !7)
!64 = !DILocation(line: 47, column: 29, scope: !26, inlinedAt: !63)
!65 = !DILocation(line: 47, column: 20, scope: !26, inlinedAt: !63)
!66 = !DILocation(line: 47, column: 16, scope: !26, inlinedAt: !63)
!67 = !DILocation(line: 64, column: 60, scope: !7)
!68 = !DILocation(line: 65, column: 20, scope: !7)
!69 = !DILocation(line: 67, column: 35, scope: !7)
!70 = !DILocation(line: 0, scope: !7)
!71 = !DILocation(line: 71, column: 25, scope: !7)
!72 = !DILocation(line: 71, column: 37, scope: !7)
!73 = !DILocation(line: 71, column: 4, scope: !7)
