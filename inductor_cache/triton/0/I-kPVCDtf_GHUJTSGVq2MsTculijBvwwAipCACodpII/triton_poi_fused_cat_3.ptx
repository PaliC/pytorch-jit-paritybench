//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_3  // -- Begin function triton_poi_fused_cat_3
                                        // @triton_poi_fused_cat_3
.visible .entry triton_poi_fused_cat_3(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_3_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_3_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_3_param_2,
	.param .u32 triton_poi_fused_cat_3_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<54>;
	.reg .f32 	%f<38>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_cat_3_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_cat_3_param_1];
$L__tmp0:
	.loc	1 21 28                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:21:33
	shl.b32 	%r31, %r1, 7;
	ld.param.u64 	%rd12, [triton_poi_fused_cat_3_param_2];
	.loc	1 22 36                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:22:36
	mov.u32 	%r32, %tid.x;
	and.b32  	%r33, %r32, 127;
	.loc	1 22 23                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:22:23
	or.b32  	%r34, %r31, %r33;
	.loc	1 23 21                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:23:21
	setp.lt.s32 	%p17, %r34, 1024;
	.loc	1 24 21                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:24:21
	shr.s32 	%r36, %r34, 31;
	shr.u32 	%r37, %r36, 28;
	add.s32 	%r38, %r34, %r37;
	shr.s32 	%r39, %r38, 4;
	.loc	1 24 27                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:24:27
	shr.u32 	%r40, %r39, 28;
	add.s32 	%r41, %r39, %r40;
	and.b32  	%r42, %r41, -16;
	sub.s32 	%r43, %r39, %r42;
	.loc	1 25 19                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:25:19
	and.b32  	%r44, %r38, -16;
	sub.s32 	%r45, %r34, %r44;
	.loc	1 26 19                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:26:19
	shr.u32 	%r46, %r36, 24;
	add.s32 	%r47, %r34, %r46;
	shr.s32 	%r48, %r47, 8;
	.loc	1 32 18                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:32:18
	setp.lt.s32 	%p18, %r43, 4;
	.loc	1 33 38                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:33:38
	shl.b32 	%r49, %r48, 6;
	.loc	1 33 35                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:33:35
	add.s32 	%r50, %r49, %r45;
	.loc	1 33 30                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:33:30
	mul.wide.s32 	%rd13, %r50, 4;
	add.s64 	%rd1, %rd10, %rd13;
	.loc	1 33 50                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:33:50
	and.pred  	%p1, %p17, %p18;
	mov.b32 	%r3, 0;
	.loc	1 33 43                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:33:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f9, %r2;
	mov.f32 	%f10, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f11, %f10, %f9;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f11, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f12, %f1, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r6, %f12;
	mov.b32 	%r5, 1065353216;
	// begin inline asm
	div.full.f32 %r4, %r5, %r6;
	// end inline asm
	mov.b32 	%f13, %r4;
$L__tmp2:
	.loc	1 35 35                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:35:35
	and.b32  	%r51, %r47, -256;
	sub.s32 	%r52, %r34, %r51;
	.loc	1 35 30                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:35:30
	mul.wide.s32 	%rd14, %r52, 4;
	add.s64 	%rd2, %rd11, %rd14;
	.loc	1 35 45                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:35:45
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r7, %r3;
	// end inline asm
	mov.b32 	%f14, %r7;
	.loc	1 36 18                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:36:18
	mul.f32 	%f15, %f13, %f14;
	.loc	1 42 20                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:42:20
	and.b32  	%r53, %r43, -4;
	setp.eq.s32 	%p19, %r53, 4;
	.loc	1 43 31                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:43:31
	add.s64 	%rd3, %rd1, 64;
	.loc	1 43 57                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:43:57
	and.pred  	%p5, %p17, %p19;
	.loc	1 43 49                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:43:49
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r9 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r9, %r3;
	// end inline asm
	mov.b32 	%f16, %r9;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f17, %f10, %f16;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f4, %f17, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f18, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r13, %f18;
	// begin inline asm
	div.full.f32 %r11, %r5, %r13;
	// end inline asm
	mov.b32 	%f19, %r11;
$L__tmp4:
	.loc	1 45 58                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:45:58
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r14 }, [ %rd2 + 0 ];
	@!%p5 mov.u32 %r14, %r3;
	// end inline asm
	mov.b32 	%f20, %r14;
	.loc	1 46 20                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:46:20
	mul.f32 	%f21, %f19, %f20;
	.loc	1 52 20                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:52:20
	setp.eq.s32 	%p20, %r53, 8;
	.loc	1 53 31                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:53:31
	add.s64 	%rd5, %rd1, 128;
	.loc	1 53 57                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:53:57
	and.pred  	%p9, %p17, %p20;
	.loc	1 53 49                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:53:49
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r16 }, [ %rd5 + 0 ];
	@!%p9 mov.u32 %r16, %r3;
	// end inline asm
	mov.b32 	%f22, %r16;
$L__tmp5:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f23, %f10, %f22;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f6, %f23, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f24, %f5, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r20, %f24;
	// begin inline asm
	div.full.f32 %r18, %r5, %r20;
	// end inline asm
	mov.b32 	%f25, %r18;
$L__tmp6:
	.loc	1 55 59                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:55:59
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r21 }, [ %rd2 + 0 ];
	@!%p9 mov.u32 %r21, %r3;
	// end inline asm
	mov.b32 	%f26, %r21;
	.loc	1 56 20                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:56:20
	mul.f32 	%f27, %f25, %f26;
	.loc	1 59 20                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:59:20
	setp.gt.s32 	%p21, %r43, 11;
	.loc	1 62 31                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:62:31
	add.s64 	%rd7, %rd1, 192;
	.loc	1 62 57                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:62:57
	and.pred  	%p13, %p17, %p21;
	.loc	1 62 49                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:62:49
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r23 }, [ %rd7 + 0 ];
	@!%p13 mov.u32 %r23, %r3;
	// end inline asm
	mov.b32 	%f28, %r23;
$L__tmp7:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f29, %f10, %f28;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f8, %f29, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f30, %f7, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r27, %f30;
	// begin inline asm
	div.full.f32 %r25, %r5, %r27;
	// end inline asm
	mov.b32 	%f31, %r25;
$L__tmp8:
	.loc	1 64 60                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:64:60
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r28 }, [ %rd2 + 0 ];
	@!%p13 mov.u32 %r28, %r3;
	// end inline asm
	mov.b32 	%f32, %r28;
	.loc	1 65 20                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:65:20
	mul.f32 	%f33, %f31, %f32;
	.loc	1 67 35                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:67:35
	selp.f32 	%f34, %f33, 0f00000000, %p21;
	.loc	1 0 0                           // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:0:0
	selp.f32 	%f35, %f27, %f34, %p20;
	selp.f32 	%f36, %f21, %f35, %p19;
	selp.f32 	%f37, %f15, %f36, %p18;
	.loc	1 71 25                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:71:25
	mul.wide.s32 	%rd15, %r34, 4;
	add.s64 	%rd9, %rd12, %rd15;
	.loc	1 71 37                         // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:71:37
	mov.b32 	%r30, %f37;
	// begin inline asm
	@%p17 st.global.b32 [ %rd9 + 0 ], { %r30 };
	// end inline asm
	.loc	1 71 4                          // clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py:71:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/lz/clz6aesygiswdqi77dr7neo4wcr2iuaoffing37wphgdgo5q74rd.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 239                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 122
.b8 54
.b8 97
.b8 101
.b8 115
.b8 121
.b8 103
.b8 105
.b8 115
.b8 119
.b8 100
.b8 113
.b8 105
.b8 55
.b8 55
.b8 100
.b8 114
.b8 55
.b8 110
.b8 101
.b8 111
.b8 52
.b8 119
.b8 99
.b8 114
.b8 50
.b8 105
.b8 117
.b8 97
.b8 111
.b8 102
.b8 102
.b8 105
.b8 110
.b8 103
.b8 51
.b8 55
.b8 119
.b8 112
.b8 104
.b8 103
.b8 100
.b8 103
.b8 111
.b8 53
.b8 113
.b8 55
.b8 52
.b8 114
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 108
.b8 122
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x19 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7c:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x91:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 34                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xa9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 63                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
