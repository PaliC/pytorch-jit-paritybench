//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_41 // -- Begin function triton_poi_fused_clone_41
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_clone_41
.visible .entry triton_poi_fused_clone_41(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_41_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_41_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_41_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_41_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_41_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_41_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_41_param_6,
	.param .u32 triton_poi_fused_clone_41_param_7,
	.param .u32 triton_poi_fused_clone_41_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<73>;
	.reg .b32 	%r<245>;
	.reg .f32 	%f<119>;
	.reg .b64 	%rd<70>;
	.loc	1 19 0                          // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd41, [triton_poi_fused_clone_41_param_0];
	ld.param.u64 	%rd42, [triton_poi_fused_clone_41_param_1];
$L__tmp0:
	.loc	1 22 28                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:22:33
	shl.b32 	%r122, %r1, 8;
	ld.param.u64 	%rd43, [triton_poi_fused_clone_41_param_2];
	ld.param.u64 	%rd44, [triton_poi_fused_clone_41_param_3];
	.loc	1 23 44                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:23:44
	mov.u32 	%r123, %tid.x;
	ld.param.u64 	%rd45, [triton_poi_fused_clone_41_param_4];
	bfe.u32 	%r124, %r123, 4, 4;
	ld.param.u64 	%rd46, [triton_poi_fused_clone_41_param_5];
	ld.param.u64 	%rd47, [triton_poi_fused_clone_41_param_6];
	and.b32  	%r125, %r123, 15;
	and.b32  	%r126, %r123, 255;
	.loc	1 23 23                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:23:23
	or.b32  	%r127, %r122, %r124;
	or.b32  	%r128, %r122, %r126;
	.loc	1 25 28                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:25:33
	shl.b32 	%r129, %r2, 4;
	.loc	1 26 23                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:26:23
	or.b32  	%r130, %r129, %r125;
	.loc	1 27 21                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:27:21
	setp.lt.s32 	%p1, %r130, 16;
	.loc	1 30 19                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:30:19
	bfe.s32 	%r131, %r1, 23, 1;
	shr.u32 	%r132, %r131, 23;
	add.s32 	%r133, %r128, %r132;
	and.b32  	%r134, %r133, -512;
	sub.s32 	%r135, %r128, %r134;
	.loc	1 23 23                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:23:23
	shl.b32 	%r136, %r127, 4;
	.loc	1 31 57                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:31:57
	add.s32 	%r137, %r130, %r136;
	add.s32 	%r138, %r137, 256;
	add.s32 	%r139, %r137, 512;
	add.s32 	%r140, %r137, 768;
	add.s32 	%r141, %r137, 1024;
	add.s32 	%r142, %r137, 1280;
	add.s32 	%r143, %r137, 1536;
	add.s32 	%r144, %r137, 1792;
	add.s32 	%r145, %r137, 2048;
	add.s32 	%r146, %r137, 2304;
	add.s32 	%r147, %r137, 2560;
	add.s32 	%r148, %r137, 2816;
	add.s32 	%r149, %r137, 3072;
	add.s32 	%r150, %r137, 3328;
	add.s32 	%r151, %r137, 3584;
	add.s32 	%r152, %r137, 3840;
	.loc	1 31 30                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:31:30
	mul.wide.s32 	%rd48, %r137, 4;
	add.s64 	%rd1, %rd41, %rd48;
	mul.wide.s32 	%rd49, %r138, 4;
	add.s64 	%rd2, %rd41, %rd49;
	mul.wide.s32 	%rd50, %r139, 4;
	add.s64 	%rd3, %rd41, %rd50;
	mul.wide.s32 	%rd51, %r140, 4;
	add.s64 	%rd4, %rd41, %rd51;
	mul.wide.s32 	%rd52, %r141, 4;
	add.s64 	%rd5, %rd41, %rd52;
	mul.wide.s32 	%rd53, %r142, 4;
	add.s64 	%rd6, %rd41, %rd53;
	mul.wide.s32 	%rd54, %r143, 4;
	add.s64 	%rd7, %rd41, %rd54;
	mul.wide.s32 	%rd55, %r144, 4;
	add.s64 	%rd8, %rd41, %rd55;
	mul.wide.s32 	%rd56, %r145, 4;
	add.s64 	%rd9, %rd41, %rd56;
	mul.wide.s32 	%rd57, %r146, 4;
	add.s64 	%rd10, %rd41, %rd57;
	mul.wide.s32 	%rd58, %r147, 4;
	add.s64 	%rd11, %rd41, %rd58;
	mul.wide.s32 	%rd59, %r148, 4;
	add.s64 	%rd12, %rd41, %rd59;
	mul.wide.s32 	%rd60, %r149, 4;
	add.s64 	%rd13, %rd41, %rd60;
	mul.wide.s32 	%rd61, %r150, 4;
	add.s64 	%rd14, %rd41, %rd61;
	mul.wide.s32 	%rd62, %r151, 4;
	add.s64 	%rd15, %rd41, %rd62;
	mul.wide.s32 	%rd63, %r152, 4;
	add.s64 	%rd16, %rd41, %rd63;
	.loc	1 31 65                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:31:65
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r9;
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r12;
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r13;
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r15;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r16;
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r17;
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r18;
	.loc	1 32 30                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:32:30
	add.s64 	%rd17, %rd42, %rd48;
	add.s64 	%rd18, %rd42, %rd49;
	add.s64 	%rd19, %rd42, %rd50;
	add.s64 	%rd20, %rd42, %rd51;
	add.s64 	%rd21, %rd42, %rd52;
	add.s64 	%rd22, %rd42, %rd53;
	add.s64 	%rd23, %rd42, %rd54;
	add.s64 	%rd24, %rd42, %rd55;
	add.s64 	%rd25, %rd42, %rd56;
	add.s64 	%rd26, %rd42, %rd57;
	add.s64 	%rd27, %rd42, %rd58;
	add.s64 	%rd28, %rd42, %rd59;
	add.s64 	%rd29, %rd42, %rd60;
	add.s64 	%rd30, %rd42, %rd61;
	add.s64 	%rd31, %rd42, %rd62;
	add.s64 	%rd32, %rd42, %rd63;
	.loc	1 32 65                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:32:65
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd17 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r19;
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd18 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r20;
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r21;
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd20 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r22;
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd21 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r23;
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd22 + 0 ];
	// end inline asm
	mov.b32 	%f22, %r24;
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd23 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r25;
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r26 }, [ %rd24 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r26;
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r27 }, [ %rd25 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r27;
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r28 }, [ %rd26 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r28;
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r29 }, [ %rd27 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r30 }, [ %rd28 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r30;
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r31 }, [ %rd29 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r31;
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r32 }, [ %rd30 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r32;
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r33 }, [ %rd31 + 0 ];
	// end inline asm
	mov.b32 	%f31, %r33;
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r34 }, [ %rd32 + 0 ];
	// end inline asm
	mov.b32 	%f32, %r34;
	.loc	1 33 36                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:33:36
	shr.u32 	%r153, %r131, 28;
	add.s32 	%r154, %r128, %r153;
	shr.s32 	%r155, %r154, 4;
	.loc	1 33 30                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:33:30
	mul.wide.s32 	%rd64, %r155, 4;
	add.s64 	%rd33, %rd43, %rd64;
	mov.pred 	%p33, -1;
	.loc	1 33 41                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:33:41
	// begin inline asm
	mov.u32 %r35, 0x0;
	@%p33 ld.global.L1::evict_last.b32 { %r35 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:34:30
	add.s64 	%rd34, %rd44, %rd64;
	.loc	1 34 41                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:34:41
	// begin inline asm
	mov.u32 %r72, 0x0;
	@%p33 ld.global.L1::evict_last.b32 { %r72 }, [ %rd34 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:35:31
	mul.wide.s32 	%rd65, %r135, 4;
	add.s64 	%rd35, %rd45, %rd65;
	.loc	1 35 36                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:35:36
	// begin inline asm
	mov.u32 %r37, 0x0;
	@%p33 ld.global.L1::evict_last.b32 { %r37 }, [ %rd35 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:36:31
	add.s64 	%rd36, %rd46, %rd65;
	.loc	1 36 36                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:36:36
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p33 ld.global.L1::evict_last.b32 { %r38 }, [ %rd36 + 0 ];
	// end inline asm
	.loc	1 37 18                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:37:18
	add.f32 	%f33, %f1, %f17;
	add.f32 	%f34, %f2, %f18;
	add.f32 	%f35, %f3, %f19;
	add.f32 	%f36, %f4, %f20;
	add.f32 	%f37, %f5, %f21;
	add.f32 	%f38, %f6, %f22;
	add.f32 	%f39, %f7, %f23;
	add.f32 	%f40, %f8, %f24;
	add.f32 	%f41, %f9, %f25;
	add.f32 	%f42, %f10, %f26;
	add.f32 	%f43, %f11, %f27;
	add.f32 	%f44, %f12, %f28;
	add.f32 	%f45, %f13, %f29;
	add.f32 	%f46, %f14, %f30;
	add.f32 	%f47, %f15, %f31;
	add.f32 	%f48, %f16, %f32;
	shl.b32 	%r156, %r123, 4;
	and.b32  	%r157, %r156, 4080;
	shr.u32 	%r158, %r123, 2;
	and.b32  	%r159, %r158, 60;
	mov.u32 	%r160, global_smem;
	shl.b32 	%r161, %r126, 2;
	.loc	1 47 47                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:47:47
	add.s32 	%r74, %r160, %r161;
	.loc	1 37 18                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:37:18
	add.s32 	%r39, %r74, %r159;
	mov.b32 	%r40, %f33;
	// begin inline asm
	@%p33 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	or.b32  	%r162, %r126, 256;
	shr.u32 	%r163, %r162, 2;
	and.b32  	%r164, %r163, 124;
	add.s32 	%r165, %r74, %r164;
	add.s32 	%r41, %r165, 1024;
	mov.b32 	%r42, %f34;
	// begin inline asm
	@%p33 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	or.b32  	%r166, %r126, 512;
	shr.u32 	%r167, %r166, 2;
	and.b32  	%r168, %r167, 188;
	add.s32 	%r169, %r74, %r168;
	add.s32 	%r43, %r169, 2048;
	mov.b32 	%r44, %f35;
	// begin inline asm
	@%p33 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	or.b32  	%r170, %r126, 768;
	shr.u32 	%r171, %r170, 2;
	and.b32  	%r172, %r171, 252;
	add.s32 	%r173, %r74, %r172;
	add.s32 	%r45, %r173, 3072;
	mov.b32 	%r46, %f36;
	// begin inline asm
	@%p33 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	or.b32  	%r174, %r126, 1024;
	shr.u32 	%r175, %r174, 2;
	and.b32  	%r176, %r175, 316;
	add.s32 	%r177, %r74, %r176;
	add.s32 	%r47, %r177, 4096;
	mov.b32 	%r48, %f37;
	// begin inline asm
	@%p33 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	or.b32  	%r178, %r126, 1280;
	shr.u32 	%r179, %r178, 2;
	and.b32  	%r180, %r179, 380;
	add.s32 	%r181, %r74, %r180;
	add.s32 	%r49, %r181, 5120;
	mov.b32 	%r50, %f38;
	// begin inline asm
	@%p33 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	or.b32  	%r182, %r126, 1536;
	shr.u32 	%r183, %r182, 2;
	and.b32  	%r184, %r183, 444;
	add.s32 	%r185, %r74, %r184;
	add.s32 	%r51, %r185, 6144;
	mov.b32 	%r52, %f39;
	// begin inline asm
	@%p33 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	or.b32  	%r186, %r126, 1792;
	shr.u32 	%r187, %r186, 2;
	and.b32  	%r188, %r187, 508;
	add.s32 	%r189, %r74, %r188;
	add.s32 	%r53, %r189, 7168;
	mov.b32 	%r54, %f40;
	// begin inline asm
	@%p33 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	or.b32  	%r190, %r126, 2048;
	shr.u32 	%r191, %r190, 2;
	and.b32  	%r192, %r191, 572;
	add.s32 	%r193, %r74, %r192;
	add.s32 	%r55, %r193, 8192;
	mov.b32 	%r56, %f41;
	// begin inline asm
	@%p33 st.shared.b32 [ %r55 + 0 ], %r56;
	// end inline asm
	or.b32  	%r194, %r126, 2304;
	shr.u32 	%r195, %r194, 2;
	and.b32  	%r196, %r195, 636;
	add.s32 	%r197, %r74, %r196;
	add.s32 	%r57, %r197, 9216;
	mov.b32 	%r58, %f42;
	// begin inline asm
	@%p33 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	or.b32  	%r198, %r126, 2560;
	shr.u32 	%r199, %r198, 2;
	and.b32  	%r200, %r199, 700;
	add.s32 	%r201, %r74, %r200;
	add.s32 	%r59, %r201, 10240;
	mov.b32 	%r60, %f43;
	// begin inline asm
	@%p33 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	or.b32  	%r202, %r126, 2816;
	shr.u32 	%r203, %r202, 2;
	and.b32  	%r204, %r203, 764;
	add.s32 	%r205, %r74, %r204;
	add.s32 	%r61, %r205, 11264;
	mov.b32 	%r62, %f44;
	// begin inline asm
	@%p33 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	or.b32  	%r206, %r126, 3072;
	shr.u32 	%r207, %r206, 2;
	and.b32  	%r208, %r207, 828;
	add.s32 	%r209, %r74, %r208;
	add.s32 	%r63, %r209, 12288;
	mov.b32 	%r64, %f45;
	// begin inline asm
	@%p33 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	or.b32  	%r210, %r126, 3328;
	shr.u32 	%r211, %r210, 2;
	and.b32  	%r212, %r211, 892;
	add.s32 	%r213, %r74, %r212;
	add.s32 	%r65, %r213, 13312;
	mov.b32 	%r66, %f46;
	// begin inline asm
	@%p33 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	or.b32  	%r214, %r126, 3584;
	shr.u32 	%r215, %r214, 2;
	and.b32  	%r216, %r215, 956;
	add.s32 	%r217, %r74, %r216;
	add.s32 	%r67, %r217, 14336;
	mov.b32 	%r68, %f47;
	// begin inline asm
	@%p33 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	or.b32  	%r218, %r126, 3840;
	shr.u32 	%r219, %r218, 2;
	and.b32  	%r220, %r219, 1020;
	add.s32 	%r221, %r74, %r220;
	add.s32 	%r69, %r221, 15360;
	mov.b32 	%r70, %f48;
	// begin inline asm
	@%p33 st.shared.b32 [ %r69 + 0 ], %r70;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r222, %r157, 2;
	add.s32 	%r223, %r160, %r222;
	shl.b32 	%r224, %r157, 2;
	add.s32 	%r225, %r223, %r224;
	ld.shared.f32 	%f49, [%r225];
	ld.shared.f32 	%f50, [%r225+4];
	ld.shared.f32 	%f51, [%r225+8];
	ld.shared.f32 	%f52, [%r225+12];
	ld.shared.f32 	%f53, [%r225+16];
	ld.shared.f32 	%f54, [%r225+20];
	ld.shared.f32 	%f55, [%r225+24];
	ld.shared.f32 	%f56, [%r225+28];
	ld.shared.f32 	%f57, [%r225+32];
	ld.shared.f32 	%f58, [%r225+36];
	ld.shared.f32 	%f59, [%r225+40];
	ld.shared.f32 	%f60, [%r225+44];
	ld.shared.f32 	%f61, [%r225+48];
	ld.shared.f32 	%f62, [%r225+52];
	ld.shared.f32 	%f63, [%r225+56];
	ld.shared.f32 	%f64, [%r225+60];
	mov.b32 	%r73, 1132462080;
	.loc	1 40 18                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:40:18
	// begin inline asm
	div.full.f32 %r71, %r72, %r73;
	// end inline asm
	mov.b32 	%f65, %r71;
	.loc	1 42 18                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:42:18
	add.f32 	%f66, %f65, 0f3727C5AC;
	.loc	1 43 28                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:43:28
	rsqrt.approx.ftz.f32 	%f67, %f66;
	.loc	1 33 41                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:33:41
	mov.b32 	%f68, %r35;
	.loc	1 38 18                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:38:18
	sub.f32 	%f69, %f64, %f68;
	sub.f32 	%f70, %f63, %f68;
	sub.f32 	%f71, %f62, %f68;
	sub.f32 	%f72, %f61, %f68;
	sub.f32 	%f73, %f60, %f68;
	sub.f32 	%f74, %f59, %f68;
	sub.f32 	%f75, %f58, %f68;
	sub.f32 	%f76, %f57, %f68;
	sub.f32 	%f77, %f56, %f68;
	sub.f32 	%f78, %f55, %f68;
	sub.f32 	%f79, %f54, %f68;
	sub.f32 	%f80, %f53, %f68;
	sub.f32 	%f81, %f52, %f68;
	sub.f32 	%f82, %f51, %f68;
	sub.f32 	%f83, %f50, %f68;
	sub.f32 	%f84, %f49, %f68;
	.loc	1 36 36                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:36:36
	mov.b32 	%f85, %r38;
	.loc	1 35 36                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:35:36
	mov.b32 	%f86, %r37;
	.loc	1 26 44                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:26:44
	bfe.u32 	%r226, %r123, 6, 2;
	.loc	1 26 23                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:26:23
	or.b32  	%r227, %r226, %r129;
	or.b32  	%r228, %r227, 12;
	.loc	1 27 21                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:27:21
	setp.lt.s32 	%p72, %r228, 16;
	.loc	1 26 23                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:26:23
	or.b32  	%r229, %r227, 8;
	.loc	1 27 21                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:27:21
	setp.lt.s32 	%p71, %r229, 16;
	.loc	1 26 23                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:26:23
	or.b32  	%r230, %r227, 4;
	.loc	1 27 21                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:27:21
	setp.lt.s32 	%p70, %r230, 16;
	setp.lt.s32 	%p69, %r227, 16;
	.loc	1 23 44                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:23:44
	shl.b32 	%r231, %r123, 2;
	and.b32  	%r232, %r231, 252;
	.loc	1 23 23                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:23:23
	or.b32  	%r233, %r122, %r232;
	.loc	1 44 19                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:44:19
	mul.f32 	%f87, %f84, %f67;
	mul.f32 	%f88, %f83, %f67;
	mul.f32 	%f89, %f82, %f67;
	mul.f32 	%f90, %f81, %f67;
	mul.f32 	%f91, %f80, %f67;
	mul.f32 	%f92, %f79, %f67;
	mul.f32 	%f93, %f78, %f67;
	mul.f32 	%f94, %f77, %f67;
	mul.f32 	%f95, %f76, %f67;
	mul.f32 	%f96, %f75, %f67;
	mul.f32 	%f97, %f74, %f67;
	mul.f32 	%f98, %f73, %f67;
	mul.f32 	%f99, %f72, %f67;
	mul.f32 	%f100, %f71, %f67;
	mul.f32 	%f101, %f70, %f67;
	mul.f32 	%f102, %f69, %f67;
	.loc	1 46 20                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:46:20
	fma.rn.f32 	%f103, %f87, %f86, %f85;
	fma.rn.f32 	%f104, %f88, %f86, %f85;
	fma.rn.f32 	%f105, %f89, %f86, %f85;
	fma.rn.f32 	%f106, %f90, %f86, %f85;
	fma.rn.f32 	%f107, %f91, %f86, %f85;
	fma.rn.f32 	%f108, %f92, %f86, %f85;
	fma.rn.f32 	%f109, %f93, %f86, %f85;
	fma.rn.f32 	%f110, %f94, %f86, %f85;
	fma.rn.f32 	%f111, %f95, %f86, %f85;
	fma.rn.f32 	%f112, %f96, %f86, %f85;
	fma.rn.f32 	%f113, %f97, %f86, %f85;
	fma.rn.f32 	%f114, %f98, %f86, %f85;
	fma.rn.f32 	%f115, %f99, %f86, %f85;
	fma.rn.f32 	%f116, %f100, %f86, %f85;
	fma.rn.f32 	%f117, %f101, %f86, %f85;
	fma.rn.f32 	%f118, %f102, %f86, %f85;
	.loc	1 47 35                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:47:35
	shl.b32 	%r234, %r227, 11;
	shl.b32 	%r235, %r230, 11;
	shl.b32 	%r236, %r229, 11;
	shl.b32 	%r237, %r228, 11;
	.loc	1 47 30                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:47:30
	add.s32 	%r238, %r234, %r233;
	add.s32 	%r239, %r235, %r233;
	add.s32 	%r240, %r236, %r233;
	add.s32 	%r241, %r237, %r233;
	.loc	1 47 25                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:47:25
	mul.wide.s32 	%rd66, %r238, 4;
	add.s64 	%rd37, %rd47, %rd66;
	mul.wide.s32 	%rd67, %r239, 4;
	add.s64 	%rd38, %rd47, %rd67;
	mul.wide.s32 	%rd68, %r240, 4;
	add.s64 	%rd39, %rd47, %rd68;
	mul.wide.s32 	%rd69, %r241, 4;
	add.s64 	%rd40, %rd47, %rd69;
	.loc	1 47 47                         // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:47:47
	bar.sync 	0;
	mov.b32 	%r75, %f103;
	// begin inline asm
	@%p33 st.shared.b32 [ %r74 + 0 ], %r75;
	// end inline asm
	add.s32 	%r76, %r74, 1040;
	mov.b32 	%r77, %f104;
	// begin inline asm
	@%p33 st.shared.b32 [ %r76 + 0 ], %r77;
	// end inline asm
	add.s32 	%r78, %r74, 2080;
	mov.b32 	%r79, %f105;
	// begin inline asm
	@%p33 st.shared.b32 [ %r78 + 0 ], %r79;
	// end inline asm
	add.s32 	%r80, %r74, 3120;
	mov.b32 	%r81, %f106;
	// begin inline asm
	@%p33 st.shared.b32 [ %r80 + 0 ], %r81;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r242, %r158, 48;
	add.s32 	%r243, %r160, %r242;
	add.s32 	%r244, %r243, %r157;
	ld.shared.v4.u32 	{%r106, %r107, %r108, %r109}, [%r244];
	bar.sync 	0;
	mov.b32 	%r83, %f107;
	// begin inline asm
	@%p33 st.shared.b32 [ %r74 + 0 ], %r83;
	// end inline asm
	mov.b32 	%r85, %f108;
	// begin inline asm
	@%p33 st.shared.b32 [ %r76 + 0 ], %r85;
	// end inline asm
	mov.b32 	%r87, %f109;
	// begin inline asm
	@%p33 st.shared.b32 [ %r78 + 0 ], %r87;
	// end inline asm
	mov.b32 	%r89, %f110;
	// begin inline asm
	@%p33 st.shared.b32 [ %r80 + 0 ], %r89;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r110, %r111, %r112, %r113}, [%r244];
	bar.sync 	0;
	mov.b32 	%r91, %f111;
	// begin inline asm
	@%p33 st.shared.b32 [ %r74 + 0 ], %r91;
	// end inline asm
	mov.b32 	%r93, %f112;
	// begin inline asm
	@%p33 st.shared.b32 [ %r76 + 0 ], %r93;
	// end inline asm
	mov.b32 	%r95, %f113;
	// begin inline asm
	@%p33 st.shared.b32 [ %r78 + 0 ], %r95;
	// end inline asm
	mov.b32 	%r97, %f114;
	// begin inline asm
	@%p33 st.shared.b32 [ %r80 + 0 ], %r97;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r114, %r115, %r116, %r117}, [%r244];
	bar.sync 	0;
	mov.b32 	%r99, %f115;
	// begin inline asm
	@%p33 st.shared.b32 [ %r74 + 0 ], %r99;
	// end inline asm
	mov.b32 	%r101, %f116;
	// begin inline asm
	@%p33 st.shared.b32 [ %r76 + 0 ], %r101;
	// end inline asm
	mov.b32 	%r103, %f117;
	// begin inline asm
	@%p33 st.shared.b32 [ %r78 + 0 ], %r103;
	// end inline asm
	mov.b32 	%r105, %f118;
	// begin inline asm
	@%p33 st.shared.b32 [ %r80 + 0 ], %r105;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r118, %r119, %r120, %r121}, [%r244];
	// begin inline asm
	@%p69 st.global.v4.b32 [ %rd37 + 0 ], { %r106, %r107, %r108, %r109 };
	// end inline asm
	// begin inline asm
	@%p70 st.global.v4.b32 [ %rd38 + 0 ], { %r110, %r111, %r112, %r113 };
	// end inline asm
	// begin inline asm
	@%p71 st.global.v4.b32 [ %rd39 + 0 ], { %r114, %r115, %r116, %r117 };
	// end inline asm
	// begin inline asm
	@%p72 st.global.v4.b32 [ %rd40 + 0 ], { %r118, %r119, %r120, %r121 };
	// end inline asm
	.loc	1 47 4                          // cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py:47:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/md/cmdkxa557rreg7js7t62j4e622sxzgh6exkvh7az5glbbx3sgxa7.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 100
.b8 107
.b8 120
.b8 97
.b8 53
.b8 53
.b8 55
.b8 114
.b8 114
.b8 101
.b8 103
.b8 55
.b8 106
.b8 115
.b8 55
.b8 116
.b8 54
.b8 50
.b8 106
.b8 52
.b8 101
.b8 54
.b8 50
.b8 50
.b8 115
.b8 120
.b8 122
.b8 103
.b8 104
.b8 54
.b8 101
.b8 120
.b8 107
.b8 118
.b8 104
.b8 55
.b8 97
.b8 122
.b8 53
.b8 103
.b8 108
.b8 98
.b8 98
.b8 120
.b8 51
.b8 115
.b8 103
.b8 120
.b8 97
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 100
.b8 0
	}
	.section	.debug_macinfo	{	}
