//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_3 // -- Begin function triton_poi_fused_clone_3
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_clone_3
.visible .entry triton_poi_fused_clone_3(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_3_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_3_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_3_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_3_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_3_param_4,
	.param .u32 triton_poi_fused_clone_3_param_5,
	.param .u32 triton_poi_fused_clone_3_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<57>;
	.reg .f32 	%f<9>;
	.reg .b64 	%rd<15>;
	.loc	1 19 0                          // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_clone_3_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_clone_3_param_1];
$L__tmp0:
	.loc	1 22 28                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:22:33
	shl.b32 	%r10, %r1, 2;
	ld.param.u64 	%rd8, [triton_poi_fused_clone_3_param_2];
	ld.param.u64 	%rd9, [triton_poi_fused_clone_3_param_3];
	.loc	1 23 44                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:23:44
	mov.u32 	%r11, %tid.x;
	ld.param.u64 	%rd10, [triton_poi_fused_clone_3_param_4];
	bfe.u32 	%r12, %r11, 5, 2;
	and.b32  	%r13, %r11, 3;
	.loc	1 23 23                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:23:23
	or.b32  	%r14, %r10, %r12;
	or.b32  	%r15, %r10, %r13;
	.loc	1 24 21                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:24:21
	setp.lt.s32 	%p7, %r14, 4;
	setp.lt.s32 	%p8, %r15, 4;
	.loc	1 25 28                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:25:33
	shl.b32 	%r16, %r2, 5;
	.loc	1 26 44                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:26:44
	and.b32  	%r17, %r11, 31;
	bfe.u32 	%r18, %r11, 2, 5;
	.loc	1 26 23                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:26:23
	or.b32  	%r19, %r16, %r17;
	or.b32  	%r20, %r16, %r18;
	.loc	1 27 21                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:27:21
	setp.lt.s32 	%p9, %r19, 64;
	setp.lt.s32 	%p2, %r20, 64;
	.loc	1 29 19                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:29:19
	shr.s32 	%r22, %r20, 31;
	shr.u32 	%r23, %r22, 30;
	add.s32 	%r24, %r20, %r23;
	shr.s32 	%r25, %r24, 2;
	.loc	1 28 19                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:28:19
	and.b32  	%r26, %r24, -4;
	sub.s32 	%r27, %r20, %r26;
	.loc	1 32 44                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:32:44
	shr.u32 	%r28, %r25, 30;
	add.s32 	%r29, %r25, %r28;
	and.b32  	%r30, %r29, 1073741820;
	sub.s32 	%r31, %r25, %r30;
	.loc	1 32 39                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:32:39
	shl.b32 	%r32, %r31, 2;
	.loc	1 32 53                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:32:53
	shl.b32 	%r33, %r27, 4;
	.loc	1 32 68                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:32:68
	bfe.s32 	%r34, %r2, 26, 1;
	shr.u32 	%r35, %r34, 28;
	add.s32 	%r36, %r20, %r35;
	shr.s32 	%r37, %r36, 4;
	.loc	1 32 62                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:32:62
	shl.b32 	%r38, %r37, 6;
	.loc	1 32 35                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:32:35
	add.s32 	%r39, %r33, %r15;
	.loc	1 32 50                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:32:50
	add.s32 	%r40, %r39, %r38;
	.loc	1 32 58                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:32:58
	add.s32 	%r41, %r40, %r32;
	.loc	1 32 30                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:32:30
	mul.wide.s32 	%rd11, %r41, 4;
	add.s64 	%rd1, %rd6, %rd11;
	.loc	1 32 81                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:32:81
	and.pred  	%p6, %p7, %p9;
	and.pred  	%p1, %p8, %p2;
	.loc	1 32 73                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:32:73
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	.loc	1 33 30                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:33:30
	mul.wide.s32 	%rd12, %r27, 4;
	add.s64 	%rd2, %rd7, %rd12;
	.loc	1 33 35                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:33:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 34 38                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:34:38
	shl.b32 	%r42, %r37, 2;
	.loc	1 34 35                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:34:35
	add.s32 	%r43, %r42, %r27;
	.loc	1 34 30                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:34:30
	mul.wide.s32 	%rd13, %r43, 4;
	add.s64 	%rd3, %rd8, %rd13;
	.loc	1 34 49                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:34:49
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	.loc	1 35 30                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:35:30
	add.s64 	%rd4, %rd9, %rd12;
	.loc	1 35 35                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:35:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r6;
	.loc	1 36 18                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:36:18
	add.f32 	%f5, %f1, %f2;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p10, %f5, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f6, 0f00000000, %f5, %p10;
$L__tmp2:
	.loc	1 39 18                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:39:18
	add.f32 	%f7, %f3, %f4;
	.loc	1 40 18                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:40:18
	add.f32 	%f8, %f6, %f7;
	.loc	1 41 33                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:41:33
	shl.b32 	%r44, %r14, 6;
	.loc	1 41 30                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:41:30
	add.s32 	%r45, %r19, %r44;
	.loc	1 41 25                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:41:25
	mul.wide.s32 	%rd14, %r45, 4;
	add.s64 	%rd5, %rd10, %rd14;
	.loc	1 41 44                         // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:41:44
	shl.b32 	%r46, %r11, 5;
	and.b32  	%r47, %r46, 96;
	or.b32  	%r48, %r47, %r18;
	and.b32  	%r49, %r11, 127;
	bfe.u32 	%r50, %r46, 5, 2;
	add.s32 	%r51, %r48, %r50;
	shl.b32 	%r52, %r51, 2;
	mov.u32 	%r53, global_smem;
	add.s32 	%r7, %r53, %r52;
	mov.b32 	%r8, %f8;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r54, %r12, %r49;
	shl.b32 	%r55, %r54, 2;
	add.s32 	%r56, %r53, %r55;
	ld.shared.u32 	%r9, [%r56];
	// begin inline asm
	@%p6 st.global.b32 [ %rd5 + 0 ], { %r9 };
	// end inline asm
	.loc	1 41 4                          // cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py:41:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vy/cvydtmgehrdizvfafevegw3soz5ghxgbfjjowua7amfxtkrlih3t.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 169                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 121
.b8 100
.b8 116
.b8 109
.b8 103
.b8 101
.b8 104
.b8 114
.b8 100
.b8 105
.b8 122
.b8 118
.b8 102
.b8 97
.b8 102
.b8 101
.b8 118
.b8 101
.b8 103
.b8 119
.b8 51
.b8 115
.b8 111
.b8 122
.b8 53
.b8 103
.b8 104
.b8 120
.b8 103
.b8 98
.b8 102
.b8 106
.b8 106
.b8 111
.b8 119
.b8 117
.b8 97
.b8 55
.b8 97
.b8 109
.b8 102
.b8 120
.b8 116
.b8 107
.b8 114
.b8 108
.b8 105
.b8 104
.b8 51
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 121
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 108
.b8 111
.b8 110
.b8 101
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x93:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
