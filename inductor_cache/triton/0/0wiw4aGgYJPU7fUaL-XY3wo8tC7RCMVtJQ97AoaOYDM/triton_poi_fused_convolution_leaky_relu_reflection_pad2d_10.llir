; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %7 = shl i32 %6, 9, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 510, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = or disjoint i32 %11, 1, !dbg !13
  %13 = icmp slt i32 %11, 1115136, !dbg !14
  %14 = srem i32 %11, 64, !dbg !15
  %15 = srem i32 %12, 64, !dbg !15
  %16 = sdiv i32 %11, 278784, !dbg !16
  %17 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !17
  %18 = shufflevector <2 x i32> %17, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !17
  %19 = sdiv <2 x i32> %18, <i32 4224, i32 64>, !dbg !17
  %20 = srem <2 x i32> %19, splat (i32 66), !dbg !18
  %21 = add nsw <2 x i32> %20, splat (i32 -1), !dbg !19
  %22 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %21, i1 true), !dbg !20
  %23 = add nsw <2 x i32> %22, splat (i32 -63), !dbg !21
  %24 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %23, i1 true), !dbg !22
  %25 = mul nsw <2 x i32> %24, <i32 -4096, i32 -64>, !dbg !23
  %26 = shl nsw i32 %16, 18, !dbg !24
  %27 = or disjoint i32 %26, 262080, !dbg !25
  %28 = add nsw i32 %27, %14, !dbg !26
  %29 = extractelement <2 x i32> %25, i64 0, !dbg !27
  %30 = add i32 %28, %29, !dbg !27
  %31 = extractelement <2 x i32> %25, i64 1, !dbg !28
  %32 = add i32 %30, %31, !dbg !28
  %33 = add nsw i32 %27, %15, !dbg !26
  %34 = add i32 %33, %29, !dbg !27
  %35 = add i32 %34, %31, !dbg !28
  %36 = sext i32 %32 to i64, !dbg !29
  %37 = getelementptr i1, ptr addrspace(1) %0, i64 %36, !dbg !29
  %38 = sext i32 %35 to i64, !dbg !29
  %39 = getelementptr i1, ptr addrspace(1) %0, i64 %38, !dbg !29
  %40 = tail call i8 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b8 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %37, i1 %13) #2, !dbg !30
  %41 = tail call i8 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b8 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %39, i1 %13) #2, !dbg !30
  %.not = icmp eq i8 %40, 0, !dbg !30
  %.not1 = icmp eq i8 %41, 0, !dbg !30
  %42 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !31
  %43 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !31
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %13) #2, !dbg !32
  %45 = bitcast i32 %44 to float, !dbg !32
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %13) #2, !dbg !32
  %47 = bitcast i32 %46 to float, !dbg !32
  %48 = sext i32 %14 to i64, !dbg !33
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %48, !dbg !33
  %50 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %49, i1 %13) #2, !dbg !34
  %51 = extractvalue { i32, i32 } %50, 0, !dbg !34
  %52 = extractvalue { i32, i32 } %50, 1, !dbg !34
  %53 = bitcast i32 %51 to float, !dbg !34
  %54 = bitcast i32 %52 to float, !dbg !34
  %55 = fadd float %45, %53, !dbg !35
  %56 = fadd float %47, %54, !dbg !35
  %57 = fmul float %55, 0x3FC99999A0000000, !dbg !36
  %58 = fmul float %56, 0x3FC99999A0000000, !dbg !36
  %59 = select i1 %.not, float %57, float %55, !dbg !37
  %60 = select i1 %.not1, float %58, float %56, !dbg !37
  %61 = sext i32 %11 to i64, !dbg !38
  %62 = getelementptr float, ptr addrspace(1) %3, i64 %61, !dbg !38
  %63 = bitcast float %59 to i32, !dbg !39
  %64 = bitcast float %60 to i32, !dbg !39
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %63, i32 %64, ptr addrspace(1) %62, i1 %13) #2, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x i32> @llvm.abs.v2i32(<2 x i32>, i1 immarg) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csrjdjzsrcukr2xi2xamwvotovs6hvx2cyykgiohygn35ogfqtl4.py", directory: "inductor_cache/sr")
!4 = !{ptr @triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10", linkageName: "triton_poi_fused_convolution_leaky_relu_reflection_pad2d_10", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 21, scope: !7)
!18 = !DILocation(line: 26, column: 29, scope: !7)
!19 = !DILocation(line: 29, column: 92, scope: !7)
!20 = !DILocation(line: 29, column: 85, scope: !7)
!21 = !DILocation(line: 29, column: 73, scope: !7)
!22 = !DILocation(line: 29, column: 65, scope: !7)
!23 = !DILocation(line: 29, column: 53, scope: !7)
!24 = !DILocation(line: 29, column: 161, scope: !7)
!25 = !DILocation(line: 29, column: 39, scope: !7)
!26 = !DILocation(line: 29, column: 45, scope: !7)
!27 = !DILocation(line: 29, column: 101, scope: !7)
!28 = !DILocation(line: 29, column: 154, scope: !7)
!29 = !DILocation(line: 29, column: 30, scope: !7)
!30 = !DILocation(line: 29, column: 166, scope: !7)
!31 = !DILocation(line: 30, column: 30, scope: !7)
!32 = !DILocation(line: 30, column: 166, scope: !7)
!33 = !DILocation(line: 31, column: 30, scope: !7)
!34 = !DILocation(line: 31, column: 35, scope: !7)
!35 = !DILocation(line: 32, column: 18, scope: !7)
!36 = !DILocation(line: 34, column: 18, scope: !7)
!37 = !DILocation(line: 35, column: 32, scope: !7)
!38 = !DILocation(line: 36, column: 25, scope: !7)
!39 = !DILocation(line: 36, column: 36, scope: !7)
!40 = !DILocation(line: 36, column: 4, scope: !7)
