//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_2  // -- Begin function triton_poi_fused_cat_2
                                        // @triton_poi_fused_cat_2
.visible .entry triton_poi_fused_cat_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_2_param_2,
	.param .u32 triton_poi_fused_cat_2_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<44>;
	.reg .f32 	%f<16>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_cat_2_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused_cat_2_param_1];
$L__tmp0:
	.loc	1 21 28                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:21:33
	shl.b32 	%r18, %r1, 8;
	ld.param.u64 	%rd6, [triton_poi_fused_cat_2_param_2];
	.loc	1 22 36                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:22:36
	mov.u32 	%r19, %tid.x;
	shl.b32 	%r20, %r19, 1;
	and.b32  	%r21, %r20, 254;
	.loc	1 22 23                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:22:23
	or.b32  	%r22, %r18, %r21;
	.loc	1 23 21                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:23:21
	setp.lt.s32 	%p7, %r22, 256;
	.loc	1 24 21                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:24:21
	shr.s32 	%r24, %r22, 31;
	shr.u32 	%r25, %r24, 28;
	add.s32 	%r26, %r22, %r25;
	shr.s32 	%r27, %r26, 4;
	.loc	1 24 27                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:24:27
	shr.u32 	%r28, %r27, 30;
	add.s32 	%r29, %r27, %r28;
	and.b32  	%r30, %r29, -4;
	sub.s32 	%r31, %r27, %r30;
	.loc	1 25 19                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:25:19
	and.b32  	%r32, %r26, -16;
	sub.s32 	%r33, %r22, %r32;
	.loc	1 26 19                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:26:19
	shr.u32 	%r34, %r24, 26;
	add.s32 	%r35, %r22, %r34;
	shr.s32 	%r36, %r35, 6;
	.loc	1 32 18                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:32:18
	setp.lt.s32 	%p8, %r31, 2;
	.loc	1 33 35                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:33:35
	and.b32  	%r37, %r35, -64;
	sub.s32 	%r38, %r22, %r37;
	.loc	1 33 48                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:33:48
	shl.b32 	%r39, %r36, 5;
	.loc	1 33 45                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:33:45
	add.s32 	%r40, %r39, %r38;
	.loc	1 33 30                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:33:30
	mul.wide.s32 	%rd7, %r40, 4;
	add.s64 	%rd1, %rd4, %rd7;
	.loc	1 33 60                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:33:60
	and.pred  	%p1, %p7, %p8;
	mov.b32 	%r4, 0;
	.loc	1 33 53                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:33:53
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	.loc	1 34 19                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:34:19
	setp.gt.s32 	%p9, %r31, 1;
	.loc	1 37 39                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:37:39
	shl.b32 	%r41, %r31, 4;
	.loc	1 37 30                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:37:30
	cvt.s64.s32 	%rd8, %r41;
	cvt.s64.s32 	%rd9, %r39;
	cvt.s64.s32 	%rd10, %r33;
	add.s64 	%rd11, %rd10, %rd9;
	add.s64 	%rd12, %rd11, %rd8;
	shl.b64 	%rd13, %rd12, 2;
	add.s64 	%rd14, %rd5, %rd13;
	add.s64 	%rd2, %rd14, -128;
	.loc	1 37 67                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:37:67
	and.pred  	%p4, %p7, %p9;
	.loc	1 37 60                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:37:60
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p4 ld.global.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	@!%p4 mov.u32 %r6, %r4;
	@!%p4 mov.u32 %r7, %r4;
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	mov.f32 	%f7, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f8, %f7, %f5;
	sub.f32 	%f9, %f7, %f6;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f8, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f9, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f10, %f1, 0f3F800000;
	add.f32 	%f11, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r12, %f10;
	mov.b32 	%r11, 1065353216;
	// begin inline asm
	div.full.f32 %r10, %r11, %r12;
	// end inline asm
	mov.b32 	%f12, %r10;
	mov.b32 	%r15, %f11;
	// begin inline asm
	div.full.f32 %r13, %r11, %r15;
	// end inline asm
	mov.b32 	%f13, %r13;
$L__tmp2:
	.loc	1 39 19                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:39:19
	mul.f32 	%f14, %f12, %f5;
	mul.f32 	%f15, %f13, %f6;
	.loc	1 43 25                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:43:25
	mul.wide.s32 	%rd15, %r22, 4;
	add.s64 	%rd3, %rd6, %rd15;
	.loc	1 43 37                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:43:37
	mov.b32 	%r42, %f14;
	.loc	1 42 33                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:42:33
	selp.b32 	%r16, %r2, %r42, %p8;
	.loc	1 43 37                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:43:37
	mov.b32 	%r43, %f15;
	.loc	1 42 33                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:42:33
	selp.b32 	%r17, %r3, %r43, %p8;
	.loc	1 43 37                         // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:43:37
	// begin inline asm
	@%p7 st.global.v2.b32 [ %rd3 + 0 ], { %r16, %r17 };
	// end inline asm
	.loc	1 43 4                          // c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py:43:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7r/c7rm6blclawstgcgwxor27pg2qmua5ep66xy6awmnhlkg6jqjy4s.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 167                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 114
.b8 109
.b8 54
.b8 98
.b8 108
.b8 99
.b8 108
.b8 97
.b8 119
.b8 115
.b8 116
.b8 103
.b8 99
.b8 103
.b8 119
.b8 120
.b8 111
.b8 114
.b8 50
.b8 55
.b8 112
.b8 103
.b8 50
.b8 113
.b8 109
.b8 117
.b8 97
.b8 53
.b8 101
.b8 112
.b8 54
.b8 54
.b8 120
.b8 121
.b8 54
.b8 97
.b8 119
.b8 109
.b8 110
.b8 104
.b8 108
.b8 107
.b8 103
.b8 54
.b8 106
.b8 113
.b8 106
.b8 121
.b8 52
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x19 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7c:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x91:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
