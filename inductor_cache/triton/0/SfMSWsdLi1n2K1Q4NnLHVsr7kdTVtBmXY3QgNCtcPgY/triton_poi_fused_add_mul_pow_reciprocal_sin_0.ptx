//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mul_pow_reciprocal_sin_0 // -- Begin function triton_poi_fused_add_mul_pow_reciprocal_sin_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
                                        // @triton_poi_fused_add_mul_pow_reciprocal_sin_0
.visible .entry triton_poi_fused_add_mul_pow_reciprocal_sin_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_pow_reciprocal_sin_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_pow_reciprocal_sin_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_pow_reciprocal_sin_0_param_2,
	.param .u32 triton_poi_fused_add_mul_pow_reciprocal_sin_0_param_3
)
.reqntid 128, 1, 1
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<12>;
	.reg .b32 	%r<76>;
	.reg .f32 	%f<51>;
	.reg .b64 	%rd<23>;
	.reg .f64 	%fd<3>;
	.loc	1 19 0                          // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:19:0

// %bb.0:
	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd7, [triton_poi_fused_add_mul_pow_reciprocal_sin_0_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_add_mul_pow_reciprocal_sin_0_param_1];
	add.u64 	%rd10, %SPL, 0;
$L__tmp0:
	.loc	1 21 28                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:21:28
	// begin inline asm
	mov.u32 %r21, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:21:33
	shl.b32 	%r27, %r21, 7;
	.loc	1 22 36                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:22:36
	mov.u32 	%r28, %tid.x;
	and.b32  	%r29, %r28, 127;
	.loc	1 22 23                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:22:23
	or.b32  	%r30, %r27, %r29;
	.loc	1 23 21                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:23:21
	setp.lt.s32 	%p1, %r30, 128;
	.loc	1 25 21                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:25:21
	bfe.s32 	%r31, %r21, 24, 1;
	shr.u32 	%r32, %r31, 30;
	add.s32 	%r33, %r30, %r32;
	shr.s32 	%r34, %r33, 2;
	.loc	1 25 26                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:25:26
	shr.u32 	%r35, %r34, 29;
	add.s32 	%r36, %r34, %r35;
	and.b32  	%r37, %r36, -8;
	sub.s32 	%r38, %r34, %r37;
	.loc	1 26 30                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:26:30
	mul.wide.s32 	%rd11, %r30, 4;
	add.s64 	%rd5, %rd7, %rd11;
	.loc	1 26 35                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:26:35
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.b32 { %r22 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r22;
	.loc	1 27 30                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:27:30
	mul.wide.s32 	%rd12, %r38, 4;
	add.s64 	%rd6, %rd8, %rd12;
	.loc	1 27 35                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:27:35
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r23;
	.loc	1 29 18                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:29:18
	add.f32 	%f20, %f19, 0f3089705F;
	.loc	1 31 18                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:31:18
	mov.b32 	%r26, %f20;
	mov.b32 	%r25, 1065353216;
	.loc	1 32 18                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:32:18
	mul.f32 	%f3, %f1, %f19;
	.loc	1 33 23                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:33:23
	mul.f32 	%f21, %f3, 0f3F22F983;
	cvt.rni.ftz.s32.f32 	%r75, %f21;
	cvt.rn.f32.s32 	%f22, %r75;
	mov.f32 	%f23, 0fBFC90FDA;
	fma.rn.ftz.f32 	%f24, %f22, %f23, %f3;
	mov.f32 	%f25, 0fB3A22168;
	fma.rn.ftz.f32 	%f26, %f22, %f25, %f24;
	mov.f32 	%f27, 0fA7C234C5;
	fma.rn.ftz.f32 	%f46, %f22, %f27, %f26;
	abs.ftz.f32 	%f5, %f3;
	setp.ltu.f32 	%p3, %f5, 0f47CE4780;
	mov.f32 	%f45, 0f00000000;
	@%p3 bra 	$L__BB0_8;
// %bb.1:                               // %__nv_isinff.exit.i.i.i
	setp.neu.f32 	%p4, %f5, 0f7F800000;
	@%p4 bra 	$L__BB0_3;
// %bb.2:                               // %__nv_fmul_rn.exit.i.i.i
	mul.rn.ftz.f32 	%f46, %f3, %f45;
	mov.b32 	%r75, 0;
	bra.uni 	$L__BB0_8;
$L__BB0_3:
	.loc	1 0 23                          // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:0:23
	cvt.u32.u64 	%r1, %rd10;
	.loc	1 33 23                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:33:23
	mov.b32 	%r3, %f3;
	shr.u32 	%r4, %r3, 23;
	and.b32  	%r40, %r4, 224;
	add.s32 	%r41, %r40, -128;
	shl.b32 	%r42, %r3, 8;
	or.b32  	%r46, %r42, -2147483648;
	shr.u32 	%r6, %r41, 5;
	mov.b32 	%r72, 0;
	mov.u64 	%rd22, 0;
	mov.u64 	%rd14, __cudart_i2opi_f;
	mov.u32 	%r71, %r1;
$L__BB0_4:                              // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	add.s64 	%rd15, %rd14, %rd22;
	ld.global.nc.u32 	%r45, [%rd15];
	// begin inline asm
	{
	mad.lo.cc.u32   %r43, %r45, %r46, %r72;
	madc.hi.u32     %r72, %r45, %r46,  0;
	}
	// end inline asm
	st.local.u32 	[%r71], %r43;
	add.s32 	%r71, %r71, 4;
	add.s64 	%rd22, %rd22, 4;
	setp.ne.s64 	%p5, %rd22, 24;
	@%p5 bra 	$L__BB0_4;
// %bb.5:
	st.local.u32 	[%r1+24], %r72;
	and.b32  	%r11, %r4, 31;
	shl.b32 	%r48, %r6, 2;
	sub.s32 	%r12, %r1, %r48;
	ld.local.u32 	%r73, [%r12+24];
	ld.local.u32 	%r74, [%r12+20];
	setp.eq.s32 	%p6, %r11, 0;
	@%p6 bra 	$L__BB0_7;
// %bb.6:
	.loc	1 0 23                          // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:0:23
	mov.b32 	%r49, 32;
	.loc	1 33 23                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:33:23
	sub.s32 	%r50, %r49, %r11;
	shl.b32 	%r51, %r73, %r11;
	shr.u32 	%r52, %r74, %r50;
	add.s32 	%r73, %r52, %r51;
	shl.b32 	%r53, %r74, %r11;
	ld.local.u32 	%r54, [%r12+16];
	shr.u32 	%r55, %r54, %r50;
	add.s32 	%r74, %r55, %r53;
$L__BB0_7:                              // %__internal_trig_reduction_slowpath.exit.i.i.i
	shr.u32 	%r56, %r73, 30;
	shf.l.wrap.b32 	%r57, %r74, %r73, 2;
	shl.b32 	%r58, %r74, 2;
	shr.u32 	%r59, %r57, 31;
	add.s32 	%r60, %r59, %r56;
	neg.s32 	%r61, %r60;
	setp.lt.s32 	%p7, %r3, 0;
	selp.b32 	%r75, %r61, %r60, %p7;
	xor.b32  	%r62, %r57, %r3;
	shr.s32 	%r63, %r57, 31;
	xor.b32  	%r64, %r63, %r57;
	xor.b32  	%r65, %r63, %r58;
	cvt.u64.u32 	%rd16, %r64;
	shl.b64 	%rd17, %rd16, 32;
	cvt.u64.u32 	%rd18, %r65;
	or.b64  	%rd19, %rd17, %rd18;
	cvt.rn.f64.s64 	%fd1, %rd19;
	mul.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f28, %fd2;
	neg.f32 	%f29, %f28;
	setp.lt.s32 	%p8, %r62, 0;
	selp.f32 	%f46, %f29, %f28, %p8;
$L__BB0_8:                              // %__internal_trig_reduction_kernel.exit.i.i
	.loc	1 0 0                           // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:0:0
	// begin inline asm
	div.full.f32 %r24, %r25, %r26;
	// end inline asm
	.loc	1 33 23                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:33:23
	mul.rn.ftz.f32 	%f9, %f46, %f46;
	and.b32  	%r67, %r75, 1;
	setp.eq.b32 	%p9, %r67, 1;
	selp.f32 	%f10, 0f3F800000, %f46, %p9;
	fma.rn.ftz.f32 	%f11, %f9, %f10, %f45;
	mov.f32 	%f49, 0fB94D4153;
	mov.f32 	%f48, 0f3C0885E4;
	mov.f32 	%f47, 0fBE2AAAA8;
	@!%p9 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_9:                              // %__internal_fmad.exit1.i.i.i
	.loc	1 0 23                          // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:0:23
	mov.f32 	%f35, 0fBAB607ED;
	mov.f32 	%f36, 0f37CBAC00;
	fma.rn.ftz.f32 	%f49, %f36, %f9, %f35;
	mov.f32 	%f48, 0f3D2AAABB;
	mov.f32 	%f47, 0fBEFFFFFF;
$L__BB0_10:                             // %__internal_fmad.exit2.i.i.i
	ld.param.u64 	%rd4, [triton_poi_fused_add_mul_pow_reciprocal_sin_0_param_2];
	cvt.s64.s32 	%rd1, %r30;
	mov.b32 	%f2, %r24;
	.loc	1 33 23                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:33:23
	fma.rn.ftz.f32 	%f39, %f49, %f9, %f48;
	fma.rn.ftz.f32 	%f40, %f39, %f9, %f47;
	fma.rn.ftz.f32 	%f50, %f40, %f11, %f10;
	and.b32  	%r68, %r75, 2;
	setp.eq.s32 	%p10, %r68, 0;
	@%p10 bra 	$L__BB0_12;
// %bb.11:                              // %__internal_fmad.exit5.i.i.i
	.loc	1 0 23                          // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:0:23
	mov.f32 	%f42, 0fBF800000;
	fma.rn.ftz.f32 	%f50, %f50, %f42, %f45;
$L__BB0_12:                             // %__nv_sinf.exit
	cvt.u32.u64 	%r70, %rd1;
	.loc	1 23 21                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:23:21
	setp.lt.s32 	%p11, %r70, 128;
	.loc	1 34 18                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:34:18
	mul.f32 	%f43, %f50, %f50;
	.loc	1 36 19                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:36:19
	fma.rn.f32 	%f44, %f2, %f43, %f1;
	.loc	1 37 25                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:37:25
	shl.b64 	%rd21, %rd1, 2;
	add.s64 	%rd20, %rd4, %rd21;
	.loc	1 37 37                         // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:37:37
	mov.b32 	%r69, %f44;
	// begin inline asm
	@%p11 st.global.b32 [ %rd20 + 0 ], { %r69 };
	// end inline asm
	.loc	1 37 4                          // cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py:37:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/gp/cgpstdojl5wp3oosriexw4hgfxyomfdvppo2b5wd5ghnwsymqghh.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 112
.b8 115
.b8 116
.b8 100
.b8 111
.b8 106
.b8 108
.b8 53
.b8 119
.b8 112
.b8 51
.b8 111
.b8 111
.b8 115
.b8 114
.b8 105
.b8 101
.b8 120
.b8 119
.b8 52
.b8 104
.b8 103
.b8 102
.b8 120
.b8 121
.b8 111
.b8 109
.b8 102
.b8 100
.b8 118
.b8 112
.b8 112
.b8 111
.b8 50
.b8 98
.b8 53
.b8 119
.b8 100
.b8 53
.b8 103
.b8 104
.b8 110
.b8 119
.b8 115
.b8 121
.b8 109
.b8 113
.b8 103
.b8 104
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 112
.b8 0
	}
	.section	.debug_macinfo	{	}
