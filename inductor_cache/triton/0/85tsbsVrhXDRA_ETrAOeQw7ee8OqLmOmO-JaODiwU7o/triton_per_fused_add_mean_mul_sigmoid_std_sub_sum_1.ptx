//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1 // -- Begin function triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1
.visible .entry triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_6,
	.param .u32 triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_7,
	.param .u32 triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_8
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b32 	%r<112>;
	.reg .f32 	%f<104>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd22, [triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_0];
	ld.param.u64 	%rd23, [triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_1];
$L__tmp0:
	.loc	1 23 28                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:25:21
	setp.lt.s32 	%p1, %r1, 4;
	ld.param.u64 	%rd24, [triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_2];
	ld.param.u64 	%rd25, [triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_3];
	.loc	1 26 34                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:26:34
	mov.u32 	%r55, %tid.x;
	and.b32  	%r56, %r55, 15;
	ld.param.u64 	%rd26, [triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_4];
	.loc	1 31 38                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:31:38
	shl.b32 	%r57, %r1, 6;
	ld.param.u64 	%rd17, [triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_5];
	.loc	1 31 35                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:31:35
	or.b32  	%r58, %r57, %r56;
	ld.param.u64 	%rd18, [triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1_param_6];
	.loc	1 31 30                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:31:30
	mul.wide.s32 	%rd27, %r58, 4;
	add.s64 	%rd1, %rd25, %rd27;
	mov.b32 	%r3, 0;
	.loc	1 31 43                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:31:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f3, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f4, %r4;
	.loc	1 32 32                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:32:32
	shl.b32 	%r59, %r1, 2;
	.loc	1 32 30                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:32:30
	mul.wide.s32 	%rd28, %r59, 4;
	add.s64 	%rd3, %rd26, %rd28;
	.loc	1 32 37                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:32:37
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r7;
	.loc	1 33 30                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:33:30
	add.s64 	%rd5, %rd1, 64;
	.loc	1 33 48                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:33:48
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r8, %r3;
	// end inline asm
	mov.b32 	%f7, %r8;
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r10, %r3;
	// end inline asm
	mov.b32 	%f8, %r10;
	.loc	1 34 30                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:34:30
	add.s64 	%rd7, %rd3, 4;
	.loc	1 34 41                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:34:41
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r12;
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r13;
	.loc	1 35 30                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:35:30
	add.s64 	%rd9, %rd1, 128;
	.loc	1 35 48                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:35:48
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.b32 { %r14 }, [ %rd9 + 0 ];
	@!%p1 mov.u32 %r14, %r3;
	// end inline asm
	mov.b32 	%f11, %r14;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.b32 { %r16 }, [ %rd9 + 0 ];
	@!%p1 mov.u32 %r16, %r3;
	// end inline asm
	mov.b32 	%f12, %r16;
	.loc	1 36 30                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:36:30
	add.s64 	%rd11, %rd3, 8;
	.loc	1 36 41                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:36:41
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r18;
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r19;
	.loc	1 37 31                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:37:31
	add.s64 	%rd13, %rd1, 192;
	.loc	1 37 49                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:37:49
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.b32 { %r20 }, [ %rd13 + 0 ];
	@!%p1 mov.u32 %r20, %r3;
	// end inline asm
	mov.b32 	%f15, %r20;
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.b32 { %r22 }, [ %rd13 + 0 ];
	@!%p1 mov.u32 %r22, %r3;
	// end inline asm
	mov.b32 	%f16, %r22;
	.loc	1 38 31                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:38:31
	add.s64 	%rd15, %rd3, 12;
	.loc	1 38 42                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:38:42
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r24;
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r25;
	mov.pred 	%p25, -1;
	.loc	1 39 20                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:39:20
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p25 ld.global.b32 { %r26 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 41 20                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:41:20
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p25 ld.global.b32 { %r27 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 44 18                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:44:18
	mul.f32 	%f19, %f7, %f9;
	mul.f32 	%f20, %f8, %f10;
	.loc	1 45 18                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:45:18
	fma.rn.f32 	%f21, %f3, %f5, %f19;
	fma.rn.f32 	%f22, %f4, %f6, %f20;
	.loc	1 47 19                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:47:19
	fma.rn.f32 	%f23, %f11, %f13, %f21;
	fma.rn.f32 	%f24, %f12, %f14, %f22;
	.loc	1 49 20                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:49:20
	fma.rn.f32 	%f25, %f15, %f17, %f23;
	fma.rn.f32 	%f26, %f16, %f18, %f24;
	.loc	1 51 35                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:51:35
	selp.f32 	%f27, %f25, 0f00000000, %p1;
	selp.f32 	%f28, %f26, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f27;
	shfl.sync.bfly.b32	%r61, %r60, 8, 31, -1;
	mov.b32 	%f29, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f27, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f30;
	shfl.sync.bfly.b32	%r63, %r62, 4, 31, -1;
	mov.b32 	%f31, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f32;
	shfl.sync.bfly.b32	%r65, %r64, 2, 31, -1;
	mov.b32 	%f33, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f34;
	shfl.sync.bfly.b32	%r67, %r66, 1, 31, -1;
	mov.b32 	%f35, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f28;
	shfl.sync.bfly.b32	%r69, %r68, 8, 31, -1;
	mov.b32 	%f37, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f28, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f38;
	shfl.sync.bfly.b32	%r71, %r70, 4, 31, -1;
	mov.b32 	%f39, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f40;
	shfl.sync.bfly.b32	%r73, %r72, 2, 31, -1;
	mov.b32 	%f41, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f42;
	shfl.sync.bfly.b32	%r75, %r74, 1, 31, -1;
	mov.b32 	%f43, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
$L__tmp2:
	.loc	1 54 20                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:54:20
	mov.b32 	%r29, %f36;
	mov.b32 	%r30, 1098907648;
	// begin inline asm
	div.full.f32 %r28, %r29, %r30;
	// end inline asm
	mov.b32 	%f45, %r28;
	mov.b32 	%r32, %f44;
	// begin inline asm
	div.full.f32 %r52, %r32, %r30;
	// end inline asm
	mov.b32 	%f46, %r52;
	.loc	1 55 20                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:55:20
	sub.f32 	%f47, %f25, %f45;
	sub.f32 	%f48, %f26, %f46;
	.loc	1 59 35                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:59:35
	selp.f32 	%f49, %f47, 0f00000000, %p1;
	selp.f32 	%f50, %f48, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f49;
	shfl.sync.bfly.b32	%r77, %r76, 8, 31, -1;
	mov.b32 	%f51, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f49, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f52;
	shfl.sync.bfly.b32	%r79, %r78, 4, 31, -1;
	mov.b32 	%f53, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f54;
	shfl.sync.bfly.b32	%r81, %r80, 2, 31, -1;
	mov.b32 	%f55, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f56;
	shfl.sync.bfly.b32	%r83, %r82, 1, 31, -1;
	mov.b32 	%f57, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f50;
	shfl.sync.bfly.b32	%r85, %r84, 8, 31, -1;
	mov.b32 	%f59, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f50, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f60;
	shfl.sync.bfly.b32	%r87, %r86, 4, 31, -1;
	mov.b32 	%f61, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f62;
	shfl.sync.bfly.b32	%r89, %r88, 2, 31, -1;
	mov.b32 	%f63, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f64;
	shfl.sync.bfly.b32	%r91, %r90, 1, 31, -1;
	mov.b32 	%f65, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
$L__tmp4:
	.loc	1 63 20                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:63:20
	mov.b32 	%r35, %f58;
	// begin inline asm
	div.full.f32 %r34, %r35, %r30;
	// end inline asm
	mov.b32 	%f67, %r34;
	mov.b32 	%r38, %f66;
	// begin inline asm
	div.full.f32 %r37, %r38, %r30;
	// end inline asm
	mov.b32 	%f68, %r37;
	.loc	1 64 20                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:64:20
	sub.f32 	%f69, %f47, %f67;
	sub.f32 	%f70, %f48, %f68;
	.loc	1 65 20                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:65:20
	mul.f32 	%f71, %f69, %f69;
	mul.f32 	%f72, %f70, %f70;
	.loc	1 67 35                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:67:35
	selp.f32 	%f73, %f71, 0f00000000, %p1;
	selp.f32 	%f74, %f72, 0f00000000, %p1;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r92, %f73;
	shfl.sync.bfly.b32	%r93, %r92, 8, 31, -1;
	mov.b32 	%f75, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f73, %f75;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f76;
	shfl.sync.bfly.b32	%r95, %r94, 4, 31, -1;
	mov.b32 	%f77, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f78;
	shfl.sync.bfly.b32	%r97, %r96, 2, 31, -1;
	mov.b32 	%f79, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f80, %f78, %f79;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f80;
	shfl.sync.bfly.b32	%r99, %r98, 1, 31, -1;
	mov.b32 	%f81, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f80, %f81;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f74;
	shfl.sync.bfly.b32	%r101, %r100, 8, 31, -1;
	mov.b32 	%f83, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f74, %f83;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f84;
	shfl.sync.bfly.b32	%r103, %r102, 4, 31, -1;
	mov.b32 	%f85, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f86;
	shfl.sync.bfly.b32	%r105, %r104, 2, 31, -1;
	mov.b32 	%f87, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f88;
	shfl.sync.bfly.b32	%r107, %r106, 1, 31, -1;
	mov.b32 	%f89, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f88, %f89;
$L__tmp6:
	.loc	1 70 20                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:70:20
	mov.b32 	%r41, %f82;
	mov.b32 	%r42, 1097859072;
	// begin inline asm
	div.full.f32 %r40, %r41, %r42;
	// end inline asm
	mov.b32 	%f91, %r40;
	mov.b32 	%r44, %f90;
	// begin inline asm
	div.full.f32 %r43, %r44, %r42;
	// end inline asm
	mov.b32 	%f92, %r43;
	.loc	1 71 27                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:71:27
	sqrt.approx.ftz.f32 	%f93, %f91;
	sqrt.approx.ftz.f32 	%f94, %f92;
	.loc	1 41 20                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:41:20
	mov.b32 	%f95, %r27;
	.loc	1 39 20                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:39:20
	mov.b32 	%f96, %r26;
	.loc	1 73 20                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:73:20
	add.f32 	%f97, %f93, 0f3727C5AC;
	add.f32 	%f98, %f94, 0f3727C5AC;
	.loc	1 74 20                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:74:20
	mov.b32 	%r48, %f97;
	mov.b32 	%r47, %f47;
	// begin inline asm
	div.full.f32 %r46, %r47, %r48;
	// end inline asm
	mov.b32 	%f99, %r46;
	.loc	1 76 20                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:76:20
	fma.rn.f32 	%f100, %f99, %f96, %f95;
	mov.f32 	%f101, 0f00000000;
$L__tmp7:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f102, %f101, %f100;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f102, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f103, %f1, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r51, %f103;
	mov.b32 	%r50, 1065353216;
	// begin inline asm
	div.full.f32 %r54, %r50, %r51;
	// end inline asm
$L__tmp8:
	.loc	1 78 4                          // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:78:4
	bar.sync 	0;
	.loc	1 79 28                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:79:28
	mul.wide.s32 	%rd29, %r1, 4;
	add.s64 	%rd19, %rd22, %rd29;
	.loc	1 79 40                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:79:40
	and.b32  	%r108, %r55, 63;
	setp.eq.s32 	%p30, %r108, 0;
	and.pred  	%p27, %p30, %p1;
	// begin inline asm
	@%p27 st.global.b32 [ %rd19 + 0 ], { %r52 };
	// end inline asm
	.loc	1 80 4                          // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:80:4
	bar.sync 	0;
	.loc	1 81 28                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:81:28
	add.s64 	%rd20, %rd23, %rd29;
	.loc	1 81 40                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:81:40
	mov.b32 	%r53, %f98;
	// begin inline asm
	@%p27 st.global.b32 [ %rd20 + 0 ], { %r53 };
	// end inline asm
	.loc	1 82 36                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:82:36
	shl.b32 	%r109, %r1, 4;
	.loc	1 82 33                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:82:33
	or.b32  	%r110, %r109, %r56;
	.loc	1 82 28                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:82:28
	mul.wide.s32 	%rd30, %r110, 4;
	add.s64 	%rd21, %rd24, %rd30;
	.loc	1 82 48                         // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:82:48
	and.b32  	%r111, %r55, 48;
	setp.eq.s32 	%p31, %r111, 0;
	and.pred  	%p29, %p31, %p1;
	// begin inline asm
	@%p29 st.global.b32 [ %rd21 + 0 ], { %r54 };
	// end inline asm
	.loc	1 82 4                          // czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py:82:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 268                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x105 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 100
.b8 100
.b8 106
.b8 116
.b8 115
.b8 54
.b8 55
.b8 52
.b8 98
.b8 110
.b8 51
.b8 100
.b8 111
.b8 109
.b8 120
.b8 97
.b8 108
.b8 51
.b8 52
.b8 52
.b8 50
.b8 113
.b8 102
.b8 120
.b8 105
.b8 102
.b8 122
.b8 53
.b8 122
.b8 115
.b8 108
.b8 102
.b8 113
.b8 118
.b8 114
.b8 107
.b8 118
.b8 110
.b8 108
.b8 113
.b8 111
.b8 110
.b8 105
.b8 116
.b8 118
.b8 115
.b8 108
.b8 122
.b8 52
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 100
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x36 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 115
.b8 116
.b8 100
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x99:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xae:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 52                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 60                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xde:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 68                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 77                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
