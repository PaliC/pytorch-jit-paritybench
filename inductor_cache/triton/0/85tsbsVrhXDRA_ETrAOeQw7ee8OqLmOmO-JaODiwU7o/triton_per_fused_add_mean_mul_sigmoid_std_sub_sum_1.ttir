#loc = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":19:0)
#loc1 = loc(unknown)
#loc49 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":52:26)
#loc55 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":60:26)
#loc61 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":68:26)
#loc86 = loc(callsite(#loc1 at #loc49))
#loc89 = loc(callsite(#loc1 at #loc55))
#loc91 = loc(callsite(#loc1 at #loc61))
module {
  tt.func public @triton_per_fused_add_mean_mul_sigmoid_std_sub_sum_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":19:0), %arg7: i32 loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":19:0)) attributes {noinline = false} {
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<1.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.500000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<48> : tensor<1x16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<32> : tensor<1x16xi32> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<1x16xi32> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.muli %0, %c64_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x16xi32> loc(#loc7)
    %7 = arith.addi %4, %6 : tensor<1x16xi32> loc(#loc7)
    %8 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc9)
    %11 = tt.load %9, %10, %cst_6 : tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %12 = arith.muli %0, %c4_i32 : i32 loc(#loc10)
    %13 = tt.addptr %arg4, %12 : !tt.ptr<f32>, i32 loc(#loc11)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc11)
    %15 = tt.load %14, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc12)
    %16 = arith.addi %4, %cst_5 : tensor<1x16xi32> loc(#loc13)
    %17 = arith.addi %16, %6 : tensor<1x16xi32> loc(#loc14)
    %18 = tt.addptr %8, %17 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc15)
    %19 = tt.load %18, %10, %cst_6 : tensor<1x16x!tt.ptr<f32>> loc(#loc16)
    %20 = arith.addi %12, %c1_i32 : i32 loc(#loc17)
    %21 = tt.addptr %arg4, %20 : !tt.ptr<f32>, i32 loc(#loc18)
    %22 = tt.splat %21 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc18)
    %23 = tt.load %22, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc19)
    %24 = arith.addi %4, %cst_4 : tensor<1x16xi32> loc(#loc20)
    %25 = arith.addi %24, %6 : tensor<1x16xi32> loc(#loc21)
    %26 = tt.addptr %8, %25 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc22)
    %27 = tt.load %26, %10, %cst_6 : tensor<1x16x!tt.ptr<f32>> loc(#loc23)
    %28 = arith.addi %12, %c2_i32 : i32 loc(#loc24)
    %29 = tt.addptr %arg4, %28 : !tt.ptr<f32>, i32 loc(#loc25)
    %30 = tt.splat %29 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc25)
    %31 = tt.load %30, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc26)
    %32 = arith.addi %4, %cst_3 : tensor<1x16xi32> loc(#loc27)
    %33 = arith.addi %32, %6 : tensor<1x16xi32> loc(#loc28)
    %34 = tt.addptr %8, %33 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc29)
    %35 = tt.load %34, %10, %cst_6 : tensor<1x16x!tt.ptr<f32>> loc(#loc30)
    %36 = arith.addi %12, %c3_i32 : i32 loc(#loc31)
    %37 = tt.addptr %arg4, %36 : !tt.ptr<f32>, i32 loc(#loc32)
    %38 = tt.splat %37 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc32)
    %39 = tt.load %38, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc33)
    %40 = tt.addptr %arg5, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc34)
    %41 = tt.load %40 : !tt.ptr<f32> loc(#loc35)
    %42 = tt.splat %41 : f32 -> tensor<1x16xf32> loc(#loc36)
    %43 = tt.addptr %arg6, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc37)
    %44 = tt.load %43 : !tt.ptr<f32> loc(#loc38)
    %45 = tt.splat %44 : f32 -> tensor<1x16xf32> loc(#loc39)
    %46 = tt.broadcast %15 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc40)
    %47 = arith.mulf %11, %46 : tensor<1x16xf32> loc(#loc40)
    %48 = tt.broadcast %23 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc41)
    %49 = arith.mulf %19, %48 : tensor<1x16xf32> loc(#loc41)
    %50 = arith.addf %47, %49 : tensor<1x16xf32> loc(#loc42)
    %51 = tt.broadcast %31 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc43)
    %52 = arith.mulf %27, %51 : tensor<1x16xf32> loc(#loc43)
    %53 = arith.addf %50, %52 : tensor<1x16xf32> loc(#loc44)
    %54 = tt.broadcast %39 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc45)
    %55 = arith.mulf %35, %54 : tensor<1x16xf32> loc(#loc45)
    %56 = arith.addf %53, %55 : tensor<1x16xf32> loc(#loc46)
    %57 = arith.select %10, %56, %cst_6 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc47)
    %58 = "tt.reduce"(%57) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc49)), %arg10: f32 loc(callsite(#loc1 at #loc49))):
      %93 = arith.addf %arg9, %arg10 : f32 loc(#loc96)
      tt.reduce.return %93 : f32 loc(#loc85)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc85)
    %59 = tt.expand_dims %58 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc51)
    %60 = arith.divf %59, %cst_2 : tensor<1x1xf32> loc(#loc52)
    %61 = tt.broadcast %60 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc53)
    %62 = arith.subf %56, %61 : tensor<1x16xf32> loc(#loc53)
    %63 = arith.select %10, %62, %cst_6 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc54)
    %64 = "tt.reduce"(%63) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc55)), %arg10: f32 loc(callsite(#loc1 at #loc55))):
      %93 = arith.addf %arg9, %arg10 : f32 loc(#loc97)
      tt.reduce.return %93 : f32 loc(#loc88)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc88)
    %65 = tt.expand_dims %64 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc56)
    %66 = arith.divf %65, %cst_2 : tensor<1x1xf32> loc(#loc57)
    %67 = tt.broadcast %66 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc58)
    %68 = arith.subf %62, %67 : tensor<1x16xf32> loc(#loc58)
    %69 = arith.mulf %68, %68 : tensor<1x16xf32> loc(#loc59)
    %70 = arith.select %10, %69, %cst_6 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc60)
    %71 = "tt.reduce"(%70) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc61)), %arg10: f32 loc(callsite(#loc1 at #loc61))):
      %93 = arith.addf %arg9, %arg10 : f32 loc(#loc98)
      tt.reduce.return %93 : f32 loc(#loc90)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc90)
    %72 = tt.expand_dims %71 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc62)
    %73 = arith.divf %72, %cst_1 : tensor<1x1xf32> loc(#loc63)
    %74 = tt.extern_elementwise %73 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc64)
    %75 = arith.addf %74, %cst_0 : tensor<1x1xf32> loc(#loc65)
    %76 = tt.broadcast %75 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc66)
    %77 = arith.divf %62, %76 : tensor<1x16xf32> loc(#loc66)
    %78 = arith.mulf %77, %42 : tensor<1x16xf32> loc(#loc67)
    %79 = arith.addf %78, %45 : tensor<1x16xf32> loc(#loc68)
    %80 = arith.subf %cst_6, %79 : tensor<1x16xf32> loc(#loc92)
    %81 = math.exp %80 : tensor<1x16xf32> loc(#loc93)
    %82 = arith.addf %81, %cst : tensor<1x16xf32> loc(#loc94)
    %83 = arith.divf %cst, %82 : tensor<1x16xf32> loc(#loc95)
    gpu.barrier loc(#loc74)
    %84 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc75)
    %85 = tt.splat %84 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc75)
    tt.store %85, %60, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc76)
    gpu.barrier loc(#loc77)
    %86 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc78)
    %87 = tt.splat %86 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc78)
    tt.store %87, %75, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc79)
    %88 = arith.muli %0, %c16_i32 : i32 loc(#loc80)
    %89 = tt.splat %88 : i32 -> tensor<1x16xi32> loc(#loc81)
    %90 = arith.addi %4, %89 : tensor<1x16xi32> loc(#loc81)
    %91 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc82)
    %92 = tt.addptr %91, %90 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc82)
    tt.store %92, %83, %10 : tensor<1x16x!tt.ptr<f32>> loc(#loc83)
    tt.return loc(#loc84)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":23:28)
#loc3 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":25:21)
#loc4 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":26:26)
#loc5 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":26:34)
#loc6 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":31:38)
#loc7 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":31:35)
#loc8 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":31:30)
#loc9 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":31:43)
#loc10 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":32:32)
#loc11 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":32:30)
#loc12 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":32:37)
#loc13 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":33:35)
#loc14 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":33:40)
#loc15 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":33:30)
#loc16 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":33:48)
#loc17 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":34:34)
#loc18 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":34:30)
#loc19 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":34:41)
#loc20 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":35:35)
#loc21 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":35:40)
#loc22 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":35:30)
#loc23 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":35:48)
#loc24 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":36:34)
#loc25 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":36:30)
#loc26 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":36:41)
#loc27 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":37:36)
#loc28 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":37:41)
#loc29 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":37:31)
#loc30 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":37:49)
#loc31 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":38:35)
#loc32 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":38:31)
#loc33 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":38:42)
#loc34 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":39:31)
#loc35 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":39:20)
#loc36 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":40:35)
#loc37 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":41:31)
#loc38 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":41:20)
#loc39 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":42:35)
#loc40 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":43:18)
#loc41 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":44:18)
#loc42 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":45:18)
#loc43 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":46:18)
#loc44 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":47:19)
#loc45 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":48:20)
#loc46 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":49:20)
#loc47 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":51:35)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc51 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":52:29)
#loc52 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":54:20)
#loc53 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":55:20)
#loc54 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":59:35)
#loc56 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":60:29)
#loc57 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":63:20)
#loc58 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":64:20)
#loc59 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":65:20)
#loc60 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":67:35)
#loc62 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":68:29)
#loc63 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":70:20)
#loc64 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":71:27)
#loc65 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":73:20)
#loc66 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":74:20)
#loc67 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":75:20)
#loc68 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":76:20)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc70 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":77:23)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc72 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc73 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc74 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":78:4)
#loc75 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":79:28)
#loc76 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":79:40)
#loc77 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":80:4)
#loc78 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":81:28)
#loc79 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":81:40)
#loc80 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":82:36)
#loc81 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":82:33)
#loc82 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":82:28)
#loc83 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":82:48)
#loc84 = loc("inductor_cache/zd/czddjts674bn3domxal3442qfxifz5zslfqvrkvnlqonitvslz4h.py":82:4)
#loc85 = loc(callsite(#loc48 at #loc49))
#loc87 = loc(callsite(#loc50 at #loc48))
#loc88 = loc(callsite(#loc48 at #loc55))
#loc90 = loc(callsite(#loc48 at #loc61))
#loc92 = loc(callsite(#loc69 at #loc70))
#loc93 = loc(callsite(#loc71 at #loc70))
#loc94 = loc(callsite(#loc72 at #loc70))
#loc95 = loc(callsite(#loc73 at #loc70))
#loc96 = loc(callsite(#loc87 at #loc49))
#loc97 = loc(callsite(#loc87 at #loc55))
#loc98 = loc(callsite(#loc87 at #loc61))
