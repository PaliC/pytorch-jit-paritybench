; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_arange_nll_loss_forward_1(ptr addrspace(1) %0, ptr addrspace(1) %1) local_unnamed_addr !dbg !7 {
  %3 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #2, !dbg !10
  %4 = bitcast i32 %3 to float, !dbg !10
  %5 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !11
  %6 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %5, i1 true) #2, !dbg !12
  %7 = bitcast i32 %6 to float, !dbg !12
  %8 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !13
  %9 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %8, i1 true) #2, !dbg !14
  %10 = bitcast i32 %9 to float, !dbg !14
  %11 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !15
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #2, !dbg !16
  %13 = bitcast i32 %12 to float, !dbg !16
  %14 = getelementptr i8, ptr addrspace(1) %1, i64 16, !dbg !17
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 true) #2, !dbg !18
  %16 = bitcast i32 %15 to float, !dbg !18
  %17 = getelementptr i8, ptr addrspace(1) %1, i64 20, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 true) #2, !dbg !20
  %19 = bitcast i32 %18 to float, !dbg !20
  %20 = getelementptr i8, ptr addrspace(1) %1, i64 24, !dbg !21
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #2, !dbg !22
  %22 = bitcast i32 %21 to float, !dbg !22
  %23 = getelementptr i8, ptr addrspace(1) %1, i64 28, !dbg !23
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #2, !dbg !24
  %25 = bitcast i32 %24 to float, !dbg !24
  %26 = getelementptr i8, ptr addrspace(1) %1, i64 32, !dbg !25
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #2, !dbg !26
  %28 = bitcast i32 %27 to float, !dbg !26
  %29 = getelementptr i8, ptr addrspace(1) %1, i64 36, !dbg !27
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #2, !dbg !28
  %31 = bitcast i32 %30 to float, !dbg !28
  %32 = getelementptr i8, ptr addrspace(1) %1, i64 40, !dbg !29
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 true) #2, !dbg !30
  %34 = bitcast i32 %33 to float, !dbg !30
  %35 = getelementptr i8, ptr addrspace(1) %1, i64 44, !dbg !31
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #2, !dbg !32
  %37 = bitcast i32 %36 to float, !dbg !32
  %38 = getelementptr i8, ptr addrspace(1) %1, i64 48, !dbg !33
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #2, !dbg !34
  %40 = bitcast i32 %39 to float, !dbg !34
  %41 = getelementptr i8, ptr addrspace(1) %1, i64 52, !dbg !35
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 true) #2, !dbg !36
  %43 = bitcast i32 %42 to float, !dbg !36
  %44 = getelementptr i8, ptr addrspace(1) %1, i64 56, !dbg !37
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #2, !dbg !38
  %46 = bitcast i32 %45 to float, !dbg !38
  %47 = getelementptr i8, ptr addrspace(1) %1, i64 60, !dbg !39
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #2, !dbg !40
  %49 = bitcast i32 %48 to float, !dbg !40
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #2, !dbg !41
  %51 = fmul float %4, 0x3FF7154760000000, !dbg !42
  %52 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %51) #2, !dbg !42
  %53 = fmul float %7, 0x3FF7154760000000, !dbg !43
  %54 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %53) #2, !dbg !43
  %55 = fadd float %52, %54, !dbg !44
  %56 = fmul float %10, 0x3FF7154760000000, !dbg !45
  %57 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %56) #2, !dbg !45
  %58 = fadd float %55, %57, !dbg !46
  %59 = fmul float %13, 0x3FF7154760000000, !dbg !47
  %60 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %59) #2, !dbg !47
  %61 = fadd float %58, %60, !dbg !48
  %62 = fcmp olt float %61, 0x3810000000000000, !dbg !49
  %63 = fmul float %61, 0x4160000000000000, !dbg !49
  %.02.i = select i1 %62, float %63, float %61, !dbg !49
  %i.i.0.i = select i1 %62, float -2.300000e+01, float 0.000000e+00, !dbg !49
  %64 = bitcast float %.02.i to i32, !dbg !49
  %65 = add i32 %64, -1059760811, !dbg !49
  %66 = and i32 %65, -8388608, !dbg !49
  %67 = sub i32 %64, %66, !dbg !49
  %68 = bitcast i32 %67 to float, !dbg !49
  %69 = sitofp i32 %66 to float, !dbg !49
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !49
  %.not.i = icmp eq i32 %70, 0, !dbg !49
  %71 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %69, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !49
  %72 = tail call float @llvm.nvvm.fma.rn.f(float %69, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !49
  %.08.i = select i1 %.not.i, float %72, float %71, !dbg !49
  %73 = fadd float %68, -1.000000e+00, !dbg !49
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !49
  %.not1.i = icmp eq i32 %74, 0, !dbg !49
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %73, float 0x3FC2073EC0000000) #2, !dbg !49
  %76 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %73, float 0x3FC2073EC0000000) #2, !dbg !49
  %.010.i = select i1 %.not1.i, float %76, float %75, !dbg !49
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !49
  %.not2.i = icmp eq i32 %77, 0, !dbg !49
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %73, float 0xBFBF19B980000000) #2, !dbg !49
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %73, float 0xBFBF19B980000000) #2, !dbg !49
  %.011.i = select i1 %.not2.i, float %79, float %78, !dbg !49
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !49
  %.not3.i = icmp eq i32 %80, 0, !dbg !49
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %73, float 0x3FC1E52AA0000000) #2, !dbg !49
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %73, float 0x3FC1E52AA0000000) #2, !dbg !49
  %.012.i = select i1 %.not3.i, float %82, float %81, !dbg !49
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !49
  %.not4.i = icmp eq i32 %83, 0, !dbg !49
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %73, float 0xBFC55B1720000000) #2, !dbg !49
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %73, float 0xBFC55B1720000000) #2, !dbg !49
  %.09.i = select i1 %.not4.i, float %85, float %84, !dbg !49
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !49
  %.not5.i = icmp eq i32 %86, 0, !dbg !49
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %73, float 0x3FC99DA160000000) #2, !dbg !49
  %88 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %73, float 0x3FC99DA160000000) #2, !dbg !49
  %.05.i = select i1 %.not5.i, float %88, float %87, !dbg !49
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !49
  %.not6.i = icmp eq i32 %89, 0, !dbg !49
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %73, float 0xBFCFFFE440000000) #2, !dbg !49
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %73, float 0xBFCFFFE440000000) #2, !dbg !49
  %.01.i = select i1 %.not6.i, float %91, float %90, !dbg !49
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !49
  %.not7.i = icmp eq i32 %92, 0, !dbg !49
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %73, float 0x3FD5554F00000000) #2, !dbg !49
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %73, float 0x3FD5554F00000000) #2, !dbg !49
  %.0.i = select i1 %.not7.i, float %94, float %93, !dbg !49
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !49
  %.not8.i = icmp eq i32 %95, 0, !dbg !49
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %73, float -5.000000e-01) #2, !dbg !49
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %73, float -5.000000e-01) #2, !dbg !49
  %.07.i = select i1 %.not8.i, float %97, float %96, !dbg !49
  %98 = fmul float %73, %.07.i, !dbg !49
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !49
  %.not9.i = icmp eq i32 %99, 0, !dbg !49
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %98, float %73, float %73) #2, !dbg !49
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %98, float %73, float %73) #2, !dbg !49
  %.06.i = select i1 %.not9.i, float %101, float %100, !dbg !49
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !49
  %.not10.i = icmp eq i32 %102, 0, !dbg !49
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !49
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !49
  %.04.i = select i1 %.not10.i, float %104, float %103, !dbg !49
  %105 = icmp ugt i32 %64, 2139095039, !dbg !49
  br i1 %105, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !49

__nv_fmaf_rn.exit.i.i:                            ; preds = %2
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !49
  %.not11.i = icmp eq i32 %106, 0, !dbg !49
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !49
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !49
  %.03.i = select i1 %.not11.i, float %108, float %107, !dbg !49
  br label %__nv_logf.exit, !dbg !49

__nv_logf.exit:                                   ; preds = %2, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %2 ], !dbg !49
  %109 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 true) #2, !dbg !50
  %110 = fmul float %16, 0x3FF7154760000000, !dbg !51
  %111 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %110) #2, !dbg !51
  %112 = fmul float %19, 0x3FF7154760000000, !dbg !52
  %113 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %112) #2, !dbg !52
  %114 = fadd float %111, %113, !dbg !53
  %115 = fmul float %22, 0x3FF7154760000000, !dbg !54
  %116 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %115) #2, !dbg !54
  %117 = fadd float %114, %116, !dbg !55
  %118 = fmul float %25, 0x3FF7154760000000, !dbg !56
  %119 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %118) #2, !dbg !56
  %120 = fadd float %117, %119, !dbg !57
  %121 = fcmp olt float %120, 0x3810000000000000, !dbg !58
  %122 = fmul float %120, 0x4160000000000000, !dbg !58
  %.02.i1 = select i1 %121, float %122, float %120, !dbg !58
  %i.i.0.i2 = select i1 %121, float -2.300000e+01, float 0.000000e+00, !dbg !58
  %123 = bitcast float %.02.i1 to i32, !dbg !58
  %124 = add i32 %123, -1059760811, !dbg !58
  %125 = and i32 %124, -8388608, !dbg !58
  %126 = sub i32 %123, %125, !dbg !58
  %127 = bitcast i32 %126 to float, !dbg !58
  %128 = sitofp i32 %125 to float, !dbg !58
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !58
  %.not.i3 = icmp eq i32 %129, 0, !dbg !58
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %128, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !58
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %128, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !58
  %.08.i4 = select i1 %.not.i3, float %131, float %130, !dbg !58
  %132 = fadd float %127, -1.000000e+00, !dbg !58
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !58
  %.not1.i5 = icmp eq i32 %133, 0, !dbg !58
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %132, float 0x3FC2073EC0000000) #2, !dbg !58
  %135 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %132, float 0x3FC2073EC0000000) #2, !dbg !58
  %.010.i6 = select i1 %.not1.i5, float %135, float %134, !dbg !58
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !58
  %.not2.i7 = icmp eq i32 %136, 0, !dbg !58
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %132, float 0xBFBF19B980000000) #2, !dbg !58
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %132, float 0xBFBF19B980000000) #2, !dbg !58
  %.011.i8 = select i1 %.not2.i7, float %138, float %137, !dbg !58
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !58
  %.not3.i9 = icmp eq i32 %139, 0, !dbg !58
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %132, float 0x3FC1E52AA0000000) #2, !dbg !58
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %132, float 0x3FC1E52AA0000000) #2, !dbg !58
  %.012.i10 = select i1 %.not3.i9, float %141, float %140, !dbg !58
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !58
  %.not4.i11 = icmp eq i32 %142, 0, !dbg !58
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %132, float 0xBFC55B1720000000) #2, !dbg !58
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %132, float 0xBFC55B1720000000) #2, !dbg !58
  %.09.i12 = select i1 %.not4.i11, float %144, float %143, !dbg !58
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !58
  %.not5.i13 = icmp eq i32 %145, 0, !dbg !58
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %132, float 0x3FC99DA160000000) #2, !dbg !58
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %132, float 0x3FC99DA160000000) #2, !dbg !58
  %.05.i14 = select i1 %.not5.i13, float %147, float %146, !dbg !58
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !58
  %.not6.i15 = icmp eq i32 %148, 0, !dbg !58
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %132, float 0xBFCFFFE440000000) #2, !dbg !58
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %132, float 0xBFCFFFE440000000) #2, !dbg !58
  %.01.i16 = select i1 %.not6.i15, float %150, float %149, !dbg !58
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !58
  %.not7.i17 = icmp eq i32 %151, 0, !dbg !58
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %132, float 0x3FD5554F00000000) #2, !dbg !58
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %132, float 0x3FD5554F00000000) #2, !dbg !58
  %.0.i18 = select i1 %.not7.i17, float %153, float %152, !dbg !58
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !58
  %.not8.i19 = icmp eq i32 %154, 0, !dbg !58
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %132, float -5.000000e-01) #2, !dbg !58
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %132, float -5.000000e-01) #2, !dbg !58
  %.07.i20 = select i1 %.not8.i19, float %156, float %155, !dbg !58
  %157 = fmul float %132, %.07.i20, !dbg !58
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !58
  %.not9.i21 = icmp eq i32 %158, 0, !dbg !58
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %157, float %132, float %132) #2, !dbg !58
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %157, float %132, float %132) #2, !dbg !58
  %.06.i22 = select i1 %.not9.i21, float %160, float %159, !dbg !58
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !58
  %.not10.i23 = icmp eq i32 %161, 0, !dbg !58
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !58
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !58
  %.04.i24 = select i1 %.not10.i23, float %163, float %162, !dbg !58
  %164 = icmp ugt i32 %123, 2139095039, !dbg !58
  br i1 %164, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !58

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !58
  %.not11.i28 = icmp eq i32 %165, 0, !dbg !58
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !58
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !58
  %.03.i29 = select i1 %.not11.i28, float %167, float %166, !dbg !58
  br label %__nv_logf.exit30, !dbg !58

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !58
  %168 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 true) #2, !dbg !59
  %169 = fmul float %28, 0x3FF7154760000000, !dbg !60
  %170 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %169) #2, !dbg !60
  %171 = fmul float %31, 0x3FF7154760000000, !dbg !61
  %172 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %171) #2, !dbg !61
  %173 = fadd float %170, %172, !dbg !62
  %174 = fmul float %34, 0x3FF7154760000000, !dbg !63
  %175 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %174) #2, !dbg !63
  %176 = fadd float %173, %175, !dbg !64
  %177 = fmul float %37, 0x3FF7154760000000, !dbg !65
  %178 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %177) #2, !dbg !65
  %179 = fadd float %176, %178, !dbg !66
  %180 = fcmp olt float %179, 0x3810000000000000, !dbg !67
  %181 = fmul float %179, 0x4160000000000000, !dbg !67
  %.02.i31 = select i1 %180, float %181, float %179, !dbg !67
  %i.i.0.i32 = select i1 %180, float -2.300000e+01, float 0.000000e+00, !dbg !67
  %182 = bitcast float %.02.i31 to i32, !dbg !67
  %183 = add i32 %182, -1059760811, !dbg !67
  %184 = and i32 %183, -8388608, !dbg !67
  %185 = sub i32 %182, %184, !dbg !67
  %186 = bitcast i32 %185 to float, !dbg !67
  %187 = sitofp i32 %184 to float, !dbg !67
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !67
  %.not.i33 = icmp eq i32 %188, 0, !dbg !67
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %187, float 0x3E80000000000000, float %i.i.0.i32) #2, !dbg !67
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %187, float 0x3E80000000000000, float %i.i.0.i32) #2, !dbg !67
  %.08.i34 = select i1 %.not.i33, float %190, float %189, !dbg !67
  %191 = fadd float %186, -1.000000e+00, !dbg !67
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !67
  %.not1.i35 = icmp eq i32 %192, 0, !dbg !67
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %191, float 0x3FC2073EC0000000) #2, !dbg !67
  %194 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %191, float 0x3FC2073EC0000000) #2, !dbg !67
  %.010.i36 = select i1 %.not1.i35, float %194, float %193, !dbg !67
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !67
  %.not2.i37 = icmp eq i32 %195, 0, !dbg !67
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %191, float 0xBFBF19B980000000) #2, !dbg !67
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %191, float 0xBFBF19B980000000) #2, !dbg !67
  %.011.i38 = select i1 %.not2.i37, float %197, float %196, !dbg !67
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !67
  %.not3.i39 = icmp eq i32 %198, 0, !dbg !67
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %191, float 0x3FC1E52AA0000000) #2, !dbg !67
  %200 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %191, float 0x3FC1E52AA0000000) #2, !dbg !67
  %.012.i40 = select i1 %.not3.i39, float %200, float %199, !dbg !67
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !67
  %.not4.i41 = icmp eq i32 %201, 0, !dbg !67
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %191, float 0xBFC55B1720000000) #2, !dbg !67
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %191, float 0xBFC55B1720000000) #2, !dbg !67
  %.09.i42 = select i1 %.not4.i41, float %203, float %202, !dbg !67
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !67
  %.not5.i43 = icmp eq i32 %204, 0, !dbg !67
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %191, float 0x3FC99DA160000000) #2, !dbg !67
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %191, float 0x3FC99DA160000000) #2, !dbg !67
  %.05.i44 = select i1 %.not5.i43, float %206, float %205, !dbg !67
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !67
  %.not6.i45 = icmp eq i32 %207, 0, !dbg !67
  %208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %191, float 0xBFCFFFE440000000) #2, !dbg !67
  %209 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %191, float 0xBFCFFFE440000000) #2, !dbg !67
  %.01.i46 = select i1 %.not6.i45, float %209, float %208, !dbg !67
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !67
  %.not7.i47 = icmp eq i32 %210, 0, !dbg !67
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %191, float 0x3FD5554F00000000) #2, !dbg !67
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %191, float 0x3FD5554F00000000) #2, !dbg !67
  %.0.i48 = select i1 %.not7.i47, float %212, float %211, !dbg !67
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !67
  %.not8.i49 = icmp eq i32 %213, 0, !dbg !67
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %191, float -5.000000e-01) #2, !dbg !67
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %191, float -5.000000e-01) #2, !dbg !67
  %.07.i50 = select i1 %.not8.i49, float %215, float %214, !dbg !67
  %216 = fmul float %191, %.07.i50, !dbg !67
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !67
  %.not9.i51 = icmp eq i32 %217, 0, !dbg !67
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %216, float %191, float %191) #2, !dbg !67
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %216, float %191, float %191) #2, !dbg !67
  %.06.i52 = select i1 %.not9.i51, float %219, float %218, !dbg !67
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !67
  %.not10.i53 = icmp eq i32 %220, 0, !dbg !67
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #2, !dbg !67
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #2, !dbg !67
  %.04.i54 = select i1 %.not10.i53, float %222, float %221, !dbg !67
  %223 = icmp ugt i32 %182, 2139095039, !dbg !67
  br i1 %223, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !67

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !67
  %.not11.i58 = icmp eq i32 %224, 0, !dbg !67
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !67
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !67
  %.03.i59 = select i1 %.not11.i58, float %226, float %225, !dbg !67
  br label %__nv_logf.exit60, !dbg !67

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !67
  %227 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #2, !dbg !68
  %228 = fmul float %40, 0x3FF7154760000000, !dbg !69
  %229 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %228) #2, !dbg !69
  %230 = fmul float %43, 0x3FF7154760000000, !dbg !70
  %231 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %230) #2, !dbg !70
  %232 = fadd float %229, %231, !dbg !71
  %233 = fmul float %46, 0x3FF7154760000000, !dbg !72
  %234 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %233) #2, !dbg !72
  %235 = fadd float %232, %234, !dbg !73
  %236 = fmul float %49, 0x3FF7154760000000, !dbg !74
  %237 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %236) #2, !dbg !74
  %238 = fadd float %235, %237, !dbg !75
  %239 = fcmp olt float %238, 0x3810000000000000, !dbg !76
  %240 = fmul float %238, 0x4160000000000000, !dbg !76
  %.02.i61 = select i1 %239, float %240, float %238, !dbg !76
  %i.i.0.i62 = select i1 %239, float -2.300000e+01, float 0.000000e+00, !dbg !76
  %241 = bitcast float %.02.i61 to i32, !dbg !76
  %242 = add i32 %241, -1059760811, !dbg !76
  %243 = and i32 %242, -8388608, !dbg !76
  %244 = sub i32 %241, %243, !dbg !76
  %245 = bitcast i32 %244 to float, !dbg !76
  %246 = sitofp i32 %243 to float, !dbg !76
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !76
  %.not.i63 = icmp eq i32 %247, 0, !dbg !76
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %246, float 0x3E80000000000000, float %i.i.0.i62) #2, !dbg !76
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %246, float 0x3E80000000000000, float %i.i.0.i62) #2, !dbg !76
  %.08.i64 = select i1 %.not.i63, float %249, float %248, !dbg !76
  %250 = fadd float %245, -1.000000e+00, !dbg !76
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !76
  %.not1.i65 = icmp eq i32 %251, 0, !dbg !76
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %250, float 0x3FC2073EC0000000) #2, !dbg !76
  %253 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %250, float 0x3FC2073EC0000000) #2, !dbg !76
  %.010.i66 = select i1 %.not1.i65, float %253, float %252, !dbg !76
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !76
  %.not2.i67 = icmp eq i32 %254, 0, !dbg !76
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %250, float 0xBFBF19B980000000) #2, !dbg !76
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %250, float 0xBFBF19B980000000) #2, !dbg !76
  %.011.i68 = select i1 %.not2.i67, float %256, float %255, !dbg !76
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !76
  %.not3.i69 = icmp eq i32 %257, 0, !dbg !76
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %250, float 0x3FC1E52AA0000000) #2, !dbg !76
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %250, float 0x3FC1E52AA0000000) #2, !dbg !76
  %.012.i70 = select i1 %.not3.i69, float %259, float %258, !dbg !76
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !76
  %.not4.i71 = icmp eq i32 %260, 0, !dbg !76
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %250, float 0xBFC55B1720000000) #2, !dbg !76
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %250, float 0xBFC55B1720000000) #2, !dbg !76
  %.09.i72 = select i1 %.not4.i71, float %262, float %261, !dbg !76
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !76
  %.not5.i73 = icmp eq i32 %263, 0, !dbg !76
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %250, float 0x3FC99DA160000000) #2, !dbg !76
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %250, float 0x3FC99DA160000000) #2, !dbg !76
  %.05.i74 = select i1 %.not5.i73, float %265, float %264, !dbg !76
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !76
  %.not6.i75 = icmp eq i32 %266, 0, !dbg !76
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %250, float 0xBFCFFFE440000000) #2, !dbg !76
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %250, float 0xBFCFFFE440000000) #2, !dbg !76
  %.01.i76 = select i1 %.not6.i75, float %268, float %267, !dbg !76
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !76
  %.not7.i77 = icmp eq i32 %269, 0, !dbg !76
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %250, float 0x3FD5554F00000000) #2, !dbg !76
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %250, float 0x3FD5554F00000000) #2, !dbg !76
  %.0.i78 = select i1 %.not7.i77, float %271, float %270, !dbg !76
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !76
  %.not8.i79 = icmp eq i32 %272, 0, !dbg !76
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %250, float -5.000000e-01) #2, !dbg !76
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %250, float -5.000000e-01) #2, !dbg !76
  %.07.i80 = select i1 %.not8.i79, float %274, float %273, !dbg !76
  %275 = fmul float %250, %.07.i80, !dbg !76
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !76
  %.not9.i81 = icmp eq i32 %276, 0, !dbg !76
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %275, float %250, float %250) #2, !dbg !76
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %275, float %250, float %250) #2, !dbg !76
  %.06.i82 = select i1 %.not9.i81, float %278, float %277, !dbg !76
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !76
  %.not10.i83 = icmp eq i32 %279, 0, !dbg !76
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #2, !dbg !76
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #2, !dbg !76
  %.04.i84 = select i1 %.not10.i83, float %281, float %280, !dbg !76
  %282 = icmp ugt i32 %241, 2139095039, !dbg !76
  br i1 %282, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !76

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !76
  %.not11.i88 = icmp eq i32 %283, 0, !dbg !76
  %284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !76
  %285 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !76
  %.03.i89 = select i1 %.not11.i88, float %285, float %284, !dbg !76
  br label %__nv_logf.exit90, !dbg !76

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !76
  %286 = insertelement <2 x i32> poison, i32 %168, i64 0, !dbg !59
  %287 = insertelement <2 x i32> %286, i32 %227, i64 1, !dbg !59
  %288 = bitcast <2 x i32> %287 to <2 x float>, !dbg !59
  %289 = insertelement <2 x float> poison, float %.02.i, i64 0, !dbg !49
  %290 = insertelement <2 x float> %289, float %.02.i1, i64 1, !dbg !49
  %291 = fcmp oeq <2 x float> %290, zeroinitializer, !dbg !49
  %292 = insertelement <2 x i32> poison, i32 %50, i64 0, !dbg !41
  %293 = insertelement <2 x i32> %292, i32 %109, i64 1, !dbg !41
  %294 = bitcast <2 x i32> %293 to <2 x float>, !dbg !41
  %295 = insertelement <2 x float> poison, float %r.i.0.i, i64 0, !dbg !49
  %296 = insertelement <2 x float> %295, float %r.i.0.i25, i64 1, !dbg !49
  %297 = select <2 x i1> %291, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %296, !dbg !49
  %298 = fsub <2 x float> %297, %294, !dbg !77
  %299 = fadd <2 x float> %298, zeroinitializer, !dbg !77
  %shift = shufflevector <2 x float> %299, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !78
  %300 = fadd <2 x float> %299, %shift, !dbg !78
  %301 = insertelement <2 x float> poison, float %.02.i31, i64 0, !dbg !67
  %302 = insertelement <2 x float> %301, float %.02.i61, i64 1, !dbg !67
  %303 = fcmp oeq <2 x float> %302, zeroinitializer, !dbg !67
  %304 = insertelement <2 x float> poison, float %r.i.0.i55, i64 0, !dbg !67
  %305 = insertelement <2 x float> %304, float %r.i.0.i85, i64 1, !dbg !67
  %306 = select <2 x i1> %303, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %305, !dbg !67
  %307 = fsub <2 x float> %306, %288, !dbg !79
  %308 = fadd <2 x float> %307, zeroinitializer, !dbg !79
  %309 = fadd <2 x float> %300, %308, !dbg !80
  %shift91 = shufflevector <2 x float> %308, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !81
  %310 = fadd <2 x float> %309, %shift91, !dbg !81
  %311 = extractelement <2 x float> %310, i64 0, !dbg !81
  %312 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %311, float 4.000000e+00) #2, !dbg !82
  %313 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !83
  %314 = and i32 %313, 31, !dbg !83
  %315 = icmp eq i32 %314, 0, !dbg !83
  %316 = bitcast float %312 to i32, !dbg !83
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %316, ptr addrspace(1) %0, i1 %315) #2, !dbg !83
  ret void, !dbg !84
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cp6qdztosw3bf2z2lwtpjub2dte7o23bbhhv2by5zbz45p5x3fqg.py", directory: "inductor_cache/p6")
!4 = !{ptr @triton_poi_fused_arange_nll_loss_forward_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_arange_nll_loss_forward_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_arange_nll_loss_forward_1", linkageName: "triton_poi_fused_arange_nll_loss_forward_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 19, scope: !7)
!11 = !DILocation(line: 26, column: 30, scope: !7)
!12 = !DILocation(line: 26, column: 19, scope: !7)
!13 = !DILocation(line: 28, column: 31, scope: !7)
!14 = !DILocation(line: 28, column: 20, scope: !7)
!15 = !DILocation(line: 30, column: 31, scope: !7)
!16 = !DILocation(line: 30, column: 20, scope: !7)
!17 = !DILocation(line: 32, column: 31, scope: !7)
!18 = !DILocation(line: 32, column: 20, scope: !7)
!19 = !DILocation(line: 34, column: 31, scope: !7)
!20 = !DILocation(line: 34, column: 20, scope: !7)
!21 = !DILocation(line: 36, column: 31, scope: !7)
!22 = !DILocation(line: 36, column: 20, scope: !7)
!23 = !DILocation(line: 38, column: 31, scope: !7)
!24 = !DILocation(line: 38, column: 20, scope: !7)
!25 = !DILocation(line: 40, column: 31, scope: !7)
!26 = !DILocation(line: 40, column: 20, scope: !7)
!27 = !DILocation(line: 42, column: 31, scope: !7)
!28 = !DILocation(line: 42, column: 20, scope: !7)
!29 = !DILocation(line: 44, column: 31, scope: !7)
!30 = !DILocation(line: 44, column: 20, scope: !7)
!31 = !DILocation(line: 46, column: 31, scope: !7)
!32 = !DILocation(line: 46, column: 20, scope: !7)
!33 = !DILocation(line: 48, column: 31, scope: !7)
!34 = !DILocation(line: 48, column: 20, scope: !7)
!35 = !DILocation(line: 50, column: 31, scope: !7)
!36 = !DILocation(line: 50, column: 20, scope: !7)
!37 = !DILocation(line: 52, column: 31, scope: !7)
!38 = !DILocation(line: 52, column: 20, scope: !7)
!39 = !DILocation(line: 54, column: 31, scope: !7)
!40 = !DILocation(line: 54, column: 20, scope: !7)
!41 = !DILocation(line: 60, column: 37, scope: !7)
!42 = !DILocation(line: 61, column: 23, scope: !7)
!43 = !DILocation(line: 62, column: 24, scope: !7)
!44 = !DILocation(line: 63, column: 19, scope: !7)
!45 = !DILocation(line: 64, column: 24, scope: !7)
!46 = !DILocation(line: 65, column: 20, scope: !7)
!47 = !DILocation(line: 66, column: 24, scope: !7)
!48 = !DILocation(line: 67, column: 20, scope: !7)
!49 = !DILocation(line: 68, column: 24, scope: !7)
!50 = !DILocation(line: 76, column: 43, scope: !7)
!51 = !DILocation(line: 77, column: 24, scope: !7)
!52 = !DILocation(line: 78, column: 24, scope: !7)
!53 = !DILocation(line: 79, column: 20, scope: !7)
!54 = !DILocation(line: 80, column: 24, scope: !7)
!55 = !DILocation(line: 81, column: 20, scope: !7)
!56 = !DILocation(line: 82, column: 24, scope: !7)
!57 = !DILocation(line: 83, column: 20, scope: !7)
!58 = !DILocation(line: 84, column: 24, scope: !7)
!59 = !DILocation(line: 92, column: 43, scope: !7)
!60 = !DILocation(line: 93, column: 24, scope: !7)
!61 = !DILocation(line: 94, column: 24, scope: !7)
!62 = !DILocation(line: 95, column: 20, scope: !7)
!63 = !DILocation(line: 96, column: 24, scope: !7)
!64 = !DILocation(line: 97, column: 20, scope: !7)
!65 = !DILocation(line: 98, column: 24, scope: !7)
!66 = !DILocation(line: 99, column: 20, scope: !7)
!67 = !DILocation(line: 100, column: 24, scope: !7)
!68 = !DILocation(line: 108, column: 44, scope: !7)
!69 = !DILocation(line: 109, column: 24, scope: !7)
!70 = !DILocation(line: 110, column: 24, scope: !7)
!71 = !DILocation(line: 111, column: 20, scope: !7)
!72 = !DILocation(line: 112, column: 24, scope: !7)
!73 = !DILocation(line: 113, column: 20, scope: !7)
!74 = !DILocation(line: 114, column: 24, scope: !7)
!75 = !DILocation(line: 115, column: 20, scope: !7)
!76 = !DILocation(line: 116, column: 24, scope: !7)
!77 = !DILocation(line: 70, column: 13, scope: !7)
!78 = !DILocation(line: 88, column: 20, scope: !7)
!79 = !DILocation(line: 102, column: 13, scope: !7)
!80 = !DILocation(line: 104, column: 20, scope: !7)
!81 = !DILocation(line: 120, column: 20, scope: !7)
!82 = !DILocation(line: 129, column: 21, scope: !7)
!83 = !DILocation(line: 130, column: 69, scope: !7)
!84 = !DILocation(line: 130, column: 4, scope: !7)
