; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_tanh_11(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %7 = shl i32 %6, 6, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 4, !dbg !12
  %10 = and i32 %9, 15, !dbg !12
  %11 = or disjoint i32 %10, 16, !dbg !12
  %12 = or disjoint i32 %10, 32, !dbg !12
  %13 = or disjoint i32 %10, 48, !dbg !12
  %14 = shl i32 %8, 2, !dbg !12
  %15 = and i32 %14, 60, !dbg !12
  %16 = or disjoint i32 %7, %10, !dbg !13
  %17 = or disjoint i32 %7, %11, !dbg !13
  %18 = or disjoint i32 %7, %12, !dbg !13
  %19 = or disjoint i32 %7, %13, !dbg !13
  %20 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !14
  %21 = shl i32 %20, 6, !dbg !15
  %22 = or disjoint i32 %21, %15, !dbg !16
  %23 = icmp slt i32 %22, 256, !dbg !17
  %24 = shl i32 %16, 8, !dbg !18
  %25 = shl i32 %17, 8, !dbg !18
  %26 = shl i32 %18, 8, !dbg !18
  %27 = shl i32 %19, 8, !dbg !18
  %28 = add i32 %22, %24, !dbg !19
  %29 = add i32 %22, %25, !dbg !19
  %30 = add i32 %22, %26, !dbg !19
  %31 = add i32 %22, %27, !dbg !19
  %32 = sext i32 %28 to i64, !dbg !20
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !20
  %34 = sext i32 %29 to i64, !dbg !20
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !20
  %36 = sext i32 %30 to i64, !dbg !20
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !20
  %38 = sext i32 %31 to i64, !dbg !20
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !20
  %40 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %33, i1 %23) #4, !dbg !21
  %41 = extractvalue { i32, i32, i32, i32 } %40, 0, !dbg !21
  %42 = extractvalue { i32, i32, i32, i32 } %40, 1, !dbg !21
  %43 = extractvalue { i32, i32, i32, i32 } %40, 2, !dbg !21
  %44 = extractvalue { i32, i32, i32, i32 } %40, 3, !dbg !21
  %45 = bitcast i32 %41 to float, !dbg !21
  %46 = bitcast i32 %42 to float, !dbg !21
  %47 = bitcast i32 %43 to float, !dbg !21
  %48 = bitcast i32 %44 to float, !dbg !21
  %49 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %35, i1 %23) #4, !dbg !21
  %50 = extractvalue { i32, i32, i32, i32 } %49, 0, !dbg !21
  %51 = extractvalue { i32, i32, i32, i32 } %49, 1, !dbg !21
  %52 = extractvalue { i32, i32, i32, i32 } %49, 2, !dbg !21
  %53 = extractvalue { i32, i32, i32, i32 } %49, 3, !dbg !21
  %54 = bitcast i32 %50 to float, !dbg !21
  %55 = bitcast i32 %51 to float, !dbg !21
  %56 = bitcast i32 %52 to float, !dbg !21
  %57 = bitcast i32 %53 to float, !dbg !21
  %58 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %37, i1 %23) #4, !dbg !21
  %59 = extractvalue { i32, i32, i32, i32 } %58, 0, !dbg !21
  %60 = extractvalue { i32, i32, i32, i32 } %58, 1, !dbg !21
  %61 = extractvalue { i32, i32, i32, i32 } %58, 2, !dbg !21
  %62 = extractvalue { i32, i32, i32, i32 } %58, 3, !dbg !21
  %63 = bitcast i32 %59 to float, !dbg !21
  %64 = bitcast i32 %60 to float, !dbg !21
  %65 = bitcast i32 %61 to float, !dbg !21
  %66 = bitcast i32 %62 to float, !dbg !21
  %67 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %39, i1 %23) #4, !dbg !21
  %68 = extractvalue { i32, i32, i32, i32 } %67, 0, !dbg !21
  %69 = extractvalue { i32, i32, i32, i32 } %67, 1, !dbg !21
  %70 = extractvalue { i32, i32, i32, i32 } %67, 2, !dbg !21
  %71 = extractvalue { i32, i32, i32, i32 } %67, 3, !dbg !21
  %72 = bitcast i32 %68 to float, !dbg !21
  %73 = bitcast i32 %69 to float, !dbg !21
  %74 = bitcast i32 %70 to float, !dbg !21
  %75 = bitcast i32 %71 to float, !dbg !21
  %76 = getelementptr float, ptr addrspace(1) %1, i64 %32, !dbg !22
  %77 = getelementptr float, ptr addrspace(1) %1, i64 %34, !dbg !22
  %78 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !22
  %79 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !22
  %80 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %76, i1 %23) #4, !dbg !23
  %81 = extractvalue { i32, i32, i32, i32 } %80, 0, !dbg !23
  %82 = extractvalue { i32, i32, i32, i32 } %80, 1, !dbg !23
  %83 = extractvalue { i32, i32, i32, i32 } %80, 2, !dbg !23
  %84 = extractvalue { i32, i32, i32, i32 } %80, 3, !dbg !23
  %85 = bitcast i32 %81 to float, !dbg !23
  %86 = bitcast i32 %82 to float, !dbg !23
  %87 = bitcast i32 %83 to float, !dbg !23
  %88 = bitcast i32 %84 to float, !dbg !23
  %89 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %77, i1 %23) #4, !dbg !23
  %90 = extractvalue { i32, i32, i32, i32 } %89, 0, !dbg !23
  %91 = extractvalue { i32, i32, i32, i32 } %89, 1, !dbg !23
  %92 = extractvalue { i32, i32, i32, i32 } %89, 2, !dbg !23
  %93 = extractvalue { i32, i32, i32, i32 } %89, 3, !dbg !23
  %94 = bitcast i32 %90 to float, !dbg !23
  %95 = bitcast i32 %91 to float, !dbg !23
  %96 = bitcast i32 %92 to float, !dbg !23
  %97 = bitcast i32 %93 to float, !dbg !23
  %98 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %78, i1 %23) #4, !dbg !23
  %99 = extractvalue { i32, i32, i32, i32 } %98, 0, !dbg !23
  %100 = extractvalue { i32, i32, i32, i32 } %98, 1, !dbg !23
  %101 = extractvalue { i32, i32, i32, i32 } %98, 2, !dbg !23
  %102 = extractvalue { i32, i32, i32, i32 } %98, 3, !dbg !23
  %103 = bitcast i32 %99 to float, !dbg !23
  %104 = bitcast i32 %100 to float, !dbg !23
  %105 = bitcast i32 %101 to float, !dbg !23
  %106 = bitcast i32 %102 to float, !dbg !23
  %107 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %79, i1 %23) #4, !dbg !23
  %108 = extractvalue { i32, i32, i32, i32 } %107, 0, !dbg !23
  %109 = extractvalue { i32, i32, i32, i32 } %107, 1, !dbg !23
  %110 = extractvalue { i32, i32, i32, i32 } %107, 2, !dbg !23
  %111 = extractvalue { i32, i32, i32, i32 } %107, 3, !dbg !23
  %112 = bitcast i32 %108 to float, !dbg !23
  %113 = bitcast i32 %109 to float, !dbg !23
  %114 = bitcast i32 %110 to float, !dbg !23
  %115 = bitcast i32 %111 to float, !dbg !23
  %116 = fadd float %45, %85, !dbg !24
  %117 = fadd float %46, %86, !dbg !24
  %118 = fadd float %47, %87, !dbg !24
  %119 = fadd float %48, %88, !dbg !24
  %120 = fadd float %54, %94, !dbg !24
  %121 = fadd float %55, %95, !dbg !24
  %122 = fadd float %56, %96, !dbg !24
  %123 = fadd float %57, %97, !dbg !24
  %124 = fadd float %63, %103, !dbg !24
  %125 = fadd float %64, %104, !dbg !24
  %126 = fadd float %65, %105, !dbg !24
  %127 = fadd float %66, %106, !dbg !24
  %128 = fadd float %72, %112, !dbg !24
  %129 = fadd float %73, %113, !dbg !24
  %130 = fadd float %74, %114, !dbg !24
  %131 = fadd float %75, %115, !dbg !24
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i = icmp eq i32 %132, 0, !dbg !25
  %133 = tail call float @llvm.nvvm.fabs.ftz.f(float %116) #4, !dbg !25
  %134 = tail call float @llvm.nvvm.fabs.f(float %116) #4, !dbg !25
  %.01.i = select i1 %.not.i, float %134, float %133, !dbg !25
  %135 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !25
  br i1 %135, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !25

__internal_fmad.exit1.i:                          ; preds = %5
  %136 = fmul float %.01.i, 0x4007154760000000, !dbg !25
  %137 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %136) #4, !dbg !25
  %138 = fadd float %137, 1.000000e+00, !dbg !25
  %139 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %138) #5, !dbg !25, !srcloc !26
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i = icmp eq i32 %140, 0, !dbg !25
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %139, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i = select i1 %.not6.i, float %142, float %141, !dbg !25
  %143 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !25
  %s.0.i = select i1 %143, float 1.000000e+00, float %.03.i, !dbg !25
  %144 = bitcast float %s.0.i to i32, !dbg !25
  %145 = bitcast float %116 to i32, !dbg !25
  %146 = and i32 %145, -2147483648, !dbg !25
  %147 = or i32 %146, %144, !dbg !25
  %148 = bitcast i32 %147 to float, !dbg !25
  br label %__nv_tanhf.exit, !dbg !25

__internal_fmad.exit3.i:                          ; preds = %5
  %149 = fmul float %116, %116, !dbg !25
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i = icmp eq i32 %150, 0, !dbg !25
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %149, float 0xBFAAC795C0000000) #4, !dbg !25
  %152 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %149, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i = select i1 %.not1.i, float %152, float %151, !dbg !25
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i = icmp eq i32 %153, 0, !dbg !25
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %149, float 0x3FC10B2820000000) #4, !dbg !25
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %149, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i = select i1 %.not2.i, float %155, float %154, !dbg !25
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i = icmp eq i32 %156, 0, !dbg !25
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %149, float 0xBFD5553DA0000000) #4, !dbg !25
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %149, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i = select i1 %.not3.i, float %158, float %157, !dbg !25
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i = icmp eq i32 %159, 0, !dbg !25
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %149, float 0.000000e+00) #4, !dbg !25
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %149, float 0.000000e+00) #4, !dbg !25
  %.04.i = select i1 %.not4.i, float %161, float %160, !dbg !25
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i = icmp eq i32 %162, 0, !dbg !25
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %116, float %116) #4, !dbg !25
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %116, float %116) #4, !dbg !25
  %.02.i = select i1 %.not5.i, float %164, float %163, !dbg !25
  br label %__nv_tanhf.exit, !dbg !25

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %148, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !25
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i31 = icmp eq i32 %165, 0, !dbg !25
  %166 = tail call float @llvm.nvvm.fabs.ftz.f(float %117) #4, !dbg !25
  %167 = tail call float @llvm.nvvm.fabs.f(float %117) #4, !dbg !25
  %.01.i32 = select i1 %.not.i31, float %167, float %166, !dbg !25
  %168 = fcmp ult float %.01.i32, 0x3FE3333340000000, !dbg !25
  br i1 %168, label %__internal_fmad.exit3.i38, label %__internal_fmad.exit1.i33, !dbg !25

__internal_fmad.exit1.i33:                        ; preds = %__nv_tanhf.exit
  %169 = fmul float %.01.i32, 0x4007154760000000, !dbg !25
  %170 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %169) #4, !dbg !25
  %171 = fadd float %170, 1.000000e+00, !dbg !25
  %172 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %171) #5, !dbg !25, !srcloc !26
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i34 = icmp eq i32 %173, 0, !dbg !25
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %172, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %172, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i35 = select i1 %.not6.i34, float %175, float %174, !dbg !25
  %176 = fcmp oge float %.01.i32, 0x4022059680000000, !dbg !25
  %s.0.i36 = select i1 %176, float 1.000000e+00, float %.03.i35, !dbg !25
  %177 = bitcast float %s.0.i36 to i32, !dbg !25
  %178 = bitcast float %117 to i32, !dbg !25
  %179 = and i32 %178, -2147483648, !dbg !25
  %180 = or i32 %179, %177, !dbg !25
  %181 = bitcast i32 %180 to float, !dbg !25
  br label %__nv_tanhf.exit49, !dbg !25

__internal_fmad.exit3.i38:                        ; preds = %__nv_tanhf.exit
  %182 = fmul float %117, %117, !dbg !25
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i39 = icmp eq i32 %183, 0, !dbg !25
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %182, float 0xBFAAC795C0000000) #4, !dbg !25
  %185 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %182, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i40 = select i1 %.not1.i39, float %185, float %184, !dbg !25
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i41 = icmp eq i32 %186, 0, !dbg !25
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i40, float %182, float 0x3FC10B2820000000) #4, !dbg !25
  %188 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i40, float %182, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i42 = select i1 %.not2.i41, float %188, float %187, !dbg !25
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i43 = icmp eq i32 %189, 0, !dbg !25
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i42, float %182, float 0xBFD5553DA0000000) #4, !dbg !25
  %191 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i42, float %182, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i44 = select i1 %.not3.i43, float %191, float %190, !dbg !25
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i45 = icmp eq i32 %192, 0, !dbg !25
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i44, float %182, float 0.000000e+00) #4, !dbg !25
  %194 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i44, float %182, float 0.000000e+00) #4, !dbg !25
  %.04.i46 = select i1 %.not4.i45, float %194, float %193, !dbg !25
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i47 = icmp eq i32 %195, 0, !dbg !25
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i46, float %117, float %117) #4, !dbg !25
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i46, float %117, float %117) #4, !dbg !25
  %.02.i48 = select i1 %.not5.i47, float %197, float %196, !dbg !25
  br label %__nv_tanhf.exit49, !dbg !25

__nv_tanhf.exit49:                                ; preds = %__internal_fmad.exit1.i33, %__internal_fmad.exit3.i38
  %s.1.i37 = phi float [ %181, %__internal_fmad.exit1.i33 ], [ %.02.i48, %__internal_fmad.exit3.i38 ], !dbg !25
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i50 = icmp eq i32 %198, 0, !dbg !25
  %199 = tail call float @llvm.nvvm.fabs.ftz.f(float %118) #4, !dbg !25
  %200 = tail call float @llvm.nvvm.fabs.f(float %118) #4, !dbg !25
  %.01.i51 = select i1 %.not.i50, float %200, float %199, !dbg !25
  %201 = fcmp ult float %.01.i51, 0x3FE3333340000000, !dbg !25
  br i1 %201, label %__internal_fmad.exit3.i57, label %__internal_fmad.exit1.i52, !dbg !25

__internal_fmad.exit1.i52:                        ; preds = %__nv_tanhf.exit49
  %202 = fmul float %.01.i51, 0x4007154760000000, !dbg !25
  %203 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %202) #4, !dbg !25
  %204 = fadd float %203, 1.000000e+00, !dbg !25
  %205 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %204) #5, !dbg !25, !srcloc !26
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i53 = icmp eq i32 %206, 0, !dbg !25
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %205, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %208 = tail call float @llvm.nvvm.fma.rn.f(float %205, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i54 = select i1 %.not6.i53, float %208, float %207, !dbg !25
  %209 = fcmp oge float %.01.i51, 0x4022059680000000, !dbg !25
  %s.0.i55 = select i1 %209, float 1.000000e+00, float %.03.i54, !dbg !25
  %210 = bitcast float %s.0.i55 to i32, !dbg !25
  %211 = bitcast float %118 to i32, !dbg !25
  %212 = and i32 %211, -2147483648, !dbg !25
  %213 = or i32 %212, %210, !dbg !25
  %214 = bitcast i32 %213 to float, !dbg !25
  br label %__nv_tanhf.exit68, !dbg !25

__internal_fmad.exit3.i57:                        ; preds = %__nv_tanhf.exit49
  %215 = fmul float %118, %118, !dbg !25
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i58 = icmp eq i32 %216, 0, !dbg !25
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %215, float 0xBFAAC795C0000000) #4, !dbg !25
  %218 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %215, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i59 = select i1 %.not1.i58, float %218, float %217, !dbg !25
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i60 = icmp eq i32 %219, 0, !dbg !25
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i59, float %215, float 0x3FC10B2820000000) #4, !dbg !25
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i59, float %215, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i61 = select i1 %.not2.i60, float %221, float %220, !dbg !25
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i62 = icmp eq i32 %222, 0, !dbg !25
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i61, float %215, float 0xBFD5553DA0000000) #4, !dbg !25
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i61, float %215, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i63 = select i1 %.not3.i62, float %224, float %223, !dbg !25
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i64 = icmp eq i32 %225, 0, !dbg !25
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i63, float %215, float 0.000000e+00) #4, !dbg !25
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i63, float %215, float 0.000000e+00) #4, !dbg !25
  %.04.i65 = select i1 %.not4.i64, float %227, float %226, !dbg !25
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i66 = icmp eq i32 %228, 0, !dbg !25
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i65, float %118, float %118) #4, !dbg !25
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i65, float %118, float %118) #4, !dbg !25
  %.02.i67 = select i1 %.not5.i66, float %230, float %229, !dbg !25
  br label %__nv_tanhf.exit68, !dbg !25

__nv_tanhf.exit68:                                ; preds = %__internal_fmad.exit1.i52, %__internal_fmad.exit3.i57
  %s.1.i56 = phi float [ %214, %__internal_fmad.exit1.i52 ], [ %.02.i67, %__internal_fmad.exit3.i57 ], !dbg !25
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i69 = icmp eq i32 %231, 0, !dbg !25
  %232 = tail call float @llvm.nvvm.fabs.ftz.f(float %119) #4, !dbg !25
  %233 = tail call float @llvm.nvvm.fabs.f(float %119) #4, !dbg !25
  %.01.i70 = select i1 %.not.i69, float %233, float %232, !dbg !25
  %234 = fcmp ult float %.01.i70, 0x3FE3333340000000, !dbg !25
  br i1 %234, label %__internal_fmad.exit3.i76, label %__internal_fmad.exit1.i71, !dbg !25

__internal_fmad.exit1.i71:                        ; preds = %__nv_tanhf.exit68
  %235 = fmul float %.01.i70, 0x4007154760000000, !dbg !25
  %236 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %235) #4, !dbg !25
  %237 = fadd float %236, 1.000000e+00, !dbg !25
  %238 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %237) #5, !dbg !25, !srcloc !26
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i72 = icmp eq i32 %239, 0, !dbg !25
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %238, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %238, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i73 = select i1 %.not6.i72, float %241, float %240, !dbg !25
  %242 = fcmp oge float %.01.i70, 0x4022059680000000, !dbg !25
  %s.0.i74 = select i1 %242, float 1.000000e+00, float %.03.i73, !dbg !25
  %243 = bitcast float %s.0.i74 to i32, !dbg !25
  %244 = bitcast float %119 to i32, !dbg !25
  %245 = and i32 %244, -2147483648, !dbg !25
  %246 = or i32 %245, %243, !dbg !25
  %247 = bitcast i32 %246 to float, !dbg !25
  br label %__nv_tanhf.exit87, !dbg !25

__internal_fmad.exit3.i76:                        ; preds = %__nv_tanhf.exit68
  %248 = fmul float %119, %119, !dbg !25
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i77 = icmp eq i32 %249, 0, !dbg !25
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %248, float 0xBFAAC795C0000000) #4, !dbg !25
  %251 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %248, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i78 = select i1 %.not1.i77, float %251, float %250, !dbg !25
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i79 = icmp eq i32 %252, 0, !dbg !25
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i78, float %248, float 0x3FC10B2820000000) #4, !dbg !25
  %254 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i78, float %248, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i80 = select i1 %.not2.i79, float %254, float %253, !dbg !25
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i81 = icmp eq i32 %255, 0, !dbg !25
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i80, float %248, float 0xBFD5553DA0000000) #4, !dbg !25
  %257 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i80, float %248, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i82 = select i1 %.not3.i81, float %257, float %256, !dbg !25
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i83 = icmp eq i32 %258, 0, !dbg !25
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i82, float %248, float 0.000000e+00) #4, !dbg !25
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i82, float %248, float 0.000000e+00) #4, !dbg !25
  %.04.i84 = select i1 %.not4.i83, float %260, float %259, !dbg !25
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i85 = icmp eq i32 %261, 0, !dbg !25
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i84, float %119, float %119) #4, !dbg !25
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i84, float %119, float %119) #4, !dbg !25
  %.02.i86 = select i1 %.not5.i85, float %263, float %262, !dbg !25
  br label %__nv_tanhf.exit87, !dbg !25

__nv_tanhf.exit87:                                ; preds = %__internal_fmad.exit1.i71, %__internal_fmad.exit3.i76
  %s.1.i75 = phi float [ %247, %__internal_fmad.exit1.i71 ], [ %.02.i86, %__internal_fmad.exit3.i76 ], !dbg !25
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i88 = icmp eq i32 %264, 0, !dbg !25
  %265 = tail call float @llvm.nvvm.fabs.ftz.f(float %120) #4, !dbg !25
  %266 = tail call float @llvm.nvvm.fabs.f(float %120) #4, !dbg !25
  %.01.i89 = select i1 %.not.i88, float %266, float %265, !dbg !25
  %267 = fcmp ult float %.01.i89, 0x3FE3333340000000, !dbg !25
  br i1 %267, label %__internal_fmad.exit3.i95, label %__internal_fmad.exit1.i90, !dbg !25

__internal_fmad.exit1.i90:                        ; preds = %__nv_tanhf.exit87
  %268 = fmul float %.01.i89, 0x4007154760000000, !dbg !25
  %269 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %268) #4, !dbg !25
  %270 = fadd float %269, 1.000000e+00, !dbg !25
  %271 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %270) #5, !dbg !25, !srcloc !26
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i91 = icmp eq i32 %272, 0, !dbg !25
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %271, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %271, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i92 = select i1 %.not6.i91, float %274, float %273, !dbg !25
  %275 = fcmp oge float %.01.i89, 0x4022059680000000, !dbg !25
  %s.0.i93 = select i1 %275, float 1.000000e+00, float %.03.i92, !dbg !25
  %276 = bitcast float %s.0.i93 to i32, !dbg !25
  %277 = bitcast float %120 to i32, !dbg !25
  %278 = and i32 %277, -2147483648, !dbg !25
  %279 = or i32 %278, %276, !dbg !25
  %280 = bitcast i32 %279 to float, !dbg !25
  br label %__nv_tanhf.exit106, !dbg !25

__internal_fmad.exit3.i95:                        ; preds = %__nv_tanhf.exit87
  %281 = fmul float %120, %120, !dbg !25
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i96 = icmp eq i32 %282, 0, !dbg !25
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %281, float 0xBFAAC795C0000000) #4, !dbg !25
  %284 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %281, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i97 = select i1 %.not1.i96, float %284, float %283, !dbg !25
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i98 = icmp eq i32 %285, 0, !dbg !25
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i97, float %281, float 0x3FC10B2820000000) #4, !dbg !25
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i97, float %281, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i99 = select i1 %.not2.i98, float %287, float %286, !dbg !25
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i100 = icmp eq i32 %288, 0, !dbg !25
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i99, float %281, float 0xBFD5553DA0000000) #4, !dbg !25
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i99, float %281, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i101 = select i1 %.not3.i100, float %290, float %289, !dbg !25
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i102 = icmp eq i32 %291, 0, !dbg !25
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i101, float %281, float 0.000000e+00) #4, !dbg !25
  %293 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i101, float %281, float 0.000000e+00) #4, !dbg !25
  %.04.i103 = select i1 %.not4.i102, float %293, float %292, !dbg !25
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i104 = icmp eq i32 %294, 0, !dbg !25
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i103, float %120, float %120) #4, !dbg !25
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i103, float %120, float %120) #4, !dbg !25
  %.02.i105 = select i1 %.not5.i104, float %296, float %295, !dbg !25
  br label %__nv_tanhf.exit106, !dbg !25

__nv_tanhf.exit106:                               ; preds = %__internal_fmad.exit1.i90, %__internal_fmad.exit3.i95
  %s.1.i94 = phi float [ %280, %__internal_fmad.exit1.i90 ], [ %.02.i105, %__internal_fmad.exit3.i95 ], !dbg !25
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i107 = icmp eq i32 %297, 0, !dbg !25
  %298 = tail call float @llvm.nvvm.fabs.ftz.f(float %121) #4, !dbg !25
  %299 = tail call float @llvm.nvvm.fabs.f(float %121) #4, !dbg !25
  %.01.i108 = select i1 %.not.i107, float %299, float %298, !dbg !25
  %300 = fcmp ult float %.01.i108, 0x3FE3333340000000, !dbg !25
  br i1 %300, label %__internal_fmad.exit3.i114, label %__internal_fmad.exit1.i109, !dbg !25

__internal_fmad.exit1.i109:                       ; preds = %__nv_tanhf.exit106
  %301 = fmul float %.01.i108, 0x4007154760000000, !dbg !25
  %302 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %301) #4, !dbg !25
  %303 = fadd float %302, 1.000000e+00, !dbg !25
  %304 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %303) #5, !dbg !25, !srcloc !26
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i110 = icmp eq i32 %305, 0, !dbg !25
  %306 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %304, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %307 = tail call float @llvm.nvvm.fma.rn.f(float %304, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i111 = select i1 %.not6.i110, float %307, float %306, !dbg !25
  %308 = fcmp oge float %.01.i108, 0x4022059680000000, !dbg !25
  %s.0.i112 = select i1 %308, float 1.000000e+00, float %.03.i111, !dbg !25
  %309 = bitcast float %s.0.i112 to i32, !dbg !25
  %310 = bitcast float %121 to i32, !dbg !25
  %311 = and i32 %310, -2147483648, !dbg !25
  %312 = or i32 %311, %309, !dbg !25
  %313 = bitcast i32 %312 to float, !dbg !25
  br label %__nv_tanhf.exit125, !dbg !25

__internal_fmad.exit3.i114:                       ; preds = %__nv_tanhf.exit106
  %314 = fmul float %121, %121, !dbg !25
  %315 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i115 = icmp eq i32 %315, 0, !dbg !25
  %316 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %314, float 0xBFAAC795C0000000) #4, !dbg !25
  %317 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %314, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i116 = select i1 %.not1.i115, float %317, float %316, !dbg !25
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i117 = icmp eq i32 %318, 0, !dbg !25
  %319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i116, float %314, float 0x3FC10B2820000000) #4, !dbg !25
  %320 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i116, float %314, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i118 = select i1 %.not2.i117, float %320, float %319, !dbg !25
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i119 = icmp eq i32 %321, 0, !dbg !25
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i118, float %314, float 0xBFD5553DA0000000) #4, !dbg !25
  %323 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i118, float %314, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i120 = select i1 %.not3.i119, float %323, float %322, !dbg !25
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i121 = icmp eq i32 %324, 0, !dbg !25
  %325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i120, float %314, float 0.000000e+00) #4, !dbg !25
  %326 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i120, float %314, float 0.000000e+00) #4, !dbg !25
  %.04.i122 = select i1 %.not4.i121, float %326, float %325, !dbg !25
  %327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i123 = icmp eq i32 %327, 0, !dbg !25
  %328 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i122, float %121, float %121) #4, !dbg !25
  %329 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i122, float %121, float %121) #4, !dbg !25
  %.02.i124 = select i1 %.not5.i123, float %329, float %328, !dbg !25
  br label %__nv_tanhf.exit125, !dbg !25

__nv_tanhf.exit125:                               ; preds = %__internal_fmad.exit1.i109, %__internal_fmad.exit3.i114
  %s.1.i113 = phi float [ %313, %__internal_fmad.exit1.i109 ], [ %.02.i124, %__internal_fmad.exit3.i114 ], !dbg !25
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i126 = icmp eq i32 %330, 0, !dbg !25
  %331 = tail call float @llvm.nvvm.fabs.ftz.f(float %122) #4, !dbg !25
  %332 = tail call float @llvm.nvvm.fabs.f(float %122) #4, !dbg !25
  %.01.i127 = select i1 %.not.i126, float %332, float %331, !dbg !25
  %333 = fcmp ult float %.01.i127, 0x3FE3333340000000, !dbg !25
  br i1 %333, label %__internal_fmad.exit3.i133, label %__internal_fmad.exit1.i128, !dbg !25

__internal_fmad.exit1.i128:                       ; preds = %__nv_tanhf.exit125
  %334 = fmul float %.01.i127, 0x4007154760000000, !dbg !25
  %335 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %334) #4, !dbg !25
  %336 = fadd float %335, 1.000000e+00, !dbg !25
  %337 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %336) #5, !dbg !25, !srcloc !26
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i129 = icmp eq i32 %338, 0, !dbg !25
  %339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %337, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %340 = tail call float @llvm.nvvm.fma.rn.f(float %337, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i130 = select i1 %.not6.i129, float %340, float %339, !dbg !25
  %341 = fcmp oge float %.01.i127, 0x4022059680000000, !dbg !25
  %s.0.i131 = select i1 %341, float 1.000000e+00, float %.03.i130, !dbg !25
  %342 = bitcast float %s.0.i131 to i32, !dbg !25
  %343 = bitcast float %122 to i32, !dbg !25
  %344 = and i32 %343, -2147483648, !dbg !25
  %345 = or i32 %344, %342, !dbg !25
  %346 = bitcast i32 %345 to float, !dbg !25
  br label %__nv_tanhf.exit144, !dbg !25

__internal_fmad.exit3.i133:                       ; preds = %__nv_tanhf.exit125
  %347 = fmul float %122, %122, !dbg !25
  %348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i134 = icmp eq i32 %348, 0, !dbg !25
  %349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %347, float 0xBFAAC795C0000000) #4, !dbg !25
  %350 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %347, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i135 = select i1 %.not1.i134, float %350, float %349, !dbg !25
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i136 = icmp eq i32 %351, 0, !dbg !25
  %352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i135, float %347, float 0x3FC10B2820000000) #4, !dbg !25
  %353 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i135, float %347, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i137 = select i1 %.not2.i136, float %353, float %352, !dbg !25
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i138 = icmp eq i32 %354, 0, !dbg !25
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i137, float %347, float 0xBFD5553DA0000000) #4, !dbg !25
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i137, float %347, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i139 = select i1 %.not3.i138, float %356, float %355, !dbg !25
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i140 = icmp eq i32 %357, 0, !dbg !25
  %358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i139, float %347, float 0.000000e+00) #4, !dbg !25
  %359 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i139, float %347, float 0.000000e+00) #4, !dbg !25
  %.04.i141 = select i1 %.not4.i140, float %359, float %358, !dbg !25
  %360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i142 = icmp eq i32 %360, 0, !dbg !25
  %361 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i141, float %122, float %122) #4, !dbg !25
  %362 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i141, float %122, float %122) #4, !dbg !25
  %.02.i143 = select i1 %.not5.i142, float %362, float %361, !dbg !25
  br label %__nv_tanhf.exit144, !dbg !25

__nv_tanhf.exit144:                               ; preds = %__internal_fmad.exit1.i128, %__internal_fmad.exit3.i133
  %s.1.i132 = phi float [ %346, %__internal_fmad.exit1.i128 ], [ %.02.i143, %__internal_fmad.exit3.i133 ], !dbg !25
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i145 = icmp eq i32 %363, 0, !dbg !25
  %364 = tail call float @llvm.nvvm.fabs.ftz.f(float %123) #4, !dbg !25
  %365 = tail call float @llvm.nvvm.fabs.f(float %123) #4, !dbg !25
  %.01.i146 = select i1 %.not.i145, float %365, float %364, !dbg !25
  %366 = fcmp ult float %.01.i146, 0x3FE3333340000000, !dbg !25
  br i1 %366, label %__internal_fmad.exit3.i152, label %__internal_fmad.exit1.i147, !dbg !25

__internal_fmad.exit1.i147:                       ; preds = %__nv_tanhf.exit144
  %367 = fmul float %.01.i146, 0x4007154760000000, !dbg !25
  %368 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %367) #4, !dbg !25
  %369 = fadd float %368, 1.000000e+00, !dbg !25
  %370 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %369) #5, !dbg !25, !srcloc !26
  %371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i148 = icmp eq i32 %371, 0, !dbg !25
  %372 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %370, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %373 = tail call float @llvm.nvvm.fma.rn.f(float %370, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i149 = select i1 %.not6.i148, float %373, float %372, !dbg !25
  %374 = fcmp oge float %.01.i146, 0x4022059680000000, !dbg !25
  %s.0.i150 = select i1 %374, float 1.000000e+00, float %.03.i149, !dbg !25
  %375 = bitcast float %s.0.i150 to i32, !dbg !25
  %376 = bitcast float %123 to i32, !dbg !25
  %377 = and i32 %376, -2147483648, !dbg !25
  %378 = or i32 %377, %375, !dbg !25
  %379 = bitcast i32 %378 to float, !dbg !25
  br label %__nv_tanhf.exit163, !dbg !25

__internal_fmad.exit3.i152:                       ; preds = %__nv_tanhf.exit144
  %380 = fmul float %123, %123, !dbg !25
  %381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i153 = icmp eq i32 %381, 0, !dbg !25
  %382 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %380, float 0xBFAAC795C0000000) #4, !dbg !25
  %383 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %380, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i154 = select i1 %.not1.i153, float %383, float %382, !dbg !25
  %384 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i155 = icmp eq i32 %384, 0, !dbg !25
  %385 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i154, float %380, float 0x3FC10B2820000000) #4, !dbg !25
  %386 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i154, float %380, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i156 = select i1 %.not2.i155, float %386, float %385, !dbg !25
  %387 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i157 = icmp eq i32 %387, 0, !dbg !25
  %388 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i156, float %380, float 0xBFD5553DA0000000) #4, !dbg !25
  %389 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i156, float %380, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i158 = select i1 %.not3.i157, float %389, float %388, !dbg !25
  %390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i159 = icmp eq i32 %390, 0, !dbg !25
  %391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i158, float %380, float 0.000000e+00) #4, !dbg !25
  %392 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i158, float %380, float 0.000000e+00) #4, !dbg !25
  %.04.i160 = select i1 %.not4.i159, float %392, float %391, !dbg !25
  %393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i161 = icmp eq i32 %393, 0, !dbg !25
  %394 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i160, float %123, float %123) #4, !dbg !25
  %395 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i160, float %123, float %123) #4, !dbg !25
  %.02.i162 = select i1 %.not5.i161, float %395, float %394, !dbg !25
  br label %__nv_tanhf.exit163, !dbg !25

__nv_tanhf.exit163:                               ; preds = %__internal_fmad.exit1.i147, %__internal_fmad.exit3.i152
  %s.1.i151 = phi float [ %379, %__internal_fmad.exit1.i147 ], [ %.02.i162, %__internal_fmad.exit3.i152 ], !dbg !25
  %396 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i164 = icmp eq i32 %396, 0, !dbg !25
  %397 = tail call float @llvm.nvvm.fabs.ftz.f(float %124) #4, !dbg !25
  %398 = tail call float @llvm.nvvm.fabs.f(float %124) #4, !dbg !25
  %.01.i165 = select i1 %.not.i164, float %398, float %397, !dbg !25
  %399 = fcmp ult float %.01.i165, 0x3FE3333340000000, !dbg !25
  br i1 %399, label %__internal_fmad.exit3.i171, label %__internal_fmad.exit1.i166, !dbg !25

__internal_fmad.exit1.i166:                       ; preds = %__nv_tanhf.exit163
  %400 = fmul float %.01.i165, 0x4007154760000000, !dbg !25
  %401 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %400) #4, !dbg !25
  %402 = fadd float %401, 1.000000e+00, !dbg !25
  %403 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %402) #5, !dbg !25, !srcloc !26
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i167 = icmp eq i32 %404, 0, !dbg !25
  %405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %403, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %406 = tail call float @llvm.nvvm.fma.rn.f(float %403, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i168 = select i1 %.not6.i167, float %406, float %405, !dbg !25
  %407 = fcmp oge float %.01.i165, 0x4022059680000000, !dbg !25
  %s.0.i169 = select i1 %407, float 1.000000e+00, float %.03.i168, !dbg !25
  %408 = bitcast float %s.0.i169 to i32, !dbg !25
  %409 = bitcast float %124 to i32, !dbg !25
  %410 = and i32 %409, -2147483648, !dbg !25
  %411 = or i32 %410, %408, !dbg !25
  %412 = bitcast i32 %411 to float, !dbg !25
  br label %__nv_tanhf.exit182, !dbg !25

__internal_fmad.exit3.i171:                       ; preds = %__nv_tanhf.exit163
  %413 = fmul float %124, %124, !dbg !25
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i172 = icmp eq i32 %414, 0, !dbg !25
  %415 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %413, float 0xBFAAC795C0000000) #4, !dbg !25
  %416 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %413, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i173 = select i1 %.not1.i172, float %416, float %415, !dbg !25
  %417 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i174 = icmp eq i32 %417, 0, !dbg !25
  %418 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i173, float %413, float 0x3FC10B2820000000) #4, !dbg !25
  %419 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i173, float %413, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i175 = select i1 %.not2.i174, float %419, float %418, !dbg !25
  %420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i176 = icmp eq i32 %420, 0, !dbg !25
  %421 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i175, float %413, float 0xBFD5553DA0000000) #4, !dbg !25
  %422 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i175, float %413, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i177 = select i1 %.not3.i176, float %422, float %421, !dbg !25
  %423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i178 = icmp eq i32 %423, 0, !dbg !25
  %424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i177, float %413, float 0.000000e+00) #4, !dbg !25
  %425 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i177, float %413, float 0.000000e+00) #4, !dbg !25
  %.04.i179 = select i1 %.not4.i178, float %425, float %424, !dbg !25
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i180 = icmp eq i32 %426, 0, !dbg !25
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i179, float %124, float %124) #4, !dbg !25
  %428 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i179, float %124, float %124) #4, !dbg !25
  %.02.i181 = select i1 %.not5.i180, float %428, float %427, !dbg !25
  br label %__nv_tanhf.exit182, !dbg !25

__nv_tanhf.exit182:                               ; preds = %__internal_fmad.exit1.i166, %__internal_fmad.exit3.i171
  %s.1.i170 = phi float [ %412, %__internal_fmad.exit1.i166 ], [ %.02.i181, %__internal_fmad.exit3.i171 ], !dbg !25
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i183 = icmp eq i32 %429, 0, !dbg !25
  %430 = tail call float @llvm.nvvm.fabs.ftz.f(float %125) #4, !dbg !25
  %431 = tail call float @llvm.nvvm.fabs.f(float %125) #4, !dbg !25
  %.01.i184 = select i1 %.not.i183, float %431, float %430, !dbg !25
  %432 = fcmp ult float %.01.i184, 0x3FE3333340000000, !dbg !25
  br i1 %432, label %__internal_fmad.exit3.i190, label %__internal_fmad.exit1.i185, !dbg !25

__internal_fmad.exit1.i185:                       ; preds = %__nv_tanhf.exit182
  %433 = fmul float %.01.i184, 0x4007154760000000, !dbg !25
  %434 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %433) #4, !dbg !25
  %435 = fadd float %434, 1.000000e+00, !dbg !25
  %436 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %435) #5, !dbg !25, !srcloc !26
  %437 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i186 = icmp eq i32 %437, 0, !dbg !25
  %438 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %436, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %439 = tail call float @llvm.nvvm.fma.rn.f(float %436, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i187 = select i1 %.not6.i186, float %439, float %438, !dbg !25
  %440 = fcmp oge float %.01.i184, 0x4022059680000000, !dbg !25
  %s.0.i188 = select i1 %440, float 1.000000e+00, float %.03.i187, !dbg !25
  %441 = bitcast float %s.0.i188 to i32, !dbg !25
  %442 = bitcast float %125 to i32, !dbg !25
  %443 = and i32 %442, -2147483648, !dbg !25
  %444 = or i32 %443, %441, !dbg !25
  %445 = bitcast i32 %444 to float, !dbg !25
  br label %__nv_tanhf.exit201, !dbg !25

__internal_fmad.exit3.i190:                       ; preds = %__nv_tanhf.exit182
  %446 = fmul float %125, %125, !dbg !25
  %447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i191 = icmp eq i32 %447, 0, !dbg !25
  %448 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %446, float 0xBFAAC795C0000000) #4, !dbg !25
  %449 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %446, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i192 = select i1 %.not1.i191, float %449, float %448, !dbg !25
  %450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i193 = icmp eq i32 %450, 0, !dbg !25
  %451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i192, float %446, float 0x3FC10B2820000000) #4, !dbg !25
  %452 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i192, float %446, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i194 = select i1 %.not2.i193, float %452, float %451, !dbg !25
  %453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i195 = icmp eq i32 %453, 0, !dbg !25
  %454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i194, float %446, float 0xBFD5553DA0000000) #4, !dbg !25
  %455 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i194, float %446, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i196 = select i1 %.not3.i195, float %455, float %454, !dbg !25
  %456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i197 = icmp eq i32 %456, 0, !dbg !25
  %457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i196, float %446, float 0.000000e+00) #4, !dbg !25
  %458 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i196, float %446, float 0.000000e+00) #4, !dbg !25
  %.04.i198 = select i1 %.not4.i197, float %458, float %457, !dbg !25
  %459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i199 = icmp eq i32 %459, 0, !dbg !25
  %460 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i198, float %125, float %125) #4, !dbg !25
  %461 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i198, float %125, float %125) #4, !dbg !25
  %.02.i200 = select i1 %.not5.i199, float %461, float %460, !dbg !25
  br label %__nv_tanhf.exit201, !dbg !25

__nv_tanhf.exit201:                               ; preds = %__internal_fmad.exit1.i185, %__internal_fmad.exit3.i190
  %s.1.i189 = phi float [ %445, %__internal_fmad.exit1.i185 ], [ %.02.i200, %__internal_fmad.exit3.i190 ], !dbg !25
  %462 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i202 = icmp eq i32 %462, 0, !dbg !25
  %463 = tail call float @llvm.nvvm.fabs.ftz.f(float %126) #4, !dbg !25
  %464 = tail call float @llvm.nvvm.fabs.f(float %126) #4, !dbg !25
  %.01.i203 = select i1 %.not.i202, float %464, float %463, !dbg !25
  %465 = fcmp ult float %.01.i203, 0x3FE3333340000000, !dbg !25
  br i1 %465, label %__internal_fmad.exit3.i209, label %__internal_fmad.exit1.i204, !dbg !25

__internal_fmad.exit1.i204:                       ; preds = %__nv_tanhf.exit201
  %466 = fmul float %.01.i203, 0x4007154760000000, !dbg !25
  %467 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %466) #4, !dbg !25
  %468 = fadd float %467, 1.000000e+00, !dbg !25
  %469 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %468) #5, !dbg !25, !srcloc !26
  %470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i205 = icmp eq i32 %470, 0, !dbg !25
  %471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %469, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %472 = tail call float @llvm.nvvm.fma.rn.f(float %469, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i206 = select i1 %.not6.i205, float %472, float %471, !dbg !25
  %473 = fcmp oge float %.01.i203, 0x4022059680000000, !dbg !25
  %s.0.i207 = select i1 %473, float 1.000000e+00, float %.03.i206, !dbg !25
  %474 = bitcast float %s.0.i207 to i32, !dbg !25
  %475 = bitcast float %126 to i32, !dbg !25
  %476 = and i32 %475, -2147483648, !dbg !25
  %477 = or i32 %476, %474, !dbg !25
  %478 = bitcast i32 %477 to float, !dbg !25
  br label %__nv_tanhf.exit220, !dbg !25

__internal_fmad.exit3.i209:                       ; preds = %__nv_tanhf.exit201
  %479 = fmul float %126, %126, !dbg !25
  %480 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i210 = icmp eq i32 %480, 0, !dbg !25
  %481 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %479, float 0xBFAAC795C0000000) #4, !dbg !25
  %482 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %479, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i211 = select i1 %.not1.i210, float %482, float %481, !dbg !25
  %483 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i212 = icmp eq i32 %483, 0, !dbg !25
  %484 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i211, float %479, float 0x3FC10B2820000000) #4, !dbg !25
  %485 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i211, float %479, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i213 = select i1 %.not2.i212, float %485, float %484, !dbg !25
  %486 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i214 = icmp eq i32 %486, 0, !dbg !25
  %487 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i213, float %479, float 0xBFD5553DA0000000) #4, !dbg !25
  %488 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i213, float %479, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i215 = select i1 %.not3.i214, float %488, float %487, !dbg !25
  %489 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i216 = icmp eq i32 %489, 0, !dbg !25
  %490 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i215, float %479, float 0.000000e+00) #4, !dbg !25
  %491 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i215, float %479, float 0.000000e+00) #4, !dbg !25
  %.04.i217 = select i1 %.not4.i216, float %491, float %490, !dbg !25
  %492 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i218 = icmp eq i32 %492, 0, !dbg !25
  %493 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i217, float %126, float %126) #4, !dbg !25
  %494 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i217, float %126, float %126) #4, !dbg !25
  %.02.i219 = select i1 %.not5.i218, float %494, float %493, !dbg !25
  br label %__nv_tanhf.exit220, !dbg !25

__nv_tanhf.exit220:                               ; preds = %__internal_fmad.exit1.i204, %__internal_fmad.exit3.i209
  %s.1.i208 = phi float [ %478, %__internal_fmad.exit1.i204 ], [ %.02.i219, %__internal_fmad.exit3.i209 ], !dbg !25
  %495 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i221 = icmp eq i32 %495, 0, !dbg !25
  %496 = tail call float @llvm.nvvm.fabs.ftz.f(float %127) #4, !dbg !25
  %497 = tail call float @llvm.nvvm.fabs.f(float %127) #4, !dbg !25
  %.01.i222 = select i1 %.not.i221, float %497, float %496, !dbg !25
  %498 = fcmp ult float %.01.i222, 0x3FE3333340000000, !dbg !25
  br i1 %498, label %__internal_fmad.exit3.i228, label %__internal_fmad.exit1.i223, !dbg !25

__internal_fmad.exit1.i223:                       ; preds = %__nv_tanhf.exit220
  %499 = fmul float %.01.i222, 0x4007154760000000, !dbg !25
  %500 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %499) #4, !dbg !25
  %501 = fadd float %500, 1.000000e+00, !dbg !25
  %502 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %501) #5, !dbg !25, !srcloc !26
  %503 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i224 = icmp eq i32 %503, 0, !dbg !25
  %504 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %502, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %505 = tail call float @llvm.nvvm.fma.rn.f(float %502, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i225 = select i1 %.not6.i224, float %505, float %504, !dbg !25
  %506 = fcmp oge float %.01.i222, 0x4022059680000000, !dbg !25
  %s.0.i226 = select i1 %506, float 1.000000e+00, float %.03.i225, !dbg !25
  %507 = bitcast float %s.0.i226 to i32, !dbg !25
  %508 = bitcast float %127 to i32, !dbg !25
  %509 = and i32 %508, -2147483648, !dbg !25
  %510 = or i32 %509, %507, !dbg !25
  %511 = bitcast i32 %510 to float, !dbg !25
  br label %__nv_tanhf.exit239, !dbg !25

__internal_fmad.exit3.i228:                       ; preds = %__nv_tanhf.exit220
  %512 = fmul float %127, %127, !dbg !25
  %513 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i229 = icmp eq i32 %513, 0, !dbg !25
  %514 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %512, float 0xBFAAC795C0000000) #4, !dbg !25
  %515 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %512, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i230 = select i1 %.not1.i229, float %515, float %514, !dbg !25
  %516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i231 = icmp eq i32 %516, 0, !dbg !25
  %517 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i230, float %512, float 0x3FC10B2820000000) #4, !dbg !25
  %518 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i230, float %512, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i232 = select i1 %.not2.i231, float %518, float %517, !dbg !25
  %519 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i233 = icmp eq i32 %519, 0, !dbg !25
  %520 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i232, float %512, float 0xBFD5553DA0000000) #4, !dbg !25
  %521 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i232, float %512, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i234 = select i1 %.not3.i233, float %521, float %520, !dbg !25
  %522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i235 = icmp eq i32 %522, 0, !dbg !25
  %523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i234, float %512, float 0.000000e+00) #4, !dbg !25
  %524 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i234, float %512, float 0.000000e+00) #4, !dbg !25
  %.04.i236 = select i1 %.not4.i235, float %524, float %523, !dbg !25
  %525 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i237 = icmp eq i32 %525, 0, !dbg !25
  %526 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i236, float %127, float %127) #4, !dbg !25
  %527 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i236, float %127, float %127) #4, !dbg !25
  %.02.i238 = select i1 %.not5.i237, float %527, float %526, !dbg !25
  br label %__nv_tanhf.exit239, !dbg !25

__nv_tanhf.exit239:                               ; preds = %__internal_fmad.exit1.i223, %__internal_fmad.exit3.i228
  %s.1.i227 = phi float [ %511, %__internal_fmad.exit1.i223 ], [ %.02.i238, %__internal_fmad.exit3.i228 ], !dbg !25
  %528 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i240 = icmp eq i32 %528, 0, !dbg !25
  %529 = tail call float @llvm.nvvm.fabs.ftz.f(float %128) #4, !dbg !25
  %530 = tail call float @llvm.nvvm.fabs.f(float %128) #4, !dbg !25
  %.01.i241 = select i1 %.not.i240, float %530, float %529, !dbg !25
  %531 = fcmp ult float %.01.i241, 0x3FE3333340000000, !dbg !25
  br i1 %531, label %__internal_fmad.exit3.i247, label %__internal_fmad.exit1.i242, !dbg !25

__internal_fmad.exit1.i242:                       ; preds = %__nv_tanhf.exit239
  %532 = fmul float %.01.i241, 0x4007154760000000, !dbg !25
  %533 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %532) #4, !dbg !25
  %534 = fadd float %533, 1.000000e+00, !dbg !25
  %535 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %534) #5, !dbg !25, !srcloc !26
  %536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i243 = icmp eq i32 %536, 0, !dbg !25
  %537 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %535, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %538 = tail call float @llvm.nvvm.fma.rn.f(float %535, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i244 = select i1 %.not6.i243, float %538, float %537, !dbg !25
  %539 = fcmp oge float %.01.i241, 0x4022059680000000, !dbg !25
  %s.0.i245 = select i1 %539, float 1.000000e+00, float %.03.i244, !dbg !25
  %540 = bitcast float %s.0.i245 to i32, !dbg !25
  %541 = bitcast float %128 to i32, !dbg !25
  %542 = and i32 %541, -2147483648, !dbg !25
  %543 = or i32 %542, %540, !dbg !25
  %544 = bitcast i32 %543 to float, !dbg !25
  br label %__nv_tanhf.exit258, !dbg !25

__internal_fmad.exit3.i247:                       ; preds = %__nv_tanhf.exit239
  %545 = fmul float %128, %128, !dbg !25
  %546 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i248 = icmp eq i32 %546, 0, !dbg !25
  %547 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %545, float 0xBFAAC795C0000000) #4, !dbg !25
  %548 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %545, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i249 = select i1 %.not1.i248, float %548, float %547, !dbg !25
  %549 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i250 = icmp eq i32 %549, 0, !dbg !25
  %550 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i249, float %545, float 0x3FC10B2820000000) #4, !dbg !25
  %551 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i249, float %545, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i251 = select i1 %.not2.i250, float %551, float %550, !dbg !25
  %552 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i252 = icmp eq i32 %552, 0, !dbg !25
  %553 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i251, float %545, float 0xBFD5553DA0000000) #4, !dbg !25
  %554 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i251, float %545, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i253 = select i1 %.not3.i252, float %554, float %553, !dbg !25
  %555 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i254 = icmp eq i32 %555, 0, !dbg !25
  %556 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i253, float %545, float 0.000000e+00) #4, !dbg !25
  %557 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i253, float %545, float 0.000000e+00) #4, !dbg !25
  %.04.i255 = select i1 %.not4.i254, float %557, float %556, !dbg !25
  %558 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i256 = icmp eq i32 %558, 0, !dbg !25
  %559 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i255, float %128, float %128) #4, !dbg !25
  %560 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i255, float %128, float %128) #4, !dbg !25
  %.02.i257 = select i1 %.not5.i256, float %560, float %559, !dbg !25
  br label %__nv_tanhf.exit258, !dbg !25

__nv_tanhf.exit258:                               ; preds = %__internal_fmad.exit1.i242, %__internal_fmad.exit3.i247
  %s.1.i246 = phi float [ %544, %__internal_fmad.exit1.i242 ], [ %.02.i257, %__internal_fmad.exit3.i247 ], !dbg !25
  %561 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i259 = icmp eq i32 %561, 0, !dbg !25
  %562 = tail call float @llvm.nvvm.fabs.ftz.f(float %129) #4, !dbg !25
  %563 = tail call float @llvm.nvvm.fabs.f(float %129) #4, !dbg !25
  %.01.i260 = select i1 %.not.i259, float %563, float %562, !dbg !25
  %564 = fcmp ult float %.01.i260, 0x3FE3333340000000, !dbg !25
  br i1 %564, label %__internal_fmad.exit3.i266, label %__internal_fmad.exit1.i261, !dbg !25

__internal_fmad.exit1.i261:                       ; preds = %__nv_tanhf.exit258
  %565 = fmul float %.01.i260, 0x4007154760000000, !dbg !25
  %566 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %565) #4, !dbg !25
  %567 = fadd float %566, 1.000000e+00, !dbg !25
  %568 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %567) #5, !dbg !25, !srcloc !26
  %569 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i262 = icmp eq i32 %569, 0, !dbg !25
  %570 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %568, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %571 = tail call float @llvm.nvvm.fma.rn.f(float %568, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i263 = select i1 %.not6.i262, float %571, float %570, !dbg !25
  %572 = fcmp oge float %.01.i260, 0x4022059680000000, !dbg !25
  %s.0.i264 = select i1 %572, float 1.000000e+00, float %.03.i263, !dbg !25
  %573 = bitcast float %s.0.i264 to i32, !dbg !25
  %574 = bitcast float %129 to i32, !dbg !25
  %575 = and i32 %574, -2147483648, !dbg !25
  %576 = or i32 %575, %573, !dbg !25
  %577 = bitcast i32 %576 to float, !dbg !25
  br label %__nv_tanhf.exit277, !dbg !25

__internal_fmad.exit3.i266:                       ; preds = %__nv_tanhf.exit258
  %578 = fmul float %129, %129, !dbg !25
  %579 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i267 = icmp eq i32 %579, 0, !dbg !25
  %580 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %578, float 0xBFAAC795C0000000) #4, !dbg !25
  %581 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %578, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i268 = select i1 %.not1.i267, float %581, float %580, !dbg !25
  %582 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i269 = icmp eq i32 %582, 0, !dbg !25
  %583 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i268, float %578, float 0x3FC10B2820000000) #4, !dbg !25
  %584 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i268, float %578, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i270 = select i1 %.not2.i269, float %584, float %583, !dbg !25
  %585 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i271 = icmp eq i32 %585, 0, !dbg !25
  %586 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i270, float %578, float 0xBFD5553DA0000000) #4, !dbg !25
  %587 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i270, float %578, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i272 = select i1 %.not3.i271, float %587, float %586, !dbg !25
  %588 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i273 = icmp eq i32 %588, 0, !dbg !25
  %589 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i272, float %578, float 0.000000e+00) #4, !dbg !25
  %590 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i272, float %578, float 0.000000e+00) #4, !dbg !25
  %.04.i274 = select i1 %.not4.i273, float %590, float %589, !dbg !25
  %591 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i275 = icmp eq i32 %591, 0, !dbg !25
  %592 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i274, float %129, float %129) #4, !dbg !25
  %593 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i274, float %129, float %129) #4, !dbg !25
  %.02.i276 = select i1 %.not5.i275, float %593, float %592, !dbg !25
  br label %__nv_tanhf.exit277, !dbg !25

__nv_tanhf.exit277:                               ; preds = %__internal_fmad.exit1.i261, %__internal_fmad.exit3.i266
  %s.1.i265 = phi float [ %577, %__internal_fmad.exit1.i261 ], [ %.02.i276, %__internal_fmad.exit3.i266 ], !dbg !25
  %594 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i278 = icmp eq i32 %594, 0, !dbg !25
  %595 = tail call float @llvm.nvvm.fabs.ftz.f(float %130) #4, !dbg !25
  %596 = tail call float @llvm.nvvm.fabs.f(float %130) #4, !dbg !25
  %.01.i279 = select i1 %.not.i278, float %596, float %595, !dbg !25
  %597 = fcmp ult float %.01.i279, 0x3FE3333340000000, !dbg !25
  br i1 %597, label %__internal_fmad.exit3.i285, label %__internal_fmad.exit1.i280, !dbg !25

__internal_fmad.exit1.i280:                       ; preds = %__nv_tanhf.exit277
  %598 = fmul float %.01.i279, 0x4007154760000000, !dbg !25
  %599 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %598) #4, !dbg !25
  %600 = fadd float %599, 1.000000e+00, !dbg !25
  %601 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %600) #5, !dbg !25, !srcloc !26
  %602 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i281 = icmp eq i32 %602, 0, !dbg !25
  %603 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %601, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %604 = tail call float @llvm.nvvm.fma.rn.f(float %601, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i282 = select i1 %.not6.i281, float %604, float %603, !dbg !25
  %605 = fcmp oge float %.01.i279, 0x4022059680000000, !dbg !25
  %s.0.i283 = select i1 %605, float 1.000000e+00, float %.03.i282, !dbg !25
  %606 = bitcast float %s.0.i283 to i32, !dbg !25
  %607 = bitcast float %130 to i32, !dbg !25
  %608 = and i32 %607, -2147483648, !dbg !25
  %609 = or i32 %608, %606, !dbg !25
  %610 = bitcast i32 %609 to float, !dbg !25
  br label %__nv_tanhf.exit296, !dbg !25

__internal_fmad.exit3.i285:                       ; preds = %__nv_tanhf.exit277
  %611 = fmul float %130, %130, !dbg !25
  %612 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i286 = icmp eq i32 %612, 0, !dbg !25
  %613 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %611, float 0xBFAAC795C0000000) #4, !dbg !25
  %614 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %611, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i287 = select i1 %.not1.i286, float %614, float %613, !dbg !25
  %615 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i288 = icmp eq i32 %615, 0, !dbg !25
  %616 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i287, float %611, float 0x3FC10B2820000000) #4, !dbg !25
  %617 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i287, float %611, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i289 = select i1 %.not2.i288, float %617, float %616, !dbg !25
  %618 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i290 = icmp eq i32 %618, 0, !dbg !25
  %619 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i289, float %611, float 0xBFD5553DA0000000) #4, !dbg !25
  %620 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i289, float %611, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i291 = select i1 %.not3.i290, float %620, float %619, !dbg !25
  %621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i292 = icmp eq i32 %621, 0, !dbg !25
  %622 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i291, float %611, float 0.000000e+00) #4, !dbg !25
  %623 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i291, float %611, float 0.000000e+00) #4, !dbg !25
  %.04.i293 = select i1 %.not4.i292, float %623, float %622, !dbg !25
  %624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i294 = icmp eq i32 %624, 0, !dbg !25
  %625 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i293, float %130, float %130) #4, !dbg !25
  %626 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i293, float %130, float %130) #4, !dbg !25
  %.02.i295 = select i1 %.not5.i294, float %626, float %625, !dbg !25
  br label %__nv_tanhf.exit296, !dbg !25

__nv_tanhf.exit296:                               ; preds = %__internal_fmad.exit1.i280, %__internal_fmad.exit3.i285
  %s.1.i284 = phi float [ %610, %__internal_fmad.exit1.i280 ], [ %.02.i295, %__internal_fmad.exit3.i285 ], !dbg !25
  %627 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i297 = icmp eq i32 %627, 0, !dbg !25
  %628 = tail call float @llvm.nvvm.fabs.ftz.f(float %131) #4, !dbg !25
  %629 = tail call float @llvm.nvvm.fabs.f(float %131) #4, !dbg !25
  %.01.i298 = select i1 %.not.i297, float %629, float %628, !dbg !25
  %630 = fcmp ult float %.01.i298, 0x3FE3333340000000, !dbg !25
  br i1 %630, label %__internal_fmad.exit3.i304, label %__internal_fmad.exit1.i299, !dbg !25

__internal_fmad.exit1.i299:                       ; preds = %__nv_tanhf.exit296
  %631 = fmul float %.01.i298, 0x4007154760000000, !dbg !25
  %632 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %631) #4, !dbg !25
  %633 = fadd float %632, 1.000000e+00, !dbg !25
  %634 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %633) #5, !dbg !25, !srcloc !26
  %635 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i300 = icmp eq i32 %635, 0, !dbg !25
  %636 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %634, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %637 = tail call float @llvm.nvvm.fma.rn.f(float %634, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i301 = select i1 %.not6.i300, float %637, float %636, !dbg !25
  %638 = fcmp oge float %.01.i298, 0x4022059680000000, !dbg !25
  %s.0.i302 = select i1 %638, float 1.000000e+00, float %.03.i301, !dbg !25
  %639 = bitcast float %s.0.i302 to i32, !dbg !25
  %640 = bitcast float %131 to i32, !dbg !25
  %641 = and i32 %640, -2147483648, !dbg !25
  %642 = or i32 %641, %639, !dbg !25
  %643 = bitcast i32 %642 to float, !dbg !25
  br label %__nv_tanhf.exit315, !dbg !25

__internal_fmad.exit3.i304:                       ; preds = %__nv_tanhf.exit296
  %644 = fmul float %131, %131, !dbg !25
  %645 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i305 = icmp eq i32 %645, 0, !dbg !25
  %646 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %644, float 0xBFAAC795C0000000) #4, !dbg !25
  %647 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %644, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i306 = select i1 %.not1.i305, float %647, float %646, !dbg !25
  %648 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i307 = icmp eq i32 %648, 0, !dbg !25
  %649 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i306, float %644, float 0x3FC10B2820000000) #4, !dbg !25
  %650 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i306, float %644, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i308 = select i1 %.not2.i307, float %650, float %649, !dbg !25
  %651 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i309 = icmp eq i32 %651, 0, !dbg !25
  %652 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i308, float %644, float 0xBFD5553DA0000000) #4, !dbg !25
  %653 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i308, float %644, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i310 = select i1 %.not3.i309, float %653, float %652, !dbg !25
  %654 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i311 = icmp eq i32 %654, 0, !dbg !25
  %655 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i310, float %644, float 0.000000e+00) #4, !dbg !25
  %656 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i310, float %644, float 0.000000e+00) #4, !dbg !25
  %.04.i312 = select i1 %.not4.i311, float %656, float %655, !dbg !25
  %657 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i313 = icmp eq i32 %657, 0, !dbg !25
  %658 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i312, float %131, float %131) #4, !dbg !25
  %659 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i312, float %131, float %131) #4, !dbg !25
  %.02.i314 = select i1 %.not5.i313, float %659, float %658, !dbg !25
  br label %__nv_tanhf.exit315, !dbg !25

__nv_tanhf.exit315:                               ; preds = %__internal_fmad.exit1.i299, %__internal_fmad.exit3.i304
  %s.1.i303 = phi float [ %643, %__internal_fmad.exit1.i299 ], [ %.02.i314, %__internal_fmad.exit3.i304 ], !dbg !25
  %660 = or disjoint i32 %7, %15, !dbg !13
  %.frozen = freeze i32 %660, !dbg !27
  %661 = sdiv i32 %.frozen, 256, !dbg !27
  %662 = mul i32 %661, 256, !dbg !28
  %.decomposed = sub i32 %.frozen, %662, !dbg !28
  %663 = or disjoint i32 %21, %13, !dbg !16
  %664 = icmp slt i32 %663, 256, !dbg !17
  %665 = or disjoint i32 %21, %12, !dbg !16
  %666 = icmp slt i32 %665, 256, !dbg !17
  %667 = or disjoint i32 %21, %11, !dbg !16
  %668 = icmp slt i32 %667, 256, !dbg !17
  %669 = or disjoint i32 %21, %10, !dbg !16
  %670 = icmp slt i32 %669, 256, !dbg !17
  %671 = shl i32 %669, 8, !dbg !29
  %672 = shl i32 %667, 8, !dbg !29
  %673 = shl i32 %665, 8, !dbg !29
  %674 = shl i32 %663, 8, !dbg !29
  %675 = shl i32 %661, 16, !dbg !30
  %676 = add i32 %675, %.decomposed, !dbg !31
  %677 = add i32 %676, %671, !dbg !32
  %678 = add i32 %676, %672, !dbg !32
  %679 = add i32 %676, %673, !dbg !32
  %680 = add i32 %676, %674, !dbg !32
  %681 = sext i32 %677 to i64, !dbg !33
  %682 = getelementptr float, ptr addrspace(1) %2, i64 %681, !dbg !33
  %683 = sext i32 %678 to i64, !dbg !33
  %684 = getelementptr float, ptr addrspace(1) %2, i64 %683, !dbg !33
  %685 = sext i32 %679 to i64, !dbg !33
  %686 = getelementptr float, ptr addrspace(1) %2, i64 %685, !dbg !33
  %687 = sext i32 %680 to i64, !dbg !33
  %688 = getelementptr float, ptr addrspace(1) %2, i64 %687, !dbg !33
  %689 = shl i32 %8, 8, !dbg !34
  %690 = and i32 %689, 3840, !dbg !34
  %691 = or disjoint i32 %690, %10, !dbg !34
  %692 = and i32 %14, 1020, !dbg !34
  %693 = lshr exact i32 %690, 2, !dbg !34
  %694 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %693, !dbg !34
  %695 = getelementptr float, ptr addrspace(3) %694, i32 %691, !dbg !34
  %696 = bitcast float %s.1.i to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %695, <1 x i32> %696, i1 true) #4, !dbg !34
  %697 = or disjoint i32 %691, 64, !dbg !34
  %698 = lshr i32 %697, 4, !dbg !34
  %699 = getelementptr float, ptr addrspace(3) @global_smem, i32 %698, !dbg !34
  %700 = getelementptr float, ptr addrspace(3) %699, i32 %697, !dbg !34
  %701 = bitcast float %s.1.i37 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %700, <1 x i32> %701, i1 true) #4, !dbg !34
  %702 = or disjoint i32 %691, 128, !dbg !34
  %703 = lshr i32 %702, 4, !dbg !34
  %704 = getelementptr float, ptr addrspace(3) @global_smem, i32 %703, !dbg !34
  %705 = getelementptr float, ptr addrspace(3) %704, i32 %702, !dbg !34
  %706 = bitcast float %s.1.i56 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %705, <1 x i32> %706, i1 true) #4, !dbg !34
  %707 = or disjoint i32 %691, 192, !dbg !34
  %708 = lshr i32 %707, 4, !dbg !34
  %709 = getelementptr float, ptr addrspace(3) @global_smem, i32 %708, !dbg !34
  %710 = getelementptr float, ptr addrspace(3) %709, i32 %707, !dbg !34
  %711 = bitcast float %s.1.i75 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %710, <1 x i32> %711, i1 true) #4, !dbg !34
  %712 = or disjoint i32 %691, 16, !dbg !34
  %713 = getelementptr float, ptr addrspace(3) %694, i32 %712, !dbg !34
  %714 = bitcast float %s.1.i94 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %713, <1 x i32> %714, i1 true) #4, !dbg !34
  %715 = or disjoint i32 %691, 80, !dbg !34
  %716 = lshr i32 %715, 4, !dbg !34
  %717 = and i32 %716, 244, !dbg !34
  %718 = getelementptr float, ptr addrspace(3) @global_smem, i32 %717, !dbg !34
  %719 = getelementptr float, ptr addrspace(3) %718, i32 %715, !dbg !34
  %720 = bitcast float %s.1.i113 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %719, <1 x i32> %720, i1 true) #4, !dbg !34
  %721 = or disjoint i32 %691, 144, !dbg !34
  %722 = lshr i32 %721, 4, !dbg !34
  %723 = and i32 %722, 248, !dbg !34
  %724 = getelementptr float, ptr addrspace(3) @global_smem, i32 %723, !dbg !34
  %725 = getelementptr float, ptr addrspace(3) %724, i32 %721, !dbg !34
  %726 = bitcast float %s.1.i132 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %725, <1 x i32> %726, i1 true) #4, !dbg !34
  %727 = or disjoint i32 %691, 208, !dbg !34
  %728 = lshr i32 %727, 4, !dbg !34
  %729 = and i32 %728, 252, !dbg !34
  %730 = getelementptr float, ptr addrspace(3) @global_smem, i32 %729, !dbg !34
  %731 = getelementptr float, ptr addrspace(3) %730, i32 %727, !dbg !34
  %732 = bitcast float %s.1.i151 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %731, <1 x i32> %732, i1 true) #4, !dbg !34
  %733 = or disjoint i32 %691, 32, !dbg !34
  %734 = getelementptr float, ptr addrspace(3) %694, i32 %733, !dbg !34
  %735 = bitcast float %s.1.i170 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %734, <1 x i32> %735, i1 true) #4, !dbg !34
  %736 = or disjoint i32 %691, 96, !dbg !34
  %737 = lshr i32 %736, 4, !dbg !34
  %738 = and i32 %737, 244, !dbg !34
  %739 = getelementptr float, ptr addrspace(3) @global_smem, i32 %738, !dbg !34
  %740 = getelementptr float, ptr addrspace(3) %739, i32 %736, !dbg !34
  %741 = bitcast float %s.1.i189 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %740, <1 x i32> %741, i1 true) #4, !dbg !34
  %742 = or disjoint i32 %691, 160, !dbg !34
  %743 = lshr i32 %742, 4, !dbg !34
  %744 = and i32 %743, 248, !dbg !34
  %745 = getelementptr float, ptr addrspace(3) @global_smem, i32 %744, !dbg !34
  %746 = getelementptr float, ptr addrspace(3) %745, i32 %742, !dbg !34
  %747 = bitcast float %s.1.i208 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %746, <1 x i32> %747, i1 true) #4, !dbg !34
  %748 = or disjoint i32 %691, 224, !dbg !34
  %749 = lshr i32 %748, 4, !dbg !34
  %750 = and i32 %749, 252, !dbg !34
  %751 = getelementptr float, ptr addrspace(3) @global_smem, i32 %750, !dbg !34
  %752 = getelementptr float, ptr addrspace(3) %751, i32 %748, !dbg !34
  %753 = bitcast float %s.1.i227 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %752, <1 x i32> %753, i1 true) #4, !dbg !34
  %754 = or disjoint i32 %691, 48, !dbg !34
  %755 = getelementptr float, ptr addrspace(3) %694, i32 %754, !dbg !34
  %756 = bitcast float %s.1.i246 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %755, <1 x i32> %756, i1 true) #4, !dbg !34
  %757 = or disjoint i32 %691, 112, !dbg !34
  %758 = lshr i32 %757, 4, !dbg !34
  %759 = and i32 %758, 244, !dbg !34
  %760 = getelementptr float, ptr addrspace(3) @global_smem, i32 %759, !dbg !34
  %761 = getelementptr float, ptr addrspace(3) %760, i32 %757, !dbg !34
  %762 = bitcast float %s.1.i265 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %761, <1 x i32> %762, i1 true) #4, !dbg !34
  %763 = or disjoint i32 %691, 176, !dbg !34
  %764 = lshr i32 %763, 4, !dbg !34
  %765 = and i32 %764, 248, !dbg !34
  %766 = getelementptr float, ptr addrspace(3) @global_smem, i32 %765, !dbg !34
  %767 = getelementptr float, ptr addrspace(3) %766, i32 %763, !dbg !34
  %768 = bitcast float %s.1.i284 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %767, <1 x i32> %768, i1 true) #4, !dbg !34
  %769 = or disjoint i32 %691, 240, !dbg !34
  %770 = lshr i32 %769, 4, !dbg !34
  %771 = and i32 %770, 252, !dbg !34
  %772 = getelementptr float, ptr addrspace(3) @global_smem, i32 %771, !dbg !34
  %773 = getelementptr float, ptr addrspace(3) %772, i32 %769, !dbg !34
  %774 = bitcast float %s.1.i303 to <1 x i32>, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %773, <1 x i32> %774, i1 true) #4, !dbg !34
  tail call void @llvm.nvvm.barrier0(), !dbg !34
  %775 = lshr i32 %14, 4, !dbg !34
  %776 = and i32 %775, 60, !dbg !34
  %777 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %776, !dbg !34
  %778 = getelementptr inbounds float, ptr addrspace(3) %777, i32 %692, !dbg !34
  %779 = or disjoint i32 %692, 1024, !dbg !34
  %780 = lshr i32 %779, 4, !dbg !34
  %781 = and i32 %780, 124, !dbg !34
  %782 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %781, !dbg !34
  %783 = getelementptr inbounds float, ptr addrspace(3) %782, i32 %779, !dbg !34
  %784 = load <4 x i32>, ptr addrspace(3) %783, align 16, !dbg !34
  %785 = or disjoint i32 %692, 2048, !dbg !34
  %786 = lshr i32 %785, 4, !dbg !34
  %787 = and i32 %786, 188, !dbg !34
  %788 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %787, !dbg !34
  %789 = getelementptr inbounds float, ptr addrspace(3) %788, i32 %785, !dbg !34
  %790 = load <4 x i32>, ptr addrspace(3) %789, align 16, !dbg !34
  %791 = or disjoint i32 %692, 3072, !dbg !34
  %792 = lshr i32 %791, 4, !dbg !34
  %793 = and i32 %792, 252, !dbg !34
  %794 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %793, !dbg !34
  %795 = getelementptr inbounds float, ptr addrspace(3) %794, i32 %791, !dbg !34
  %796 = load <4 x i32>, ptr addrspace(3) %795, align 16, !dbg !34
  %.extract = load i32, ptr addrspace(3) %778, align 16, !dbg !34
  %797 = getelementptr inbounds i8, ptr addrspace(3) %778, i32 4, !dbg !34
  %.extract16 = load i32, ptr addrspace(3) %797, align 4, !dbg !34
  %798 = getelementptr inbounds i8, ptr addrspace(3) %778, i32 8, !dbg !34
  %.extract17 = load i32, ptr addrspace(3) %798, align 8, !dbg !34
  %799 = getelementptr inbounds i8, ptr addrspace(3) %778, i32 12, !dbg !34
  %.extract18 = load i32, ptr addrspace(3) %799, align 4, !dbg !34
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract16, i32 %.extract17, i32 %.extract18, ptr addrspace(1) %682, i1 %670) #4, !dbg !34
  %.extract19 = extractelement <4 x i32> %784, i64 0, !dbg !34
  %.extract20 = extractelement <4 x i32> %784, i64 1, !dbg !34
  %.extract21 = extractelement <4 x i32> %784, i64 2, !dbg !34
  %.extract22 = extractelement <4 x i32> %784, i64 3, !dbg !34
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract19, i32 %.extract20, i32 %.extract21, i32 %.extract22, ptr addrspace(1) %684, i1 %668) #4, !dbg !34
  %.extract23 = extractelement <4 x i32> %790, i64 0, !dbg !34
  %.extract24 = extractelement <4 x i32> %790, i64 1, !dbg !34
  %.extract25 = extractelement <4 x i32> %790, i64 2, !dbg !34
  %.extract26 = extractelement <4 x i32> %790, i64 3, !dbg !34
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract23, i32 %.extract24, i32 %.extract25, i32 %.extract26, ptr addrspace(1) %686, i1 %666) #4, !dbg !34
  %.extract27 = extractelement <4 x i32> %796, i64 0, !dbg !34
  %.extract28 = extractelement <4 x i32> %796, i64 1, !dbg !34
  %.extract29 = extractelement <4 x i32> %796, i64 2, !dbg !34
  %.extract30 = extractelement <4 x i32> %796, i64 3, !dbg !34
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract27, i32 %.extract28, i32 %.extract29, i32 %.extract30, ptr addrspace(1) %688, i1 %664) #4, !dbg !34
  ret void, !dbg !35
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py", directory: "inductor_cache/jm")
!4 = !{ptr @triton_poi_fused_add_tanh_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_tanh_11, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_tanh_11", linkageName: "triton_poi_fused_add_tanh_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 28, scope: !7)
!15 = !DILocation(line: 25, column: 33, scope: !7)
!16 = !DILocation(line: 26, column: 23, scope: !7)
!17 = !DILocation(line: 27, column: 21, scope: !7)
!18 = !DILocation(line: 32, column: 39, scope: !7)
!19 = !DILocation(line: 32, column: 35, scope: !7)
!20 = !DILocation(line: 32, column: 30, scope: !7)
!21 = !DILocation(line: 32, column: 44, scope: !7)
!22 = !DILocation(line: 33, column: 30, scope: !7)
!23 = !DILocation(line: 33, column: 44, scope: !7)
!24 = !DILocation(line: 34, column: 18, scope: !7)
!25 = !DILocation(line: 35, column: 26, scope: !7)
!26 = !{i32 21046}
!27 = !DILocation(line: 31, column: 19, scope: !7)
!28 = !DILocation(line: 30, column: 19, scope: !7)
!29 = !DILocation(line: 36, column: 34, scope: !7)
!30 = !DILocation(line: 36, column: 45, scope: !7)
!31 = !DILocation(line: 36, column: 30, scope: !7)
!32 = !DILocation(line: 36, column: 39, scope: !7)
!33 = !DILocation(line: 36, column: 25, scope: !7)
!34 = !DILocation(line: 36, column: 56, scope: !7)
!35 = !DILocation(line: 36, column: 4, scope: !7)
