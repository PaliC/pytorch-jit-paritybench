#loc = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":19:0)
#loc1 = loc(unknown)
#loc15 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":37:57)
#loc32 = loc(callsite(#loc1 at #loc15))
module {
  tt.func public @triton_per_fused_abs_mul_rsub_sub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = arith.remsi %0, %cst_3 : tensor<256xi32> loc(#loc3)
    %2 = arith.divsi %0, %cst_3 : tensor<256xi32> loc(#loc4)
    %3 = arith.remsi %2, %cst_2 : tensor<256xi32> loc(#loc5)
    %4 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc6)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc6)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>> loc(#loc7)
    %7 = arith.muli %3, %cst_1 : tensor<256xi32> loc(#loc8)
    %8 = arith.addi %1, %7 : tensor<256xi32> loc(#loc9)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc10)
    %10 = tt.addptr %9, %8 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc10)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.addptr %12, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc12)
    %14 = tt.load %13 : tensor<256x!tt.ptr<f32>> loc(#loc13)
    %15 = "tt.reduce"(%6) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc15)), %arg8: f32 loc(callsite(#loc1 at #loc15))):
      %29 = arith.addf %arg7, %arg8 : f32 loc(#loc35)
      tt.reduce.return %29 : f32 loc(#loc31)
    }) : (tensor<256xf32>) -> f32 loc(#loc31)
    %16 = arith.addf %15, %cst : f32 loc(#loc34)
    %17 = tt.splat %16 : f32 -> tensor<1xf32> loc(#loc34)
    %18 = arith.subf %11, %14 : tensor<256xf32> loc(#loc19)
    %19 = math.absf %18 : tensor<256xf32> loc(#loc20)
    %20 = arith.mulf %19, %6 : tensor<256xf32> loc(#loc21)
    %21 = arith.subf %cst_0, %6 : tensor<256xf32> loc(#loc22)
    %22 = arith.mulf %19, %21 : tensor<256xf32> loc(#loc23)
    %23 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc24)
    %24 = tt.addptr %23, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc24)
    tt.store %24, %20 : tensor<256x!tt.ptr<f32>> loc(#loc25)
    %25 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc26)
    %26 = tt.addptr %25, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc26)
    tt.store %26, %22 : tensor<256x!tt.ptr<f32>> loc(#loc27)
    %27 = tt.addptr %arg3, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc28)
    %28 = tt.splat %27 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc28)
    tt.store %28, %17 : tensor<1x!tt.ptr<f32>> loc(#loc29)
    tt.return loc(#loc30)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":27:26)
#loc3 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":31:19)
#loc4 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":32:21)
#loc5 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":32:27)
#loc6 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":33:30)
#loc7 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":33:35)
#loc8 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":34:38)
#loc9 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":34:35)
#loc10 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":34:30)
#loc11 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":34:43)
#loc12 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":35:30)
#loc13 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":35:35)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc18 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":37:44)
#loc19 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":38:18)
#loc20 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":39:23)
#loc21 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":40:18)
#loc22 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":42:19)
#loc23 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":43:19)
#loc24 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":44:25)
#loc25 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":44:63)
#loc26 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":45:25)
#loc27 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":45:64)
#loc28 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":46:25)
#loc29 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":46:59)
#loc30 = loc("inductor_cache/jn/cjn7olwfmajd34uonqcidejnt4duqigihxoozdfpz6y6y723w55a.py":46:4)
#loc31 = loc(callsite(#loc14 at #loc15))
#loc33 = loc(callsite(#loc16 at #loc14))
#loc34 = loc(callsite(#loc17 at #loc18))
#loc35 = loc(callsite(#loc33 at #loc15))
