; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_convolution_tanh_26(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #3, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 4, !dbg !12
  %10 = and i32 %9, 7, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = or disjoint i32 %11, 8, !dbg !13
  %13 = icmp slt i32 %11, 12, !dbg !14
  %14 = icmp slt i32 %12, 12, !dbg !14
  %15 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !15
  %16 = shl i32 %15, 6, !dbg !16
  %17 = shl i32 %8, 2, !dbg !17
  %18 = and i32 %17, 60, !dbg !17
  %19 = or disjoint i32 %16, %18, !dbg !18
  %.frozen = freeze i32 %11, !dbg !19
  %20 = sdiv i32 %.frozen, 3, !dbg !19
  %21 = mul i32 %20, 3, !dbg !20
  %.decomposed = sub i32 %.frozen, %21, !dbg !20
  %.frozen134 = freeze i32 %12, !dbg !19
  %22 = sdiv i32 %.frozen134, 3, !dbg !19
  %23 = mul i32 %22, 3, !dbg !20
  %.decomposed135 = sub i32 %.frozen134, %23, !dbg !20
  %24 = mul i32 %19, 3, !dbg !21
  %25 = or disjoint i32 %24, 3, !dbg !21
  %26 = add i32 %24, 6, !dbg !21
  %27 = add i32 %24, 9, !dbg !21
  %28 = mul i32 %20, 196608, !dbg !22
  %29 = mul i32 %22, 196608, !dbg !22
  %30 = add i32 %28, %.decomposed, !dbg !23
  %31 = add i32 %30, %24, !dbg !24
  %32 = add i32 %30, %25, !dbg !24
  %33 = add i32 %30, %26, !dbg !24
  %34 = add i32 %30, %27, !dbg !24
  %35 = add i32 %29, %.decomposed135, !dbg !23
  %36 = add i32 %35, %24, !dbg !24
  %37 = add i32 %35, %25, !dbg !24
  %38 = add i32 %35, %26, !dbg !24
  %39 = add i32 %35, %27, !dbg !24
  %40 = sext i32 %31 to i64, !dbg !25
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !25
  %42 = sext i32 %32 to i64, !dbg !25
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !25
  %44 = sext i32 %33 to i64, !dbg !25
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !25
  %46 = sext i32 %34 to i64, !dbg !25
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !25
  %48 = sext i32 %36 to i64, !dbg !25
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !25
  %50 = sext i32 %37 to i64, !dbg !25
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !25
  %52 = sext i32 %38 to i64, !dbg !25
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !25
  %54 = sext i32 %39 to i64, !dbg !25
  %55 = getelementptr float, ptr addrspace(1) %0, i64 %54, !dbg !25
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %13) #3, !dbg !26
  %57 = bitcast i32 %56 to float, !dbg !26
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %13) #3, !dbg !26
  %59 = bitcast i32 %58 to float, !dbg !26
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %13) #3, !dbg !26
  %61 = bitcast i32 %60 to float, !dbg !26
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 %13) #3, !dbg !26
  %63 = bitcast i32 %62 to float, !dbg !26
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %14) #3, !dbg !26
  %65 = bitcast i32 %64 to float, !dbg !26
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 %14) #3, !dbg !26
  %67 = bitcast i32 %66 to float, !dbg !26
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %14) #3, !dbg !26
  %69 = bitcast i32 %68 to float, !dbg !26
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 %14) #3, !dbg !26
  %71 = bitcast i32 %70 to float, !dbg !26
  %72 = sext i32 %.decomposed to i64, !dbg !27
  %73 = getelementptr float, ptr addrspace(1) %1, i64 %72, !dbg !27
  %74 = sext i32 %.decomposed135 to i64, !dbg !27
  %75 = getelementptr float, ptr addrspace(1) %1, i64 %74, !dbg !27
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %73, i1 %13) #3, !dbg !28
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %73, i1 %13) #3, !dbg !28
  %78 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %73, i1 %13) #3, !dbg !28
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %73, i1 %13) #3, !dbg !28
  %80 = bitcast i32 %79 to float, !dbg !28
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 %14) #3, !dbg !28
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 %14) #3, !dbg !28
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 %14) #3, !dbg !28
  %84 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 %14) #3, !dbg !28
  %85 = bitcast i32 %84 to float, !dbg !28
  %86 = fadd float %57, %80, !dbg !29
  %87 = fadd float %59, %80, !dbg !29
  %88 = fadd float %61, %80, !dbg !29
  %89 = fadd float %63, %80, !dbg !29
  %90 = fadd float %65, %85, !dbg !29
  %91 = fadd float %67, %85, !dbg !29
  %92 = fadd float %69, %85, !dbg !29
  %93 = fadd float %71, %85, !dbg !29
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i = icmp eq i32 %94, 0, !dbg !30
  %95 = tail call float @llvm.nvvm.fabs.ftz.f(float %86) #3, !dbg !30
  %96 = tail call float @llvm.nvvm.fabs.f(float %86) #3, !dbg !30
  %.01.i = select i1 %.not.i, float %96, float %95, !dbg !30
  %97 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !30
  br i1 %97, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !30

__internal_fmad.exit1.i:                          ; preds = %5
  %98 = fmul float %.01.i, 0x4007154760000000, !dbg !30
  %99 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %98) #3, !dbg !30
  %100 = fadd float %99, 1.000000e+00, !dbg !30
  %101 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %100) #4, !dbg !30, !srcloc !31
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i = icmp eq i32 %102, 0, !dbg !30
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %101, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %101, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %.03.i = select i1 %.not6.i, float %104, float %103, !dbg !30
  %105 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !30
  %s.0.i = select i1 %105, float 1.000000e+00, float %.03.i, !dbg !30
  %106 = bitcast float %s.0.i to i32, !dbg !30
  %107 = bitcast float %86 to i32, !dbg !30
  %108 = and i32 %107, -2147483648, !dbg !30
  %109 = or i32 %108, %106, !dbg !30
  br label %__nv_tanhf.exit, !dbg !30

__internal_fmad.exit3.i:                          ; preds = %5
  %110 = fmul float %86, %86, !dbg !30
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i = icmp eq i32 %111, 0, !dbg !30
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %110, float 0xBFAAC795C0000000) #3, !dbg !30
  %113 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %110, float 0xBFAAC795C0000000) #3, !dbg !30
  %.06.i = select i1 %.not1.i, float %113, float %112, !dbg !30
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i = icmp eq i32 %114, 0, !dbg !30
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %110, float 0x3FC10B2820000000) #3, !dbg !30
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %110, float 0x3FC10B2820000000) #3, !dbg !30
  %.05.i = select i1 %.not2.i, float %116, float %115, !dbg !30
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i = icmp eq i32 %117, 0, !dbg !30
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %110, float 0xBFD5553DA0000000) #3, !dbg !30
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %110, float 0xBFD5553DA0000000) #3, !dbg !30
  %.0.i = select i1 %.not3.i, float %119, float %118, !dbg !30
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i = icmp eq i32 %120, 0, !dbg !30
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %110, float 0.000000e+00) #3, !dbg !30
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %110, float 0.000000e+00) #3, !dbg !30
  %.04.i = select i1 %.not4.i, float %122, float %121, !dbg !30
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i = icmp eq i32 %123, 0, !dbg !30
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %86, float %86) #3, !dbg !30
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %86, float %86) #3, !dbg !30
  %.02.i = select i1 %.not5.i, float %125, float %124, !dbg !30
  %126 = bitcast float %.02.i to i32, !dbg !32
  br label %__nv_tanhf.exit, !dbg !30

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi i32 [ %109, %__internal_fmad.exit1.i ], [ %126, %__internal_fmad.exit3.i ], !dbg !30
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i1 = icmp eq i32 %127, 0, !dbg !30
  %128 = tail call float @llvm.nvvm.fabs.ftz.f(float %87) #3, !dbg !30
  %129 = tail call float @llvm.nvvm.fabs.f(float %87) #3, !dbg !30
  %.01.i2 = select i1 %.not.i1, float %129, float %128, !dbg !30
  %130 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !30
  br i1 %130, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !30

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %131 = fmul float %.01.i2, 0x4007154760000000, !dbg !30
  %132 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %131) #3, !dbg !30
  %133 = fadd float %132, 1.000000e+00, !dbg !30
  %134 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %133) #4, !dbg !30, !srcloc !31
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i4 = icmp eq i32 %135, 0, !dbg !30
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %134, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %134, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %.03.i5 = select i1 %.not6.i4, float %137, float %136, !dbg !30
  %138 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !30
  %s.0.i6 = select i1 %138, float 1.000000e+00, float %.03.i5, !dbg !30
  %139 = bitcast float %s.0.i6 to i32, !dbg !30
  %140 = bitcast float %87 to i32, !dbg !30
  %141 = and i32 %140, -2147483648, !dbg !30
  %142 = or i32 %141, %139, !dbg !30
  br label %__nv_tanhf.exit19, !dbg !30

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %143 = fmul float %87, %87, !dbg !30
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i9 = icmp eq i32 %144, 0, !dbg !30
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %143, float 0xBFAAC795C0000000) #3, !dbg !30
  %146 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %143, float 0xBFAAC795C0000000) #3, !dbg !30
  %.06.i10 = select i1 %.not1.i9, float %146, float %145, !dbg !30
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i11 = icmp eq i32 %147, 0, !dbg !30
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %143, float 0x3FC10B2820000000) #3, !dbg !30
  %149 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %143, float 0x3FC10B2820000000) #3, !dbg !30
  %.05.i12 = select i1 %.not2.i11, float %149, float %148, !dbg !30
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i13 = icmp eq i32 %150, 0, !dbg !30
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %143, float 0xBFD5553DA0000000) #3, !dbg !30
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %143, float 0xBFD5553DA0000000) #3, !dbg !30
  %.0.i14 = select i1 %.not3.i13, float %152, float %151, !dbg !30
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i15 = icmp eq i32 %153, 0, !dbg !30
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %143, float 0.000000e+00) #3, !dbg !30
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %143, float 0.000000e+00) #3, !dbg !30
  %.04.i16 = select i1 %.not4.i15, float %155, float %154, !dbg !30
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i17 = icmp eq i32 %156, 0, !dbg !30
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %87, float %87) #3, !dbg !30
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %87, float %87) #3, !dbg !30
  %.02.i18 = select i1 %.not5.i17, float %158, float %157, !dbg !30
  %159 = bitcast float %.02.i18 to i32, !dbg !32
  br label %__nv_tanhf.exit19, !dbg !30

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi i32 [ %142, %__internal_fmad.exit1.i3 ], [ %159, %__internal_fmad.exit3.i8 ], !dbg !30
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i20 = icmp eq i32 %160, 0, !dbg !30
  %161 = tail call float @llvm.nvvm.fabs.ftz.f(float %88) #3, !dbg !30
  %162 = tail call float @llvm.nvvm.fabs.f(float %88) #3, !dbg !30
  %.01.i21 = select i1 %.not.i20, float %162, float %161, !dbg !30
  %163 = fcmp ult float %.01.i21, 0x3FE3333340000000, !dbg !30
  br i1 %163, label %__internal_fmad.exit3.i27, label %__internal_fmad.exit1.i22, !dbg !30

__internal_fmad.exit1.i22:                        ; preds = %__nv_tanhf.exit19
  %164 = fmul float %.01.i21, 0x4007154760000000, !dbg !30
  %165 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %164) #3, !dbg !30
  %166 = fadd float %165, 1.000000e+00, !dbg !30
  %167 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %166) #4, !dbg !30, !srcloc !31
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i23 = icmp eq i32 %168, 0, !dbg !30
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %167, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %167, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %.03.i24 = select i1 %.not6.i23, float %170, float %169, !dbg !30
  %171 = fcmp oge float %.01.i21, 0x4022059680000000, !dbg !30
  %s.0.i25 = select i1 %171, float 1.000000e+00, float %.03.i24, !dbg !30
  %172 = bitcast float %s.0.i25 to i32, !dbg !30
  %173 = bitcast float %88 to i32, !dbg !30
  %174 = and i32 %173, -2147483648, !dbg !30
  %175 = or i32 %174, %172, !dbg !30
  br label %__nv_tanhf.exit38, !dbg !30

__internal_fmad.exit3.i27:                        ; preds = %__nv_tanhf.exit19
  %176 = fmul float %88, %88, !dbg !30
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i28 = icmp eq i32 %177, 0, !dbg !30
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %176, float 0xBFAAC795C0000000) #3, !dbg !30
  %179 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %176, float 0xBFAAC795C0000000) #3, !dbg !30
  %.06.i29 = select i1 %.not1.i28, float %179, float %178, !dbg !30
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i30 = icmp eq i32 %180, 0, !dbg !30
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i29, float %176, float 0x3FC10B2820000000) #3, !dbg !30
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i29, float %176, float 0x3FC10B2820000000) #3, !dbg !30
  %.05.i31 = select i1 %.not2.i30, float %182, float %181, !dbg !30
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i32 = icmp eq i32 %183, 0, !dbg !30
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i31, float %176, float 0xBFD5553DA0000000) #3, !dbg !30
  %185 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i31, float %176, float 0xBFD5553DA0000000) #3, !dbg !30
  %.0.i33 = select i1 %.not3.i32, float %185, float %184, !dbg !30
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i34 = icmp eq i32 %186, 0, !dbg !30
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %176, float 0.000000e+00) #3, !dbg !30
  %188 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %176, float 0.000000e+00) #3, !dbg !30
  %.04.i35 = select i1 %.not4.i34, float %188, float %187, !dbg !30
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i36 = icmp eq i32 %189, 0, !dbg !30
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %88, float %88) #3, !dbg !30
  %191 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %88, float %88) #3, !dbg !30
  %.02.i37 = select i1 %.not5.i36, float %191, float %190, !dbg !30
  %192 = bitcast float %.02.i37 to i32, !dbg !32
  br label %__nv_tanhf.exit38, !dbg !30

__nv_tanhf.exit38:                                ; preds = %__internal_fmad.exit1.i22, %__internal_fmad.exit3.i27
  %s.1.i26 = phi i32 [ %175, %__internal_fmad.exit1.i22 ], [ %192, %__internal_fmad.exit3.i27 ], !dbg !30
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i39 = icmp eq i32 %193, 0, !dbg !30
  %194 = tail call float @llvm.nvvm.fabs.ftz.f(float %89) #3, !dbg !30
  %195 = tail call float @llvm.nvvm.fabs.f(float %89) #3, !dbg !30
  %.01.i40 = select i1 %.not.i39, float %195, float %194, !dbg !30
  %196 = fcmp ult float %.01.i40, 0x3FE3333340000000, !dbg !30
  br i1 %196, label %__internal_fmad.exit3.i46, label %__internal_fmad.exit1.i41, !dbg !30

__internal_fmad.exit1.i41:                        ; preds = %__nv_tanhf.exit38
  %197 = fmul float %.01.i40, 0x4007154760000000, !dbg !30
  %198 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %197) #3, !dbg !30
  %199 = fadd float %198, 1.000000e+00, !dbg !30
  %200 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %199) #4, !dbg !30, !srcloc !31
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i42 = icmp eq i32 %201, 0, !dbg !30
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %200, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %200, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %.03.i43 = select i1 %.not6.i42, float %203, float %202, !dbg !30
  %204 = fcmp oge float %.01.i40, 0x4022059680000000, !dbg !30
  %s.0.i44 = select i1 %204, float 1.000000e+00, float %.03.i43, !dbg !30
  %205 = bitcast float %s.0.i44 to i32, !dbg !30
  %206 = bitcast float %89 to i32, !dbg !30
  %207 = and i32 %206, -2147483648, !dbg !30
  %208 = or i32 %207, %205, !dbg !30
  br label %__nv_tanhf.exit57, !dbg !30

__internal_fmad.exit3.i46:                        ; preds = %__nv_tanhf.exit38
  %209 = fmul float %89, %89, !dbg !30
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i47 = icmp eq i32 %210, 0, !dbg !30
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %209, float 0xBFAAC795C0000000) #3, !dbg !30
  %212 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %209, float 0xBFAAC795C0000000) #3, !dbg !30
  %.06.i48 = select i1 %.not1.i47, float %212, float %211, !dbg !30
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i49 = icmp eq i32 %213, 0, !dbg !30
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i48, float %209, float 0x3FC10B2820000000) #3, !dbg !30
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i48, float %209, float 0x3FC10B2820000000) #3, !dbg !30
  %.05.i50 = select i1 %.not2.i49, float %215, float %214, !dbg !30
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i51 = icmp eq i32 %216, 0, !dbg !30
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %209, float 0xBFD5553DA0000000) #3, !dbg !30
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %209, float 0xBFD5553DA0000000) #3, !dbg !30
  %.0.i52 = select i1 %.not3.i51, float %218, float %217, !dbg !30
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i53 = icmp eq i32 %219, 0, !dbg !30
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i52, float %209, float 0.000000e+00) #3, !dbg !30
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i52, float %209, float 0.000000e+00) #3, !dbg !30
  %.04.i54 = select i1 %.not4.i53, float %221, float %220, !dbg !30
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i55 = icmp eq i32 %222, 0, !dbg !30
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %89, float %89) #3, !dbg !30
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %89, float %89) #3, !dbg !30
  %.02.i56 = select i1 %.not5.i55, float %224, float %223, !dbg !30
  %225 = bitcast float %.02.i56 to i32, !dbg !32
  br label %__nv_tanhf.exit57, !dbg !30

__nv_tanhf.exit57:                                ; preds = %__internal_fmad.exit1.i41, %__internal_fmad.exit3.i46
  %s.1.i45 = phi i32 [ %208, %__internal_fmad.exit1.i41 ], [ %225, %__internal_fmad.exit3.i46 ], !dbg !30
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i58 = icmp eq i32 %226, 0, !dbg !30
  %227 = tail call float @llvm.nvvm.fabs.ftz.f(float %90) #3, !dbg !30
  %228 = tail call float @llvm.nvvm.fabs.f(float %90) #3, !dbg !30
  %.01.i59 = select i1 %.not.i58, float %228, float %227, !dbg !30
  %229 = fcmp ult float %.01.i59, 0x3FE3333340000000, !dbg !30
  br i1 %229, label %__internal_fmad.exit3.i65, label %__internal_fmad.exit1.i60, !dbg !30

__internal_fmad.exit1.i60:                        ; preds = %__nv_tanhf.exit57
  %230 = fmul float %.01.i59, 0x4007154760000000, !dbg !30
  %231 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %230) #3, !dbg !30
  %232 = fadd float %231, 1.000000e+00, !dbg !30
  %233 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %232) #4, !dbg !30, !srcloc !31
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i61 = icmp eq i32 %234, 0, !dbg !30
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %233, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %233, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %.03.i62 = select i1 %.not6.i61, float %236, float %235, !dbg !30
  %237 = fcmp oge float %.01.i59, 0x4022059680000000, !dbg !30
  %s.0.i63 = select i1 %237, float 1.000000e+00, float %.03.i62, !dbg !30
  %238 = bitcast float %s.0.i63 to i32, !dbg !30
  %239 = bitcast float %90 to i32, !dbg !30
  %240 = and i32 %239, -2147483648, !dbg !30
  %241 = or i32 %240, %238, !dbg !30
  br label %__nv_tanhf.exit76, !dbg !30

__internal_fmad.exit3.i65:                        ; preds = %__nv_tanhf.exit57
  %242 = fmul float %90, %90, !dbg !30
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i66 = icmp eq i32 %243, 0, !dbg !30
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %242, float 0xBFAAC795C0000000) #3, !dbg !30
  %245 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %242, float 0xBFAAC795C0000000) #3, !dbg !30
  %.06.i67 = select i1 %.not1.i66, float %245, float %244, !dbg !30
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i68 = icmp eq i32 %246, 0, !dbg !30
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i67, float %242, float 0x3FC10B2820000000) #3, !dbg !30
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i67, float %242, float 0x3FC10B2820000000) #3, !dbg !30
  %.05.i69 = select i1 %.not2.i68, float %248, float %247, !dbg !30
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i70 = icmp eq i32 %249, 0, !dbg !30
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i69, float %242, float 0xBFD5553DA0000000) #3, !dbg !30
  %251 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i69, float %242, float 0xBFD5553DA0000000) #3, !dbg !30
  %.0.i71 = select i1 %.not3.i70, float %251, float %250, !dbg !30
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i72 = icmp eq i32 %252, 0, !dbg !30
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i71, float %242, float 0.000000e+00) #3, !dbg !30
  %254 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i71, float %242, float 0.000000e+00) #3, !dbg !30
  %.04.i73 = select i1 %.not4.i72, float %254, float %253, !dbg !30
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i74 = icmp eq i32 %255, 0, !dbg !30
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i73, float %90, float %90) #3, !dbg !30
  %257 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i73, float %90, float %90) #3, !dbg !30
  %.02.i75 = select i1 %.not5.i74, float %257, float %256, !dbg !30
  %258 = bitcast float %.02.i75 to i32, !dbg !32
  br label %__nv_tanhf.exit76, !dbg !30

__nv_tanhf.exit76:                                ; preds = %__internal_fmad.exit1.i60, %__internal_fmad.exit3.i65
  %s.1.i64 = phi i32 [ %241, %__internal_fmad.exit1.i60 ], [ %258, %__internal_fmad.exit3.i65 ], !dbg !30
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i77 = icmp eq i32 %259, 0, !dbg !30
  %260 = tail call float @llvm.nvvm.fabs.ftz.f(float %91) #3, !dbg !30
  %261 = tail call float @llvm.nvvm.fabs.f(float %91) #3, !dbg !30
  %.01.i78 = select i1 %.not.i77, float %261, float %260, !dbg !30
  %262 = fcmp ult float %.01.i78, 0x3FE3333340000000, !dbg !30
  br i1 %262, label %__internal_fmad.exit3.i84, label %__internal_fmad.exit1.i79, !dbg !30

__internal_fmad.exit1.i79:                        ; preds = %__nv_tanhf.exit76
  %263 = fmul float %.01.i78, 0x4007154760000000, !dbg !30
  %264 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %263) #3, !dbg !30
  %265 = fadd float %264, 1.000000e+00, !dbg !30
  %266 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %265) #4, !dbg !30, !srcloc !31
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i80 = icmp eq i32 %267, 0, !dbg !30
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %266, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %266, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %.03.i81 = select i1 %.not6.i80, float %269, float %268, !dbg !30
  %270 = fcmp oge float %.01.i78, 0x4022059680000000, !dbg !30
  %s.0.i82 = select i1 %270, float 1.000000e+00, float %.03.i81, !dbg !30
  %271 = bitcast float %s.0.i82 to i32, !dbg !30
  %272 = bitcast float %91 to i32, !dbg !30
  %273 = and i32 %272, -2147483648, !dbg !30
  %274 = or i32 %273, %271, !dbg !30
  br label %__nv_tanhf.exit95, !dbg !30

__internal_fmad.exit3.i84:                        ; preds = %__nv_tanhf.exit76
  %275 = fmul float %91, %91, !dbg !30
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i85 = icmp eq i32 %276, 0, !dbg !30
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %275, float 0xBFAAC795C0000000) #3, !dbg !30
  %278 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %275, float 0xBFAAC795C0000000) #3, !dbg !30
  %.06.i86 = select i1 %.not1.i85, float %278, float %277, !dbg !30
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i87 = icmp eq i32 %279, 0, !dbg !30
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i86, float %275, float 0x3FC10B2820000000) #3, !dbg !30
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i86, float %275, float 0x3FC10B2820000000) #3, !dbg !30
  %.05.i88 = select i1 %.not2.i87, float %281, float %280, !dbg !30
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i89 = icmp eq i32 %282, 0, !dbg !30
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i88, float %275, float 0xBFD5553DA0000000) #3, !dbg !30
  %284 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i88, float %275, float 0xBFD5553DA0000000) #3, !dbg !30
  %.0.i90 = select i1 %.not3.i89, float %284, float %283, !dbg !30
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i91 = icmp eq i32 %285, 0, !dbg !30
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i90, float %275, float 0.000000e+00) #3, !dbg !30
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i90, float %275, float 0.000000e+00) #3, !dbg !30
  %.04.i92 = select i1 %.not4.i91, float %287, float %286, !dbg !30
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i93 = icmp eq i32 %288, 0, !dbg !30
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i92, float %91, float %91) #3, !dbg !30
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i92, float %91, float %91) #3, !dbg !30
  %.02.i94 = select i1 %.not5.i93, float %290, float %289, !dbg !30
  %291 = bitcast float %.02.i94 to i32, !dbg !32
  br label %__nv_tanhf.exit95, !dbg !30

__nv_tanhf.exit95:                                ; preds = %__internal_fmad.exit1.i79, %__internal_fmad.exit3.i84
  %s.1.i83 = phi i32 [ %274, %__internal_fmad.exit1.i79 ], [ %291, %__internal_fmad.exit3.i84 ], !dbg !30
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i96 = icmp eq i32 %292, 0, !dbg !30
  %293 = tail call float @llvm.nvvm.fabs.ftz.f(float %92) #3, !dbg !30
  %294 = tail call float @llvm.nvvm.fabs.f(float %92) #3, !dbg !30
  %.01.i97 = select i1 %.not.i96, float %294, float %293, !dbg !30
  %295 = fcmp ult float %.01.i97, 0x3FE3333340000000, !dbg !30
  br i1 %295, label %__internal_fmad.exit3.i103, label %__internal_fmad.exit1.i98, !dbg !30

__internal_fmad.exit1.i98:                        ; preds = %__nv_tanhf.exit95
  %296 = fmul float %.01.i97, 0x4007154760000000, !dbg !30
  %297 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %296) #3, !dbg !30
  %298 = fadd float %297, 1.000000e+00, !dbg !30
  %299 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %298) #4, !dbg !30, !srcloc !31
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i99 = icmp eq i32 %300, 0, !dbg !30
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %299, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %299, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %.03.i100 = select i1 %.not6.i99, float %302, float %301, !dbg !30
  %303 = fcmp oge float %.01.i97, 0x4022059680000000, !dbg !30
  %s.0.i101 = select i1 %303, float 1.000000e+00, float %.03.i100, !dbg !30
  %304 = bitcast float %s.0.i101 to i32, !dbg !30
  %305 = bitcast float %92 to i32, !dbg !30
  %306 = and i32 %305, -2147483648, !dbg !30
  %307 = or i32 %306, %304, !dbg !30
  br label %__nv_tanhf.exit114, !dbg !30

__internal_fmad.exit3.i103:                       ; preds = %__nv_tanhf.exit95
  %308 = fmul float %92, %92, !dbg !30
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i104 = icmp eq i32 %309, 0, !dbg !30
  %310 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %308, float 0xBFAAC795C0000000) #3, !dbg !30
  %311 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %308, float 0xBFAAC795C0000000) #3, !dbg !30
  %.06.i105 = select i1 %.not1.i104, float %311, float %310, !dbg !30
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i106 = icmp eq i32 %312, 0, !dbg !30
  %313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i105, float %308, float 0x3FC10B2820000000) #3, !dbg !30
  %314 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i105, float %308, float 0x3FC10B2820000000) #3, !dbg !30
  %.05.i107 = select i1 %.not2.i106, float %314, float %313, !dbg !30
  %315 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i108 = icmp eq i32 %315, 0, !dbg !30
  %316 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i107, float %308, float 0xBFD5553DA0000000) #3, !dbg !30
  %317 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i107, float %308, float 0xBFD5553DA0000000) #3, !dbg !30
  %.0.i109 = select i1 %.not3.i108, float %317, float %316, !dbg !30
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i110 = icmp eq i32 %318, 0, !dbg !30
  %319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i109, float %308, float 0.000000e+00) #3, !dbg !30
  %320 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i109, float %308, float 0.000000e+00) #3, !dbg !30
  %.04.i111 = select i1 %.not4.i110, float %320, float %319, !dbg !30
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i112 = icmp eq i32 %321, 0, !dbg !30
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i111, float %92, float %92) #3, !dbg !30
  %323 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i111, float %92, float %92) #3, !dbg !30
  %.02.i113 = select i1 %.not5.i112, float %323, float %322, !dbg !30
  %324 = bitcast float %.02.i113 to i32, !dbg !32
  br label %__nv_tanhf.exit114, !dbg !30

__nv_tanhf.exit114:                               ; preds = %__internal_fmad.exit1.i98, %__internal_fmad.exit3.i103
  %s.1.i102 = phi i32 [ %307, %__internal_fmad.exit1.i98 ], [ %324, %__internal_fmad.exit3.i103 ], !dbg !30
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i115 = icmp eq i32 %325, 0, !dbg !30
  %326 = tail call float @llvm.nvvm.fabs.ftz.f(float %93) #3, !dbg !30
  %327 = tail call float @llvm.nvvm.fabs.f(float %93) #3, !dbg !30
  %.01.i116 = select i1 %.not.i115, float %327, float %326, !dbg !30
  %328 = fcmp ult float %.01.i116, 0x3FE3333340000000, !dbg !30
  br i1 %328, label %__internal_fmad.exit3.i122, label %__internal_fmad.exit1.i117, !dbg !30

__internal_fmad.exit1.i117:                       ; preds = %__nv_tanhf.exit114
  %329 = fmul float %.01.i116, 0x4007154760000000, !dbg !30
  %330 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %329) #3, !dbg !30
  %331 = fadd float %330, 1.000000e+00, !dbg !30
  %332 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %331) #4, !dbg !30, !srcloc !31
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i118 = icmp eq i32 %333, 0, !dbg !30
  %334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %332, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %335 = tail call float @llvm.nvvm.fma.rn.f(float %332, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %.03.i119 = select i1 %.not6.i118, float %335, float %334, !dbg !30
  %336 = fcmp oge float %.01.i116, 0x4022059680000000, !dbg !30
  %s.0.i120 = select i1 %336, float 1.000000e+00, float %.03.i119, !dbg !30
  %337 = bitcast float %s.0.i120 to i32, !dbg !30
  %338 = bitcast float %93 to i32, !dbg !30
  %339 = and i32 %338, -2147483648, !dbg !30
  %340 = or i32 %339, %337, !dbg !30
  br label %__nv_tanhf.exit133, !dbg !30

__internal_fmad.exit3.i122:                       ; preds = %__nv_tanhf.exit114
  %341 = fmul float %93, %93, !dbg !30
  %342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i123 = icmp eq i32 %342, 0, !dbg !30
  %343 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %341, float 0xBFAAC795C0000000) #3, !dbg !30
  %344 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %341, float 0xBFAAC795C0000000) #3, !dbg !30
  %.06.i124 = select i1 %.not1.i123, float %344, float %343, !dbg !30
  %345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i125 = icmp eq i32 %345, 0, !dbg !30
  %346 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i124, float %341, float 0x3FC10B2820000000) #3, !dbg !30
  %347 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i124, float %341, float 0x3FC10B2820000000) #3, !dbg !30
  %.05.i126 = select i1 %.not2.i125, float %347, float %346, !dbg !30
  %348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i127 = icmp eq i32 %348, 0, !dbg !30
  %349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i126, float %341, float 0xBFD5553DA0000000) #3, !dbg !30
  %350 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i126, float %341, float 0xBFD5553DA0000000) #3, !dbg !30
  %.0.i128 = select i1 %.not3.i127, float %350, float %349, !dbg !30
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i129 = icmp eq i32 %351, 0, !dbg !30
  %352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i128, float %341, float 0.000000e+00) #3, !dbg !30
  %353 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i128, float %341, float 0.000000e+00) #3, !dbg !30
  %.04.i130 = select i1 %.not4.i129, float %353, float %352, !dbg !30
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i131 = icmp eq i32 %354, 0, !dbg !30
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i130, float %93, float %93) #3, !dbg !30
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i130, float %93, float %93) #3, !dbg !30
  %.02.i132 = select i1 %.not5.i131, float %356, float %355, !dbg !30
  %357 = bitcast float %.02.i132 to i32, !dbg !32
  br label %__nv_tanhf.exit133, !dbg !30

__nv_tanhf.exit133:                               ; preds = %__internal_fmad.exit1.i117, %__internal_fmad.exit3.i122
  %s.1.i121 = phi i32 [ %340, %__internal_fmad.exit1.i117 ], [ %357, %__internal_fmad.exit3.i122 ], !dbg !30
  %358 = shl i32 %11, 16, !dbg !33
  %359 = shl i32 %12, 16, !dbg !33
  %360 = add i32 %19, %358, !dbg !34
  %361 = add i32 %19, %359, !dbg !34
  %362 = sext i32 %360 to i64, !dbg !35
  %363 = getelementptr float, ptr addrspace(1) %2, i64 %362, !dbg !35
  %364 = sext i32 %361 to i64, !dbg !35
  %365 = getelementptr float, ptr addrspace(1) %2, i64 %364, !dbg !35
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %s.1.i, i32 %s.1.i7, i32 %s.1.i26, i32 %s.1.i45, ptr addrspace(1) %363, i1 %13) #3, !dbg !32
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %s.1.i64, i32 %s.1.i83, i32 %s.1.i102, i32 %s.1.i121, ptr addrspace(1) %365, i1 %14) #3, !dbg !32
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chmk7twcjhfyrbqlb24p4i46esc4d25af3arnax6racakwb5mw6a.py", directory: "inductor_cache/hm")
!4 = !{ptr @triton_poi_fused_convolution_tanh_26, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_tanh_26, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_tanh_26", linkageName: "triton_poi_fused_convolution_tanh_26", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 30, column: 19, scope: !7)
!20 = !DILocation(line: 29, column: 19, scope: !7)
!21 = !DILocation(line: 32, column: 37, scope: !7)
!22 = !DILocation(line: 32, column: 49, scope: !7)
!23 = !DILocation(line: 32, column: 35, scope: !7)
!24 = !DILocation(line: 32, column: 42, scope: !7)
!25 = !DILocation(line: 32, column: 30, scope: !7)
!26 = !DILocation(line: 32, column: 54, scope: !7)
!27 = !DILocation(line: 33, column: 30, scope: !7)
!28 = !DILocation(line: 33, column: 35, scope: !7)
!29 = !DILocation(line: 34, column: 18, scope: !7)
!30 = !DILocation(line: 35, column: 26, scope: !7)
!31 = !{i32 21046}
!32 = !DILocation(line: 36, column: 47, scope: !7)
!33 = !DILocation(line: 36, column: 36, scope: !7)
!34 = !DILocation(line: 36, column: 30, scope: !7)
!35 = !DILocation(line: 36, column: 25, scope: !7)
!36 = !DILocation(line: 36, column: 4, scope: !7)
