//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_27 // -- Begin function triton_poi_fused_clone_27
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_clone_27
.visible .entry triton_poi_fused_clone_27(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_27_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_27_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_27_param_2,
	.param .u32 triton_poi_fused_clone_27_param_3,
	.param .u32 triton_poi_fused_clone_27_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<106>;
	.reg .f32 	%f<21>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_clone_27_param_0];
	ld.param.u64 	%rd3, [triton_poi_fused_clone_27_param_1];
$L__tmp0:
	.loc	1 22 28                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:22:33
	shl.b32 	%r39, %r1, 4;
	ld.param.u64 	%rd7, [triton_poi_fused_clone_27_param_2];
	.loc	1 23 44                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:23:44
	mov.u32 	%r40, %tid.x;
	shl.b32 	%r41, %r40, 2;
	and.b32  	%r42, %r41, 12;
	bfe.u32 	%r43, %r40, 4, 3;
	.loc	1 23 23                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:23:23
	or.b32  	%r44, %r39, %r42;
	or.b32  	%r45, %r39, %r43;
	or.b32  	%r46, %r45, 8;
	.loc	1 24 21                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:24:21
	setp.lt.s32 	%p1, %r44, 16;
	setp.lt.s32 	%p12, %r45, 16;
	setp.lt.s32 	%p13, %r46, 16;
	.loc	1 25 28                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:25:33
	shl.b32 	%r47, %r2, 6;
	.loc	1 26 44                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:26:44
	shr.u32 	%r48, %r40, 2;
	and.b32  	%r50, %r48, 31;
	and.b32  	%r51, %r41, 60;
	.loc	1 26 23                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:26:23
	or.b32  	%r52, %r47, %r50;
	or.b32  	%r53, %r52, 32;
	or.b32  	%r54, %r47, %r51;
	.loc	1 29 19                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:29:19
	bfe.s32 	%r55, %r2, 25, 1;
	shr.u32 	%r56, %r55, 26;
	add.s32 	%r57, %r52, %r56;
	shr.s32 	%r58, %r57, 6;
	.loc	1 28 19                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:28:19
	and.b32  	%r59, %r57, 1073741760;
	sub.s32 	%r60, %r52, %r59;
	.loc	1 29 19                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:29:19
	add.s32 	%r61, %r53, %r56;
	shr.s32 	%r62, %r61, 6;
	.loc	1 28 19                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:28:19
	and.b32  	%r63, %r61, 1073741760;
	sub.s32 	%r64, %r53, %r63;
	.loc	1 31 19                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:31:19
	shr.u32 	%r65, %r44, 2;
	.loc	1 34 46                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:34:46
	shl.b32 	%r66, %r60, 2;
	shl.b32 	%r67, %r64, 2;
	.loc	1 34 44                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:34:44
	mad.lo.s32 	%r68, %r65, 3748096, 120156;
	.loc	1 34 51                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:34:51
	add.s32 	%r69, %r68, %r66;
	.loc	1 34 61                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:34:61
	mad.lo.s32 	%r70, %r58, 3872, %r69;
	.loc	1 34 51                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:34:51
	add.s32 	%r71, %r68, %r67;
	.loc	1 34 61                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:34:61
	mad.lo.s32 	%r72, %r62, 3872, %r71;
	.loc	1 34 30                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:34:30
	mul.wide.s32 	%rd8, %r70, 4;
	add.s64 	%rd1, %rd6, %rd8;
	mul.wide.s32 	%rd9, %r72, 4;
	add.s64 	%rd2, %rd6, %rd9;
	.loc	1 34 74                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:34:74
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	.loc	1 35 35                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:35:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r14;
	.loc	1 36 18                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:36:18
	add.f32 	%f13, %f1, %f9;
	add.f32 	%f14, %f2, %f10;
	add.f32 	%f15, %f3, %f11;
	add.f32 	%f16, %f4, %f12;
	add.f32 	%f17, %f5, %f9;
	add.f32 	%f18, %f6, %f10;
	add.f32 	%f19, %f7, %f11;
	add.f32 	%f20, %f8, %f12;
	.loc	1 37 35                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:37:35
	shl.b32 	%r73, %r45, 12;
	shl.b32 	%r74, %r46, 12;
	.loc	1 37 30                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:37:30
	add.s32 	%r75, %r54, %r73;
	add.s32 	%r76, %r54, %r74;
	.loc	1 37 25                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:37:25
	mul.wide.s32 	%rd10, %r75, 4;
	add.s64 	%rd4, %rd7, %rd10;
	mul.wide.s32 	%rd11, %r76, 4;
	add.s64 	%rd5, %rd7, %rd11;
	.loc	1 37 46                         // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:37:46
	shl.b32 	%r77, %r40, 8;
	and.b32  	%r78, %r77, 768;
	or.b32  	%r79, %r78, %r50;
	and.b32  	%r80, %r41, 508;
	shr.u32 	%r81, %r78, 4;
	mov.u32 	%r82, global_smem;
	add.s32 	%r83, %r82, %r81;
	shl.b32 	%r84, %r79, 2;
	add.s32 	%r15, %r83, %r84;
	mov.b32 	%r16, %f13;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	or.b32  	%r85, %r78, 64;
	shr.u32 	%r86, %r85, 4;
	add.s32 	%r87, %r82, %r86;
	add.s32 	%r88, %r87, %r84;
	add.s32 	%r17, %r88, 256;
	mov.b32 	%r18, %f14;
	// begin inline asm
	@%p4 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	or.b32  	%r89, %r78, 128;
	shr.u32 	%r90, %r89, 4;
	add.s32 	%r91, %r82, %r90;
	add.s32 	%r92, %r91, %r84;
	add.s32 	%r19, %r92, 512;
	mov.b32 	%r20, %f15;
	// begin inline asm
	@%p4 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r93, %r78, 192;
	shr.u32 	%r94, %r93, 4;
	add.s32 	%r95, %r82, %r94;
	add.s32 	%r96, %r95, %r84;
	add.s32 	%r21, %r96, 768;
	mov.b32 	%r22, %f16;
	// begin inline asm
	@%p4 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r15, 128;
	mov.b32 	%r24, %f17;
	// begin inline asm
	@%p4 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r88, 384;
	mov.b32 	%r26, %f18;
	// begin inline asm
	@%p4 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r92, 640;
	mov.b32 	%r28, %f19;
	// begin inline asm
	@%p4 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r96, 896;
	mov.b32 	%r30, %f20;
	// begin inline asm
	@%p4 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r97, %r48, 28;
	add.s32 	%r98, %r82, %r97;
	shl.b32 	%r99, %r80, 2;
	add.s32 	%r100, %r98, %r99;
	ld.shared.u32 	%r31, [%r100];
	ld.shared.u32 	%r32, [%r100+4];
	ld.shared.u32 	%r33, [%r100+8];
	ld.shared.u32 	%r34, [%r100+12];
	or.b32  	%r101, %r80, 512;
	shr.u32 	%r102, %r101, 4;
	and.b32  	%r103, %r102, 60;
	add.s32 	%r104, %r82, %r103;
	add.s32 	%r105, %r104, %r99;
	ld.shared.u32 	%r35, [%r105+2048];
	ld.shared.u32 	%r36, [%r105+2052];
	ld.shared.u32 	%r37, [%r105+2056];
	ld.shared.u32 	%r38, [%r105+2060];
	// begin inline asm
	@%p12 st.global.v4.b32 [ %rd4 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd5 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	.loc	1 37 4                          // cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py:37:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ra/cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 97
.b8 110
.b8 111
.b8 98
.b8 115
.b8 108
.b8 98
.b8 118
.b8 103
.b8 99
.b8 118
.b8 108
.b8 52
.b8 55
.b8 50
.b8 113
.b8 106
.b8 104
.b8 50
.b8 55
.b8 109
.b8 50
.b8 52
.b8 119
.b8 51
.b8 97
.b8 114
.b8 113
.b8 102
.b8 55
.b8 118
.b8 99
.b8 122
.b8 109
.b8 116
.b8 119
.b8 101
.b8 116
.b8 53
.b8 98
.b8 53
.b8 117
.b8 111
.b8 51
.b8 108
.b8 118
.b8 119
.b8 104
.b8 108
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 97
.b8 0
	}
	.section	.debug_macinfo	{	}
