; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_native_layer_norm_relu_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %7 = shl i32 %6, 2, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 3, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 4, !dbg !14
  %12 = sext i32 %10 to i64, !dbg !15
  %13 = getelementptr float, ptr addrspace(1) %1, i64 %12, !dbg !15
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %13, i1 %11) #3, !dbg !16
  %15 = bitcast i32 %14 to float, !dbg !16
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #3, !dbg !17
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #3, !dbg !18
  %18 = fsub float %15, %15, !dbg !19
  %19 = fmul float %18, %18, !dbg !20
  %20 = fadd float %19, 0x3EE4F8B580000000, !dbg !21
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !22
  %.not.i = icmp eq i32 %21, 0, !dbg !22
  br i1 %.not.i, label %24, label %22, !dbg !22

22:                                               ; preds = %5
  %23 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %20), !dbg !22
  br label %__nv_rsqrtf.exit, !dbg !22

24:                                               ; preds = %5
  %25 = tail call float @llvm.nvvm.rsqrt.approx.f(float %20), !dbg !22
  br label %__nv_rsqrtf.exit, !dbg !22

__nv_rsqrtf.exit:                                 ; preds = %22, %24
  %.0.i = phi float [ %23, %22 ], [ %25, %24 ], !dbg !22
  %26 = bitcast i32 %17 to float, !dbg !18
  %27 = bitcast i32 %16 to float, !dbg !17
  %28 = and i32 %8, 28, !dbg !12
  %29 = fmul float %18, %.0.i, !dbg !23
  %30 = fmul float %29, %27, !dbg !24
  %31 = fadd float %30, %26, !dbg !25
  %32 = fcmp olt float %31, 0.000000e+00, !dbg !26
  %33 = select i1 %32, float 0.000000e+00, float %31, !dbg !30
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !31
  %35 = icmp eq i32 %28, 0, !dbg !32
  %36 = bitcast float %33 to i32, !dbg !32
  %37 = and i1 %35, %11, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %36, ptr addrspace(1) %34, i1 %37) #3, !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjvcuh43p3snn7wczcnervi2dyzebx5bjqlmpb6otygm54agdobk.py", directory: "inductor_cache/jv")
!4 = !{ptr @triton_poi_fused_native_layer_norm_relu_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_native_layer_norm_relu_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_native_layer_norm_relu_1", linkageName: "triton_poi_fused_native_layer_norm_relu_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 20, scope: !7)
!18 = !DILocation(line: 28, column: 20, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 18, scope: !7)
!21 = !DILocation(line: 36, column: 18, scope: !7)
!22 = !DILocation(line: 37, column: 27, scope: !7)
!23 = !DILocation(line: 38, column: 18, scope: !7)
!24 = !DILocation(line: 39, column: 19, scope: !7)
!25 = !DILocation(line: 40, column: 20, scope: !7)
!26 = !DILocation(line: 118, column: 15, scope: !27, inlinedAt: !29)
!27 = distinct !DILexicalBlockFile(scope: !7, file: !28, discriminator: 0)
!28 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!29 = !DILocation(line: 42, column: 42, scope: !7)
!30 = !DILocation(line: 121, column: 29, scope: !27, inlinedAt: !29)
!31 = !DILocation(line: 43, column: 28, scope: !7)
!32 = !DILocation(line: 43, column: 40, scope: !7)
!33 = !DILocation(line: 43, column: 4, scope: !7)
