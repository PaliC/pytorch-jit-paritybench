#loc = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":19:0)
module {
  tt.func public @triton_poi_fused_add_div_hardtanh_mul_19(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<6.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.166666672> : tensor<128xf32> loc(#loc1)
    %cst_2 = arith.constant dense<3.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_3 = arith.constant dense<1536> : tensor<128xi32> loc(#loc1)
    %cst_4 = arith.constant dense<96> : tensor<128xi32> loc(#loc1)
    %cst_5 = arith.constant dense<6144> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_5 : tensor<128xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_4 : tensor<128xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_3 : tensor<128xi32> loc(#loc8)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc9)
    %9 = tt.addptr %8, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc9)
    %10 = tt.load %9, %5 : tensor<128x!tt.ptr<f32>> loc(#loc10)
    %11 = arith.muli %7, %cst_4 : tensor<128xi32> loc(#loc11)
    %12 = arith.addi %6, %11 : tensor<128xi32> loc(#loc12)
    %13 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc13)
    %14 = tt.addptr %13, %12 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc13)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc14)
    %16 = arith.addf %15, %cst_2 : tensor<128xf32> loc(#loc15)
    %17 = arith.cmpf ogt, %16, %cst_0 : tensor<128xf32> loc(#loc37)
    %18 = arith.cmpf une, %16, %16 : tensor<128xf32> loc(#loc38)
    %19 = arith.ori %17, %18 : tensor<128xi1> loc(#loc39)
    %20 = arith.select %19, %16, %cst_0 : tensor<128xi1>, tensor<128xf32> loc(#loc40)
    %21 = arith.cmpf olt, %20, %cst : tensor<128xf32> loc(#loc41)
    %22 = arith.cmpf une, %20, %20 : tensor<128xf32> loc(#loc42)
    %23 = arith.ori %21, %22 : tensor<128xi1> loc(#loc43)
    %24 = arith.select %23, %20, %cst : tensor<128xi1>, tensor<128xf32> loc(#loc44)
    %25 = arith.mulf %24, %cst_1 : tensor<128xf32> loc(#loc26)
    %26 = arith.mulf %10, %25 : tensor<128xf32> loc(#loc27)
    %27 = arith.addf %26, %cst_2 : tensor<128xf32> loc(#loc28)
    %28 = arith.cmpf ogt, %27, %cst_0 : tensor<128xf32> loc(#loc45)
    %29 = arith.cmpf une, %27, %27 : tensor<128xf32> loc(#loc46)
    %30 = arith.ori %28, %29 : tensor<128xi1> loc(#loc47)
    %31 = arith.select %30, %27, %cst_0 : tensor<128xi1>, tensor<128xf32> loc(#loc48)
    %32 = arith.cmpf olt, %31, %cst : tensor<128xf32> loc(#loc49)
    %33 = arith.cmpf une, %31, %31 : tensor<128xf32> loc(#loc50)
    %34 = arith.ori %32, %33 : tensor<128xi1> loc(#loc51)
    %35 = arith.select %34, %31, %cst : tensor<128xi1>, tensor<128xf32> loc(#loc52)
    %36 = arith.mulf %35, %cst_1 : tensor<128xf32> loc(#loc31)
    %37 = arith.mulf %26, %36 : tensor<128xf32> loc(#loc32)
    tt.store %9, %26, %5 : tensor<128x!tt.ptr<f32>> loc(#loc33)
    %38 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc34)
    %39 = tt.addptr %38, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc34)
    tt.store %39, %37, %5 : tensor<128x!tt.ptr<f32>> loc(#loc35)
    tt.return loc(#loc36)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":21:28)
#loc3 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":21:33)
#loc4 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":22:36)
#loc5 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":22:23)
#loc6 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":23:21)
#loc7 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":25:19)
#loc8 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":26:19)
#loc9 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":27:34)
#loc10 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":27:39)
#loc11 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":28:38)
#loc12 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":28:35)
#loc13 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":28:30)
#loc14 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":28:43)
#loc15 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":30:18)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc17 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":32:40)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc22 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":34:40)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc26 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":36:18)
#loc27 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":37:19)
#loc28 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":38:20)
#loc29 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":39:42)
#loc30 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":40:42)
#loc31 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":41:20)
#loc32 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":42:20)
#loc33 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":43:40)
#loc34 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":44:25)
#loc35 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":44:37)
#loc36 = loc("inductor_cache/sr/csrs5snsznjh43c32zgxbijxhoa7vble3zqt6q56lrxhovs2vfws.py":44:4)
#loc37 = loc(callsite(#loc16 at #loc17))
#loc38 = loc(callsite(#loc18 at #loc17))
#loc39 = loc(callsite(#loc19 at #loc17))
#loc40 = loc(callsite(#loc20 at #loc17))
#loc41 = loc(callsite(#loc21 at #loc22))
#loc42 = loc(callsite(#loc23 at #loc22))
#loc43 = loc(callsite(#loc24 at #loc22))
#loc44 = loc(callsite(#loc25 at #loc22))
#loc45 = loc(callsite(#loc16 at #loc29))
#loc46 = loc(callsite(#loc18 at #loc29))
#loc47 = loc(callsite(#loc19 at #loc29))
#loc48 = loc(callsite(#loc20 at #loc29))
#loc49 = loc(callsite(#loc21 at #loc30))
#loc50 = loc(callsite(#loc23 at #loc30))
#loc51 = loc(callsite(#loc24 at #loc30))
#loc52 = loc(callsite(#loc25 at #loc30))
