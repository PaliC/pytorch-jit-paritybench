#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_arange_bitwise_and_ge_lt_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":19:0), %arg2: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":19:0), %arg3: i32 loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 4.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant 2.000000e+00 : f32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<4> : tensor<4xi32, #blocked> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<4xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<4xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_1 : tensor<4xi32, #blocked> loc(#loc6)
    %6 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc7)
    %7 = tt.load %6 : !tt.ptr<f32> loc(#loc8)
    %8 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc9)
    %9 = tt.load %8 : !tt.ptr<f32> loc(#loc10)
    %10 = arith.mulf %9, %cst_0 : f32 loc(#loc11)
    %11 = arith.subf %cst, %10 : f32 loc(#loc12)
    %12 = arith.mulf %7, %11 : f32 loc(#loc13)
    %13 = arith.fptosi %12 : f32 to i64 loc(#loc14)
    %14 = arith.sitofp %13 : i64 to f32 loc(#loc15)
    %15 = tt.splat %14 : f32 -> tensor<4xf32, #blocked> loc(#loc15)
    %16 = arith.sitofp %4 : tensor<4xi32, #blocked> to tensor<4xf32, #blocked> loc(#loc16)
    %17 = arith.cmpf oge, %16, %15 : tensor<4xf32, #blocked> loc(#loc17)
    %18 = arith.fptosi %10 : f32 to i64 loc(#loc18)
    %19 = arith.addi %13, %18 : i64 loc(#loc19)
    %20 = arith.sitofp %19 : i64 to f32 loc(#loc20)
    %21 = tt.splat %20 : f32 -> tensor<4xf32, #blocked> loc(#loc20)
    %22 = arith.cmpf olt, %16, %21 : tensor<4xf32, #blocked> loc(#loc21)
    %23 = arith.andi %17, %22 : tensor<4xi1, #blocked> loc(#loc22)
    %24 = tt.splat %arg2 : !tt.ptr<i1> -> tensor<4x!tt.ptr<i1>, #blocked> loc(#loc23)
    %25 = tt.addptr %24, %4 : tensor<4x!tt.ptr<i1>, #blocked>, tensor<4xi32, #blocked> loc(#loc23)
    %26 = tt.bitcast %25 : tensor<4x!tt.ptr<i1>, #blocked> -> tensor<4x!tt.ptr<i8>, #blocked> loc(#loc24)
    %27 = arith.extui %23 : tensor<4xi1, #blocked> to tensor<4xi8, #blocked> loc(#loc24)
    tt.store %26, %27, %5 : tensor<4x!tt.ptr<i8>, #blocked> loc(#loc24)
    tt.return loc(#loc25)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":21:28)
#loc3 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":21:33)
#loc4 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":22:36)
#loc5 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":22:23)
#loc6 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":23:21)
#loc7 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":25:30)
#loc8 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":25:19)
#loc9 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":27:30)
#loc10 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":27:19)
#loc11 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":30:18)
#loc12 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":32:18)
#loc13 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":33:18)
#loc14 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":34:19)
#loc15 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":35:20)
#loc16 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":37:21)
#loc17 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":38:21)
#loc18 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":39:20)
#loc19 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":40:19)
#loc20 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":41:21)
#loc21 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":42:20)
#loc22 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":43:20)
#loc23 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":44:25)
#loc24 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":44:37)
#loc25 = loc("inductor_cache/3u/c3uxxyibwsonzcciwtj4hq3nsbvjr22efxpjmt2erccnk6yiiqme.py":44:4)
