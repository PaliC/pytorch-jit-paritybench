//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_col2im_6 // -- Begin function triton_poi_fused_col2im_6
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_1[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_1[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 113, 98, 47, 99, 113, 98, 53, 113, 111, 106, 105, 117, 108, 53, 115, 111, 53, 108, 111, 105, 100, 112, 102, 97, 108, 111, 102, 122, 116, 110, 102, 114, 112, 121, 52, 110, 55, 52, 118, 115, 121, 119, 55, 108, 114, 115, 109, 53, 50, 105, 115, 107, 120, 108, 104, 46, 112, 121};
.global .align 1 .b8 assertMessage_1[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 57, 32, 60, 32, 54};
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 113, 98, 47, 99, 113, 98, 53, 113, 111, 106, 105, 117, 108, 53, 115, 111, 53, 108, 111, 105, 100, 112, 102, 97, 108, 111, 102, 122, 116, 110, 102, 114, 112, 121, 52, 110, 55, 52, 118, 115, 121, 119, 55, 108, 114, 115, 109, 53, 50, 105, 115, 107, 120, 108, 104, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 54};
                                        // @triton_poi_fused_col2im_6
.visible .entry triton_poi_fused_col2im_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused_col2im_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_col2im_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_col2im_6_param_2,
	.param .u32 triton_poi_fused_col2im_6_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<126>;
	.reg .b64 	%rd<57>;
	.loc	1 19 0                          // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:19:0

// %bb.0:
	ld.param.u64 	%rd18, [triton_poi_fused_col2im_6_param_0];
	ld.param.u64 	%rd19, [triton_poi_fused_col2im_6_param_1];
$L__tmp0:
	.loc	1 21 28                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:21:28
	// begin inline asm
	mov.u32 %r8, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:21:33
	shl.b32 	%r11, %r8, 8;
	.loc	1 22 36                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:22:36
	mov.u32 	%r12, %tid.x;
	and.b32  	%r13, %r12, 127;
	.loc	1 22 23                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:22:23
	or.b32  	%r1, %r11, %r13;
	or.b32  	%r2, %r1, 128;
	.loc	1 23 21                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:23:21
	setp.lt.s32 	%p5, %r1, 2304;
	setp.lt.s32 	%p6, %r2, 2304;
	.loc	1 24 21                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:24:21
	mul.hi.s32 	%r14, %r1, 715827883;
	shr.s32 	%r15, %r14, 3;
	shr.u32 	%r16, %r14, 31;
	add.s32 	%r17, %r15, %r16;
	mul.hi.s32 	%r18, %r2, 715827883;
	shr.s32 	%r19, %r18, 3;
	shr.u32 	%r20, %r18, 31;
	add.s32 	%r21, %r19, %r20;
	.loc	1 24 27                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:24:27
	mul.hi.s32 	%r22, %r17, 715827883;
	shr.u32 	%r23, %r22, 31;
	shr.u32 	%r24, %r22, 1;
	add.s32 	%r25, %r24, %r23;
	mul.lo.s32 	%r26, %r25, 12;
	sub.s32 	%r27, %r17, %r26;
	mul.hi.s32 	%r28, %r21, 715827883;
	shr.u32 	%r29, %r28, 31;
	shr.u32 	%r30, %r28, 1;
	add.s32 	%r31, %r30, %r29;
	mul.lo.s32 	%r32, %r31, 12;
	sub.s32 	%r33, %r21, %r32;
	.loc	1 25 21                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:25:21
	shr.s32 	%r35, %r1, 31;
	shr.u32 	%r36, %r35, 30;
	add.s32 	%r37, %r1, %r36;
	shr.s32 	%r38, %r37, 2;
	bfe.s32 	%r39, %r8, 23, 1;
	shr.u32 	%r40, %r39, 30;
	add.s32 	%r41, %r2, %r40;
	shr.s32 	%r42, %r41, 2;
	.loc	1 25 26                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:25:26
	mul.hi.s32 	%r43, %r38, 715827883;
	shr.u32 	%r44, %r43, 31;
	shr.u32 	%r45, %r43, 1;
	add.s32 	%r46, %r45, %r44;
	mul.lo.s32 	%r47, %r46, 12;
	sub.s32 	%r48, %r38, %r47;
	mul.hi.s32 	%r49, %r42, 715827883;
	shr.u32 	%r50, %r49, 31;
	shr.u32 	%r51, %r49, 1;
	add.s32 	%r52, %r51, %r50;
	mul.lo.s32 	%r53, %r52, 12;
	sub.s32 	%r54, %r42, %r53;
	.loc	1 26 19                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:26:19
	and.b32  	%r55, %r37, -4;
	sub.s32 	%r3, %r1, %r55;
	.loc	1 27 26                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:27:26
	shr.u32 	%r56, %r38, 30;
	add.s32 	%r57, %r38, %r56;
	and.b32  	%r58, %r57, -4;
	sub.s32 	%r59, %r38, %r58;
	shr.u32 	%r60, %r42, 30;
	add.s32 	%r61, %r42, %r60;
	and.b32  	%r62, %r61, -4;
	sub.s32 	%r63, %r42, %r62;
	.loc	1 28 21                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:28:21
	shr.u32 	%r64, %r39, 28;
	add.s32 	%r65, %r1, %r64;
	shr.s32 	%r66, %r65, 4;
	add.s32 	%r67, %r2, %r64;
	shr.s32 	%r68, %r67, 4;
	.loc	1 28 27                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:28:27
	mul.hi.s32 	%r69, %r66, 1431655766;
	shr.u32 	%r70, %r69, 31;
	add.s32 	%r71, %r69, %r70;
	mul.lo.s32 	%r72, %r71, 3;
	sub.s32 	%r73, %r66, %r72;
	mul.hi.s32 	%r74, %r68, 1431655766;
	shr.u32 	%r75, %r74, 31;
	add.s32 	%r76, %r74, %r75;
	mul.lo.s32 	%r77, %r76, 3;
	sub.s32 	%r78, %r68, %r77;
	.loc	1 29 27                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:29:27
	shr.u32 	%r79, %r17, 30;
	add.s32 	%r80, %r17, %r79;
	and.b32  	%r81, %r80, -4;
	sub.s32 	%r82, %r17, %r81;
	shr.u32 	%r83, %r21, 30;
	add.s32 	%r84, %r21, %r83;
	and.b32  	%r85, %r84, -4;
	sub.s32 	%r86, %r21, %r85;
	.loc	1 30 21                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:30:21
	shr.s32 	%r87, %r14, 5;
	add.s32 	%r88, %r87, %r16;
	shr.s32 	%r89, %r18, 5;
	add.s32 	%r90, %r89, %r20;
	.loc	1 30 28                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:30:28
	mul.hi.s32 	%r91, %r88, 1431655766;
	shr.u32 	%r92, %r91, 31;
	add.s32 	%r93, %r91, %r92;
	mul.lo.s32 	%r94, %r93, 3;
	sub.s32 	%r95, %r88, %r94;
	mul.hi.s32 	%r96, %r90, 1431655766;
	shr.u32 	%r97, %r96, 31;
	add.s32 	%r98, %r96, %r97;
	mul.lo.s32 	%r99, %r98, 3;
	sub.s32 	%r100, %r90, %r99;
	.loc	1 31 19                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:31:19
	mul.hi.s32 	%r101, %r1, 954437177;
	shr.u32 	%r102, %r101, 31;
	shr.s32 	%r103, %r101, 7;
	add.s32 	%r4, %r103, %r102;
	mul.hi.s32 	%r104, %r2, 954437177;
	shr.u32 	%r105, %r104, 31;
	shr.s32 	%r106, %r104, 7;
	add.s32 	%r5, %r106, %r105;
	.loc	1 32 30                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:32:30
	mul.wide.s32 	%rd20, %r27, 8;
	add.s64 	%rd9, %rd18, %rd20;
	mul.wide.s32 	%rd21, %r33, 8;
	add.s64 	%rd11, %rd18, %rd21;
	.loc	1 32 35                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:32:35
	// begin inline asm
	mov.u64 %rd8, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd8 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd10, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd10 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:33:30
	mul.wide.s32 	%rd22, %r48, 8;
	add.s64 	%rd13, %rd18, %rd22;
	mul.wide.s32 	%rd23, %r54, 8;
	add.s64 	%rd15, %rd18, %rd23;
	.loc	1 33 35                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:33:35
	// begin inline asm
	mov.u64 %rd12, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd12 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd14 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 34 38                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:34:38
	shl.b32 	%r107, %r73, 2;
	shl.b32 	%r108, %r78, 2;
	.loc	1 34 36                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:34:36
	mad.lo.s32 	%r109, %r4, 576, %r3;
	.loc	1 34 43                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:34:43
	add.s32 	%r110, %r109, %r107;
	.loc	1 34 51                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:34:51
	mad.lo.s32 	%r111, %r95, 12, %r110;
	.loc	1 34 59                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:34:59
	mad.lo.s32 	%r112, %r59, 36, %r111;
	.loc	1 34 68                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:34:68
	mad.lo.s32 	%r113, %r82, 144, %r112;
	.loc	1 34 36                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:34:36
	mad.lo.s32 	%r114, %r5, 576, %r3;
	.loc	1 34 43                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:34:43
	add.s32 	%r115, %r114, %r108;
	.loc	1 34 51                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:34:51
	mad.lo.s32 	%r116, %r100, 12, %r115;
	.loc	1 34 59                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:34:59
	mad.lo.s32 	%r117, %r63, 36, %r116;
	.loc	1 34 68                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:34:68
	mad.lo.s32 	%r118, %r86, 144, %r117;
	.loc	1 34 31                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:34:31
	mul.wide.s32 	%rd24, %r113, 4;
	add.s64 	%rd16, %rd19, %rd24;
	mul.wide.s32 	%rd25, %r118, 4;
	add.s64 	%rd17, %rd19, %rd25;
	.loc	1 34 98                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:34:98
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p5 ld.global.b32 { %r9 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p6 ld.global.b32 { %r10 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 36 18                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:36:18
	add.s64 	%rd26, %rd8, 6;
	add.s64 	%rd27, %rd10, 6;
	.loc	1 37 18                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:37:18
	setp.lt.s64 	%p7, %rd8, 0;
	setp.lt.s64 	%p8, %rd10, 0;
	.loc	1 38 32                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:38:32
	selp.b64 	%rd3, %rd26, %rd8, %p7;
	selp.b64 	%rd4, %rd27, %rd10, %p8;
	.loc	1 39 37                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:39:37
	setp.gt.u64 	%p9, %rd3, 5;
	setp.gt.u64 	%p10, %rd4, 5;
	.loc	1 39 50                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:39:50
	and.pred  	%p11, %p5, %p9;
	.loc	1 39 60                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:39:60
	and.pred  	%p12, %p6, %p10;
	or.pred  	%p13, %p11, %p12;
	@!%p13 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	bar.sync 	0;
	.loc	1 40 18                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:40:18
	add.s64 	%rd28, %rd12, 6;
	add.s64 	%rd29, %rd14, 6;
	.loc	1 41 18                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:41:18
	setp.lt.s64 	%p16, %rd12, 0;
	setp.lt.s64 	%p17, %rd14, 0;
	.loc	1 42 32                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:42:32
	selp.b64 	%rd5, %rd28, %rd12, %p16;
	selp.b64 	%rd6, %rd29, %rd14, %p17;
	.loc	1 43 37                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:43:37
	setp.gt.u64 	%p18, %rd5, 5;
	setp.gt.u64 	%p19, %rd6, 5;
	.loc	1 43 50                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:43:50
	and.pred  	%p20, %p5, %p18;
	.loc	1 43 60                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:43:60
	and.pred  	%p21, %p6, %p19;
	or.pred  	%p22, %p20, %p21;
	@!%p22 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:
	.loc	1 0 60                          // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:0:60
	ld.param.u64 	%rd7, [triton_poi_fused_col2im_6_param_2];
	.loc	1 43 60                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:43:60
	bar.sync 	0;
	.loc	1 44 49                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:44:49
	mul.lo.s32 	%r123, %r3, 36;
	.loc	1 44 58                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:44:58
	mul.lo.s32 	%r124, %r4, 144;
	mul.lo.s32 	%r125, %r5, 144;
	.loc	1 44 30                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:44:30
	shl.b64 	%rd32, %rd5, 2;
	add.s64 	%rd33, %rd7, %rd32;
	mul.lo.s64 	%rd34, %rd3, 24;
	add.s64 	%rd35, %rd33, %rd34;
	mul.wide.s32 	%rd36, %r123, 4;
	add.s64 	%rd37, %rd35, %rd36;
	mul.wide.s32 	%rd38, %r124, 4;
	add.s64 	%rd30, %rd37, %rd38;
	shl.b64 	%rd39, %rd6, 2;
	add.s64 	%rd40, %rd7, %rd39;
	mul.lo.s64 	%rd41, %rd4, 24;
	add.s64 	%rd42, %rd40, %rd41;
	add.s64 	%rd43, %rd42, %rd36;
	mul.wide.s32 	%rd44, %r125, 4;
	add.s64 	%rd31, %rd43, %rd44;
	.loc	1 44 70                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:44:70
	// begin inline asm
	mov.u32 %r119, 0x0;
	@%p5 atom.global.gpu.relaxed.add.f32 %r119, [ %rd30 + 0 ], %r9;
	// end inline asm
	// begin inline asm
	mov.u32 %r121, 0x0;
	@%p6 atom.global.gpu.relaxed.add.f32 %r121, [ %rd31 + 0 ], %r10;
	// end inline asm
	.loc	1 44 4                          // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:44:4
	ret;
$L__BB0_1:
	.loc	1 39 60                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:39:60
	mov.u64 	%rd51, assertMessage_0;
	cvta.global.u64 	%rd52, %rd51;
	mov.u64 	%rd53, assertFile_0;
	cvta.global.u64 	%rd54, %rd53;
	mov.u64 	%rd55, assertFunc_0;
	cvta.global.u64 	%rd56, %rd55;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd52;
	.param .b64 param1;
	st.param.b64 	[param1], %rd54;
	.param .b32 param2;
	st.param.b32 	[param2], 39;
	.param .b64 param3;
	st.param.b64 	[param3], %rd56;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__BB0_3:
	.loc	1 43 60                         // cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py:43:60
	mov.u64 	%rd45, assertMessage_1;
	cvta.global.u64 	%rd46, %rd45;
	mov.u64 	%rd47, assertFile_1;
	cvta.global.u64 	%rd48, %rd47;
	mov.u64 	%rd49, assertFunc_1;
	cvta.global.u64 	%rd50, %rd49;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd46;
	.param .b64 param1;
	st.param.b64 	[param1], %rd48;
	.param .b32 param2;
	st.param.b32 	[param2], 43;
	.param .b64 param3;
	st.param.b64 	[param3], %rd50;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qb/cqb5qojiul5so5loidpfalofztnfrpy4n74vsyw7lrsm52iskxlh.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 98
.b8 53
.b8 113
.b8 111
.b8 106
.b8 105
.b8 117
.b8 108
.b8 53
.b8 115
.b8 111
.b8 53
.b8 108
.b8 111
.b8 105
.b8 100
.b8 112
.b8 102
.b8 97
.b8 108
.b8 111
.b8 102
.b8 122
.b8 116
.b8 110
.b8 102
.b8 114
.b8 112
.b8 121
.b8 52
.b8 110
.b8 55
.b8 52
.b8 118
.b8 115
.b8 121
.b8 119
.b8 55
.b8 108
.b8 114
.b8 115
.b8 109
.b8 53
.b8 50
.b8 105
.b8 115
.b8 107
.b8 120
.b8 108
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 98
.b8 0
	}
	.section	.debug_macinfo	{	}
