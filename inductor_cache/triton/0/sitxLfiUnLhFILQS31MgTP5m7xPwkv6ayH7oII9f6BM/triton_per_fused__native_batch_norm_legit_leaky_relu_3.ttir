#loc = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":19:0)
#loc1 = loc(unknown)
#loc9 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":35:57)
#loc16 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":42:59)
#loc33 = loc(callsite(#loc1 at #loc9))
#loc37 = loc(callsite(#loc1 at #loc16))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_leaky_relu_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_0 = arith.constant 1.024000e+03 : f32 loc(#loc1)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<2.000000e-01> : tensor<1024xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1024xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc3)
    %2 = arith.muli %0, %c1024_i32 : i32 loc(#loc4)
    %3 = tt.splat %2 : i32 -> tensor<1024xi32> loc(#loc5)
    %4 = arith.addi %1, %3 : tensor<1024xi32> loc(#loc5)
    %5 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc6)
    %6 = tt.addptr %5, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc6)
    %7 = tt.load %6 : tensor<1024x!tt.ptr<f32>> loc(#loc7)
    %8 = "tt.reduce"(%7) <{axis = 0 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc9)), %arg7: f32 loc(callsite(#loc1 at #loc9))):
      %32 = arith.addf %arg6, %arg7 : f32 loc(#loc39)
      tt.reduce.return %32 : f32 loc(#loc32)
    }) : (tensor<1024xf32>) -> f32 loc(#loc32)
    %9 = arith.addf %8, %cst_1 : f32 loc(#loc35)
    %10 = arith.divf %9, %cst_0 : f32 loc(#loc13)
    %11 = tt.splat %10 : f32 -> tensor<1xf32> loc(#loc13)
    %12 = tt.splat %10 : f32 -> tensor<1024xf32> loc(#loc14)
    %13 = arith.subf %7, %12 : tensor<1024xf32> loc(#loc14)
    %14 = arith.mulf %13, %13 : tensor<1024xf32> loc(#loc15)
    %15 = "tt.reduce"(%14) <{axis = 0 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc16)), %arg7: f32 loc(callsite(#loc1 at #loc16))):
      %32 = arith.addf %arg6, %arg7 : f32 loc(#loc40)
      tt.reduce.return %32 : f32 loc(#loc36)
    }) : (tensor<1024xf32>) -> f32 loc(#loc36)
    %16 = arith.addf %15, %cst_1 : f32 loc(#loc38)
    %17 = arith.divf %16, %cst_0 : f32 loc(#loc18)
    %18 = arith.addf %17, %cst : f32 loc(#loc19)
    %19 = tt.extern_elementwise %18 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc20)
    %20 = tt.splat %19 : f32 -> tensor<1xf32> loc(#loc20)
    %21 = tt.splat %19 : f32 -> tensor<1024xf32> loc(#loc21)
    %22 = arith.mulf %13, %21 : tensor<1024xf32> loc(#loc21)
    %23 = arith.cmpf ogt, %22, %cst_3 : tensor<1024xf32> loc(#loc22)
    %24 = arith.mulf %22, %cst_2 : tensor<1024xf32> loc(#loc23)
    %25 = arith.select %23, %22, %24 : tensor<1024xi1>, tensor<1024xf32> loc(#loc24)
    %26 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc25)
    %27 = tt.addptr %26, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc25)
    tt.store %27, %25 : tensor<1024x!tt.ptr<f32>> loc(#loc26)
    %28 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc27)
    %29 = tt.splat %28 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc27)
    tt.store %29, %20 : tensor<1x!tt.ptr<f32>> loc(#loc28)
    %30 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc29)
    %31 = tt.splat %30 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc29)
    tt.store %31, %11 : tensor<1x!tt.ptr<f32>> loc(#loc30)
    tt.return loc(#loc31)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":24:28)
#loc3 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":27:26)
#loc4 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":32:40)
#loc5 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":32:35)
#loc6 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":32:30)
#loc7 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":32:45)
#loc8 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc12 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":35:44)
#loc13 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":38:18)
#loc14 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":39:18)
#loc15 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":40:19)
#loc17 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":42:45)
#loc18 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":45:20)
#loc19 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":47:20)
#loc20 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":48:28)
#loc21 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":49:20)
#loc22 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":51:20)
#loc23 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":53:20)
#loc24 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":54:35)
#loc25 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":55:25)
#loc26 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":55:47)
#loc27 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":56:25)
#loc28 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":56:37)
#loc29 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":57:25)
#loc30 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":57:36)
#loc31 = loc("inductor_cache/gh/cghz6zoxdujdu7rr2urpymmrjsheq6jinukgn7wegoz2jnrqdm7f.py":57:4)
#loc32 = loc(callsite(#loc8 at #loc9))
#loc34 = loc(callsite(#loc10 at #loc8))
#loc35 = loc(callsite(#loc11 at #loc12))
#loc36 = loc(callsite(#loc8 at #loc16))
#loc38 = loc(callsite(#loc11 at #loc17))
#loc39 = loc(callsite(#loc34 at #loc9))
#loc40 = loc(callsite(#loc34 at #loc16))
