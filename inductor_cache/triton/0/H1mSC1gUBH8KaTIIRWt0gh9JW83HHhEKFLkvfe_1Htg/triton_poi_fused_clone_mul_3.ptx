//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_mul_3 // -- Begin function triton_poi_fused_clone_mul_3
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_clone_mul_3
.visible .entry triton_poi_fused_clone_mul_3(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_mul_3_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_mul_3_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_mul_3_param_2,
	.param .u32 triton_poi_fused_clone_mul_3_param_3,
	.param .u32 triton_poi_fused_clone_mul_3_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<51>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<10>;
	.loc	1 19 0                          // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_clone_mul_3_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused_clone_mul_3_param_1];
$L__tmp0:
	.loc	1 22 28                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:22:33
	shl.b32 	%r13, %r1, 4;
	ld.param.u64 	%rd6, [triton_poi_fused_clone_mul_3_param_2];
	.loc	1 23 44                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:23:44
	mov.u32 	%r14, %tid.x;
	shl.b32 	%r15, %r14, 1;
	and.b32  	%r16, %r15, 14;
	bfe.u32 	%r17, %r14, 3, 4;
	.loc	1 23 23                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:23:23
	or.b32  	%r18, %r13, %r16;
	or.b32  	%r19, %r13, %r17;
	.loc	1 24 21                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:24:21
	setp.lt.s32 	%p2, %r18, 16;
	setp.lt.s32 	%p6, %r19, 16;
	.loc	1 25 28                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:25:33
	shl.b32 	%r20, %r2, 4;
	.loc	1 26 23                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:26:23
	or.b32  	%r21, %r20, %r17;
	or.b32  	%r22, %r20, %r16;
	.loc	1 27 21                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:27:21
	setp.lt.s32 	%p7, %r21, 64;
	setp.lt.s32 	%p8, %r22, 64;
	.loc	1 30 19                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:30:19
	shr.s32 	%r24, %r18, 31;
	shr.u32 	%r25, %r24, 30;
	add.s32 	%r26, %r18, %r25;
	shr.s32 	%r27, %r26, 2;
	.loc	1 29 19                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:29:19
	and.b32  	%r28, %r26, -4;
	sub.s32 	%r29, %r18, %r28;
	.loc	1 32 35                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:32:35
	mad.lo.s32 	%r30, %r21, 12, %r29;
	.loc	1 32 43                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:32:43
	mad.lo.s32 	%r31, %r27, 768, %r30;
	.loc	1 32 30                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:32:30
	mul.wide.s32 	%rd7, %r31, 4;
	add.s64 	%rd1, %rd4, %rd7;
	.loc	1 32 60                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:32:60
	and.pred  	%p1, %p2, %p7;
	and.pred  	%p5, %p6, %p8;
	.loc	1 32 52                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:32:52
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	.loc	1 33 30                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:33:30
	mul.wide.s32 	%rd8, %r29, 4;
	add.s64 	%rd2, %rd5, %rd8;
	.loc	1 33 35                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:33:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	.loc	1 34 18                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:34:18
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 37 33                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:37:33
	shl.b32 	%r32, %r19, 6;
	.loc	1 37 30                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:37:30
	add.s32 	%r33, %r22, %r32;
	.loc	1 37 25                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:37:25
	mul.wide.s32 	%rd9, %r33, 4;
	add.s64 	%rd3, %rd6, %rd9;
	.loc	1 37 44                         // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:37:44
	shl.b32 	%r34, %r14, 5;
	and.b32  	%r35, %r34, 224;
	or.b32  	%r36, %r35, %r17;
	shr.u32 	%r37, %r35, 2;
	mov.u32 	%r38, global_smem;
	add.s32 	%r39, %r38, %r37;
	shl.b32 	%r40, %r36, 2;
	add.s32 	%r7, %r39, %r40;
	mov.b32 	%r8, %f5;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	or.b32  	%r41, %r35, 16;
	shr.u32 	%r42, %r41, 2;
	add.s32 	%r43, %r38, %r42;
	add.s32 	%r44, %r43, %r40;
	add.s32 	%r9, %r44, 64;
	mov.b32 	%r10, %f6;
	// begin inline asm
	@%p3 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r45, %r14, 1;
	and.b32  	%r46, %r45, 60;
	add.s32 	%r47, %r38, %r46;
	shl.b32 	%r48, %r14, 3;
	and.b32  	%r49, %r48, 1016;
	add.s32 	%r50, %r47, %r49;
	ld.shared.u32 	%r11, [%r50];
	ld.shared.u32 	%r12, [%r50+4];
	// begin inline asm
	@%p5 st.global.v2.b32 [ %rd3 + 0 ], { %r11, %r12 };
	// end inline asm
	.loc	1 37 4                          // cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py:37:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/dn/cdn7fqkbkcje6aztrvf6vvm5cohobddtfb66drk4vn6kgzarwp5w.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 110
.b8 55
.b8 102
.b8 113
.b8 107
.b8 98
.b8 107
.b8 99
.b8 106
.b8 101
.b8 54
.b8 97
.b8 122
.b8 116
.b8 114
.b8 118
.b8 102
.b8 54
.b8 118
.b8 118
.b8 109
.b8 53
.b8 99
.b8 111
.b8 104
.b8 111
.b8 98
.b8 100
.b8 100
.b8 116
.b8 102
.b8 98
.b8 54
.b8 54
.b8 100
.b8 114
.b8 107
.b8 52
.b8 118
.b8 110
.b8 54
.b8 107
.b8 103
.b8 122
.b8 97
.b8 114
.b8 119
.b8 112
.b8 53
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
