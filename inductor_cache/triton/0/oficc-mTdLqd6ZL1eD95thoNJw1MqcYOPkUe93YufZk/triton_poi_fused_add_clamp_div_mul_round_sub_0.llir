; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_clamp_div_mul_round_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, i32 %10) local_unnamed_addr !dbg !7 {
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %13 = shl i32 %12, 7, !dbg !11
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %15 = and i32 %14, 127, !dbg !12
  %16 = or disjoint i32 %13, %15, !dbg !13
  %17 = icmp slt i32 %16, 256, !dbg !14
  %18 = sdiv i32 %16, 16, !dbg !15
  %19 = srem i32 %18, 4, !dbg !16
  %20 = sext i32 %16 to i64, !dbg !17
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !17
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %17) #1, !dbg !18
  %23 = bitcast i32 %22 to float, !dbg !18
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !19
  %25 = bitcast i32 %24 to float, !dbg !19
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #1, !dbg !20
  %27 = bitcast i32 %26 to float, !dbg !20
  %28 = sext i32 %19 to i64, !dbg !21
  %29 = getelementptr float, ptr addrspace(1) %3, i64 %28, !dbg !21
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %17) #1, !dbg !22
  %31 = bitcast i32 %30 to float, !dbg !22
  %32 = getelementptr float, ptr addrspace(1) %4, i64 %28, !dbg !23
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %17) #1, !dbg !24
  %34 = bitcast i32 %33 to float, !dbg !24
  %35 = getelementptr float, ptr addrspace(1) %5, i64 %28, !dbg !25
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %17) #1, !dbg !26
  %37 = bitcast i32 %36 to float, !dbg !26
  %38 = getelementptr float, ptr addrspace(1) %6, i64 %28, !dbg !27
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %17) #1, !dbg !28
  %40 = bitcast i32 %39 to float, !dbg !28
  %41 = fmul float %25, 0x3F70101020000000, !dbg !29
  %42 = fmul float %41, 0.000000e+00, !dbg !30
  %43 = fsub float %42, %27, !dbg !31
  %44 = fadd float %43, %23, !dbg !32
  %45 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %44, float %41) #1, !dbg !33
  %.inv = fcmp ole float %45, 0.000000e+00, !dbg !34
  %46 = select i1 %.inv, float 0.000000e+00, float %45, !dbg !34
  %47 = fcmp olt float %46, 2.550000e+02, !dbg !38
  %48 = fcmp uno float %46, 0.000000e+00, !dbg !40
  %49 = or i1 %47, %48, !dbg !41
  %50 = select i1 %49, float %46, float 2.550000e+02, !dbg !42
  %51 = tail call float @llvm.nvvm.round.f(float %50) #1, !dbg !43
  %52 = fmul float %41, %51, !dbg !44
  %53 = fsub float %27, %42, !dbg !45
  %54 = fadd float %53, %52, !dbg !46
  %55 = fsub float %54, %31, !dbg !47
  %56 = fadd float %34, 0x3EE4F8B580000000, !dbg !48
  %57 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %55, float %56) #1, !dbg !49
  %58 = fmul float %57, %37, !dbg !50
  %59 = fadd float %58, %40, !dbg !51
  %60 = getelementptr float, ptr addrspace(1) %7, i64 %20, !dbg !52
  %61 = bitcast float %54 to i32, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %61, ptr addrspace(1) %60, i1 %17) #1, !dbg !53
  %62 = getelementptr float, ptr addrspace(1) %8, i64 %20, !dbg !54
  %63 = bitcast float %59 to i32, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %63, ptr addrspace(1) %62, i1 %17) #1, !dbg !55
  %64 = getelementptr float, ptr addrspace(1) %9, i64 %20, !dbg !56
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %61, ptr addrspace(1) %64, i1 %17) #1, !dbg !57
  ret void, !dbg !58
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cj6rrp2hsk5s2gtp4a3qdoa6sljo3slaoskd7yyyhg7tgwamjfuw.py", directory: "inductor_cache/j6")
!4 = !{ptr @triton_poi_fused_add_clamp_div_mul_round_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_clamp_div_mul_round_sub_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_clamp_div_mul_round_sub_0", linkageName: "triton_poi_fused_add_clamp_div_mul_round_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 19, scope: !7)
!20 = !DILocation(line: 29, column: 19, scope: !7)
!21 = !DILocation(line: 31, column: 31, scope: !7)
!22 = !DILocation(line: 31, column: 36, scope: !7)
!23 = !DILocation(line: 32, column: 31, scope: !7)
!24 = !DILocation(line: 32, column: 36, scope: !7)
!25 = !DILocation(line: 33, column: 31, scope: !7)
!26 = !DILocation(line: 33, column: 36, scope: !7)
!27 = !DILocation(line: 34, column: 31, scope: !7)
!28 = !DILocation(line: 34, column: 36, scope: !7)
!29 = !DILocation(line: 36, column: 18, scope: !7)
!30 = !DILocation(line: 38, column: 18, scope: !7)
!31 = !DILocation(line: 39, column: 18, scope: !7)
!32 = !DILocation(line: 40, column: 19, scope: !7)
!33 = !DILocation(line: 41, column: 20, scope: !7)
!34 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !37)
!35 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!36 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!37 = !DILocation(line: 42, column: 42, scope: !7)
!38 = !DILocation(line: 110, column: 15, scope: !35, inlinedAt: !39)
!39 = !DILocation(line: 44, column: 42, scope: !7)
!40 = !DILocation(line: 112, column: 21, scope: !35, inlinedAt: !39)
!41 = !DILocation(line: 112, column: 16, scope: !35, inlinedAt: !39)
!42 = !DILocation(line: 113, column: 29, scope: !35, inlinedAt: !39)
!43 = !DILocation(line: 45, column: 32, scope: !7)
!44 = !DILocation(line: 46, column: 20, scope: !7)
!45 = !DILocation(line: 47, column: 19, scope: !7)
!46 = !DILocation(line: 48, column: 20, scope: !7)
!47 = !DILocation(line: 49, column: 20, scope: !7)
!48 = !DILocation(line: 51, column: 20, scope: !7)
!49 = !DILocation(line: 52, column: 20, scope: !7)
!50 = !DILocation(line: 53, column: 20, scope: !7)
!51 = !DILocation(line: 54, column: 20, scope: !7)
!52 = !DILocation(line: 55, column: 25, scope: !7)
!53 = !DILocation(line: 55, column: 37, scope: !7)
!54 = !DILocation(line: 56, column: 25, scope: !7)
!55 = !DILocation(line: 56, column: 37, scope: !7)
!56 = !DILocation(line: 57, column: 25, scope: !7)
!57 = !DILocation(line: 57, column: 37, scope: !7)
!58 = !DILocation(line: 57, column: 4, scope: !7)
