//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mse_loss_backward_sub_4 // -- Begin function triton_poi_fused_add_mse_loss_backward_sub_4
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 119, 103, 47, 99, 119, 103, 101, 108, 100, 118, 119, 105, 52, 104, 119, 106, 55, 99, 120, 114, 97, 104, 114, 114, 107, 101, 106, 100, 53, 120, 101, 111, 114, 50, 99, 53, 122, 98, 55, 117, 55, 54, 106, 53, 54, 97, 120, 97, 97, 115, 107, 122, 52, 108, 115, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 53, 32, 60, 32, 52};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_mse_loss_backward_sub_4
.visible .entry triton_poi_fused_add_mse_loss_backward_sub_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mse_loss_backward_sub_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mse_loss_backward_sub_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mse_loss_backward_sub_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mse_loss_backward_sub_4_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mse_loss_backward_sub_4_param_4,
	.param .u32 triton_poi_fused_add_mse_loss_backward_sub_4_param_5,
	.param .u32 triton_poi_fused_add_mse_loss_backward_sub_4_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<91>;
	.reg .f32 	%f<11>;
	.reg .b64 	%rd<38>;
	.loc	1 19 0                          // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused_add_mse_loss_backward_sub_4_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused_add_mse_loss_backward_sub_4_param_1];
$L__tmp0:
	.loc	1 22 28                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:22:28
	// begin inline asm
	mov.u32 %r17, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:22:33
	shl.b32 	%r1, %r17, 4;
	.loc	1 23 44                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:23:44
	mov.u32 	%r25, %tid.x;
	bfe.u32 	%r2, %r25, 3, 4;
	shl.b32 	%r26, %r25, 1;
	and.b32  	%r3, %r26, 14;
	.loc	1 23 23                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:23:23
	or.b32  	%r27, %r1, %r2;
	.loc	1 25 28                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:25:28
	// begin inline asm
	mov.u32 %r18, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:25:33
	shl.b32 	%r4, %r18, 4;
	.loc	1 26 23                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:26:23
	or.b32  	%r28, %r4, %r3;
	.loc	1 30 19                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:30:19
	shr.s32 	%r29, %r27, 31;
	shr.u32 	%r30, %r29, 30;
	add.s32 	%r31, %r27, %r30;
	shr.s32 	%r6, %r31, 2;
	.loc	1 32 38                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:32:38
	shl.b32 	%r32, %r27, 4;
	.loc	1 32 35                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:32:35
	add.s32 	%r33, %r28, %r32;
	.loc	1 32 30                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:32:30
	mul.wide.s32 	%rd13, %r33, 4;
	add.s64 	%rd7, %rd11, %rd13;
	.loc	1 32 51                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:32:51
	max.s32 	%r34, %r27, %r28;
	setp.gt.s32 	%p6, %r34, 15;
	setp.lt.s32 	%p1, %r34, 16;
	.loc	1 32 43                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:32:43
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p1 ld.global.v2.b32 { %r19, %r20 }, [ %rd7 + 0 ];
	// end inline asm
	shl.b32 	%r35, %r25, 5;
	and.b32  	%r7, %r35, 224;
	or.b32  	%r8, %r7, %r2;
	shr.u32 	%r36, %r7, 3;
	add.s32 	%r10, %r36, %r8;
	shl.b32 	%r37, %r10, 2;
	mov.u32 	%r38, global_smem;
	add.s32 	%r21, %r38, %r37;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.b32 [ %r21 + 0 ], %r19;
	// end inline asm
	or.b32  	%r39, %r7, 16;
	shr.u32 	%r12, %r39, 4;
	shl.b32 	%r40, %r12, 1;
	add.s32 	%r13, %r40, %r8;
	shl.b32 	%r41, %r13, 2;
	add.s32 	%r42, %r38, %r41;
	add.s32 	%r23, %r42, 64;
	// begin inline asm
	@%p4 st.shared.b32 [ %r23 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	.loc	1 33 38                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:33:38
	shl.b32 	%r45, %r6, 4;
	.loc	1 33 35                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:33:35
	add.s32 	%r46, %r45, %r28;
	.loc	1 33 30                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:33:30
	mul.wide.s32 	%rd14, %r46, 8;
	add.s64 	%rd10, %rd12, %rd14;
	.loc	1 33 43                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:33:43
	// begin inline asm
	mov.u64 %rd8, 0x0;
	mov.u64 %rd9, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd8, %rd9 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 37 32                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:37:32
	shr.u64 	%rd15, %rd8, 61;
	shr.u64 	%rd16, %rd9, 61;
	and.b64  	%rd17, %rd16, 4;
	and.b64  	%rd18, %rd15, 4;
	add.s64 	%rd2, %rd18, %rd8;
	add.s64 	%rd3, %rd17, %rd9;
	.loc	1 38 68                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:38:68
	or.b64  	%rd19, %rd2, %rd3;
	setp.lt.u64 	%p7, %rd19, 4;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 68                          // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:0:68
	ld.param.u64 	%rd6, [triton_poi_fused_add_mse_loss_backward_sub_4_param_4];
	ld.param.u64 	%rd5, [triton_poi_fused_add_mse_loss_backward_sub_4_param_3];
	ld.param.u64 	%rd4, [triton_poi_fused_add_mse_loss_backward_sub_4_param_2];
	cvt.s64.s32 	%rd1, %r33;
	and.b32  	%r9, %r26, 254;
	bfe.u32 	%r14, %r26, 4, 4;
	and.b32  	%r43, %r25, 127;
	add.s32 	%r15, %r14, %r43;
	shl.b32 	%r44, %r15, 3;
	add.s32 	%r16, %r38, %r44;
	ld.shared.v2.f32 	{%f1, %f2}, [%r16];
	.loc	1 26 23                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:26:23
	or.b32  	%r59, %r4, %r2;
	.loc	1 23 23                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:23:23
	or.b32  	%r60, %r1, %r3;
	.loc	1 32 51                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:32:51
	max.s32 	%r61, %r60, %r59;
	setp.lt.s32 	%p15, %r61, 16;
	.loc	1 30 19                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:30:19
	shr.s32 	%r63, %r60, 31;
	shr.u32 	%r64, %r63, 30;
	add.s32 	%r65, %r60, %r64;
	.loc	1 31 19                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:31:19
	and.b32  	%r66, %r65, -4;
	sub.s32 	%r67, %r60, %r66;
	shl.b32 	%r68, %r6, 2;
	sub.s32 	%r69, %r27, %r68;
	.loc	1 38 68                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:38:68
	bar.sync 	0;
	.loc	1 39 30                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:39:30
	shl.b64 	%rd25, %rd2, 4;
	add.s64 	%rd26, %rd4, %rd25;
	mul.wide.s32 	%rd27, %r69, 4;
	add.s64 	%rd20, %rd26, %rd27;
	shl.b64 	%rd28, %rd3, 4;
	add.s64 	%rd29, %rd4, %rd28;
	add.s64 	%rd21, %rd29, %rd27;
	.loc	1 39 44                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:39:44
	bar.sync 	0;
	add.s32 	%r47, %r21, %r37;
	// begin inline asm
	@%p4 st.shared.b64 [ %r47 + 0 ], %rd20;
	// end inline asm
	shl.b32 	%r71, %r13, 3;
	add.s32 	%r73, %r38, %r71;
	add.s32 	%r48, %r73, 128;
	// begin inline asm
	@%p4 st.shared.b64 [ %r48 + 0 ], %rd21;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r75, %r16, %r44;
	ld.shared.u64 	%rd22, [%r75];
	// begin inline asm
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	@%p15 ld.global.v2.b32 { %r49, %r50 }, [ %rd22 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r49;
	mov.b32 	%f4, %r50;
	.loc	1 40 18                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:40:18
	sub.f32 	%f5, %f3, %f1;
	sub.f32 	%f6, %f4, %f2;
	.loc	1 41 18                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:41:18
	add.f32 	%f7, %f1, %f5;
	add.f32 	%f8, %f2, %f6;
	.loc	1 43 19                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:43:19
	mul.f32 	%f9, %f5, 0f3C000000;
	mul.f32 	%f10, %f6, 0f3C000000;
	.loc	1 44 25                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:44:25
	shl.b64 	%rd30, %rd1, 2;
	add.s64 	%rd23, %rd5, %rd30;
	.loc	1 44 44                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:44:44
	bar.sync 	0;
	shr.u32 	%r76, %r7, 2;
	add.s32 	%r77, %r38, %r76;
	shl.b32 	%r78, %r8, 2;
	add.s32 	%r51, %r77, %r78;
	mov.b32 	%r52, %f7;
	// begin inline asm
	@%p4 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	shl.b32 	%r79, %r12, 2;
	add.s32 	%r80, %r38, %r79;
	add.s32 	%r81, %r80, %r78;
	add.s32 	%r53, %r81, 64;
	mov.b32 	%r54, %f8;
	// begin inline asm
	@%p4 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r82, %r14, 2;
	add.s32 	%r83, %r38, %r82;
	shl.b32 	%r84, %r9, 2;
	add.s32 	%r85, %r83, %r84;
	ld.shared.u32 	%r55, [%r85];
	ld.shared.u32 	%r56, [%r85+4];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd23 + 0 ], { %r55, %r56 };
	// end inline asm
	.loc	1 45 32                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:45:32
	shl.b32 	%r86, %r59, 2;
	.loc	1 45 30                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:45:30
	add.s32 	%r87, %r86, %r67;
	.loc	1 45 40                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:45:40
	shl.b32 	%r88, %r65, 4;
	and.b32  	%r89, %r88, -64;
	.loc	1 45 37                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:45:37
	add.s32 	%r90, %r87, %r89;
	.loc	1 45 25                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:45:25
	mul.wide.s32 	%rd31, %r90, 4;
	add.s64 	%rd24, %rd6, %rd31;
	.loc	1 45 52                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:45:52
	mov.b32 	%r57, %f9;
	mov.b32 	%r58, %f10;
	// begin inline asm
	@%p15 st.global.v2.b32 [ %rd24 + 0 ], { %r57, %r58 };
	// end inline asm
	.loc	1 45 4                          // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:45:4
	ret;
$L__BB0_1:
	.loc	1 38 68                         // cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py:38:68
	mov.u64 	%rd32, assertMessage_0;
	cvta.global.u64 	%rd33, %rd32;
	mov.u64 	%rd34, assertFile_0;
	cvta.global.u64 	%rd35, %rd34;
	mov.u64 	%rd36, assertFunc_0;
	cvta.global.u64 	%rd37, %rd36;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd33;
	.param .b64 param1;
	st.param.b64 	[param1], %rd35;
	.param .b32 param2;
	st.param.b32 	[param2], 38;
	.param .b64 param3;
	st.param.b64 	[param3], %rd37;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 2
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/wg/cwgeldvwi4hwj7cxrahrrkejd5xeor2c5zb7u76j56axaaskz4ls.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 103
.b8 101
.b8 108
.b8 100
.b8 118
.b8 119
.b8 105
.b8 52
.b8 104
.b8 119
.b8 106
.b8 55
.b8 99
.b8 120
.b8 114
.b8 97
.b8 104
.b8 114
.b8 114
.b8 107
.b8 101
.b8 106
.b8 100
.b8 53
.b8 120
.b8 101
.b8 111
.b8 114
.b8 50
.b8 99
.b8 53
.b8 122
.b8 98
.b8 55
.b8 117
.b8 55
.b8 54
.b8 106
.b8 53
.b8 54
.b8 97
.b8 120
.b8 97
.b8 97
.b8 115
.b8 107
.b8 122
.b8 52
.b8 108
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 103
.b8 0
	}
	.section	.debug_macinfo	{	}
