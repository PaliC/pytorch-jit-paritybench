#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":19:0)
#loc1 = loc(unknown)
#loc18 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":41:37)
#loc25 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":43:68)
#loc51 = loc(callsite(#loc1 at #loc18))
#loc57 = loc(callsite(#loc1 at #loc25))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_leaky_relu_max_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":19:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<2.000000e-01> : tensor<1x64xf32, #blocked> loc(#loc1)
    %true = arith.constant true loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c8192_i32 = arith.constant 8192 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<128> : tensor<1x64xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc3)
    %2 = tt.expand_dims %1 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc3)
    %3 = arith.remsi %0, %c128_i32 : i32 loc(#loc4)
    %4 = arith.divsi %0, %c128_i32 : i32 loc(#loc5)
    %5 = arith.remsi %4, %c64_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c8192_i32 : i32 loc(#loc7)
    %7 = arith.muli %2, %cst_1 : tensor<1x64xi32, #blocked> loc(#loc8)
    %8 = tt.splat %3 : i32 -> tensor<1x64xi32, #blocked> loc(#loc9)
    %9 = arith.addi %8, %7 : tensor<1x64xi32, #blocked> loc(#loc9)
    %10 = arith.muli %4, %c8192_i32 : i32 loc(#loc10)
    %11 = tt.splat %10 : i32 -> tensor<1x64xi32, #blocked> loc(#loc11)
    %12 = arith.addi %9, %11 : tensor<1x64xi32, #blocked> loc(#loc11)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc12)
    %14 = tt.addptr %13, %12 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc12)
    %15 = tt.load %14 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc13)
    %16 = arith.cmpf ogt, %15, %cst : tensor<1x64xf32, #blocked> loc(#loc14)
    %17 = arith.mulf %15, %cst_0 : tensor<1x64xf32, #blocked> loc(#loc15)
    %18 = arith.select %16, %15, %17 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc16)
    %19 = "tt.reduce"(%18) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc18)), %arg6: f32 loc(callsite(#loc1 at #loc18))):
      %32 = arith.cmpf ogt, %arg5, %arg6 : f32 loc(#loc72)
      %33 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc73)
      %34 = arith.ori %32, %33 : i1 loc(#loc74)
      %35 = arith.select %34, %arg5, %arg6 : f32 loc(#loc75)
      tt.reduce.return %35 : f32 loc(#loc50)
    }) : (tensor<1x64xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc50)
    %20 = tt.expand_dims %19 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc23)
    %21:2 = "tt.reduce"(%18, %2) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc25)), %arg6: i32 loc(callsite(#loc1 at #loc25)), %arg7: f32 loc(callsite(#loc1 at #loc25)), %arg8: i32 loc(callsite(#loc1 at #loc25))):
      %32 = arith.cmpf ogt, %arg5, %arg7 : f32 loc(#loc76)
      %33 = arith.cmpf oeq, %arg5, %arg7 : f32 loc(#loc77)
      %34 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc78)
      %35 = arith.cmpf une, %arg7, %arg7 : f32 loc(#loc79)
      %36 = arith.xori %35, %true : i1 loc(#loc80)
      %37 = arith.andi %34, %36 : i1 loc(#loc81)
      %38 = arith.ori %32, %37 : i1 loc(#loc82)
      %39 = arith.andi %34, %35 : i1 loc(#loc83)
      %40 = arith.ori %33, %39 : i1 loc(#loc84)
      %41 = arith.cmpi slt, %arg6, %arg8 : i32 loc(#loc85)
      %42 = arith.andi %40, %41 : i1 loc(#loc86)
      %43 = arith.ori %38, %42 : i1 loc(#loc87)
      %44 = arith.select %43, %arg5, %arg7 : f32 loc(#loc88)
      %45 = arith.select %43, %arg6, %arg8 : i32 loc(#loc89)
      tt.reduce.return %44, %45 : f32, i32 loc(#loc56)
    }) : (tensor<1x64xf32, #blocked>, tensor<1x64xi32, #blocked>) -> (tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>) loc(#loc56)
    %22 = tt.expand_dims %21#1 {axis = 1 : i32} : tensor<1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xi32, #blocked> loc(#loc40)
    %23 = arith.muli %3, %c64_i32 : i32 loc(#loc41)
    %24 = arith.addi %5, %23 : i32 loc(#loc42)
    %25 = arith.muli %6, %c8192_i32 : i32 loc(#loc43)
    %26 = arith.addi %24, %25 : i32 loc(#loc44)
    %27 = tt.addptr %arg1, %26 : !tt.ptr<f32>, i32 loc(#loc45)
    %28 = tt.splat %27 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc46)
    tt.store %28, %20 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc46)
    %29 = tt.addptr %arg2, %26 : !tt.ptr<i64>, i32 loc(#loc47)
    %30 = arith.extsi %22 : tensor<1x1xi32, #blocked> to tensor<1x1xi64, #blocked> loc(#loc48)
    %31 = tt.splat %29 : !tt.ptr<i64> -> tensor<1x1x!tt.ptr<i64>, #blocked> loc(#loc48)
    tt.store %31, %30 : tensor<1x1x!tt.ptr<i64>, #blocked> loc(#loc48)
    tt.return loc(#loc49)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":23:28)
#loc3 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":26:34)
#loc4 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":30:19)
#loc5 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":31:19)
#loc6 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":32:28)
#loc7 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":33:19)
#loc8 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":34:39)
#loc9 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":34:35)
#loc10 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":34:49)
#loc11 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":34:44)
#loc12 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":34:30)
#loc13 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":34:54)
#loc14 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":36:18)
#loc15 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":38:18)
#loc16 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":39:32)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc23 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":41:40)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":173:42)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":152:21)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":153:23)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":155:29)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":156:29)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:32)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:28)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:16)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":159:29)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":159:17)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:31)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:21)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:12)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":163:35)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":163:69)
#loc40 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":44:20)
#loc41 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":45:33)
#loc42 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":45:30)
#loc43 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":45:43)
#loc44 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":45:38)
#loc45 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":45:25)
#loc46 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":45:54)
#loc47 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":46:25)
#loc48 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":46:54)
#loc49 = loc("inductor_cache/wz/cwzexd3kobkxrmfh3w6exwobhjemnzwa454g6ma3fsl2dvwpyd3v.py":46:4)
#loc50 = loc(callsite(#loc17 at #loc18))
#loc52 = loc(callsite(#loc19 at #loc17))
#loc53 = loc(callsite(#loc20 at #loc17))
#loc54 = loc(callsite(#loc21 at #loc17))
#loc55 = loc(callsite(#loc22 at #loc17))
#loc56 = loc(callsite(#loc24 at #loc25))
#loc58 = loc(callsite(#loc26 at #loc24))
#loc59 = loc(callsite(#loc27 at #loc24))
#loc60 = loc(callsite(#loc28 at #loc24))
#loc61 = loc(callsite(#loc29 at #loc24))
#loc62 = loc(callsite(#loc30 at #loc24))
#loc63 = loc(callsite(#loc31 at #loc24))
#loc64 = loc(callsite(#loc32 at #loc24))
#loc65 = loc(callsite(#loc33 at #loc24))
#loc66 = loc(callsite(#loc34 at #loc24))
#loc67 = loc(callsite(#loc35 at #loc24))
#loc68 = loc(callsite(#loc36 at #loc24))
#loc69 = loc(callsite(#loc37 at #loc24))
#loc70 = loc(callsite(#loc38 at #loc24))
#loc71 = loc(callsite(#loc39 at #loc24))
#loc72 = loc(callsite(#loc52 at #loc18))
#loc73 = loc(callsite(#loc53 at #loc18))
#loc74 = loc(callsite(#loc54 at #loc18))
#loc75 = loc(callsite(#loc55 at #loc18))
#loc76 = loc(callsite(#loc58 at #loc25))
#loc77 = loc(callsite(#loc59 at #loc25))
#loc78 = loc(callsite(#loc60 at #loc25))
#loc79 = loc(callsite(#loc61 at #loc25))
#loc80 = loc(callsite(#loc62 at #loc25))
#loc81 = loc(callsite(#loc63 at #loc25))
#loc82 = loc(callsite(#loc64 at #loc25))
#loc83 = loc(callsite(#loc65 at #loc25))
#loc84 = loc(callsite(#loc66 at #loc25))
#loc85 = loc(callsite(#loc67 at #loc25))
#loc86 = loc(callsite(#loc68 at #loc25))
#loc87 = loc(callsite(#loc69 at #loc25))
#loc88 = loc(callsite(#loc70 at #loc25))
#loc89 = loc(callsite(#loc71 at #loc25))
