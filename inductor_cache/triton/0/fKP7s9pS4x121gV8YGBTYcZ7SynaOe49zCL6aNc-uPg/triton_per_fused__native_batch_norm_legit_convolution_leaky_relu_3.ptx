//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3 // -- Begin function triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3
.visible .entry triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3_param_4,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3_param_5,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<52>;
	.reg .b32 	%r<231>;
	.reg .f32 	%f<146>;
	.reg .b64 	%rd<33>;
	.loc	1 19 0                          // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd19, [triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3_param_0];
	ld.param.u64 	%rd20, [triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3_param_1];
$L__tmp0:
	.loc	1 23 28                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:23:33
	shl.b32 	%r94, %r1, 3;
	ld.param.u64 	%rd21, [triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3_param_2];
	ld.param.u64 	%rd22, [triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3_param_3];
	.loc	1 24 44                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:24:44
	mov.u32 	%r95, %tid.x;
	ld.param.u64 	%rd23, [triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3_param_4];
	bfe.u32 	%r96, %r95, 6, 1;
	or.b32  	%r97, %r96, 2;
	or.b32  	%r98, %r96, 4;
	or.b32  	%r99, %r96, 6;
	and.b32  	%r100, %r95, 31;
	and.b32  	%r101, %r95, 7;
	.loc	1 24 23                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:24:23
	or.b32  	%r102, %r94, %r96;
	or.b32  	%r103, %r94, %r97;
	or.b32  	%r104, %r94, %r98;
	or.b32  	%r105, %r94, %r99;
	.loc	1 25 21                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:25:21
	setp.lt.s32 	%p9, %r102, 2048;
	setp.lt.s32 	%p10, %r103, 2048;
	setp.lt.s32 	%p11, %r104, 2048;
	setp.lt.s32 	%p12, %r105, 2048;
	.loc	1 26 34                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:26:34
	and.b32  	%r106, %r95, 63;
	.loc	1 28 21                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:28:21
	setp.lt.u32 	%p43, %r106, 49;
	.loc	1 31 19                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:31:19
	bfe.s32 	%r107, %r1, 28, 1;
	shr.u32 	%r108, %r107, 23;
	add.s32 	%r109, %r102, %r108;
	and.b32  	%r110, %r109, -512;
	sub.s32 	%r111, %r102, %r110;
	add.s32 	%r112, %r103, %r108;
	and.b32  	%r113, %r112, -512;
	sub.s32 	%r114, %r103, %r113;
	add.s32 	%r115, %r104, %r108;
	and.b32  	%r116, %r115, -512;
	sub.s32 	%r117, %r104, %r116;
	add.s32 	%r118, %r105, %r108;
	and.b32  	%r119, %r118, -512;
	sub.s32 	%r120, %r105, %r119;
	.loc	1 32 39                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:32:39
	mad.lo.s32 	%r121, %r102, 49, %r106;
	mad.lo.s32 	%r122, %r103, 49, %r106;
	mad.lo.s32 	%r123, %r104, 49, %r106;
	mad.lo.s32 	%r124, %r105, 49, %r106;
	.loc	1 32 34                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:32:34
	mul.wide.s32 	%rd24, %r121, 4;
	add.s64 	%rd1, %rd19, %rd24;
	mul.wide.s32 	%rd25, %r122, 4;
	add.s64 	%rd2, %rd19, %rd25;
	mul.wide.s32 	%rd26, %r123, 4;
	add.s64 	%rd3, %rd19, %rd26;
	mul.wide.s32 	%rd27, %r124, 4;
	add.s64 	%rd4, %rd19, %rd27;
	.loc	1 32 55                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:32:55
	and.pred  	%p1, %p43, %p9;
	and.pred  	%p3, %p43, %p10;
	and.pred  	%p5, %p43, %p11;
	and.pred  	%p7, %p43, %p12;
	mov.b32 	%r3, 0;
	.loc	1 32 47                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	.loc	1 33 30                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:33:30
	mul.wide.s32 	%rd28, %r111, 4;
	add.s64 	%rd5, %rd20, %rd28;
	mul.wide.s32 	%rd29, %r114, 4;
	add.s64 	%rd6, %rd20, %rd29;
	mul.wide.s32 	%rd30, %r117, 4;
	add.s64 	%rd7, %rd20, %rd30;
	mul.wide.s32 	%rd31, %r120, 4;
	add.s64 	%rd8, %rd20, %rd31;
	.loc	1 33 35                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:33:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r10 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r11 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r12 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p12 ld.global.L1::evict_last.b32 { %r13 }, [ %rd8 + 0 ];
	// end inline asm
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p13, %r100, 0;
	shr.u32 	%r125, %r95, 3;
	and.b32  	%r126, %r125, 4;
	shl.b32 	%r127, %r96, 3;
	or.b32  	%r128, %r127, %r126;
	mov.u32 	%r129, global_smem;
	add.s32 	%r14, %r129, %r128;
	shl.b32 	%r130, %r97, 3;
	or.b32  	%r131, %r130, %r126;
	add.s32 	%r16, %r129, %r131;
	shl.b32 	%r132, %r98, 3;
	or.b32  	%r133, %r132, %r126;
	add.s32 	%r18, %r129, %r133;
	shl.b32 	%r134, %r99, 3;
	or.b32  	%r135, %r134, %r126;
	add.s32 	%r20, %r129, %r135;
	setp.lt.s32 	%p17, %r95, 16;
	shl.b32 	%r136, %r95, 2;
	add.s32 	%r23, %r129, %r136;
	and.b32  	%r137, %r95, 1;
	setp.eq.b32 	%p44, %r137, 1;
	not.pred 	%p45, %p44;
	and.pred  	%p18, %p17, %p45;
	add.s32 	%r138, %r129, %r127;
	add.s32 	%r139, %r129, %r130;
	add.s32 	%r140, %r129, %r132;
	add.s32 	%r141, %r129, %r134;
$L__tmp2:
	.loc	1 42 19                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:42:19
	shl.b32 	%r142, %r96, 2;
	sub.s32 	%r61, %r138, %r142;
	add.s32 	%r28, %r61, 8;
	add.s32 	%r30, %r61, 16;
	add.s32 	%r32, %r61, 24;
	shl.b32 	%r143, %r101, 2;
	add.s32 	%r144, %r129, %r143;
	.loc	1 32 47                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:32:47
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r6;
	mov.b32 	%f4, %r8;
	.loc	1 33 35                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:33:35
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	.loc	1 34 18                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:34:18
	add.f32 	%f9, %f4, %f8;
	add.f32 	%f10, %f3, %f7;
	add.f32 	%f11, %f2, %f6;
	add.f32 	%f12, %f1, %f5;
	.loc	1 38 41                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:38:41
	selp.f32 	%f13, %f12, 0f00000000, %p1;
	selp.f32 	%f14, %f11, 0f00000000, %p3;
	selp.f32 	%f15, %f10, 0f00000000, %p5;
	selp.f32 	%f16, %f9, 0f00000000, %p7;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r145, %f13;
	shfl.sync.bfly.b32	%r146, %r145, 16, 31, -1;
	mov.b32 	%f17, %r146;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f13, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r147, %f18;
	shfl.sync.bfly.b32	%r148, %r147, 8, 31, -1;
	mov.b32 	%f19, %r148;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r149, %f20;
	shfl.sync.bfly.b32	%r150, %r149, 4, 31, -1;
	mov.b32 	%f21, %r150;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r151, %f22;
	shfl.sync.bfly.b32	%r152, %r151, 2, 31, -1;
	mov.b32 	%f23, %r152;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r153, %f24;
	shfl.sync.bfly.b32	%r154, %r153, 1, 31, -1;
	mov.b32 	%f25, %r154;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r155, %f14;
	shfl.sync.bfly.b32	%r156, %r155, 16, 31, -1;
	mov.b32 	%f27, %r156;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f14, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r157, %f28;
	shfl.sync.bfly.b32	%r158, %r157, 8, 31, -1;
	mov.b32 	%f29, %r158;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r159, %f30;
	shfl.sync.bfly.b32	%r160, %r159, 4, 31, -1;
	mov.b32 	%f31, %r160;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r161, %f32;
	shfl.sync.bfly.b32	%r162, %r161, 2, 31, -1;
	mov.b32 	%f33, %r162;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r163, %f34;
	shfl.sync.bfly.b32	%r164, %r163, 1, 31, -1;
	mov.b32 	%f35, %r164;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r165, %f15;
	shfl.sync.bfly.b32	%r166, %r165, 16, 31, -1;
	mov.b32 	%f37, %r166;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f15, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r167, %f38;
	shfl.sync.bfly.b32	%r168, %r167, 8, 31, -1;
	mov.b32 	%f39, %r168;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r169, %f40;
	shfl.sync.bfly.b32	%r170, %r169, 4, 31, -1;
	mov.b32 	%f41, %r170;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r171, %f42;
	shfl.sync.bfly.b32	%r172, %r171, 2, 31, -1;
	mov.b32 	%f43, %r172;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r173, %f44;
	shfl.sync.bfly.b32	%r174, %r173, 1, 31, -1;
	mov.b32 	%f45, %r174;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r175, %f16;
	shfl.sync.bfly.b32	%r176, %r175, 16, 31, -1;
	mov.b32 	%f47, %r176;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f16, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r177, %f48;
	shfl.sync.bfly.b32	%r178, %r177, 8, 31, -1;
	mov.b32 	%f49, %r178;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r179, %f50;
	shfl.sync.bfly.b32	%r180, %r179, 4, 31, -1;
	mov.b32 	%f51, %r180;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r181, %f52;
	shfl.sync.bfly.b32	%r182, %r181, 2, 31, -1;
	mov.b32 	%f53, %r182;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r183, %f54;
	shfl.sync.bfly.b32	%r184, %r183, 1, 31, -1;
	mov.b32 	%f55, %r184;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r15, %f26;
	// begin inline asm
	@%p13 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	mov.b32 	%r17, %f36;
	// begin inline asm
	@%p13 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	mov.b32 	%r19, %f46;
	// begin inline asm
	@%p13 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	mov.b32 	%r21, %f56;
	// begin inline asm
	@%p13 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p17 ld.shared.b32 %r22, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f57, %r22;
	shfl.sync.bfly.b32	%r185, %r22, 1, 31, -1;
	mov.b32 	%f58, %r185;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r25, %f59;
	// begin inline asm
	@%p18 st.shared.b32 [ %r23 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 42 19                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:42:19
	ld.shared.u32 	%r27, [%r138];
	ld.shared.u32 	%r29, [%r139];
	ld.shared.u32 	%r31, [%r140];
	ld.shared.u32 	%r33, [%r141];
	bar.sync 	0;
	mov.pred 	%p19, -1;
	// begin inline asm
	@%p19 st.shared.b32 [ %r61 + 0 ], %r27;
	// end inline asm
	// begin inline asm
	@%p19 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	// begin inline asm
	@%p19 st.shared.b32 [ %r30 + 0 ], %r31;
	// end inline asm
	// begin inline asm
	@%p19 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r35, [%r144];
	mov.b32 	%r36, 1111752704;
	// begin inline asm
	div.full.f32 %r93, %r35, %r36;
	// end inline asm
	// begin inline asm
	div.full.f32 %r37, %r27, %r36;
	// end inline asm
	mov.b32 	%f60, %r37;
	// begin inline asm
	div.full.f32 %r40, %r29, %r36;
	// end inline asm
	mov.b32 	%f61, %r40;
	// begin inline asm
	div.full.f32 %r43, %r31, %r36;
	// end inline asm
	mov.b32 	%f62, %r43;
	// begin inline asm
	div.full.f32 %r46, %r33, %r36;
	// end inline asm
	mov.b32 	%f63, %r46;
	.loc	1 43 19                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:43:19
	sub.f32 	%f64, %f12, %f60;
	sub.f32 	%f65, %f11, %f61;
	sub.f32 	%f66, %f10, %f62;
	sub.f32 	%f67, %f9, %f63;
	.loc	1 44 20                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:44:20
	mul.f32 	%f68, %f67, %f67;
	mul.f32 	%f69, %f66, %f66;
	mul.f32 	%f70, %f65, %f65;
	mul.f32 	%f71, %f64, %f64;
	.loc	1 46 43                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:46:43
	selp.f32 	%f72, %f71, 0f00000000, %p1;
	selp.f32 	%f73, %f70, 0f00000000, %p3;
	selp.f32 	%f74, %f69, 0f00000000, %p5;
	selp.f32 	%f75, %f68, 0f00000000, %p7;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r186, %f72;
	shfl.sync.bfly.b32	%r187, %r186, 16, 31, -1;
	mov.b32 	%f76, %r187;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f77, %f72, %f76;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r188, %f77;
	shfl.sync.bfly.b32	%r189, %r188, 8, 31, -1;
	mov.b32 	%f78, %r189;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f79, %f77, %f78;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r190, %f79;
	shfl.sync.bfly.b32	%r191, %r190, 4, 31, -1;
	mov.b32 	%f80, %r191;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f81, %f79, %f80;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r192, %f81;
	shfl.sync.bfly.b32	%r193, %r192, 2, 31, -1;
	mov.b32 	%f82, %r193;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f83, %f81, %f82;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r194, %f83;
	shfl.sync.bfly.b32	%r195, %r194, 1, 31, -1;
	mov.b32 	%f84, %r195;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f85, %f83, %f84;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r196, %f73;
	shfl.sync.bfly.b32	%r197, %r196, 16, 31, -1;
	mov.b32 	%f86, %r197;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f87, %f73, %f86;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r198, %f87;
	shfl.sync.bfly.b32	%r199, %r198, 8, 31, -1;
	mov.b32 	%f88, %r199;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f89, %f87, %f88;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r200, %f89;
	shfl.sync.bfly.b32	%r201, %r200, 4, 31, -1;
	mov.b32 	%f90, %r201;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f91, %f89, %f90;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r202, %f91;
	shfl.sync.bfly.b32	%r203, %r202, 2, 31, -1;
	mov.b32 	%f92, %r203;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f93, %f91, %f92;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r204, %f93;
	shfl.sync.bfly.b32	%r205, %r204, 1, 31, -1;
	mov.b32 	%f94, %r205;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f95, %f93, %f94;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r206, %f74;
	shfl.sync.bfly.b32	%r207, %r206, 16, 31, -1;
	mov.b32 	%f96, %r207;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f97, %f74, %f96;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r208, %f97;
	shfl.sync.bfly.b32	%r209, %r208, 8, 31, -1;
	mov.b32 	%f98, %r209;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f99, %f97, %f98;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r210, %f99;
	shfl.sync.bfly.b32	%r211, %r210, 4, 31, -1;
	mov.b32 	%f100, %r211;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f101, %f99, %f100;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r212, %f101;
	shfl.sync.bfly.b32	%r213, %r212, 2, 31, -1;
	mov.b32 	%f102, %r213;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f103, %f101, %f102;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r214, %f103;
	shfl.sync.bfly.b32	%r215, %r214, 1, 31, -1;
	mov.b32 	%f104, %r215;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f105, %f103, %f104;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r216, %f75;
	shfl.sync.bfly.b32	%r217, %r216, 16, 31, -1;
	mov.b32 	%f106, %r217;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f107, %f75, %f106;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r218, %f107;
	shfl.sync.bfly.b32	%r219, %r218, 8, 31, -1;
	mov.b32 	%f108, %r219;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f109, %f107, %f108;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r220, %f109;
	shfl.sync.bfly.b32	%r221, %r220, 4, 31, -1;
	mov.b32 	%f110, %r221;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f111, %f109, %f110;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r222, %f111;
	shfl.sync.bfly.b32	%r223, %r222, 2, 31, -1;
	mov.b32 	%f112, %r223;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f113, %f111, %f112;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r224, %f113;
	shfl.sync.bfly.b32	%r225, %r224, 1, 31, -1;
	mov.b32 	%f114, %r225;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f115, %f113, %f114;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f85;
	// begin inline asm
	@%p13 st.shared.b32 [ %r14 + 0 ], %r50;
	// end inline asm
	mov.b32 	%r52, %f95;
	// begin inline asm
	@%p13 st.shared.b32 [ %r16 + 0 ], %r52;
	// end inline asm
	mov.b32 	%r54, %f105;
	// begin inline asm
	@%p13 st.shared.b32 [ %r18 + 0 ], %r54;
	// end inline asm
	mov.b32 	%r56, %f115;
	// begin inline asm
	@%p13 st.shared.b32 [ %r20 + 0 ], %r56;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p17 ld.shared.b32 %r57, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f116, %r57;
	shfl.sync.bfly.b32	%r226, %r57, 1, 31, -1;
	mov.b32 	%f117, %r226;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f118, %f116, %f117;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f118;
	// begin inline asm
	@%p18 st.shared.b32 [ %r23 + 0 ], %r60;
	// end inline asm
	bar.sync 	0;
$L__tmp6:
	.loc	1 53 28                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:53:28
	ld.shared.u32 	%r62, [%r138];
	ld.shared.u32 	%r64, [%r139];
	ld.shared.u32 	%r66, [%r140];
	ld.shared.u32 	%r68, [%r141];
	bar.sync 	0;
	// begin inline asm
	@%p19 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	// begin inline asm
	@%p19 st.shared.b32 [ %r28 + 0 ], %r64;
	// end inline asm
	// begin inline asm
	@%p19 st.shared.b32 [ %r30 + 0 ], %r66;
	// end inline asm
	// begin inline asm
	@%p19 st.shared.b32 [ %r32 + 0 ], %r68;
	// end inline asm
	bar.sync 	0;
	.loc	1 50 20                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:50:20
	ld.shared.u32 	%r70, [%r144];
	// begin inline asm
	div.full.f32 %r69, %r70, %r36;
	// end inline asm
	mov.b32 	%f119, %r69;
	// begin inline asm
	div.full.f32 %r72, %r62, %r36;
	// end inline asm
	mov.b32 	%f120, %r72;
	// begin inline asm
	div.full.f32 %r75, %r64, %r36;
	// end inline asm
	mov.b32 	%f121, %r75;
	// begin inline asm
	div.full.f32 %r78, %r66, %r36;
	// end inline asm
	mov.b32 	%f122, %r78;
	// begin inline asm
	div.full.f32 %r81, %r68, %r36;
	// end inline asm
	mov.b32 	%f123, %r81;
	.loc	1 52 20                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:52:20
	add.f32 	%f124, %f119, 0f3727C5AC;
	add.f32 	%f125, %f120, 0f3727C5AC;
	add.f32 	%f126, %f121, 0f3727C5AC;
	add.f32 	%f127, %f122, 0f3727C5AC;
	add.f32 	%f128, %f123, 0f3727C5AC;
	.loc	1 53 28                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:53:28
	rsqrt.approx.ftz.f32 	%f129, %f124;
	rsqrt.approx.ftz.f32 	%f130, %f125;
	rsqrt.approx.ftz.f32 	%f131, %f126;
	rsqrt.approx.ftz.f32 	%f132, %f127;
	rsqrt.approx.ftz.f32 	%f133, %f128;
	.loc	1 24 23                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:24:23
	or.b32  	%r227, %r94, %r101;
	.loc	1 25 21                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:25:21
	setp.lt.s32 	%p46, %r227, 2048;
	.loc	1 54 20                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:54:20
	mul.f32 	%f134, %f64, %f130;
	mul.f32 	%f135, %f65, %f131;
	mul.f32 	%f136, %f66, %f132;
	mul.f32 	%f137, %f67, %f133;
	.loc	1 56 20                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:56:20
	setp.gt.f32 	%p47, %f137, 0f00000000;
	setp.gt.f32 	%p48, %f136, 0f00000000;
	setp.gt.f32 	%p49, %f135, 0f00000000;
	setp.gt.f32 	%p50, %f134, 0f00000000;
	.loc	1 58 20                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:58:20
	mul.f32 	%f138, %f134, 0f3E4CCCCD;
	mul.f32 	%f139, %f135, 0f3E4CCCCD;
	mul.f32 	%f140, %f136, 0f3E4CCCCD;
	mul.f32 	%f141, %f137, 0f3E4CCCCD;
	.loc	1 59 35                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:59:35
	selp.f32 	%f142, %f134, %f138, %p50;
	selp.f32 	%f143, %f135, %f139, %p49;
	selp.f32 	%f144, %f136, %f140, %p48;
	selp.f32 	%f145, %f137, %f141, %p47;
	.loc	1 60 47                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:60:47
	mov.b32 	%r84, %f12;
	// begin inline asm
	@%p1 st.global.b32 [ %rd1 + 0 ], { %r84 };
	// end inline asm
	mov.b32 	%r85, %f11;
	// begin inline asm
	@%p3 st.global.b32 [ %rd2 + 0 ], { %r85 };
	// end inline asm
	mov.b32 	%r86, %f10;
	// begin inline asm
	@%p5 st.global.b32 [ %rd3 + 0 ], { %r86 };
	// end inline asm
	mov.b32 	%r87, %f9;
	// begin inline asm
	@%p7 st.global.b32 [ %rd4 + 0 ], { %r87 };
	// end inline asm
	.loc	1 61 25                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:61:25
	add.s64 	%rd13, %rd22, %rd24;
	add.s64 	%rd14, %rd22, %rd25;
	add.s64 	%rd15, %rd22, %rd26;
	add.s64 	%rd16, %rd22, %rd27;
	.loc	1 61 45                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:61:45
	mov.b32 	%r88, %f142;
	// begin inline asm
	@%p1 st.global.b32 [ %rd13 + 0 ], { %r88 };
	// end inline asm
	mov.b32 	%r89, %f143;
	// begin inline asm
	@%p3 st.global.b32 [ %rd14 + 0 ], { %r89 };
	// end inline asm
	mov.b32 	%r90, %f144;
	// begin inline asm
	@%p5 st.global.b32 [ %rd15 + 0 ], { %r90 };
	// end inline asm
	mov.b32 	%r91, %f145;
	// begin inline asm
	@%p7 st.global.b32 [ %rd16 + 0 ], { %r91 };
	// end inline asm
	.loc	1 62 25                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:62:25
	mul.wide.s32 	%rd32, %r227, 4;
	add.s64 	%rd17, %rd23, %rd32;
	.loc	1 62 37                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:62:37
	bfe.u32 	%r228, %r95, 3, 2;
	and.b32  	%r229, %r125, 12;
	or.b32  	%r230, %r229, %r228;
	setp.eq.s32 	%p51, %r230, 0;
	mov.b32 	%r92, %f129;
	and.pred  	%p41, %p51, %p46;
	// begin inline asm
	@%p41 st.global.b32 [ %rd17 + 0 ], { %r92 };
	// end inline asm
	.loc	1 63 25                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:63:25
	add.s64 	%rd18, %rd21, %rd32;
	.loc	1 63 37                         // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:63:37
	// begin inline asm
	@%p41 st.global.b32 [ %rd18 + 0 ], { %r93 };
	// end inline asm
	.loc	1 63 4                          // con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py:63:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 235                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe4 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 110
.b8 52
.b8 53
.b8 100
.b8 111
.b8 103
.b8 109
.b8 115
.b8 113
.b8 117
.b8 104
.b8 102
.b8 105
.b8 114
.b8 99
.b8 107
.b8 107
.b8 109
.b8 117
.b8 113
.b8 106
.b8 114
.b8 116
.b8 113
.b8 119
.b8 53
.b8 55
.b8 50
.b8 110
.b8 112
.b8 119
.b8 113
.b8 112
.b8 111
.b8 54
.b8 109
.b8 104
.b8 98
.b8 111
.b8 110
.b8 54
.b8 102
.b8 118
.b8 99
.b8 97
.b8 99
.b8 107
.b8 109
.b8 103
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 111
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x45 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 108
.b8 101
.b8 97
.b8 107
.b8 121
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa8:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
