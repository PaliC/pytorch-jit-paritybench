; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_12(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %11 = shl i32 %10, 9, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = shl i32 %12, 2, !dbg !12
  %14 = and i32 %13, 508, !dbg !12
  %15 = or disjoint i32 %11, %14, !dbg !13
  %16 = sdiv i32 %15, 16, !dbg !14
  %17 = srem i32 %16, 1024, !dbg !15
  %.frozen = freeze i32 %15, !dbg !16
  %18 = sdiv i32 %.frozen, 16384, !dbg !16
  %19 = mul i32 %18, 16384, !dbg !17
  %.decomposed = sub i32 %.frozen, %19, !dbg !17
  %20 = sext i32 %15 to i64, !dbg !18
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !18
  %22 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %21, i1 true) #3, !dbg !19
  %23 = extractvalue { i32, i32, i32, i32 } %22, 0, !dbg !19
  %24 = extractvalue { i32, i32, i32, i32 } %22, 1, !dbg !19
  %25 = extractvalue { i32, i32, i32, i32 } %22, 2, !dbg !19
  %26 = extractvalue { i32, i32, i32, i32 } %22, 3, !dbg !19
  %27 = sext i32 %17 to i64, !dbg !20
  %28 = getelementptr float, ptr addrspace(1) %2, i64 %27, !dbg !20
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #3, !dbg !21
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #3, !dbg !21
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #3, !dbg !21
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #3, !dbg !21
  %33 = mul i32 %18, 24576, !dbg !22
  %34 = add i32 %33, %.decomposed, !dbg !23
  %35 = sext i32 %34 to i64, !dbg !24
  %36 = getelementptr float, ptr addrspace(1) %3, i64 %35, !dbg !24
  %37 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %36, i1 true) #3, !dbg !25
  %38 = extractvalue { i32, i32, i32, i32 } %37, 0, !dbg !25
  %39 = extractvalue { i32, i32, i32, i32 } %37, 1, !dbg !25
  %40 = extractvalue { i32, i32, i32, i32 } %37, 2, !dbg !25
  %41 = extractvalue { i32, i32, i32, i32 } %37, 3, !dbg !25
  %42 = getelementptr float, ptr addrspace(1) %4, i64 %27, !dbg !26
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #3, !dbg !27
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #3, !dbg !27
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #3, !dbg !27
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #3, !dbg !27
  %47 = getelementptr float, ptr addrspace(1) %5, i64 %27, !dbg !28
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #3, !dbg !29
  %49 = bitcast i32 %48 to float, !dbg !29
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #3, !dbg !29
  %51 = bitcast i32 %50 to float, !dbg !29
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #3, !dbg !29
  %53 = bitcast i32 %52 to float, !dbg !29
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #3, !dbg !29
  %55 = bitcast i32 %54 to float, !dbg !29
  %56 = getelementptr float, ptr addrspace(1) %6, i64 %27, !dbg !30
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 true) #3, !dbg !31
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 true) #3, !dbg !31
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 true) #3, !dbg !31
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 true) #3, !dbg !31
  %61 = insertelement <4 x i32> poison, i32 %60, i64 0, !dbg !31
  %62 = insertelement <4 x i32> %61, i32 %57, i64 1, !dbg !31
  %63 = insertelement <4 x i32> %62, i32 %58, i64 2, !dbg !31
  %64 = insertelement <4 x i32> %63, i32 %59, i64 3, !dbg !31
  %65 = bitcast <4 x i32> %64 to <4 x float>, !dbg !31
  %66 = getelementptr float, ptr addrspace(1) %7, i64 %27, !dbg !32
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %66, i1 true) #3, !dbg !33
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %66, i1 true) #3, !dbg !33
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %66, i1 true) #3, !dbg !33
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %66, i1 true) #3, !dbg !33
  %71 = insertelement <4 x i32> poison, i32 %70, i64 0, !dbg !33
  %72 = insertelement <4 x i32> %71, i32 %67, i64 1, !dbg !33
  %73 = insertelement <4 x i32> %72, i32 %68, i64 2, !dbg !33
  %74 = insertelement <4 x i32> %73, i32 %69, i64 3, !dbg !33
  %75 = bitcast <4 x i32> %74 to <4 x float>, !dbg !33
  %76 = insertelement <4 x i32> poison, i32 %26, i64 0, !dbg !19
  %77 = insertelement <4 x i32> %76, i32 %23, i64 1, !dbg !19
  %78 = insertelement <4 x i32> %77, i32 %24, i64 2, !dbg !19
  %79 = insertelement <4 x i32> %78, i32 %25, i64 3, !dbg !19
  %80 = bitcast <4 x i32> %79 to <4 x float>, !dbg !19
  %81 = insertelement <4 x i32> poison, i32 %32, i64 0, !dbg !21
  %82 = insertelement <4 x i32> %81, i32 %29, i64 1, !dbg !21
  %83 = insertelement <4 x i32> %82, i32 %30, i64 2, !dbg !21
  %84 = insertelement <4 x i32> %83, i32 %31, i64 3, !dbg !21
  %85 = bitcast <4 x i32> %84 to <4 x float>, !dbg !21
  %86 = insertelement <4 x i32> poison, i32 %41, i64 0, !dbg !25
  %87 = insertelement <4 x i32> %86, i32 %38, i64 1, !dbg !25
  %88 = insertelement <4 x i32> %87, i32 %39, i64 2, !dbg !25
  %89 = insertelement <4 x i32> %88, i32 %40, i64 3, !dbg !25
  %90 = bitcast <4 x i32> %89 to <4 x float>, !dbg !25
  %91 = insertelement <4 x i32> poison, i32 %46, i64 0, !dbg !27
  %92 = insertelement <4 x i32> %91, i32 %43, i64 1, !dbg !27
  %93 = insertelement <4 x i32> %92, i32 %44, i64 2, !dbg !27
  %94 = insertelement <4 x i32> %93, i32 %45, i64 3, !dbg !27
  %95 = bitcast <4 x i32> %94 to <4 x float>, !dbg !27
  %96 = fadd <4 x float> %80, %85, !dbg !34
  %97 = fadd <4 x float> %96, %90, !dbg !35
  %98 = fsub <4 x float> %97, %95, !dbg !36
  %99 = fadd float %49, 0x3F1A36E2E0000000, !dbg !37
  %100 = fadd float %51, 0x3F1A36E2E0000000, !dbg !37
  %101 = fadd float %53, 0x3F1A36E2E0000000, !dbg !37
  %102 = fadd float %55, 0x3F1A36E2E0000000, !dbg !37
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i = icmp eq i32 %103, 0, !dbg !38
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !38
  %.not1.i = icmp eq i32 %104, 0, !dbg !38
  br i1 %.not.i, label %110, label %105, !dbg !38

105:                                              ; preds = %9
  br i1 %.not1.i, label %108, label %106, !dbg !38

106:                                              ; preds = %105
  %107 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %99) #3, !dbg !38
  br label %__nv_sqrtf.exit, !dbg !38

108:                                              ; preds = %105
  %109 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %99) #3, !dbg !38
  br label %__nv_sqrtf.exit, !dbg !38

110:                                              ; preds = %9
  br i1 %.not1.i, label %113, label %111, !dbg !38

111:                                              ; preds = %110
  %112 = tail call float @llvm.nvvm.sqrt.rn.f(float %99) #3, !dbg !38
  br label %__nv_sqrtf.exit, !dbg !38

113:                                              ; preds = %110
  %114 = tail call float @llvm.nvvm.sqrt.approx.f(float %99) #3, !dbg !38
  br label %__nv_sqrtf.exit, !dbg !38

__nv_sqrtf.exit:                                  ; preds = %106, %108, %111, %113
  %.0.i = phi float [ %107, %106 ], [ %109, %108 ], [ %112, %111 ], [ %114, %113 ], !dbg !38
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i1 = icmp eq i32 %115, 0, !dbg !38
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !38
  %.not1.i4 = icmp eq i32 %116, 0, !dbg !38
  br i1 %.not.i1, label %122, label %117, !dbg !38

117:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %120, label %118, !dbg !38

118:                                              ; preds = %117
  %119 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %100) #3, !dbg !38
  br label %__nv_sqrtf.exit5, !dbg !38

120:                                              ; preds = %117
  %121 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %100) #3, !dbg !38
  br label %__nv_sqrtf.exit5, !dbg !38

122:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %125, label %123, !dbg !38

123:                                              ; preds = %122
  %124 = tail call float @llvm.nvvm.sqrt.rn.f(float %100) #3, !dbg !38
  br label %__nv_sqrtf.exit5, !dbg !38

125:                                              ; preds = %122
  %126 = tail call float @llvm.nvvm.sqrt.approx.f(float %100) #3, !dbg !38
  br label %__nv_sqrtf.exit5, !dbg !38

__nv_sqrtf.exit5:                                 ; preds = %118, %120, %123, %125
  %.0.i3 = phi float [ %119, %118 ], [ %121, %120 ], [ %124, %123 ], [ %126, %125 ], !dbg !38
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i6 = icmp eq i32 %127, 0, !dbg !38
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !38
  %.not1.i9 = icmp eq i32 %128, 0, !dbg !38
  br i1 %.not.i6, label %134, label %129, !dbg !38

129:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %132, label %130, !dbg !38

130:                                              ; preds = %129
  %131 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %101) #3, !dbg !38
  br label %__nv_sqrtf.exit10, !dbg !38

132:                                              ; preds = %129
  %133 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %101) #3, !dbg !38
  br label %__nv_sqrtf.exit10, !dbg !38

134:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %137, label %135, !dbg !38

135:                                              ; preds = %134
  %136 = tail call float @llvm.nvvm.sqrt.rn.f(float %101) #3, !dbg !38
  br label %__nv_sqrtf.exit10, !dbg !38

137:                                              ; preds = %134
  %138 = tail call float @llvm.nvvm.sqrt.approx.f(float %101) #3, !dbg !38
  br label %__nv_sqrtf.exit10, !dbg !38

__nv_sqrtf.exit10:                                ; preds = %130, %132, %135, %137
  %.0.i8 = phi float [ %131, %130 ], [ %133, %132 ], [ %136, %135 ], [ %138, %137 ], !dbg !38
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i11 = icmp eq i32 %139, 0, !dbg !38
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !38
  %.not1.i14 = icmp eq i32 %140, 0, !dbg !38
  br i1 %.not.i11, label %146, label %141, !dbg !38

141:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %144, label %142, !dbg !38

142:                                              ; preds = %141
  %143 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %102) #3, !dbg !38
  br label %__nv_sqrtf.exit15, !dbg !38

144:                                              ; preds = %141
  %145 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %102) #3, !dbg !38
  br label %__nv_sqrtf.exit15, !dbg !38

146:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %149, label %147, !dbg !38

147:                                              ; preds = %146
  %148 = tail call float @llvm.nvvm.sqrt.rn.f(float %102) #3, !dbg !38
  br label %__nv_sqrtf.exit15, !dbg !38

149:                                              ; preds = %146
  %150 = tail call float @llvm.nvvm.sqrt.approx.f(float %102) #3, !dbg !38
  br label %__nv_sqrtf.exit15, !dbg !38

__nv_sqrtf.exit15:                                ; preds = %142, %144, %147, %149
  %.0.i13 = phi float [ %143, %142 ], [ %145, %144 ], [ %148, %147 ], [ %150, %149 ], !dbg !38
  %151 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !39
  %152 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !39
  %153 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i8) #3, !dbg !39
  %154 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i13) #3, !dbg !39
  %155 = insertelement <4 x float> poison, float %154, i64 0, !dbg !40
  %156 = insertelement <4 x float> %155, float %151, i64 1, !dbg !40
  %157 = insertelement <4 x float> %156, float %152, i64 2, !dbg !40
  %158 = insertelement <4 x float> %157, float %153, i64 3, !dbg !40
  %159 = fmul <4 x float> %98, %158, !dbg !40
  %160 = fmul <4 x float> %159, %65, !dbg !41
  %161 = fadd <4 x float> %160, %75, !dbg !42
  %162 = extractelement <4 x float> %161, i64 1, !dbg !43
  %163 = fmul float %162, 0x3FF7154760000000, !dbg !43
  %164 = tail call float @llvm.nvvm.round.f(float %163) #3, !dbg !43
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i16 = icmp eq i32 %165, 0, !dbg !43
  %166 = tail call float @llvm.nvvm.fabs.ftz.f(float %162) #3, !dbg !43
  %167 = tail call float @llvm.nvvm.fabs.f(float %162) #3, !dbg !43
  %.03.i = select i1 %.not.i16, float %167, float %166, !dbg !43
  %168 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i = select i1 %168, float 0.000000e+00, float %164, !dbg !43
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %171 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !43
  %j.0.i = select i1 %171, float 1.270000e+02, float %t.0.i, !dbg !43
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i = icmp eq i32 %177, 0, !dbg !43
  br i1 %.not8.i, label %180, label %178, !dbg !43

178:                                              ; preds = %__nv_sqrtf.exit15
  %179 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !43
  br label %__nv_expm1f.exit, !dbg !43

180:                                              ; preds = %__nv_sqrtf.exit15
  %181 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !43
  br label %__nv_expm1f.exit, !dbg !43

__nv_expm1f.exit:                                 ; preds = %178, %180
  %.0.i17 = phi float [ %179, %178 ], [ %181, %180 ], !dbg !43
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %183 = extractelement <4 x float> %161, i64 2, !dbg !43
  %184 = fmul float %183, 0x3FF7154760000000, !dbg !43
  %185 = tail call float @llvm.nvvm.round.f(float %184) #3, !dbg !43
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i20 = icmp eq i32 %186, 0, !dbg !43
  %187 = tail call float @llvm.nvvm.fabs.ftz.f(float %183) #3, !dbg !43
  %188 = tail call float @llvm.nvvm.fabs.f(float %183) #3, !dbg !43
  %.03.i21 = select i1 %.not.i20, float %188, float %187, !dbg !43
  %189 = fcmp olt float %.03.i21, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i22 = select i1 %189, float 0.000000e+00, float %185, !dbg !43
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %192 = fcmp oeq float %t.0.i22, 1.280000e+02, !dbg !43
  %j.0.i23 = select i1 %192, float 1.270000e+02, float %t.0.i22, !dbg !43
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i24 = icmp eq i32 %198, 0, !dbg !43
  br i1 %.not8.i24, label %201, label %199, !dbg !43

199:                                              ; preds = %__nv_expm1f.exit
  %200 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i23) #3, !dbg !43
  br label %__nv_expm1f.exit46, !dbg !43

201:                                              ; preds = %__nv_expm1f.exit
  %202 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i23) #3, !dbg !43
  br label %__nv_expm1f.exit46, !dbg !43

__nv_expm1f.exit46:                               ; preds = %199, %201
  %.0.i25 = phi float [ %200, %199 ], [ %202, %201 ], !dbg !43
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %204 = extractelement <4 x float> %161, i64 3, !dbg !43
  %205 = fmul float %204, 0x3FF7154760000000, !dbg !43
  %206 = tail call float @llvm.nvvm.round.f(float %205) #3, !dbg !43
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i47 = icmp eq i32 %207, 0, !dbg !43
  %208 = tail call float @llvm.nvvm.fabs.ftz.f(float %204) #3, !dbg !43
  %209 = tail call float @llvm.nvvm.fabs.f(float %204) #3, !dbg !43
  %.03.i48 = select i1 %.not.i47, float %209, float %208, !dbg !43
  %210 = fcmp olt float %.03.i48, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i49 = select i1 %210, float 0.000000e+00, float %206, !dbg !43
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %213 = fcmp oeq float %t.0.i49, 1.280000e+02, !dbg !43
  %j.0.i50 = select i1 %213, float 1.270000e+02, float %t.0.i49, !dbg !43
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i51 = icmp eq i32 %219, 0, !dbg !43
  br i1 %.not8.i51, label %222, label %220, !dbg !43

220:                                              ; preds = %__nv_expm1f.exit46
  %221 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i50) #3, !dbg !43
  br label %__nv_expm1f.exit73, !dbg !43

222:                                              ; preds = %__nv_expm1f.exit46
  %223 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i50) #3, !dbg !43
  br label %__nv_expm1f.exit73, !dbg !43

__nv_expm1f.exit73:                               ; preds = %220, %222
  %.0.i52 = phi float [ %221, %220 ], [ %223, %222 ], !dbg !43
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %225 = extractelement <4 x float> %161, i64 0, !dbg !43
  %226 = fmul float %225, 0x3FF7154760000000, !dbg !43
  %227 = tail call float @llvm.nvvm.round.f(float %226) #3, !dbg !43
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i74 = icmp eq i32 %228, 0, !dbg !43
  %229 = tail call float @llvm.nvvm.fabs.ftz.f(float %225) #3, !dbg !43
  %230 = tail call float @llvm.nvvm.fabs.f(float %225) #3, !dbg !43
  %.03.i75 = select i1 %.not.i74, float %230, float %229, !dbg !43
  %231 = fcmp olt float %.03.i75, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i76 = select i1 %231, float 0.000000e+00, float %227, !dbg !43
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %234 = fcmp oeq float %t.0.i76, 1.280000e+02, !dbg !43
  %j.0.i77 = select i1 %234, float 1.270000e+02, float %t.0.i76, !dbg !43
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i78 = icmp eq i32 %240, 0, !dbg !43
  br i1 %.not8.i78, label %243, label %241, !dbg !43

241:                                              ; preds = %__nv_expm1f.exit73
  %242 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i77) #3, !dbg !43
  br label %__nv_expm1f.exit100, !dbg !43

243:                                              ; preds = %__nv_expm1f.exit73
  %244 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i77) #3, !dbg !43
  br label %__nv_expm1f.exit100, !dbg !43

__nv_expm1f.exit100:                              ; preds = %241, %243
  %.0.i79 = phi float [ %242, %241 ], [ %244, %243 ], !dbg !43
  %245 = fcmp oeq <4 x float> %161, zeroinitializer, !dbg !43
  %246 = fadd float %204, %204, !dbg !43
  %247 = fcmp olt float %j.0.i50, -2.500000e+01, !dbg !43
  %248 = fcmp ogt float %j.0.i50, 1.280000e+02, !dbg !43
  %.not9.i67 = icmp eq i32 %224, 0, !dbg !43
  %.not7.i53 = icmp eq i32 %218, 0, !dbg !43
  %.not6.i54 = icmp eq i32 %217, 0, !dbg !43
  %.not5.i55 = icmp eq i32 %216, 0, !dbg !43
  %.not4.i56 = icmp eq i32 %215, 0, !dbg !43
  %.not3.i57 = icmp eq i32 %214, 0, !dbg !43
  %.not2.i58 = icmp eq i32 %212, 0, !dbg !43
  %249 = fneg float %t.0.i49, !dbg !43
  %.not1.i59 = icmp eq i32 %211, 0, !dbg !43
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %249, float 0x3FE62E4000000000, float %204) #3, !dbg !43
  %251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %249, float 0x3FE62E4000000000, float %204) #3, !dbg !43
  %.04.i60 = select i1 %.not1.i59, float %250, float %251, !dbg !43
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %249, float 0x3EB7F7D1C0000000, float %.04.i60) #3, !dbg !43
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %249, float 0x3EB7F7D1C0000000, float %.04.i60) #3, !dbg !43
  %.05.i61 = select i1 %.not2.i58, float %252, float %253, !dbg !43
  %254 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i61, float 0x3F812ACC60000000) #3, !dbg !43
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i61, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i62 = select i1 %.not3.i57, float %254, float %255, !dbg !43
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i62, float %.05.i61, float 0x3FA5557C60000000) #3, !dbg !43
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i62, float %.05.i61, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i63 = select i1 %.not4.i56, float %256, float %257, !dbg !43
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i63, float %.05.i61, float 0x3FC5553EC0000000) #3, !dbg !43
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i63, float %.05.i61, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i64 = select i1 %.not5.i55, float %258, float %259, !dbg !43
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i64, float %.05.i61, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i64, float %.05.i61, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i65 = select i1 %.not6.i54, float %260, float %261, !dbg !43
  %262 = fmul float %.05.i61, %.06.i65, !dbg !43
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %262, float %.05.i61, float %.05.i61) #3, !dbg !43
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %262, float %.05.i61, float %.05.i61) #3, !dbg !43
  %.01.i66 = select i1 %.not7.i53, float %263, float %264, !dbg !43
  %265 = fadd float %.0.i52, -1.000000e+00, !dbg !43
  %266 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i66, float %.0.i52, float %265) #3, !dbg !43
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i66, float %.0.i52, float %265) #3, !dbg !43
  %.02.i68 = select i1 %.not9.i67, float %266, float %267, !dbg !43
  %268 = fadd float %.02.i68, %.02.i68, !dbg !43
  %u.0.i69 = select i1 %213, float %268, float %.02.i68, !dbg !43
  %u.1.i70 = select i1 %248, float 0x7FF0000000000000, float %u.0.i69, !dbg !43
  %u.2.i71 = select i1 %247, float -1.000000e+00, float %u.1.i70, !dbg !43
  %269 = extractelement <4 x i1> %245, i64 3, !dbg !43
  %u.3.i72 = select i1 %269, float %246, float %u.2.i71, !dbg !43
  %270 = fadd float %183, %183, !dbg !43
  %271 = fcmp olt float %j.0.i23, -2.500000e+01, !dbg !43
  %272 = fcmp ogt float %j.0.i23, 1.280000e+02, !dbg !43
  %.not9.i40 = icmp eq i32 %203, 0, !dbg !43
  %.not7.i26 = icmp eq i32 %197, 0, !dbg !43
  %.not6.i27 = icmp eq i32 %196, 0, !dbg !43
  %.not5.i28 = icmp eq i32 %195, 0, !dbg !43
  %.not4.i29 = icmp eq i32 %194, 0, !dbg !43
  %.not3.i30 = icmp eq i32 %193, 0, !dbg !43
  %.not2.i31 = icmp eq i32 %191, 0, !dbg !43
  %273 = fneg float %t.0.i22, !dbg !43
  %.not1.i32 = icmp eq i32 %190, 0, !dbg !43
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %273, float 0x3FE62E4000000000, float %183) #3, !dbg !43
  %275 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %273, float 0x3FE62E4000000000, float %183) #3, !dbg !43
  %.04.i33 = select i1 %.not1.i32, float %274, float %275, !dbg !43
  %276 = tail call float @llvm.nvvm.fma.rn.f(float %273, float 0x3EB7F7D1C0000000, float %.04.i33) #3, !dbg !43
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %273, float 0x3EB7F7D1C0000000, float %.04.i33) #3, !dbg !43
  %.05.i34 = select i1 %.not2.i31, float %276, float %277, !dbg !43
  %278 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i34, float 0x3F812ACC60000000) #3, !dbg !43
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i34, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i35 = select i1 %.not3.i30, float %278, float %279, !dbg !43
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i35, float %.05.i34, float 0x3FA5557C60000000) #3, !dbg !43
  %281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i35, float %.05.i34, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i36 = select i1 %.not4.i29, float %280, float %281, !dbg !43
  %282 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i36, float %.05.i34, float 0x3FC5553EC0000000) #3, !dbg !43
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i36, float %.05.i34, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i37 = select i1 %.not5.i28, float %282, float %283, !dbg !43
  %284 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i37, float %.05.i34, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i37, float %.05.i34, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i38 = select i1 %.not6.i27, float %284, float %285, !dbg !43
  %286 = fmul float %.05.i34, %.06.i38, !dbg !43
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %286, float %.05.i34, float %.05.i34) #3, !dbg !43
  %288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %286, float %.05.i34, float %.05.i34) #3, !dbg !43
  %.01.i39 = select i1 %.not7.i26, float %287, float %288, !dbg !43
  %289 = fadd float %.0.i25, -1.000000e+00, !dbg !43
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i39, float %.0.i25, float %289) #3, !dbg !43
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i39, float %.0.i25, float %289) #3, !dbg !43
  %.02.i41 = select i1 %.not9.i40, float %290, float %291, !dbg !43
  %292 = fadd float %.02.i41, %.02.i41, !dbg !43
  %u.0.i42 = select i1 %192, float %292, float %.02.i41, !dbg !43
  %u.1.i43 = select i1 %272, float 0x7FF0000000000000, float %u.0.i42, !dbg !43
  %u.2.i44 = select i1 %271, float -1.000000e+00, float %u.1.i43, !dbg !43
  %293 = extractelement <4 x i1> %245, i64 2, !dbg !43
  %u.3.i45 = select i1 %293, float %270, float %u.2.i44, !dbg !43
  %294 = fadd float %162, %162, !dbg !43
  %295 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !43
  %296 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !43
  %.not9.i = icmp eq i32 %182, 0, !dbg !43
  %.not7.i = icmp eq i32 %176, 0, !dbg !43
  %.not6.i = icmp eq i32 %175, 0, !dbg !43
  %.not5.i = icmp eq i32 %174, 0, !dbg !43
  %.not4.i = icmp eq i32 %173, 0, !dbg !43
  %.not3.i = icmp eq i32 %172, 0, !dbg !43
  %.not2.i18 = icmp eq i32 %170, 0, !dbg !43
  %297 = fneg float %t.0.i, !dbg !43
  %.not1.i19 = icmp eq i32 %169, 0, !dbg !43
  %298 = tail call float @llvm.nvvm.fma.rn.f(float %297, float 0x3FE62E4000000000, float %162) #3, !dbg !43
  %299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %297, float 0x3FE62E4000000000, float %162) #3, !dbg !43
  %.04.i = select i1 %.not1.i19, float %298, float %299, !dbg !43
  %300 = tail call float @llvm.nvvm.fma.rn.f(float %297, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !43
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %297, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !43
  %.05.i = select i1 %.not2.i18, float %300, float %301, !dbg !43
  %302 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !43
  %303 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i = select i1 %.not3.i, float %302, float %303, !dbg !43
  %304 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !43
  %305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i = select i1 %.not4.i, float %304, float %305, !dbg !43
  %306 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !43
  %307 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i = select i1 %.not5.i, float %306, float %307, !dbg !43
  %308 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i = select i1 %.not6.i, float %308, float %309, !dbg !43
  %310 = fmul float %.05.i, %.06.i, !dbg !43
  %311 = tail call float @llvm.nvvm.fma.rn.f(float %310, float %.05.i, float %.05.i) #3, !dbg !43
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %310, float %.05.i, float %.05.i) #3, !dbg !43
  %.01.i = select i1 %.not7.i, float %311, float %312, !dbg !43
  %313 = fadd float %.0.i17, -1.000000e+00, !dbg !43
  %314 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i17, float %313) #3, !dbg !43
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i17, float %313) #3, !dbg !43
  %.02.i = select i1 %.not9.i, float %314, float %315, !dbg !43
  %316 = fadd float %.02.i, %.02.i, !dbg !43
  %u.0.i = select i1 %171, float %316, float %.02.i, !dbg !43
  %u.1.i = select i1 %296, float 0x7FF0000000000000, float %u.0.i, !dbg !43
  %u.2.i = select i1 %295, float -1.000000e+00, float %u.1.i, !dbg !43
  %317 = extractelement <4 x i1> %245, i64 1, !dbg !43
  %u.3.i = select i1 %317, float %294, float %u.2.i, !dbg !43
  %318 = fcmp ogt float %225, 0.000000e+00, !dbg !44
  %319 = fcmp ogt float %204, 0.000000e+00, !dbg !44
  %320 = fcmp ogt float %183, 0.000000e+00, !dbg !44
  %321 = fcmp ogt float %162, 0.000000e+00, !dbg !44
  %.not7.i80 = icmp eq i32 %239, 0, !dbg !43
  %.not6.i81 = icmp eq i32 %238, 0, !dbg !43
  %.not5.i82 = icmp eq i32 %237, 0, !dbg !43
  %.not4.i83 = icmp eq i32 %236, 0, !dbg !43
  %.not3.i84 = icmp eq i32 %235, 0, !dbg !43
  %.not2.i85 = icmp eq i32 %233, 0, !dbg !43
  %322 = fneg float %t.0.i76, !dbg !43
  %.not1.i86 = icmp eq i32 %232, 0, !dbg !43
  %323 = tail call float @llvm.nvvm.fma.rn.f(float %322, float 0x3FE62E4000000000, float %225) #3, !dbg !43
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %322, float 0x3FE62E4000000000, float %225) #3, !dbg !43
  %.04.i87 = select i1 %.not1.i86, float %323, float %324, !dbg !43
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %322, float 0x3EB7F7D1C0000000, float %.04.i87) #3, !dbg !43
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %322, float 0x3EB7F7D1C0000000, float %.04.i87) #3, !dbg !43
  %.05.i88 = select i1 %.not2.i85, float %325, float %326, !dbg !43
  %327 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i88, float 0x3F812ACC60000000) #3, !dbg !43
  %328 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i88, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i89 = select i1 %.not3.i84, float %327, float %328, !dbg !43
  %329 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i89, float %.05.i88, float 0x3FA5557C60000000) #3, !dbg !43
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i89, float %.05.i88, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i90 = select i1 %.not4.i83, float %329, float %330, !dbg !43
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i90, float %.05.i88, float 0x3FC5553EC0000000) #3, !dbg !43
  %332 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i90, float %.05.i88, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i91 = select i1 %.not5.i82, float %331, float %332, !dbg !43
  %333 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i91, float %.05.i88, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i91, float %.05.i88, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i92 = select i1 %.not6.i81, float %333, float %334, !dbg !43
  %335 = fmul float %.05.i88, %.06.i92, !dbg !43
  %336 = tail call float @llvm.nvvm.fma.rn.f(float %335, float %.05.i88, float %.05.i88) #3, !dbg !43
  %337 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %335, float %.05.i88, float %.05.i88) #3, !dbg !43
  %.01.i93 = select i1 %.not7.i80, float %336, float %337, !dbg !43
  %338 = fadd float %.0.i79, -1.000000e+00, !dbg !43
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not9.i94 = icmp eq i32 %339, 0, !dbg !43
  %340 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i93, float %.0.i79, float %338) #3, !dbg !43
  %341 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i93, float %.0.i79, float %338) #3, !dbg !43
  %.02.i95 = select i1 %.not9.i94, float %341, float %340, !dbg !43
  %342 = fadd float %.02.i95, %.02.i95, !dbg !43
  %u.0.i96 = select i1 %234, float %342, float %.02.i95, !dbg !43
  %343 = fcmp ogt float %j.0.i77, 1.280000e+02, !dbg !43
  %u.1.i97 = select i1 %343, float 0x7FF0000000000000, float %u.0.i96, !dbg !43
  %344 = fcmp olt float %j.0.i77, -2.500000e+01, !dbg !43
  %u.2.i98 = select i1 %344, float -1.000000e+00, float %u.1.i97, !dbg !43
  %345 = fadd float %225, %225, !dbg !43
  %346 = extractelement <4 x i1> %245, i64 0, !dbg !43
  %u.3.i99 = select i1 %346, float %345, float %u.2.i98, !dbg !43
  %347 = select i1 %321, float %162, float %u.3.i, !dbg !45
  %348 = select i1 %320, float %183, float %u.3.i45, !dbg !45
  %349 = select i1 %319, float %204, float %u.3.i72, !dbg !45
  %350 = select i1 %318, float %225, float %u.3.i99, !dbg !45
  %bc = bitcast <4 x float> %96 to <4 x i32>, !dbg !46
  %351 = extractelement <4 x i32> %bc, i64 1, !dbg !46
  %bc101 = bitcast <4 x float> %96 to <4 x i32>, !dbg !46
  %352 = extractelement <4 x i32> %bc101, i64 2, !dbg !46
  %bc102 = bitcast <4 x float> %96 to <4 x i32>, !dbg !46
  %353 = extractelement <4 x i32> %bc102, i64 3, !dbg !46
  %bc103 = bitcast <4 x float> %96 to <4 x i32>, !dbg !46
  %354 = extractelement <4 x i32> %bc103, i64 0, !dbg !46
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %351, i32 %352, i32 %353, i32 %354, ptr addrspace(1) %21, i1 true) #3, !dbg !46
  %355 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !47
  %356 = bitcast float %347 to i32, !dbg !48
  %357 = bitcast float %348 to i32, !dbg !48
  %358 = bitcast float %349 to i32, !dbg !48
  %359 = bitcast float %350 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %356, i32 %357, i32 %358, i32 %359, ptr addrspace(1) %355, i1 true) #3, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cl6ncbhj27ba6cbfunmfcujke54k3hnonk3n4wbkoenzmkvpqlm2.py", directory: "inductor_cache/l6")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_12, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_12, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_12", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_12", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 27, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 34, scope: !7)
!19 = !DILocation(line: 28, column: 39, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 41, scope: !7)
!23 = !DILocation(line: 30, column: 35, scope: !7)
!24 = !DILocation(line: 30, column: 30, scope: !7)
!25 = !DILocation(line: 30, column: 46, scope: !7)
!26 = !DILocation(line: 31, column: 30, scope: !7)
!27 = !DILocation(line: 31, column: 35, scope: !7)
!28 = !DILocation(line: 32, column: 30, scope: !7)
!29 = !DILocation(line: 32, column: 35, scope: !7)
!30 = !DILocation(line: 33, column: 31, scope: !7)
!31 = !DILocation(line: 33, column: 36, scope: !7)
!32 = !DILocation(line: 34, column: 31, scope: !7)
!33 = !DILocation(line: 34, column: 36, scope: !7)
!34 = !DILocation(line: 35, column: 18, scope: !7)
!35 = !DILocation(line: 36, column: 18, scope: !7)
!36 = !DILocation(line: 37, column: 18, scope: !7)
!37 = !DILocation(line: 39, column: 18, scope: !7)
!38 = !DILocation(line: 40, column: 27, scope: !7)
!39 = !DILocation(line: 42, column: 20, scope: !7)
!40 = !DILocation(line: 45, column: 19, scope: !7)
!41 = !DILocation(line: 46, column: 20, scope: !7)
!42 = !DILocation(line: 47, column: 20, scope: !7)
!43 = !DILocation(line: 51, column: 28, scope: !7)
!44 = !DILocation(line: 49, column: 20, scope: !7)
!45 = !DILocation(line: 53, column: 35, scope: !7)
!46 = !DILocation(line: 54, column: 39, scope: !7)
!47 = !DILocation(line: 55, column: 28, scope: !7)
!48 = !DILocation(line: 55, column: 40, scope: !7)
!49 = !DILocation(line: 55, column: 4, scope: !7)
