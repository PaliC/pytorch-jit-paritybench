//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_eye_sub_0 // -- Begin function triton_poi_fused_add_eye_sub_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_eye_sub_0
.visible .entry triton_poi_fused_add_eye_sub_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_eye_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_eye_sub_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_eye_sub_0_param_2,
	.param .u32 triton_poi_fused_add_eye_sub_0_param_3,
	.param .u32 triton_poi_fused_add_eye_sub_0_param_4
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<93>;
	.reg .f32 	%f<13>;
	.reg .b64 	%rd<10>;
	.loc	1 19 0                          // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_add_eye_sub_0_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_add_eye_sub_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:22:33
	shl.b32 	%r23, %r1, 4;
	ld.param.u64 	%rd7, [triton_poi_fused_add_eye_sub_0_param_2];
	.loc	1 23 44                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:23:44
	mov.u32 	%r24, %tid.x;
	shr.u32 	%r25, %r24, 1;
	bfe.u32 	%r26, %r24, 1, 2;
	and.b32  	%r27, %r25, 4;
	and.b32  	%r28, %r25, 8;
	and.b32  	%r29, %r24, 1;
	shl.b32 	%r30, %r29, 1;
	shl.b32 	%r31, %r24, 1;
	and.b32  	%r32, %r31, 14;
	or.b32  	%r33, %r27, %r26;
	or.b32  	%r34, %r33, %r28;
	.loc	1 23 23                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:23:23
	or.b32  	%r35, %r34, %r23;
	or.b32  	%r36, %r23, %r32;
	or.b32  	%r37, %r36, 1;
	.loc	1 24 21                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:24:21
	setp.lt.s32 	%p11, %r35, 16;
	setp.lt.s32 	%p12, %r36, 16;
	.loc	1 25 28                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:25:33
	shl.b32 	%r38, %r2, 2;
	.loc	1 26 44                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:26:44
	bfe.u32 	%r39, %r24, 3, 2;
	.loc	1 26 23                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:26:23
	or.b32  	%r40, %r38, %r30;
	or.b32  	%r41, %r39, %r38;
	.loc	1 27 21                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:27:21
	setp.lt.s32 	%p13, %r40, 4;
	setp.lt.s32 	%p14, %r41, 4;
	.loc	1 31 19                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:31:19
	shr.s32 	%r43, %r36, 31;
	shr.u32 	%r44, %r43, 30;
	add.s32 	%r45, %r36, %r44;
	.loc	1 28 19                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:28:19
	and.b32  	%r46, %r45, -4;
	sub.s32 	%r47, %r36, %r46;
	bfe.s32 	%r48, %r1, 27, 1;
	shr.u32 	%r49, %r48, 30;
	add.s32 	%r50, %r37, %r49;
	and.b32  	%r51, %r50, -4;
	sub.s32 	%r52, %r37, %r51;
	.loc	1 32 37                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:32:37
	shl.b32 	%r53, %r35, 2;
	.loc	1 32 35                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:32:35
	add.s32 	%r54, %r40, %r53;
	.loc	1 32 30                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:32:30
	mul.wide.s32 	%rd8, %r54, 4;
	add.s64 	%rd1, %rd5, %rd8;
	.loc	1 32 50                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:32:50
	and.pred  	%p1, %p11, %p13;
	and.pred  	%p4, %p12, %p14;
	.loc	1 32 42                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:32:42
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	shl.b32 	%r55, %r29, 5;
	or.b32  	%r56, %r55, %r26;
	or.b32  	%r57, %r56, %r27;
	or.b32  	%r58, %r57, %r28;
	and.b32  	%r59, %r31, 62;
	shl.b32 	%r60, %r29, 2;
	add.s32 	%r61, %r58, %r60;
	shl.b32 	%r62, %r61, 2;
	mov.u32 	%r63, global_smem;
	add.s32 	%r5, %r63, %r62;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	shr.u32 	%r64, %r55, 3;
	add.s32 	%r65, %r58, %r64;
	shl.b32 	%r66, %r65, 2;
	add.s32 	%r67, %r66, %r63;
	add.s32 	%r7, %r67, 72;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r68, %r24, 2;
	and.b32  	%r69, %r68, 6;
	add.s32 	%r70, %r69, %r59;
	shl.b32 	%r71, %r70, 2;
	add.s32 	%r72, %r63, %r71;
	ld.shared.v2.f32 	{%f1, %f2}, [%r72];
	.loc	1 33 37                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:33:37
	shl.b32 	%r73, %r41, 2;
	.loc	1 33 35                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:33:35
	add.s32 	%r74, %r73, %r47;
	.loc	1 33 45                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:33:45
	shl.b32 	%r75, %r45, 2;
	and.b32  	%r76, %r75, -16;
	.loc	1 33 42                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:33:42
	add.s32 	%r77, %r74, %r76;
	.loc	1 33 30                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:33:30
	mul.wide.s32 	%rd9, %r77, 4;
	add.s64 	%rd2, %rd5, %rd9;
	.loc	1 33 50                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:33:50
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r9;
	mov.b32 	%f4, %r10;
	.loc	1 36 19                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:36:19
	setp.eq.s32 	%p15, %r47, %r41;
	setp.eq.s32 	%p16, %r52, %r41;
	.loc	1 39 32                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:39:32
	selp.f32 	%f5, 0f3F800000, 0f00000000, %p15;
	selp.f32 	%f6, 0f3F800000, 0f00000000, %p16;
	.loc	1 40 18                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:40:18
	sub.f32 	%f7, %f1, %f3;
	sub.f32 	%f8, %f2, %f4;
	.loc	1 41 18                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:41:18
	add.f32 	%f9, %f5, %f7;
	add.f32 	%f10, %f6, %f8;
	.loc	1 42 19                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:42:19
	sub.f32 	%f11, %f5, %f7;
	sub.f32 	%f12, %f6, %f8;
	.loc	1 43 25                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:43:25
	add.s64 	%rd3, %rd6, %rd8;
	.loc	1 43 43                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:43:43
	bar.sync 	0;
	shl.b32 	%r78, %r24, 3;
	and.b32  	%r79, %r78, 56;
	or.b32  	%r80, %r39, %r79;
	shr.u32 	%r81, %r79, 2;
	add.s32 	%r82, %r80, %r81;
	shl.b32 	%r83, %r82, 2;
	add.s32 	%r11, %r63, %r83;
	mov.b32 	%r12, %f9;
	// begin inline asm
	@%p2 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	or.b32  	%r84, %r79, 4;
	shr.u32 	%r85, %r84, 2;
	add.s32 	%r86, %r85, %r80;
	shl.b32 	%r87, %r86, 2;
	add.s32 	%r88, %r63, %r87;
	add.s32 	%r13, %r88, 16;
	mov.b32 	%r14, %f10;
	// begin inline asm
	@%p2 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r89, %r31, 2, 4;
	add.s32 	%r90, %r89, %r59;
	shl.b32 	%r91, %r90, 2;
	add.s32 	%r92, %r63, %r91;
	ld.shared.u32 	%r15, [%r92];
	ld.shared.u32 	%r16, [%r92+4];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd3 + 0 ], { %r15, %r16 };
	// end inline asm
	.loc	1 44 25                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:44:25
	add.s64 	%rd4, %rd7, %rd8;
	.loc	1 44 44                         // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:44:44
	bar.sync 	0;
	mov.b32 	%r18, %f11;
	// begin inline asm
	@%p2 st.shared.b32 [ %r11 + 0 ], %r18;
	// end inline asm
	mov.b32 	%r20, %f12;
	// begin inline asm
	@%p2 st.shared.b32 [ %r13 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r21, [%r92];
	ld.shared.u32 	%r22, [%r92+4];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd4 + 0 ], { %r21, %r22 };
	// end inline asm
	.loc	1 44 4                          // cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py:44:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/te/cteppa2i7pkxjz75bunbllkkn3yh4uer2bbfayoykcyad6r3r73l.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 101
.b8 112
.b8 112
.b8 97
.b8 50
.b8 105
.b8 55
.b8 112
.b8 107
.b8 120
.b8 106
.b8 122
.b8 55
.b8 53
.b8 98
.b8 117
.b8 110
.b8 98
.b8 108
.b8 108
.b8 107
.b8 107
.b8 110
.b8 51
.b8 121
.b8 104
.b8 52
.b8 117
.b8 101
.b8 114
.b8 50
.b8 98
.b8 98
.b8 102
.b8 97
.b8 121
.b8 111
.b8 121
.b8 107
.b8 99
.b8 121
.b8 97
.b8 100
.b8 54
.b8 114
.b8 51
.b8 114
.b8 55
.b8 51
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 101
.b8 0
	}
	.section	.debug_macinfo	{	}
