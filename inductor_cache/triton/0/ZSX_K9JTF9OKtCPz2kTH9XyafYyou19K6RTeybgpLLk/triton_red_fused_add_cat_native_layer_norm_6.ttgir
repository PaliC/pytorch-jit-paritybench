#blocked = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [4, 4], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 16], order = [0, 1]}>
#blocked2 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#loc = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0)
#loc1 = loc(unknown)
#loc60 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":62:44)
#loc115 = loc(callsite(#loc1 at #loc60))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused_add_cat_native_layer_norm_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg10: i32 loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<7.680000e+02> : tensor<8x1xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<8x512xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<8x512xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<-1> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<12288> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<1x512xi32, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<1> : tensor<8x1xi64, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<1> : tensor<8x1xi64, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<768> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<768> : tensor<1x512xi32, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<768> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<17> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %cst_12 = arith.constant dense<17> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<68> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %cst_14 = arith.constant dense<68> : tensor<8x1xi32, #blocked> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_15 = arith.constant dense<0.000000e+00> : tensor<8x512xf32, #blocked1> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_16 = arith.constant dense<768> : tensor<1x512xi32, #blocked2> loc(#loc1)
    %cst_17 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c768_i32 = arith.constant 768 : i32 loc(#loc1)
    %cst_18 = arith.constant dense<0.000000e+00> : tensor<1x512xf32, #blocked2> loc(#loc1)
    %cst_19 = arith.constant dense<9.99999974E-6> : tensor<8x1xf32, #blocked> loc(#loc1)
    %cst_20 = arith.constant dense<9.99999974E-6> : tensor<8x1xf32, #blocked1> loc(#loc1)
    %cst_21 = arith.constant dense<7.680000e+02> : tensor<8x1xf32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<8x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<8x1xi32, #blocked1> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_14 : tensor<8x1xi32, #blocked> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_13 : tensor<8x1xi32, #blocked1> loc(#loc6)
    %12 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %13 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc7)
    %14 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> loc(#loc7)
    %15 = tt.expand_dims %12 {axis = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x512xi32, #blocked> loc(#loc7)
    %16 = tt.expand_dims %13 {axis = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x512xi32, #blocked1> loc(#loc7)
    %17 = tt.expand_dims %14 {axis = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> -> tensor<1x512xi32, #blocked2> loc(#loc7)
    %18 = arith.remsi %8, %cst_12 : tensor<8x1xi32, #blocked> loc(#loc8)
    %19 = arith.remsi %9, %cst_11 : tensor<8x1xi32, #blocked1> loc(#loc8)
    %20 = arith.divsi %9, %cst_11 : tensor<8x1xi32, #blocked1> loc(#loc9)
    %21 = arith.muli %18, %cst_8 : tensor<8x1xi32, #blocked> loc(#loc10)
    %22 = tt.broadcast %21 : tensor<8x1xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc11)
    %23 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc12)
    %24 = tt.broadcast %10 : tensor<8x1xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc13)
    %25 = tt.broadcast %11 : tensor<8x1xi1, #blocked1> -> tensor<8x512xi1, #blocked1> loc(#loc13)
    %26 = arith.extsi %18 : tensor<8x1xi32, #blocked> to tensor<8x1xi64, #blocked> loc(#loc14)
    %27 = arith.extsi %19 : tensor<8x1xi32, #blocked1> to tensor<8x1xi64, #blocked1> loc(#loc14)
    %28 = arith.cmpi slt, %26, %cst_7 : tensor<8x1xi64, #blocked> loc(#loc14)
    %29 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc15)
    %30 = tt.broadcast %28 : tensor<8x1xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc16)
    %31 = arith.cmpi sge, %27, %cst_6 : tensor<8x1xi64, #blocked1> loc(#loc17)
    %32 = arith.cmpi sge, %26, %cst_7 : tensor<8x1xi64, #blocked> loc(#loc17)
    %33 = arith.muli %20, %cst_4 : tensor<8x1xi32, #blocked1> loc(#loc18)
    %34 = tt.broadcast %33 : tensor<8x1xi32, #blocked1> -> tensor<8x512xi32, #blocked1> loc(#loc19)
    %35 = arith.addi %19, %cst_3 : tensor<8x1xi32, #blocked1> loc(#loc20)
    %36 = arith.remsi %35, %cst_2 : tensor<8x1xi32, #blocked1> loc(#loc21)
    %37 = tt.broadcast %36 : tensor<8x1xi32, #blocked1> -> tensor<8x512xi32, #blocked1> loc(#loc22)
    %38 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x512x!tt.ptr<f32>, #blocked1> loc(#loc23)
    %39 = tt.broadcast %31 : tensor<8x1xi1, #blocked1> -> tensor<8x512xi1, #blocked1> loc(#loc24)
    %40 = tt.broadcast %32 : tensor<8x1xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc24)
    %41 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc25)
    %42 = arith.muli %8, %cst_8 : tensor<8x1xi32, #blocked> loc(#loc26)
    %43 = tt.broadcast %42 : tensor<8x1xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc27)
    %44 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc28)
    %45:3 = scf.for %arg12 = %c0_i32 to %c768_i32 step %c512_i32 iter_args(%arg13 = %cst_0, %arg14 = %cst_0, %arg15 = %cst_0) -> (tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>)  : i32 {
      %68 = tt.splat %arg12 : i32 -> tensor<1x512xi32, #blocked> loc(#loc30)
      %69 = tt.splat %arg12 : i32 -> tensor<1x512xi32, #blocked1> loc(#loc30)
      %70 = arith.addi %68, %15 : tensor<1x512xi32, #blocked> loc(#loc30)
      %71 = arith.addi %69, %16 : tensor<1x512xi32, #blocked1> loc(#loc30)
      %72 = arith.cmpi slt, %70, %cst_10 : tensor<1x512xi32, #blocked> loc(#loc31)
      %73 = arith.cmpi slt, %71, %cst_9 : tensor<1x512xi32, #blocked1> loc(#loc31)
      %74 = tt.broadcast %70 : tensor<1x512xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc11)
      %75 = arith.addi %74, %22 : tensor<8x512xi32, #blocked> loc(#loc11)
      %76 = tt.addptr %23, %75 : tensor<8x512x!tt.ptr<f32>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc12)
      %77 = tt.broadcast %72 : tensor<1x512xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc13)
      %78 = tt.broadcast %73 : tensor<1x512xi1, #blocked1> -> tensor<8x512xi1, #blocked1> loc(#loc13)
      %79 = arith.andi %77, %24 : tensor<8x512xi1, #blocked> loc(#loc13)
      %80 = tt.load %76, %79, %cst_0 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc32)
      %81 = tt.addptr %29, %70 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc15)
      %82 = tt.broadcast %81 : tensor<1x512x!tt.ptr<f32>, #blocked> -> tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc15)
      %83 = arith.andi %77, %30 : tensor<8x512xi1, #blocked> loc(#loc16)
      %84 = arith.andi %83, %24 : tensor<8x512xi1, #blocked> loc(#loc33)
      %85 = tt.load %82, %84, %cst_0 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc34)
      %86 = arith.muli %71, %cst_5 : tensor<1x512xi32, #blocked1> loc(#loc35)
      %87 = tt.broadcast %86 : tensor<1x512xi32, #blocked1> -> tensor<8x512xi32, #blocked1> loc(#loc19)
      %88 = arith.addi %87, %34 : tensor<8x512xi32, #blocked1> loc(#loc19)
      %89 = arith.addi %88, %37 : tensor<8x512xi32, #blocked1> loc(#loc22)
      %90 = tt.addptr %38, %89 : tensor<8x512x!tt.ptr<f32>, #blocked1>, tensor<8x512xi32, #blocked1> loc(#loc23)
      %91 = arith.andi %78, %39 : tensor<8x512xi1, #blocked1> loc(#loc24)
      %92 = arith.andi %77, %40 : tensor<8x512xi1, #blocked> loc(#loc24)
      %93 = arith.andi %91, %25 : tensor<8x512xi1, #blocked1> loc(#loc36)
      %94 = arith.andi %92, %24 : tensor<8x512xi1, #blocked> loc(#loc36)
      %95 = tt.load %90, %93, %cst_15 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<f32>, #blocked1> loc(#loc37)
      %96 = triton_gpu.convert_layout %95 : tensor<8x512xf32, #blocked1> -> tensor<8x512xf32, #blocked> loc(#loc37)
      %97 = tt.addptr %41, %70 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc25)
      %98 = tt.broadcast %97 : tensor<1x512x!tt.ptr<f32>, #blocked> -> tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc25)
      %99 = tt.load %98, %94, %cst_0 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc38)
      %100 = arith.addf %96, %99 : tensor<8x512xf32, #blocked> loc(#loc39)
      %101 = arith.select %40, %100, %cst_0 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc40)
      %102 = arith.select %30, %85, %101 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc41)
      %103 = arith.addf %102, %80 : tensor<8x512xf32, #blocked> loc(#loc42)
      %104 = arith.cmpi eq, %arg12, %c0_i32 : i32 loc(#loc43)
      %105:3 = scf.if %104 -> (tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>) {
        scf.yield %cst_0, %103, %cst_1 : tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked> loc(#loc106)
      } else {
        %111 = arith.subf %103, %arg13 : tensor<8x512xf32, #blocked> loc(#loc107)
        %112 = arith.addf %arg15, %cst_1 : tensor<8x512xf32, #blocked> loc(#loc108)
        %113 = arith.divf %111, %112 : tensor<8x512xf32, #blocked> loc(#loc109)
        %114 = arith.addf %arg13, %113 : tensor<8x512xf32, #blocked> loc(#loc110)
        %115 = arith.subf %103, %114 : tensor<8x512xf32, #blocked> loc(#loc111)
        %116 = arith.mulf %111, %115 : tensor<8x512xf32, #blocked> loc(#loc112)
        %117 = arith.addf %arg14, %116 : tensor<8x512xf32, #blocked> loc(#loc113)
        scf.yield %117, %114, %112 : tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked> loc(#loc113)
      } loc(#loc105)
      %106 = arith.select %79, %105#1, %arg13 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc54)
      %107 = arith.select %79, %105#0, %arg14 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc55)
      %108 = arith.select %79, %105#2, %arg15 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc56)
      %109 = arith.addi %74, %43 : tensor<8x512xi32, #blocked> loc(#loc27)
      %110 = tt.addptr %44, %109 : tensor<8x512x!tt.ptr<f32>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc28)
      tt.store %110, %102, %79 : tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc57)
      scf.yield %106, %107, %108 : tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked> loc(#loc58)
    } loc(#loc29)
    %46:3 = "tt.reduce"(%45#0, %45#1, %45#2) <{axis = 1 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc60)), %arg13: f32 loc(callsite(#loc1 at #loc60)), %arg14: f32 loc(callsite(#loc1 at #loc60)), %arg15: f32 loc(callsite(#loc1 at #loc60)), %arg16: f32 loc(callsite(#loc1 at #loc60)), %arg17: f32 loc(callsite(#loc1 at #loc60))):
      %68 = arith.subf %arg15, %arg12 : f32 loc(#loc128)
      %69 = arith.addf %arg14, %arg17 : f32 loc(#loc129)
      %70 = arith.cmpf oeq, %69, %cst_17 : f32 loc(#loc130)
      %71 = arith.divf %arg17, %69 : f32 loc(#loc131)
      %72 = arith.select %70, %cst_17, %71 : f32 loc(#loc132)
      %73 = arith.mulf %68, %72 : f32 loc(#loc133)
      %74 = arith.addf %arg12, %73 : f32 loc(#loc134)
      %75 = arith.addf %arg13, %arg16 : f32 loc(#loc135)
      %76 = arith.mulf %68, %68 : f32 loc(#loc136)
      %77 = arith.mulf %76, %arg14 : f32 loc(#loc137)
      %78 = arith.mulf %77, %72 : f32 loc(#loc138)
      %79 = arith.addf %75, %78 : f32 loc(#loc139)
      tt.reduce.return %74, %79, %69 : f32, f32, f32 loc(#loc114)
    }) : (tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>) -> (tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>) loc(#loc114)
    %47 = triton_gpu.convert_layout %46#0 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc73)
    %48 = tt.expand_dims %47 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xf32, #blocked1> loc(#loc73)
    %49 = tt.expand_dims %46#0 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc73)
    %50 = triton_gpu.convert_layout %46#1 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc74)
    %51 = tt.expand_dims %50 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xf32, #blocked1> loc(#loc75)
    %52 = tt.expand_dims %46#1 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc75)
    %53 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked1> loc(#loc76)
    %54 = tt.addptr %53, %9 : tensor<8x1x!tt.ptr<f32>, #blocked1>, tensor<8x1xi32, #blocked1> loc(#loc76)
    tt.store %54, %48, %11 : tensor<8x1x!tt.ptr<f32>, #blocked1> loc(#loc77)
    %55 = arith.divf %51, %cst_21 : tensor<8x1xf32, #blocked1> loc(#loc78)
    %56 = arith.divf %52, %cst : tensor<8x1xf32, #blocked> loc(#loc78)
    %57 = arith.addf %55, %cst_20 : tensor<8x1xf32, #blocked1> loc(#loc79)
    %58 = arith.addf %56, %cst_19 : tensor<8x1xf32, #blocked> loc(#loc79)
    %59 = tt.extern_elementwise %57 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<8x1xf32, #blocked1>) -> tensor<8x1xf32, #blocked1> loc(#loc74)
    %60 = tt.extern_elementwise %58 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<8x1xf32, #blocked>) -> tensor<8x1xf32, #blocked> loc(#loc74)
    gpu.barrier loc(#loc80)
    %61 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked1> loc(#loc81)
    %62 = tt.addptr %61, %9 : tensor<8x1x!tt.ptr<f32>, #blocked1>, tensor<8x1xi32, #blocked1> loc(#loc81)
    tt.store %62, %59, %11 : tensor<8x1x!tt.ptr<f32>, #blocked1> loc(#loc82)
    %63 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked2> loc(#loc83)
    %64 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked2> loc(#loc84)
    %65 = tt.broadcast %49 : tensor<8x1xf32, #blocked> -> tensor<8x512xf32, #blocked> loc(#loc85)
    %66 = tt.broadcast %60 : tensor<8x1xf32, #blocked> -> tensor<8x512xf32, #blocked> loc(#loc86)
    %67 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc87)
    scf.for %arg12 = %c0_i32 to %c768_i32 step %c512_i32  : i32 {
      %68 = tt.splat %arg12 : i32 -> tensor<1x512xi32, #blocked> loc(#loc89)
      %69 = tt.splat %arg12 : i32 -> tensor<1x512xi32, #blocked2> loc(#loc89)
      %70 = arith.addi %68, %15 : tensor<1x512xi32, #blocked> loc(#loc89)
      %71 = arith.addi %69, %17 : tensor<1x512xi32, #blocked2> loc(#loc89)
      %72 = arith.cmpi slt, %70, %cst_10 : tensor<1x512xi32, #blocked> loc(#loc90)
      %73 = arith.cmpi slt, %71, %cst_16 : tensor<1x512xi32, #blocked2> loc(#loc90)
      %74 = tt.broadcast %70 : tensor<1x512xi32, #blocked> -> tensor<8x512xi32, #blocked> loc(#loc91)
      %75 = arith.addi %74, %43 : tensor<8x512xi32, #blocked> loc(#loc91)
      %76 = tt.addptr %44, %75 : tensor<8x512x!tt.ptr<f32>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc92)
      %77 = tt.broadcast %72 : tensor<1x512xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc93)
      %78 = arith.andi %77, %24 : tensor<8x512xi1, #blocked> loc(#loc93)
      %79 = tt.load %76, %78, %cst_0 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc94)
      %80 = arith.addi %74, %22 : tensor<8x512xi32, #blocked> loc(#loc95)
      %81 = tt.addptr %23, %80 : tensor<8x512x!tt.ptr<f32>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc96)
      %82 = tt.load %81, %78, %cst_0 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc97)
      %83 = tt.addptr %63, %71 : tensor<1x512x!tt.ptr<f32>, #blocked2>, tensor<1x512xi32, #blocked2> loc(#loc83)
      %84 = tt.load %83, %73, %cst_18 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked2> loc(#loc98)
      %85 = tt.addptr %64, %71 : tensor<1x512x!tt.ptr<f32>, #blocked2>, tensor<1x512xi32, #blocked2> loc(#loc84)
      %86 = tt.load %85, %73, %cst_18 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked2> loc(#loc99)
      %87 = arith.addf %79, %82 : tensor<8x512xf32, #blocked> loc(#loc100)
      %88 = arith.subf %87, %65 : tensor<8x512xf32, #blocked> loc(#loc85)
      %89 = arith.mulf %88, %66 : tensor<8x512xf32, #blocked> loc(#loc86)
      %90 = triton_gpu.convert_layout %89 {fastmath = #arith.fastmath<none>} : tensor<8x512xf32, #blocked> -> tensor<8x512xf32, #blocked2> loc(#loc86)
      %91 = tt.broadcast %84 : tensor<1x512xf32, #blocked2> -> tensor<8x512xf32, #blocked2> loc(#loc101)
      %92 = arith.mulf %90, %91 : tensor<8x512xf32, #blocked2> loc(#loc101)
      %93 = tt.broadcast %86 : tensor<1x512xf32, #blocked2> -> tensor<8x512xf32, #blocked2> loc(#loc102)
      %94 = arith.addf %92, %93 : tensor<8x512xf32, #blocked2> loc(#loc102)
      %95 = tt.addptr %67, %75 : tensor<8x512x!tt.ptr<f32>, #blocked>, tensor<8x512xi32, #blocked> loc(#loc87)
      %96 = triton_gpu.convert_layout %94 : tensor<8x512xf32, #blocked2> -> tensor<8x512xf32, #blocked> loc(#loc103)
      tt.store %95, %96, %78 : tensor<8x512x!tt.ptr<f32>, #blocked> loc(#loc103)
    } loc(#loc88)
    tt.return loc(#loc104)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":22:28)
#loc3 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":22:33)
#loc4 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":23:44)
#loc5 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":23:23)
#loc6 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":24:21)
#loc7 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":25:33)
#loc8 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":26:19)
#loc9 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":27:19)
#loc10 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:44)
#loc11 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:40)
#loc12 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:35)
#loc13 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:57)
#loc14 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":41:22)
#loc15 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":42:34)
#loc16 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":42:82)
#loc17 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":43:23)
#loc18 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:48)
#loc19 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:42)
#loc20 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:63)
#loc21 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:69)
#loc22 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:55)
#loc23 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:34)
#loc24 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:84)
#loc25 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":47:35)
#loc26 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":60:38)
#loc27 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":60:34)
#loc28 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":60:29)
#loc29 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":32:36)
#loc30 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":33:27)
#loc31 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":34:25)
#loc32 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:49)
#loc33 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":42:89)
#loc34 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":42:74)
#loc35 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:37)
#loc36 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:91)
#loc37 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:76)
#loc38 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":47:75)
#loc39 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":48:23)
#loc40 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":50:38)
#loc41 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":51:37)
#loc42 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":52:24)
#loc43 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":55:66)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc45 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":55:55)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc54 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":57:62)
#loc55 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":58:58)
#loc56 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":59:66)
#loc57 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":60:50)
#loc58 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":60:8)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc70 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc72 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc73 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":64:22)
#loc74 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":72:28)
#loc75 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":65:22)
#loc76 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":67:25)
#loc77 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":67:37)
#loc78 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":69:20)
#loc79 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":71:20)
#loc80 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":73:4)
#loc81 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":74:28)
#loc82 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":74:40)
#loc83 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":81:35)
#loc84 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":82:35)
#loc85 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":84:24)
#loc86 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":85:24)
#loc87 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":88:29)
#loc88 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":75:36)
#loc89 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":76:27)
#loc90 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":77:25)
#loc91 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":79:41)
#loc92 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":79:36)
#loc93 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":79:58)
#loc94 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":79:50)
#loc95 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":80:40)
#loc96 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":80:35)
#loc97 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":80:49)
#loc98 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":81:40)
#loc99 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":82:40)
#loc100 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":83:24)
#loc101 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":86:24)
#loc102 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":87:24)
#loc103 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":88:50)
#loc104 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":75:4)
#loc105 = loc(callsite(#loc44 at #loc45))
#loc106 = loc(callsite(#loc46 at #loc45))
#loc107 = loc(callsite(#loc47 at #loc45))
#loc108 = loc(callsite(#loc48 at #loc45))
#loc109 = loc(callsite(#loc49 at #loc45))
#loc110 = loc(callsite(#loc50 at #loc45))
#loc111 = loc(callsite(#loc51 at #loc45))
#loc112 = loc(callsite(#loc52 at #loc45))
#loc113 = loc(callsite(#loc53 at #loc45))
#loc114 = loc(callsite(#loc59 at #loc60))
#loc116 = loc(callsite(#loc61 at #loc59))
#loc117 = loc(callsite(#loc62 at #loc59))
#loc118 = loc(callsite(#loc63 at #loc59))
#loc119 = loc(callsite(#loc64 at #loc59))
#loc120 = loc(callsite(#loc65 at #loc59))
#loc121 = loc(callsite(#loc66 at #loc59))
#loc122 = loc(callsite(#loc67 at #loc59))
#loc123 = loc(callsite(#loc68 at #loc59))
#loc124 = loc(callsite(#loc69 at #loc59))
#loc125 = loc(callsite(#loc70 at #loc59))
#loc126 = loc(callsite(#loc71 at #loc59))
#loc127 = loc(callsite(#loc72 at #loc59))
#loc128 = loc(callsite(#loc116 at #loc60))
#loc129 = loc(callsite(#loc117 at #loc60))
#loc130 = loc(callsite(#loc118 at #loc60))
#loc131 = loc(callsite(#loc119 at #loc60))
#loc132 = loc(callsite(#loc120 at #loc60))
#loc133 = loc(callsite(#loc121 at #loc60))
#loc134 = loc(callsite(#loc122 at #loc60))
#loc135 = loc(callsite(#loc123 at #loc60))
#loc136 = loc(callsite(#loc124 at #loc60))
#loc137 = loc(callsite(#loc125 at #loc60))
#loc138 = loc(callsite(#loc126 at #loc60))
#loc139 = loc(callsite(#loc127 at #loc60))
