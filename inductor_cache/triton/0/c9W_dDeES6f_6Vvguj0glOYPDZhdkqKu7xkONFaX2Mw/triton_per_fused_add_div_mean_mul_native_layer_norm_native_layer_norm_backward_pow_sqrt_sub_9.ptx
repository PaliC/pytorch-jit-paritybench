//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9 // -- Begin function triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9
.visible .entry triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_8,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_9,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_10,
	.param .u32 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_11,
	.param .u32 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_12
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<26>;
	.reg .b32 	%r<143>;
	.reg .f32 	%f<134>;
	.reg .b64 	%rd<27>;
	.loc	1 19 0                          // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd13, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_0];
	ld.param.u64 	%rd14, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_1];
$L__tmp0:
	.loc	1 23 28                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:23:33
	shl.b32 	%r88, %r1, 3;
	ld.param.u64 	%rd15, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_2];
	ld.param.u64 	%rd16, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_3];
	.loc	1 24 44                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:24:44
	mov.u32 	%r89, %tid.x;
	ld.param.u64 	%rd17, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_4];
	bfe.u32 	%r90, %r89, 5, 3;
	ld.param.u64 	%rd18, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_5];
	and.b32  	%r91, %r89, 7;
	ld.param.u64 	%rd19, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_6];
	.loc	1 24 23                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:24:23
	or.b32  	%r92, %r88, %r90;
	ld.param.u64 	%rd20, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_7];
	.loc	1 25 21                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:25:21
	setp.lt.s32 	%p1, %r92, 16;
	ld.param.u64 	%rd21, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_8];
	.loc	1 26 34                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:26:34
	shl.b32 	%r93, %r89, 2;
	ld.param.u64 	%rd22, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_9];
	and.b32  	%r94, %r93, 124;
	ld.param.u64 	%rd23, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_10];
	.loc	1 31 39                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:31:39
	shl.b32 	%r95, %r92, 7;
	.loc	1 31 35                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:31:35
	or.b32  	%r96, %r95, %r94;
	.loc	1 31 30                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:31:30
	mul.wide.s32 	%rd24, %r96, 4;
	add.s64 	%rd1, %rd16, %rd24;
	mov.b32 	%r6, 0;
	.loc	1 31 44                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:31:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 32 34                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:32:34
	add.s64 	%rd2, %rd13, %rd24;
	.loc	1 32 48                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:32:48
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	.loc	1 33 30                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:33:30
	mul.wide.u32 	%rd25, %r94, 4;
	add.s64 	%rd3, %rd17, %rd25;
	mov.pred 	%p11, -1;
	.loc	1 33 35                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:33:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	.loc	1 34 31                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:34:31
	add.s64 	%rd4, %rd18, %rd25;
	.loc	1 34 36                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:34:36
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r22;
	mov.b32 	%f14, %r23;
	mov.b32 	%f15, %r24;
	mov.b32 	%f16, %r25;
	.loc	1 35 31                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:35:31
	add.s64 	%rd5, %rd19, %rd25;
	.loc	1 35 36                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:35:36
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r26;
	mov.b32 	%f18, %r27;
	mov.b32 	%f19, %r28;
	mov.b32 	%f20, %r29;
	.loc	1 36 31                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:36:31
	add.s64 	%rd6, %rd20, %rd25;
	.loc	1 36 36                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:36:36
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 37 31                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:37:31
	add.s64 	%rd7, %rd21, %rd25;
	.loc	1 37 36                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:37:36
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 38 18                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:38:18
	add.f32 	%f21, %f5, %f9;
	add.f32 	%f22, %f6, %f10;
	add.f32 	%f23, %f7, %f11;
	add.f32 	%f24, %f8, %f12;
	.loc	1 39 18                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:39:18
	add.f32 	%f25, %f21, %f1;
	add.f32 	%f26, %f22, %f2;
	add.f32 	%f27, %f23, %f3;
	add.f32 	%f28, %f24, %f4;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f25, %f26;
	add.f32 	%f30, %f27, %f29;
	add.f32 	%f31, %f28, %f30;
	selp.f32 	%f32, %f31, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f32;
	shfl.sync.bfly.b32	%r98, %r97, 16, 31, -1;
	mov.b32 	%f33, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f34;
	shfl.sync.bfly.b32	%r100, %r99, 8, 31, -1;
	mov.b32 	%f35, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r101, %f36;
	shfl.sync.bfly.b32	%r102, %r101, 4, 31, -1;
	mov.b32 	%f37, %r102;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r103, %f38;
	shfl.sync.bfly.b32	%r104, %r103, 2, 31, -1;
	mov.b32 	%f39, %r104;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r105, %f40;
	shfl.sync.bfly.b32	%r106, %r105, 1, 31, -1;
	mov.b32 	%f41, %r106;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
$L__tmp2:
	.loc	1 47 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:47:20
	mov.b32 	%r39, %f42;
	mov.b32 	%r40, 1124073472;
	// begin inline asm
	div.full.f32 %r38, %r39, %r40;
	// end inline asm
	mov.b32 	%f43, %r38;
	.loc	1 48 19                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:48:19
	sub.f32 	%f44, %f25, %f43;
	sub.f32 	%f45, %f26, %f43;
	sub.f32 	%f46, %f27, %f43;
	sub.f32 	%f47, %f28, %f43;
	.loc	1 49 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:49:20
	mul.f32 	%f48, %f45, %f45;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f49, %f44, %f44, %f48;
	fma.rn.f32 	%f50, %f46, %f46, %f49;
	fma.rn.f32 	%f51, %f47, %f47, %f50;
	selp.f32 	%f52, %f51, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r107, %f52;
	shfl.sync.bfly.b32	%r108, %r107, 16, 31, -1;
	mov.b32 	%f53, %r108;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r109, %f54;
	shfl.sync.bfly.b32	%r110, %r109, 8, 31, -1;
	mov.b32 	%f55, %r110;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r111, %f56;
	shfl.sync.bfly.b32	%r112, %r111, 4, 31, -1;
	mov.b32 	%f57, %r112;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r113, %f58;
	shfl.sync.bfly.b32	%r114, %r113, 2, 31, -1;
	mov.b32 	%f59, %r114;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f60;
	shfl.sync.bfly.b32	%r116, %r115, 1, 31, -1;
	mov.b32 	%f61, %r116;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
$L__tmp4:
	.loc	1 75 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:75:20
	shl.b32 	%r117, %r90, 2;
	mov.u32 	%r118, global_smem;
	add.s32 	%r41, %r118, %r117;
	mov.b32 	%r42, %f62;
	// begin inline asm
	@%p11 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r119, %r91, 2;
	add.s32 	%r120, %r118, %r119;
	.loc	1 55 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:55:20
	ld.shared.u32 	%r44, [%r120];
	// begin inline asm
	div.full.f32 %r43, %r44, %r40;
	// end inline asm
	mov.b32 	%f63, %r43;
	// begin inline asm
	div.full.f32 %r46, %r42, %r40;
	// end inline asm
	mov.b32 	%f64, %r46;
	.loc	1 57 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:57:20
	add.f32 	%f65, %f63, 0f3727C5AC;
	add.f32 	%f66, %f64, 0f3727C5AC;
	.loc	1 58 28                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:58:28
	rsqrt.approx.ftz.f32 	%f67, %f65;
	rsqrt.approx.ftz.f32 	%f68, %f66;
	.loc	1 59 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:59:20
	mul.f32 	%f69, %f44, %f68;
	mul.f32 	%f70, %f45, %f68;
	mul.f32 	%f71, %f46, %f68;
	mul.f32 	%f72, %f47, %f68;
	.loc	1 61 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:61:20
	fma.rn.f32 	%f73, %f69, %f13, %f17;
	fma.rn.f32 	%f74, %f70, %f14, %f18;
	fma.rn.f32 	%f75, %f71, %f15, %f19;
	fma.rn.f32 	%f76, %f72, %f16, %f20;
$L__tmp5:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f77, %f73, %f74;
	add.f32 	%f78, %f75, %f77;
	add.f32 	%f79, %f76, %f78;
	selp.f32 	%f80, %f79, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r121, %f80;
	shfl.sync.bfly.b32	%r122, %r121, 16, 31, -1;
	mov.b32 	%f81, %r122;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f80, %f81;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r123, %f82;
	shfl.sync.bfly.b32	%r124, %r123, 8, 31, -1;
	mov.b32 	%f83, %r124;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r125, %f84;
	shfl.sync.bfly.b32	%r126, %r125, 4, 31, -1;
	mov.b32 	%f85, %r126;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r127, %f86;
	shfl.sync.bfly.b32	%r128, %r127, 2, 31, -1;
	mov.b32 	%f87, %r128;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r129, %f88;
	shfl.sync.bfly.b32	%r130, %r129, 1, 31, -1;
	mov.b32 	%f89, %r130;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f88, %f89;
$L__tmp6:
	.loc	1 65 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:65:20
	bar.sync 	0;
	mov.b32 	%r50, %f90;
	// begin inline asm
	@%p11 st.shared.b32 [ %r41 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r52, [%r120];
	// begin inline asm
	div.full.f32 %r81, %r52, %r40;
	// end inline asm
	// begin inline asm
	div.full.f32 %r54, %r50, %r40;
	// end inline asm
	mov.b32 	%f91, %r54;
	.loc	1 66 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:66:20
	sub.f32 	%f92, %f73, %f91;
	sub.f32 	%f93, %f74, %f91;
	sub.f32 	%f94, %f75, %f91;
	sub.f32 	%f95, %f76, %f91;
	.loc	1 67 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:67:20
	mul.f32 	%f96, %f93, %f93;
$L__tmp7:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f97, %f92, %f92, %f96;
	fma.rn.f32 	%f98, %f94, %f94, %f97;
	fma.rn.f32 	%f99, %f95, %f95, %f98;
	selp.f32 	%f100, %f99, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r131, %f100;
	shfl.sync.bfly.b32	%r132, %r131, 16, 31, -1;
	mov.b32 	%f101, %r132;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f102, %f100, %f101;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r133, %f102;
	shfl.sync.bfly.b32	%r134, %r133, 8, 31, -1;
	mov.b32 	%f103, %r134;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f104, %f102, %f103;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r135, %f104;
	shfl.sync.bfly.b32	%r136, %r135, 4, 31, -1;
	mov.b32 	%f105, %r136;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f106, %f104, %f105;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r137, %f106;
	shfl.sync.bfly.b32	%r138, %r137, 2, 31, -1;
	mov.b32 	%f107, %r138;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f108, %f106, %f107;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r139, %f108;
	shfl.sync.bfly.b32	%r140, %r139, 1, 31, -1;
	mov.b32 	%f109, %r140;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f110, %f108, %f109;
$L__tmp8:
	.loc	1 73 27                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:73:27
	bar.sync 	0;
	mov.b32 	%r58, %f110;
	// begin inline asm
	@%p11 st.shared.b32 [ %r41 + 0 ], %r58;
	// end inline asm
	bar.sync 	0;
	.loc	1 71 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:71:20
	ld.shared.u32 	%r60, [%r120];
	// begin inline asm
	div.full.f32 %r59, %r60, %r40;
	// end inline asm
	mov.b32 	%f111, %r59;
	// begin inline asm
	div.full.f32 %r62, %r58, %r40;
	// end inline asm
	mov.b32 	%f112, %r62;
	.loc	1 72 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:72:20
	add.f32 	%f113, %f111, 0f3727C5AC;
	add.f32 	%f114, %f112, 0f3727C5AC;
	.loc	1 73 27                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:73:27
	sqrt.approx.ftz.f32 	%f115, %f113;
	sqrt.approx.ftz.f32 	%f116, %f114;
	.loc	1 37 36                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:37:36
	mov.b32 	%f117, %r37;
	mov.b32 	%f118, %r36;
	mov.b32 	%f119, %r35;
	mov.b32 	%f120, %r34;
	.loc	1 36 36                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:36:36
	mov.b32 	%f121, %r33;
	mov.b32 	%f122, %r32;
	mov.b32 	%f123, %r31;
	mov.b32 	%f124, %r30;
	.loc	1 24 23                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:24:23
	or.b32  	%r141, %r88, %r91;
	.loc	1 25 21                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:25:21
	setp.lt.s32 	%p24, %r141, 16;
	.loc	1 75 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:75:20
	mul.f32 	%f125, %f67, 0f3C000000;
	.loc	1 76 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:76:20
	mov.b32 	%r67, %f116;
	mov.b32 	%r66, %f92;
	// begin inline asm
	div.full.f32 %r65, %r66, %r67;
	// end inline asm
	mov.b32 	%f126, %r65;
	mov.b32 	%r69, %f93;
	// begin inline asm
	div.full.f32 %r68, %r69, %r67;
	// end inline asm
	mov.b32 	%f127, %r68;
	mov.b32 	%r72, %f94;
	// begin inline asm
	div.full.f32 %r71, %r72, %r67;
	// end inline asm
	mov.b32 	%f128, %r71;
	mov.b32 	%r75, %f95;
	// begin inline asm
	div.full.f32 %r74, %r75, %r67;
	// end inline asm
	mov.b32 	%f129, %r74;
	.loc	1 78 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:78:20
	fma.rn.f32 	%f130, %f126, %f124, %f120;
	fma.rn.f32 	%f131, %f127, %f123, %f119;
	fma.rn.f32 	%f132, %f128, %f122, %f118;
	fma.rn.f32 	%f133, %f129, %f121, %f117;
	.loc	1 79 49                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:79:49
	mov.b32 	%r77, %f69;
	mov.b32 	%r78, %f70;
	mov.b32 	%r79, %f71;
	mov.b32 	%r80, %f72;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r77, %r78, %r79, %r80 };
	// end inline asm
	.loc	1 80 4                          // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:80:4
	bar.sync 	0;
	.loc	1 81 28                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:81:28
	mul.wide.s32 	%rd26, %r141, 4;
	add.s64 	%rd9, %rd14, %rd26;
	.loc	1 81 40                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:81:40
	and.b32  	%r142, %r89, 248;
	setp.eq.s32 	%p25, %r142, 0;
	and.pred  	%p20, %p25, %p24;
	// begin inline asm
	@%p20 st.global.b32 [ %rd9 + 0 ], { %r81 };
	// end inline asm
	.loc	1 82 4                          // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:82:4
	bar.sync 	0;
	.loc	1 83 28                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:83:28
	add.s64 	%rd10, %rd15, %rd26;
	.loc	1 83 40                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:83:40
	mov.b32 	%r82, %f115;
	// begin inline asm
	@%p20 st.global.b32 [ %rd10 + 0 ], { %r82 };
	// end inline asm
	.loc	1 84 25                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:84:25
	add.s64 	%rd11, %rd22, %rd26;
	.loc	1 84 37                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:84:37
	mov.b32 	%r83, %f125;
	// begin inline asm
	@%p20 st.global.b32 [ %rd11 + 0 ], { %r83 };
	// end inline asm
	.loc	1 85 25                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:85:25
	add.s64 	%rd12, %rd23, %rd24;
	.loc	1 85 46                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:85:46
	mov.b32 	%r84, %f130;
	mov.b32 	%r85, %f131;
	mov.b32 	%r86, %f132;
	mov.b32 	%r87, %f133;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd12 + 0 ], { %r84, %r85, %r86, %r87 };
	// end inline asm
	.loc	1 85 4                          // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:85:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/tp/ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 310                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x12f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 112
.b8 113
.b8 121
.b8 113
.b8 100
.b8 110
.b8 114
.b8 111
.b8 115
.b8 110
.b8 52
.b8 99
.b8 109
.b8 99
.b8 119
.b8 55
.b8 119
.b8 102
.b8 116
.b8 102
.b8 99
.b8 99
.b8 112
.b8 101
.b8 119
.b8 52
.b8 51
.b8 104
.b8 111
.b8 113
.b8 122
.b8 97
.b8 107
.b8 107
.b8 105
.b8 55
.b8 115
.b8 52
.b8 104
.b8 97
.b8 109
.b8 97
.b8 98
.b8 103
.b8 100
.b8 115
.b8 54
.b8 109
.b8 100
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 112
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x60 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc3:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xd8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 52                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x108:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 64                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x120:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 70                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
