//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__unsafe_index_convolution_native_group_norm_34 // -- Begin function triton_red_fused__unsafe_index_convolution_native_group_norm_34
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__unsafe_index_convolution_native_group_norm_34
.visible .entry triton_red_fused__unsafe_index_convolution_native_group_norm_34(
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_6,
	.param .u32 triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_7,
	.param .u32 triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_8
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<72>;
	.reg .b32 	%r<225>;
	.reg .f32 	%f<327>;
	.reg .b64 	%rd<139>;
	.loc	1 19 0                          // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:19:0

// %bb.0:
	ld.param.u64 	%rd15, [triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_6];
	ld.param.u64 	%rd14, [triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_5];
	ld.param.u64 	%rd13, [triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_4];
	ld.param.u64 	%rd12, [triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_1];
	ld.param.u64 	%rd11, [triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_0];
$L__tmp0:
	.loc	1 22 28                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:22:28
	// begin inline asm
	mov.u32 %r23, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:22:33
	shl.b32 	%r25, %r23, 3;
	ld.param.u64 	%rd18, [triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_2];
	.loc	1 23 44                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:23:44
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd19, [triton_red_fused__unsafe_index_convolution_native_group_norm_34_param_3];
	and.b32  	%r2, %r1, 7;
	bfe.u32 	%r26, %r1, 7, 2;
	.loc	1 23 23                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:23:23
	or.b32  	%r3, %r25, %r2;
	or.b32  	%r4, %r25, %r26;
	or.b32  	%r5, %r4, 4;
	.loc	1 24 21                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:24:21
	setp.lt.s32 	%p2, %r3, 1024;
	.loc	1 25 33                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:25:33
	shr.u32 	%r27, %r1, 3;
	bfe.u32 	%r28, %r1, 3, 6;
	and.b32  	%r29, %r1, 511;
	shl.b32 	%r30, %r1, 2;
	.loc	1 27 19                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:27:19
	shr.s32 	%r32, %r3, 31;
	shr.u32 	%r33, %r32, 30;
	add.s32 	%r34, %r3, %r33;
	shr.s32 	%r35, %r34, 2;
	.loc	1 26 19                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:26:19
	and.b32  	%r36, %r34, 536870908;
	sub.s32 	%r37, %r3, %r36;
	.loc	1 28 26                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:28:26
	shr.s32 	%r38, %r34, 31;
	shr.u32 	%r39, %r38, 26;
	add.s32 	%r40, %r35, %r39;
	and.b32  	%r41, %r40, -64;
	sub.s32 	%r42, %r35, %r41;
	.loc	1 29 31                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:29:31
	mul.wide.s32 	%rd20, %r42, 4;
	add.s64 	%rd16, %rd18, %rd20;
	.loc	1 29 36                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:29:36
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r24 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r24;
	.loc	1 41 41                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:41:41
	shl.b32 	%r6, %r37, 3;
	.loc	1 54 69                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:54:69
	shl.b32 	%r43, %r35, 12;
	.loc	1 54 64                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:54:64
	cvt.s64.s32 	%rd1, %r43;
	and.b32  	%r7, %r1, 31;
	mul.wide.u32 	%rd21, %r7, 8;
	add.s64 	%rd46, %rd11, %rd21;
	shl.b32 	%r44, %r29, 4;
	mov.u32 	%r45, global_smem;
	add.s32 	%r67, %r45, %r44;
	shl.b32 	%r46, %r28, 4;
	add.s32 	%r9, %r45, %r46;
	shl.b32 	%r47, %r1, 9;
	and.b32  	%r48, %r47, 3584;
	or.b32  	%r49, %r48, %r28;
	and.b32  	%r50, %r30, 2044;
	shr.u32 	%r51, %r48, 5;
	add.s32 	%r52, %r45, %r51;
	shl.b32 	%r53, %r49, 2;
	add.s32 	%r104, %r52, %r53;
	add.s32 	%r106, %r104, 256;
	add.s32 	%r108, %r104, 512;
	add.s32 	%r110, %r104, 768;
	add.s32 	%r112, %r104, 1024;
	add.s32 	%r114, %r104, 1280;
	add.s32 	%r116, %r104, 1536;
	add.s32 	%r118, %r104, 1792;
	and.b32  	%r54, %r27, 48;
	add.s32 	%r55, %r45, %r54;
	shl.b32 	%r56, %r50, 2;
	add.s32 	%r18, %r55, %r56;
	or.b32  	%r57, %r50, 2048;
	shr.u32 	%r58, %r57, 5;
	and.b32  	%r59, %r58, 112;
	add.s32 	%r60, %r45, %r59;
	add.s32 	%r19, %r60, %r56;
	.loc	1 34 36                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:34:36
	bfe.u32 	%r224, %r1, 5, 4;
	and.b32  	%r61, %r1, 127;
	mul.wide.u32 	%rd22, %r61, 16;
	shl.b32 	%r62, %r4, 13;
	or.b32  	%r63, %r62, 32768;
	mul.wide.s32 	%rd23, %r63, 4;
	or.b64  	%rd24, %rd22, %rd23;
	add.s64 	%rd137, %rd19, %rd24;
	shl.b32 	%r64, %r23, 16;
	shl.b32 	%r65, %r26, 13;
	or.b32  	%r66, %r64, %r65;
	mul.wide.s32 	%rd25, %r66, 4;
	or.b64  	%rd26, %rd22, %rd25;
	add.s64 	%rd136, %rd19, %rd26;
	mov.f32 	%f106, 0f00000000;
	mov.u64 	%rd138, 0;
	mov.pred 	%p18, -1;
	shl.b64 	%rd101, %rd1, 2;
	mov.f32 	%f108, 0f3F800000;
	mov.f32 	%f279, %f106;
	mov.f32 	%f280, %f106;
	mov.f32 	%f281, %f106;
	mov.f32 	%f282, %f106;
	mov.f32 	%f283, %f106;
	mov.f32 	%f284, %f106;
	mov.f32 	%f285, %f106;
	mov.f32 	%f286, %f106;
	mov.f32 	%f287, %f106;
	mov.f32 	%f288, %f106;
	mov.f32 	%f289, %f106;
	mov.f32 	%f290, %f106;
	mov.f32 	%f291, %f106;
	mov.f32 	%f292, %f106;
	mov.f32 	%f293, %f106;
	mov.f32 	%f294, %f106;
	mov.f32 	%f295, %f106;
	mov.f32 	%f296, %f106;
	mov.f32 	%f297, %f106;
	mov.f32 	%f298, %f106;
	mov.f32 	%f299, %f106;
	mov.f32 	%f300, %f106;
	mov.f32 	%f301, %f106;
	mov.f32 	%f302, %f106;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %._crit_edge
                                        //   in Loop: Header=BB0_1 Depth=1
	.loc	1 24 21                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:24:21
	setp.lt.s32 	%p41, %r5, 1024;
	setp.lt.s32 	%p40, %r4, 1024;
	.loc	1 60 62                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:60:62
	selp.f32 	%f295, %f311, %f295, %p2;
	selp.f32 	%f296, %f312, %f296, %p2;
	selp.f32 	%f297, %f313, %f297, %p2;
	selp.f32 	%f298, %f314, %f298, %p2;
	selp.f32 	%f299, %f315, %f299, %p2;
	selp.f32 	%f300, %f316, %f300, %p2;
	selp.f32 	%f301, %f317, %f301, %p2;
	selp.f32 	%f302, %f318, %f302, %p2;
	.loc	1 61 58                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:61:58
	selp.f32 	%f287, %f303, %f287, %p2;
	selp.f32 	%f288, %f304, %f288, %p2;
	selp.f32 	%f289, %f305, %f289, %p2;
	selp.f32 	%f290, %f306, %f290, %p2;
	selp.f32 	%f291, %f307, %f291, %p2;
	selp.f32 	%f292, %f308, %f292, %p2;
	selp.f32 	%f293, %f309, %f293, %p2;
	selp.f32 	%f294, %f310, %f294, %p2;
	.loc	1 62 66                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:62:66
	selp.f32 	%f279, %f319, %f279, %p2;
	selp.f32 	%f280, %f320, %f280, %p2;
	selp.f32 	%f281, %f321, %f281, %p2;
	selp.f32 	%f282, %f322, %f282, %p2;
	selp.f32 	%f283, %f323, %f283, %p2;
	selp.f32 	%f284, %f324, %f284, %p2;
	selp.f32 	%f285, %f325, %f285, %p2;
	selp.f32 	%f286, %f326, %f286, %p2;
	.loc	1 63 51                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:63:51
	bar.sync 	0;
	mov.b32 	%r105, %f26;
	// begin inline asm
	@%p18 st.shared.b32 [ %r104 + 0 ], %r105;
	// end inline asm
	mov.b32 	%r107, %f27;
	// begin inline asm
	@%p18 st.shared.b32 [ %r106 + 0 ], %r107;
	// end inline asm
	mov.b32 	%r109, %f28;
	// begin inline asm
	@%p18 st.shared.b32 [ %r108 + 0 ], %r109;
	// end inline asm
	mov.b32 	%r111, %f29;
	// begin inline asm
	@%p18 st.shared.b32 [ %r110 + 0 ], %r111;
	// end inline asm
	mov.b32 	%r113, %f30;
	// begin inline asm
	@%p18 st.shared.b32 [ %r112 + 0 ], %r113;
	// end inline asm
	mov.b32 	%r115, %f31;
	// begin inline asm
	@%p18 st.shared.b32 [ %r114 + 0 ], %r115;
	// end inline asm
	mov.b32 	%r117, %f32;
	// begin inline asm
	@%p18 st.shared.b32 [ %r116 + 0 ], %r117;
	// end inline asm
	mov.b32 	%r119, %f33;
	// begin inline asm
	@%p18 st.shared.b32 [ %r118 + 0 ], %r119;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r124, %r125, %r126, %r127}, [%r19+8192];
	ld.shared.v4.u32 	{%r120, %r121, %r122, %r123}, [%r18];
	// begin inline asm
	@%p40 st.global.v4.b32 [ %rd136 + 0 ], { %r120, %r121, %r122, %r123 };
	// end inline asm
	// begin inline asm
	@%p41 st.global.v4.b32 [ %rd137 + 0 ], { %r124, %r125, %r126, %r127 };
	// end inline asm
	.loc	1 34 36                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:34:36
	add.s64 	%rd8, %rd138, 512;
	add.s32 	%r224, %r224, 16;
	add.s64 	%rd137, %rd137, 2048;
	add.s64 	%rd136, %rd136, 2048;
	setp.lt.u64 	%p43, %rd138, 7680;
	mov.u64 	%rd138, %rd8;
	@%p43 bra 	$L__BB0_1;
	bra.uni 	$L__BB0_4;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 36                          // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:0:36
	cvt.u32.u64 	%r76, %rd138;
	.loc	1 37 23                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:37:23
	shr.u32 	%r77, %r76, 10;
	.loc	1 38 31                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:38:31
	and.b32  	%r78, %r224, 31;
	.loc	1 41 39                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:41:39
	or.b32  	%r79, %r77, %r6;
	.loc	1 41 34                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:41:34
	mul.wide.s32 	%rd56, %r79, 8;
	add.s64 	%rd28, %rd11, %rd56;
	.loc	1 41 46                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:41:46
	// begin inline asm
	mov.u64 %rd27, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd27 }, [ %rd28 + 0 ];
	@!%p2 mov.u64 %rd27, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd29 }, [ %rd28 + 0 ];
	@!%p2 mov.u64 %rd29, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd31, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd31 }, [ %rd28 + 0 ];
	@!%p2 mov.u64 %rd31, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd33, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd33 }, [ %rd28 + 0 ];
	@!%p2 mov.u64 %rd33, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd35, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd35 }, [ %rd28 + 0 ];
	@!%p2 mov.u64 %rd35, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd37, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd37 }, [ %rd28 + 0 ];
	@!%p2 mov.u64 %rd37, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd39, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd39 }, [ %rd28 + 0 ];
	@!%p2 mov.u64 %rd39, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd41, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd41 }, [ %rd28 + 0 ];
	@!%p2 mov.u64 %rd41, 0x0;
	// end inline asm
	.loc	1 42 34                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:42:34
	mul.wide.u32 	%rd57, %r78, 8;
	add.s64 	%rd44, %rd11, %rd57;
	.loc	1 42 39                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:42:39
	// begin inline asm
	mov.u64 %rd43, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd43 }, [ %rd44 + 0 ];
	@!%p18 mov.u64 %rd43, 0x0;
	// end inline asm
	.loc	1 43 39                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:43:39
	// begin inline asm
	mov.u64 %rd45, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd45 }, [ %rd46 + 0 ];
	@!%p18 mov.u64 %rd45, 0x0;
	// end inline asm
	.loc	1 47 36                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:47:36
	shr.u64 	%rd58, %rd27, 59;
	and.b64  	%rd59, %rd58, 16;
	add.s64 	%rd60, %rd59, %rd27;
	shr.u64 	%rd61, %rd29, 59;
	and.b64  	%rd62, %rd61, 16;
	add.s64 	%rd63, %rd62, %rd29;
	shr.u64 	%rd64, %rd31, 59;
	and.b64  	%rd65, %rd64, 16;
	add.s64 	%rd66, %rd65, %rd31;
	shr.u64 	%rd67, %rd33, 59;
	and.b64  	%rd68, %rd67, 16;
	add.s64 	%rd69, %rd68, %rd33;
	shr.u64 	%rd70, %rd35, 59;
	and.b64  	%rd71, %rd70, 16;
	add.s64 	%rd72, %rd71, %rd35;
	shr.u64 	%rd73, %rd37, 59;
	and.b64  	%rd74, %rd73, 16;
	add.s64 	%rd75, %rd74, %rd37;
	shr.u64 	%rd76, %rd39, 59;
	and.b64  	%rd77, %rd76, 16;
	add.s64 	%rd78, %rd77, %rd39;
	shr.u64 	%rd79, %rd41, 59;
	and.b64  	%rd80, %rd79, 16;
	add.s64 	%rd81, %rd80, %rd41;
	.loc	1 53 39                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:53:39
	shr.u64 	%rd82, %rd45, 59;
	shr.u64 	%rd83, %rd43, 59;
	and.b64  	%rd84, %rd83, 16;
	and.b64  	%rd85, %rd82, 16;
	add.s64 	%rd86, %rd85, %rd45;
	add.s64 	%rd87, %rd84, %rd43;
	.loc	1 54 46                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:54:46
	shl.b64 	%rd88, %rd87, 4;
	.loc	1 54 43                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:54:43
	add.s64 	%rd47, %rd86, %rd88;
	.loc	1 54 35                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:54:35
	bar.sync 	0;
	// begin inline asm
	@%p18 st.shared.b64 [ %r67 + 0 ], %rd47;
	// end inline asm
	bar.sync 	0;
	ld.shared.u64 	%rd89, [%r9];
	ld.shared.u64 	%rd90, [%r9+1024];
	ld.shared.u64 	%rd91, [%r9+2048];
	ld.shared.u64 	%rd92, [%r9+3072];
	ld.shared.u64 	%rd93, [%r9+4096];
	ld.shared.u64 	%rd94, [%r9+5120];
	ld.shared.u64 	%rd95, [%r9+6144];
	ld.shared.u64 	%rd96, [%r9+7168];
	shl.b64 	%rd97, %rd89, 2;
	add.s64 	%rd98, %rd12, %rd97;
	shl.b64 	%rd99, %rd60, 10;
	add.s64 	%rd100, %rd98, %rd99;
	add.s64 	%rd48, %rd100, %rd101;
	shl.b64 	%rd102, %rd90, 2;
	add.s64 	%rd103, %rd12, %rd102;
	shl.b64 	%rd104, %rd63, 10;
	add.s64 	%rd105, %rd103, %rd104;
	add.s64 	%rd49, %rd105, %rd101;
	shl.b64 	%rd106, %rd91, 2;
	add.s64 	%rd107, %rd12, %rd106;
	shl.b64 	%rd108, %rd66, 10;
	add.s64 	%rd109, %rd107, %rd108;
	add.s64 	%rd50, %rd109, %rd101;
	shl.b64 	%rd110, %rd92, 2;
	add.s64 	%rd111, %rd12, %rd110;
	shl.b64 	%rd112, %rd69, 10;
	add.s64 	%rd113, %rd111, %rd112;
	add.s64 	%rd51, %rd113, %rd101;
	shl.b64 	%rd114, %rd93, 2;
	add.s64 	%rd115, %rd12, %rd114;
	shl.b64 	%rd116, %rd72, 10;
	add.s64 	%rd117, %rd115, %rd116;
	add.s64 	%rd52, %rd117, %rd101;
	shl.b64 	%rd118, %rd94, 2;
	add.s64 	%rd119, %rd12, %rd118;
	shl.b64 	%rd120, %rd75, 10;
	add.s64 	%rd121, %rd119, %rd120;
	add.s64 	%rd53, %rd121, %rd101;
	shl.b64 	%rd122, %rd95, 2;
	add.s64 	%rd123, %rd12, %rd122;
	shl.b64 	%rd124, %rd78, 10;
	add.s64 	%rd125, %rd123, %rd124;
	add.s64 	%rd54, %rd125, %rd101;
	shl.b64 	%rd126, %rd96, 2;
	add.s64 	%rd127, %rd12, %rd126;
	shl.b64 	%rd128, %rd81, 10;
	add.s64 	%rd129, %rd127, %rd128;
	add.s64 	%rd55, %rd129, %rd101;
	.loc	1 54 74                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:54:74
	// begin inline asm
	mov.u32 %r68, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r68 }, [ %rd48 + 0 ];
	// end inline asm
	mov.b32 	%f109, %r68;
	// begin inline asm
	mov.u32 %r69, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r69 }, [ %rd49 + 0 ];
	// end inline asm
	mov.b32 	%f110, %r69;
	// begin inline asm
	mov.u32 %r70, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r70 }, [ %rd50 + 0 ];
	// end inline asm
	mov.b32 	%f111, %r70;
	// begin inline asm
	mov.u32 %r71, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r71 }, [ %rd51 + 0 ];
	// end inline asm
	mov.b32 	%f112, %r71;
	// begin inline asm
	mov.u32 %r72, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r72 }, [ %rd52 + 0 ];
	// end inline asm
	mov.b32 	%f113, %r72;
	// begin inline asm
	mov.u32 %r73, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r73 }, [ %rd53 + 0 ];
	// end inline asm
	mov.b32 	%f114, %r73;
	// begin inline asm
	mov.u32 %r74, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r74 }, [ %rd54 + 0 ];
	// end inline asm
	mov.b32 	%f115, %r74;
	// begin inline asm
	mov.u32 %r75, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r75 }, [ %rd55 + 0 ];
	// end inline asm
	mov.b32 	%f116, %r75;
	.loc	1 55 24                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:55:24
	add.f32 	%f26, %f1, %f109;
	add.f32 	%f27, %f1, %f110;
	add.f32 	%f28, %f1, %f111;
	add.f32 	%f29, %f1, %f112;
	add.f32 	%f30, %f1, %f113;
	add.f32 	%f31, %f1, %f114;
	add.f32 	%f32, %f1, %f115;
	add.f32 	%f33, %f1, %f116;
	.loc	1 58 66                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:58:66
	setp.eq.s64 	%p31, %rd138, 0;
	mov.f32 	%f303, %f106;
	mov.f32 	%f304, %f106;
	mov.f32 	%f305, %f106;
	mov.f32 	%f306, %f106;
	mov.f32 	%f307, %f106;
	mov.f32 	%f308, %f106;
	mov.f32 	%f309, %f106;
	mov.f32 	%f310, %f106;
	mov.f32 	%f311, %f26;
	mov.f32 	%f312, %f27;
	mov.f32 	%f313, %f28;
	mov.f32 	%f314, %f29;
	mov.f32 	%f315, %f30;
	mov.f32 	%f316, %f31;
	mov.f32 	%f317, %f32;
	mov.f32 	%f318, %f33;
	mov.f32 	%f319, %f108;
	mov.f32 	%f320, %f108;
	mov.f32 	%f321, %f108;
	mov.f32 	%f322, %f108;
	mov.f32 	%f323, %f108;
	mov.f32 	%f324, %f108;
	mov.f32 	%f325, %f108;
	mov.f32 	%f326, %f108;
$L__tmp1:
	.loc	2 178 7                         // triton_helpers.py:178:7
	@%p31 bra 	$L__BB0_3;
// %bb.2:                               //   in Loop: Header=BB0_1 Depth=1
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f117, %f26, %f295;
	sub.f32 	%f118, %f27, %f296;
	sub.f32 	%f119, %f28, %f297;
	sub.f32 	%f120, %f29, %f298;
	sub.f32 	%f121, %f30, %f299;
	sub.f32 	%f122, %f31, %f300;
	sub.f32 	%f123, %f32, %f301;
	sub.f32 	%f124, %f33, %f302;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f319, %f279, 0f3F800000;
	add.f32 	%f320, %f280, 0f3F800000;
	add.f32 	%f321, %f281, 0f3F800000;
	add.f32 	%f322, %f282, 0f3F800000;
	add.f32 	%f323, %f283, 0f3F800000;
	add.f32 	%f324, %f284, 0f3F800000;
	add.f32 	%f325, %f285, 0f3F800000;
	add.f32 	%f326, %f286, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r81, %f117;
	mov.b32 	%r82, %f319;
	// begin inline asm
	div.full.f32 %r80, %r81, %r82;
	// end inline asm
	mov.b32 	%f125, %r80;
	mov.b32 	%r84, %f118;
	mov.b32 	%r85, %f320;
	// begin inline asm
	div.full.f32 %r83, %r84, %r85;
	// end inline asm
	mov.b32 	%f126, %r83;
	mov.b32 	%r87, %f119;
	mov.b32 	%r88, %f321;
	// begin inline asm
	div.full.f32 %r86, %r87, %r88;
	// end inline asm
	mov.b32 	%f127, %r86;
	mov.b32 	%r90, %f120;
	mov.b32 	%r91, %f322;
	// begin inline asm
	div.full.f32 %r89, %r90, %r91;
	// end inline asm
	mov.b32 	%f128, %r89;
	mov.b32 	%r93, %f121;
	mov.b32 	%r94, %f323;
	// begin inline asm
	div.full.f32 %r92, %r93, %r94;
	// end inline asm
	mov.b32 	%f129, %r92;
	mov.b32 	%r96, %f122;
	mov.b32 	%r97, %f324;
	// begin inline asm
	div.full.f32 %r95, %r96, %r97;
	// end inline asm
	mov.b32 	%f130, %r95;
	mov.b32 	%r99, %f123;
	mov.b32 	%r100, %f325;
	// begin inline asm
	div.full.f32 %r98, %r99, %r100;
	// end inline asm
	mov.b32 	%f131, %r98;
	mov.b32 	%r102, %f124;
	mov.b32 	%r103, %f326;
	// begin inline asm
	div.full.f32 %r101, %r102, %r103;
	// end inline asm
	mov.b32 	%f132, %r101;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f311, %f295, %f125;
	add.f32 	%f312, %f296, %f126;
	add.f32 	%f313, %f297, %f127;
	add.f32 	%f314, %f298, %f128;
	add.f32 	%f315, %f299, %f129;
	add.f32 	%f316, %f300, %f130;
	add.f32 	%f317, %f301, %f131;
	add.f32 	%f318, %f302, %f132;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f133, %f26, %f311;
	sub.f32 	%f134, %f27, %f312;
	sub.f32 	%f135, %f28, %f313;
	sub.f32 	%f136, %f29, %f314;
	sub.f32 	%f137, %f30, %f315;
	sub.f32 	%f138, %f31, %f316;
	sub.f32 	%f139, %f32, %f317;
	sub.f32 	%f140, %f33, %f318;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f303, %f117, %f133, %f287;
	fma.rn.f32 	%f304, %f118, %f134, %f288;
	fma.rn.f32 	%f305, %f119, %f135, %f289;
	fma.rn.f32 	%f306, %f120, %f136, %f290;
	fma.rn.f32 	%f307, %f121, %f137, %f291;
	fma.rn.f32 	%f308, %f122, %f138, %f292;
	fma.rn.f32 	%f309, %f123, %f139, %f293;
	fma.rn.f32 	%f310, %f124, %f140, %f294;
	bra.uni 	$L__BB0_3;
$L__tmp2:
$L__BB0_4:
	.loc	2 204 46                        // triton_helpers.py:204:46
	bar.sync 	0;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f141, %f296, %f295;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f142, %f279, %f280;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p57, %f142, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r130, %f142;
	mov.b32 	%r129, %f280;
	// begin inline asm
	div.full.f32 %r128, %r129, %r130;
	// end inline asm
	mov.b32 	%f143, %r128;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f144, 0f00000000, %f143, %p57;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f145, %f141, %f144, %f295;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f146, %f287, %f288;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f147, %f141, %f141;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f148, %f147, %f279;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f149, %f148, %f144, %f146;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f150, %f297, %f145;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f151, %f281, %f142;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p58, %f151, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r133, %f151;
	mov.b32 	%r132, %f281;
	// begin inline asm
	div.full.f32 %r131, %r132, %r133;
	// end inline asm
	mov.b32 	%f152, %r131;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f153, 0f00000000, %f152, %p58;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f154, %f153, %f150, %f145;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f155, %f289, %f149;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f156, %f150, %f150;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f157, %f142, %f156;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f158, %f153, %f157, %f155;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f159, %f298, %f154;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f160, %f282, %f151;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p59, %f160, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r136, %f160;
	mov.b32 	%r135, %f282;
	// begin inline asm
	div.full.f32 %r134, %r135, %r136;
	// end inline asm
	mov.b32 	%f161, %r134;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f162, 0f00000000, %f161, %p59;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f163, %f162, %f159, %f154;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f164, %f290, %f158;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f165, %f159, %f159;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f166, %f151, %f165;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f167, %f162, %f166, %f164;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f168, %f299, %f163;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f169, %f283, %f160;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p60, %f169, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r139, %f169;
	mov.b32 	%r138, %f283;
	// begin inline asm
	div.full.f32 %r137, %r138, %r139;
	// end inline asm
	mov.b32 	%f170, %r137;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f171, 0f00000000, %f170, %p60;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f172, %f171, %f168, %f163;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f173, %f291, %f167;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f174, %f168, %f168;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f175, %f160, %f174;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f176, %f171, %f175, %f173;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f177, %f300, %f172;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f178, %f284, %f169;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p61, %f178, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r142, %f178;
	mov.b32 	%r141, %f284;
	// begin inline asm
	div.full.f32 %r140, %r141, %r142;
	// end inline asm
	mov.b32 	%f179, %r140;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f180, 0f00000000, %f179, %p61;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f181, %f180, %f177, %f172;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f182, %f292, %f176;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f183, %f177, %f177;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f184, %f169, %f183;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f185, %f180, %f184, %f182;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f186, %f301, %f181;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f187, %f285, %f178;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p62, %f187, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r145, %f187;
	mov.b32 	%r144, %f285;
	// begin inline asm
	div.full.f32 %r143, %r144, %r145;
	// end inline asm
	mov.b32 	%f188, %r143;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f189, 0f00000000, %f188, %p62;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f190, %f189, %f186, %f181;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f191, %f293, %f185;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f192, %f186, %f186;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f193, %f178, %f192;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f194, %f189, %f193, %f191;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f195, %f302, %f190;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f196, %f286, %f187;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p63, %f196, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r148, %f196;
	mov.b32 	%r147, %f286;
	// begin inline asm
	div.full.f32 %r146, %r147, %r148;
	// end inline asm
	mov.b32 	%f197, %r146;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f198, 0f00000000, %f197, %p63;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f199, %f198, %f195, %f190;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f200, %f294, %f194;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f201, %f195, %f195;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f202, %f187, %f201;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f203, %f198, %f202, %f200;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r188, %f199;
	shfl.sync.bfly.b32	%r189, %r188, 16, 31, -1;
	mov.b32 	%f204, %r189;
	mov.b32 	%r190, %f203;
	shfl.sync.bfly.b32	%r191, %r190, 16, 31, -1;
	mov.b32 	%f205, %r191;
	shfl.sync.bfly.b32	%r150, %r148, 16, 31, -1;
	mov.b32 	%f206, %r150;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f207, %f204, %f199;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f208, %f196, %f206;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p64, %f208, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r151, %f208;
	// begin inline asm
	div.full.f32 %r149, %r150, %r151;
	// end inline asm
	mov.b32 	%f209, %r149;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f210, 0f00000000, %f209, %p64;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f211, %f210, %f207, %f199;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f212, %f203, %f205;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f213, %f207, %f207;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f214, %f196, %f213;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f215, %f210, %f214, %f212;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r192, %f211;
	shfl.sync.bfly.b32	%r193, %r192, 8, 31, -1;
	mov.b32 	%f216, %r193;
	mov.b32 	%r194, %f215;
	shfl.sync.bfly.b32	%r195, %r194, 8, 31, -1;
	mov.b32 	%f217, %r195;
	shfl.sync.bfly.b32	%r153, %r151, 8, 31, -1;
	mov.b32 	%f218, %r153;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f219, %f216, %f211;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f220, %f208, %f218;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p65, %f220, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r154, %f220;
	// begin inline asm
	div.full.f32 %r152, %r153, %r154;
	// end inline asm
	mov.b32 	%f221, %r152;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f222, 0f00000000, %f221, %p65;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f223, %f222, %f219, %f211;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f224, %f215, %f217;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f225, %f219, %f219;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f226, %f208, %f225;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f227, %f222, %f226, %f224;
	.loc	2 204 46                        // triton_helpers.py:204:46
	shr.u32 	%r196, %r7, 3;
	setp.lt.u32 	%p44, %r7, 8;
	shl.b32 	%r197, %r2, 6;
	and.b32  	%r199, %r27, 60;
	or.b32  	%r200, %r197, %r199;
	add.s32 	%r155, %r45, %r200;
	mov.b32 	%r156, %f223;
	// begin inline asm
	@%p44 st.shared.b32 [ %r155 + 0 ], %r156;
	// end inline asm
	add.s32 	%r202, %r45, 512;
	add.s32 	%r157, %r202, %r200;
	mov.b32 	%r158, %f227;
	// begin inline asm
	@%p44 st.shared.b32 [ %r157 + 0 ], %r158;
	// end inline asm
	add.s32 	%r203, %r45, 1024;
	add.s32 	%r159, %r203, %r200;
	// begin inline asm
	@%p44 st.shared.b32 [ %r159 + 0 ], %r154;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p47, %r1, 128;
	add.s32 	%r162, %r45, %r30;
	// begin inline asm
	@%p47 ld.shared.b32 %r161, [ %r162 + 0 ];
	// end inline asm
	mov.b32 	%f228, %r161;
	add.s32 	%r164, %r202, %r30;
	// begin inline asm
	@%p47 ld.shared.b32 %r163, [ %r164 + 0 ];
	// end inline asm
	mov.b32 	%f229, %r163;
	add.s32 	%r166, %r203, %r30;
	// begin inline asm
	@%p47 ld.shared.b32 %r165, [ %r166 + 0 ];
	// end inline asm
	mov.b32 	%f230, %r165;
	shfl.sync.bfly.b32	%r205, %r161, 8, 31, -1;
	mov.b32 	%f231, %r205;
	shfl.sync.bfly.b32	%r206, %r163, 8, 31, -1;
	mov.b32 	%f232, %r206;
	shfl.sync.bfly.b32	%r168, %r165, 8, 31, -1;
	mov.b32 	%f233, %r168;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f234, %f231, %f228;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f235, %f230, %f233;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p66, %f235, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r169, %f235;
	// begin inline asm
	div.full.f32 %r167, %r168, %r169;
	// end inline asm
	mov.b32 	%f236, %r167;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f237, 0f00000000, %f236, %p66;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f238, %f234, %f237, %f228;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f239, %f229, %f232;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f240, %f234, %f234;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f241, %f240, %f230;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f242, %f241, %f237, %f239;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r207, %f238;
	shfl.sync.bfly.b32	%r208, %r207, 4, 31, -1;
	mov.b32 	%f243, %r208;
	mov.b32 	%r209, %f242;
	shfl.sync.bfly.b32	%r210, %r209, 4, 31, -1;
	mov.b32 	%f244, %r210;
	shfl.sync.bfly.b32	%r171, %r169, 4, 31, -1;
	mov.b32 	%f245, %r171;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f246, %f243, %f238;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f247, %f235, %f245;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p67, %f247, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r172, %f247;
	// begin inline asm
	div.full.f32 %r170, %r171, %r172;
	// end inline asm
	mov.b32 	%f248, %r170;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f249, 0f00000000, %f248, %p67;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f250, %f246, %f249, %f238;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f251, %f242, %f244;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f252, %f246, %f246;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f253, %f235, %f252;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f254, %f249, %f253, %f251;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r211, %f250;
	shfl.sync.bfly.b32	%r212, %r211, 2, 31, -1;
	mov.b32 	%f255, %r212;
	mov.b32 	%r213, %f254;
	shfl.sync.bfly.b32	%r214, %r213, 2, 31, -1;
	mov.b32 	%f256, %r214;
	shfl.sync.bfly.b32	%r174, %r172, 2, 31, -1;
	mov.b32 	%f257, %r174;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f258, %f255, %f250;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f259, %f247, %f257;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p68, %f259, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r175, %f259;
	// begin inline asm
	div.full.f32 %r173, %r174, %r175;
	// end inline asm
	mov.b32 	%f260, %r173;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f261, 0f00000000, %f260, %p68;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f262, %f258, %f261, %f250;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f263, %f254, %f256;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f264, %f258, %f258;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f265, %f247, %f264;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f266, %f261, %f265, %f263;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r215, %f262;
	shfl.sync.bfly.b32	%r216, %r215, 1, 31, -1;
	mov.b32 	%f267, %r216;
	mov.b32 	%r217, %f266;
	shfl.sync.bfly.b32	%r218, %r217, 1, 31, -1;
	mov.b32 	%f268, %r218;
	shfl.sync.bfly.b32	%r177, %r175, 1, 31, -1;
	mov.b32 	%f269, %r177;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f270, %f267, %f262;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f271, %f259, %f269;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p69, %f271, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r178, %f271;
	// begin inline asm
	div.full.f32 %r176, %r177, %r178;
	// end inline asm
	mov.b32 	%f272, %r176;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f273, 0f00000000, %f272, %p69;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f274, %f270, %f273, %f262;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f275, %f266, %f268;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f276, %f270, %f270;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f277, %f259, %f276;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f278, %f273, %f277, %f275;
	.loc	2 204 46                        // triton_helpers.py:204:46
	and.b32  	%r219, %r1, 15;
	setp.eq.s32 	%p70, %r219, 0;
	and.pred  	%p50, %p47, %p70;
	mov.b32 	%r180, %f274;
	// begin inline asm
	@%p50 st.shared.b32 [ %r162 + 0 ], %r180;
	// end inline asm
	mov.b32 	%r182, %f278;
	// begin inline asm
	@%p50 st.shared.b32 [ %r164 + 0 ], %r182;
	// end inline asm
	// begin inline asm
	@%p50 st.shared.b32 [ %r166 + 0 ], %r178;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r220, %r45, %r197;
	ld.shared.u32 	%r185, [%r220];
	add.s32 	%r221, %r202, %r197;
	ld.shared.u32 	%r186, [%r221];
	add.s32 	%r222, %r203, %r197;
	ld.shared.u32 	%r187, [%r222];
$L__tmp3:
	.loc	1 70 25                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:70:25
	mul.wide.s32 	%rd135, %r3, 4;
	add.s64 	%rd132, %rd13, %rd135;
	.loc	1 70 37                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:70:37
	or.b32  	%r223, %r199, %r196;
	setp.eq.s32 	%p71, %r223, 0;
	and.pred  	%p53, %p71, %p2;
	// begin inline asm
	@%p53 st.global.b32 [ %rd132 + 0 ], { %r185 };
	// end inline asm
	.loc	1 71 25                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:71:25
	add.s64 	%rd133, %rd14, %rd135;
	.loc	1 71 37                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:71:37
	// begin inline asm
	@%p53 st.global.b32 [ %rd133 + 0 ], { %r186 };
	// end inline asm
	.loc	1 72 25                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:72:25
	add.s64 	%rd134, %rd15, %rd135;
	.loc	1 72 37                         // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:72:37
	// begin inline asm
	@%p53 st.global.b32 [ %rd134 + 0 ], { %r187 };
	// end inline asm
	.loc	1 72 4                          // cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py:72:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 232                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 99
.b8 119
.b8 113
.b8 53
.b8 52
.b8 53
.b8 52
.b8 115
.b8 99
.b8 52
.b8 99
.b8 121
.b8 50
.b8 54
.b8 104
.b8 50
.b8 50
.b8 106
.b8 120
.b8 118
.b8 54
.b8 51
.b8 106
.b8 101
.b8 118
.b8 101
.b8 50
.b8 54
.b8 105
.b8 105
.b8 50
.b8 110
.b8 115
.b8 122
.b8 110
.b8 108
.b8 107
.b8 116
.b8 117
.b8 118
.b8 119
.b8 120
.b8 55
.b8 52
.b8 111
.b8 120
.b8 100
.b8 106
.b8 116
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 99
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x42 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 51
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa5:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 58                                  // DW_AT_call_line
.b8 55                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
