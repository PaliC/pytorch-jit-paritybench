#loc = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":19:0)
module {
  tt.func public @triton_poi_fused_avg_pool2d_max_pool2d_with_indices_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":19:0), %arg3: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<128> : tensor<128xi32> loc(#loc1)
    %cst_0 = arith.constant dense<8> : tensor<128xi8> loc(#loc1)
    %cst_1 = arith.constant dense<7> : tensor<128xi8> loc(#loc1)
    %cst_2 = arith.constant dense<6> : tensor<128xi8> loc(#loc1)
    %cst_3 = arith.constant dense<5> : tensor<128xi8> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<128xi8> loc(#loc1)
    %cst_5 = arith.constant dense<3> : tensor<128xi8> loc(#loc1)
    %cst_6 = arith.constant dense<2> : tensor<128xi8> loc(#loc1)
    %cst_7 = arith.constant dense<0> : tensor<128xi8> loc(#loc1)
    %cst_8 = arith.constant dense<1> : tensor<128xi8> loc(#loc1)
    %cst_9 = arith.constant dense<0xFF800000> : tensor<128xf32> loc(#loc1)
    %cst_10 = arith.constant dense<2> : tensor<128xi32> loc(#loc1)
    %cst_11 = arith.constant dense<5> : tensor<128xi32> loc(#loc1)
    %cst_12 = arith.constant dense<3> : tensor<128xi32> loc(#loc1)
    %cst_13 = arith.constant dense<-3> : tensor<128xi32> loc(#loc1)
    %cst_14 = arith.constant dense<1> : tensor<128xi32> loc(#loc1)
    %cst_15 = arith.constant dense<-4> : tensor<128xi32> loc(#loc1)
    %cst_16 = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_17 = arith.constant dense<-5> : tensor<128xi32> loc(#loc1)
    %cst_18 = arith.constant dense<4> : tensor<128xi64> loc(#loc1)
    %cst_19 = arith.constant dense<0> : tensor<128xi64> loc(#loc1)
    %cst_20 = arith.constant dense<-1> : tensor<128xi32> loc(#loc1)
    %cst_21 = arith.constant dense<64> : tensor<128xi32> loc(#loc1)
    %cst_22 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %cst_23 = arith.constant dense<256> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_23 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_22 : tensor<128xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_22 : tensor<128xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_22 : tensor<128xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_21 : tensor<128xi32> loc(#loc10)
    %10 = arith.remsi %4, %cst_21 : tensor<128xi32> loc(#loc11)
    %11 = arith.addi %7, %cst_20 : tensor<128xi32> loc(#loc12)
    %12 = arith.extsi %11 : tensor<128xi32> to tensor<128xi64> loc(#loc13)
    %13 = arith.cmpi sge, %12, %cst_19 : tensor<128xi64> loc(#loc13)
    %14 = arith.cmpi slt, %12, %cst_18 : tensor<128xi64> loc(#loc14)
    %15 = arith.andi %13, %14 : tensor<128xi1> loc(#loc15)
    %16 = arith.addi %8, %cst_20 : tensor<128xi32> loc(#loc16)
    %17 = arith.extsi %16 : tensor<128xi32> to tensor<128xi64> loc(#loc17)
    %18 = arith.cmpi sge, %17, %cst_19 : tensor<128xi64> loc(#loc17)
    %19 = arith.cmpi slt, %17, %cst_18 : tensor<128xi64> loc(#loc18)
    %20 = arith.andi %18, %19 : tensor<128xi1> loc(#loc19)
    %21 = arith.andi %15, %20 : tensor<128xi1> loc(#loc20)
    %22 = arith.addi %4, %cst_17 : tensor<128xi32> loc(#loc21)
    %23 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc22)
    %24 = tt.addptr %23, %22 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc22)
    %25 = arith.andi %21, %5 : tensor<128xi1> loc(#loc23)
    %26 = tt.load %24, %25, %cst_16 : tensor<128x!tt.ptr<f32>> loc(#loc24)
    %27 = arith.extsi %8 : tensor<128xi32> to tensor<128xi64> loc(#loc25)
    %28 = arith.cmpi sge, %27, %cst_19 : tensor<128xi64> loc(#loc25)
    %29 = arith.cmpi slt, %27, %cst_18 : tensor<128xi64> loc(#loc26)
    %30 = arith.andi %28, %29 : tensor<128xi1> loc(#loc27)
    %31 = arith.andi %15, %30 : tensor<128xi1> loc(#loc28)
    %32 = arith.addi %4, %cst_15 : tensor<128xi32> loc(#loc29)
    %33 = tt.addptr %23, %32 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc30)
    %34 = arith.andi %31, %5 : tensor<128xi1> loc(#loc31)
    %35 = tt.load %33, %34, %cst_16 : tensor<128x!tt.ptr<f32>> loc(#loc32)
    %36 = arith.addf %35, %26 : tensor<128xf32> loc(#loc33)
    %37 = arith.addi %8, %cst_14 : tensor<128xi32> loc(#loc34)
    %38 = arith.extsi %37 : tensor<128xi32> to tensor<128xi64> loc(#loc35)
    %39 = arith.cmpi sge, %38, %cst_19 : tensor<128xi64> loc(#loc35)
    %40 = arith.cmpi slt, %38, %cst_18 : tensor<128xi64> loc(#loc36)
    %41 = arith.andi %39, %40 : tensor<128xi1> loc(#loc37)
    %42 = arith.andi %15, %41 : tensor<128xi1> loc(#loc38)
    %43 = arith.addi %4, %cst_13 : tensor<128xi32> loc(#loc39)
    %44 = tt.addptr %23, %43 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc40)
    %45 = arith.andi %42, %5 : tensor<128xi1> loc(#loc41)
    %46 = tt.load %44, %45, %cst_16 : tensor<128x!tt.ptr<f32>> loc(#loc42)
    %47 = arith.addf %46, %36 : tensor<128xf32> loc(#loc43)
    %48 = arith.extsi %7 : tensor<128xi32> to tensor<128xi64> loc(#loc44)
    %49 = arith.cmpi sge, %48, %cst_19 : tensor<128xi64> loc(#loc44)
    %50 = arith.cmpi slt, %48, %cst_18 : tensor<128xi64> loc(#loc45)
    %51 = arith.andi %49, %50 : tensor<128xi1> loc(#loc46)
    %52 = arith.andi %51, %20 : tensor<128xi1> loc(#loc47)
    %53 = arith.addi %4, %cst_20 : tensor<128xi32> loc(#loc48)
    %54 = tt.addptr %23, %53 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc49)
    %55 = arith.andi %52, %5 : tensor<128xi1> loc(#loc50)
    %56 = tt.load %54, %55, %cst_16 : tensor<128x!tt.ptr<f32>> loc(#loc51)
    %57 = arith.addf %56, %47 : tensor<128xf32> loc(#loc52)
    %58 = arith.andi %51, %30 : tensor<128xi1> loc(#loc53)
    %59 = tt.addptr %23, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc54)
    %60 = arith.andi %58, %5 : tensor<128xi1> loc(#loc55)
    %61 = tt.load %59, %60, %cst_16 : tensor<128x!tt.ptr<f32>> loc(#loc56)
    %62 = arith.addf %61, %57 : tensor<128xf32> loc(#loc57)
    %63 = arith.andi %51, %41 : tensor<128xi1> loc(#loc58)
    %64 = arith.addi %4, %cst_14 : tensor<128xi32> loc(#loc59)
    %65 = tt.addptr %23, %64 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc60)
    %66 = arith.andi %63, %5 : tensor<128xi1> loc(#loc61)
    %67 = tt.load %65, %66, %cst_16 : tensor<128x!tt.ptr<f32>> loc(#loc62)
    %68 = arith.addf %67, %62 : tensor<128xf32> loc(#loc63)
    %69 = arith.addi %7, %cst_14 : tensor<128xi32> loc(#loc64)
    %70 = arith.extsi %69 : tensor<128xi32> to tensor<128xi64> loc(#loc65)
    %71 = arith.cmpi sge, %70, %cst_19 : tensor<128xi64> loc(#loc65)
    %72 = arith.cmpi slt, %70, %cst_18 : tensor<128xi64> loc(#loc66)
    %73 = arith.andi %71, %72 : tensor<128xi1> loc(#loc67)
    %74 = arith.andi %73, %20 : tensor<128xi1> loc(#loc68)
    %75 = arith.addi %4, %cst_12 : tensor<128xi32> loc(#loc69)
    %76 = tt.addptr %23, %75 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc70)
    %77 = arith.andi %74, %5 : tensor<128xi1> loc(#loc71)
    %78 = tt.load %76, %77, %cst_16 : tensor<128x!tt.ptr<f32>> loc(#loc72)
    %79 = arith.addf %78, %68 : tensor<128xf32> loc(#loc73)
    %80 = arith.andi %73, %30 : tensor<128xi1> loc(#loc74)
    %81 = arith.addi %4, %cst_22 : tensor<128xi32> loc(#loc75)
    %82 = tt.addptr %23, %81 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc76)
    %83 = arith.andi %80, %5 : tensor<128xi1> loc(#loc77)
    %84 = tt.load %82, %83, %cst_16 : tensor<128x!tt.ptr<f32>> loc(#loc78)
    %85 = arith.addf %84, %79 : tensor<128xf32> loc(#loc79)
    %86 = arith.andi %73, %41 : tensor<128xi1> loc(#loc80)
    %87 = arith.addi %4, %cst_11 : tensor<128xi32> loc(#loc81)
    %88 = tt.addptr %23, %87 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc82)
    %89 = arith.andi %86, %5 : tensor<128xi1> loc(#loc83)
    %90 = tt.load %88, %89, %cst_16 : tensor<128x!tt.ptr<f32>> loc(#loc84)
    %91 = arith.addf %90, %85 : tensor<128xf32> loc(#loc85)
    %92 = arith.subi %cst_14, %8 : tensor<128xi32> loc(#loc86)
    %93 = arith.subi %92, %7 : tensor<128xi32> loc(#loc87)
    %94 = arith.muli %8, %7 : tensor<128xi32> loc(#loc88)
    %95 = arith.addi %93, %94 : tensor<128xi32> loc(#loc89)
    %96 = arith.addi %8, %cst_10 : tensor<128xi32> loc(#loc90)
    %97 = arith.cmpi sge, %96, %cst_11 : tensor<128xi32> loc(#loc91)
    %98 = arith.extui %97 : tensor<128xi1> to tensor<128xi32> loc(#loc92)
    %99 = arith.muli %98, %cst_11 : tensor<128xi32> loc(#loc92)
    %100 = arith.cmpi slt, %96, %cst_11 : tensor<128xi32> loc(#loc93)
    %101 = arith.extui %100 : tensor<128xi1> to tensor<128xi32> loc(#loc94)
    %102 = arith.muli %96, %101 : tensor<128xi32> loc(#loc94)
    %103 = arith.addi %99, %102 : tensor<128xi32> loc(#loc95)
    %104 = arith.addi %7, %cst_10 : tensor<128xi32> loc(#loc96)
    %105 = arith.cmpi sge, %104, %cst_11 : tensor<128xi32> loc(#loc97)
    %106 = arith.extui %105 : tensor<128xi1> to tensor<128xi32> loc(#loc98)
    %107 = arith.muli %106, %cst_11 : tensor<128xi32> loc(#loc98)
    %108 = arith.cmpi slt, %104, %cst_11 : tensor<128xi32> loc(#loc99)
    %109 = arith.extui %108 : tensor<128xi1> to tensor<128xi32> loc(#loc100)
    %110 = arith.muli %104, %109 : tensor<128xi32> loc(#loc100)
    %111 = arith.addi %107, %110 : tensor<128xi32> loc(#loc101)
    %112 = arith.muli %103, %111 : tensor<128xi32> loc(#loc102)
    %113 = arith.addi %95, %112 : tensor<128xi32> loc(#loc103)
    %114 = arith.muli %8, %cst_20 : tensor<128xi32> loc(#loc104)
    %115 = arith.muli %114, %111 : tensor<128xi32> loc(#loc105)
    %116 = arith.addi %113, %115 : tensor<128xi32> loc(#loc106)
    %117 = arith.muli %7, %cst_20 : tensor<128xi32> loc(#loc107)
    %118 = arith.muli %117, %103 : tensor<128xi32> loc(#loc108)
    %119 = arith.addi %116, %118 : tensor<128xi32> loc(#loc109)
    %120 = arith.addi %119, %103 : tensor<128xi32> loc(#loc110)
    %121 = arith.addi %120, %111 : tensor<128xi32> loc(#loc111)
    %122 = arith.sitofp %121 : tensor<128xi32> to tensor<128xf32> loc(#loc112)
    %123 = arith.divf %91, %122 : tensor<128xf32> loc(#loc112)
    %124 = tt.load %24, %25, %cst_9 : tensor<128x!tt.ptr<f32>> loc(#loc113)
    %125 = tt.load %33, %34, %cst_9 : tensor<128x!tt.ptr<f32>> loc(#loc114)
    %126 = arith.cmpf ogt, %125, %124 : tensor<128xf32> loc(#loc151)
    %127 = arith.cmpf une, %125, %125 : tensor<128xf32> loc(#loc152)
    %128 = arith.ori %126, %127 : tensor<128xi1> loc(#loc153)
    %129 = arith.select %128, %125, %124 : tensor<128xi1>, tensor<128xf32> loc(#loc154)
    %130 = tt.load %44, %45, %cst_9 : tensor<128x!tt.ptr<f32>> loc(#loc120)
    %131 = arith.cmpf ogt, %130, %129 : tensor<128xf32> loc(#loc155)
    %132 = arith.cmpf une, %130, %130 : tensor<128xf32> loc(#loc156)
    %133 = arith.ori %131, %132 : tensor<128xi1> loc(#loc157)
    %134 = arith.select %133, %130, %129 : tensor<128xi1>, tensor<128xf32> loc(#loc158)
    %135 = tt.load %54, %55, %cst_9 : tensor<128x!tt.ptr<f32>> loc(#loc122)
    %136 = arith.cmpf ogt, %135, %134 : tensor<128xf32> loc(#loc159)
    %137 = arith.cmpf une, %135, %135 : tensor<128xf32> loc(#loc160)
    %138 = arith.ori %136, %137 : tensor<128xi1> loc(#loc161)
    %139 = arith.select %138, %135, %134 : tensor<128xi1>, tensor<128xf32> loc(#loc162)
    %140 = tt.load %59, %60, %cst_9 : tensor<128x!tt.ptr<f32>> loc(#loc124)
    %141 = arith.cmpf ogt, %140, %139 : tensor<128xf32> loc(#loc163)
    %142 = arith.cmpf une, %140, %140 : tensor<128xf32> loc(#loc164)
    %143 = arith.ori %141, %142 : tensor<128xi1> loc(#loc165)
    %144 = arith.select %143, %140, %139 : tensor<128xi1>, tensor<128xf32> loc(#loc166)
    %145 = tt.load %65, %66, %cst_9 : tensor<128x!tt.ptr<f32>> loc(#loc126)
    %146 = arith.cmpf ogt, %145, %144 : tensor<128xf32> loc(#loc167)
    %147 = arith.cmpf une, %145, %145 : tensor<128xf32> loc(#loc168)
    %148 = arith.ori %146, %147 : tensor<128xi1> loc(#loc169)
    %149 = arith.select %148, %145, %144 : tensor<128xi1>, tensor<128xf32> loc(#loc170)
    %150 = tt.load %76, %77, %cst_9 : tensor<128x!tt.ptr<f32>> loc(#loc128)
    %151 = arith.cmpf ogt, %150, %149 : tensor<128xf32> loc(#loc171)
    %152 = arith.cmpf une, %150, %150 : tensor<128xf32> loc(#loc172)
    %153 = arith.ori %151, %152 : tensor<128xi1> loc(#loc173)
    %154 = arith.select %153, %150, %149 : tensor<128xi1>, tensor<128xf32> loc(#loc174)
    %155 = tt.load %82, %83, %cst_9 : tensor<128x!tt.ptr<f32>> loc(#loc130)
    %156 = arith.cmpf ogt, %155, %154 : tensor<128xf32> loc(#loc175)
    %157 = arith.cmpf une, %155, %155 : tensor<128xf32> loc(#loc176)
    %158 = arith.ori %156, %157 : tensor<128xi1> loc(#loc177)
    %159 = arith.select %158, %155, %154 : tensor<128xi1>, tensor<128xf32> loc(#loc178)
    %160 = tt.load %88, %89, %cst_9 : tensor<128x!tt.ptr<f32>> loc(#loc132)
    %161 = arith.cmpf ogt, %160, %159 : tensor<128xf32> loc(#loc179)
    %162 = arith.cmpf une, %160, %160 : tensor<128xf32> loc(#loc180)
    %163 = arith.ori %161, %162 : tensor<128xi1> loc(#loc181)
    %164 = arith.select %163, %160, %159 : tensor<128xi1>, tensor<128xf32> loc(#loc182)
    %165 = arith.select %126, %cst_8, %cst_7 : tensor<128xi1>, tensor<128xi8> loc(#loc134)
    %166 = arith.select %131, %cst_6, %165 : tensor<128xi1>, tensor<128xi8> loc(#loc135)
    %167 = arith.select %136, %cst_5, %166 : tensor<128xi1>, tensor<128xi8> loc(#loc136)
    %168 = arith.select %141, %cst_4, %167 : tensor<128xi1>, tensor<128xi8> loc(#loc137)
    %169 = arith.select %146, %cst_3, %168 : tensor<128xi1>, tensor<128xi8> loc(#loc138)
    %170 = arith.select %151, %cst_2, %169 : tensor<128xi1>, tensor<128xi8> loc(#loc139)
    %171 = arith.select %156, %cst_1, %170 : tensor<128xi1>, tensor<128xi8> loc(#loc140)
    %172 = arith.select %161, %cst_0, %171 : tensor<128xi1>, tensor<128xi8> loc(#loc141)
    %173 = arith.muli %9, %cst : tensor<128xi32> loc(#loc142)
    %174 = arith.addi %10, %173 : tensor<128xi32> loc(#loc143)
    %175 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc144)
    %176 = tt.addptr %175, %174 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc144)
    tt.store %176, %123, %5 : tensor<128x!tt.ptr<f32>> loc(#loc145)
    %177 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc146)
    %178 = tt.addptr %177, %174 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc146)
    tt.store %178, %164, %5 : tensor<128x!tt.ptr<f32>> loc(#loc147)
    %179 = tt.splat %arg3 : !tt.ptr<i8> -> tensor<128x!tt.ptr<i8>> loc(#loc148)
    %180 = tt.addptr %179, %4 : tensor<128x!tt.ptr<i8>>, tensor<128xi32> loc(#loc148)
    tt.store %180, %172, %5 : tensor<128x!tt.ptr<i8>> loc(#loc149)
    tt.return loc(#loc150)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":21:28)
#loc3 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":21:33)
#loc4 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":22:36)
#loc5 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":22:23)
#loc6 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":23:21)
#loc7 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":24:21)
#loc8 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":24:26)
#loc9 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":25:19)
#loc10 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":27:19)
#loc11 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":28:19)
#loc12 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":29:18)
#loc13 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":31:19)
#loc14 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":33:18)
#loc15 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":34:18)
#loc16 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":35:18)
#loc17 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":36:19)
#loc18 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":37:18)
#loc19 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":38:18)
#loc20 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":39:19)
#loc21 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":40:38)
#loc22 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":40:31)
#loc23 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":40:51)
#loc24 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":40:43)
#loc25 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":42:21)
#loc26 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":43:20)
#loc27 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":44:20)
#loc28 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":45:19)
#loc29 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":46:38)
#loc30 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":46:31)
#loc31 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":46:51)
#loc32 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":46:43)
#loc33 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":47:20)
#loc34 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":48:16)
#loc35 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":49:21)
#loc36 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":50:20)
#loc37 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":51:20)
#loc38 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":52:19)
#loc39 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":53:38)
#loc40 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":53:31)
#loc41 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":53:51)
#loc42 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":53:43)
#loc43 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":54:20)
#loc44 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":56:21)
#loc45 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":57:20)
#loc46 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":58:20)
#loc47 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":59:20)
#loc48 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":60:38)
#loc49 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":60:31)
#loc50 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":60:51)
#loc51 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":60:43)
#loc52 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":61:20)
#loc53 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":62:20)
#loc54 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":63:31)
#loc55 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":63:44)
#loc56 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":63:36)
#loc57 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":64:20)
#loc58 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":65:20)
#loc59 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":66:35)
#loc60 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":66:31)
#loc61 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":66:48)
#loc62 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":66:40)
#loc63 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":67:20)
#loc64 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":68:16)
#loc65 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":69:21)
#loc66 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":70:20)
#loc67 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":71:20)
#loc68 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":72:20)
#loc69 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":73:35)
#loc70 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":73:31)
#loc71 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":73:48)
#loc72 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":73:40)
#loc73 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":74:20)
#loc74 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":75:20)
#loc75 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":76:35)
#loc76 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":76:31)
#loc77 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":76:48)
#loc78 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":76:40)
#loc79 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":77:20)
#loc80 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":78:20)
#loc81 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":79:35)
#loc82 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":79:31)
#loc83 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":79:48)
#loc84 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":79:40)
#loc85 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":80:20)
#loc86 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:17)
#loc87 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:29)
#loc88 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:43)
#loc89 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:40)
#loc90 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:68)
#loc91 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:64)
#loc92 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:56)
#loc93 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:99)
#loc94 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:87)
#loc95 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:75)
#loc96 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:124)
#loc97 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:120)
#loc98 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:112)
#loc99 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:155)
#loc100 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:143)
#loc101 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:131)
#loc102 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:105)
#loc103 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:48)
#loc104 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:168)
#loc105 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:172)
#loc106 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:163)
#loc107 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:236)
#loc108 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:240)
#loc109 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:231)
#loc110 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:299)
#loc111 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":81:357)
#loc112 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":82:20)
#loc113 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":83:43)
#loc114 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":84:43)
#loc115 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc116 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":85:42)
#loc117 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc118 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc119 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc120 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":86:43)
#loc121 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":87:42)
#loc122 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":88:43)
#loc123 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":89:42)
#loc124 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":90:36)
#loc125 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":91:42)
#loc126 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":92:40)
#loc127 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":93:42)
#loc128 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":94:40)
#loc129 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":95:42)
#loc130 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":96:40)
#loc131 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":97:42)
#loc132 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":98:40)
#loc133 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":99:42)
#loc134 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":103:35)
#loc135 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":106:35)
#loc136 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":109:35)
#loc137 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":112:35)
#loc138 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":115:35)
#loc139 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":118:35)
#loc140 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":121:35)
#loc141 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":124:35)
#loc142 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":125:34)
#loc143 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":125:30)
#loc144 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":125:25)
#loc145 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":125:46)
#loc146 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":126:25)
#loc147 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":126:46)
#loc148 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":127:25)
#loc149 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":127:37)
#loc150 = loc("inductor_cache/b3/cb3feej475xwrugbcyqnmqjnl6lkdkhd253zn4w2wyekcd2aglr2.py":127:4)
#loc151 = loc(callsite(#loc115 at #loc116))
#loc152 = loc(callsite(#loc117 at #loc116))
#loc153 = loc(callsite(#loc118 at #loc116))
#loc154 = loc(callsite(#loc119 at #loc116))
#loc155 = loc(callsite(#loc115 at #loc121))
#loc156 = loc(callsite(#loc117 at #loc121))
#loc157 = loc(callsite(#loc118 at #loc121))
#loc158 = loc(callsite(#loc119 at #loc121))
#loc159 = loc(callsite(#loc115 at #loc123))
#loc160 = loc(callsite(#loc117 at #loc123))
#loc161 = loc(callsite(#loc118 at #loc123))
#loc162 = loc(callsite(#loc119 at #loc123))
#loc163 = loc(callsite(#loc115 at #loc125))
#loc164 = loc(callsite(#loc117 at #loc125))
#loc165 = loc(callsite(#loc118 at #loc125))
#loc166 = loc(callsite(#loc119 at #loc125))
#loc167 = loc(callsite(#loc115 at #loc127))
#loc168 = loc(callsite(#loc117 at #loc127))
#loc169 = loc(callsite(#loc118 at #loc127))
#loc170 = loc(callsite(#loc119 at #loc127))
#loc171 = loc(callsite(#loc115 at #loc129))
#loc172 = loc(callsite(#loc117 at #loc129))
#loc173 = loc(callsite(#loc118 at #loc129))
#loc174 = loc(callsite(#loc119 at #loc129))
#loc175 = loc(callsite(#loc115 at #loc131))
#loc176 = loc(callsite(#loc117 at #loc131))
#loc177 = loc(callsite(#loc118 at #loc131))
#loc178 = loc(callsite(#loc119 at #loc131))
#loc179 = loc(callsite(#loc115 at #loc133))
#loc180 = loc(callsite(#loc117 at #loc133))
#loc181 = loc(callsite(#loc118 at #loc133))
#loc182 = loc(callsite(#loc119 at #loc133))
