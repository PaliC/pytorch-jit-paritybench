; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = shl i32 %5, 2, !dbg !10
  %7 = and i32 %6, 252, !dbg !10
  %8 = zext nneg i32 %7 to i64, !dbg !11
  %9 = getelementptr float, ptr addrspace(1) %1, i64 %8, !dbg !11
  %10 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %9, i1 true) #4, !dbg !12
  %11 = getelementptr float, ptr addrspace(1) %2, i64 %8, !dbg !13
  %12 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %11, i1 true) #4, !dbg !14
  %13 = extractvalue { i32, i32, i32, i32 } %12, 0, !dbg !14
  %14 = extractvalue { i32, i32, i32, i32 } %12, 1, !dbg !14
  %15 = extractvalue { i32, i32, i32, i32 } %12, 2, !dbg !14
  %16 = extractvalue { i32, i32, i32, i32 } %12, 3, !dbg !14
  %17 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !14
  %18 = insertelement <2 x i32> %17, i32 %14, i64 1, !dbg !14
  %19 = bitcast <2 x i32> %18 to <2 x float>, !dbg !14
  %20 = fcmp oge <2 x float> %19, zeroinitializer, !dbg !15
  %21 = uitofp <2 x i1> %20 to <2 x float>, !dbg !16
  %22 = insertelement <2 x i32> poison, i32 %15, i64 0, !dbg !14
  %23 = insertelement <2 x i32> %22, i32 %16, i64 1, !dbg !14
  %24 = bitcast <2 x i32> %23 to <2 x float>, !dbg !14
  %25 = fcmp oge <2 x float> %24, zeroinitializer, !dbg !15
  %26 = uitofp <2 x i1> %25 to <2 x float>, !dbg !16
  %27 = bitcast i32 %13 to float, !dbg !17
  %28 = fmul <2 x float> %19, %21, !dbg !17
  %29 = extractelement <2 x float> %28, i64 0, !dbg !17
  %30 = bitcast i32 %14 to float, !dbg !17
  %31 = fmul <2 x float> %19, %21, !dbg !17
  %32 = extractelement <2 x float> %31, i64 1, !dbg !17
  %33 = bitcast i32 %15 to float, !dbg !17
  %34 = fmul <2 x float> %24, %26, !dbg !17
  %35 = extractelement <2 x float> %34, i64 0, !dbg !17
  %36 = bitcast i32 %16 to float, !dbg !17
  %37 = fmul <2 x float> %24, %26, !dbg !17
  %38 = extractelement <2 x float> %37, i64 1, !dbg !17
  %39 = fmul float %29, 2.000000e+00, !dbg !18
  %40 = fmul float %32, 2.000000e+00, !dbg !18
  %41 = fmul float %35, 2.000000e+00, !dbg !18
  %42 = fmul float %38, 2.000000e+00, !dbg !18
  %43 = fsub float %27, %39, !dbg !19
  %44 = fsub float %30, %40, !dbg !19
  %45 = fsub float %33, %41, !dbg !19
  %46 = fsub float %36, %42, !dbg !19
  %47 = fmul float %43, 0x3FF7154760000000, !dbg !20
  %48 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %47) #4, !dbg !20
  %49 = fmul float %44, 0x3FF7154760000000, !dbg !20
  %50 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %49) #4, !dbg !20
  %51 = fmul float %45, 0x3FF7154760000000, !dbg !20
  %52 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %51) #4, !dbg !20
  %53 = fmul float %46, 0x3FF7154760000000, !dbg !20
  %54 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %53) #4, !dbg !20
  %55 = fadd float %48, 1.000000e+00, !dbg !21
  %56 = fadd float %50, 1.000000e+00, !dbg !21
  %57 = fadd float %52, 1.000000e+00, !dbg !21
  %58 = fadd float %54, 1.000000e+00, !dbg !21
  %59 = fcmp olt float %55, 0x3810000000000000, !dbg !22
  %60 = fmul float %55, 0x4160000000000000, !dbg !22
  %.02.i = select i1 %59, float %60, float %55, !dbg !22
  %i.i.0.i = select i1 %59, float -2.300000e+01, float 0.000000e+00, !dbg !22
  %61 = bitcast float %.02.i to i32, !dbg !22
  %62 = add i32 %61, -1059760811, !dbg !22
  %63 = and i32 %62, -8388608, !dbg !22
  %64 = sub i32 %61, %63, !dbg !22
  %65 = bitcast i32 %64 to float, !dbg !22
  %66 = sitofp i32 %63 to float, !dbg !22
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not.i = icmp eq i32 %67, 0, !dbg !22
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %66, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !22
  %69 = tail call float @llvm.nvvm.fma.rn.f(float %66, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !22
  %.08.i = select i1 %.not.i, float %69, float %68, !dbg !22
  %70 = fadd float %65, -1.000000e+00, !dbg !22
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not1.i = icmp eq i32 %71, 0, !dbg !22
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %70, float 0x3FC2073EC0000000) #4, !dbg !22
  %73 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %70, float 0x3FC2073EC0000000) #4, !dbg !22
  %.010.i = select i1 %.not1.i, float %73, float %72, !dbg !22
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not2.i = icmp eq i32 %74, 0, !dbg !22
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %70, float 0xBFBF19B980000000) #4, !dbg !22
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %70, float 0xBFBF19B980000000) #4, !dbg !22
  %.011.i = select i1 %.not2.i, float %76, float %75, !dbg !22
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not3.i = icmp eq i32 %77, 0, !dbg !22
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %70, float 0x3FC1E52AA0000000) #4, !dbg !22
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %70, float 0x3FC1E52AA0000000) #4, !dbg !22
  %.012.i = select i1 %.not3.i, float %79, float %78, !dbg !22
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not4.i = icmp eq i32 %80, 0, !dbg !22
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %70, float 0xBFC55B1720000000) #4, !dbg !22
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %70, float 0xBFC55B1720000000) #4, !dbg !22
  %.09.i = select i1 %.not4.i, float %82, float %81, !dbg !22
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not5.i = icmp eq i32 %83, 0, !dbg !22
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %70, float 0x3FC99DA160000000) #4, !dbg !22
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %70, float 0x3FC99DA160000000) #4, !dbg !22
  %.05.i = select i1 %.not5.i, float %85, float %84, !dbg !22
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not6.i = icmp eq i32 %86, 0, !dbg !22
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %70, float 0xBFCFFFE440000000) #4, !dbg !22
  %88 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %70, float 0xBFCFFFE440000000) #4, !dbg !22
  %.01.i = select i1 %.not6.i, float %88, float %87, !dbg !22
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not7.i = icmp eq i32 %89, 0, !dbg !22
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %70, float 0x3FD5554F00000000) #4, !dbg !22
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %70, float 0x3FD5554F00000000) #4, !dbg !22
  %.0.i = select i1 %.not7.i, float %91, float %90, !dbg !22
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not8.i = icmp eq i32 %92, 0, !dbg !22
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %70, float -5.000000e-01) #4, !dbg !22
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %70, float -5.000000e-01) #4, !dbg !22
  %.07.i = select i1 %.not8.i, float %94, float %93, !dbg !22
  %95 = fmul float %70, %.07.i, !dbg !22
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not9.i = icmp eq i32 %96, 0, !dbg !22
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %95, float %70, float %70) #4, !dbg !22
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %95, float %70, float %70) #4, !dbg !22
  %.06.i = select i1 %.not9.i, float %98, float %97, !dbg !22
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not10.i = icmp eq i32 %99, 0, !dbg !22
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !22
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !22
  %.04.i = select i1 %.not10.i, float %101, float %100, !dbg !22
  %102 = icmp ugt i32 %61, 2139095039, !dbg !22
  br i1 %102, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !22

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not11.i = icmp eq i32 %103, 0, !dbg !22
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !22
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !22
  %.03.i = select i1 %.not11.i, float %105, float %104, !dbg !22
  br label %__nv_logf.exit, !dbg !22

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !22
  %106 = fcmp olt float %56, 0x3810000000000000, !dbg !22
  %107 = fmul float %56, 0x4160000000000000, !dbg !22
  %.02.i1 = select i1 %106, float %107, float %56, !dbg !22
  %i.i.0.i2 = select i1 %106, float -2.300000e+01, float 0.000000e+00, !dbg !22
  %108 = bitcast float %.02.i1 to i32, !dbg !22
  %109 = add i32 %108, -1059760811, !dbg !22
  %110 = and i32 %109, -8388608, !dbg !22
  %111 = sub i32 %108, %110, !dbg !22
  %112 = bitcast i32 %111 to float, !dbg !22
  %113 = sitofp i32 %110 to float, !dbg !22
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not.i3 = icmp eq i32 %114, 0, !dbg !22
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %113, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !22
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %113, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !22
  %.08.i4 = select i1 %.not.i3, float %116, float %115, !dbg !22
  %117 = fadd float %112, -1.000000e+00, !dbg !22
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not1.i5 = icmp eq i32 %118, 0, !dbg !22
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %117, float 0x3FC2073EC0000000) #4, !dbg !22
  %120 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %117, float 0x3FC2073EC0000000) #4, !dbg !22
  %.010.i6 = select i1 %.not1.i5, float %120, float %119, !dbg !22
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not2.i7 = icmp eq i32 %121, 0, !dbg !22
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %117, float 0xBFBF19B980000000) #4, !dbg !22
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %117, float 0xBFBF19B980000000) #4, !dbg !22
  %.011.i8 = select i1 %.not2.i7, float %123, float %122, !dbg !22
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not3.i9 = icmp eq i32 %124, 0, !dbg !22
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %117, float 0x3FC1E52AA0000000) #4, !dbg !22
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %117, float 0x3FC1E52AA0000000) #4, !dbg !22
  %.012.i10 = select i1 %.not3.i9, float %126, float %125, !dbg !22
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not4.i11 = icmp eq i32 %127, 0, !dbg !22
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %117, float 0xBFC55B1720000000) #4, !dbg !22
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %117, float 0xBFC55B1720000000) #4, !dbg !22
  %.09.i12 = select i1 %.not4.i11, float %129, float %128, !dbg !22
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not5.i13 = icmp eq i32 %130, 0, !dbg !22
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %117, float 0x3FC99DA160000000) #4, !dbg !22
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %117, float 0x3FC99DA160000000) #4, !dbg !22
  %.05.i14 = select i1 %.not5.i13, float %132, float %131, !dbg !22
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not6.i15 = icmp eq i32 %133, 0, !dbg !22
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %117, float 0xBFCFFFE440000000) #4, !dbg !22
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %117, float 0xBFCFFFE440000000) #4, !dbg !22
  %.01.i16 = select i1 %.not6.i15, float %135, float %134, !dbg !22
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not7.i17 = icmp eq i32 %136, 0, !dbg !22
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %117, float 0x3FD5554F00000000) #4, !dbg !22
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %117, float 0x3FD5554F00000000) #4, !dbg !22
  %.0.i18 = select i1 %.not7.i17, float %138, float %137, !dbg !22
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not8.i19 = icmp eq i32 %139, 0, !dbg !22
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %117, float -5.000000e-01) #4, !dbg !22
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %117, float -5.000000e-01) #4, !dbg !22
  %.07.i20 = select i1 %.not8.i19, float %141, float %140, !dbg !22
  %142 = fmul float %117, %.07.i20, !dbg !22
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not9.i21 = icmp eq i32 %143, 0, !dbg !22
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %142, float %117, float %117) #4, !dbg !22
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %142, float %117, float %117) #4, !dbg !22
  %.06.i22 = select i1 %.not9.i21, float %145, float %144, !dbg !22
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not10.i23 = icmp eq i32 %146, 0, !dbg !22
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !22
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !22
  %.04.i24 = select i1 %.not10.i23, float %148, float %147, !dbg !22
  %149 = icmp ugt i32 %108, 2139095039, !dbg !22
  br i1 %149, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !22

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not11.i28 = icmp eq i32 %150, 0, !dbg !22
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !22
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !22
  %.03.i29 = select i1 %.not11.i28, float %152, float %151, !dbg !22
  br label %__nv_logf.exit30, !dbg !22

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !22
  %153 = fcmp olt float %57, 0x3810000000000000, !dbg !22
  %154 = fmul float %57, 0x4160000000000000, !dbg !22
  %.02.i31 = select i1 %153, float %154, float %57, !dbg !22
  %i.i.0.i32 = select i1 %153, float -2.300000e+01, float 0.000000e+00, !dbg !22
  %155 = bitcast float %.02.i31 to i32, !dbg !22
  %156 = add i32 %155, -1059760811, !dbg !22
  %157 = and i32 %156, -8388608, !dbg !22
  %158 = sub i32 %155, %157, !dbg !22
  %159 = bitcast i32 %158 to float, !dbg !22
  %160 = sitofp i32 %157 to float, !dbg !22
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not.i33 = icmp eq i32 %161, 0, !dbg !22
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %160, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !22
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %160, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !22
  %.08.i34 = select i1 %.not.i33, float %163, float %162, !dbg !22
  %164 = fadd float %159, -1.000000e+00, !dbg !22
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not1.i35 = icmp eq i32 %165, 0, !dbg !22
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %164, float 0x3FC2073EC0000000) #4, !dbg !22
  %167 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %164, float 0x3FC2073EC0000000) #4, !dbg !22
  %.010.i36 = select i1 %.not1.i35, float %167, float %166, !dbg !22
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not2.i37 = icmp eq i32 %168, 0, !dbg !22
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %164, float 0xBFBF19B980000000) #4, !dbg !22
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %164, float 0xBFBF19B980000000) #4, !dbg !22
  %.011.i38 = select i1 %.not2.i37, float %170, float %169, !dbg !22
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not3.i39 = icmp eq i32 %171, 0, !dbg !22
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %164, float 0x3FC1E52AA0000000) #4, !dbg !22
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %164, float 0x3FC1E52AA0000000) #4, !dbg !22
  %.012.i40 = select i1 %.not3.i39, float %173, float %172, !dbg !22
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not4.i41 = icmp eq i32 %174, 0, !dbg !22
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %164, float 0xBFC55B1720000000) #4, !dbg !22
  %176 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %164, float 0xBFC55B1720000000) #4, !dbg !22
  %.09.i42 = select i1 %.not4.i41, float %176, float %175, !dbg !22
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not5.i43 = icmp eq i32 %177, 0, !dbg !22
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %164, float 0x3FC99DA160000000) #4, !dbg !22
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %164, float 0x3FC99DA160000000) #4, !dbg !22
  %.05.i44 = select i1 %.not5.i43, float %179, float %178, !dbg !22
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not6.i45 = icmp eq i32 %180, 0, !dbg !22
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %164, float 0xBFCFFFE440000000) #4, !dbg !22
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %164, float 0xBFCFFFE440000000) #4, !dbg !22
  %.01.i46 = select i1 %.not6.i45, float %182, float %181, !dbg !22
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not7.i47 = icmp eq i32 %183, 0, !dbg !22
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %164, float 0x3FD5554F00000000) #4, !dbg !22
  %185 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %164, float 0x3FD5554F00000000) #4, !dbg !22
  %.0.i48 = select i1 %.not7.i47, float %185, float %184, !dbg !22
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not8.i49 = icmp eq i32 %186, 0, !dbg !22
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %164, float -5.000000e-01) #4, !dbg !22
  %188 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %164, float -5.000000e-01) #4, !dbg !22
  %.07.i50 = select i1 %.not8.i49, float %188, float %187, !dbg !22
  %189 = fmul float %164, %.07.i50, !dbg !22
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not9.i51 = icmp eq i32 %190, 0, !dbg !22
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %189, float %164, float %164) #4, !dbg !22
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %189, float %164, float %164) #4, !dbg !22
  %.06.i52 = select i1 %.not9.i51, float %192, float %191, !dbg !22
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not10.i53 = icmp eq i32 %193, 0, !dbg !22
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !22
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !22
  %.04.i54 = select i1 %.not10.i53, float %195, float %194, !dbg !22
  %196 = icmp ugt i32 %155, 2139095039, !dbg !22
  br i1 %196, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !22

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not11.i58 = icmp eq i32 %197, 0, !dbg !22
  %198 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !22
  %199 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !22
  %.03.i59 = select i1 %.not11.i58, float %199, float %198, !dbg !22
  br label %__nv_logf.exit60, !dbg !22

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !22
  %200 = fcmp olt float %58, 0x3810000000000000, !dbg !22
  %201 = fmul float %58, 0x4160000000000000, !dbg !22
  %.02.i61 = select i1 %200, float %201, float %58, !dbg !22
  %i.i.0.i62 = select i1 %200, float -2.300000e+01, float 0.000000e+00, !dbg !22
  %202 = bitcast float %.02.i61 to i32, !dbg !22
  %203 = add i32 %202, -1059760811, !dbg !22
  %204 = and i32 %203, -8388608, !dbg !22
  %205 = sub i32 %202, %204, !dbg !22
  %206 = bitcast i32 %205 to float, !dbg !22
  %207 = sitofp i32 %204 to float, !dbg !22
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not.i63 = icmp eq i32 %208, 0, !dbg !22
  %209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %207, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !22
  %210 = tail call float @llvm.nvvm.fma.rn.f(float %207, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !22
  %.08.i64 = select i1 %.not.i63, float %210, float %209, !dbg !22
  %211 = fadd float %206, -1.000000e+00, !dbg !22
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not1.i65 = icmp eq i32 %212, 0, !dbg !22
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %211, float 0x3FC2073EC0000000) #4, !dbg !22
  %214 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %211, float 0x3FC2073EC0000000) #4, !dbg !22
  %.010.i66 = select i1 %.not1.i65, float %214, float %213, !dbg !22
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not2.i67 = icmp eq i32 %215, 0, !dbg !22
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %211, float 0xBFBF19B980000000) #4, !dbg !22
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %211, float 0xBFBF19B980000000) #4, !dbg !22
  %.011.i68 = select i1 %.not2.i67, float %217, float %216, !dbg !22
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not3.i69 = icmp eq i32 %218, 0, !dbg !22
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %211, float 0x3FC1E52AA0000000) #4, !dbg !22
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %211, float 0x3FC1E52AA0000000) #4, !dbg !22
  %.012.i70 = select i1 %.not3.i69, float %220, float %219, !dbg !22
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not4.i71 = icmp eq i32 %221, 0, !dbg !22
  %222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %211, float 0xBFC55B1720000000) #4, !dbg !22
  %223 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %211, float 0xBFC55B1720000000) #4, !dbg !22
  %.09.i72 = select i1 %.not4.i71, float %223, float %222, !dbg !22
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not5.i73 = icmp eq i32 %224, 0, !dbg !22
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %211, float 0x3FC99DA160000000) #4, !dbg !22
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %211, float 0x3FC99DA160000000) #4, !dbg !22
  %.05.i74 = select i1 %.not5.i73, float %226, float %225, !dbg !22
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not6.i75 = icmp eq i32 %227, 0, !dbg !22
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %211, float 0xBFCFFFE440000000) #4, !dbg !22
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %211, float 0xBFCFFFE440000000) #4, !dbg !22
  %.01.i76 = select i1 %.not6.i75, float %229, float %228, !dbg !22
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not7.i77 = icmp eq i32 %230, 0, !dbg !22
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %211, float 0x3FD5554F00000000) #4, !dbg !22
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %211, float 0x3FD5554F00000000) #4, !dbg !22
  %.0.i78 = select i1 %.not7.i77, float %232, float %231, !dbg !22
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not8.i79 = icmp eq i32 %233, 0, !dbg !22
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %211, float -5.000000e-01) #4, !dbg !22
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %211, float -5.000000e-01) #4, !dbg !22
  %.07.i80 = select i1 %.not8.i79, float %235, float %234, !dbg !22
  %236 = fmul float %211, %.07.i80, !dbg !22
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not9.i81 = icmp eq i32 %237, 0, !dbg !22
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %236, float %211, float %211) #4, !dbg !22
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %236, float %211, float %211) #4, !dbg !22
  %.06.i82 = select i1 %.not9.i81, float %239, float %238, !dbg !22
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not10.i83 = icmp eq i32 %240, 0, !dbg !22
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !22
  %242 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !22
  %.04.i84 = select i1 %.not10.i83, float %242, float %241, !dbg !22
  %243 = icmp ugt i32 %202, 2139095039, !dbg !22
  br i1 %243, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !22

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not11.i88 = icmp eq i32 %244, 0, !dbg !22
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !22
  %246 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !22
  %.03.i89 = select i1 %.not11.i88, float %246, float %245, !dbg !22
  br label %__nv_logf.exit90, !dbg !22

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !22
  %247 = insertelement <2 x float> poison, float %.02.i31, i64 0, !dbg !22
  %248 = insertelement <2 x float> %247, float %.02.i61, i64 1, !dbg !22
  %249 = fcmp oeq <2 x float> %248, zeroinitializer, !dbg !22
  %250 = insertelement <2 x float> poison, float %.02.i, i64 0, !dbg !22
  %251 = insertelement <2 x float> %250, float %.02.i1, i64 1, !dbg !22
  %252 = fcmp oeq <2 x float> %251, zeroinitializer, !dbg !22
  %253 = extractvalue { i32, i32, i32, i32 } %10, 3, !dbg !12
  %254 = extractvalue { i32, i32, i32, i32 } %10, 2, !dbg !12
  %255 = extractvalue { i32, i32, i32, i32 } %10, 1, !dbg !12
  %256 = extractvalue { i32, i32, i32, i32 } %10, 0, !dbg !12
  %257 = lshr i32 %5, 5, !dbg !10
  %258 = and i32 %5, 31, !dbg !10
  %259 = insertelement <2 x float> poison, float %r.i.0.i, i64 0, !dbg !22
  %260 = insertelement <2 x float> %259, float %r.i.0.i25, i64 1, !dbg !22
  %261 = select <2 x i1> %252, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %260, !dbg !22
  %262 = insertelement <2 x i32> poison, i32 %256, i64 0, !dbg !12
  %263 = insertelement <2 x i32> %262, i32 %255, i64 1, !dbg !12
  %264 = bitcast <2 x i32> %263 to <2 x float>, !dbg !12
  %265 = fcmp oge <2 x float> %264, splat (float 5.000000e-01), !dbg !23
  %266 = uitofp <2 x i1> %265 to <2 x float>, !dbg !24
  %267 = fsub <2 x float> %266, %21, !dbg !25
  %268 = fmul <2 x float> %267, %19, !dbg !26
  %269 = fsub <2 x float> %268, %261, !dbg !27
  %270 = fmul <2 x float> %269, %266, !dbg !28
  %271 = fsub <2 x float> zeroinitializer, %270, !dbg !29
  %272 = insertelement <2 x i32> poison, i32 %254, i64 0, !dbg !12
  %273 = insertelement <2 x i32> %272, i32 %253, i64 1, !dbg !12
  %274 = bitcast <2 x i32> %273 to <2 x float>, !dbg !12
  %275 = fcmp oge <2 x float> %274, splat (float 5.000000e-01), !dbg !23
  %276 = uitofp <2 x i1> %275 to <2 x float>, !dbg !24
  %277 = fsub <2 x float> %276, %26, !dbg !25
  %278 = fmul <2 x float> %277, %24, !dbg !26
  %279 = insertelement <2 x float> poison, float %r.i.0.i55, i64 0, !dbg !22
  %280 = insertelement <2 x float> %279, float %r.i.0.i85, i64 1, !dbg !22
  %281 = select <2 x i1> %249, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %280, !dbg !22
  %282 = fsub <2 x float> %278, %281, !dbg !27
  %283 = fmul <2 x float> %282, %276, !dbg !28
  %284 = fsub <2 x float> zeroinitializer, %283, !dbg !29
  %shift = shufflevector <2 x float> %271, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !30
  %285 = fadd <2 x float> %271, %shift, !dbg !30
  %286 = fadd <2 x float> %285, %284, !dbg !30
  %shift91 = shufflevector <2 x float> %284, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !30
  %287 = fadd <2 x float> %286, %shift91, !dbg !30
  %288 = extractelement <2 x float> %287, i64 0, !dbg !30
  %289 = bitcast float %288 to i32, !dbg !35
  %290 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %289, i32 16, i32 31), !dbg !35
  %291 = bitcast i32 %290 to float, !dbg !35
  %292 = fadd float %288, %291, !dbg !30
  %293 = bitcast float %292 to i32, !dbg !35
  %294 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %293, i32 8, i32 31), !dbg !35
  %295 = bitcast i32 %294 to float, !dbg !35
  %296 = fadd float %292, %295, !dbg !30
  %297 = bitcast float %296 to i32, !dbg !35
  %298 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %297, i32 4, i32 31), !dbg !35
  %299 = bitcast i32 %298 to float, !dbg !35
  %300 = fadd float %296, %299, !dbg !30
  %301 = bitcast float %300 to i32, !dbg !35
  %302 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %301, i32 2, i32 31), !dbg !35
  %303 = bitcast i32 %302 to float, !dbg !35
  %304 = fadd float %300, %303, !dbg !30
  %305 = bitcast float %304 to i32, !dbg !35
  %306 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %305, i32 1, i32 31), !dbg !35
  %307 = bitcast i32 %306 to float, !dbg !35
  %308 = fadd float %304, %307, !dbg !30
  %309 = icmp eq i32 %258, 0, !dbg !35
  %310 = and i32 %257, 1, !dbg !35
  %311 = zext nneg i32 %310 to i64, !dbg !35
  %312 = getelementptr float, ptr addrspace(3) @global_smem, i64 %311, !dbg !35
  %313 = bitcast float %308 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %312, <1 x i32> %313, i1 %309) #4, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %314 = icmp slt i32 %5, 2, !dbg !35
  %315 = sext i32 %5 to i64, !dbg !35
  %316 = getelementptr float, ptr addrspace(3) @global_smem, i64 %315, !dbg !35
  %317 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %316, i1 %314) #4, !dbg !35
  %318 = bitcast i32 %317 to float, !dbg !35
  %319 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %317, i32 1, i32 31), !dbg !35
  %320 = bitcast i32 %319 to float, !dbg !35
  %321 = fadd float %318, %320, !dbg !30
  %322 = and i32 %5, 1, !dbg !35
  %323 = icmp eq i32 %322, 0, !dbg !35
  %324 = and i1 %314, %323, !dbg !35
  %325 = bitcast float %321 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %316, <1 x i32> %325, i1 %324) #4, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %326 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !35
  %327 = fadd float %326, 0.000000e+00, !dbg !36
  %328 = fsub <2 x float> splat (float 1.000000e+00), %266, !dbg !40
  %329 = fmul <2 x float> %328, %269, !dbg !41
  %330 = fsub <2 x float> zeroinitializer, %329, !dbg !42
  %331 = fsub <2 x float> splat (float 1.000000e+00), %276, !dbg !40
  %332 = fmul <2 x float> %331, %282, !dbg !41
  %333 = fsub <2 x float> zeroinitializer, %332, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %shift92 = shufflevector <2 x float> %330, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !45
  %334 = fadd <2 x float> %330, %shift92, !dbg !45
  %335 = fadd <2 x float> %334, %333, !dbg !45
  %shift93 = shufflevector <2 x float> %333, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !45
  %336 = fadd <2 x float> %335, %shift93, !dbg !45
  %337 = extractelement <2 x float> %336, i64 0, !dbg !45
  %338 = bitcast float %337 to i32, !dbg !43
  %339 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %338, i32 16, i32 31), !dbg !43
  %340 = bitcast i32 %339 to float, !dbg !43
  %341 = fadd float %337, %340, !dbg !45
  %342 = bitcast float %341 to i32, !dbg !43
  %343 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %342, i32 8, i32 31), !dbg !43
  %344 = bitcast i32 %343 to float, !dbg !43
  %345 = fadd float %341, %344, !dbg !45
  %346 = bitcast float %345 to i32, !dbg !43
  %347 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %346, i32 4, i32 31), !dbg !43
  %348 = bitcast i32 %347 to float, !dbg !43
  %349 = fadd float %345, %348, !dbg !45
  %350 = bitcast float %349 to i32, !dbg !43
  %351 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %350, i32 2, i32 31), !dbg !43
  %352 = bitcast i32 %351 to float, !dbg !43
  %353 = fadd float %349, %352, !dbg !45
  %354 = bitcast float %353 to i32, !dbg !43
  %355 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %354, i32 1, i32 31), !dbg !43
  %356 = bitcast i32 %355 to float, !dbg !43
  %357 = fadd float %353, %356, !dbg !45
  %358 = bitcast float %357 to <1 x i32>, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %312, <1 x i32> %358, i1 %309) #4, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %359 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %316, i1 %314) #4, !dbg !43
  %360 = bitcast i32 %359 to float, !dbg !43
  %361 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %359, i32 1, i32 31), !dbg !43
  %362 = bitcast i32 %361 to float, !dbg !43
  %363 = fadd float %360, %362, !dbg !45
  %364 = bitcast float %363 to <1 x i32>, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %316, <1 x i32> %364, i1 %324) #4, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %365 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !43
  %366 = fadd float %365, 0.000000e+00, !dbg !46
  %367 = fadd float %327, %366, !dbg !48
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %urem = and i32 %5, 63, !dbg !50
  %368 = icmp eq i32 %urem, 0, !dbg !50
  %369 = bitcast float %367 to i32, !dbg !50
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %369, ptr addrspace(1) %0, i1 %368) #4, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "crfhchfaemaigzwktgyclnuci45puuj5lgsakea6x27s6ru65nya.py", directory: "inductor_cache/rf")
!4 = !{ptr @triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0", linkageName: "triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 30, scope: !7)
!12 = !DILocation(line: 31, column: 35, scope: !7)
!13 = !DILocation(line: 32, column: 30, scope: !7)
!14 = !DILocation(line: 32, column: 35, scope: !7)
!15 = !DILocation(line: 37, column: 19, scope: !7)
!16 = !DILocation(line: 38, column: 19, scope: !7)
!17 = !DILocation(line: 41, column: 19, scope: !7)
!18 = !DILocation(line: 43, column: 20, scope: !7)
!19 = !DILocation(line: 44, column: 19, scope: !7)
!20 = !DILocation(line: 45, column: 24, scope: !7)
!21 = !DILocation(line: 47, column: 20, scope: !7)
!22 = !DILocation(line: 48, column: 24, scope: !7)
!23 = !DILocation(line: 34, column: 19, scope: !7)
!24 = !DILocation(line: 35, column: 19, scope: !7)
!25 = !DILocation(line: 39, column: 18, scope: !7)
!26 = !DILocation(line: 40, column: 18, scope: !7)
!27 = !DILocation(line: 49, column: 19, scope: !7)
!28 = !DILocation(line: 50, column: 19, scope: !7)
!29 = !DILocation(line: 51, column: 13, scope: !7)
!30 = !DILocation(line: 256, column: 15, scope: !31, inlinedAt: !34)
!31 = distinct !DILexicalBlockFile(scope: !33, file: !32, discriminator: 0)
!32 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!33 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!34 = !DILocation(line: 53, column: 59, scope: !7)
!35 = !DILocation(line: 267, column: 36, scope: !33, inlinedAt: !34)
!36 = !DILocation(line: 73, column: 15, scope: !37, inlinedAt: !39)
!37 = distinct !DILexicalBlockFile(scope: !7, file: !38, discriminator: 0)
!38 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!39 = !DILocation(line: 53, column: 45, scope: !7)
!40 = !DILocation(line: 54, column: 20, scope: !7)
!41 = !DILocation(line: 55, column: 20, scope: !7)
!42 = !DILocation(line: 56, column: 13, scope: !7)
!43 = !DILocation(line: 267, column: 36, scope: !33, inlinedAt: !44)
!44 = !DILocation(line: 58, column: 59, scope: !7)
!45 = !DILocation(line: 256, column: 15, scope: !31, inlinedAt: !44)
!46 = !DILocation(line: 73, column: 15, scope: !37, inlinedAt: !47)
!47 = !DILocation(line: 58, column: 45, scope: !7)
!48 = !DILocation(line: 59, column: 20, scope: !7)
!49 = !DILocation(line: 60, column: 4, scope: !7)
!50 = !DILocation(line: 61, column: 63, scope: !7)
!51 = !DILocation(line: 61, column: 4, scope: !7)
