; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused_mul_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %9 = icmp slt i32 %8, 4, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = and i32 %10, 31, !dbg !12
  %12 = lshr i32 %10, 5, !dbg !12
  %13 = and i32 %10, 63, !dbg !12
  %14 = shl i32 %8, 6, !dbg !13
  %15 = or disjoint i32 %14, %13, !dbg !14
  %16 = sext i32 %15 to i64, !dbg !15
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !15
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %9, i32 0, i1 %9) #3, !dbg !16
  %19 = bitcast i32 %18 to float, !dbg !16
  %20 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !17
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %9, i32 0, i1 %9) #3, !dbg !18
  %22 = bitcast i32 %21 to float, !dbg !18
  %23 = fsub float 0.000000e+00, %19, !dbg !19
  %24 = fmul float %23, 0x3FF7154760000000, !dbg !23
  %25 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %24) #3, !dbg !23
  %26 = fadd float %25, 1.000000e+00, !dbg !24
  %27 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %26) #3, !dbg !25
  %28 = fmul float %27, %22, !dbg !26
  %29 = select i1 %9, float %28, float 0.000000e+00, !dbg !27
  %30 = bitcast float %29 to i32, !dbg !28
  %31 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %30, i32 16, i32 31), !dbg !28
  %32 = bitcast i32 %31 to float, !dbg !28
  %33 = fadd float %29, %32, !dbg !30
  %34 = bitcast float %33 to i32, !dbg !28
  %35 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %34, i32 8, i32 31), !dbg !28
  %36 = bitcast i32 %35 to float, !dbg !28
  %37 = fadd float %33, %36, !dbg !30
  %38 = bitcast float %37 to i32, !dbg !28
  %39 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %38, i32 4, i32 31), !dbg !28
  %40 = bitcast i32 %39 to float, !dbg !28
  %41 = fadd float %37, %40, !dbg !30
  %42 = bitcast float %41 to i32, !dbg !28
  %43 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %42, i32 2, i32 31), !dbg !28
  %44 = bitcast i32 %43 to float, !dbg !28
  %45 = fadd float %41, %44, !dbg !30
  %46 = bitcast float %45 to i32, !dbg !28
  %47 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %46, i32 1, i32 31), !dbg !28
  %48 = bitcast i32 %47 to float, !dbg !28
  %49 = fadd float %45, %48, !dbg !30
  %50 = icmp eq i32 %11, 0, !dbg !28
  %51 = and i32 %12, 1, !dbg !28
  %52 = zext nneg i32 %51 to i64, !dbg !28
  %53 = getelementptr float, ptr addrspace(3) @global_smem, i64 %52, !dbg !28
  %54 = bitcast float %49 to <1 x i32>, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %53, <1 x i32> %54, i1 %50) #3, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %55 = icmp slt i32 %10, 2, !dbg !28
  %56 = sext i32 %10 to i64, !dbg !28
  %57 = getelementptr float, ptr addrspace(3) @global_smem, i64 %56, !dbg !28
  %58 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %57, i1 %55) #3, !dbg !28
  %59 = bitcast i32 %58 to float, !dbg !28
  %60 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %58, i32 1, i32 31), !dbg !28
  %61 = bitcast i32 %60 to float, !dbg !28
  %62 = fadd float %59, %61, !dbg !30
  %63 = and i32 %10, 1, !dbg !28
  %64 = icmp eq i32 %63, 0, !dbg !28
  %65 = and i1 %55, %64, !dbg !28
  %66 = bitcast float %62 to <1 x i32>, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %57, <1 x i32> %66, i1 %65) #3, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %67 = load i32, ptr addrspace(3) @global_smem, align 16, !dbg !28
  %68 = select i1 %9, float %27, float 0.000000e+00, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %69 = bitcast float %68 to i32, !dbg !33
  %70 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %69, i32 16, i32 31), !dbg !33
  %71 = bitcast i32 %70 to float, !dbg !33
  %72 = fadd float %68, %71, !dbg !35
  %73 = bitcast float %72 to i32, !dbg !33
  %74 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %73, i32 8, i32 31), !dbg !33
  %75 = bitcast i32 %74 to float, !dbg !33
  %76 = fadd float %72, %75, !dbg !35
  %77 = bitcast float %76 to i32, !dbg !33
  %78 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %77, i32 4, i32 31), !dbg !33
  %79 = bitcast i32 %78 to float, !dbg !33
  %80 = fadd float %76, %79, !dbg !35
  %81 = bitcast float %80 to i32, !dbg !33
  %82 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %81, i32 2, i32 31), !dbg !33
  %83 = bitcast i32 %82 to float, !dbg !33
  %84 = fadd float %80, %83, !dbg !35
  %85 = bitcast float %84 to i32, !dbg !33
  %86 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %85, i32 1, i32 31), !dbg !33
  %87 = bitcast i32 %86 to float, !dbg !33
  %88 = fadd float %84, %87, !dbg !35
  %89 = bitcast float %88 to <1 x i32>, !dbg !33
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %53, <1 x i32> %89, i1 %50) #3, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %90 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %57, i1 %55) #3, !dbg !33
  %91 = bitcast i32 %90 to float, !dbg !33
  %92 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %90, i32 1, i32 31), !dbg !33
  %93 = bitcast i32 %92 to float, !dbg !33
  %94 = fadd float %91, %93, !dbg !35
  %95 = bitcast float %94 to <1 x i32>, !dbg !33
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %57, <1 x i32> %95, i1 %65) #3, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %96 = load i32, ptr addrspace(3) @global_smem, align 16, !dbg !33
  %97 = select i1 %9, float %22, float 0.000000e+00, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %98 = bitcast float %97 to i32, !dbg !37
  %99 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %98, i32 16, i32 31), !dbg !37
  %100 = bitcast i32 %99 to float, !dbg !37
  %101 = fadd float %97, %100, !dbg !39
  %102 = bitcast float %101 to i32, !dbg !37
  %103 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %102, i32 8, i32 31), !dbg !37
  %104 = bitcast i32 %103 to float, !dbg !37
  %105 = fadd float %101, %104, !dbg !39
  %106 = bitcast float %105 to i32, !dbg !37
  %107 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %106, i32 4, i32 31), !dbg !37
  %108 = bitcast i32 %107 to float, !dbg !37
  %109 = fadd float %105, %108, !dbg !39
  %110 = bitcast float %109 to i32, !dbg !37
  %111 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %110, i32 2, i32 31), !dbg !37
  %112 = bitcast i32 %111 to float, !dbg !37
  %113 = fadd float %109, %112, !dbg !39
  %114 = bitcast float %113 to i32, !dbg !37
  %115 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %114, i32 1, i32 31), !dbg !37
  %116 = bitcast i32 %115 to float, !dbg !37
  %117 = fadd float %113, %116, !dbg !39
  %118 = bitcast float %117 to <1 x i32>, !dbg !37
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %53, <1 x i32> %118, i1 %50) #3, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %119 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %57, i1 %55) #3, !dbg !37
  %120 = bitcast i32 %119 to float, !dbg !37
  %121 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %119, i32 1, i32 31), !dbg !37
  %122 = bitcast i32 %121 to float, !dbg !37
  %123 = fadd float %120, %122, !dbg !39
  %124 = bitcast float %123 to <1 x i32>, !dbg !37
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %57, <1 x i32> %124, i1 %65) #3, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %125 = load i32, ptr addrspace(3) @global_smem, align 16, !dbg !37
  %126 = sext i32 %8 to i64, !dbg !40
  %127 = getelementptr float, ptr addrspace(1) %2, i64 %126, !dbg !40
  %128 = icmp eq i32 %13, 0, !dbg !41
  %129 = and i1 %128, %9, !dbg !41
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %67, ptr addrspace(1) %127, i1 %129) #3, !dbg !41
  %130 = getelementptr float, ptr addrspace(1) %3, i64 %126, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %96, ptr addrspace(1) %130, i1 %129) #3, !dbg !43
  %131 = getelementptr float, ptr addrspace(1) %4, i64 %126, !dbg !44
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %125, ptr addrspace(1) %131, i1 %129) #3, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cespviast7parjylvj2mzki6tpryv3kjpdt2bowqnby65uttgexi.py", directory: "inductor_cache/es")
!4 = !{ptr @triton_per_fused_mul_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_mul_sum_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_mul_sum_0", linkageName: "triton_per_fused_mul_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 38, scope: !7)
!14 = !DILocation(line: 31, column: 35, scope: !7)
!15 = !DILocation(line: 31, column: 30, scope: !7)
!16 = !DILocation(line: 31, column: 43, scope: !7)
!17 = !DILocation(line: 32, column: 30, scope: !7)
!18 = !DILocation(line: 32, column: 43, scope: !7)
!19 = !DILocation(line: 47, column: 30, scope: !20, inlinedAt: !22)
!20 = distinct !DILexicalBlockFile(scope: !7, file: !21, discriminator: 0)
!21 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!22 = !DILocation(line: 33, column: 22, scope: !7)
!23 = !DILocation(line: 47, column: 29, scope: !20, inlinedAt: !22)
!24 = !DILocation(line: 47, column: 20, scope: !20, inlinedAt: !22)
!25 = !DILocation(line: 47, column: 16, scope: !20, inlinedAt: !22)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 36, column: 33, scope: !7)
!28 = !DILocation(line: 267, column: 36, scope: !20, inlinedAt: !29)
!29 = !DILocation(line: 37, column: 24, scope: !7)
!30 = !DILocation(line: 256, column: 15, scope: !31, inlinedAt: !29)
!31 = distinct !DILexicalBlockFile(scope: !20, file: !21, discriminator: 0)
!32 = !DILocation(line: 39, column: 34, scope: !7)
!33 = !DILocation(line: 267, column: 36, scope: !20, inlinedAt: !34)
!34 = !DILocation(line: 40, column: 26, scope: !7)
!35 = !DILocation(line: 256, column: 15, scope: !31, inlinedAt: !34)
!36 = !DILocation(line: 42, column: 35, scope: !7)
!37 = !DILocation(line: 267, column: 36, scope: !20, inlinedAt: !38)
!38 = !DILocation(line: 43, column: 26, scope: !7)
!39 = !DILocation(line: 256, column: 15, scope: !31, inlinedAt: !38)
!40 = !DILocation(line: 44, column: 25, scope: !7)
!41 = !DILocation(line: 44, column: 36, scope: !7)
!42 = !DILocation(line: 45, column: 25, scope: !7)
!43 = !DILocation(line: 45, column: 37, scope: !7)
!44 = !DILocation(line: 46, column: 25, scope: !7)
!45 = !DILocation(line: 46, column: 37, scope: !7)
!46 = !DILocation(line: 46, column: 4, scope: !7)
