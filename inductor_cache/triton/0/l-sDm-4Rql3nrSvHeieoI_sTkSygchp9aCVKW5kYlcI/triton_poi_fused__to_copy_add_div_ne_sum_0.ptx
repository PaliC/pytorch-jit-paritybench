//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__to_copy_add_div_ne_sum_0 // -- Begin function triton_poi_fused__to_copy_add_div_ne_sum_0
                                        // @triton_poi_fused__to_copy_add_div_ne_sum_0
.visible .entry triton_poi_fused__to_copy_add_div_ne_sum_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused__to_copy_add_div_ne_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__to_copy_add_div_ne_sum_0_param_1,
	.param .u32 triton_poi_fused__to_copy_add_div_ne_sum_0_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<27>;
	.reg .b32 	%r<39>;
	.reg .f32 	%f<19>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused__to_copy_add_div_ne_sum_0_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused__to_copy_add_div_ne_sum_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:21:33
	shl.b32 	%r18, %r1, 6;
	.loc	1 22 36                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:22:36
	mov.u32 	%r19, %tid.x;
	shl.b32 	%r20, %r19, 1;
	and.b32  	%r21, %r20, 62;
	.loc	1 22 23                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:22:23
	or.b32  	%r22, %r18, %r21;
	.loc	1 23 21                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:23:21
	setp.lt.s32 	%p1, %r22, 64;
	.loc	1 25 19                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:25:19
	shr.s32 	%r24, %r22, 31;
	shr.u32 	%r25, %r24, 28;
	add.s32 	%r26, %r22, %r25;
	.loc	1 24 19                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:24:19
	and.b32  	%r27, %r26, -16;
	sub.s32 	%r28, %r22, %r27;
	.loc	1 27 38                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:27:38
	shl.b32 	%r29, %r26, 2;
	and.b32  	%r30, %r29, -64;
	.loc	1 27 35                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:27:35
	add.s32 	%r31, %r30, %r28;
	.loc	1 27 30                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:27:30
	mul.wide.s32 	%rd8, %r31, 4;
	add.s64 	%rd1, %rd6, %rd8;
	.loc	1 27 43                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:27:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 28 40                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:28:40
	add.s32 	%r32, %r31, 16;
	.loc	1 28 30                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:28:30
	mul.wide.s32 	%rd9, %r32, 4;
	add.s64 	%rd2, %rd6, %rd9;
	.loc	1 28 48                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:28:48
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 29 40                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:29:40
	add.s32 	%r33, %r31, 32;
	.loc	1 29 30                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:29:30
	mul.wide.s32 	%rd10, %r33, 4;
	add.s64 	%rd3, %rd6, %rd10;
	.loc	1 29 48                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:29:48
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 30 40                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:30:40
	add.s32 	%r34, %r31, 48;
	.loc	1 30 30                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:30:30
	mul.wide.s32 	%rd11, %r34, 4;
	add.s64 	%rd4, %rd6, %rd11;
	.loc	1 30 48                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:30:48
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 28 48                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:28:48
	mov.b32 	%f1, %r4;
	mov.b32 	%f2, %r8;
	mov.b32 	%f3, %r6;
	mov.b32 	%f4, %r2;
	.loc	1 31 18                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:31:18
	add.f32 	%f5, %f4, %f1;
	.loc	1 32 18                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:32:18
	add.f32 	%f6, %f5, %f3;
	.loc	1 33 18                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:33:18
	add.f32 	%f7, %f6, %f2;
	.loc	1 37 20                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:37:20
	setp.neu.f32 	%p6, %f3, 0f00000000;
	selp.u16 	%rs1, 1, 0, %p6;
	shl.b16 	%rs2, %rs1, 2;
	setp.neu.f32 	%p7, %f2, 0f00000000;
	selp.u16 	%rs3, -1, 0, %p7;
	shl.b16 	%rs4, %rs3, 3;
	or.b16  	%rs5, %rs4, %rs2;
	setp.neu.f32 	%p8, %f4, 0f00000000;
	selp.u16 	%rs6, -1, 0, %p8;
	shl.b16 	%rs7, %rs6, 1;
	setp.neu.f32 	%p9, %f1, 0f00000000;
	selp.u16 	%rs8, 1, 0, %p9;
	or.b16  	%rs9, %rs8, %rs7;
	and.b16  	%rs10, %rs9, 3;
	or.b16  	%rs11, %rs10, %rs5;
	.loc	1 28 48                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:28:48
	mov.b32 	%f8, %r5;
	mov.b32 	%f9, %r9;
	mov.b32 	%f10, %r7;
	mov.b32 	%f11, %r3;
	.loc	1 31 18                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:31:18
	add.f32 	%f12, %f11, %f8;
	.loc	1 32 18                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:32:18
	add.f32 	%f13, %f12, %f10;
	.loc	1 33 18                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:33:18
	add.f32 	%f14, %f13, %f9;
	.loc	1 37 20                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:37:20
	setp.neu.f32 	%p10, %f10, 0f00000000;
	selp.u16 	%rs12, 1, 0, %p10;
	shl.b16 	%rs13, %rs12, 2;
	setp.neu.f32 	%p11, %f9, 0f00000000;
	selp.u16 	%rs14, -1, 0, %p11;
	shl.b16 	%rs15, %rs14, 3;
	or.b16  	%rs16, %rs15, %rs13;
	setp.neu.f32 	%p12, %f11, 0f00000000;
	selp.u16 	%rs17, -1, 0, %p12;
	shl.b16 	%rs18, %rs17, 1;
	setp.neu.f32 	%p13, %f8, 0f00000000;
	selp.u16 	%rs19, 1, 0, %p13;
	or.b16  	%rs20, %rs19, %rs18;
	and.b16  	%rs21, %rs20, 3;
	or.b16  	%rs22, %rs21, %rs16;
	.loc	1 45 20                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:45:20
	and.b16  	%rs23, %rs11, 15;
	cvt.u32.u16 	%r35, %rs23;
	popc.b32 	%r36, %r35;
	cvt.u16.u32 	%rs24, %r36;
	and.b16  	%rs25, %rs22, 15;
	cvt.u32.u16 	%r37, %rs25;
	popc.b32 	%r38, %r37;
	cvt.u16.u32 	%rs26, %r38;
	.loc	1 46 21                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:46:21
	cvt.rn.f32.u16 	%f15, %rs24;
	cvt.rn.f32.u16 	%f16, %rs26;
	.loc	1 48 20                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:48:20
	add.f32 	%f17, %f15, 0f24E69595;
	add.f32 	%f18, %f16, 0f24E69595;
	.loc	1 49 19                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:49:19
	mov.b32 	%r12, %f17;
	mov.b32 	%r11, %f7;
	// begin inline asm
	div.full.f32 %r16, %r11, %r12;
	// end inline asm
	mov.b32 	%r15, %f18;
	mov.b32 	%r14, %f14;
	// begin inline asm
	div.full.f32 %r17, %r14, %r15;
	// end inline asm
	.loc	1 50 25                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:50:25
	mul.wide.s32 	%rd12, %r22, 4;
	add.s64 	%rd5, %rd7, %rd12;
	.loc	1 50 37                         // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:50:37
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd5 + 0 ], { %r16, %r17 };
	// end inline asm
	.loc	1 50 4                          // cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py:50:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/nt/cnttprloqbziqrzzouzmvv7zp5tht3xnojkyqu7nr35nchop6flt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 116
.b8 116
.b8 112
.b8 114
.b8 108
.b8 111
.b8 113
.b8 98
.b8 122
.b8 105
.b8 113
.b8 114
.b8 122
.b8 122
.b8 111
.b8 117
.b8 122
.b8 109
.b8 118
.b8 118
.b8 55
.b8 122
.b8 112
.b8 53
.b8 116
.b8 104
.b8 116
.b8 51
.b8 120
.b8 110
.b8 111
.b8 106
.b8 107
.b8 121
.b8 113
.b8 117
.b8 55
.b8 110
.b8 114
.b8 51
.b8 53
.b8 110
.b8 99
.b8 104
.b8 111
.b8 112
.b8 54
.b8 102
.b8 108
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 116
.b8 0
	}
	.section	.debug_macinfo	{	}
