#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_cat_49(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<26624> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<416> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<6656> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<312> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<208> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<3328> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<104> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<-208> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<4992> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<-312> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_2 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_3 : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_3 : tensor<256xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %7, %cst_4 : tensor<256xi32, #blocked> loc(#loc9)
    %9 = arith.divsi %4, %cst_5 : tensor<256xi32, #blocked> loc(#loc10)
    %10 = arith.extsi %6 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc11)
    %11 = arith.cmpi slt, %10, %cst_6 : tensor<256xi64, #blocked> loc(#loc11)
    %12 = arith.cmpi slt, %10, %cst_7 : tensor<256xi64, #blocked> loc(#loc12)
    %13 = arith.andi %12, %11 : tensor<256xi1, #blocked> loc(#loc13)
    %14 = arith.muli %6, %cst_4 : tensor<256xi32, #blocked> loc(#loc14)
    %15 = arith.addi %8, %14 : tensor<256xi32, #blocked> loc(#loc15)
    %16 = arith.muli %9, %cst_8 : tensor<256xi32, #blocked> loc(#loc16)
    %17 = arith.addi %15, %16 : tensor<256xi32, #blocked> loc(#loc17)
    %18 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc18)
    %19 = tt.addptr %18, %17 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc18)
    %20 = arith.andi %13, %5 : tensor<256xi1, #blocked> loc(#loc19)
    %21 = tt.load %19, %20, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc20)
    %22 = arith.cmpi sge, %10, %cst_7 : tensor<256xi64, #blocked> loc(#loc21)
    %23 = arith.andi %22, %11 : tensor<256xi1, #blocked> loc(#loc22)
    %24 = arith.muli %7, %cst_9 : tensor<256xi32, #blocked> loc(#loc23)
    %25 = arith.addi %6, %cst_10 : tensor<256xi32, #blocked> loc(#loc24)
    %26 = arith.addi %24, %25 : tensor<256xi32, #blocked> loc(#loc25)
    %27 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc26)
    %28 = tt.addptr %27, %26 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc26)
    %29 = arith.andi %23, %5 : tensor<256xi1, #blocked> loc(#loc27)
    %30 = tt.load %28, %29, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc28)
    %31 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc29)
    %32 = tt.addptr %31, %25 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc29)
    %33 = tt.load %32, %29, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc30)
    %34 = arith.subf %30, %33 : tensor<256xf32, #blocked> loc(#loc31)
    %35 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc32)
    %36 = tt.addptr %35, %25 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc32)
    %37 = tt.load %36, %29, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc33)
    %38 = arith.addf %37, %cst_0 : tensor<256xf32, #blocked> loc(#loc34)
    %39 = tt.extern_elementwise %38 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32, #blocked>) -> tensor<256xf32, #blocked> loc(#loc35)
    %40 = arith.divf %cst_1, %39 : tensor<256xf32, #blocked> loc(#loc36)
    %41 = arith.mulf %34, %40 : tensor<256xf32, #blocked> loc(#loc37)
    %42 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc38)
    %43 = tt.addptr %42, %25 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc38)
    %44 = tt.load %43, %29, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc39)
    %45 = arith.mulf %41, %44 : tensor<256xf32, #blocked> loc(#loc40)
    %46 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc41)
    %47 = tt.addptr %46, %25 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc41)
    %48 = tt.load %47, %29, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc42)
    %49 = arith.addf %45, %48 : tensor<256xf32, #blocked> loc(#loc43)
    %50 = arith.cmpf ogt, %cst, %49 : tensor<256xf32, #blocked> loc(#loc64)
    %51 = arith.select %50, %cst, %49 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc65)
    %52 = arith.select %23, %51, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc47)
    %53 = arith.select %12, %21, %52 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc48)
    %54 = arith.cmpi sge, %10, %cst_6 : tensor<256xi64, #blocked> loc(#loc49)
    %55 = arith.addi %8, %cst_11 : tensor<256xi32, #blocked> loc(#loc50)
    %56 = arith.addi %6, %cst_12 : tensor<256xi32, #blocked> loc(#loc51)
    %57 = arith.muli %56, %cst_4 : tensor<256xi32, #blocked> loc(#loc52)
    %58 = arith.addi %55, %57 : tensor<256xi32, #blocked> loc(#loc53)
    %59 = arith.muli %9, %cst_5 : tensor<256xi32, #blocked> loc(#loc54)
    %60 = arith.addi %58, %59 : tensor<256xi32, #blocked> loc(#loc55)
    %61 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc56)
    %62 = tt.addptr %61, %60 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc56)
    %63 = arith.andi %54, %5 : tensor<256xi1, #blocked> loc(#loc57)
    %64 = tt.load %62, %63, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc58)
    %65 = arith.select %11, %53, %64 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc66)
    %66 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc61)
    %67 = tt.addptr %66, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc61)
    tt.store %67, %65, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc62)
    tt.return loc(#loc63)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":21:28)
#loc3 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":21:33)
#loc4 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":22:36)
#loc5 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":22:23)
#loc6 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":23:21)
#loc7 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":24:19)
#loc8 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":25:21)
#loc9 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":25:28)
#loc10 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":26:19)
#loc11 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":33:18)
#loc12 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":38:18)
#loc13 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":39:19)
#loc14 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":40:40)
#loc15 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":40:36)
#loc16 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":40:51)
#loc17 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":40:46)
#loc18 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":40:31)
#loc19 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":40:64)
#loc20 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":40:56)
#loc21 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":41:20)
#loc22 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":44:20)
#loc23 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":45:35)
#loc24 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":45:51)
#loc25 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":45:41)
#loc26 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":45:31)
#loc27 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":45:66)
#loc28 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":45:58)
#loc29 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":46:31)
#loc30 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":46:47)
#loc31 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":47:20)
#loc32 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":48:31)
#loc33 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":48:47)
#loc34 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":50:20)
#loc35 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":51:27)
#loc36 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":53:20)
#loc37 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":56:20)
#loc38 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":57:31)
#loc39 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":57:47)
#loc40 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":58:20)
#loc41 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":59:31)
#loc42 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":59:47)
#loc43 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":60:20)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc45 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":62:42)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc47 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":64:35)
#loc48 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":65:34)
#loc49 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":68:20)
#loc50 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":71:38)
#loc51 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":71:56)
#loc52 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":71:47)
#loc53 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":71:43)
#loc54 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":71:67)
#loc55 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":71:62)
#loc56 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":71:31)
#loc57 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":71:80)
#loc58 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":71:72)
#loc59 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":72:34)
#loc60 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":67:34)
#loc61 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":73:25)
#loc62 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":73:37)
#loc63 = loc("inductor_cache/nu/cnumwt374w7tnqyd3agqbpsqenrekmxcq7fma7hcpsie7ld7ovjq.py":73:4)
#loc64 = loc(callsite(#loc44 at #loc45))
#loc65 = loc(callsite(#loc46 at #loc45))
#loc66 = loc(fused[#loc59, #loc60])
