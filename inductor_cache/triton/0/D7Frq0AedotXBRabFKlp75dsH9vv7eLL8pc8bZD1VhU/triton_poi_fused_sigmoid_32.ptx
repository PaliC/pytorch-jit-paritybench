//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_sigmoid_32 // -- Begin function triton_poi_fused_sigmoid_32
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_sigmoid_32
.visible .entry triton_poi_fused_sigmoid_32(
	.param .u64 .ptr .global .align 1 triton_poi_fused_sigmoid_32_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_sigmoid_32_param_1,
	.param .u32 triton_poi_fused_sigmoid_32_param_2,
	.param .u32 triton_poi_fused_sigmoid_32_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<31>;
	.reg .b32 	%r<155>;
	.reg .f32 	%f<42>;
	.reg .b64 	%rd<23>;
	.loc	1 19 0                          // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused_sigmoid_32_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused_sigmoid_32_param_1];
$L__tmp0:
	.loc	1 22 28                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:22:33
	shl.b32 	%r59, %r1, 4;
	.loc	1 23 44                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:23:44
	mov.u32 	%r60, %tid.x;
	shl.b32 	%r61, %r60, 2;
	and.b32  	%r62, %r61, 12;
	and.b32  	%r63, %r60, 64;
	bfe.u32 	%r64, %r60, 6, 1;
	.loc	1 23 23                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:23:23
	or.b32  	%r65, %r59, %r62;
	or.b32  	%r66, %r59, %r64;
	or.b32  	%r67, %r66, 2;
	or.b32  	%r68, %r66, 4;
	or.b32  	%r69, %r66, 6;
	or.b32  	%r70, %r66, 8;
	or.b32  	%r71, %r66, 10;
	or.b32  	%r72, %r66, 12;
	or.b32  	%r73, %r66, 14;
	.loc	1 24 21                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:24:21
	setp.lt.s32 	%p19, %r65, 16;
	setp.lt.s32 	%p20, %r66, 16;
	setp.lt.s32 	%p21, %r67, 16;
	setp.lt.s32 	%p22, %r68, 16;
	setp.lt.s32 	%p23, %r69, 16;
	setp.lt.s32 	%p24, %r70, 16;
	setp.lt.s32 	%p25, %r71, 16;
	setp.lt.s32 	%p26, %r72, 16;
	setp.lt.s32 	%p27, %r73, 16;
	.loc	1 25 28                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:25:33
	shl.b32 	%r74, %r2, 6;
	.loc	1 26 44                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:26:44
	bfe.u32 	%r75, %r60, 2, 4;
	shr.u32 	%r76, %r63, 2;
	or.b32  	%r77, %r75, %r76;
	and.b32  	%r78, %r60, 63;
	.loc	1 26 23                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:26:23
	or.b32  	%r79, %r74, %r77;
	or.b32  	%r80, %r79, 32;
	or.b32  	%r81, %r74, %r78;
	.loc	1 27 21                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:27:21
	setp.lt.s32 	%p28, %r79, 90721;
	setp.lt.s32 	%p29, %r80, 90721;
	setp.lt.s32 	%p30, %r81, 90721;
	.loc	1 30 19                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:30:19
	shr.u32 	%r82, %r65, 2;
	.loc	1 32 51                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:32:51
	mul.lo.s32 	%r83, %r82, 1088652;
	.loc	1 32 38                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:32:38
	mad.lo.s32 	%r84, %r79, 12, %r83;
	.loc	1 32 43                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:32:43
	add.s32 	%r85, %r84, 384;
	.loc	1 32 30                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:32:30
	mul.wide.s32 	%rd13, %r84, 4;
	add.s64 	%rd1, %rd11, %rd13;
	mul.wide.s32 	%rd14, %r85, 4;
	add.s64 	%rd2, %rd11, %rd14;
	.loc	1 32 64                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:32:64
	and.pred  	%p1, %p19, %p28;
	and.pred  	%p2, %p29, %p19;
	and.pred  	%p11, %p20, %p30;
	and.pred  	%p12, %p21, %p30;
	and.pred  	%p13, %p22, %p30;
	and.pred  	%p14, %p23, %p30;
	and.pred  	%p15, %p24, %p30;
	and.pred  	%p16, %p25, %p30;
	and.pred  	%p17, %p26, %p30;
	and.pred  	%p18, %p27, %p30;
	.loc	1 32 56                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:32:56
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r3;
	mov.b32 	%f18, %r4;
	mov.b32 	%f19, %r5;
	mov.b32 	%f20, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r7;
	mov.b32 	%f22, %r8;
	mov.b32 	%f23, %r9;
	mov.b32 	%f24, %r10;
	mov.f32 	%f25, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f26, %f25, %f17;
	sub.f32 	%f27, %f25, %f18;
	sub.f32 	%f28, %f25, %f19;
	sub.f32 	%f29, %f25, %f20;
	sub.f32 	%f30, %f25, %f21;
	sub.f32 	%f31, %f25, %f22;
	sub.f32 	%f32, %f25, %f23;
	sub.f32 	%f33, %f25, %f24;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f26, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f27, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f28, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f29, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	mul.f32 	%f10, %f30, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f31, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	mul.f32 	%f14, %f32, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f33, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f34, %f1, 0f3F800000;
	add.f32 	%f35, %f3, 0f3F800000;
	add.f32 	%f36, %f5, 0f3F800000;
	add.f32 	%f37, %f7, 0f3F800000;
	add.f32 	%f38, %f9, 0f3F800000;
	add.f32 	%f39, %f11, 0f3F800000;
	add.f32 	%f40, %f13, 0f3F800000;
	add.f32 	%f41, %f15, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r13, %f34;
	mov.b32 	%r12, 1065353216;
	// begin inline asm
	div.full.f32 %r36, %r12, %r13;
	// end inline asm
	mov.b32 	%r16, %f35;
	// begin inline asm
	div.full.f32 %r38, %r12, %r16;
	// end inline asm
	mov.b32 	%r19, %f36;
	// begin inline asm
	div.full.f32 %r40, %r12, %r19;
	// end inline asm
	mov.b32 	%r22, %f37;
	// begin inline asm
	div.full.f32 %r42, %r12, %r22;
	// end inline asm
	mov.b32 	%r25, %f38;
	// begin inline asm
	div.full.f32 %r44, %r12, %r25;
	// end inline asm
	mov.b32 	%r28, %f39;
	// begin inline asm
	div.full.f32 %r46, %r12, %r28;
	// end inline asm
	mov.b32 	%r31, %f40;
	// begin inline asm
	div.full.f32 %r48, %r12, %r31;
	// end inline asm
	mov.b32 	%r34, %f41;
	// begin inline asm
	div.full.f32 %r50, %r12, %r34;
	// end inline asm
$L__tmp2:
	.loc	1 34 30                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:34:30
	mad.lo.s32 	%r86, %r66, 90721, %r81;
	add.s32 	%r87, %r86, 181442;
	add.s32 	%r88, %r86, 362884;
	add.s32 	%r89, %r86, 544326;
	add.s32 	%r90, %r86, 725768;
	add.s32 	%r91, %r86, 907210;
	add.s32 	%r92, %r86, 1088652;
	add.s32 	%r93, %r86, 1270094;
	.loc	1 34 25                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:34:25
	mul.wide.s32 	%rd15, %r86, 4;
	add.s64 	%rd3, %rd12, %rd15;
	mul.wide.s32 	%rd16, %r87, 4;
	add.s64 	%rd4, %rd12, %rd16;
	mul.wide.s32 	%rd17, %r88, 4;
	add.s64 	%rd5, %rd12, %rd17;
	mul.wide.s32 	%rd18, %r89, 4;
	add.s64 	%rd6, %rd12, %rd18;
	mul.wide.s32 	%rd19, %r90, 4;
	add.s64 	%rd7, %rd12, %rd19;
	mul.wide.s32 	%rd20, %r91, 4;
	add.s64 	%rd8, %rd12, %rd20;
	mul.wide.s32 	%rd21, %r92, 4;
	add.s64 	%rd9, %rd12, %rd21;
	mul.wide.s32 	%rd22, %r93, 4;
	add.s64 	%rd10, %rd12, %rd22;
	.loc	1 34 47                         // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:34:47
	shl.b32 	%r94, %r60, 8;
	and.b32  	%r95, %r94, 768;
	or.b32  	%r96, %r77, %r95;
	and.b32  	%r97, %r60, 127;
	shr.u32 	%r98, %r95, 6;
	add.s32 	%r99, %r96, %r98;
	shl.b32 	%r100, %r99, 2;
	mov.u32 	%r101, global_smem;
	add.s32 	%r35, %r101, %r100;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	or.b32  	%r102, %r95, 64;
	shr.u32 	%r103, %r102, 6;
	add.s32 	%r104, %r103, %r96;
	shl.b32 	%r105, %r104, 2;
	add.s32 	%r106, %r101, %r105;
	add.s32 	%r37, %r106, 256;
	// begin inline asm
	@%p3 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	or.b32  	%r107, %r95, 128;
	shr.u32 	%r108, %r107, 6;
	add.s32 	%r109, %r108, %r96;
	shl.b32 	%r110, %r109, 2;
	add.s32 	%r111, %r101, %r110;
	add.s32 	%r39, %r111, 512;
	// begin inline asm
	@%p3 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	or.b32  	%r112, %r95, 192;
	shr.u32 	%r113, %r112, 6;
	add.s32 	%r114, %r113, %r96;
	shl.b32 	%r115, %r114, 2;
	add.s32 	%r116, %r101, %r115;
	add.s32 	%r41, %r116, 768;
	// begin inline asm
	@%p3 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r35, 128;
	// begin inline asm
	@%p3 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r106, 384;
	// begin inline asm
	@%p3 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r111, 640;
	// begin inline asm
	@%p3 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r116, 896;
	// begin inline asm
	@%p3 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r117, %r64, %r97;
	shl.b32 	%r118, %r117, 2;
	add.s32 	%r119, %r101, %r118;
	ld.shared.u32 	%r51, [%r119];
	or.b32  	%r120, %r97, 128;
	shr.u32 	%r121, %r120, 6;
	add.s32 	%r122, %r121, %r97;
	shl.b32 	%r123, %r122, 2;
	add.s32 	%r124, %r101, %r123;
	ld.shared.u32 	%r52, [%r124+512];
	or.b32  	%r125, %r97, 256;
	shr.u32 	%r126, %r125, 6;
	add.s32 	%r127, %r126, %r97;
	shl.b32 	%r128, %r127, 2;
	add.s32 	%r129, %r101, %r128;
	ld.shared.u32 	%r53, [%r129+1024];
	or.b32  	%r130, %r97, 384;
	shr.u32 	%r131, %r130, 6;
	add.s32 	%r132, %r131, %r97;
	shl.b32 	%r133, %r132, 2;
	add.s32 	%r134, %r101, %r133;
	ld.shared.u32 	%r54, [%r134+1536];
	or.b32  	%r135, %r97, 512;
	shr.u32 	%r136, %r135, 6;
	add.s32 	%r137, %r136, %r97;
	shl.b32 	%r138, %r137, 2;
	add.s32 	%r139, %r101, %r138;
	ld.shared.u32 	%r55, [%r139+2048];
	or.b32  	%r140, %r97, 640;
	shr.u32 	%r141, %r140, 6;
	add.s32 	%r142, %r141, %r97;
	shl.b32 	%r143, %r142, 2;
	add.s32 	%r144, %r101, %r143;
	ld.shared.u32 	%r56, [%r144+2560];
	or.b32  	%r145, %r97, 768;
	shr.u32 	%r146, %r145, 6;
	add.s32 	%r147, %r146, %r97;
	shl.b32 	%r148, %r147, 2;
	add.s32 	%r149, %r101, %r148;
	ld.shared.u32 	%r57, [%r149+3072];
	or.b32  	%r150, %r97, 896;
	shr.u32 	%r151, %r150, 6;
	add.s32 	%r152, %r151, %r97;
	shl.b32 	%r153, %r152, 2;
	add.s32 	%r154, %r101, %r153;
	ld.shared.u32 	%r58, [%r154+3584];
	// begin inline asm
	@%p11 st.global.b32 [ %rd3 + 0 ], { %r51 };
	// end inline asm
	// begin inline asm
	@%p12 st.global.b32 [ %rd4 + 0 ], { %r52 };
	// end inline asm
	// begin inline asm
	@%p13 st.global.b32 [ %rd5 + 0 ], { %r53 };
	// end inline asm
	// begin inline asm
	@%p14 st.global.b32 [ %rd6 + 0 ], { %r54 };
	// end inline asm
	// begin inline asm
	@%p15 st.global.b32 [ %rd7 + 0 ], { %r55 };
	// end inline asm
	// begin inline asm
	@%p16 st.global.b32 [ %rd8 + 0 ], { %r56 };
	// end inline asm
	// begin inline asm
	@%p17 st.global.b32 [ %rd9 + 0 ], { %r57 };
	// end inline asm
	// begin inline asm
	@%p18 st.global.b32 [ %rd10 + 0 ], { %r58 };
	// end inline asm
	.loc	1 34 4                          // c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py:34:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7g/c7gi4bzv6zte2ut4nbkpj3danyabpt63gwjytbaidbnwlqpwmikw.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 172                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 103
.b8 105
.b8 52
.b8 98
.b8 122
.b8 118
.b8 54
.b8 122
.b8 116
.b8 101
.b8 50
.b8 117
.b8 116
.b8 52
.b8 110
.b8 98
.b8 107
.b8 112
.b8 106
.b8 51
.b8 100
.b8 97
.b8 110
.b8 121
.b8 97
.b8 98
.b8 112
.b8 116
.b8 54
.b8 51
.b8 103
.b8 119
.b8 106
.b8 121
.b8 116
.b8 98
.b8 97
.b8 105
.b8 100
.b8 98
.b8 110
.b8 119
.b8 108
.b8 113
.b8 112
.b8 119
.b8 109
.b8 105
.b8 107
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 103
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 51
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x81:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x96:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 33                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
