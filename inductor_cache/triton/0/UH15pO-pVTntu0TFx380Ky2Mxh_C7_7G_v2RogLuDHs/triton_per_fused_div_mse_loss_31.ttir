#loc = loc("inductor_cache/do/cdovl2jv553bngnovgxcehlpo5w4ve2xnlgalausv67bw6v6p2uz.py":19:0)
#loc1 = loc(unknown)
#loc6 = loc("inductor_cache/do/cdovl2jv553bngnovgxcehlpo5w4ve2xnlgalausv67bw6v6p2uz.py":33:57)
#loc14 = loc(callsite(#loc1 at #loc6))
module {
  tt.func public @triton_per_fused_div_mse_loss_31(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/do/cdovl2jv553bngnovgxcehlpo5w4ve2xnlgalausv67bw6v6p2uz.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/do/cdovl2jv553bngnovgxcehlpo5w4ve2xnlgalausv67bw6v6p2uz.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/do/cdovl2jv553bngnovgxcehlpo5w4ve2xnlgalausv67bw6v6p2uz.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %0 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc2)
    %1 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc3)
    %3 = tt.load %2 : tensor<512x!tt.ptr<f32>> loc(#loc4)
    %4 = "tt.reduce"(%3) <{axis = 0 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc6)), %arg4: f32 loc(callsite(#loc1 at #loc6))):
      %9 = arith.addf %arg3, %arg4 : f32 loc(#loc17)
      tt.reduce.return %9 : f32 loc(#loc13)
    }) : (tensor<512xf32>) -> f32 loc(#loc13)
    %5 = arith.addf %4, %cst : f32 loc(#loc16)
    %6 = tt.splat %5 : f32 -> tensor<1xf32> loc(#loc16)
    %7 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc10)
    %8 = tt.splat %7 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc10)
    tt.store %8, %6 : tensor<1x!tt.ptr<f32>> loc(#loc11)
    tt.return loc(#loc12)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/do/cdovl2jv553bngnovgxcehlpo5w4ve2xnlgalausv67bw6v6p2uz.py":27:26)
#loc3 = loc("inductor_cache/do/cdovl2jv553bngnovgxcehlpo5w4ve2xnlgalausv67bw6v6p2uz.py":31:30)
#loc4 = loc("inductor_cache/do/cdovl2jv553bngnovgxcehlpo5w4ve2xnlgalausv67bw6v6p2uz.py":31:35)
#loc5 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc7 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc8 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc9 = loc("inductor_cache/do/cdovl2jv553bngnovgxcehlpo5w4ve2xnlgalausv67bw6v6p2uz.py":33:44)
#loc10 = loc("inductor_cache/do/cdovl2jv553bngnovgxcehlpo5w4ve2xnlgalausv67bw6v6p2uz.py":34:25)
#loc11 = loc("inductor_cache/do/cdovl2jv553bngnovgxcehlpo5w4ve2xnlgalausv67bw6v6p2uz.py":34:59)
#loc12 = loc("inductor_cache/do/cdovl2jv553bngnovgxcehlpo5w4ve2xnlgalausv67bw6v6p2uz.py":34:4)
#loc13 = loc(callsite(#loc5 at #loc6))
#loc15 = loc(callsite(#loc7 at #loc5))
#loc16 = loc(callsite(#loc8 at #loc9))
#loc17 = loc(callsite(#loc15 at #loc6))
