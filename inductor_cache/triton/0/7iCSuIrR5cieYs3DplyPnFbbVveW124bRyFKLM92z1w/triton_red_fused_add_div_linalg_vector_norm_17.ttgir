#blocked = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#loc = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":19:0)
#loc1 = loc(unknown)
#loc10 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":36:25)
#loc20 = loc(callsite(#loc1 at #loc10))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused_add_div_linalg_vector_norm_17(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":19:0), %arg1: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999996E-13> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2048> : tensor<1x2048xi32, #blocked> loc(#loc1)
    %0 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x2048xi32, #blocked> loc(#loc2)
    %2 = arith.cmpi slt, %1, %cst_1 : tensor<1x2048xi32, #blocked> loc(#loc3)
    %3 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc4)
    %4 = tt.addptr %3, %1 : tensor<1x2048x!tt.ptr<f32>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc4)
    %5 = tt.load %4, %2, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc5)
    %6 = arith.mulf %5, %5 : tensor<1x2048xf32, #blocked> loc(#loc6)
    %7 = arith.addf %6, %cst : tensor<1x2048xf32, #blocked> loc(#loc7)
    %8 = arith.select %2, %7, %cst : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc8)
    %9 = "tt.reduce"(%8) <{axis = 1 : i32}> ({
    ^bb0(%arg2: f32 loc(callsite(#loc1 at #loc10)), %arg3: f32 loc(callsite(#loc1 at #loc10))):
      %16 = arith.addf %arg2, %arg3 : f32 loc(#loc22)
      tt.reduce.return %16 : f32 loc(#loc19)
    }) : (tensor<1x2048xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc19)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc12)
    %11 = tt.load %4, %2, %cst evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc13)
    %12 = tt.extern_elementwise %10 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc14)
    %13 = arith.addf %12, %cst_0 : tensor<1x1xf32, #blocked> loc(#loc15)
    %14 = tt.broadcast %13 : tensor<1x1xf32, #blocked> -> tensor<1x2048xf32, #blocked> loc(#loc16)
    %15 = arith.divf %11, %14 : tensor<1x2048xf32, #blocked> loc(#loc16)
    tt.store %4, %15, %2 : tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc17)
    tt.return loc(#loc18)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":25:33)
#loc3 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":29:25)
#loc4 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":31:38)
#loc5 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":31:43)
#loc6 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":32:22)
#loc7 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":34:23)
#loc8 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":35:38)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc12 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":36:28)
#loc13 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":41:43)
#loc14 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":42:30)
#loc15 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":44:22)
#loc16 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":45:22)
#loc17 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":46:78)
#loc18 = loc("inductor_cache/un/cunskjm6pbtsa3x5npyxt5nydqlax3f4czokzdvelxu3pzu5dld7.py":37:4)
#loc19 = loc(callsite(#loc9 at #loc10))
#loc21 = loc(callsite(#loc11 at #loc9))
#loc22 = loc(callsite(#loc21 at #loc10))
