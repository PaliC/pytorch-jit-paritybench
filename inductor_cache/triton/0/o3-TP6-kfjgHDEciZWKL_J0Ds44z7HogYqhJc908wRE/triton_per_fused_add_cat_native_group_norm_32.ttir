#loc = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0)
#loc1 = loc(unknown)
#loc57 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":60:26)
#loc64 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":68:26)
#loc79 = loc(callsite(#loc1 at #loc57))
#loc82 = loc(callsite(#loc1 at #loc64))
module {
  tt.func public @triton_per_fused_add_cat_native_group_norm_32(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999974E-6> : tensor<8x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.280000e+02> : tensor<8x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<-192> : tensor<1x128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<1024> : tensor<8x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<-128> : tensor<1x128xi32> loc(#loc1)
    %cst_4 = arith.constant dense<192> : tensor<8x128xi64> loc(#loc1)
    %cst_5 = arith.constant dense<2048> : tensor<8x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<16> : tensor<8x128xi32> loc(#loc1)
    %cst_7 = arith.constant dense<128> : tensor<8x128xi64> loc(#loc1)
    %cst_8 = arith.constant dense<8> : tensor<8x1xi32> loc(#loc1)
    %cst_9 = arith.constant dense<0.000000e+00> : tensor<8x128xf32> loc(#loc1)
    %cst_10 = arith.constant dense<32> : tensor<8x1xi32> loc(#loc1)
    %cst_11 = arith.constant dense<16> : tensor<1x128xi32> loc(#loc1)
    %cst_12 = arith.constant dense<128> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_12 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc9)
    %9 = arith.divsi %8, %cst_11 : tensor<1x128xi32> loc(#loc10)
    %10 = arith.remsi %5, %cst_10 : tensor<8x1xi32> loc(#loc11)
    %11 = arith.remsi %8, %cst_11 : tensor<1x128xi32> loc(#loc12)
    %12 = arith.divsi %5, %cst_10 : tensor<8x1xi32> loc(#loc13)
    %13 = arith.muli %5, %cst_12 : tensor<8x1xi32> loc(#loc14)
    %14 = tt.broadcast %8 : tensor<1x128xi32> -> tensor<8x128xi32> loc(#loc15)
    %15 = tt.broadcast %13 : tensor<8x1xi32> -> tensor<8x128xi32> loc(#loc15)
    %16 = arith.addi %14, %15 : tensor<8x128xi32> loc(#loc15)
    %17 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x128x!tt.ptr<f32>> loc(#loc16)
    %18 = tt.addptr %17, %16 : tensor<8x128x!tt.ptr<f32>>, tensor<8x128xi32> loc(#loc16)
    %19 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x128xi1> loc(#loc17)
    %20 = tt.load %18, %19, %cst_9 : tensor<8x128x!tt.ptr<f32>> loc(#loc17)
    %21 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<8x128x!tt.ptr<f32>> loc(#loc18)
    %22 = tt.addptr %21, %16 : tensor<8x128x!tt.ptr<f32>>, tensor<8x128xi32> loc(#loc18)
    %23 = tt.load %22, %19, %cst_9 : tensor<8x128x!tt.ptr<f32>> loc(#loc19)
    %24 = arith.muli %10, %cst_8 : tensor<8x1xi32> loc(#loc20)
    %25 = tt.broadcast %9 : tensor<1x128xi32> -> tensor<8x128xi32> loc(#loc21)
    %26 = tt.broadcast %24 : tensor<8x1xi32> -> tensor<8x128xi32> loc(#loc21)
    %27 = arith.addi %25, %26 : tensor<8x128xi32> loc(#loc21)
    %28 = arith.extsi %27 : tensor<8x128xi32> to tensor<8x128xi64> loc(#loc22)
    %29 = arith.cmpi slt, %28, %cst_7 : tensor<8x128xi64> loc(#loc22)
    %30 = arith.muli %27, %cst_6 : tensor<8x128xi32> loc(#loc23)
    %31 = tt.broadcast %11 : tensor<1x128xi32> -> tensor<8x128xi32> loc(#loc24)
    %32 = arith.addi %31, %30 : tensor<8x128xi32> loc(#loc24)
    %33 = arith.muli %12, %cst_5 : tensor<8x1xi32> loc(#loc25)
    %34 = tt.broadcast %33 : tensor<8x1xi32> -> tensor<8x128xi32> loc(#loc26)
    %35 = arith.addi %32, %34 : tensor<8x128xi32> loc(#loc26)
    %36 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x128x!tt.ptr<f32>> loc(#loc27)
    %37 = tt.addptr %36, %35 : tensor<8x128x!tt.ptr<f32>>, tensor<8x128xi32> loc(#loc27)
    %38 = arith.andi %29, %19 : tensor<8x128xi1> loc(#loc28)
    %39 = tt.load %37, %38, %cst_9 : tensor<8x128x!tt.ptr<f32>> loc(#loc29)
    %40 = arith.cmpi sge, %28, %cst_7 : tensor<8x128xi64> loc(#loc30)
    %41 = arith.cmpi slt, %28, %cst_4 : tensor<8x128xi64> loc(#loc31)
    %42 = arith.andi %40, %41 : tensor<8x128xi1> loc(#loc32)
    %43 = arith.addi %9, %cst_3 : tensor<1x128xi32> loc(#loc33)
    %44 = tt.broadcast %43 : tensor<1x128xi32> -> tensor<8x128xi32> loc(#loc34)
    %45 = arith.addi %44, %26 : tensor<8x128xi32> loc(#loc34)
    %46 = arith.muli %45, %cst_6 : tensor<8x128xi32> loc(#loc35)
    %47 = arith.addi %31, %46 : tensor<8x128xi32> loc(#loc36)
    %48 = arith.muli %12, %cst_2 : tensor<8x1xi32> loc(#loc37)
    %49 = tt.broadcast %48 : tensor<8x1xi32> -> tensor<8x128xi32> loc(#loc38)
    %50 = arith.addi %47, %49 : tensor<8x128xi32> loc(#loc38)
    %51 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x128x!tt.ptr<f32>> loc(#loc39)
    %52 = tt.addptr %51, %50 : tensor<8x128x!tt.ptr<f32>>, tensor<8x128xi32> loc(#loc39)
    %53 = arith.andi %42, %19 : tensor<8x128xi1> loc(#loc40)
    %54 = tt.load %52, %53, %cst_9 : tensor<8x128x!tt.ptr<f32>> loc(#loc41)
    %55 = arith.cmpi sge, %28, %cst_4 : tensor<8x128xi64> loc(#loc42)
    %56 = arith.addi %9, %cst_1 : tensor<1x128xi32> loc(#loc43)
    %57 = tt.broadcast %56 : tensor<1x128xi32> -> tensor<8x128xi32> loc(#loc44)
    %58 = arith.addi %57, %26 : tensor<8x128xi32> loc(#loc44)
    %59 = arith.muli %58, %cst_6 : tensor<8x128xi32> loc(#loc45)
    %60 = arith.addi %31, %59 : tensor<8x128xi32> loc(#loc46)
    %61 = arith.addi %60, %49 : tensor<8x128xi32> loc(#loc47)
    %62 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x128x!tt.ptr<f32>> loc(#loc48)
    %63 = tt.addptr %62, %61 : tensor<8x128x!tt.ptr<f32>>, tensor<8x128xi32> loc(#loc48)
    %64 = arith.andi %55, %19 : tensor<8x128xi1> loc(#loc49)
    %65 = tt.load %63, %64, %cst_9 : tensor<8x128x!tt.ptr<f32>> loc(#loc50)
    %66 = arith.select %42, %54, %65 : tensor<8x128xi1>, tensor<8x128xf32> loc(#loc51)
    %67 = arith.select %29, %39, %66 : tensor<8x128xi1>, tensor<8x128xf32> loc(#loc52)
    %68 = arith.addf %20, %23 : tensor<8x128xf32> loc(#loc53)
    %69 = arith.addf %67, %68 : tensor<8x128xf32> loc(#loc54)
    %70 = arith.select %19, %69, %cst_9 : tensor<8x128xi1>, tensor<8x128xf32> loc(#loc55)
    %71 = "tt.reduce"(%70) <{axis = 1 : i32}> ({
    ^bb0(%arg11: f32 loc(callsite(#loc1 at #loc57)), %arg12: f32 loc(callsite(#loc1 at #loc57))):
      %91 = arith.addf %arg11, %arg12 : f32 loc(#loc83)
      tt.reduce.return %91 : f32 loc(#loc78)
    }) : (tensor<8x128xf32>) -> tensor<8xf32> loc(#loc78)
    %72 = tt.expand_dims %71 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc59)
    %73 = arith.divf %72, %cst_0 : tensor<8x1xf32> loc(#loc60)
    %74 = tt.broadcast %73 : tensor<8x1xf32> -> tensor<8x128xf32> loc(#loc61)
    %75 = arith.subf %69, %74 : tensor<8x128xf32> loc(#loc61)
    %76 = arith.mulf %75, %75 : tensor<8x128xf32> loc(#loc62)
    %77 = arith.select %19, %76, %cst_9 : tensor<8x128xi1>, tensor<8x128xf32> loc(#loc63)
    %78 = "tt.reduce"(%77) <{axis = 1 : i32}> ({
    ^bb0(%arg11: f32 loc(callsite(#loc1 at #loc64)), %arg12: f32 loc(callsite(#loc1 at #loc64))):
      %91 = arith.addf %arg11, %arg12 : f32 loc(#loc84)
      tt.reduce.return %91 : f32 loc(#loc81)
    }) : (tensor<8x128xf32>) -> tensor<8xf32> loc(#loc81)
    %79 = tt.expand_dims %78 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc65)
    %80 = arith.divf %79, %cst_0 : tensor<8x1xf32> loc(#loc66)
    %81 = arith.addf %80, %cst : tensor<8x1xf32> loc(#loc67)
    %82 = tt.extern_elementwise %81 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<8x1xf32>) -> tensor<8x1xf32> loc(#loc68)
    %83 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<8x128x!tt.ptr<f32>> loc(#loc69)
    %84 = tt.addptr %83, %16 : tensor<8x128x!tt.ptr<f32>>, tensor<8x128xi32> loc(#loc69)
    tt.store %84, %69, %19 : tensor<8x128x!tt.ptr<f32>> loc(#loc70)
    %85 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc71)
    %86 = tt.addptr %85, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc71)
    tt.store %86, %82, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc72)
    %87 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc73)
    %88 = tt.addptr %87, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc73)
    tt.store %88, %73, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc74)
    %89 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc75)
    %90 = tt.addptr %89, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc75)
    tt.store %90, %79, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc76)
    tt.return loc(#loc77)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":23:28)
#loc3 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":23:33)
#loc4 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":24:36)
#loc5 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":24:44)
#loc6 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":24:23)
#loc7 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":25:21)
#loc8 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":26:26)
#loc9 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":26:34)
#loc10 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":29:19)
#loc11 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":30:19)
#loc12 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":31:19)
#loc13 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":32:19)
#loc14 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":35:40)
#loc15 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":35:36)
#loc16 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":35:31)
#loc17 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":35:45)
#loc18 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":36:31)
#loc19 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":36:45)
#loc20 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":37:18)
#loc21 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":37:16)
#loc22 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":41:18)
#loc23 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:39)
#loc24 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:35)
#loc25 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:57)
#loc26 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:52)
#loc27 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:30)
#loc28 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:69)
#loc29 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:62)
#loc30 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":43:19)
#loc31 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":45:18)
#loc32 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":46:18)
#loc33 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:49)
#loc34 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:54)
#loc35 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:40)
#loc36 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:36)
#loc37 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:67)
#loc38 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:62)
#loc39 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:31)
#loc40 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:79)
#loc41 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:72)
#loc42 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":48:20)
#loc43 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:49)
#loc44 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:54)
#loc45 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:40)
#loc46 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:36)
#loc47 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:62)
#loc48 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:31)
#loc49 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:80)
#loc50 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:72)
#loc51 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":52:34)
#loc52 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":53:33)
#loc53 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":54:20)
#loc54 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":55:20)
#loc55 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":59:35)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc59 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":60:29)
#loc60 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":63:20)
#loc61 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":64:20)
#loc62 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":65:20)
#loc63 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":67:35)
#loc65 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":68:29)
#loc66 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":70:20)
#loc67 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":72:20)
#loc68 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":73:28)
#loc69 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":74:25)
#loc70 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":74:46)
#loc71 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":75:25)
#loc72 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":75:37)
#loc73 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":76:25)
#loc74 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":76:37)
#loc75 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":77:25)
#loc76 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":77:37)
#loc77 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":77:4)
#loc78 = loc(callsite(#loc56 at #loc57))
#loc80 = loc(callsite(#loc58 at #loc56))
#loc81 = loc(callsite(#loc56 at #loc64))
#loc83 = loc(callsite(#loc80 at #loc57))
#loc84 = loc(callsite(#loc80 at #loc64))
