; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_add_mul_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, ptr addrspace(1) %10, ptr addrspace(1) %11, ptr addrspace(1) %12, ptr addrspace(1) %13, ptr addrspace(1) %14, ptr addrspace(1) %15, ptr addrspace(1) %16, ptr addrspace(1) %17, ptr addrspace(1) %18, ptr addrspace(1) %19, ptr addrspace(1) %20, ptr addrspace(1) %21, ptr addrspace(1) %22, ptr addrspace(1) %23, ptr addrspace(1) %24, ptr addrspace(1) %25, ptr addrspace(1) %26, ptr addrspace(1) %27, ptr addrspace(1) %28, ptr addrspace(1) %29, ptr addrspace(1) %30, ptr addrspace(1) %31, ptr addrspace(1) %32, ptr addrspace(1) %33, ptr addrspace(1) %34, ptr addrspace(1) %35, ptr addrspace(1) %36, ptr addrspace(1) %37, ptr addrspace(1) %38, ptr addrspace(1) %39, ptr addrspace(1) %40, ptr addrspace(1) %41, ptr addrspace(1) %42, ptr addrspace(1) %43, ptr addrspace(1) %44, ptr addrspace(1) %45, ptr addrspace(1) %46, ptr addrspace(1) %47, ptr addrspace(1) %48, i32 %49) local_unnamed_addr !dbg !7 {
  %51 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %52 = shl i32 %51, 6, !dbg !11
  %53 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %54 = shl i32 %53, 1, !dbg !12
  %55 = and i32 %54, 62, !dbg !12
  %56 = and i32 %53, 31, !dbg !12
  %57 = or disjoint i32 %56, 32, !dbg !12
  %58 = or disjoint i32 %52, %55, !dbg !13
  %59 = or disjoint i32 %52, %56, !dbg !13
  %60 = or disjoint i32 %52, %57, !dbg !13
  %61 = icmp slt i32 %58, 64, !dbg !14
  %62 = icmp slt i32 %59, 64, !dbg !14
  %63 = icmp slt i32 %60, 64, !dbg !14
  %.frozen = freeze i32 %58, !dbg !15
  %64 = sdiv i32 %.frozen, 16, !dbg !15
  %65 = mul i32 %64, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %65, !dbg !16
  %66 = shl i32 %64, 6, !dbg !17
  %67 = add i32 %66, %.decomposed, !dbg !18
  %68 = sext i32 %67 to i64, !dbg !19
  %69 = getelementptr float, ptr addrspace(1) %0, i64 %68, !dbg !19
  %70 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %69, i1 %61) #2, !dbg !20
  %71 = extractvalue { i32, i32 } %70, 0, !dbg !20
  %72 = extractvalue { i32, i32 } %70, 1, !dbg !20
  %73 = bitcast i32 %71 to float, !dbg !20
  %74 = bitcast i32 %72 to float, !dbg !20
  %75 = add i32 %67, 16, !dbg !21
  %76 = sext i32 %75 to i64, !dbg !22
  %77 = getelementptr float, ptr addrspace(1) %0, i64 %76, !dbg !22
  %78 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %77, i1 %61) #2, !dbg !23
  %79 = extractvalue { i32, i32 } %78, 0, !dbg !23
  %80 = extractvalue { i32, i32 } %78, 1, !dbg !23
  %81 = bitcast i32 %79 to float, !dbg !23
  %82 = bitcast i32 %80 to float, !dbg !23
  %83 = add i32 %67, 32, !dbg !24
  %84 = sext i32 %83 to i64, !dbg !25
  %85 = getelementptr float, ptr addrspace(1) %0, i64 %84, !dbg !25
  %86 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %85, i1 %61) #2, !dbg !26
  %87 = extractvalue { i32, i32 } %86, 0, !dbg !26
  %88 = extractvalue { i32, i32 } %86, 1, !dbg !26
  %89 = bitcast i32 %87 to float, !dbg !26
  %90 = bitcast i32 %88 to float, !dbg !26
  %91 = fadd float %73, -1.000000e+00, !dbg !27
  %92 = fadd float %74, -1.000000e+00, !dbg !27
  %93 = fmul float %81, -1.500000e+00, !dbg !28
  %94 = fmul float %82, -1.500000e+00, !dbg !28
  %95 = fadd float %91, %93, !dbg !29
  %96 = fadd float %92, %94, !dbg !29
  %97 = fmul float %89, -1.500000e+00, !dbg !30
  %98 = fmul float %90, -1.500000e+00, !dbg !30
  %99 = fadd float %95, %97, !dbg !31
  %100 = fadd float %96, %98, !dbg !31
  %101 = fmul float %89, -5.000000e-01, !dbg !32
  %102 = fmul float %90, -5.000000e-01, !dbg !32
  %103 = fadd float %95, %101, !dbg !33
  %104 = fadd float %96, %102, !dbg !33
  %105 = fmul float %89, 5.000000e-01, !dbg !34
  %106 = fmul float %90, 5.000000e-01, !dbg !34
  %107 = fadd float %95, %105, !dbg !35
  %108 = fadd float %96, %106, !dbg !35
  %109 = fmul float %89, 1.500000e+00, !dbg !36
  %110 = fmul float %90, 1.500000e+00, !dbg !36
  %111 = fadd float %95, %109, !dbg !37
  %112 = fadd float %96, %110, !dbg !37
  %113 = fmul float %81, -5.000000e-01, !dbg !38
  %114 = fmul float %82, -5.000000e-01, !dbg !38
  %115 = fadd float %91, %113, !dbg !39
  %116 = fadd float %92, %114, !dbg !39
  %117 = fadd float %115, %97, !dbg !40
  %118 = fadd float %116, %98, !dbg !40
  %119 = fadd float %115, %101, !dbg !41
  %120 = fadd float %116, %102, !dbg !41
  %121 = fadd float %115, %105, !dbg !42
  %122 = fadd float %116, %106, !dbg !42
  %123 = fadd float %115, %109, !dbg !43
  %124 = fadd float %116, %110, !dbg !43
  %125 = fmul float %81, 5.000000e-01, !dbg !44
  %126 = fmul float %82, 5.000000e-01, !dbg !44
  %127 = fadd float %91, %125, !dbg !45
  %128 = fadd float %92, %126, !dbg !45
  %129 = fadd float %127, %97, !dbg !46
  %130 = fadd float %128, %98, !dbg !46
  %131 = fadd float %127, %101, !dbg !47
  %132 = fadd float %128, %102, !dbg !47
  %133 = fadd float %127, %105, !dbg !48
  %134 = fadd float %128, %106, !dbg !48
  %135 = fadd float %127, %109, !dbg !49
  %136 = fadd float %128, %110, !dbg !49
  %137 = fmul float %81, 1.500000e+00, !dbg !50
  %138 = fmul float %82, 1.500000e+00, !dbg !50
  %139 = fadd float %91, %137, !dbg !51
  %140 = fadd float %92, %138, !dbg !51
  %141 = fadd float %139, %97, !dbg !52
  %142 = fadd float %140, %98, !dbg !52
  %143 = fadd float %139, %101, !dbg !53
  %144 = fadd float %140, %102, !dbg !53
  %145 = fadd float %139, %105, !dbg !54
  %146 = fadd float %140, %106, !dbg !54
  %147 = fadd float %139, %109, !dbg !55
  %148 = fadd float %140, %110, !dbg !55
  %149 = fadd float %73, 0.000000e+00, !dbg !56
  %150 = fadd float %74, 0.000000e+00, !dbg !56
  %151 = fadd float %149, %93, !dbg !57
  %152 = fadd float %150, %94, !dbg !57
  %153 = fadd float %151, %97, !dbg !58
  %154 = fadd float %152, %98, !dbg !58
  %155 = fadd float %151, %101, !dbg !59
  %156 = fadd float %152, %102, !dbg !59
  %157 = fadd float %151, %105, !dbg !60
  %158 = fadd float %152, %106, !dbg !60
  %159 = fadd float %151, %109, !dbg !61
  %160 = fadd float %152, %110, !dbg !61
  %161 = fadd float %149, %113, !dbg !62
  %162 = fadd float %150, %114, !dbg !62
  %163 = fadd float %161, %97, !dbg !63
  %164 = fadd float %162, %98, !dbg !63
  %165 = fadd float %161, %101, !dbg !64
  %166 = fadd float %162, %102, !dbg !64
  %167 = fadd float %161, %105, !dbg !65
  %168 = fadd float %162, %106, !dbg !65
  %169 = fadd float %161, %109, !dbg !66
  %170 = fadd float %162, %110, !dbg !66
  %171 = fadd float %149, %125, !dbg !67
  %172 = fadd float %150, %126, !dbg !67
  %173 = fadd float %171, %97, !dbg !68
  %174 = fadd float %172, %98, !dbg !68
  %175 = fadd float %171, %101, !dbg !69
  %176 = fadd float %172, %102, !dbg !69
  %177 = fadd float %171, %105, !dbg !70
  %178 = fadd float %172, %106, !dbg !70
  %179 = fadd float %171, %109, !dbg !71
  %180 = fadd float %172, %110, !dbg !71
  %181 = fadd float %149, %137, !dbg !72
  %182 = fadd float %150, %138, !dbg !72
  %183 = fadd float %181, %97, !dbg !73
  %184 = fadd float %182, %98, !dbg !73
  %185 = fadd float %181, %101, !dbg !74
  %186 = fadd float %182, %102, !dbg !74
  %187 = fadd float %181, %105, !dbg !75
  %188 = fadd float %182, %106, !dbg !75
  %189 = fadd float %181, %109, !dbg !76
  %190 = fadd float %182, %110, !dbg !76
  %191 = fadd float %73, 1.000000e+00, !dbg !77
  %192 = fadd float %74, 1.000000e+00, !dbg !77
  %193 = fadd float %191, %93, !dbg !78
  %194 = fadd float %192, %94, !dbg !78
  %195 = fadd float %193, %97, !dbg !79
  %196 = fadd float %194, %98, !dbg !79
  %197 = fadd float %193, %101, !dbg !80
  %198 = fadd float %194, %102, !dbg !80
  %199 = fadd float %193, %105, !dbg !81
  %200 = fadd float %194, %106, !dbg !81
  %201 = fadd float %193, %109, !dbg !82
  %202 = fadd float %194, %110, !dbg !82
  %203 = fadd float %191, %113, !dbg !83
  %204 = fadd float %192, %114, !dbg !83
  %205 = fadd float %203, %97, !dbg !84
  %206 = fadd float %204, %98, !dbg !84
  %207 = fadd float %203, %101, !dbg !85
  %208 = fadd float %204, %102, !dbg !85
  %209 = fadd float %203, %105, !dbg !86
  %210 = fadd float %204, %106, !dbg !86
  %211 = fadd float %203, %109, !dbg !87
  %212 = fadd float %204, %110, !dbg !87
  %213 = fadd float %191, %125, !dbg !88
  %214 = fadd float %192, %126, !dbg !88
  %215 = fadd float %213, %97, !dbg !89
  %216 = fadd float %214, %98, !dbg !89
  %217 = fadd float %213, %101, !dbg !90
  %218 = fadd float %214, %102, !dbg !90
  %219 = fadd float %213, %105, !dbg !91
  %220 = fadd float %214, %106, !dbg !91
  %221 = fadd float %213, %109, !dbg !92
  %222 = fadd float %214, %110, !dbg !92
  %223 = fadd float %191, %137, !dbg !93
  %224 = fadd float %192, %138, !dbg !93
  %225 = fadd float %223, %97, !dbg !94
  %226 = fadd float %224, %98, !dbg !94
  %227 = fadd float %223, %101, !dbg !95
  %228 = fadd float %224, %102, !dbg !95
  %229 = fadd float %223, %105, !dbg !96
  %230 = fadd float %224, %106, !dbg !96
  %231 = fadd float %223, %109, !dbg !97
  %232 = fadd float %224, %110, !dbg !97
  %233 = shl i32 %59, 4, !dbg !98
  %234 = shl i32 %60, 4, !dbg !98
  %235 = sext i32 %233 to i64, !dbg !99
  %236 = getelementptr float, ptr addrspace(1) %1, i64 %235, !dbg !99
  %237 = sext i32 %234 to i64, !dbg !99
  %238 = getelementptr float, ptr addrspace(1) %1, i64 %237, !dbg !99
  %239 = zext nneg i32 %55 to i64, !dbg !100
  %240 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %239, !dbg !100
  %241 = bitcast float %99 to i32, !dbg !100
  %242 = bitcast float %100 to i32, !dbg !100
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %241, i32 %242, i1 true) #2, !dbg !100
  tail call void @llvm.nvvm.barrier0(), !dbg !100
  %243 = zext nneg i32 %56 to i64, !dbg !100
  %244 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %243, !dbg !100
  %245 = load i32, ptr addrspace(3) %244, align 4, !dbg !100
  %246 = zext nneg i32 %57 to i64, !dbg !100
  %247 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %246, !dbg !100
  %248 = load i32, ptr addrspace(3) %247, align 4, !dbg !100
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %245, ptr addrspace(1) %236, i1 %62) #2, !dbg !100
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %248, ptr addrspace(1) %238, i1 %63) #2, !dbg !100
  %249 = getelementptr float, ptr addrspace(1) %2, i64 %235, !dbg !101
  %250 = getelementptr float, ptr addrspace(1) %2, i64 %237, !dbg !101
  tail call void @llvm.nvvm.barrier0(), !dbg !102
  %251 = bitcast float %103 to i32, !dbg !102
  %252 = bitcast float %104 to i32, !dbg !102
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %251, i32 %252, i1 true) #2, !dbg !102
  tail call void @llvm.nvvm.barrier0(), !dbg !102
  %253 = load i32, ptr addrspace(3) %244, align 4, !dbg !102
  %254 = load i32, ptr addrspace(3) %247, align 4, !dbg !102
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %253, ptr addrspace(1) %249, i1 %62) #2, !dbg !102
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %254, ptr addrspace(1) %250, i1 %63) #2, !dbg !102
  %255 = getelementptr float, ptr addrspace(1) %3, i64 %235, !dbg !103
  %256 = getelementptr float, ptr addrspace(1) %3, i64 %237, !dbg !103
  tail call void @llvm.nvvm.barrier0(), !dbg !104
  %257 = bitcast float %107 to i32, !dbg !104
  %258 = bitcast float %108 to i32, !dbg !104
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %257, i32 %258, i1 true) #2, !dbg !104
  tail call void @llvm.nvvm.barrier0(), !dbg !104
  %259 = load i32, ptr addrspace(3) %244, align 4, !dbg !104
  %260 = load i32, ptr addrspace(3) %247, align 4, !dbg !104
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %259, ptr addrspace(1) %255, i1 %62) #2, !dbg !104
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %260, ptr addrspace(1) %256, i1 %63) #2, !dbg !104
  %261 = getelementptr float, ptr addrspace(1) %4, i64 %235, !dbg !105
  %262 = getelementptr float, ptr addrspace(1) %4, i64 %237, !dbg !105
  tail call void @llvm.nvvm.barrier0(), !dbg !106
  %263 = bitcast float %111 to i32, !dbg !106
  %264 = bitcast float %112 to i32, !dbg !106
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %263, i32 %264, i1 true) #2, !dbg !106
  tail call void @llvm.nvvm.barrier0(), !dbg !106
  %265 = load i32, ptr addrspace(3) %244, align 4, !dbg !106
  %266 = load i32, ptr addrspace(3) %247, align 4, !dbg !106
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %265, ptr addrspace(1) %261, i1 %62) #2, !dbg !106
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %266, ptr addrspace(1) %262, i1 %63) #2, !dbg !106
  %267 = getelementptr float, ptr addrspace(1) %5, i64 %235, !dbg !107
  %268 = getelementptr float, ptr addrspace(1) %5, i64 %237, !dbg !107
  tail call void @llvm.nvvm.barrier0(), !dbg !108
  %269 = bitcast float %117 to i32, !dbg !108
  %270 = bitcast float %118 to i32, !dbg !108
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %269, i32 %270, i1 true) #2, !dbg !108
  tail call void @llvm.nvvm.barrier0(), !dbg !108
  %271 = load i32, ptr addrspace(3) %244, align 4, !dbg !108
  %272 = load i32, ptr addrspace(3) %247, align 4, !dbg !108
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %271, ptr addrspace(1) %267, i1 %62) #2, !dbg !108
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %272, ptr addrspace(1) %268, i1 %63) #2, !dbg !108
  %273 = getelementptr float, ptr addrspace(1) %6, i64 %235, !dbg !109
  %274 = getelementptr float, ptr addrspace(1) %6, i64 %237, !dbg !109
  tail call void @llvm.nvvm.barrier0(), !dbg !110
  %275 = bitcast float %119 to i32, !dbg !110
  %276 = bitcast float %120 to i32, !dbg !110
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %275, i32 %276, i1 true) #2, !dbg !110
  tail call void @llvm.nvvm.barrier0(), !dbg !110
  %277 = load i32, ptr addrspace(3) %244, align 4, !dbg !110
  %278 = load i32, ptr addrspace(3) %247, align 4, !dbg !110
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %277, ptr addrspace(1) %273, i1 %62) #2, !dbg !110
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %278, ptr addrspace(1) %274, i1 %63) #2, !dbg !110
  %279 = getelementptr float, ptr addrspace(1) %7, i64 %235, !dbg !111
  %280 = getelementptr float, ptr addrspace(1) %7, i64 %237, !dbg !111
  tail call void @llvm.nvvm.barrier0(), !dbg !112
  %281 = bitcast float %121 to i32, !dbg !112
  %282 = bitcast float %122 to i32, !dbg !112
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %281, i32 %282, i1 true) #2, !dbg !112
  tail call void @llvm.nvvm.barrier0(), !dbg !112
  %283 = load i32, ptr addrspace(3) %244, align 4, !dbg !112
  %284 = load i32, ptr addrspace(3) %247, align 4, !dbg !112
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %283, ptr addrspace(1) %279, i1 %62) #2, !dbg !112
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %284, ptr addrspace(1) %280, i1 %63) #2, !dbg !112
  %285 = getelementptr float, ptr addrspace(1) %8, i64 %235, !dbg !113
  %286 = getelementptr float, ptr addrspace(1) %8, i64 %237, !dbg !113
  tail call void @llvm.nvvm.barrier0(), !dbg !114
  %287 = bitcast float %123 to i32, !dbg !114
  %288 = bitcast float %124 to i32, !dbg !114
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %287, i32 %288, i1 true) #2, !dbg !114
  tail call void @llvm.nvvm.barrier0(), !dbg !114
  %289 = load i32, ptr addrspace(3) %244, align 4, !dbg !114
  %290 = load i32, ptr addrspace(3) %247, align 4, !dbg !114
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %289, ptr addrspace(1) %285, i1 %62) #2, !dbg !114
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %290, ptr addrspace(1) %286, i1 %63) #2, !dbg !114
  %291 = getelementptr float, ptr addrspace(1) %9, i64 %235, !dbg !115
  %292 = getelementptr float, ptr addrspace(1) %9, i64 %237, !dbg !115
  tail call void @llvm.nvvm.barrier0(), !dbg !116
  %293 = bitcast float %129 to i32, !dbg !116
  %294 = bitcast float %130 to i32, !dbg !116
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %293, i32 %294, i1 true) #2, !dbg !116
  tail call void @llvm.nvvm.barrier0(), !dbg !116
  %295 = load i32, ptr addrspace(3) %244, align 4, !dbg !116
  %296 = load i32, ptr addrspace(3) %247, align 4, !dbg !116
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %295, ptr addrspace(1) %291, i1 %62) #2, !dbg !116
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %296, ptr addrspace(1) %292, i1 %63) #2, !dbg !116
  %297 = getelementptr float, ptr addrspace(1) %10, i64 %235, !dbg !117
  %298 = getelementptr float, ptr addrspace(1) %10, i64 %237, !dbg !117
  tail call void @llvm.nvvm.barrier0(), !dbg !118
  %299 = bitcast float %131 to i32, !dbg !118
  %300 = bitcast float %132 to i32, !dbg !118
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %299, i32 %300, i1 true) #2, !dbg !118
  tail call void @llvm.nvvm.barrier0(), !dbg !118
  %301 = load i32, ptr addrspace(3) %244, align 4, !dbg !118
  %302 = load i32, ptr addrspace(3) %247, align 4, !dbg !118
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %301, ptr addrspace(1) %297, i1 %62) #2, !dbg !118
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %302, ptr addrspace(1) %298, i1 %63) #2, !dbg !118
  %303 = getelementptr float, ptr addrspace(1) %11, i64 %235, !dbg !119
  %304 = getelementptr float, ptr addrspace(1) %11, i64 %237, !dbg !119
  tail call void @llvm.nvvm.barrier0(), !dbg !120
  %305 = bitcast float %133 to i32, !dbg !120
  %306 = bitcast float %134 to i32, !dbg !120
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %305, i32 %306, i1 true) #2, !dbg !120
  tail call void @llvm.nvvm.barrier0(), !dbg !120
  %307 = load i32, ptr addrspace(3) %244, align 4, !dbg !120
  %308 = load i32, ptr addrspace(3) %247, align 4, !dbg !120
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %307, ptr addrspace(1) %303, i1 %62) #2, !dbg !120
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %308, ptr addrspace(1) %304, i1 %63) #2, !dbg !120
  %309 = getelementptr float, ptr addrspace(1) %12, i64 %235, !dbg !121
  %310 = getelementptr float, ptr addrspace(1) %12, i64 %237, !dbg !121
  tail call void @llvm.nvvm.barrier0(), !dbg !122
  %311 = bitcast float %135 to i32, !dbg !122
  %312 = bitcast float %136 to i32, !dbg !122
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %311, i32 %312, i1 true) #2, !dbg !122
  tail call void @llvm.nvvm.barrier0(), !dbg !122
  %313 = load i32, ptr addrspace(3) %244, align 4, !dbg !122
  %314 = load i32, ptr addrspace(3) %247, align 4, !dbg !122
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %313, ptr addrspace(1) %309, i1 %62) #2, !dbg !122
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %314, ptr addrspace(1) %310, i1 %63) #2, !dbg !122
  %315 = getelementptr float, ptr addrspace(1) %13, i64 %235, !dbg !123
  %316 = getelementptr float, ptr addrspace(1) %13, i64 %237, !dbg !123
  tail call void @llvm.nvvm.barrier0(), !dbg !124
  %317 = bitcast float %141 to i32, !dbg !124
  %318 = bitcast float %142 to i32, !dbg !124
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %317, i32 %318, i1 true) #2, !dbg !124
  tail call void @llvm.nvvm.barrier0(), !dbg !124
  %319 = load i32, ptr addrspace(3) %244, align 4, !dbg !124
  %320 = load i32, ptr addrspace(3) %247, align 4, !dbg !124
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %319, ptr addrspace(1) %315, i1 %62) #2, !dbg !124
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %320, ptr addrspace(1) %316, i1 %63) #2, !dbg !124
  %321 = getelementptr float, ptr addrspace(1) %14, i64 %235, !dbg !125
  %322 = getelementptr float, ptr addrspace(1) %14, i64 %237, !dbg !125
  tail call void @llvm.nvvm.barrier0(), !dbg !126
  %323 = bitcast float %143 to i32, !dbg !126
  %324 = bitcast float %144 to i32, !dbg !126
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %323, i32 %324, i1 true) #2, !dbg !126
  tail call void @llvm.nvvm.barrier0(), !dbg !126
  %325 = load i32, ptr addrspace(3) %244, align 4, !dbg !126
  %326 = load i32, ptr addrspace(3) %247, align 4, !dbg !126
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %325, ptr addrspace(1) %321, i1 %62) #2, !dbg !126
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %326, ptr addrspace(1) %322, i1 %63) #2, !dbg !126
  %327 = getelementptr float, ptr addrspace(1) %15, i64 %235, !dbg !127
  %328 = getelementptr float, ptr addrspace(1) %15, i64 %237, !dbg !127
  tail call void @llvm.nvvm.barrier0(), !dbg !128
  %329 = bitcast float %145 to i32, !dbg !128
  %330 = bitcast float %146 to i32, !dbg !128
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %329, i32 %330, i1 true) #2, !dbg !128
  tail call void @llvm.nvvm.barrier0(), !dbg !128
  %331 = load i32, ptr addrspace(3) %244, align 4, !dbg !128
  %332 = load i32, ptr addrspace(3) %247, align 4, !dbg !128
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %331, ptr addrspace(1) %327, i1 %62) #2, !dbg !128
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %332, ptr addrspace(1) %328, i1 %63) #2, !dbg !128
  %333 = getelementptr float, ptr addrspace(1) %16, i64 %235, !dbg !129
  %334 = getelementptr float, ptr addrspace(1) %16, i64 %237, !dbg !129
  tail call void @llvm.nvvm.barrier0(), !dbg !130
  %335 = bitcast float %147 to i32, !dbg !130
  %336 = bitcast float %148 to i32, !dbg !130
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %335, i32 %336, i1 true) #2, !dbg !130
  tail call void @llvm.nvvm.barrier0(), !dbg !130
  %337 = load i32, ptr addrspace(3) %244, align 4, !dbg !130
  %338 = load i32, ptr addrspace(3) %247, align 4, !dbg !130
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %337, ptr addrspace(1) %333, i1 %62) #2, !dbg !130
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %338, ptr addrspace(1) %334, i1 %63) #2, !dbg !130
  %339 = getelementptr float, ptr addrspace(1) %17, i64 %235, !dbg !131
  %340 = getelementptr float, ptr addrspace(1) %17, i64 %237, !dbg !131
  tail call void @llvm.nvvm.barrier0(), !dbg !132
  %341 = bitcast float %153 to i32, !dbg !132
  %342 = bitcast float %154 to i32, !dbg !132
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %341, i32 %342, i1 true) #2, !dbg !132
  tail call void @llvm.nvvm.barrier0(), !dbg !132
  %343 = load i32, ptr addrspace(3) %244, align 4, !dbg !132
  %344 = load i32, ptr addrspace(3) %247, align 4, !dbg !132
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %343, ptr addrspace(1) %339, i1 %62) #2, !dbg !132
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %344, ptr addrspace(1) %340, i1 %63) #2, !dbg !132
  %345 = getelementptr float, ptr addrspace(1) %18, i64 %235, !dbg !133
  %346 = getelementptr float, ptr addrspace(1) %18, i64 %237, !dbg !133
  tail call void @llvm.nvvm.barrier0(), !dbg !134
  %347 = bitcast float %155 to i32, !dbg !134
  %348 = bitcast float %156 to i32, !dbg !134
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %347, i32 %348, i1 true) #2, !dbg !134
  tail call void @llvm.nvvm.barrier0(), !dbg !134
  %349 = load i32, ptr addrspace(3) %244, align 4, !dbg !134
  %350 = load i32, ptr addrspace(3) %247, align 4, !dbg !134
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %349, ptr addrspace(1) %345, i1 %62) #2, !dbg !134
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %350, ptr addrspace(1) %346, i1 %63) #2, !dbg !134
  %351 = getelementptr float, ptr addrspace(1) %19, i64 %235, !dbg !135
  %352 = getelementptr float, ptr addrspace(1) %19, i64 %237, !dbg !135
  tail call void @llvm.nvvm.barrier0(), !dbg !136
  %353 = bitcast float %157 to i32, !dbg !136
  %354 = bitcast float %158 to i32, !dbg !136
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %353, i32 %354, i1 true) #2, !dbg !136
  tail call void @llvm.nvvm.barrier0(), !dbg !136
  %355 = load i32, ptr addrspace(3) %244, align 4, !dbg !136
  %356 = load i32, ptr addrspace(3) %247, align 4, !dbg !136
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %355, ptr addrspace(1) %351, i1 %62) #2, !dbg !136
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %356, ptr addrspace(1) %352, i1 %63) #2, !dbg !136
  %357 = getelementptr float, ptr addrspace(1) %20, i64 %235, !dbg !137
  %358 = getelementptr float, ptr addrspace(1) %20, i64 %237, !dbg !137
  tail call void @llvm.nvvm.barrier0(), !dbg !138
  %359 = bitcast float %159 to i32, !dbg !138
  %360 = bitcast float %160 to i32, !dbg !138
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %359, i32 %360, i1 true) #2, !dbg !138
  tail call void @llvm.nvvm.barrier0(), !dbg !138
  %361 = load i32, ptr addrspace(3) %244, align 4, !dbg !138
  %362 = load i32, ptr addrspace(3) %247, align 4, !dbg !138
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %361, ptr addrspace(1) %357, i1 %62) #2, !dbg !138
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %362, ptr addrspace(1) %358, i1 %63) #2, !dbg !138
  %363 = getelementptr float, ptr addrspace(1) %21, i64 %235, !dbg !139
  %364 = getelementptr float, ptr addrspace(1) %21, i64 %237, !dbg !139
  tail call void @llvm.nvvm.barrier0(), !dbg !140
  %365 = bitcast float %163 to i32, !dbg !140
  %366 = bitcast float %164 to i32, !dbg !140
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %365, i32 %366, i1 true) #2, !dbg !140
  tail call void @llvm.nvvm.barrier0(), !dbg !140
  %367 = load i32, ptr addrspace(3) %244, align 4, !dbg !140
  %368 = load i32, ptr addrspace(3) %247, align 4, !dbg !140
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %367, ptr addrspace(1) %363, i1 %62) #2, !dbg !140
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %368, ptr addrspace(1) %364, i1 %63) #2, !dbg !140
  %369 = getelementptr float, ptr addrspace(1) %22, i64 %235, !dbg !141
  %370 = getelementptr float, ptr addrspace(1) %22, i64 %237, !dbg !141
  tail call void @llvm.nvvm.barrier0(), !dbg !142
  %371 = bitcast float %165 to i32, !dbg !142
  %372 = bitcast float %166 to i32, !dbg !142
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %371, i32 %372, i1 true) #2, !dbg !142
  tail call void @llvm.nvvm.barrier0(), !dbg !142
  %373 = load i32, ptr addrspace(3) %244, align 4, !dbg !142
  %374 = load i32, ptr addrspace(3) %247, align 4, !dbg !142
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %373, ptr addrspace(1) %369, i1 %62) #2, !dbg !142
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %374, ptr addrspace(1) %370, i1 %63) #2, !dbg !142
  %375 = getelementptr float, ptr addrspace(1) %23, i64 %235, !dbg !143
  %376 = getelementptr float, ptr addrspace(1) %23, i64 %237, !dbg !143
  tail call void @llvm.nvvm.barrier0(), !dbg !144
  %377 = bitcast float %167 to i32, !dbg !144
  %378 = bitcast float %168 to i32, !dbg !144
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %377, i32 %378, i1 true) #2, !dbg !144
  tail call void @llvm.nvvm.barrier0(), !dbg !144
  %379 = load i32, ptr addrspace(3) %244, align 4, !dbg !144
  %380 = load i32, ptr addrspace(3) %247, align 4, !dbg !144
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %379, ptr addrspace(1) %375, i1 %62) #2, !dbg !144
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %380, ptr addrspace(1) %376, i1 %63) #2, !dbg !144
  %381 = getelementptr float, ptr addrspace(1) %24, i64 %235, !dbg !145
  %382 = getelementptr float, ptr addrspace(1) %24, i64 %237, !dbg !145
  tail call void @llvm.nvvm.barrier0(), !dbg !146
  %383 = bitcast float %169 to i32, !dbg !146
  %384 = bitcast float %170 to i32, !dbg !146
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %383, i32 %384, i1 true) #2, !dbg !146
  tail call void @llvm.nvvm.barrier0(), !dbg !146
  %385 = load i32, ptr addrspace(3) %244, align 4, !dbg !146
  %386 = load i32, ptr addrspace(3) %247, align 4, !dbg !146
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %385, ptr addrspace(1) %381, i1 %62) #2, !dbg !146
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %386, ptr addrspace(1) %382, i1 %63) #2, !dbg !146
  %387 = getelementptr float, ptr addrspace(1) %25, i64 %235, !dbg !147
  %388 = getelementptr float, ptr addrspace(1) %25, i64 %237, !dbg !147
  tail call void @llvm.nvvm.barrier0(), !dbg !148
  %389 = bitcast float %173 to i32, !dbg !148
  %390 = bitcast float %174 to i32, !dbg !148
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %389, i32 %390, i1 true) #2, !dbg !148
  tail call void @llvm.nvvm.barrier0(), !dbg !148
  %391 = load i32, ptr addrspace(3) %244, align 4, !dbg !148
  %392 = load i32, ptr addrspace(3) %247, align 4, !dbg !148
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %391, ptr addrspace(1) %387, i1 %62) #2, !dbg !148
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %392, ptr addrspace(1) %388, i1 %63) #2, !dbg !148
  %393 = getelementptr float, ptr addrspace(1) %26, i64 %235, !dbg !149
  %394 = getelementptr float, ptr addrspace(1) %26, i64 %237, !dbg !149
  tail call void @llvm.nvvm.barrier0(), !dbg !150
  %395 = bitcast float %175 to i32, !dbg !150
  %396 = bitcast float %176 to i32, !dbg !150
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %395, i32 %396, i1 true) #2, !dbg !150
  tail call void @llvm.nvvm.barrier0(), !dbg !150
  %397 = load i32, ptr addrspace(3) %244, align 4, !dbg !150
  %398 = load i32, ptr addrspace(3) %247, align 4, !dbg !150
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %397, ptr addrspace(1) %393, i1 %62) #2, !dbg !150
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %398, ptr addrspace(1) %394, i1 %63) #2, !dbg !150
  %399 = getelementptr float, ptr addrspace(1) %27, i64 %235, !dbg !151
  %400 = getelementptr float, ptr addrspace(1) %27, i64 %237, !dbg !151
  tail call void @llvm.nvvm.barrier0(), !dbg !152
  %401 = bitcast float %177 to i32, !dbg !152
  %402 = bitcast float %178 to i32, !dbg !152
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %401, i32 %402, i1 true) #2, !dbg !152
  tail call void @llvm.nvvm.barrier0(), !dbg !152
  %403 = load i32, ptr addrspace(3) %244, align 4, !dbg !152
  %404 = load i32, ptr addrspace(3) %247, align 4, !dbg !152
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %403, ptr addrspace(1) %399, i1 %62) #2, !dbg !152
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %404, ptr addrspace(1) %400, i1 %63) #2, !dbg !152
  %405 = getelementptr float, ptr addrspace(1) %28, i64 %235, !dbg !153
  %406 = getelementptr float, ptr addrspace(1) %28, i64 %237, !dbg !153
  tail call void @llvm.nvvm.barrier0(), !dbg !154
  %407 = bitcast float %179 to i32, !dbg !154
  %408 = bitcast float %180 to i32, !dbg !154
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %407, i32 %408, i1 true) #2, !dbg !154
  tail call void @llvm.nvvm.barrier0(), !dbg !154
  %409 = load i32, ptr addrspace(3) %244, align 4, !dbg !154
  %410 = load i32, ptr addrspace(3) %247, align 4, !dbg !154
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %409, ptr addrspace(1) %405, i1 %62) #2, !dbg !154
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %410, ptr addrspace(1) %406, i1 %63) #2, !dbg !154
  %411 = getelementptr float, ptr addrspace(1) %29, i64 %235, !dbg !155
  %412 = getelementptr float, ptr addrspace(1) %29, i64 %237, !dbg !155
  tail call void @llvm.nvvm.barrier0(), !dbg !156
  %413 = bitcast float %183 to i32, !dbg !156
  %414 = bitcast float %184 to i32, !dbg !156
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %413, i32 %414, i1 true) #2, !dbg !156
  tail call void @llvm.nvvm.barrier0(), !dbg !156
  %415 = load i32, ptr addrspace(3) %244, align 4, !dbg !156
  %416 = load i32, ptr addrspace(3) %247, align 4, !dbg !156
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %415, ptr addrspace(1) %411, i1 %62) #2, !dbg !156
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %416, ptr addrspace(1) %412, i1 %63) #2, !dbg !156
  %417 = getelementptr float, ptr addrspace(1) %30, i64 %235, !dbg !157
  %418 = getelementptr float, ptr addrspace(1) %30, i64 %237, !dbg !157
  tail call void @llvm.nvvm.barrier0(), !dbg !158
  %419 = bitcast float %185 to i32, !dbg !158
  %420 = bitcast float %186 to i32, !dbg !158
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %419, i32 %420, i1 true) #2, !dbg !158
  tail call void @llvm.nvvm.barrier0(), !dbg !158
  %421 = load i32, ptr addrspace(3) %244, align 4, !dbg !158
  %422 = load i32, ptr addrspace(3) %247, align 4, !dbg !158
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %421, ptr addrspace(1) %417, i1 %62) #2, !dbg !158
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %422, ptr addrspace(1) %418, i1 %63) #2, !dbg !158
  %423 = getelementptr float, ptr addrspace(1) %31, i64 %235, !dbg !159
  %424 = getelementptr float, ptr addrspace(1) %31, i64 %237, !dbg !159
  tail call void @llvm.nvvm.barrier0(), !dbg !160
  %425 = bitcast float %187 to i32, !dbg !160
  %426 = bitcast float %188 to i32, !dbg !160
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %425, i32 %426, i1 true) #2, !dbg !160
  tail call void @llvm.nvvm.barrier0(), !dbg !160
  %427 = load i32, ptr addrspace(3) %244, align 4, !dbg !160
  %428 = load i32, ptr addrspace(3) %247, align 4, !dbg !160
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %427, ptr addrspace(1) %423, i1 %62) #2, !dbg !160
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %428, ptr addrspace(1) %424, i1 %63) #2, !dbg !160
  %429 = getelementptr float, ptr addrspace(1) %32, i64 %235, !dbg !161
  %430 = getelementptr float, ptr addrspace(1) %32, i64 %237, !dbg !161
  tail call void @llvm.nvvm.barrier0(), !dbg !162
  %431 = bitcast float %189 to i32, !dbg !162
  %432 = bitcast float %190 to i32, !dbg !162
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %431, i32 %432, i1 true) #2, !dbg !162
  tail call void @llvm.nvvm.barrier0(), !dbg !162
  %433 = load i32, ptr addrspace(3) %244, align 4, !dbg !162
  %434 = load i32, ptr addrspace(3) %247, align 4, !dbg !162
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %433, ptr addrspace(1) %429, i1 %62) #2, !dbg !162
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %434, ptr addrspace(1) %430, i1 %63) #2, !dbg !162
  %435 = getelementptr float, ptr addrspace(1) %33, i64 %235, !dbg !163
  %436 = getelementptr float, ptr addrspace(1) %33, i64 %237, !dbg !163
  tail call void @llvm.nvvm.barrier0(), !dbg !164
  %437 = bitcast float %195 to i32, !dbg !164
  %438 = bitcast float %196 to i32, !dbg !164
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %437, i32 %438, i1 true) #2, !dbg !164
  tail call void @llvm.nvvm.barrier0(), !dbg !164
  %439 = load i32, ptr addrspace(3) %244, align 4, !dbg !164
  %440 = load i32, ptr addrspace(3) %247, align 4, !dbg !164
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %439, ptr addrspace(1) %435, i1 %62) #2, !dbg !164
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %440, ptr addrspace(1) %436, i1 %63) #2, !dbg !164
  %441 = getelementptr float, ptr addrspace(1) %34, i64 %235, !dbg !165
  %442 = getelementptr float, ptr addrspace(1) %34, i64 %237, !dbg !165
  tail call void @llvm.nvvm.barrier0(), !dbg !166
  %443 = bitcast float %197 to i32, !dbg !166
  %444 = bitcast float %198 to i32, !dbg !166
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %443, i32 %444, i1 true) #2, !dbg !166
  tail call void @llvm.nvvm.barrier0(), !dbg !166
  %445 = load i32, ptr addrspace(3) %244, align 4, !dbg !166
  %446 = load i32, ptr addrspace(3) %247, align 4, !dbg !166
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %445, ptr addrspace(1) %441, i1 %62) #2, !dbg !166
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %446, ptr addrspace(1) %442, i1 %63) #2, !dbg !166
  %447 = getelementptr float, ptr addrspace(1) %35, i64 %235, !dbg !167
  %448 = getelementptr float, ptr addrspace(1) %35, i64 %237, !dbg !167
  tail call void @llvm.nvvm.barrier0(), !dbg !168
  %449 = bitcast float %199 to i32, !dbg !168
  %450 = bitcast float %200 to i32, !dbg !168
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %449, i32 %450, i1 true) #2, !dbg !168
  tail call void @llvm.nvvm.barrier0(), !dbg !168
  %451 = load i32, ptr addrspace(3) %244, align 4, !dbg !168
  %452 = load i32, ptr addrspace(3) %247, align 4, !dbg !168
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %451, ptr addrspace(1) %447, i1 %62) #2, !dbg !168
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %452, ptr addrspace(1) %448, i1 %63) #2, !dbg !168
  %453 = getelementptr float, ptr addrspace(1) %36, i64 %235, !dbg !169
  %454 = getelementptr float, ptr addrspace(1) %36, i64 %237, !dbg !169
  tail call void @llvm.nvvm.barrier0(), !dbg !170
  %455 = bitcast float %201 to i32, !dbg !170
  %456 = bitcast float %202 to i32, !dbg !170
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %455, i32 %456, i1 true) #2, !dbg !170
  tail call void @llvm.nvvm.barrier0(), !dbg !170
  %457 = load i32, ptr addrspace(3) %244, align 4, !dbg !170
  %458 = load i32, ptr addrspace(3) %247, align 4, !dbg !170
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %457, ptr addrspace(1) %453, i1 %62) #2, !dbg !170
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %458, ptr addrspace(1) %454, i1 %63) #2, !dbg !170
  %459 = getelementptr float, ptr addrspace(1) %37, i64 %235, !dbg !171
  %460 = getelementptr float, ptr addrspace(1) %37, i64 %237, !dbg !171
  tail call void @llvm.nvvm.barrier0(), !dbg !172
  %461 = bitcast float %205 to i32, !dbg !172
  %462 = bitcast float %206 to i32, !dbg !172
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %461, i32 %462, i1 true) #2, !dbg !172
  tail call void @llvm.nvvm.barrier0(), !dbg !172
  %463 = load i32, ptr addrspace(3) %244, align 4, !dbg !172
  %464 = load i32, ptr addrspace(3) %247, align 4, !dbg !172
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %463, ptr addrspace(1) %459, i1 %62) #2, !dbg !172
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %464, ptr addrspace(1) %460, i1 %63) #2, !dbg !172
  %465 = getelementptr float, ptr addrspace(1) %38, i64 %235, !dbg !173
  %466 = getelementptr float, ptr addrspace(1) %38, i64 %237, !dbg !173
  tail call void @llvm.nvvm.barrier0(), !dbg !174
  %467 = bitcast float %207 to i32, !dbg !174
  %468 = bitcast float %208 to i32, !dbg !174
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %467, i32 %468, i1 true) #2, !dbg !174
  tail call void @llvm.nvvm.barrier0(), !dbg !174
  %469 = load i32, ptr addrspace(3) %244, align 4, !dbg !174
  %470 = load i32, ptr addrspace(3) %247, align 4, !dbg !174
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %469, ptr addrspace(1) %465, i1 %62) #2, !dbg !174
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %470, ptr addrspace(1) %466, i1 %63) #2, !dbg !174
  %471 = getelementptr float, ptr addrspace(1) %39, i64 %235, !dbg !175
  %472 = getelementptr float, ptr addrspace(1) %39, i64 %237, !dbg !175
  tail call void @llvm.nvvm.barrier0(), !dbg !176
  %473 = bitcast float %209 to i32, !dbg !176
  %474 = bitcast float %210 to i32, !dbg !176
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %473, i32 %474, i1 true) #2, !dbg !176
  tail call void @llvm.nvvm.barrier0(), !dbg !176
  %475 = load i32, ptr addrspace(3) %244, align 4, !dbg !176
  %476 = load i32, ptr addrspace(3) %247, align 4, !dbg !176
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %475, ptr addrspace(1) %471, i1 %62) #2, !dbg !176
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %476, ptr addrspace(1) %472, i1 %63) #2, !dbg !176
  %477 = getelementptr float, ptr addrspace(1) %40, i64 %235, !dbg !177
  %478 = getelementptr float, ptr addrspace(1) %40, i64 %237, !dbg !177
  tail call void @llvm.nvvm.barrier0(), !dbg !178
  %479 = bitcast float %211 to i32, !dbg !178
  %480 = bitcast float %212 to i32, !dbg !178
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %479, i32 %480, i1 true) #2, !dbg !178
  tail call void @llvm.nvvm.barrier0(), !dbg !178
  %481 = load i32, ptr addrspace(3) %244, align 4, !dbg !178
  %482 = load i32, ptr addrspace(3) %247, align 4, !dbg !178
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %481, ptr addrspace(1) %477, i1 %62) #2, !dbg !178
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %482, ptr addrspace(1) %478, i1 %63) #2, !dbg !178
  %483 = getelementptr float, ptr addrspace(1) %41, i64 %235, !dbg !179
  %484 = getelementptr float, ptr addrspace(1) %41, i64 %237, !dbg !179
  tail call void @llvm.nvvm.barrier0(), !dbg !180
  %485 = bitcast float %215 to i32, !dbg !180
  %486 = bitcast float %216 to i32, !dbg !180
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %485, i32 %486, i1 true) #2, !dbg !180
  tail call void @llvm.nvvm.barrier0(), !dbg !180
  %487 = load i32, ptr addrspace(3) %244, align 4, !dbg !180
  %488 = load i32, ptr addrspace(3) %247, align 4, !dbg !180
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %487, ptr addrspace(1) %483, i1 %62) #2, !dbg !180
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %488, ptr addrspace(1) %484, i1 %63) #2, !dbg !180
  %489 = getelementptr float, ptr addrspace(1) %42, i64 %235, !dbg !181
  %490 = getelementptr float, ptr addrspace(1) %42, i64 %237, !dbg !181
  tail call void @llvm.nvvm.barrier0(), !dbg !182
  %491 = bitcast float %217 to i32, !dbg !182
  %492 = bitcast float %218 to i32, !dbg !182
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %491, i32 %492, i1 true) #2, !dbg !182
  tail call void @llvm.nvvm.barrier0(), !dbg !182
  %493 = load i32, ptr addrspace(3) %244, align 4, !dbg !182
  %494 = load i32, ptr addrspace(3) %247, align 4, !dbg !182
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %493, ptr addrspace(1) %489, i1 %62) #2, !dbg !182
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %494, ptr addrspace(1) %490, i1 %63) #2, !dbg !182
  %495 = getelementptr float, ptr addrspace(1) %43, i64 %235, !dbg !183
  %496 = getelementptr float, ptr addrspace(1) %43, i64 %237, !dbg !183
  tail call void @llvm.nvvm.barrier0(), !dbg !184
  %497 = bitcast float %219 to i32, !dbg !184
  %498 = bitcast float %220 to i32, !dbg !184
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %497, i32 %498, i1 true) #2, !dbg !184
  tail call void @llvm.nvvm.barrier0(), !dbg !184
  %499 = load i32, ptr addrspace(3) %244, align 4, !dbg !184
  %500 = load i32, ptr addrspace(3) %247, align 4, !dbg !184
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %499, ptr addrspace(1) %495, i1 %62) #2, !dbg !184
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %500, ptr addrspace(1) %496, i1 %63) #2, !dbg !184
  %501 = getelementptr float, ptr addrspace(1) %44, i64 %235, !dbg !185
  %502 = getelementptr float, ptr addrspace(1) %44, i64 %237, !dbg !185
  tail call void @llvm.nvvm.barrier0(), !dbg !186
  %503 = bitcast float %221 to i32, !dbg !186
  %504 = bitcast float %222 to i32, !dbg !186
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %503, i32 %504, i1 true) #2, !dbg !186
  tail call void @llvm.nvvm.barrier0(), !dbg !186
  %505 = load i32, ptr addrspace(3) %244, align 4, !dbg !186
  %506 = load i32, ptr addrspace(3) %247, align 4, !dbg !186
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %505, ptr addrspace(1) %501, i1 %62) #2, !dbg !186
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %506, ptr addrspace(1) %502, i1 %63) #2, !dbg !186
  %507 = getelementptr float, ptr addrspace(1) %45, i64 %235, !dbg !187
  %508 = getelementptr float, ptr addrspace(1) %45, i64 %237, !dbg !187
  tail call void @llvm.nvvm.barrier0(), !dbg !188
  %509 = bitcast float %225 to i32, !dbg !188
  %510 = bitcast float %226 to i32, !dbg !188
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %509, i32 %510, i1 true) #2, !dbg !188
  tail call void @llvm.nvvm.barrier0(), !dbg !188
  %511 = load i32, ptr addrspace(3) %244, align 4, !dbg !188
  %512 = load i32, ptr addrspace(3) %247, align 4, !dbg !188
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %511, ptr addrspace(1) %507, i1 %62) #2, !dbg !188
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %512, ptr addrspace(1) %508, i1 %63) #2, !dbg !188
  %513 = getelementptr float, ptr addrspace(1) %46, i64 %235, !dbg !189
  %514 = getelementptr float, ptr addrspace(1) %46, i64 %237, !dbg !189
  tail call void @llvm.nvvm.barrier0(), !dbg !190
  %515 = bitcast float %227 to i32, !dbg !190
  %516 = bitcast float %228 to i32, !dbg !190
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %515, i32 %516, i1 true) #2, !dbg !190
  tail call void @llvm.nvvm.barrier0(), !dbg !190
  %517 = load i32, ptr addrspace(3) %244, align 4, !dbg !190
  %518 = load i32, ptr addrspace(3) %247, align 4, !dbg !190
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %517, ptr addrspace(1) %513, i1 %62) #2, !dbg !190
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %518, ptr addrspace(1) %514, i1 %63) #2, !dbg !190
  %519 = getelementptr float, ptr addrspace(1) %47, i64 %235, !dbg !191
  %520 = getelementptr float, ptr addrspace(1) %47, i64 %237, !dbg !191
  tail call void @llvm.nvvm.barrier0(), !dbg !192
  %521 = bitcast float %229 to i32, !dbg !192
  %522 = bitcast float %230 to i32, !dbg !192
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %521, i32 %522, i1 true) #2, !dbg !192
  tail call void @llvm.nvvm.barrier0(), !dbg !192
  %523 = load i32, ptr addrspace(3) %244, align 4, !dbg !192
  %524 = load i32, ptr addrspace(3) %247, align 4, !dbg !192
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %523, ptr addrspace(1) %519, i1 %62) #2, !dbg !192
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %524, ptr addrspace(1) %520, i1 %63) #2, !dbg !192
  %525 = getelementptr float, ptr addrspace(1) %48, i64 %235, !dbg !193
  %526 = getelementptr float, ptr addrspace(1) %48, i64 %237, !dbg !193
  tail call void @llvm.nvvm.barrier0(), !dbg !194
  %527 = bitcast float %231 to i32, !dbg !194
  %528 = bitcast float %232 to i32, !dbg !194
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %240, i32 %527, i32 %528, i1 true) #2, !dbg !194
  tail call void @llvm.nvvm.barrier0(), !dbg !194
  %529 = load i32, ptr addrspace(3) %244, align 4, !dbg !194
  %530 = load i32, ptr addrspace(3) %247, align 4, !dbg !194
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %529, ptr addrspace(1) %525, i1 %62) #2, !dbg !194
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %530, ptr addrspace(1) %526, i1 %63) #2, !dbg !194
  ret void, !dbg !195
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7aqbkfl7wcdeejqihzlytki6mvajrsnfle6btggat5vjuc7mf75.py", directory: "inductor_cache/7a")
!4 = !{ptr @triton_poi_fused_add_mul_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_0", linkageName: "triton_poi_fused_add_mul_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 38, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 43, scope: !7)
!21 = !DILocation(line: 28, column: 40, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 48, scope: !7)
!24 = !DILocation(line: 29, column: 40, scope: !7)
!25 = !DILocation(line: 29, column: 30, scope: !7)
!26 = !DILocation(line: 29, column: 48, scope: !7)
!27 = !DILocation(line: 31, column: 18, scope: !7)
!28 = !DILocation(line: 35, column: 18, scope: !7)
!29 = !DILocation(line: 36, column: 18, scope: !7)
!30 = !DILocation(line: 37, column: 19, scope: !7)
!31 = !DILocation(line: 38, column: 19, scope: !7)
!32 = !DILocation(line: 40, column: 19, scope: !7)
!33 = !DILocation(line: 41, column: 19, scope: !7)
!34 = !DILocation(line: 43, column: 19, scope: !7)
!35 = !DILocation(line: 44, column: 19, scope: !7)
!36 = !DILocation(line: 46, column: 19, scope: !7)
!37 = !DILocation(line: 47, column: 19, scope: !7)
!38 = !DILocation(line: 48, column: 19, scope: !7)
!39 = !DILocation(line: 49, column: 19, scope: !7)
!40 = !DILocation(line: 50, column: 20, scope: !7)
!41 = !DILocation(line: 51, column: 20, scope: !7)
!42 = !DILocation(line: 52, column: 20, scope: !7)
!43 = !DILocation(line: 53, column: 20, scope: !7)
!44 = !DILocation(line: 54, column: 19, scope: !7)
!45 = !DILocation(line: 55, column: 19, scope: !7)
!46 = !DILocation(line: 56, column: 20, scope: !7)
!47 = !DILocation(line: 57, column: 20, scope: !7)
!48 = !DILocation(line: 58, column: 20, scope: !7)
!49 = !DILocation(line: 59, column: 20, scope: !7)
!50 = !DILocation(line: 60, column: 19, scope: !7)
!51 = !DILocation(line: 61, column: 19, scope: !7)
!52 = !DILocation(line: 62, column: 20, scope: !7)
!53 = !DILocation(line: 63, column: 20, scope: !7)
!54 = !DILocation(line: 64, column: 20, scope: !7)
!55 = !DILocation(line: 65, column: 20, scope: !7)
!56 = !DILocation(line: 67, column: 19, scope: !7)
!57 = !DILocation(line: 69, column: 20, scope: !7)
!58 = !DILocation(line: 70, column: 20, scope: !7)
!59 = !DILocation(line: 71, column: 20, scope: !7)
!60 = !DILocation(line: 72, column: 20, scope: !7)
!61 = !DILocation(line: 73, column: 20, scope: !7)
!62 = !DILocation(line: 74, column: 20, scope: !7)
!63 = !DILocation(line: 75, column: 20, scope: !7)
!64 = !DILocation(line: 76, column: 20, scope: !7)
!65 = !DILocation(line: 77, column: 20, scope: !7)
!66 = !DILocation(line: 78, column: 20, scope: !7)
!67 = !DILocation(line: 79, column: 20, scope: !7)
!68 = !DILocation(line: 80, column: 20, scope: !7)
!69 = !DILocation(line: 81, column: 20, scope: !7)
!70 = !DILocation(line: 82, column: 20, scope: !7)
!71 = !DILocation(line: 83, column: 20, scope: !7)
!72 = !DILocation(line: 84, column: 20, scope: !7)
!73 = !DILocation(line: 85, column: 20, scope: !7)
!74 = !DILocation(line: 86, column: 20, scope: !7)
!75 = !DILocation(line: 87, column: 20, scope: !7)
!76 = !DILocation(line: 88, column: 20, scope: !7)
!77 = !DILocation(line: 89, column: 19, scope: !7)
!78 = !DILocation(line: 91, column: 20, scope: !7)
!79 = !DILocation(line: 92, column: 20, scope: !7)
!80 = !DILocation(line: 93, column: 20, scope: !7)
!81 = !DILocation(line: 94, column: 20, scope: !7)
!82 = !DILocation(line: 95, column: 20, scope: !7)
!83 = !DILocation(line: 96, column: 20, scope: !7)
!84 = !DILocation(line: 97, column: 20, scope: !7)
!85 = !DILocation(line: 98, column: 20, scope: !7)
!86 = !DILocation(line: 99, column: 20, scope: !7)
!87 = !DILocation(line: 100, column: 20, scope: !7)
!88 = !DILocation(line: 101, column: 20, scope: !7)
!89 = !DILocation(line: 102, column: 20, scope: !7)
!90 = !DILocation(line: 103, column: 20, scope: !7)
!91 = !DILocation(line: 104, column: 20, scope: !7)
!92 = !DILocation(line: 105, column: 20, scope: !7)
!93 = !DILocation(line: 106, column: 20, scope: !7)
!94 = !DILocation(line: 107, column: 20, scope: !7)
!95 = !DILocation(line: 108, column: 20, scope: !7)
!96 = !DILocation(line: 109, column: 20, scope: !7)
!97 = !DILocation(line: 110, column: 20, scope: !7)
!98 = !DILocation(line: 111, column: 28, scope: !7)
!99 = !DILocation(line: 111, column: 25, scope: !7)
!100 = !DILocation(line: 111, column: 40, scope: !7)
!101 = !DILocation(line: 112, column: 25, scope: !7)
!102 = !DILocation(line: 112, column: 40, scope: !7)
!103 = !DILocation(line: 113, column: 25, scope: !7)
!104 = !DILocation(line: 113, column: 40, scope: !7)
!105 = !DILocation(line: 114, column: 25, scope: !7)
!106 = !DILocation(line: 114, column: 40, scope: !7)
!107 = !DILocation(line: 115, column: 25, scope: !7)
!108 = !DILocation(line: 115, column: 40, scope: !7)
!109 = !DILocation(line: 116, column: 25, scope: !7)
!110 = !DILocation(line: 116, column: 40, scope: !7)
!111 = !DILocation(line: 117, column: 25, scope: !7)
!112 = !DILocation(line: 117, column: 40, scope: !7)
!113 = !DILocation(line: 118, column: 25, scope: !7)
!114 = !DILocation(line: 118, column: 40, scope: !7)
!115 = !DILocation(line: 119, column: 25, scope: !7)
!116 = !DILocation(line: 119, column: 40, scope: !7)
!117 = !DILocation(line: 120, column: 25, scope: !7)
!118 = !DILocation(line: 120, column: 40, scope: !7)
!119 = !DILocation(line: 121, column: 26, scope: !7)
!120 = !DILocation(line: 121, column: 41, scope: !7)
!121 = !DILocation(line: 122, column: 26, scope: !7)
!122 = !DILocation(line: 122, column: 41, scope: !7)
!123 = !DILocation(line: 123, column: 26, scope: !7)
!124 = !DILocation(line: 123, column: 41, scope: !7)
!125 = !DILocation(line: 124, column: 26, scope: !7)
!126 = !DILocation(line: 124, column: 41, scope: !7)
!127 = !DILocation(line: 125, column: 26, scope: !7)
!128 = !DILocation(line: 125, column: 41, scope: !7)
!129 = !DILocation(line: 126, column: 26, scope: !7)
!130 = !DILocation(line: 126, column: 41, scope: !7)
!131 = !DILocation(line: 127, column: 26, scope: !7)
!132 = !DILocation(line: 127, column: 41, scope: !7)
!133 = !DILocation(line: 128, column: 26, scope: !7)
!134 = !DILocation(line: 128, column: 41, scope: !7)
!135 = !DILocation(line: 129, column: 26, scope: !7)
!136 = !DILocation(line: 129, column: 41, scope: !7)
!137 = !DILocation(line: 130, column: 26, scope: !7)
!138 = !DILocation(line: 130, column: 41, scope: !7)
!139 = !DILocation(line: 131, column: 26, scope: !7)
!140 = !DILocation(line: 131, column: 41, scope: !7)
!141 = !DILocation(line: 132, column: 26, scope: !7)
!142 = !DILocation(line: 132, column: 41, scope: !7)
!143 = !DILocation(line: 133, column: 26, scope: !7)
!144 = !DILocation(line: 133, column: 41, scope: !7)
!145 = !DILocation(line: 134, column: 26, scope: !7)
!146 = !DILocation(line: 134, column: 41, scope: !7)
!147 = !DILocation(line: 135, column: 26, scope: !7)
!148 = !DILocation(line: 135, column: 41, scope: !7)
!149 = !DILocation(line: 136, column: 26, scope: !7)
!150 = !DILocation(line: 136, column: 41, scope: !7)
!151 = !DILocation(line: 137, column: 26, scope: !7)
!152 = !DILocation(line: 137, column: 41, scope: !7)
!153 = !DILocation(line: 138, column: 26, scope: !7)
!154 = !DILocation(line: 138, column: 41, scope: !7)
!155 = !DILocation(line: 139, column: 26, scope: !7)
!156 = !DILocation(line: 139, column: 41, scope: !7)
!157 = !DILocation(line: 140, column: 26, scope: !7)
!158 = !DILocation(line: 140, column: 41, scope: !7)
!159 = !DILocation(line: 141, column: 26, scope: !7)
!160 = !DILocation(line: 141, column: 41, scope: !7)
!161 = !DILocation(line: 142, column: 26, scope: !7)
!162 = !DILocation(line: 142, column: 41, scope: !7)
!163 = !DILocation(line: 143, column: 26, scope: !7)
!164 = !DILocation(line: 143, column: 41, scope: !7)
!165 = !DILocation(line: 144, column: 26, scope: !7)
!166 = !DILocation(line: 144, column: 41, scope: !7)
!167 = !DILocation(line: 145, column: 26, scope: !7)
!168 = !DILocation(line: 145, column: 41, scope: !7)
!169 = !DILocation(line: 146, column: 26, scope: !7)
!170 = !DILocation(line: 146, column: 41, scope: !7)
!171 = !DILocation(line: 147, column: 26, scope: !7)
!172 = !DILocation(line: 147, column: 41, scope: !7)
!173 = !DILocation(line: 148, column: 26, scope: !7)
!174 = !DILocation(line: 148, column: 41, scope: !7)
!175 = !DILocation(line: 149, column: 26, scope: !7)
!176 = !DILocation(line: 149, column: 41, scope: !7)
!177 = !DILocation(line: 150, column: 26, scope: !7)
!178 = !DILocation(line: 150, column: 41, scope: !7)
!179 = !DILocation(line: 151, column: 26, scope: !7)
!180 = !DILocation(line: 151, column: 41, scope: !7)
!181 = !DILocation(line: 152, column: 26, scope: !7)
!182 = !DILocation(line: 152, column: 41, scope: !7)
!183 = !DILocation(line: 153, column: 26, scope: !7)
!184 = !DILocation(line: 153, column: 41, scope: !7)
!185 = !DILocation(line: 154, column: 26, scope: !7)
!186 = !DILocation(line: 154, column: 41, scope: !7)
!187 = !DILocation(line: 155, column: 26, scope: !7)
!188 = !DILocation(line: 155, column: 41, scope: !7)
!189 = !DILocation(line: 156, column: 26, scope: !7)
!190 = !DILocation(line: 156, column: 41, scope: !7)
!191 = !DILocation(line: 157, column: 26, scope: !7)
!192 = !DILocation(line: 157, column: 41, scope: !7)
!193 = !DILocation(line: 158, column: 26, scope: !7)
!194 = !DILocation(line: 158, column: 41, scope: !7)
!195 = !DILocation(line: 158, column: 4, scope: !7)
