; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_convolution_max_pool2d_with_indices_relu_22(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 14, !dbg !12
  %11 = lshr i32 %8, 3, !dbg !12
  %12 = and i32 %11, 15, !dbg !12
  %13 = or disjoint i32 %7, %10, !dbg !13
  %14 = or disjoint i32 %7, %12, !dbg !13
  %15 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !14
  %16 = shl i32 %15, 4, !dbg !15
  %17 = or disjoint i32 %16, %12, !dbg !16
  %18 = or disjoint i32 %16, %10, !dbg !16
  %19 = icmp slt i32 %17, 16, !dbg !17
  %20 = icmp slt i32 %18, 16, !dbg !17
  %.frozen = freeze i32 %13, !dbg !18
  %21 = sdiv i32 %.frozen, 512, !dbg !18
  %22 = mul i32 %21, 512, !dbg !19
  %.decomposed = sub i32 %.frozen, %22, !dbg !19
  %23 = shl i32 %17, 9, !dbg !20
  %24 = add i32 %23, %.decomposed, !dbg !21
  %25 = shl i32 %21, 13, !dbg !22
  %26 = add i32 %24, %25, !dbg !23
  %27 = sext i32 %26 to i64, !dbg !24
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !24
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 %19) #2, !dbg !25
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !25
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !25
  %32 = bitcast i32 %30 to float, !dbg !25
  %33 = bitcast i32 %31 to float, !dbg !25
  %34 = sext i32 %.decomposed to i64, !dbg !26
  %35 = getelementptr float, ptr addrspace(1) %1, i64 %34, !dbg !26
  %36 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %35, i1 true) #2, !dbg !27
  %37 = extractvalue { i32, i32 } %36, 0, !dbg !27
  %38 = extractvalue { i32, i32 } %36, 1, !dbg !27
  %39 = bitcast i32 %37 to float, !dbg !27
  %40 = bitcast i32 %38 to float, !dbg !27
  %41 = fadd float %32, %39, !dbg !28
  %42 = fadd float %33, %40, !dbg !28
  %43 = shl i32 %14, 4, !dbg !29
  %44 = add i32 %18, %43, !dbg !30
  %45 = sext i32 %44 to i64, !dbg !31
  %46 = getelementptr float, ptr addrspace(1) %2, i64 %45, !dbg !31
  %47 = shl i32 %8, 5, !dbg !32
  %48 = and i32 %47, 224, !dbg !32
  %49 = or disjoint i32 %48, %12, !dbg !32
  %50 = and i32 %9, 254, !dbg !32
  %51 = lshr exact i32 %48, 2, !dbg !32
  %52 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %51, !dbg !32
  %53 = getelementptr float, ptr addrspace(3) %52, i32 %49, !dbg !32
  %54 = bitcast float %41 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %53, <1 x i32> %54, i1 true) #2, !dbg !32
  %55 = or disjoint i32 %49, 16, !dbg !32
  %56 = lshr i32 %55, 4, !dbg !32
  %57 = getelementptr float, ptr addrspace(3) @global_smem, i32 %56, !dbg !32
  %58 = getelementptr float, ptr addrspace(3) %57, i32 %55, !dbg !32
  %59 = bitcast float %42 to <1 x i32>, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %58, <1 x i32> %59, i1 true) #2, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %60 = lshr i32 %50, 4, !dbg !32
  %61 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %60, !dbg !32
  %62 = getelementptr inbounds float, ptr addrspace(3) %61, i32 %50, !dbg !32
  %63 = load i32, ptr addrspace(3) %62, align 4, !dbg !32
  %64 = or disjoint i32 %50, 1, !dbg !32
  %65 = getelementptr inbounds float, ptr addrspace(3) %61, i32 %64, !dbg !32
  %66 = load i32, ptr addrspace(3) %65, align 4, !dbg !32
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %63, i32 %66, ptr addrspace(1) %46, i1 %20) #2, !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4eykerhod4dkzaciduqx5vw6l2hjtx5wb25w22jjrc4nic5zdrm.py", directory: "inductor_cache/4e")
!4 = !{ptr @triton_poi_fused_convolution_max_pool2d_with_indices_relu_22, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_max_pool2d_with_indices_relu_22, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_max_pool2d_with_indices_relu_22", linkageName: "triton_poi_fused_convolution_max_pool2d_with_indices_relu_22", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 28, scope: !7)
!15 = !DILocation(line: 25, column: 33, scope: !7)
!16 = !DILocation(line: 26, column: 23, scope: !7)
!17 = !DILocation(line: 27, column: 21, scope: !7)
!18 = !DILocation(line: 30, column: 19, scope: !7)
!19 = !DILocation(line: 29, column: 19, scope: !7)
!20 = !DILocation(line: 32, column: 39, scope: !7)
!21 = !DILocation(line: 32, column: 35, scope: !7)
!22 = !DILocation(line: 32, column: 49, scope: !7)
!23 = !DILocation(line: 32, column: 44, scope: !7)
!24 = !DILocation(line: 32, column: 30, scope: !7)
!25 = !DILocation(line: 32, column: 54, scope: !7)
!26 = !DILocation(line: 33, column: 30, scope: !7)
!27 = !DILocation(line: 33, column: 35, scope: !7)
!28 = !DILocation(line: 34, column: 18, scope: !7)
!29 = !DILocation(line: 35, column: 33, scope: !7)
!30 = !DILocation(line: 35, column: 30, scope: !7)
!31 = !DILocation(line: 35, column: 25, scope: !7)
!32 = !DILocation(line: 35, column: 44, scope: !7)
!33 = !DILocation(line: 35, column: 4, scope: !7)
