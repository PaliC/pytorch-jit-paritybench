; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_constant_pad_nd_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = or disjoint i32 %11, 1, !dbg !13
  %13 = icmp slt i32 %11, 576, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %14 = sdiv i32 %.frozen, 6, !dbg !15
  %15 = mul i32 %14, 6, !dbg !16
  %.decomposed = sub i32 %.frozen, %15, !dbg !16
  %16 = sdiv i32 %11, 36, !dbg !17
  %17 = add nsw i32 %.decomposed, -1, !dbg !18
  %18 = insertelement <2 x i32> poison, i32 %14, i64 0, !dbg !19
  %19 = insertelement <2 x i32> %18, i32 %12, i64 1, !dbg !19
  %20 = srem <2 x i32> %19, splat (i32 6), !dbg !19
  %21 = add nsw <2 x i32> %20, splat (i32 -1), !dbg !20
  %22 = extractelement <2 x i32> %21, i64 0, !dbg !18
  %23 = or i32 %22, %17, !dbg !18
  %24 = icmp ult i32 %23, 4, !dbg !18
  %25 = extractelement <2 x i32> %21, i64 1, !dbg !18
  %26 = or i32 %22, %25, !dbg !18
  %27 = icmp ult i32 %26, 4, !dbg !18
  %28 = extractelement <2 x i32> %20, i64 0, !dbg !21
  %29 = shl nsw i32 %28, 2, !dbg !21
  %30 = shl nsw i32 %16, 4, !dbg !22
  %31 = add nsw i32 %30, -5, !dbg !23
  %32 = add nsw i32 %31, %.decomposed, !dbg !24
  %33 = add nsw i32 %32, %29, !dbg !25
  %34 = extractelement <2 x i32> %20, i64 1, !dbg !24
  %35 = add nsw i32 %31, %34, !dbg !24
  %36 = add nsw i32 %35, %29, !dbg !25
  %37 = sext i32 %33 to i64, !dbg !26
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !26
  %39 = sext i32 %36 to i64, !dbg !26
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !26
  %41 = and i1 %13, %24, !dbg !27
  %42 = and i1 %13, %27, !dbg !27
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %41, i32 0, i1 %41) #1, !dbg !28
  %44 = bitcast i32 %43 to float, !dbg !28
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %42, i32 0, i1 %42) #1, !dbg !28
  %46 = bitcast i32 %45 to float, !dbg !28
  %47 = sext i32 %16 to i64, !dbg !29
  %48 = getelementptr float, ptr addrspace(1) %1, i64 %47, !dbg !29
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %41, i32 0, i1 %41) #1, !dbg !30
  %50 = bitcast i32 %49 to float, !dbg !30
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %42, i32 0, i1 %42) #1, !dbg !30
  %52 = bitcast i32 %51 to float, !dbg !30
  %53 = fsub float %44, %50, !dbg !31
  %54 = fsub float %46, %52, !dbg !31
  %55 = getelementptr float, ptr addrspace(1) %2, i64 %47, !dbg !32
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %41, i32 0, i1 %41) #1, !dbg !33
  %57 = bitcast i32 %56 to float, !dbg !33
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %42, i32 0, i1 %42) #1, !dbg !33
  %59 = bitcast i32 %58 to float, !dbg !33
  %60 = fmul float %53, %57, !dbg !34
  %61 = fmul float %54, %59, !dbg !34
  %62 = fcmp olt float %60, 0.000000e+00, !dbg !35
  %63 = fcmp olt float %61, 0.000000e+00, !dbg !35
  %64 = select i1 %62, float 0.000000e+00, float %60, !dbg !39
  %65 = select i1 %63, float 0.000000e+00, float %61, !dbg !39
  %66 = sext i32 %11 to i64, !dbg !40
  %67 = getelementptr float, ptr addrspace(1) %3, i64 %66, !dbg !40
  %68 = bitcast float %64 to i32, !dbg !41
  %69 = select i1 %24, i32 %68, i32 0, !dbg !42
  %70 = bitcast float %65 to i32, !dbg !41
  %71 = select i1 %27, i32 %70, i32 0, !dbg !42
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %69, i32 %71, ptr addrspace(1) %67, i1 %13) #1, !dbg !41
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c27qpi4bpe6bnpbtmsuwf2nntqablgrhr62qa25t5nhii23a4yig.py", directory: "inductor_cache/27")
!4 = !{ptr @triton_poi_fused_constant_pad_nd_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_constant_pad_nd_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_constant_pad_nd_2", linkageName: "triton_poi_fused_constant_pad_nd_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 38, column: 19, scope: !7)
!19 = !DILocation(line: 24, column: 26, scope: !7)
!20 = !DILocation(line: 36, column: 18, scope: !7)
!21 = !DILocation(line: 39, column: 45, scope: !7)
!22 = !DILocation(line: 39, column: 53, scope: !7)
!23 = !DILocation(line: 39, column: 38, scope: !7)
!24 = !DILocation(line: 39, column: 43, scope: !7)
!25 = !DILocation(line: 39, column: 50, scope: !7)
!26 = !DILocation(line: 39, column: 31, scope: !7)
!27 = !DILocation(line: 39, column: 66, scope: !7)
!28 = !DILocation(line: 39, column: 58, scope: !7)
!29 = !DILocation(line: 40, column: 31, scope: !7)
!30 = !DILocation(line: 40, column: 36, scope: !7)
!31 = !DILocation(line: 41, column: 20, scope: !7)
!32 = !DILocation(line: 42, column: 31, scope: !7)
!33 = !DILocation(line: 42, column: 36, scope: !7)
!34 = !DILocation(line: 43, column: 20, scope: !7)
!35 = !DILocation(line: 118, column: 15, scope: !36, inlinedAt: !38)
!36 = distinct !DILexicalBlockFile(scope: !7, file: !37, discriminator: 0)
!37 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!38 = !DILocation(line: 45, column: 42, scope: !7)
!39 = !DILocation(line: 121, column: 29, scope: !36, inlinedAt: !38)
!40 = !DILocation(line: 48, column: 25, scope: !7)
!41 = !DILocation(line: 48, column: 37, scope: !7)
!42 = !DILocation(line: 47, column: 35, scope: !7)
!43 = !DILocation(line: 48, column: 4, scope: !7)
