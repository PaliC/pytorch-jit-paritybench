; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__softmax_4(ptr addrspace(1) %0, i32 %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = lshr i32 %6, 5, !dbg !12
  %8 = and i32 %7, 7, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 8, !dbg !13
  %11 = or disjoint i32 %9, 16, !dbg !13
  %12 = or disjoint i32 %9, 24, !dbg !13
  %13 = or disjoint i32 %9, 32, !dbg !13
  %14 = or disjoint i32 %9, 40, !dbg !13
  %15 = or disjoint i32 %9, 48, !dbg !13
  %16 = or disjoint i32 %9, 56, !dbg !13
  %17 = or disjoint i32 %9, 64, !dbg !13
  %18 = icmp slt i32 %9, 68, !dbg !14
  %19 = icmp slt i32 %10, 68, !dbg !14
  %20 = icmp slt i32 %11, 68, !dbg !14
  %21 = icmp slt i32 %12, 68, !dbg !14
  %22 = icmp slt i32 %13, 68, !dbg !14
  %23 = icmp slt i32 %14, 68, !dbg !14
  %24 = icmp slt i32 %15, 68, !dbg !14
  %25 = icmp slt i32 %16, 68, !dbg !14
  %26 = icmp slt i32 %17, 68, !dbg !14
  %27 = icmp slt i32 %5, 0, !dbg !14
  %28 = and i32 %6, 31, !dbg !15
  %29 = icmp samesign ult i32 %28, 17, !dbg !16
  %30 = mul i32 %9, 17, !dbg !17
  %31 = mul i32 %10, 17, !dbg !17
  %32 = mul i32 %11, 17, !dbg !17
  %33 = mul i32 %12, 17, !dbg !17
  %34 = mul i32 %13, 17, !dbg !17
  %35 = mul i32 %14, 17, !dbg !17
  %36 = mul i32 %15, 17, !dbg !17
  %37 = mul i32 %16, 17, !dbg !17
  %38 = mul i32 %17, 17, !dbg !17
  %39 = add i32 %30, 1224, !dbg !17
  %40 = add i32 %30, 1360, !dbg !17
  %41 = add i32 %30, 1496, !dbg !17
  %42 = add i32 %30, 1632, !dbg !17
  %43 = add i32 %30, 1768, !dbg !17
  %44 = add i32 %30, 1904, !dbg !17
  %45 = add i32 %30, 2040, !dbg !17
  %46 = add i32 %30, %28, !dbg !18
  %47 = add i32 %31, %28, !dbg !18
  %48 = add i32 %32, %28, !dbg !18
  %49 = add i32 %33, %28, !dbg !18
  %50 = add i32 %34, %28, !dbg !18
  %51 = add i32 %35, %28, !dbg !18
  %52 = add i32 %36, %28, !dbg !18
  %53 = add i32 %37, %28, !dbg !18
  %54 = add i32 %38, %28, !dbg !18
  %55 = add i32 %39, %28, !dbg !18
  %56 = add i32 %40, %28, !dbg !18
  %57 = add i32 %41, %28, !dbg !18
  %58 = add i32 %42, %28, !dbg !18
  %59 = add i32 %43, %28, !dbg !18
  %60 = add i32 %44, %28, !dbg !18
  %61 = add i32 %45, %28, !dbg !18
  %62 = sext i32 %46 to i64, !dbg !19
  %63 = getelementptr float, ptr addrspace(1) %0, i64 %62, !dbg !19
  %64 = sext i32 %47 to i64, !dbg !19
  %65 = getelementptr float, ptr addrspace(1) %0, i64 %64, !dbg !19
  %66 = sext i32 %48 to i64, !dbg !19
  %67 = getelementptr float, ptr addrspace(1) %0, i64 %66, !dbg !19
  %68 = sext i32 %49 to i64, !dbg !19
  %69 = getelementptr float, ptr addrspace(1) %0, i64 %68, !dbg !19
  %70 = sext i32 %50 to i64, !dbg !19
  %71 = getelementptr float, ptr addrspace(1) %0, i64 %70, !dbg !19
  %72 = sext i32 %51 to i64, !dbg !19
  %73 = getelementptr float, ptr addrspace(1) %0, i64 %72, !dbg !19
  %74 = sext i32 %52 to i64, !dbg !19
  %75 = getelementptr float, ptr addrspace(1) %0, i64 %74, !dbg !19
  %76 = sext i32 %53 to i64, !dbg !19
  %77 = getelementptr float, ptr addrspace(1) %0, i64 %76, !dbg !19
  %78 = sext i32 %54 to i64, !dbg !19
  %79 = getelementptr float, ptr addrspace(1) %0, i64 %78, !dbg !19
  %80 = sext i32 %55 to i64, !dbg !19
  %81 = getelementptr float, ptr addrspace(1) %0, i64 %80, !dbg !19
  %82 = sext i32 %56 to i64, !dbg !19
  %83 = getelementptr float, ptr addrspace(1) %0, i64 %82, !dbg !19
  %84 = sext i32 %57 to i64, !dbg !19
  %85 = getelementptr float, ptr addrspace(1) %0, i64 %84, !dbg !19
  %86 = sext i32 %58 to i64, !dbg !19
  %87 = getelementptr float, ptr addrspace(1) %0, i64 %86, !dbg !19
  %88 = sext i32 %59 to i64, !dbg !19
  %89 = getelementptr float, ptr addrspace(1) %0, i64 %88, !dbg !19
  %90 = sext i32 %60 to i64, !dbg !19
  %91 = getelementptr float, ptr addrspace(1) %0, i64 %90, !dbg !19
  %92 = sext i32 %61 to i64, !dbg !19
  %93 = getelementptr float, ptr addrspace(1) %0, i64 %92, !dbg !19
  %94 = and i1 %29, %18, !dbg !20
  %95 = and i1 %29, %19, !dbg !20
  %96 = and i1 %29, %20, !dbg !20
  %97 = and i1 %29, %21, !dbg !20
  %98 = and i1 %29, %22, !dbg !20
  %99 = and i1 %29, %23, !dbg !20
  %100 = and i1 %29, %24, !dbg !20
  %101 = and i1 %29, %25, !dbg !20
  %102 = and i1 %29, %26, !dbg !20
  %103 = and i1 %29, %27, !dbg !20
  %104 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %63, i1 %94, i32 0, i1 %94) #2, !dbg !21
  %105 = bitcast i32 %104 to float, !dbg !21
  %106 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %95, i32 0, i1 %95) #2, !dbg !21
  %107 = bitcast i32 %106 to float, !dbg !21
  %108 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %67, i1 %96, i32 0, i1 %96) #2, !dbg !21
  %109 = bitcast i32 %108 to float, !dbg !21
  %110 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %69, i1 %97, i32 0, i1 %97) #2, !dbg !21
  %111 = bitcast i32 %110 to float, !dbg !21
  %112 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %71, i1 %98, i32 0, i1 %98) #2, !dbg !21
  %113 = bitcast i32 %112 to float, !dbg !21
  %114 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %73, i1 %99, i32 0, i1 %99) #2, !dbg !21
  %115 = bitcast i32 %114 to float, !dbg !21
  %116 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %75, i1 %100, i32 0, i1 %100) #2, !dbg !21
  %117 = bitcast i32 %116 to float, !dbg !21
  %118 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %77, i1 %101, i32 0, i1 %101) #2, !dbg !21
  %119 = bitcast i32 %118 to float, !dbg !21
  %120 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %79, i1 %102, i32 0, i1 %102) #2, !dbg !21
  %121 = bitcast i32 %120 to float, !dbg !21
  %122 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %81, i1 %103, i32 0, i1 %103) #2, !dbg !21
  %123 = bitcast i32 %122 to float, !dbg !21
  %124 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %83, i1 %103, i32 0, i1 %103) #2, !dbg !21
  %125 = bitcast i32 %124 to float, !dbg !21
  %126 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %85, i1 %103, i32 0, i1 %103) #2, !dbg !21
  %127 = bitcast i32 %126 to float, !dbg !21
  %128 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %87, i1 %103, i32 0, i1 %103) #2, !dbg !21
  %129 = bitcast i32 %128 to float, !dbg !21
  %130 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %89, i1 %103, i32 0, i1 %103) #2, !dbg !21
  %131 = bitcast i32 %130 to float, !dbg !21
  %132 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %91, i1 %103, i32 0, i1 %103) #2, !dbg !21
  %133 = bitcast i32 %132 to float, !dbg !21
  %134 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %93, i1 %103, i32 0, i1 %103) #2, !dbg !21
  %135 = bitcast i32 %134 to float, !dbg !21
  %136 = select i1 %94, float %105, float 0xFFF0000000000000, !dbg !22
  %137 = select i1 %95, float %107, float 0xFFF0000000000000, !dbg !22
  %138 = select i1 %96, float %109, float 0xFFF0000000000000, !dbg !22
  %139 = select i1 %97, float %111, float 0xFFF0000000000000, !dbg !22
  %140 = select i1 %98, float %113, float 0xFFF0000000000000, !dbg !22
  %141 = select i1 %99, float %115, float 0xFFF0000000000000, !dbg !22
  %142 = select i1 %100, float %117, float 0xFFF0000000000000, !dbg !22
  %143 = select i1 %101, float %119, float 0xFFF0000000000000, !dbg !22
  %144 = select i1 %102, float %121, float 0xFFF0000000000000, !dbg !22
  %145 = select i1 %103, float %123, float 0xFFF0000000000000, !dbg !22
  %146 = select i1 %103, float %125, float 0xFFF0000000000000, !dbg !22
  %147 = select i1 %103, float %127, float 0xFFF0000000000000, !dbg !22
  %148 = select i1 %103, float %129, float 0xFFF0000000000000, !dbg !22
  %149 = select i1 %103, float %131, float 0xFFF0000000000000, !dbg !22
  %150 = select i1 %103, float %133, float 0xFFF0000000000000, !dbg !22
  %151 = select i1 %103, float %135, float 0xFFF0000000000000, !dbg !22
  %152 = bitcast float %136 to i32, !dbg !23
  %153 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %152, i32 16, i32 31), !dbg !23
  %154 = bitcast i32 %153 to float, !dbg !23
  %155 = fcmp ogt float %136, %154, !dbg !27
  %156 = fcmp uno float %136, 0.000000e+00, !dbg !29
  %157 = or i1 %156, %155, !dbg !30
  %158 = select i1 %157, float %136, float %154, !dbg !31
  %159 = bitcast float %158 to i32, !dbg !23
  %160 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %159, i32 8, i32 31), !dbg !23
  %161 = bitcast i32 %160 to float, !dbg !23
  %162 = fcmp ogt float %158, %161, !dbg !27
  %163 = fcmp uno float %158, 0.000000e+00, !dbg !29
  %164 = or i1 %162, %163, !dbg !30
  %165 = select i1 %164, float %158, float %161, !dbg !31
  %166 = bitcast float %165 to i32, !dbg !23
  %167 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %166, i32 4, i32 31), !dbg !23
  %168 = bitcast i32 %167 to float, !dbg !23
  %169 = fcmp ogt float %165, %168, !dbg !27
  %170 = fcmp uno float %165, 0.000000e+00, !dbg !29
  %171 = or i1 %169, %170, !dbg !30
  %172 = select i1 %171, float %165, float %168, !dbg !31
  %173 = bitcast float %172 to i32, !dbg !23
  %174 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %173, i32 2, i32 31), !dbg !23
  %175 = bitcast i32 %174 to float, !dbg !23
  %176 = fcmp ogt float %172, %175, !dbg !27
  %177 = fcmp uno float %172, 0.000000e+00, !dbg !29
  %178 = or i1 %176, %177, !dbg !30
  %179 = select i1 %178, float %172, float %175, !dbg !31
  %180 = bitcast float %179 to i32, !dbg !23
  %181 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %180, i32 1, i32 31), !dbg !23
  %182 = bitcast i32 %181 to float, !dbg !23
  %183 = fcmp ogt float %179, %182, !dbg !27
  %184 = fcmp uno float %179, 0.000000e+00, !dbg !29
  %185 = or i1 %183, %184, !dbg !30
  %186 = select i1 %185, float %179, float %182, !dbg !31
  %187 = bitcast float %137 to i32, !dbg !23
  %188 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %187, i32 16, i32 31), !dbg !23
  %189 = bitcast i32 %188 to float, !dbg !23
  %190 = fcmp ogt float %137, %189, !dbg !27
  %191 = fcmp uno float %137, 0.000000e+00, !dbg !29
  %192 = or i1 %191, %190, !dbg !30
  %193 = select i1 %192, float %137, float %189, !dbg !31
  %194 = bitcast float %193 to i32, !dbg !23
  %195 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %194, i32 8, i32 31), !dbg !23
  %196 = bitcast i32 %195 to float, !dbg !23
  %197 = fcmp ogt float %193, %196, !dbg !27
  %198 = fcmp uno float %193, 0.000000e+00, !dbg !29
  %199 = or i1 %197, %198, !dbg !30
  %200 = select i1 %199, float %193, float %196, !dbg !31
  %201 = bitcast float %200 to i32, !dbg !23
  %202 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %201, i32 4, i32 31), !dbg !23
  %203 = bitcast i32 %202 to float, !dbg !23
  %204 = fcmp ogt float %200, %203, !dbg !27
  %205 = fcmp uno float %200, 0.000000e+00, !dbg !29
  %206 = or i1 %204, %205, !dbg !30
  %207 = select i1 %206, float %200, float %203, !dbg !31
  %208 = bitcast float %207 to i32, !dbg !23
  %209 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %208, i32 2, i32 31), !dbg !23
  %210 = bitcast i32 %209 to float, !dbg !23
  %211 = fcmp ogt float %207, %210, !dbg !27
  %212 = fcmp uno float %207, 0.000000e+00, !dbg !29
  %213 = or i1 %211, %212, !dbg !30
  %214 = select i1 %213, float %207, float %210, !dbg !31
  %215 = bitcast float %214 to i32, !dbg !23
  %216 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %215, i32 1, i32 31), !dbg !23
  %217 = bitcast i32 %216 to float, !dbg !23
  %218 = fcmp ogt float %214, %217, !dbg !27
  %219 = fcmp uno float %214, 0.000000e+00, !dbg !29
  %220 = or i1 %218, %219, !dbg !30
  %221 = select i1 %220, float %214, float %217, !dbg !31
  %222 = bitcast float %138 to i32, !dbg !23
  %223 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %222, i32 16, i32 31), !dbg !23
  %224 = bitcast i32 %223 to float, !dbg !23
  %225 = fcmp ogt float %138, %224, !dbg !27
  %226 = fcmp uno float %138, 0.000000e+00, !dbg !29
  %227 = or i1 %226, %225, !dbg !30
  %228 = select i1 %227, float %138, float %224, !dbg !31
  %229 = bitcast float %228 to i32, !dbg !23
  %230 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %229, i32 8, i32 31), !dbg !23
  %231 = bitcast i32 %230 to float, !dbg !23
  %232 = fcmp ogt float %228, %231, !dbg !27
  %233 = fcmp uno float %228, 0.000000e+00, !dbg !29
  %234 = or i1 %232, %233, !dbg !30
  %235 = select i1 %234, float %228, float %231, !dbg !31
  %236 = bitcast float %235 to i32, !dbg !23
  %237 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %236, i32 4, i32 31), !dbg !23
  %238 = bitcast i32 %237 to float, !dbg !23
  %239 = fcmp ogt float %235, %238, !dbg !27
  %240 = fcmp uno float %235, 0.000000e+00, !dbg !29
  %241 = or i1 %239, %240, !dbg !30
  %242 = select i1 %241, float %235, float %238, !dbg !31
  %243 = bitcast float %242 to i32, !dbg !23
  %244 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %243, i32 2, i32 31), !dbg !23
  %245 = bitcast i32 %244 to float, !dbg !23
  %246 = fcmp ogt float %242, %245, !dbg !27
  %247 = fcmp uno float %242, 0.000000e+00, !dbg !29
  %248 = or i1 %246, %247, !dbg !30
  %249 = select i1 %248, float %242, float %245, !dbg !31
  %250 = bitcast float %249 to i32, !dbg !23
  %251 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %250, i32 1, i32 31), !dbg !23
  %252 = bitcast i32 %251 to float, !dbg !23
  %253 = fcmp ogt float %249, %252, !dbg !27
  %254 = fcmp uno float %249, 0.000000e+00, !dbg !29
  %255 = or i1 %253, %254, !dbg !30
  %256 = select i1 %255, float %249, float %252, !dbg !31
  %257 = bitcast float %139 to i32, !dbg !23
  %258 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %257, i32 16, i32 31), !dbg !23
  %259 = bitcast i32 %258 to float, !dbg !23
  %260 = fcmp ogt float %139, %259, !dbg !27
  %261 = fcmp uno float %139, 0.000000e+00, !dbg !29
  %262 = or i1 %261, %260, !dbg !30
  %263 = select i1 %262, float %139, float %259, !dbg !31
  %264 = bitcast float %263 to i32, !dbg !23
  %265 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %264, i32 8, i32 31), !dbg !23
  %266 = bitcast i32 %265 to float, !dbg !23
  %267 = fcmp ogt float %263, %266, !dbg !27
  %268 = fcmp uno float %263, 0.000000e+00, !dbg !29
  %269 = or i1 %267, %268, !dbg !30
  %270 = select i1 %269, float %263, float %266, !dbg !31
  %271 = bitcast float %270 to i32, !dbg !23
  %272 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %271, i32 4, i32 31), !dbg !23
  %273 = bitcast i32 %272 to float, !dbg !23
  %274 = fcmp ogt float %270, %273, !dbg !27
  %275 = fcmp uno float %270, 0.000000e+00, !dbg !29
  %276 = or i1 %274, %275, !dbg !30
  %277 = select i1 %276, float %270, float %273, !dbg !31
  %278 = bitcast float %277 to i32, !dbg !23
  %279 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %278, i32 2, i32 31), !dbg !23
  %280 = bitcast i32 %279 to float, !dbg !23
  %281 = fcmp ogt float %277, %280, !dbg !27
  %282 = fcmp uno float %277, 0.000000e+00, !dbg !29
  %283 = or i1 %281, %282, !dbg !30
  %284 = select i1 %283, float %277, float %280, !dbg !31
  %285 = bitcast float %284 to i32, !dbg !23
  %286 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %285, i32 1, i32 31), !dbg !23
  %287 = bitcast i32 %286 to float, !dbg !23
  %288 = fcmp ogt float %284, %287, !dbg !27
  %289 = fcmp uno float %284, 0.000000e+00, !dbg !29
  %290 = or i1 %288, %289, !dbg !30
  %291 = select i1 %290, float %284, float %287, !dbg !31
  %292 = bitcast float %140 to i32, !dbg !23
  %293 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %292, i32 16, i32 31), !dbg !23
  %294 = bitcast i32 %293 to float, !dbg !23
  %295 = fcmp ogt float %140, %294, !dbg !27
  %296 = fcmp uno float %140, 0.000000e+00, !dbg !29
  %297 = or i1 %296, %295, !dbg !30
  %298 = select i1 %297, float %140, float %294, !dbg !31
  %299 = bitcast float %298 to i32, !dbg !23
  %300 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %299, i32 8, i32 31), !dbg !23
  %301 = bitcast i32 %300 to float, !dbg !23
  %302 = fcmp ogt float %298, %301, !dbg !27
  %303 = fcmp uno float %298, 0.000000e+00, !dbg !29
  %304 = or i1 %302, %303, !dbg !30
  %305 = select i1 %304, float %298, float %301, !dbg !31
  %306 = bitcast float %305 to i32, !dbg !23
  %307 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %306, i32 4, i32 31), !dbg !23
  %308 = bitcast i32 %307 to float, !dbg !23
  %309 = fcmp ogt float %305, %308, !dbg !27
  %310 = fcmp uno float %305, 0.000000e+00, !dbg !29
  %311 = or i1 %309, %310, !dbg !30
  %312 = select i1 %311, float %305, float %308, !dbg !31
  %313 = bitcast float %312 to i32, !dbg !23
  %314 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %313, i32 2, i32 31), !dbg !23
  %315 = bitcast i32 %314 to float, !dbg !23
  %316 = fcmp ogt float %312, %315, !dbg !27
  %317 = fcmp uno float %312, 0.000000e+00, !dbg !29
  %318 = or i1 %316, %317, !dbg !30
  %319 = select i1 %318, float %312, float %315, !dbg !31
  %320 = bitcast float %319 to i32, !dbg !23
  %321 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %320, i32 1, i32 31), !dbg !23
  %322 = bitcast i32 %321 to float, !dbg !23
  %323 = fcmp ogt float %319, %322, !dbg !27
  %324 = fcmp uno float %319, 0.000000e+00, !dbg !29
  %325 = or i1 %323, %324, !dbg !30
  %326 = select i1 %325, float %319, float %322, !dbg !31
  %327 = bitcast float %141 to i32, !dbg !23
  %328 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %327, i32 16, i32 31), !dbg !23
  %329 = bitcast i32 %328 to float, !dbg !23
  %330 = fcmp ogt float %141, %329, !dbg !27
  %331 = fcmp uno float %141, 0.000000e+00, !dbg !29
  %332 = or i1 %331, %330, !dbg !30
  %333 = select i1 %332, float %141, float %329, !dbg !31
  %334 = bitcast float %333 to i32, !dbg !23
  %335 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %334, i32 8, i32 31), !dbg !23
  %336 = bitcast i32 %335 to float, !dbg !23
  %337 = fcmp ogt float %333, %336, !dbg !27
  %338 = fcmp uno float %333, 0.000000e+00, !dbg !29
  %339 = or i1 %337, %338, !dbg !30
  %340 = select i1 %339, float %333, float %336, !dbg !31
  %341 = bitcast float %340 to i32, !dbg !23
  %342 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %341, i32 4, i32 31), !dbg !23
  %343 = bitcast i32 %342 to float, !dbg !23
  %344 = fcmp ogt float %340, %343, !dbg !27
  %345 = fcmp uno float %340, 0.000000e+00, !dbg !29
  %346 = or i1 %344, %345, !dbg !30
  %347 = select i1 %346, float %340, float %343, !dbg !31
  %348 = bitcast float %347 to i32, !dbg !23
  %349 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %348, i32 2, i32 31), !dbg !23
  %350 = bitcast i32 %349 to float, !dbg !23
  %351 = fcmp ogt float %347, %350, !dbg !27
  %352 = fcmp uno float %347, 0.000000e+00, !dbg !29
  %353 = or i1 %351, %352, !dbg !30
  %354 = select i1 %353, float %347, float %350, !dbg !31
  %355 = bitcast float %354 to i32, !dbg !23
  %356 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %355, i32 1, i32 31), !dbg !23
  %357 = bitcast i32 %356 to float, !dbg !23
  %358 = fcmp ogt float %354, %357, !dbg !27
  %359 = fcmp uno float %354, 0.000000e+00, !dbg !29
  %360 = or i1 %358, %359, !dbg !30
  %361 = select i1 %360, float %354, float %357, !dbg !31
  %362 = bitcast float %142 to i32, !dbg !23
  %363 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %362, i32 16, i32 31), !dbg !23
  %364 = bitcast i32 %363 to float, !dbg !23
  %365 = fcmp ogt float %142, %364, !dbg !27
  %366 = fcmp uno float %142, 0.000000e+00, !dbg !29
  %367 = or i1 %366, %365, !dbg !30
  %368 = select i1 %367, float %142, float %364, !dbg !31
  %369 = bitcast float %368 to i32, !dbg !23
  %370 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %369, i32 8, i32 31), !dbg !23
  %371 = bitcast i32 %370 to float, !dbg !23
  %372 = fcmp ogt float %368, %371, !dbg !27
  %373 = fcmp uno float %368, 0.000000e+00, !dbg !29
  %374 = or i1 %372, %373, !dbg !30
  %375 = select i1 %374, float %368, float %371, !dbg !31
  %376 = bitcast float %375 to i32, !dbg !23
  %377 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %376, i32 4, i32 31), !dbg !23
  %378 = bitcast i32 %377 to float, !dbg !23
  %379 = fcmp ogt float %375, %378, !dbg !27
  %380 = fcmp uno float %375, 0.000000e+00, !dbg !29
  %381 = or i1 %379, %380, !dbg !30
  %382 = select i1 %381, float %375, float %378, !dbg !31
  %383 = bitcast float %382 to i32, !dbg !23
  %384 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %383, i32 2, i32 31), !dbg !23
  %385 = bitcast i32 %384 to float, !dbg !23
  %386 = fcmp ogt float %382, %385, !dbg !27
  %387 = fcmp uno float %382, 0.000000e+00, !dbg !29
  %388 = or i1 %386, %387, !dbg !30
  %389 = select i1 %388, float %382, float %385, !dbg !31
  %390 = bitcast float %389 to i32, !dbg !23
  %391 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %390, i32 1, i32 31), !dbg !23
  %392 = bitcast i32 %391 to float, !dbg !23
  %393 = fcmp ogt float %389, %392, !dbg !27
  %394 = fcmp uno float %389, 0.000000e+00, !dbg !29
  %395 = or i1 %393, %394, !dbg !30
  %396 = select i1 %395, float %389, float %392, !dbg !31
  %397 = bitcast float %143 to i32, !dbg !23
  %398 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %397, i32 16, i32 31), !dbg !23
  %399 = bitcast i32 %398 to float, !dbg !23
  %400 = fcmp ogt float %143, %399, !dbg !27
  %401 = fcmp uno float %143, 0.000000e+00, !dbg !29
  %402 = or i1 %401, %400, !dbg !30
  %403 = select i1 %402, float %143, float %399, !dbg !31
  %404 = bitcast float %403 to i32, !dbg !23
  %405 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %404, i32 8, i32 31), !dbg !23
  %406 = bitcast i32 %405 to float, !dbg !23
  %407 = fcmp ogt float %403, %406, !dbg !27
  %408 = fcmp uno float %403, 0.000000e+00, !dbg !29
  %409 = or i1 %407, %408, !dbg !30
  %410 = select i1 %409, float %403, float %406, !dbg !31
  %411 = bitcast float %410 to i32, !dbg !23
  %412 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %411, i32 4, i32 31), !dbg !23
  %413 = bitcast i32 %412 to float, !dbg !23
  %414 = fcmp ogt float %410, %413, !dbg !27
  %415 = fcmp uno float %410, 0.000000e+00, !dbg !29
  %416 = or i1 %414, %415, !dbg !30
  %417 = select i1 %416, float %410, float %413, !dbg !31
  %418 = bitcast float %417 to i32, !dbg !23
  %419 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %418, i32 2, i32 31), !dbg !23
  %420 = bitcast i32 %419 to float, !dbg !23
  %421 = fcmp ogt float %417, %420, !dbg !27
  %422 = fcmp uno float %417, 0.000000e+00, !dbg !29
  %423 = or i1 %421, %422, !dbg !30
  %424 = select i1 %423, float %417, float %420, !dbg !31
  %425 = bitcast float %424 to i32, !dbg !23
  %426 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %425, i32 1, i32 31), !dbg !23
  %427 = bitcast i32 %426 to float, !dbg !23
  %428 = fcmp ogt float %424, %427, !dbg !27
  %429 = fcmp uno float %424, 0.000000e+00, !dbg !29
  %430 = or i1 %428, %429, !dbg !30
  %431 = select i1 %430, float %424, float %427, !dbg !31
  %432 = bitcast float %144 to i32, !dbg !23
  %433 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %432, i32 16, i32 31), !dbg !23
  %434 = bitcast i32 %433 to float, !dbg !23
  %435 = fcmp ogt float %144, %434, !dbg !27
  %436 = fcmp uno float %144, 0.000000e+00, !dbg !29
  %437 = or i1 %436, %435, !dbg !30
  %438 = select i1 %437, float %144, float %434, !dbg !31
  %439 = bitcast float %438 to i32, !dbg !23
  %440 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %439, i32 8, i32 31), !dbg !23
  %441 = bitcast i32 %440 to float, !dbg !23
  %442 = fcmp ogt float %438, %441, !dbg !27
  %443 = fcmp uno float %438, 0.000000e+00, !dbg !29
  %444 = or i1 %442, %443, !dbg !30
  %445 = select i1 %444, float %438, float %441, !dbg !31
  %446 = bitcast float %445 to i32, !dbg !23
  %447 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %446, i32 4, i32 31), !dbg !23
  %448 = bitcast i32 %447 to float, !dbg !23
  %449 = fcmp ogt float %445, %448, !dbg !27
  %450 = fcmp uno float %445, 0.000000e+00, !dbg !29
  %451 = or i1 %449, %450, !dbg !30
  %452 = select i1 %451, float %445, float %448, !dbg !31
  %453 = bitcast float %452 to i32, !dbg !23
  %454 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %453, i32 2, i32 31), !dbg !23
  %455 = bitcast i32 %454 to float, !dbg !23
  %456 = fcmp ogt float %452, %455, !dbg !27
  %457 = fcmp uno float %452, 0.000000e+00, !dbg !29
  %458 = or i1 %456, %457, !dbg !30
  %459 = select i1 %458, float %452, float %455, !dbg !31
  %460 = bitcast float %459 to i32, !dbg !23
  %461 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %460, i32 1, i32 31), !dbg !23
  %462 = bitcast i32 %461 to float, !dbg !23
  %463 = fcmp ogt float %459, %462, !dbg !27
  %464 = fcmp uno float %459, 0.000000e+00, !dbg !29
  %465 = or i1 %463, %464, !dbg !30
  %466 = select i1 %465, float %459, float %462, !dbg !31
  %467 = bitcast float %145 to i32, !dbg !23
  %468 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %467, i32 16, i32 31), !dbg !23
  %469 = bitcast i32 %468 to float, !dbg !23
  %470 = fcmp ogt float %145, %469, !dbg !27
  %471 = fcmp uno float %145, 0.000000e+00, !dbg !29
  %472 = or i1 %471, %470, !dbg !30
  %473 = select i1 %472, float %145, float %469, !dbg !31
  %474 = bitcast float %473 to i32, !dbg !23
  %475 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %474, i32 8, i32 31), !dbg !23
  %476 = bitcast i32 %475 to float, !dbg !23
  %477 = fcmp ogt float %473, %476, !dbg !27
  %478 = fcmp uno float %473, 0.000000e+00, !dbg !29
  %479 = or i1 %477, %478, !dbg !30
  %480 = select i1 %479, float %473, float %476, !dbg !31
  %481 = bitcast float %480 to i32, !dbg !23
  %482 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %481, i32 4, i32 31), !dbg !23
  %483 = bitcast i32 %482 to float, !dbg !23
  %484 = fcmp ogt float %480, %483, !dbg !27
  %485 = fcmp uno float %480, 0.000000e+00, !dbg !29
  %486 = or i1 %484, %485, !dbg !30
  %487 = select i1 %486, float %480, float %483, !dbg !31
  %488 = bitcast float %487 to i32, !dbg !23
  %489 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %488, i32 2, i32 31), !dbg !23
  %490 = bitcast i32 %489 to float, !dbg !23
  %491 = fcmp ogt float %487, %490, !dbg !27
  %492 = fcmp uno float %487, 0.000000e+00, !dbg !29
  %493 = or i1 %491, %492, !dbg !30
  %494 = select i1 %493, float %487, float %490, !dbg !31
  %495 = bitcast float %494 to i32, !dbg !23
  %496 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %495, i32 1, i32 31), !dbg !23
  %497 = bitcast i32 %496 to float, !dbg !23
  %498 = fcmp ogt float %494, %497, !dbg !27
  %499 = fcmp uno float %494, 0.000000e+00, !dbg !29
  %500 = or i1 %498, %499, !dbg !30
  %501 = select i1 %500, float %494, float %497, !dbg !31
  %502 = bitcast float %146 to i32, !dbg !23
  %503 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %502, i32 16, i32 31), !dbg !23
  %504 = bitcast i32 %503 to float, !dbg !23
  %505 = fcmp ogt float %146, %504, !dbg !27
  %506 = fcmp uno float %146, 0.000000e+00, !dbg !29
  %507 = or i1 %506, %505, !dbg !30
  %508 = select i1 %507, float %146, float %504, !dbg !31
  %509 = bitcast float %508 to i32, !dbg !23
  %510 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %509, i32 8, i32 31), !dbg !23
  %511 = bitcast i32 %510 to float, !dbg !23
  %512 = fcmp ogt float %508, %511, !dbg !27
  %513 = fcmp uno float %508, 0.000000e+00, !dbg !29
  %514 = or i1 %512, %513, !dbg !30
  %515 = select i1 %514, float %508, float %511, !dbg !31
  %516 = bitcast float %515 to i32, !dbg !23
  %517 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %516, i32 4, i32 31), !dbg !23
  %518 = bitcast i32 %517 to float, !dbg !23
  %519 = fcmp ogt float %515, %518, !dbg !27
  %520 = fcmp uno float %515, 0.000000e+00, !dbg !29
  %521 = or i1 %519, %520, !dbg !30
  %522 = select i1 %521, float %515, float %518, !dbg !31
  %523 = bitcast float %522 to i32, !dbg !23
  %524 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %523, i32 2, i32 31), !dbg !23
  %525 = bitcast i32 %524 to float, !dbg !23
  %526 = fcmp ogt float %522, %525, !dbg !27
  %527 = fcmp uno float %522, 0.000000e+00, !dbg !29
  %528 = or i1 %526, %527, !dbg !30
  %529 = select i1 %528, float %522, float %525, !dbg !31
  %530 = bitcast float %529 to i32, !dbg !23
  %531 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %530, i32 1, i32 31), !dbg !23
  %532 = bitcast i32 %531 to float, !dbg !23
  %533 = fcmp ogt float %529, %532, !dbg !27
  %534 = fcmp uno float %529, 0.000000e+00, !dbg !29
  %535 = or i1 %533, %534, !dbg !30
  %536 = select i1 %535, float %529, float %532, !dbg !31
  %537 = bitcast float %147 to i32, !dbg !23
  %538 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %537, i32 16, i32 31), !dbg !23
  %539 = bitcast i32 %538 to float, !dbg !23
  %540 = fcmp ogt float %147, %539, !dbg !27
  %541 = fcmp uno float %147, 0.000000e+00, !dbg !29
  %542 = or i1 %541, %540, !dbg !30
  %543 = select i1 %542, float %147, float %539, !dbg !31
  %544 = bitcast float %543 to i32, !dbg !23
  %545 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %544, i32 8, i32 31), !dbg !23
  %546 = bitcast i32 %545 to float, !dbg !23
  %547 = fcmp ogt float %543, %546, !dbg !27
  %548 = fcmp uno float %543, 0.000000e+00, !dbg !29
  %549 = or i1 %547, %548, !dbg !30
  %550 = select i1 %549, float %543, float %546, !dbg !31
  %551 = bitcast float %550 to i32, !dbg !23
  %552 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %551, i32 4, i32 31), !dbg !23
  %553 = bitcast i32 %552 to float, !dbg !23
  %554 = fcmp ogt float %550, %553, !dbg !27
  %555 = fcmp uno float %550, 0.000000e+00, !dbg !29
  %556 = or i1 %554, %555, !dbg !30
  %557 = select i1 %556, float %550, float %553, !dbg !31
  %558 = bitcast float %557 to i32, !dbg !23
  %559 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %558, i32 2, i32 31), !dbg !23
  %560 = bitcast i32 %559 to float, !dbg !23
  %561 = fcmp ogt float %557, %560, !dbg !27
  %562 = fcmp uno float %557, 0.000000e+00, !dbg !29
  %563 = or i1 %561, %562, !dbg !30
  %564 = select i1 %563, float %557, float %560, !dbg !31
  %565 = bitcast float %564 to i32, !dbg !23
  %566 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %565, i32 1, i32 31), !dbg !23
  %567 = bitcast i32 %566 to float, !dbg !23
  %568 = fcmp ogt float %564, %567, !dbg !27
  %569 = fcmp uno float %564, 0.000000e+00, !dbg !29
  %570 = or i1 %568, %569, !dbg !30
  %571 = select i1 %570, float %564, float %567, !dbg !31
  %572 = bitcast float %148 to i32, !dbg !23
  %573 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %572, i32 16, i32 31), !dbg !23
  %574 = bitcast i32 %573 to float, !dbg !23
  %575 = fcmp ogt float %148, %574, !dbg !27
  %576 = fcmp uno float %148, 0.000000e+00, !dbg !29
  %577 = or i1 %576, %575, !dbg !30
  %578 = select i1 %577, float %148, float %574, !dbg !31
  %579 = bitcast float %578 to i32, !dbg !23
  %580 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %579, i32 8, i32 31), !dbg !23
  %581 = bitcast i32 %580 to float, !dbg !23
  %582 = fcmp ogt float %578, %581, !dbg !27
  %583 = fcmp uno float %578, 0.000000e+00, !dbg !29
  %584 = or i1 %582, %583, !dbg !30
  %585 = select i1 %584, float %578, float %581, !dbg !31
  %586 = bitcast float %585 to i32, !dbg !23
  %587 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %586, i32 4, i32 31), !dbg !23
  %588 = bitcast i32 %587 to float, !dbg !23
  %589 = fcmp ogt float %585, %588, !dbg !27
  %590 = fcmp uno float %585, 0.000000e+00, !dbg !29
  %591 = or i1 %589, %590, !dbg !30
  %592 = select i1 %591, float %585, float %588, !dbg !31
  %593 = bitcast float %592 to i32, !dbg !23
  %594 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %593, i32 2, i32 31), !dbg !23
  %595 = bitcast i32 %594 to float, !dbg !23
  %596 = fcmp ogt float %592, %595, !dbg !27
  %597 = fcmp uno float %592, 0.000000e+00, !dbg !29
  %598 = or i1 %596, %597, !dbg !30
  %599 = select i1 %598, float %592, float %595, !dbg !31
  %600 = bitcast float %599 to i32, !dbg !23
  %601 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %600, i32 1, i32 31), !dbg !23
  %602 = bitcast i32 %601 to float, !dbg !23
  %603 = fcmp ogt float %599, %602, !dbg !27
  %604 = fcmp uno float %599, 0.000000e+00, !dbg !29
  %605 = or i1 %603, %604, !dbg !30
  %606 = select i1 %605, float %599, float %602, !dbg !31
  %607 = bitcast float %149 to i32, !dbg !23
  %608 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %607, i32 16, i32 31), !dbg !23
  %609 = bitcast i32 %608 to float, !dbg !23
  %610 = fcmp ogt float %149, %609, !dbg !27
  %611 = fcmp uno float %149, 0.000000e+00, !dbg !29
  %612 = or i1 %611, %610, !dbg !30
  %613 = select i1 %612, float %149, float %609, !dbg !31
  %614 = bitcast float %613 to i32, !dbg !23
  %615 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %614, i32 8, i32 31), !dbg !23
  %616 = bitcast i32 %615 to float, !dbg !23
  %617 = fcmp ogt float %613, %616, !dbg !27
  %618 = fcmp uno float %613, 0.000000e+00, !dbg !29
  %619 = or i1 %617, %618, !dbg !30
  %620 = select i1 %619, float %613, float %616, !dbg !31
  %621 = bitcast float %620 to i32, !dbg !23
  %622 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %621, i32 4, i32 31), !dbg !23
  %623 = bitcast i32 %622 to float, !dbg !23
  %624 = fcmp ogt float %620, %623, !dbg !27
  %625 = fcmp uno float %620, 0.000000e+00, !dbg !29
  %626 = or i1 %624, %625, !dbg !30
  %627 = select i1 %626, float %620, float %623, !dbg !31
  %628 = bitcast float %627 to i32, !dbg !23
  %629 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %628, i32 2, i32 31), !dbg !23
  %630 = bitcast i32 %629 to float, !dbg !23
  %631 = fcmp ogt float %627, %630, !dbg !27
  %632 = fcmp uno float %627, 0.000000e+00, !dbg !29
  %633 = or i1 %631, %632, !dbg !30
  %634 = select i1 %633, float %627, float %630, !dbg !31
  %635 = bitcast float %634 to i32, !dbg !23
  %636 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %635, i32 1, i32 31), !dbg !23
  %637 = bitcast i32 %636 to float, !dbg !23
  %638 = fcmp ogt float %634, %637, !dbg !27
  %639 = fcmp uno float %634, 0.000000e+00, !dbg !29
  %640 = or i1 %638, %639, !dbg !30
  %641 = select i1 %640, float %634, float %637, !dbg !31
  %642 = bitcast float %150 to i32, !dbg !23
  %643 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %642, i32 16, i32 31), !dbg !23
  %644 = bitcast i32 %643 to float, !dbg !23
  %645 = fcmp ogt float %150, %644, !dbg !27
  %646 = fcmp uno float %150, 0.000000e+00, !dbg !29
  %647 = or i1 %646, %645, !dbg !30
  %648 = select i1 %647, float %150, float %644, !dbg !31
  %649 = bitcast float %648 to i32, !dbg !23
  %650 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %649, i32 8, i32 31), !dbg !23
  %651 = bitcast i32 %650 to float, !dbg !23
  %652 = fcmp ogt float %648, %651, !dbg !27
  %653 = fcmp uno float %648, 0.000000e+00, !dbg !29
  %654 = or i1 %652, %653, !dbg !30
  %655 = select i1 %654, float %648, float %651, !dbg !31
  %656 = bitcast float %655 to i32, !dbg !23
  %657 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %656, i32 4, i32 31), !dbg !23
  %658 = bitcast i32 %657 to float, !dbg !23
  %659 = fcmp ogt float %655, %658, !dbg !27
  %660 = fcmp uno float %655, 0.000000e+00, !dbg !29
  %661 = or i1 %659, %660, !dbg !30
  %662 = select i1 %661, float %655, float %658, !dbg !31
  %663 = bitcast float %662 to i32, !dbg !23
  %664 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %663, i32 2, i32 31), !dbg !23
  %665 = bitcast i32 %664 to float, !dbg !23
  %666 = fcmp ogt float %662, %665, !dbg !27
  %667 = fcmp uno float %662, 0.000000e+00, !dbg !29
  %668 = or i1 %666, %667, !dbg !30
  %669 = select i1 %668, float %662, float %665, !dbg !31
  %670 = bitcast float %669 to i32, !dbg !23
  %671 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %670, i32 1, i32 31), !dbg !23
  %672 = bitcast i32 %671 to float, !dbg !23
  %673 = fcmp ogt float %669, %672, !dbg !27
  %674 = fcmp uno float %669, 0.000000e+00, !dbg !29
  %675 = or i1 %673, %674, !dbg !30
  %676 = select i1 %675, float %669, float %672, !dbg !31
  %677 = bitcast float %151 to i32, !dbg !23
  %678 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %677, i32 16, i32 31), !dbg !23
  %679 = bitcast i32 %678 to float, !dbg !23
  %680 = fcmp ogt float %151, %679, !dbg !27
  %681 = fcmp uno float %151, 0.000000e+00, !dbg !29
  %682 = or i1 %681, %680, !dbg !30
  %683 = select i1 %682, float %151, float %679, !dbg !31
  %684 = bitcast float %683 to i32, !dbg !23
  %685 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %684, i32 8, i32 31), !dbg !23
  %686 = bitcast i32 %685 to float, !dbg !23
  %687 = fcmp ogt float %683, %686, !dbg !27
  %688 = fcmp uno float %683, 0.000000e+00, !dbg !29
  %689 = or i1 %687, %688, !dbg !30
  %690 = select i1 %689, float %683, float %686, !dbg !31
  %691 = bitcast float %690 to i32, !dbg !23
  %692 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %691, i32 4, i32 31), !dbg !23
  %693 = bitcast i32 %692 to float, !dbg !23
  %694 = fcmp ogt float %690, %693, !dbg !27
  %695 = fcmp uno float %690, 0.000000e+00, !dbg !29
  %696 = or i1 %694, %695, !dbg !30
  %697 = select i1 %696, float %690, float %693, !dbg !31
  %698 = bitcast float %697 to i32, !dbg !23
  %699 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %698, i32 2, i32 31), !dbg !23
  %700 = bitcast i32 %699 to float, !dbg !23
  %701 = fcmp ogt float %697, %700, !dbg !27
  %702 = fcmp uno float %697, 0.000000e+00, !dbg !29
  %703 = or i1 %701, %702, !dbg !30
  %704 = select i1 %703, float %697, float %700, !dbg !31
  %705 = bitcast float %704 to i32, !dbg !23
  %706 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %705, i32 1, i32 31), !dbg !23
  %707 = bitcast i32 %706 to float, !dbg !23
  %708 = fcmp ogt float %704, %707, !dbg !27
  %709 = fcmp uno float %704, 0.000000e+00, !dbg !29
  %710 = or i1 %708, %709, !dbg !30
  %711 = select i1 %710, float %704, float %707, !dbg !31
  %712 = fsub float %105, %186, !dbg !32
  %713 = fsub float %107, %221, !dbg !32
  %714 = fsub float %109, %256, !dbg !32
  %715 = fsub float %111, %291, !dbg !32
  %716 = fsub float %113, %326, !dbg !32
  %717 = fsub float %115, %361, !dbg !32
  %718 = fsub float %117, %396, !dbg !32
  %719 = fsub float %119, %431, !dbg !32
  %720 = fsub float %121, %466, !dbg !32
  %721 = fsub float %123, %501, !dbg !32
  %722 = fsub float %125, %536, !dbg !32
  %723 = fsub float %127, %571, !dbg !32
  %724 = fsub float %129, %606, !dbg !32
  %725 = fsub float %131, %641, !dbg !32
  %726 = fsub float %133, %676, !dbg !32
  %727 = fsub float %135, %711, !dbg !32
  %728 = fmul float %712, 0x3FF7154760000000, !dbg !33
  %729 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %728) #2, !dbg !33
  %730 = fmul float %713, 0x3FF7154760000000, !dbg !33
  %731 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %730) #2, !dbg !33
  %732 = fmul float %714, 0x3FF7154760000000, !dbg !33
  %733 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %732) #2, !dbg !33
  %734 = fmul float %715, 0x3FF7154760000000, !dbg !33
  %735 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %734) #2, !dbg !33
  %736 = fmul float %716, 0x3FF7154760000000, !dbg !33
  %737 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %736) #2, !dbg !33
  %738 = fmul float %717, 0x3FF7154760000000, !dbg !33
  %739 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %738) #2, !dbg !33
  %740 = fmul float %718, 0x3FF7154760000000, !dbg !33
  %741 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %740) #2, !dbg !33
  %742 = fmul float %719, 0x3FF7154760000000, !dbg !33
  %743 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %742) #2, !dbg !33
  %744 = fmul float %720, 0x3FF7154760000000, !dbg !33
  %745 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %744) #2, !dbg !33
  %746 = fmul float %721, 0x3FF7154760000000, !dbg !33
  %747 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %746) #2, !dbg !33
  %748 = fmul float %722, 0x3FF7154760000000, !dbg !33
  %749 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %748) #2, !dbg !33
  %750 = fmul float %723, 0x3FF7154760000000, !dbg !33
  %751 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %750) #2, !dbg !33
  %752 = fmul float %724, 0x3FF7154760000000, !dbg !33
  %753 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %752) #2, !dbg !33
  %754 = fmul float %725, 0x3FF7154760000000, !dbg !33
  %755 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %754) #2, !dbg !33
  %756 = fmul float %726, 0x3FF7154760000000, !dbg !33
  %757 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %756) #2, !dbg !33
  %758 = fmul float %727, 0x3FF7154760000000, !dbg !33
  %759 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %758) #2, !dbg !33
  %760 = select i1 %94, float %729, float 0.000000e+00, !dbg !34
  %761 = select i1 %95, float %731, float 0.000000e+00, !dbg !34
  %762 = select i1 %96, float %733, float 0.000000e+00, !dbg !34
  %763 = select i1 %97, float %735, float 0.000000e+00, !dbg !34
  %764 = select i1 %98, float %737, float 0.000000e+00, !dbg !34
  %765 = select i1 %99, float %739, float 0.000000e+00, !dbg !34
  %766 = select i1 %100, float %741, float 0.000000e+00, !dbg !34
  %767 = select i1 %101, float %743, float 0.000000e+00, !dbg !34
  %768 = select i1 %102, float %745, float 0.000000e+00, !dbg !34
  %769 = select i1 %103, float %747, float 0.000000e+00, !dbg !34
  %770 = select i1 %103, float %749, float 0.000000e+00, !dbg !34
  %771 = select i1 %103, float %751, float 0.000000e+00, !dbg !34
  %772 = select i1 %103, float %753, float 0.000000e+00, !dbg !34
  %773 = select i1 %103, float %755, float 0.000000e+00, !dbg !34
  %774 = select i1 %103, float %757, float 0.000000e+00, !dbg !34
  %775 = select i1 %103, float %759, float 0.000000e+00, !dbg !34
  %776 = bitcast float %760 to i32, !dbg !35
  %777 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %776, i32 16, i32 31), !dbg !35
  %778 = bitcast i32 %777 to float, !dbg !35
  %779 = fadd float %760, %778, !dbg !39
  %780 = bitcast float %779 to i32, !dbg !35
  %781 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %780, i32 8, i32 31), !dbg !35
  %782 = bitcast i32 %781 to float, !dbg !35
  %783 = fadd float %779, %782, !dbg !39
  %784 = bitcast float %783 to i32, !dbg !35
  %785 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %784, i32 4, i32 31), !dbg !35
  %786 = bitcast i32 %785 to float, !dbg !35
  %787 = fadd float %783, %786, !dbg !39
  %788 = bitcast float %787 to i32, !dbg !35
  %789 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %788, i32 2, i32 31), !dbg !35
  %790 = bitcast i32 %789 to float, !dbg !35
  %791 = fadd float %787, %790, !dbg !39
  %792 = bitcast float %791 to i32, !dbg !35
  %793 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %792, i32 1, i32 31), !dbg !35
  %794 = bitcast i32 %793 to float, !dbg !35
  %795 = fadd float %791, %794, !dbg !39
  %796 = bitcast float %761 to i32, !dbg !35
  %797 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %796, i32 16, i32 31), !dbg !35
  %798 = bitcast i32 %797 to float, !dbg !35
  %799 = fadd float %761, %798, !dbg !39
  %800 = bitcast float %799 to i32, !dbg !35
  %801 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %800, i32 8, i32 31), !dbg !35
  %802 = bitcast i32 %801 to float, !dbg !35
  %803 = fadd float %799, %802, !dbg !39
  %804 = bitcast float %803 to i32, !dbg !35
  %805 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %804, i32 4, i32 31), !dbg !35
  %806 = bitcast i32 %805 to float, !dbg !35
  %807 = fadd float %803, %806, !dbg !39
  %808 = bitcast float %807 to i32, !dbg !35
  %809 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %808, i32 2, i32 31), !dbg !35
  %810 = bitcast i32 %809 to float, !dbg !35
  %811 = fadd float %807, %810, !dbg !39
  %812 = bitcast float %811 to i32, !dbg !35
  %813 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %812, i32 1, i32 31), !dbg !35
  %814 = bitcast i32 %813 to float, !dbg !35
  %815 = fadd float %811, %814, !dbg !39
  %816 = bitcast float %762 to i32, !dbg !35
  %817 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %816, i32 16, i32 31), !dbg !35
  %818 = bitcast i32 %817 to float, !dbg !35
  %819 = fadd float %762, %818, !dbg !39
  %820 = bitcast float %819 to i32, !dbg !35
  %821 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %820, i32 8, i32 31), !dbg !35
  %822 = bitcast i32 %821 to float, !dbg !35
  %823 = fadd float %819, %822, !dbg !39
  %824 = bitcast float %823 to i32, !dbg !35
  %825 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %824, i32 4, i32 31), !dbg !35
  %826 = bitcast i32 %825 to float, !dbg !35
  %827 = fadd float %823, %826, !dbg !39
  %828 = bitcast float %827 to i32, !dbg !35
  %829 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %828, i32 2, i32 31), !dbg !35
  %830 = bitcast i32 %829 to float, !dbg !35
  %831 = fadd float %827, %830, !dbg !39
  %832 = bitcast float %831 to i32, !dbg !35
  %833 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %832, i32 1, i32 31), !dbg !35
  %834 = bitcast i32 %833 to float, !dbg !35
  %835 = fadd float %831, %834, !dbg !39
  %836 = bitcast float %763 to i32, !dbg !35
  %837 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %836, i32 16, i32 31), !dbg !35
  %838 = bitcast i32 %837 to float, !dbg !35
  %839 = fadd float %763, %838, !dbg !39
  %840 = bitcast float %839 to i32, !dbg !35
  %841 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %840, i32 8, i32 31), !dbg !35
  %842 = bitcast i32 %841 to float, !dbg !35
  %843 = fadd float %839, %842, !dbg !39
  %844 = bitcast float %843 to i32, !dbg !35
  %845 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %844, i32 4, i32 31), !dbg !35
  %846 = bitcast i32 %845 to float, !dbg !35
  %847 = fadd float %843, %846, !dbg !39
  %848 = bitcast float %847 to i32, !dbg !35
  %849 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %848, i32 2, i32 31), !dbg !35
  %850 = bitcast i32 %849 to float, !dbg !35
  %851 = fadd float %847, %850, !dbg !39
  %852 = bitcast float %851 to i32, !dbg !35
  %853 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %852, i32 1, i32 31), !dbg !35
  %854 = bitcast i32 %853 to float, !dbg !35
  %855 = fadd float %851, %854, !dbg !39
  %856 = bitcast float %764 to i32, !dbg !35
  %857 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %856, i32 16, i32 31), !dbg !35
  %858 = bitcast i32 %857 to float, !dbg !35
  %859 = fadd float %764, %858, !dbg !39
  %860 = bitcast float %859 to i32, !dbg !35
  %861 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %860, i32 8, i32 31), !dbg !35
  %862 = bitcast i32 %861 to float, !dbg !35
  %863 = fadd float %859, %862, !dbg !39
  %864 = bitcast float %863 to i32, !dbg !35
  %865 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %864, i32 4, i32 31), !dbg !35
  %866 = bitcast i32 %865 to float, !dbg !35
  %867 = fadd float %863, %866, !dbg !39
  %868 = bitcast float %867 to i32, !dbg !35
  %869 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %868, i32 2, i32 31), !dbg !35
  %870 = bitcast i32 %869 to float, !dbg !35
  %871 = fadd float %867, %870, !dbg !39
  %872 = bitcast float %871 to i32, !dbg !35
  %873 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %872, i32 1, i32 31), !dbg !35
  %874 = bitcast i32 %873 to float, !dbg !35
  %875 = fadd float %871, %874, !dbg !39
  %876 = bitcast float %765 to i32, !dbg !35
  %877 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %876, i32 16, i32 31), !dbg !35
  %878 = bitcast i32 %877 to float, !dbg !35
  %879 = fadd float %765, %878, !dbg !39
  %880 = bitcast float %879 to i32, !dbg !35
  %881 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %880, i32 8, i32 31), !dbg !35
  %882 = bitcast i32 %881 to float, !dbg !35
  %883 = fadd float %879, %882, !dbg !39
  %884 = bitcast float %883 to i32, !dbg !35
  %885 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %884, i32 4, i32 31), !dbg !35
  %886 = bitcast i32 %885 to float, !dbg !35
  %887 = fadd float %883, %886, !dbg !39
  %888 = bitcast float %887 to i32, !dbg !35
  %889 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %888, i32 2, i32 31), !dbg !35
  %890 = bitcast i32 %889 to float, !dbg !35
  %891 = fadd float %887, %890, !dbg !39
  %892 = bitcast float %891 to i32, !dbg !35
  %893 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %892, i32 1, i32 31), !dbg !35
  %894 = bitcast i32 %893 to float, !dbg !35
  %895 = fadd float %891, %894, !dbg !39
  %896 = bitcast float %766 to i32, !dbg !35
  %897 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %896, i32 16, i32 31), !dbg !35
  %898 = bitcast i32 %897 to float, !dbg !35
  %899 = fadd float %766, %898, !dbg !39
  %900 = bitcast float %899 to i32, !dbg !35
  %901 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %900, i32 8, i32 31), !dbg !35
  %902 = bitcast i32 %901 to float, !dbg !35
  %903 = fadd float %899, %902, !dbg !39
  %904 = bitcast float %903 to i32, !dbg !35
  %905 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %904, i32 4, i32 31), !dbg !35
  %906 = bitcast i32 %905 to float, !dbg !35
  %907 = fadd float %903, %906, !dbg !39
  %908 = bitcast float %907 to i32, !dbg !35
  %909 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %908, i32 2, i32 31), !dbg !35
  %910 = bitcast i32 %909 to float, !dbg !35
  %911 = fadd float %907, %910, !dbg !39
  %912 = bitcast float %911 to i32, !dbg !35
  %913 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %912, i32 1, i32 31), !dbg !35
  %914 = bitcast i32 %913 to float, !dbg !35
  %915 = fadd float %911, %914, !dbg !39
  %916 = bitcast float %767 to i32, !dbg !35
  %917 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %916, i32 16, i32 31), !dbg !35
  %918 = bitcast i32 %917 to float, !dbg !35
  %919 = fadd float %767, %918, !dbg !39
  %920 = bitcast float %919 to i32, !dbg !35
  %921 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %920, i32 8, i32 31), !dbg !35
  %922 = bitcast i32 %921 to float, !dbg !35
  %923 = fadd float %919, %922, !dbg !39
  %924 = bitcast float %923 to i32, !dbg !35
  %925 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %924, i32 4, i32 31), !dbg !35
  %926 = bitcast i32 %925 to float, !dbg !35
  %927 = fadd float %923, %926, !dbg !39
  %928 = bitcast float %927 to i32, !dbg !35
  %929 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %928, i32 2, i32 31), !dbg !35
  %930 = bitcast i32 %929 to float, !dbg !35
  %931 = fadd float %927, %930, !dbg !39
  %932 = bitcast float %931 to i32, !dbg !35
  %933 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %932, i32 1, i32 31), !dbg !35
  %934 = bitcast i32 %933 to float, !dbg !35
  %935 = fadd float %931, %934, !dbg !39
  %936 = bitcast float %768 to i32, !dbg !35
  %937 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %936, i32 16, i32 31), !dbg !35
  %938 = bitcast i32 %937 to float, !dbg !35
  %939 = fadd float %768, %938, !dbg !39
  %940 = bitcast float %939 to i32, !dbg !35
  %941 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %940, i32 8, i32 31), !dbg !35
  %942 = bitcast i32 %941 to float, !dbg !35
  %943 = fadd float %939, %942, !dbg !39
  %944 = bitcast float %943 to i32, !dbg !35
  %945 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %944, i32 4, i32 31), !dbg !35
  %946 = bitcast i32 %945 to float, !dbg !35
  %947 = fadd float %943, %946, !dbg !39
  %948 = bitcast float %947 to i32, !dbg !35
  %949 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %948, i32 2, i32 31), !dbg !35
  %950 = bitcast i32 %949 to float, !dbg !35
  %951 = fadd float %947, %950, !dbg !39
  %952 = bitcast float %951 to i32, !dbg !35
  %953 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %952, i32 1, i32 31), !dbg !35
  %954 = bitcast i32 %953 to float, !dbg !35
  %955 = fadd float %951, %954, !dbg !39
  %956 = bitcast float %769 to i32, !dbg !35
  %957 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %956, i32 16, i32 31), !dbg !35
  %958 = bitcast i32 %957 to float, !dbg !35
  %959 = fadd float %769, %958, !dbg !39
  %960 = bitcast float %959 to i32, !dbg !35
  %961 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %960, i32 8, i32 31), !dbg !35
  %962 = bitcast i32 %961 to float, !dbg !35
  %963 = fadd float %959, %962, !dbg !39
  %964 = bitcast float %963 to i32, !dbg !35
  %965 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %964, i32 4, i32 31), !dbg !35
  %966 = bitcast i32 %965 to float, !dbg !35
  %967 = fadd float %963, %966, !dbg !39
  %968 = bitcast float %967 to i32, !dbg !35
  %969 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %968, i32 2, i32 31), !dbg !35
  %970 = bitcast i32 %969 to float, !dbg !35
  %971 = fadd float %967, %970, !dbg !39
  %972 = bitcast float %971 to i32, !dbg !35
  %973 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %972, i32 1, i32 31), !dbg !35
  %974 = bitcast i32 %973 to float, !dbg !35
  %975 = fadd float %971, %974, !dbg !39
  %976 = bitcast float %770 to i32, !dbg !35
  %977 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %976, i32 16, i32 31), !dbg !35
  %978 = bitcast i32 %977 to float, !dbg !35
  %979 = fadd float %770, %978, !dbg !39
  %980 = bitcast float %979 to i32, !dbg !35
  %981 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %980, i32 8, i32 31), !dbg !35
  %982 = bitcast i32 %981 to float, !dbg !35
  %983 = fadd float %979, %982, !dbg !39
  %984 = bitcast float %983 to i32, !dbg !35
  %985 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %984, i32 4, i32 31), !dbg !35
  %986 = bitcast i32 %985 to float, !dbg !35
  %987 = fadd float %983, %986, !dbg !39
  %988 = bitcast float %987 to i32, !dbg !35
  %989 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %988, i32 2, i32 31), !dbg !35
  %990 = bitcast i32 %989 to float, !dbg !35
  %991 = fadd float %987, %990, !dbg !39
  %992 = bitcast float %991 to i32, !dbg !35
  %993 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %992, i32 1, i32 31), !dbg !35
  %994 = bitcast i32 %993 to float, !dbg !35
  %995 = fadd float %991, %994, !dbg !39
  %996 = bitcast float %771 to i32, !dbg !35
  %997 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %996, i32 16, i32 31), !dbg !35
  %998 = bitcast i32 %997 to float, !dbg !35
  %999 = fadd float %771, %998, !dbg !39
  %1000 = bitcast float %999 to i32, !dbg !35
  %1001 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1000, i32 8, i32 31), !dbg !35
  %1002 = bitcast i32 %1001 to float, !dbg !35
  %1003 = fadd float %999, %1002, !dbg !39
  %1004 = bitcast float %1003 to i32, !dbg !35
  %1005 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1004, i32 4, i32 31), !dbg !35
  %1006 = bitcast i32 %1005 to float, !dbg !35
  %1007 = fadd float %1003, %1006, !dbg !39
  %1008 = bitcast float %1007 to i32, !dbg !35
  %1009 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1008, i32 2, i32 31), !dbg !35
  %1010 = bitcast i32 %1009 to float, !dbg !35
  %1011 = fadd float %1007, %1010, !dbg !39
  %1012 = bitcast float %1011 to i32, !dbg !35
  %1013 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1012, i32 1, i32 31), !dbg !35
  %1014 = bitcast i32 %1013 to float, !dbg !35
  %1015 = fadd float %1011, %1014, !dbg !39
  %1016 = bitcast float %772 to i32, !dbg !35
  %1017 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1016, i32 16, i32 31), !dbg !35
  %1018 = bitcast i32 %1017 to float, !dbg !35
  %1019 = fadd float %772, %1018, !dbg !39
  %1020 = bitcast float %1019 to i32, !dbg !35
  %1021 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1020, i32 8, i32 31), !dbg !35
  %1022 = bitcast i32 %1021 to float, !dbg !35
  %1023 = fadd float %1019, %1022, !dbg !39
  %1024 = bitcast float %1023 to i32, !dbg !35
  %1025 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1024, i32 4, i32 31), !dbg !35
  %1026 = bitcast i32 %1025 to float, !dbg !35
  %1027 = fadd float %1023, %1026, !dbg !39
  %1028 = bitcast float %1027 to i32, !dbg !35
  %1029 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1028, i32 2, i32 31), !dbg !35
  %1030 = bitcast i32 %1029 to float, !dbg !35
  %1031 = fadd float %1027, %1030, !dbg !39
  %1032 = bitcast float %1031 to i32, !dbg !35
  %1033 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1032, i32 1, i32 31), !dbg !35
  %1034 = bitcast i32 %1033 to float, !dbg !35
  %1035 = fadd float %1031, %1034, !dbg !39
  %1036 = bitcast float %773 to i32, !dbg !35
  %1037 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1036, i32 16, i32 31), !dbg !35
  %1038 = bitcast i32 %1037 to float, !dbg !35
  %1039 = fadd float %773, %1038, !dbg !39
  %1040 = bitcast float %1039 to i32, !dbg !35
  %1041 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1040, i32 8, i32 31), !dbg !35
  %1042 = bitcast i32 %1041 to float, !dbg !35
  %1043 = fadd float %1039, %1042, !dbg !39
  %1044 = bitcast float %1043 to i32, !dbg !35
  %1045 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1044, i32 4, i32 31), !dbg !35
  %1046 = bitcast i32 %1045 to float, !dbg !35
  %1047 = fadd float %1043, %1046, !dbg !39
  %1048 = bitcast float %1047 to i32, !dbg !35
  %1049 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1048, i32 2, i32 31), !dbg !35
  %1050 = bitcast i32 %1049 to float, !dbg !35
  %1051 = fadd float %1047, %1050, !dbg !39
  %1052 = bitcast float %1051 to i32, !dbg !35
  %1053 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1052, i32 1, i32 31), !dbg !35
  %1054 = bitcast i32 %1053 to float, !dbg !35
  %1055 = fadd float %1051, %1054, !dbg !39
  %1056 = bitcast float %774 to i32, !dbg !35
  %1057 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1056, i32 16, i32 31), !dbg !35
  %1058 = bitcast i32 %1057 to float, !dbg !35
  %1059 = fadd float %774, %1058, !dbg !39
  %1060 = bitcast float %1059 to i32, !dbg !35
  %1061 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1060, i32 8, i32 31), !dbg !35
  %1062 = bitcast i32 %1061 to float, !dbg !35
  %1063 = fadd float %1059, %1062, !dbg !39
  %1064 = bitcast float %1063 to i32, !dbg !35
  %1065 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1064, i32 4, i32 31), !dbg !35
  %1066 = bitcast i32 %1065 to float, !dbg !35
  %1067 = fadd float %1063, %1066, !dbg !39
  %1068 = bitcast float %1067 to i32, !dbg !35
  %1069 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1068, i32 2, i32 31), !dbg !35
  %1070 = bitcast i32 %1069 to float, !dbg !35
  %1071 = fadd float %1067, %1070, !dbg !39
  %1072 = bitcast float %1071 to i32, !dbg !35
  %1073 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1072, i32 1, i32 31), !dbg !35
  %1074 = bitcast i32 %1073 to float, !dbg !35
  %1075 = fadd float %1071, %1074, !dbg !39
  %1076 = bitcast float %775 to i32, !dbg !35
  %1077 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1076, i32 16, i32 31), !dbg !35
  %1078 = bitcast i32 %1077 to float, !dbg !35
  %1079 = fadd float %775, %1078, !dbg !39
  %1080 = bitcast float %1079 to i32, !dbg !35
  %1081 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1080, i32 8, i32 31), !dbg !35
  %1082 = bitcast i32 %1081 to float, !dbg !35
  %1083 = fadd float %1079, %1082, !dbg !39
  %1084 = bitcast float %1083 to i32, !dbg !35
  %1085 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1084, i32 4, i32 31), !dbg !35
  %1086 = bitcast i32 %1085 to float, !dbg !35
  %1087 = fadd float %1083, %1086, !dbg !39
  %1088 = bitcast float %1087 to i32, !dbg !35
  %1089 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1088, i32 2, i32 31), !dbg !35
  %1090 = bitcast i32 %1089 to float, !dbg !35
  %1091 = fadd float %1087, %1090, !dbg !39
  %1092 = bitcast float %1091 to i32, !dbg !35
  %1093 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1092, i32 1, i32 31), !dbg !35
  %1094 = bitcast i32 %1093 to float, !dbg !35
  %1095 = fadd float %1091, %1094, !dbg !39
  %1096 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %729, float %795) #2, !dbg !41
  %1097 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %731, float %815) #2, !dbg !41
  %1098 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %733, float %835) #2, !dbg !41
  %1099 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %735, float %855) #2, !dbg !41
  %1100 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %737, float %875) #2, !dbg !41
  %1101 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %739, float %895) #2, !dbg !41
  %1102 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %741, float %915) #2, !dbg !41
  %1103 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %743, float %935) #2, !dbg !41
  %1104 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %745, float %955) #2, !dbg !41
  %1105 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %747, float %975) #2, !dbg !41
  %1106 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %749, float %995) #2, !dbg !41
  %1107 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %751, float %1015) #2, !dbg !41
  %1108 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %753, float %1035) #2, !dbg !41
  %1109 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %755, float %1055) #2, !dbg !41
  %1110 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %757, float %1075) #2, !dbg !41
  %1111 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %759, float %1095) #2, !dbg !41
  %1112 = bitcast float %1096 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1112, ptr addrspace(1) %63, i1 %94) #2, !dbg !42
  %1113 = bitcast float %1097 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1113, ptr addrspace(1) %65, i1 %95) #2, !dbg !42
  %1114 = bitcast float %1098 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1114, ptr addrspace(1) %67, i1 %96) #2, !dbg !42
  %1115 = bitcast float %1099 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1115, ptr addrspace(1) %69, i1 %97) #2, !dbg !42
  %1116 = bitcast float %1100 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1116, ptr addrspace(1) %71, i1 %98) #2, !dbg !42
  %1117 = bitcast float %1101 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1117, ptr addrspace(1) %73, i1 %99) #2, !dbg !42
  %1118 = bitcast float %1102 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1118, ptr addrspace(1) %75, i1 %100) #2, !dbg !42
  %1119 = bitcast float %1103 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1119, ptr addrspace(1) %77, i1 %101) #2, !dbg !42
  %1120 = bitcast float %1104 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1120, ptr addrspace(1) %79, i1 %102) #2, !dbg !42
  %1121 = bitcast float %1105 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1121, ptr addrspace(1) %81, i1 %103) #2, !dbg !42
  %1122 = bitcast float %1106 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1122, ptr addrspace(1) %83, i1 %103) #2, !dbg !42
  %1123 = bitcast float %1107 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1123, ptr addrspace(1) %85, i1 %103) #2, !dbg !42
  %1124 = bitcast float %1108 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1124, ptr addrspace(1) %87, i1 %103) #2, !dbg !42
  %1125 = bitcast float %1109 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1125, ptr addrspace(1) %89, i1 %103) #2, !dbg !42
  %1126 = bitcast float %1110 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1126, ptr addrspace(1) %91, i1 %103) #2, !dbg !42
  %1127 = bitcast float %1111 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1127, ptr addrspace(1) %93, i1 %103) #2, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctnbbocbqg4rxujbqjpjqkbirhic7dlaek7wkasuk5vuikybfpm2.py", directory: "inductor_cache/tn")
!4 = !{ptr @triton_per_fused__softmax_4, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_4, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_4", linkageName: "triton_per_fused__softmax_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 28, column: 21, scope: !7)
!17 = !DILocation(line: 31, column: 42, scope: !7)
!18 = !DILocation(line: 31, column: 39, scope: !7)
!19 = !DILocation(line: 31, column: 34, scope: !7)
!20 = !DILocation(line: 31, column: 55, scope: !7)
!21 = !DILocation(line: 31, column: 47, scope: !7)
!22 = !DILocation(line: 33, column: 41, scope: !7)
!23 = !DILocation(line: 131, column: 29, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!25 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!26 = !DILocation(line: 34, column: 37, scope: !7)
!27 = !DILocation(line: 118, column: 15, scope: !28, inlinedAt: !26)
!28 = distinct !DILexicalBlockFile(scope: !24, file: !25, discriminator: 0)
!29 = !DILocation(line: 120, column: 21, scope: !28, inlinedAt: !26)
!30 = !DILocation(line: 120, column: 16, scope: !28, inlinedAt: !26)
!31 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !26)
!32 = !DILocation(line: 35, column: 18, scope: !7)
!33 = !DILocation(line: 36, column: 23, scope: !7)
!34 = !DILocation(line: 38, column: 41, scope: !7)
!35 = !DILocation(line: 267, column: 36, scope: !36, inlinedAt: !38)
!36 = distinct !DILexicalBlockFile(scope: !7, file: !37, discriminator: 0)
!37 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!38 = !DILocation(line: 39, column: 25, scope: !7)
!39 = !DILocation(line: 256, column: 15, scope: !40, inlinedAt: !38)
!40 = distinct !DILexicalBlockFile(scope: !36, file: !37, discriminator: 0)
!41 = !DILocation(line: 40, column: 19, scope: !7)
!42 = !DILocation(line: 41, column: 48, scope: !7)
!43 = !DILocation(line: 41, column: 4, scope: !7)
