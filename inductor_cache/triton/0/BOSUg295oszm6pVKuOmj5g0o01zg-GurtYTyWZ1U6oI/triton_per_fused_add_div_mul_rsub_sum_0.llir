; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_add_div_mul_rsub_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %9 = and i32 %8, 15, !dbg !10
  %10 = zext nneg i32 %9 to i64, !dbg !11
  %11 = getelementptr float, ptr addrspace(1) %2, i64 %10, !dbg !11
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #3, !dbg !12
  %13 = bitcast i32 %12 to float, !dbg !12
  %14 = getelementptr float, ptr addrspace(1) %3, i64 %10, !dbg !13
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 true) #3, !dbg !14
  %16 = bitcast i32 %15 to float, !dbg !14
  %17 = getelementptr float, ptr addrspace(1) %4, i64 %10, !dbg !15
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 true) #3, !dbg !16
  %19 = bitcast i32 %18 to float, !dbg !16
  %20 = fmul float %13, %16, !dbg !17
  %21 = fmul float %20, %19, !dbg !18
  %22 = bitcast float %21 to i32, !dbg !19
  %23 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %22, i32 8, i32 31), !dbg !19
  %24 = bitcast i32 %23 to float, !dbg !19
  %25 = fadd float %21, %24, !dbg !23
  %26 = bitcast float %25 to i32, !dbg !19
  %27 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %26, i32 4, i32 31), !dbg !19
  %28 = bitcast i32 %27 to float, !dbg !19
  %29 = fadd float %25, %28, !dbg !23
  %30 = bitcast float %29 to i32, !dbg !19
  %31 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %30, i32 2, i32 31), !dbg !19
  %32 = bitcast i32 %31 to float, !dbg !19
  %33 = fadd float %29, %32, !dbg !23
  %34 = bitcast float %33 to i32, !dbg !19
  %35 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %34, i32 1, i32 31), !dbg !19
  %36 = bitcast i32 %35 to float, !dbg !19
  %37 = fadd float %33, %36, !dbg !23
  %38 = bitcast float %20 to i32, !dbg !25
  %39 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %38, i32 8, i32 31), !dbg !25
  %40 = bitcast i32 %39 to float, !dbg !25
  %41 = fadd float %20, %40, !dbg !27
  %42 = bitcast float %41 to i32, !dbg !25
  %43 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %42, i32 4, i32 31), !dbg !25
  %44 = bitcast i32 %43 to float, !dbg !25
  %45 = fadd float %41, %44, !dbg !27
  %46 = bitcast float %45 to i32, !dbg !25
  %47 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %46, i32 2, i32 31), !dbg !25
  %48 = bitcast i32 %47 to float, !dbg !25
  %49 = fadd float %45, %48, !dbg !27
  %50 = bitcast float %49 to i32, !dbg !25
  %51 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %50, i32 1, i32 31), !dbg !25
  %52 = bitcast i32 %51 to float, !dbg !25
  %53 = fadd float %49, %52, !dbg !27
  %54 = fmul float %16, %19, !dbg !28
  %55 = bitcast float %54 to i32, !dbg !29
  %56 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %55, i32 8, i32 31), !dbg !29
  %57 = bitcast i32 %56 to float, !dbg !29
  %58 = fadd float %54, %57, !dbg !31
  %59 = bitcast float %58 to i32, !dbg !29
  %60 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %59, i32 4, i32 31), !dbg !29
  %61 = bitcast i32 %60 to float, !dbg !29
  %62 = fadd float %58, %61, !dbg !31
  %63 = bitcast float %62 to i32, !dbg !29
  %64 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %63, i32 2, i32 31), !dbg !29
  %65 = bitcast i32 %64 to float, !dbg !29
  %66 = fadd float %62, %65, !dbg !31
  %67 = bitcast float %66 to i32, !dbg !29
  %68 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %67, i32 1, i32 31), !dbg !29
  %69 = bitcast i32 %68 to float, !dbg !29
  %70 = fadd float %66, %69, !dbg !31
  %71 = fadd float %70, 0x3EB0C6F7A0000000, !dbg !32
  %72 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %37, float %71) #3, !dbg !33
  %73 = fsub float 1.000000e+00, %72, !dbg !34
  %74 = fadd float %53, 0x3EB0C6F7A0000000, !dbg !35
  %75 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %37, float %74) #3, !dbg !36
  %76 = fsub float 1.000000e+00, %75, !dbg !37
  %77 = fmul float %73, 5.000000e+00, !dbg !38
  %78 = fadd float %77, %76, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %79 = and i32 %8, 63, !dbg !41
  %80 = icmp eq i32 %79, 0, !dbg !41
  %81 = bitcast float %73 to i32, !dbg !41
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %81, ptr addrspace(1) %0, i1 %80) #3, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %82 = bitcast float %76 to i32, !dbg !43
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %82, ptr addrspace(1) %1, i1 %80) #3, !dbg !43
  %83 = bitcast float %78 to i32, !dbg !44
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %83, ptr addrspace(1) %5, i1 %80) #3, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ceadl6bjmy2l5c7ek7jkm6ebh2d35cbmqjluk4toi54sjzlmati4.py", directory: "inductor_cache/ea")
!4 = !{ptr @triton_per_fused_add_div_mul_rsub_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_div_mul_rsub_sum_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_div_mul_rsub_sum_0", linkageName: "triton_per_fused_add_div_mul_rsub_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 30, column: 30, scope: !7)
!12 = !DILocation(line: 30, column: 35, scope: !7)
!13 = !DILocation(line: 31, column: 30, scope: !7)
!14 = !DILocation(line: 31, column: 35, scope: !7)
!15 = !DILocation(line: 32, column: 30, scope: !7)
!16 = !DILocation(line: 32, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 18, scope: !7)
!18 = !DILocation(line: 34, column: 18, scope: !7)
!19 = !DILocation(line: 267, column: 36, scope: !20, inlinedAt: !22)
!20 = distinct !DILexicalBlockFile(scope: !7, file: !21, discriminator: 0)
!21 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!22 = !DILocation(line: 36, column: 24, scope: !7)
!23 = !DILocation(line: 256, column: 15, scope: !24, inlinedAt: !22)
!24 = distinct !DILexicalBlockFile(scope: !20, file: !21, discriminator: 0)
!25 = !DILocation(line: 267, column: 36, scope: !20, inlinedAt: !26)
!26 = !DILocation(line: 38, column: 25, scope: !7)
!27 = !DILocation(line: 256, column: 15, scope: !24, inlinedAt: !26)
!28 = !DILocation(line: 39, column: 19, scope: !7)
!29 = !DILocation(line: 267, column: 36, scope: !20, inlinedAt: !30)
!30 = !DILocation(line: 41, column: 26, scope: !7)
!31 = !DILocation(line: 256, column: 15, scope: !24, inlinedAt: !30)
!32 = !DILocation(line: 43, column: 20, scope: !7)
!33 = !DILocation(line: 44, column: 19, scope: !7)
!34 = !DILocation(line: 46, column: 20, scope: !7)
!35 = !DILocation(line: 47, column: 20, scope: !7)
!36 = !DILocation(line: 48, column: 19, scope: !7)
!37 = !DILocation(line: 49, column: 20, scope: !7)
!38 = !DILocation(line: 51, column: 20, scope: !7)
!39 = !DILocation(line: 52, column: 20, scope: !7)
!40 = !DILocation(line: 53, column: 4, scope: !7)
!41 = !DILocation(line: 54, column: 71, scope: !7)
!42 = !DILocation(line: 55, column: 4, scope: !7)
!43 = !DILocation(line: 56, column: 71, scope: !7)
!44 = !DILocation(line: 57, column: 68, scope: !7)
!45 = !DILocation(line: 57, column: 4, scope: !7)
