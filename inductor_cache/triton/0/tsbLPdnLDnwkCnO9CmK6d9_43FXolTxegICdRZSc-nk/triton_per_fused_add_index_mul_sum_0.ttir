#loc = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":19:0)
#loc1 = loc(unknown)
#loc40 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":47:26)
#loc56 = loc(callsite(#loc1 at #loc40))
module {
  tt.func public @triton_per_fused_add_index_mul_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":19:0), %arg3: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":19:0), %arg7: i32 loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":19:0), %arg8: i32 loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<40> : tensor<1x1xi64> loc(#loc1)
    %true = arith.constant true loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<1x1xi64> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1x1xi64> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_3 = arith.constant dense<40> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_3 : tensor<1x64xi32> loc(#loc6)
    %6 = tt.addptr %arg1, %0 : !tt.ptr<i64>, i32 loc(#loc7)
    %7 = tt.splat %6 : !tt.ptr<i64> -> tensor<1x1x!tt.ptr<i64>> loc(#loc7)
    %8 = tt.load %7, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<i64>> loc(#loc8)
    %9 = tt.addptr %arg3, %0 : !tt.ptr<i64>, i32 loc(#loc9)
    %10 = tt.splat %9 : !tt.ptr<i64> -> tensor<1x1x!tt.ptr<i64>> loc(#loc9)
    %11 = tt.load %10, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<i64>> loc(#loc10)
    %12 = arith.addi %8, %cst_0 : tensor<1x1xi64> loc(#loc11)
    %13 = arith.cmpi slt, %8, %cst_1 : tensor<1x1xi64> loc(#loc12)
    %14 = arith.select %13, %12, %8 : tensor<1x1xi1>, tensor<1x1xi64> loc(#loc13)
    %15 = arith.cmpi sge, %14, %cst_1 : tensor<1x1xi64> loc(#loc14)
    %16 = arith.cmpi slt, %14, %cst_0 : tensor<1x1xi64> loc(#loc15)
    %17 = arith.andi %15, %16 : tensor<1x1xi1> loc(#loc16)
    %18 = arith.xori %1, %true : i1 loc(#loc17)
    %19 = tt.splat %18 : i1 -> tensor<1x1xi1> loc(#loc17)
    %20 = arith.ori %17, %19 : tensor<1x1xi1> loc(#loc18)
    %21 = tt.broadcast %20 : tensor<1x1xi1> -> tensor<1x64xi1> loc(#loc18)
    tt.assert %21, "index out of bounds: 0 <= tmp4 < 4" : tensor<1x64xi1> loc(#loc19)
    %22 = arith.muli %14, %cst : tensor<1x1xi64> loc(#loc20)
    %23 = tt.broadcast %22 : tensor<1x1xi64> -> tensor<1x64xi64> loc(#loc20)
    %24 = arith.extsi %4 : tensor<1x64xi32> to tensor<1x64xi64> loc(#loc21)
    %25 = arith.addi %24, %23 : tensor<1x64xi64> loc(#loc21)
    %26 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc22)
    %27 = tt.addptr %26, %25 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi64> loc(#loc22)
    %28 = tt.splat %1 : i1 -> tensor<1x64xi1> loc(#loc23)
    %29 = arith.andi %5, %28 : tensor<1x64xi1> loc(#loc23)
    %30 = tt.load %27, %29, %cst_2 : tensor<1x64x!tt.ptr<f32>> loc(#loc24)
    %31 = arith.addi %11, %cst_0 : tensor<1x1xi64> loc(#loc25)
    %32 = arith.cmpi slt, %11, %cst_1 : tensor<1x1xi64> loc(#loc26)
    %33 = arith.select %32, %31, %11 : tensor<1x1xi1>, tensor<1x1xi64> loc(#loc27)
    %34 = arith.cmpi sge, %33, %cst_1 : tensor<1x1xi64> loc(#loc28)
    %35 = arith.cmpi slt, %33, %cst_0 : tensor<1x1xi64> loc(#loc29)
    %36 = arith.andi %34, %35 : tensor<1x1xi1> loc(#loc30)
    %37 = arith.ori %36, %19 : tensor<1x1xi1> loc(#loc31)
    %38 = tt.broadcast %37 : tensor<1x1xi1> -> tensor<1x64xi1> loc(#loc31)
    tt.assert %38, "index out of bounds: 0 <= tmp10 < 4" : tensor<1x64xi1> loc(#loc32)
    %39 = arith.muli %33, %cst : tensor<1x1xi64> loc(#loc33)
    %40 = tt.broadcast %39 : tensor<1x1xi64> -> tensor<1x64xi64> loc(#loc33)
    %41 = arith.addi %24, %40 : tensor<1x64xi64> loc(#loc34)
    %42 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc35)
    %43 = tt.addptr %42, %41 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi64> loc(#loc35)
    %44 = tt.load %43, %29, %cst_2 : tensor<1x64x!tt.ptr<f32>> loc(#loc36)
    %45 = arith.mulf %30, %44 : tensor<1x64xf32> loc(#loc37)
    %46 = arith.select %29, %45, %cst_2 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc38)
    %47 = "tt.reduce"(%46) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc40)), %arg10: f32 loc(callsite(#loc1 at #loc40))):
      %59 = arith.addf %arg9, %arg10 : f32 loc(#loc58)
      tt.reduce.return %59 : f32 loc(#loc55)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc55)
    %48 = tt.expand_dims %47 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc42)
    tt.assert %20, "index out of bounds: 0 <= tmp20 < 4" : tensor<1x1xi1> loc(#loc43)
    %49 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc44)
    %50 = tt.addptr %49, %14 : tensor<1x1x!tt.ptr<f32>>, tensor<1x1xi64> loc(#loc44)
    %51 = tt.load %50, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc45)
    %52 = arith.addf %48, %51 : tensor<1x1xf32> loc(#loc46)
    tt.assert %37, "index out of bounds: 0 <= tmp25 < 4" : tensor<1x1xi1> loc(#loc47)
    %53 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc48)
    %54 = tt.addptr %53, %33 : tensor<1x1x!tt.ptr<f32>>, tensor<1x1xi64> loc(#loc48)
    %55 = tt.load %54, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc49)
    %56 = arith.addf %52, %55 : tensor<1x1xf32> loc(#loc50)
    gpu.barrier loc(#loc51)
    %57 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc52)
    %58 = tt.splat %57 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc52)
    tt.store %58, %56, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc53)
    tt.return loc(#loc54)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":23:28)
#loc3 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":25:21)
#loc4 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":26:26)
#loc5 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":26:34)
#loc6 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":28:21)
#loc7 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":31:30)
#loc8 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":31:35)
#loc9 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":32:30)
#loc10 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":32:35)
#loc11 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":34:18)
#loc12 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":35:18)
#loc13 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":36:32)
#loc14 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":37:28)
#loc15 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":37:44)
#loc16 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":37:37)
#loc17 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":37:52)
#loc18 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":37:50)
#loc19 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":37:60)
#loc20 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":38:38)
#loc21 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":38:35)
#loc22 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":38:30)
#loc23 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":38:53)
#loc24 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":38:45)
#loc25 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":39:18)
#loc26 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":40:18)
#loc27 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":41:33)
#loc28 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":42:28)
#loc29 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":42:46)
#loc30 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":42:38)
#loc31 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":42:52)
#loc32 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":42:62)
#loc33 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":43:39)
#loc34 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":43:36)
#loc35 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":43:31)
#loc36 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":43:47)
#loc37 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":44:19)
#loc38 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":46:43)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc42 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":47:29)
#loc43 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":51:62)
#loc44 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":52:31)
#loc45 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":52:39)
#loc46 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":53:20)
#loc47 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":56:62)
#loc48 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":57:31)
#loc49 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":57:39)
#loc50 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":58:20)
#loc51 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":59:4)
#loc52 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":60:28)
#loc53 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":60:40)
#loc54 = loc("inductor_cache/n7/cn7p3isguxjytmbfkivtwkvofg5f7uax5obbunwhhmxg3hbppgkt.py":60:4)
#loc55 = loc(callsite(#loc39 at #loc40))
#loc57 = loc(callsite(#loc41 at #loc39))
#loc58 = loc(callsite(#loc57 at #loc40))
