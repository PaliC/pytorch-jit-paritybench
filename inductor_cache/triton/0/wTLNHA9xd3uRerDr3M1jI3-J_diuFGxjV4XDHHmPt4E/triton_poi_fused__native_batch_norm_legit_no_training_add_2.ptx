//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_2 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_2
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_10,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_11,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_12,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_13,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_14,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_15
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<81>;
	.reg .f32 	%f<28>;
	.reg .b64 	%rd<33>;
	.loc	1 19 0                          // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_0];
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:22:33
	shl.b32 	%r29, %r1, 3;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_2];
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_3];
	.loc	1 23 44                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:23:44
	mov.u32 	%r30, %tid.x;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_4];
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_5];
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_6];
	bfe.u32 	%r31, %r30, 2, 3;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_7];
	and.b32  	%r32, %r30, 3;
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_8];
	and.b32  	%r33, %r30, 7;
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_9];
	.loc	1 23 23                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:23:23
	or.b32  	%r34, %r31, %r29;
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_10];
	or.b32  	%r35, %r29, %r33;
	ld.param.u64 	%rd26, [triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_11];
	.loc	1 24 21                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:24:21
	setp.lt.s32 	%p18, %r34, 16;
	ld.param.u64 	%rd27, [triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_12];
	setp.lt.s32 	%p4, %r35, 16;
	ld.param.u64 	%rd28, [triton_poi_fused__native_batch_norm_legit_no_training_add_2_param_13];
	.loc	1 25 28                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:25:33
	shl.b32 	%r36, %r2, 2;
	.loc	1 26 44                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:26:44
	bfe.u32 	%r37, %r30, 3, 2;
	.loc	1 26 23                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:26:23
	or.b32  	%r38, %r36, %r32;
	or.b32  	%r39, %r37, %r36;
	.loc	1 27 21                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:27:21
	setp.lt.s32 	%p19, %r38, 4;
	setp.lt.s32 	%p20, %r39, 4;
	.loc	1 30 19                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:30:19
	bfe.s32 	%r40, %r1, 28, 1;
	shr.u32 	%r41, %r40, 30;
	add.s32 	%r42, %r34, %r41;
	and.b32  	%r43, %r42, 1073741820;
	sub.s32 	%r44, %r34, %r43;
	.loc	1 31 19                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:31:19
	shr.s32 	%r46, %r35, 31;
	shr.u32 	%r47, %r46, 30;
	add.s32 	%r48, %r35, %r47;
	.loc	1 30 19                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:30:19
	and.b32  	%r49, %r48, -4;
	sub.s32 	%r50, %r35, %r49;
	.loc	1 32 37                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:32:37
	shl.b32 	%r51, %r34, 2;
	.loc	1 32 35                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:32:35
	add.s32 	%r52, %r38, %r51;
	.loc	1 32 30                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:32:30
	mul.wide.s32 	%rd29, %r52, 4;
	add.s64 	%rd1, %rd15, %rd29;
	.loc	1 32 50                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:32:50
	and.pred  	%p1, %p18, %p19;
	and.pred  	%p3, %p4, %p20;
	.loc	1 32 42                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:32:42
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	shl.b32 	%r53, %r30, 3;
	and.b32  	%r54, %r53, 24;
	or.b32  	%r55, %r31, %r54;
	and.b32  	%r56, %r30, 31;
	shr.u32 	%r57, %r54, 1;
	mov.u32 	%r58, global_smem;
	add.s32 	%r59, %r58, %r57;
	shl.b32 	%r60, %r55, 2;
	add.s32 	%r4, %r59, %r60;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r4 + 0 ], %r5;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r61, %r30, 1;
	and.b32  	%r62, %r61, 12;
	add.s32 	%r63, %r58, %r62;
	shl.b32 	%r64, %r56, 2;
	add.s32 	%r65, %r63, %r64;
	ld.shared.f32 	%f1, [%r65];
	.loc	1 33 37                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:33:37
	shl.b32 	%r66, %r39, 2;
	.loc	1 33 35                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:33:35
	add.s32 	%r67, %r66, %r50;
	.loc	1 33 45                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:33:45
	shl.b32 	%r68, %r48, 2;
	and.b32  	%r69, %r68, -16;
	.loc	1 33 42                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:33:42
	add.s32 	%r70, %r67, %r69;
	.loc	1 33 30                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:33:30
	mul.wide.s32 	%rd30, %r70, 4;
	add.s64 	%rd2, %rd16, %rd30;
	.loc	1 33 50                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:33:50
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r6;
	.loc	1 34 30                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:34:30
	mul.wide.s32 	%rd31, %r50, 4;
	add.s64 	%rd3, %rd17, %rd31;
	.loc	1 34 35                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:34:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r7;
	.loc	1 35 37                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:35:37
	shl.b32 	%r71, %r44, 2;
	.loc	1 35 35                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:35:35
	add.s32 	%r72, %r71, %r38;
	.loc	1 35 30                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:35:30
	mul.wide.s32 	%rd32, %r72, 4;
	add.s64 	%rd4, %rd18, %rd32;
	.loc	1 35 42                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:35:42
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 36 30                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:36:30
	add.s64 	%rd5, %rd19, %rd32;
	.loc	1 36 42                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:36:42
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r9;
	.loc	1 37 31                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:37:31
	add.s64 	%rd6, %rd20, %rd32;
	.loc	1 37 43                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:37:43
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:38:31
	add.s64 	%rd7, %rd21, %rd32;
	.loc	1 38 43                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:38:43
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:39:31
	add.s64 	%rd8, %rd22, %rd32;
	.loc	1 39 43                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:39:43
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 40 31                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:40:31
	add.s64 	%rd9, %rd23, %rd32;
	.loc	1 40 43                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:40:43
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r13;
	.loc	1 41 31                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:41:31
	add.s64 	%rd10, %rd24, %rd32;
	.loc	1 41 43                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:41:43
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 42 32                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:42:32
	add.s64 	%rd11, %rd25, %rd32;
	.loc	1 42 44                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:42:44
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 43 18                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:43:18
	add.f32 	%f6, %f2, %f3;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p21, %f6, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f7, 0f00000000, %f6, %p21;
$L__tmp2:
	.loc	1 46 18                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:46:18
	add.f32 	%f8, %f1, %f7;
	bar.sync 	0;
	shl.b32 	%r73, %r30, 2;
	and.b32  	%r74, %r73, 28;
	or.b32  	%r75, %r37, %r74;
	add.s32 	%r76, %r58, %r74;
	shl.b32 	%r77, %r75, 2;
	add.s32 	%r16, %r76, %r77;
	mov.b32 	%r17, %f8;
	// begin inline asm
	@%p2 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r78, %r30, 28;
	add.s32 	%r79, %r58, %r78;
	add.s32 	%r80, %r79, %r64;
	ld.shared.f32 	%f9, [%r80];
	.loc	1 49 19                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:49:19
	add.f32 	%f10, %f4, 0f3727C5AC;
	.loc	1 50 27                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:50:27
	sqrt.approx.ftz.f32 	%f11, %f10;
	.loc	1 52 20                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:52:20
	mov.b32 	%r20, %f11;
	mov.b32 	%r19, 1065353216;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f12, %r18;
	.loc	1 59 20                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:59:20
	add.f32 	%f13, %f5, 0f3727C5AC;
	.loc	1 60 27                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:60:27
	sqrt.approx.ftz.f32 	%f14, %f13;
	.loc	1 35 42                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:35:42
	mov.b32 	%f15, %r8;
	.loc	1 47 18                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:47:18
	sub.f32 	%f16, %f9, %f15;
	.loc	1 55 19                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:55:19
	mul.f32 	%f17, %f16, %f12;
	.loc	1 37 43                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:37:43
	mov.b32 	%f18, %r10;
	.loc	1 38 43                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:38:43
	mov.b32 	%f19, %r11;
	.loc	1 57 20                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:57:20
	fma.rn.f32 	%f20, %f17, %f18, %f19;
	.loc	1 39 43                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:39:43
	mov.b32 	%f21, %r12;
	.loc	1 58 20                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:58:20
	sub.f32 	%f22, %f20, %f21;
	.loc	1 42 44                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:42:44
	mov.b32 	%f23, %r15;
	.loc	1 41 43                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:41:43
	mov.b32 	%f24, %r14;
	.loc	1 61 20                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:61:20
	mov.b32 	%r23, %f14;
	// begin inline asm
	div.full.f32 %r21, %r19, %r23;
	// end inline asm
	mov.b32 	%f25, %r21;
	.loc	1 63 20                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:63:20
	mul.f32 	%f26, %f22, %f25;
	.loc	1 65 20                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:65:20
	fma.rn.f32 	%f27, %f26, %f24, %f23;
	.loc	1 66 25                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:66:25
	add.s64 	%rd12, %rd26, %rd29;
	.loc	1 66 43                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:66:43
	bar.sync 	0;
	// begin inline asm
	@%p2 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r26, [%r80];
	// begin inline asm
	@%p1 st.global.b32 [ %rd12 + 0 ], { %r26 };
	// end inline asm
	.loc	1 67 25                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:67:25
	add.s64 	%rd13, %rd27, %rd29;
	.loc	1 67 44                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:67:44
	mov.b32 	%r27, %f20;
	// begin inline asm
	@%p1 st.global.b32 [ %rd13 + 0 ], { %r27 };
	// end inline asm
	.loc	1 68 25                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:68:25
	add.s64 	%rd14, %rd28, %rd29;
	.loc	1 68 44                         // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:68:44
	mov.b32 	%r28, %f27;
	// begin inline asm
	@%p1 st.global.b32 [ %rd14 + 0 ], { %r28 };
	// end inline asm
	.loc	1 68 4                          // cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py:68:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qn/cqncs52p2cuscbxxnbktpxxboosgyzzt2xapufoo4qmqesw6ve46.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 204                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 110
.b8 99
.b8 115
.b8 53
.b8 50
.b8 112
.b8 50
.b8 99
.b8 117
.b8 115
.b8 99
.b8 98
.b8 120
.b8 120
.b8 110
.b8 98
.b8 107
.b8 116
.b8 112
.b8 120
.b8 120
.b8 98
.b8 111
.b8 111
.b8 115
.b8 103
.b8 121
.b8 122
.b8 122
.b8 116
.b8 50
.b8 120
.b8 97
.b8 112
.b8 117
.b8 102
.b8 111
.b8 111
.b8 52
.b8 113
.b8 109
.b8 113
.b8 101
.b8 115
.b8 119
.b8 54
.b8 118
.b8 101
.b8 52
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
