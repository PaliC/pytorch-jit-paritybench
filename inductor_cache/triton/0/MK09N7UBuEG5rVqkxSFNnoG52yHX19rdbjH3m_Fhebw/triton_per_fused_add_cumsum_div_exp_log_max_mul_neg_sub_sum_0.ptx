//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0 // -- Begin function triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0
.visible .entry triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0_param_2,
	.param .u32 triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<53>;
	.reg .b32 	%r<112>;
	.reg .f32 	%f<261>;
	.reg .b64 	%rd<8>;
$L__func_begin0:

// %bb.0:
	.loc	1 32 26                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:32:26
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd4, [triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0_param_1];
	and.b32  	%r2, %r1, 31;
	ld.param.u64 	%rd5, [triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0_param_2];
	shl.b32 	%r25, %r1, 2;
	and.b32  	%r26, %r25, 252;
	.loc	1 36 30                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:36:30
	mul.wide.u32 	%rd6, %r26, 4;
	add.s64 	%rd2, %rd4, %rd6;
	mov.pred 	%p2, -1;
	.loc	1 36 35                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:36:35
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p2 ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r9;
	mov.b32 	%f2, %r10;
	mov.b32 	%f3, %r11;
	mov.b32 	%f4, %r12;
	.loc	1 37 31                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:37:31
	add.s64 	%rd3, %rd5, %rd6;
	.loc	1 37 36                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:37:36
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p2 ld.global.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd3 + 0 ];
	// end inline asm
$L__tmp0:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p8, %f1, %f2;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p9, %f1, %f1;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f33, %f1, %f2, %p9;
	selp.f32 	%f34, %f1, %f33, %p8;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p10, %f34, %f3;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p11, %f34, %f34;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f35, %f34, %f3, %p11;
	selp.f32 	%f36, %f34, %f35, %p10;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p12, %f36, %f4;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p13, %f36, %f36;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f37, %f36, %f4, %p13;
	selp.f32 	%f38, %f36, %f37, %p12;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r27, %f38;
	shfl.sync.bfly.b32	%r28, %r27, 16, 31, -1;
	mov.b32 	%f39, %r28;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p14, %f38, %f39;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p15, %f38, %f38;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f40, %f38, %f39, %p15;
	selp.f32 	%f41, %f38, %f40, %p14;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r29, %f41;
	shfl.sync.bfly.b32	%r30, %r29, 8, 31, -1;
	mov.b32 	%f42, %r30;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p16, %f41, %f42;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p17, %f41, %f41;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f43, %f41, %f42, %p17;
	selp.f32 	%f44, %f41, %f43, %p16;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r31, %f44;
	shfl.sync.bfly.b32	%r32, %r31, 4, 31, -1;
	mov.b32 	%f45, %r32;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p18, %f44, %f45;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p19, %f44, %f44;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f46, %f44, %f45, %p19;
	selp.f32 	%f47, %f44, %f46, %p18;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r33, %f47;
	shfl.sync.bfly.b32	%r34, %r33, 2, 31, -1;
	mov.b32 	%f48, %r34;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p20, %f47, %f48;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p21, %f47, %f47;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f49, %f47, %f48, %p21;
	selp.f32 	%f50, %f47, %f49, %p20;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r35, %f50;
	shfl.sync.bfly.b32	%r36, %r35, 1, 31, -1;
	mov.b32 	%f51, %r36;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p22, %f50, %f51;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p23, %f50, %f50;
	.loc	2 131 29                        // triton_helpers.py:131:29
	setp.eq.s32 	%p42, %r2, 0;
	bfe.u32 	%r37, %r1, 5, 1;
	shl.b32 	%r38, %r37, 2;
	mov.u32 	%r39, global_smem;
	add.s32 	%r73, %r39, %r38;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r40, %r35, %r36, %p23;
	selp.b32 	%r18, %r35, %r40, %p22;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p42 st.shared.b32 [ %r73 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p43, %r1, 2;
	add.s32 	%r76, %r39, %r25;
	// begin inline asm
	@%p43 ld.shared.b32 %r19, [ %r76 + 0 ];
	// end inline asm
	mov.b32 	%f52, %r19;
	shfl.sync.bfly.b32	%r41, %r19, 1, 31, -1;
	mov.b32 	%f53, %r41;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p24, %f52, %f53;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p25, %f52, %f52;
	.loc	2 131 29                        // triton_helpers.py:131:29
	and.b32  	%r42, %r1, 1;
	setp.eq.b32 	%p26, %r42, 1;
	not.pred 	%p27, %p26;
	and.pred  	%p44, %p43, %p27;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r43, %r19, %r41, %p24;
	selp.b32 	%r22, %r19, %r43, %p25;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p44 st.shared.b32 [ %r76 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f54, [global_smem];
$L__tmp1:
	.loc	2 73 15                         // triton_helpers.py:73:15
	add.f32 	%f5, %f54, 0f00000000;
$L__tmp2:
	.loc	1 40 18                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:40:18
	sub.f32 	%f55, %f1, %f5;
	sub.f32 	%f56, %f2, %f5;
	sub.f32 	%f57, %f3, %f5;
	sub.f32 	%f58, %f4, %f5;
	.loc	1 41 23                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:41:23
	mul.f32 	%f26, %f55, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f25, %f26;
	// end inline asm
	mul.f32 	%f28, %f56, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f27, %f28;
	// end inline asm
	mul.f32 	%f30, %f57, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f29, %f30;
	// end inline asm
	mul.f32 	%f32, %f58, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f31, %f32;
	// end inline asm
	.loc	1 44 44                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:44:44
	bar.sync 	0;
$L__tmp3:
	.loc	1 13 20                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:13:20
	add.f32 	%f59, %f25, %f27;
	add.f32 	%f60, %f59, %f29;
	add.f32 	%f61, %f60, %f31;
$L__tmp4:
	.loc	1 44 44                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:44:44
	mov.b32 	%r44, %f61;
	shfl.sync.up.b32	%r45, %r44, 1, 0, -1;
	mov.b32 	%f62, %r45;
$L__tmp5:
	.loc	1 13 20                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:13:20
	add.f32 	%f63, %f61, %f62;
$L__tmp6:
	.loc	1 44 44                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:44:44
	selp.f32 	%f64, %f61, %f63, %p42;
	mov.b32 	%r46, %f64;
	shfl.sync.up.b32	%r47, %r46, 2, 0, -1;
	mov.b32 	%f65, %r47;
	setp.gt.u32 	%p28, %r2, 1;
$L__tmp7:
	.loc	1 13 20                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:13:20
	add.f32 	%f66, %f64, %f65;
$L__tmp8:
	.loc	1 44 44                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:44:44
	selp.f32 	%f67, %f66, %f64, %p28;
	mov.b32 	%r48, %f67;
	shfl.sync.up.b32	%r49, %r48, 4, 0, -1;
	mov.b32 	%f68, %r49;
	setp.gt.u32 	%p29, %r2, 3;
$L__tmp9:
	.loc	1 13 20                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:13:20
	add.f32 	%f69, %f67, %f68;
$L__tmp10:
	.loc	1 44 44                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:44:44
	selp.f32 	%f70, %f69, %f67, %p29;
	mov.b32 	%r50, %f70;
	shfl.sync.up.b32	%r51, %r50, 8, 0, -1;
	mov.b32 	%f71, %r51;
	setp.gt.u32 	%p30, %r2, 7;
$L__tmp11:
	.loc	1 13 20                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:13:20
	add.f32 	%f72, %f70, %f71;
$L__tmp12:
	.loc	1 44 44                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:44:44
	selp.f32 	%f73, %f72, %f70, %p30;
	mov.b32 	%r52, %f73;
	shfl.sync.up.b32	%r53, %r52, 16, 0, -1;
	mov.b32 	%f74, %r53;
	setp.gt.u32 	%p31, %r2, 15;
$L__tmp13:
	.loc	1 13 20                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:13:20
	add.f32 	%f75, %f73, %f74;
$L__tmp14:
	.loc	1 44 44                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:44:44
	selp.f32 	%f76, %f75, %f73, %p31;
	setp.eq.s32 	%p7, %r2, 31;
	mov.b32 	%r24, %f76;
	// begin inline asm
	@%p7 st.shared.b32 [ %r73 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	setp.eq.s32 	%p32, %r37, 0;
	or.b32  	%r54, %r37, %r2;
	setp.eq.s32 	%p33, %r54, 0;
	ld.shared.f32 	%f77, [global_smem];
$L__tmp15:
	.loc	1 13 20                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:13:20
	add.f32 	%f78, %f77, %f76;
$L__tmp16:
	.loc	1 44 44                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:44:44
	selp.f32 	%f79, %f76, %f78, %p32;
	mov.b32 	%r55, %f79;
	shfl.sync.up.b32	%r56, %r55, 1, 0, -1;
	mov.b32 	%f80, %r56;
	selp.f32 	%f81, %f77, %f80, %p42;
$L__tmp17:
	.loc	1 13 20                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:13:20
	add.f32 	%f82, %f60, %f81;
$L__tmp18:
	.loc	1 44 44                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:44:44
	selp.f32 	%f83, %f60, %f82, %p33;
$L__tmp19:
	.loc	1 13 20                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:13:20
	add.f32 	%f84, %f59, %f81;
$L__tmp20:
	.loc	1 44 44                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:44:44
	selp.f32 	%f85, %f59, %f84, %p33;
$L__tmp21:
	.loc	1 13 20                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:13:20
	add.f32 	%f86, %f25, %f81;
$L__tmp22:
	.loc	1 44 44                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:44:44
	selp.f32 	%f87, %f25, %f86, %p33;
	.loc	1 46 19                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:46:19
	add.f32 	%f88, %f87, 0f33D6BF95;
	add.f32 	%f6, %f85, 0f33D6BF95;
	.loc	1 47 24                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:47:24
	setp.lt.f32 	%p34, %f88, 0f00800000;
	mul.f32 	%f89, %f88, 0f4B000000;
	selp.f32 	%f9, %f89, %f88, %p34;
	selp.f32 	%f90, 0fC1B80000, 0f00000000, %p34;
	mov.b32 	%r57, %f9;
	add.s32 	%r58, %r57, -1059760811;
	and.b32  	%r59, %r58, -8388608;
	sub.s32 	%r60, %r57, %r59;
	mov.b32 	%f91, %r60;
	cvt.rn.f32.s32 	%f92, %r59;
	mov.f32 	%f93, 0f34000000;
	fma.rn.ftz.f32 	%f94, %f92, %f93, %f90;
	add.f32 	%f95, %f91, 0fBF800000;
	mov.f32 	%f96, 0f3E1039F6;
	mov.f32 	%f97, 0fBE055027;
	fma.rn.ftz.f32 	%f98, %f97, %f95, %f96;
	mov.f32 	%f99, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f100, %f98, %f95, %f99;
	mov.f32 	%f101, 0f3E0F2955;
	fma.rn.ftz.f32 	%f102, %f100, %f95, %f101;
	mov.f32 	%f103, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f104, %f102, %f95, %f103;
	mov.f32 	%f105, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f106, %f104, %f95, %f105;
	mov.f32 	%f107, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f108, %f106, %f95, %f107;
	mov.f32 	%f109, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f110, %f108, %f95, %f109;
	mov.f32 	%f111, 0fBF000000;
	fma.rn.ftz.f32 	%f112, %f110, %f95, %f111;
	mul.f32 	%f113, %f95, %f112;
	fma.rn.ftz.f32 	%f114, %f113, %f95, %f95;
	mov.f32 	%f115, 0f3F317218;
	fma.rn.ftz.f32 	%f257, %f94, %f115, %f114;
	setp.lt.u32 	%p35, %r57, 2139095040;
	mov.f32 	%f116, 0f7F800000;
	@%p35 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:0:24
	fma.rn.ftz.f32 	%f257, %f9, %f116, %f116;
$L__BB0_2:                              // %__nv_logf.exit
	add.f32 	%f7, %f83, 0f33D6BF95;
	.loc	1 47 24                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:47:24
	setp.lt.f32 	%p36, %f6, 0f00800000;
	mul.f32 	%f117, %f6, 0f4B000000;
	selp.f32 	%f13, %f117, %f6, %p36;
	selp.f32 	%f118, 0fC1B80000, 0f00000000, %p36;
	mov.b32 	%r61, %f13;
	add.s32 	%r62, %r61, -1059760811;
	and.b32  	%r63, %r62, -8388608;
	sub.s32 	%r64, %r61, %r63;
	mov.b32 	%f119, %r64;
	cvt.rn.f32.s32 	%f120, %r63;
	fma.rn.ftz.f32 	%f122, %f120, %f93, %f118;
	add.f32 	%f123, %f119, 0fBF800000;
	fma.rn.ftz.f32 	%f126, %f97, %f123, %f96;
	fma.rn.ftz.f32 	%f128, %f126, %f123, %f99;
	fma.rn.ftz.f32 	%f130, %f128, %f123, %f101;
	fma.rn.ftz.f32 	%f132, %f130, %f123, %f103;
	fma.rn.ftz.f32 	%f134, %f132, %f123, %f105;
	fma.rn.ftz.f32 	%f136, %f134, %f123, %f107;
	fma.rn.ftz.f32 	%f138, %f136, %f123, %f109;
	fma.rn.ftz.f32 	%f140, %f138, %f123, %f111;
	mul.f32 	%f141, %f123, %f140;
	fma.rn.ftz.f32 	%f142, %f141, %f123, %f123;
	fma.rn.ftz.f32 	%f258, %f122, %f115, %f142;
	setp.lt.u32 	%p37, %r61, 2139095040;
	@%p37 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i30
	.loc	1 0 24                          // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:0:24
	fma.rn.ftz.f32 	%f258, %f13, %f116, %f116;
$L__BB0_4:                              // %__nv_logf.exit33
	add.f32 	%f8, %f79, 0f33D6BF95;
	.loc	1 47 24                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:47:24
	setp.lt.f32 	%p38, %f7, 0f00800000;
	mul.f32 	%f145, %f7, 0f4B000000;
	selp.f32 	%f17, %f145, %f7, %p38;
	selp.f32 	%f146, 0fC1B80000, 0f00000000, %p38;
	mov.b32 	%r65, %f17;
	add.s32 	%r66, %r65, -1059760811;
	and.b32  	%r67, %r66, -8388608;
	sub.s32 	%r68, %r65, %r67;
	mov.b32 	%f147, %r68;
	cvt.rn.f32.s32 	%f148, %r67;
	fma.rn.ftz.f32 	%f150, %f148, %f93, %f146;
	add.f32 	%f151, %f147, 0fBF800000;
	fma.rn.ftz.f32 	%f154, %f97, %f151, %f96;
	fma.rn.ftz.f32 	%f156, %f154, %f151, %f99;
	fma.rn.ftz.f32 	%f158, %f156, %f151, %f101;
	fma.rn.ftz.f32 	%f160, %f158, %f151, %f103;
	fma.rn.ftz.f32 	%f162, %f160, %f151, %f105;
	fma.rn.ftz.f32 	%f164, %f162, %f151, %f107;
	fma.rn.ftz.f32 	%f166, %f164, %f151, %f109;
	fma.rn.ftz.f32 	%f168, %f166, %f151, %f111;
	mul.f32 	%f169, %f151, %f168;
	fma.rn.ftz.f32 	%f170, %f169, %f151, %f151;
	fma.rn.ftz.f32 	%f259, %f150, %f115, %f170;
	setp.lt.u32 	%p39, %r65, 2139095040;
	@%p39 bra 	$L__BB0_6;
// %bb.5:                               // %__nv_fmaf_rn.exit.i.i60
	.loc	1 0 24                          // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:0:24
	fma.rn.ftz.f32 	%f259, %f17, %f116, %f116;
$L__BB0_6:                              // %__nv_logf.exit63
	ld.param.u64 	%rd7, [triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0_param_0];
	.loc	1 47 24                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:47:24
	setp.lt.f32 	%p40, %f8, 0f00800000;
	mul.f32 	%f173, %f8, 0f4B000000;
	selp.f32 	%f21, %f173, %f8, %p40;
	selp.f32 	%f174, 0fC1B80000, 0f00000000, %p40;
	mov.b32 	%r69, %f21;
	add.s32 	%r70, %r69, -1059760811;
	and.b32  	%r71, %r70, -8388608;
	sub.s32 	%r72, %r69, %r71;
	mov.b32 	%f175, %r72;
	cvt.rn.f32.s32 	%f176, %r71;
	fma.rn.ftz.f32 	%f178, %f176, %f93, %f174;
	add.f32 	%f179, %f175, 0fBF800000;
	fma.rn.ftz.f32 	%f182, %f97, %f179, %f96;
	fma.rn.ftz.f32 	%f184, %f182, %f179, %f99;
	fma.rn.ftz.f32 	%f186, %f184, %f179, %f101;
	fma.rn.ftz.f32 	%f188, %f186, %f179, %f103;
	fma.rn.ftz.f32 	%f190, %f188, %f179, %f105;
	fma.rn.ftz.f32 	%f192, %f190, %f179, %f107;
	fma.rn.ftz.f32 	%f194, %f192, %f179, %f109;
	fma.rn.ftz.f32 	%f196, %f194, %f179, %f111;
	mul.f32 	%f197, %f179, %f196;
	fma.rn.ftz.f32 	%f198, %f197, %f179, %f179;
	fma.rn.ftz.f32 	%f260, %f178, %f115, %f198;
	setp.lt.u32 	%p41, %r69, 2139095040;
	@%p41 bra 	$L__BB0_8;
// %bb.7:                               // %__nv_fmaf_rn.exit.i.i90
	.loc	1 0 24                          // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:0:24
	fma.rn.ftz.f32 	%f260, %f21, %f116, %f116;
$L__BB0_8:                              // %__nv_logf.exit93
	.loc	1 47 24                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:47:24
	setp.eq.f32 	%p49, %f17, 0f00000000;
	selp.f32 	%f201, 0fFF800000, %f259, %p49;
	setp.eq.f32 	%p50, %f13, 0f00000000;
	selp.f32 	%f202, 0fFF800000, %f258, %p50;
	setp.eq.f32 	%p51, %f9, 0f00000000;
	selp.f32 	%f203, 0fFF800000, %f257, %p51;
	.loc	1 37 36                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:37:36
	mov.b32 	%f204, %r16;
	mov.b32 	%f205, %r15;
	mov.b32 	%f206, %r14;
	mov.b32 	%f207, %r13;
	.loc	1 47 24                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:47:24
	setp.eq.f32 	%p52, %f21, 0f00000000;
	selp.f32 	%f208, 0fFF800000, %f260, %p52;
	.loc	1 48 20                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:48:20
	add.f32 	%f209, %f5, %f203;
	add.f32 	%f210, %f5, %f202;
	add.f32 	%f211, %f5, %f201;
	add.f32 	%f212, %f5, %f208;
	.loc	1 49 19                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:49:19
	sub.f32 	%f213, %f1, %f209;
	sub.f32 	%f214, %f2, %f210;
	sub.f32 	%f215, %f3, %f211;
	sub.f32 	%f216, %f4, %f212;
	.loc	1 50 20                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:50:20
	mul.f32 	%f217, %f214, %f206;
$L__tmp23:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	3 256 15                        // standard.py:256:15
	fma.rn.f32 	%f218, %f213, %f207, %f217;
	fma.rn.f32 	%f219, %f215, %f205, %f218;
	fma.rn.f32 	%f220, %f216, %f204, %f219;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f220;
	shfl.sync.bfly.b32	%r90, %r89, 16, 31, -1;
	mov.b32 	%f221, %r90;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f222, %f220, %f221;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f222;
	shfl.sync.bfly.b32	%r92, %r91, 8, 31, -1;
	mov.b32 	%f223, %r92;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f224, %f222, %f223;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r93, %f224;
	shfl.sync.bfly.b32	%r94, %r93, 4, 31, -1;
	mov.b32 	%f225, %r94;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f226, %f224, %f225;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r95, %f226;
	shfl.sync.bfly.b32	%r96, %r95, 2, 31, -1;
	mov.b32 	%f227, %r96;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f228, %f226, %f227;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f228;
	shfl.sync.bfly.b32	%r98, %r97, 1, 31, -1;
	mov.b32 	%f229, %r98;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f230, %f228, %f229;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f230;
	// begin inline asm
	@%p42 st.shared.b32 [ %r73 + 0 ], %r74;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p43 ld.shared.b32 %r75, [ %r76 + 0 ];
	// end inline asm
	mov.b32 	%f231, %r75;
	shfl.sync.bfly.b32	%r99, %r75, 1, 31, -1;
	mov.b32 	%f232, %r99;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f233, %f231, %f232;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f233;
	// begin inline asm
	@%p44 st.shared.b32 [ %r76 + 0 ], %r78;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f234, [global_smem];
$L__tmp24:
	.loc	2 73 15                         // triton_helpers.py:73:15
	add.f32 	%f235, %f234, 0f00000000;
$L__tmp25:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f236, %f207, %f206;
	add.f32 	%f237, %f236, %f205;
	add.f32 	%f238, %f237, %f204;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f238;
	shfl.sync.bfly.b32	%r101, %r100, 16, 31, -1;
	mov.b32 	%f239, %r101;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f240, %f238, %f239;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f240;
	shfl.sync.bfly.b32	%r103, %r102, 8, 31, -1;
	mov.b32 	%f241, %r103;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f242, %f240, %f241;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f242;
	shfl.sync.bfly.b32	%r105, %r104, 4, 31, -1;
	mov.b32 	%f243, %r105;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f244, %f242, %f243;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f244;
	shfl.sync.bfly.b32	%r107, %r106, 2, 31, -1;
	mov.b32 	%f245, %r107;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f246, %f244, %f245;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r108, %f246;
	shfl.sync.bfly.b32	%r109, %r108, 1, 31, -1;
	mov.b32 	%f247, %r109;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f248, %f246, %f247;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f248;
	// begin inline asm
	@%p42 st.shared.b32 [ %r73 + 0 ], %r80;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p43 ld.shared.b32 %r81, [ %r76 + 0 ];
	// end inline asm
	mov.b32 	%f249, %r81;
	shfl.sync.bfly.b32	%r110, %r81, 1, 31, -1;
	mov.b32 	%f250, %r110;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f251, %f249, %f250;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f251;
	// begin inline asm
	@%p44 st.shared.b32 [ %r76 + 0 ], %r84;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f252, [global_smem];
$L__tmp26:
	.loc	2 73 15                         // triton_helpers.py:73:15
	add.f32 	%f253, %f252, 0f00000000;
$L__tmp27:
	.loc	1 55 20                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:55:20
	mov.b32 	%r86, %f235;
	mov.b32 	%r87, %f253;
	// begin inline asm
	div.full.f32 %r85, %r86, %r87;
	// end inline asm
	mov.b32 	%f254, %r85;
	mov.f32 	%f255, 0f00000000;
	.loc	1 56 13                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:56:13
	sub.f32 	%f256, %f255, %f254;
	.loc	1 57 4                          // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:57:4
	bar.sync 	0;
	.loc	1 58 63                         // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:58:63
	and.b32  	%r111, %r1, 63;
	setp.eq.s32 	%p48, %r111, 0;
	mov.b32 	%r88, %f256;
	// begin inline asm
	@%p48 st.global.b32 [ %rd7 + 0 ], { %r88 };
	// end inline asm
	.loc	1 58 4                          // cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py:58:4
	ret;
$L__tmp28:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 350                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x157 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 97
.b8 100
.b8 107
.b8 51
.b8 101
.b8 120
.b8 53
.b8 99
.b8 114
.b8 103
.b8 55
.b8 114
.b8 100
.b8 114
.b8 55
.b8 50
.b8 98
.b8 119
.b8 116
.b8 104
.b8 102
.b8 118
.b8 52
.b8 50
.b8 106
.b8 101
.b8 97
.b8 110
.b8 103
.b8 111
.b8 97
.b8 111
.b8 53
.b8 116
.b8 120
.b8 108
.b8 109
.b8 55
.b8 114
.b8 119
.b8 97
.b8 105
.b8 106
.b8 54
.b8 55
.b8 120
.b8 101
.b8 121
.b8 118
.b8 119
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 97
.b8 100
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x40 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 117
.b8 109
.b8 115
.b8 117
.b8 109
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 101
.b8 120
.b8 112
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 109
.b8 97
.b8 120
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 101
.b8 103
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa3:0xbe DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 70                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp22                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x100:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp23                          // DW_AT_low_pc
.b64 $L__tmp24                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 52                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x118:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp24                          // DW_AT_low_pc
.b64 $L__tmp25                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 52                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x130:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp25                          // DW_AT_low_pc
.b64 $L__tmp26                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x148:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp26                          // DW_AT_low_pc
.b64 $L__tmp27                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
