; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = and i32 %5, 31, !dbg !10
  %7 = lshr i32 %5, 5, !dbg !10
  %8 = shl i32 %5, 2, !dbg !10
  %9 = and i32 %8, 252, !dbg !10
  %10 = zext nneg i32 %9 to i64, !dbg !11
  %11 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !11
  %12 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %11, i1 true) #4, !dbg !12
  %13 = extractvalue { i32, i32, i32, i32 } %12, 0, !dbg !12
  %14 = extractvalue { i32, i32, i32, i32 } %12, 1, !dbg !12
  %15 = extractvalue { i32, i32, i32, i32 } %12, 2, !dbg !12
  %16 = extractvalue { i32, i32, i32, i32 } %12, 3, !dbg !12
  %17 = bitcast i32 %13 to float, !dbg !12
  %18 = bitcast i32 %14 to float, !dbg !12
  %19 = bitcast i32 %15 to float, !dbg !12
  %20 = bitcast i32 %16 to float, !dbg !12
  %21 = getelementptr float, ptr addrspace(1) %2, i64 %10, !dbg !13
  %22 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %21, i1 true) #4, !dbg !14
  %23 = fcmp ogt float %17, %18, !dbg !15
  %24 = fcmp uno float %17, 0.000000e+00, !dbg !20
  %25 = or i1 %23, %24, !dbg !21
  %26 = select i1 %25, float %17, float %18, !dbg !22
  %27 = fcmp ogt float %26, %19, !dbg !15
  %28 = fcmp uno float %26, 0.000000e+00, !dbg !20
  %29 = or i1 %27, %28, !dbg !21
  %30 = select i1 %29, float %26, float %19, !dbg !22
  %31 = fcmp ogt float %30, %20, !dbg !15
  %32 = fcmp uno float %30, 0.000000e+00, !dbg !20
  %33 = or i1 %31, %32, !dbg !21
  %34 = select i1 %33, float %30, float %20, !dbg !22
  %35 = bitcast float %34 to i32, !dbg !23
  %36 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %35, i32 16, i32 31), !dbg !23
  %37 = bitcast i32 %36 to float, !dbg !23
  %38 = fcmp ogt float %34, %37, !dbg !15
  %39 = fcmp uno float %34, 0.000000e+00, !dbg !20
  %40 = or i1 %38, %39, !dbg !21
  %41 = select i1 %40, float %34, float %37, !dbg !22
  %42 = bitcast float %41 to i32, !dbg !23
  %43 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %42, i32 8, i32 31), !dbg !23
  %44 = bitcast i32 %43 to float, !dbg !23
  %45 = fcmp ogt float %41, %44, !dbg !15
  %46 = fcmp uno float %41, 0.000000e+00, !dbg !20
  %47 = or i1 %45, %46, !dbg !21
  %48 = select i1 %47, float %41, float %44, !dbg !22
  %49 = bitcast float %48 to i32, !dbg !23
  %50 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 4, i32 31), !dbg !23
  %51 = bitcast i32 %50 to float, !dbg !23
  %52 = fcmp ogt float %48, %51, !dbg !15
  %53 = fcmp uno float %48, 0.000000e+00, !dbg !20
  %54 = or i1 %52, %53, !dbg !21
  %55 = select i1 %54, float %48, float %51, !dbg !22
  %56 = bitcast float %55 to i32, !dbg !23
  %57 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %56, i32 2, i32 31), !dbg !23
  %58 = bitcast i32 %57 to float, !dbg !23
  %59 = fcmp ogt float %55, %58, !dbg !15
  %60 = fcmp uno float %55, 0.000000e+00, !dbg !20
  %61 = or i1 %59, %60, !dbg !21
  %62 = select i1 %61, float %55, float %58, !dbg !22
  %63 = bitcast float %62 to i32, !dbg !23
  %64 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %63, i32 1, i32 31), !dbg !23
  %65 = bitcast i32 %64 to float, !dbg !23
  %66 = fcmp ogt float %62, %65, !dbg !15
  %67 = fcmp uno float %62, 0.000000e+00, !dbg !20
  %68 = or i1 %66, %67, !dbg !21
  %69 = icmp eq i32 %6, 0, !dbg !23
  %70 = and i32 %7, 1, !dbg !23
  %71 = getelementptr float, ptr addrspace(3) @global_smem, i32 %70, !dbg !23
  %72 = select i1 %68, i32 %63, i32 %64, !dbg !22
  %73 = insertelement <1 x i32> poison, i32 %72, i64 0, !dbg !23
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %71, <1 x i32> %73, i1 %69) #4, !dbg !23
  tail call void @llvm.nvvm.barrier0(), !dbg !23
  %74 = icmp slt i32 %5, 2, !dbg !23
  %75 = getelementptr float, ptr addrspace(3) @global_smem, i32 %5, !dbg !23
  %76 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %75, i1 %74) #4, !dbg !23
  %77 = bitcast i32 %76 to float, !dbg !23
  %78 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %76, i32 1, i32 31), !dbg !23
  %79 = bitcast i32 %78 to float, !dbg !23
  %80 = fcmp ogt float %77, %79, !dbg !15
  %81 = fcmp uno float %77, 0.000000e+00, !dbg !20
  %82 = or i1 %81, %80, !dbg !21
  %83 = and i32 %5, 1, !dbg !23
  %84 = icmp eq i32 %83, 0, !dbg !23
  %85 = and i1 %74, %84, !dbg !23
  %86 = select i1 %82, i32 %76, i32 %78, !dbg !22
  %87 = insertelement <1 x i32> poison, i32 %86, i64 0, !dbg !23
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %75, <1 x i32> %87, i1 %85) #4, !dbg !23
  tail call void @llvm.nvvm.barrier0(), !dbg !23
  %88 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !23
  %89 = fadd float %88, 0.000000e+00, !dbg !24
  %90 = fsub float %17, %89, !dbg !26
  %91 = fsub float %18, %89, !dbg !26
  %92 = fsub float %19, %89, !dbg !26
  %93 = fsub float %20, %89, !dbg !26
  %94 = fmul float %90, 0x3FF7154760000000, !dbg !27
  %95 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %94) #4, !dbg !27
  %96 = fmul float %91, 0x3FF7154760000000, !dbg !27
  %97 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %96) #4, !dbg !27
  %98 = fmul float %92, 0x3FF7154760000000, !dbg !27
  %99 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %98) #4, !dbg !27
  %100 = fmul float %93, 0x3FF7154760000000, !dbg !27
  %101 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %100) #4, !dbg !27
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %102 = fadd float %95, %97, !dbg !29
  %103 = fadd float %102, %99, !dbg !29
  %104 = fadd float %103, %101, !dbg !29
  %105 = bitcast float %104 to i32, !dbg !28
  %106 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %105, i32 1, i32 0), !dbg !28
  %107 = bitcast i32 %106 to float, !dbg !28
  %108 = fadd float %104, %107, !dbg !29
  %109 = select i1 %69, float %104, float %108, !dbg !28
  %110 = bitcast float %109 to i32, !dbg !28
  %111 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %110, i32 2, i32 0), !dbg !28
  %112 = bitcast i32 %111 to float, !dbg !28
  %113 = icmp samesign ugt i32 %6, 1, !dbg !28
  %114 = fadd float %109, %112, !dbg !29
  %115 = select i1 %113, float %114, float %109, !dbg !28
  %116 = bitcast float %115 to i32, !dbg !28
  %117 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %116, i32 4, i32 0), !dbg !28
  %118 = bitcast i32 %117 to float, !dbg !28
  %119 = icmp samesign ugt i32 %6, 3, !dbg !28
  %120 = fadd float %115, %118, !dbg !29
  %121 = select i1 %119, float %120, float %115, !dbg !28
  %122 = bitcast float %121 to i32, !dbg !28
  %123 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %122, i32 8, i32 0), !dbg !28
  %124 = bitcast i32 %123 to float, !dbg !28
  %125 = icmp samesign ugt i32 %6, 7, !dbg !28
  %126 = fadd float %121, %124, !dbg !29
  %127 = select i1 %125, float %126, float %121, !dbg !28
  %128 = bitcast float %127 to i32, !dbg !28
  %129 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %128, i32 16, i32 0), !dbg !28
  %130 = bitcast i32 %129 to float, !dbg !28
  %131 = icmp samesign ugt i32 %6, 15, !dbg !28
  %132 = fadd float %127, %130, !dbg !29
  %133 = select i1 %131, float %132, float %127, !dbg !28
  %134 = icmp eq i32 %6, 31, !dbg !28
  %135 = bitcast float %133 to <1 x i32>, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %71, <1 x i32> %135, i1 %134) #4, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %.not2 = icmp eq i32 %70, 0, !dbg !28
  %136 = or i32 %70, %6, !dbg !28
  %.not1 = icmp eq i32 %136, 0, !dbg !28
  %137 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !28
  %138 = fadd float %137, %133, !dbg !29
  %139 = select i1 %.not2, float %133, float %138, !dbg !28
  %140 = bitcast float %139 to i32, !dbg !28
  %141 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %140, i32 1, i32 0), !dbg !28
  %142 = bitcast i32 %141 to float, !dbg !28
  %143 = select i1 %69, float %137, float %142, !dbg !28
  %144 = fadd float %103, %143, !dbg !29
  %145 = select i1 %.not1, float %103, float %144, !dbg !28
  %146 = fadd float %102, %143, !dbg !29
  %147 = select i1 %.not1, float %102, float %146, !dbg !28
  %148 = fadd float %95, %143, !dbg !29
  %149 = select i1 %.not1, float %95, float %148, !dbg !28
  %150 = fadd float %149, 0x3E7AD7F2A0000000, !dbg !31
  %151 = fadd float %147, 0x3E7AD7F2A0000000, !dbg !31
  %152 = fadd float %145, 0x3E7AD7F2A0000000, !dbg !31
  %153 = fadd float %139, 0x3E7AD7F2A0000000, !dbg !31
  %154 = fcmp olt float %150, 0x3810000000000000, !dbg !32
  %155 = fmul float %150, 0x4160000000000000, !dbg !32
  %.02.i = select i1 %154, float %155, float %150, !dbg !32
  %i.i.0.i = select i1 %154, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %156 = bitcast float %.02.i to i32, !dbg !32
  %157 = add i32 %156, -1059760811, !dbg !32
  %158 = and i32 %157, -8388608, !dbg !32
  %159 = sub i32 %156, %158, !dbg !32
  %160 = bitcast i32 %159 to float, !dbg !32
  %161 = sitofp i32 %158 to float, !dbg !32
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i = icmp eq i32 %162, 0, !dbg !32
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %161, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !32
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %161, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !32
  %.08.i = select i1 %.not.i, float %164, float %163, !dbg !32
  %165 = fadd float %160, -1.000000e+00, !dbg !32
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i = icmp eq i32 %166, 0, !dbg !32
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %165, float 0x3FC2073EC0000000) #4, !dbg !32
  %168 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %165, float 0x3FC2073EC0000000) #4, !dbg !32
  %.010.i = select i1 %.not1.i, float %168, float %167, !dbg !32
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i = icmp eq i32 %169, 0, !dbg !32
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %165, float 0xBFBF19B980000000) #4, !dbg !32
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %165, float 0xBFBF19B980000000) #4, !dbg !32
  %.011.i = select i1 %.not2.i, float %171, float %170, !dbg !32
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i = icmp eq i32 %172, 0, !dbg !32
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %165, float 0x3FC1E52AA0000000) #4, !dbg !32
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %165, float 0x3FC1E52AA0000000) #4, !dbg !32
  %.012.i = select i1 %.not3.i, float %174, float %173, !dbg !32
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i = icmp eq i32 %175, 0, !dbg !32
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %165, float 0xBFC55B1720000000) #4, !dbg !32
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %165, float 0xBFC55B1720000000) #4, !dbg !32
  %.09.i = select i1 %.not4.i, float %177, float %176, !dbg !32
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i = icmp eq i32 %178, 0, !dbg !32
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %165, float 0x3FC99DA160000000) #4, !dbg !32
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %165, float 0x3FC99DA160000000) #4, !dbg !32
  %.05.i = select i1 %.not5.i, float %180, float %179, !dbg !32
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i = icmp eq i32 %181, 0, !dbg !32
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %165, float 0xBFCFFFE440000000) #4, !dbg !32
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %165, float 0xBFCFFFE440000000) #4, !dbg !32
  %.01.i = select i1 %.not6.i, float %183, float %182, !dbg !32
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i = icmp eq i32 %184, 0, !dbg !32
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %165, float 0x3FD5554F00000000) #4, !dbg !32
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %165, float 0x3FD5554F00000000) #4, !dbg !32
  %.0.i = select i1 %.not7.i, float %186, float %185, !dbg !32
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i = icmp eq i32 %187, 0, !dbg !32
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %165, float -5.000000e-01) #4, !dbg !32
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %165, float -5.000000e-01) #4, !dbg !32
  %.07.i = select i1 %.not8.i, float %189, float %188, !dbg !32
  %190 = fmul float %165, %.07.i, !dbg !32
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not9.i = icmp eq i32 %191, 0, !dbg !32
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %190, float %165, float %165) #4, !dbg !32
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %190, float %165, float %165) #4, !dbg !32
  %.06.i = select i1 %.not9.i, float %193, float %192, !dbg !32
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not10.i = icmp eq i32 %194, 0, !dbg !32
  %195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !32
  %196 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !32
  %.04.i = select i1 %.not10.i, float %196, float %195, !dbg !32
  %197 = icmp ugt i32 %156, 2139095039, !dbg !32
  br i1 %197, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !32

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not11.i = icmp eq i32 %198, 0, !dbg !32
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %200 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %.03.i = select i1 %.not11.i, float %200, float %199, !dbg !32
  br label %__nv_logf.exit, !dbg !32

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !32
  %201 = fcmp olt float %151, 0x3810000000000000, !dbg !32
  %202 = fmul float %151, 0x4160000000000000, !dbg !32
  %.02.i4 = select i1 %201, float %202, float %151, !dbg !32
  %i.i.0.i5 = select i1 %201, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %203 = bitcast float %.02.i4 to i32, !dbg !32
  %204 = add i32 %203, -1059760811, !dbg !32
  %205 = and i32 %204, -8388608, !dbg !32
  %206 = sub i32 %203, %205, !dbg !32
  %207 = bitcast i32 %206 to float, !dbg !32
  %208 = sitofp i32 %205 to float, !dbg !32
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i6 = icmp eq i32 %209, 0, !dbg !32
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %208, float 0x3E80000000000000, float %i.i.0.i5) #4, !dbg !32
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %208, float 0x3E80000000000000, float %i.i.0.i5) #4, !dbg !32
  %.08.i7 = select i1 %.not.i6, float %211, float %210, !dbg !32
  %212 = fadd float %207, -1.000000e+00, !dbg !32
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i8 = icmp eq i32 %213, 0, !dbg !32
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %212, float 0x3FC2073EC0000000) #4, !dbg !32
  %215 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %212, float 0x3FC2073EC0000000) #4, !dbg !32
  %.010.i9 = select i1 %.not1.i8, float %215, float %214, !dbg !32
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i10 = icmp eq i32 %216, 0, !dbg !32
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i9, float %212, float 0xBFBF19B980000000) #4, !dbg !32
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i9, float %212, float 0xBFBF19B980000000) #4, !dbg !32
  %.011.i11 = select i1 %.not2.i10, float %218, float %217, !dbg !32
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i12 = icmp eq i32 %219, 0, !dbg !32
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i11, float %212, float 0x3FC1E52AA0000000) #4, !dbg !32
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i11, float %212, float 0x3FC1E52AA0000000) #4, !dbg !32
  %.012.i13 = select i1 %.not3.i12, float %221, float %220, !dbg !32
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i14 = icmp eq i32 %222, 0, !dbg !32
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i13, float %212, float 0xBFC55B1720000000) #4, !dbg !32
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i13, float %212, float 0xBFC55B1720000000) #4, !dbg !32
  %.09.i15 = select i1 %.not4.i14, float %224, float %223, !dbg !32
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i16 = icmp eq i32 %225, 0, !dbg !32
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i15, float %212, float 0x3FC99DA160000000) #4, !dbg !32
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i15, float %212, float 0x3FC99DA160000000) #4, !dbg !32
  %.05.i17 = select i1 %.not5.i16, float %227, float %226, !dbg !32
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i18 = icmp eq i32 %228, 0, !dbg !32
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i17, float %212, float 0xBFCFFFE440000000) #4, !dbg !32
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i17, float %212, float 0xBFCFFFE440000000) #4, !dbg !32
  %.01.i19 = select i1 %.not6.i18, float %230, float %229, !dbg !32
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i20 = icmp eq i32 %231, 0, !dbg !32
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i19, float %212, float 0x3FD5554F00000000) #4, !dbg !32
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i19, float %212, float 0x3FD5554F00000000) #4, !dbg !32
  %.0.i21 = select i1 %.not7.i20, float %233, float %232, !dbg !32
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i22 = icmp eq i32 %234, 0, !dbg !32
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i21, float %212, float -5.000000e-01) #4, !dbg !32
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i21, float %212, float -5.000000e-01) #4, !dbg !32
  %.07.i23 = select i1 %.not8.i22, float %236, float %235, !dbg !32
  %237 = fmul float %212, %.07.i23, !dbg !32
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not9.i24 = icmp eq i32 %238, 0, !dbg !32
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %237, float %212, float %212) #4, !dbg !32
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %237, float %212, float %212) #4, !dbg !32
  %.06.i25 = select i1 %.not9.i24, float %240, float %239, !dbg !32
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not10.i26 = icmp eq i32 %241, 0, !dbg !32
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i7, float 0x3FE62E4300000000, float %.06.i25) #4, !dbg !32
  %243 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i7, float 0x3FE62E4300000000, float %.06.i25) #4, !dbg !32
  %.04.i27 = select i1 %.not10.i26, float %243, float %242, !dbg !32
  %244 = icmp ugt i32 %203, 2139095039, !dbg !32
  br i1 %244, label %__nv_fmaf_rn.exit.i.i30, label %__nv_logf.exit33, !dbg !32

__nv_fmaf_rn.exit.i.i30:                          ; preds = %__nv_logf.exit
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not11.i31 = icmp eq i32 %245, 0, !dbg !32
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i4, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i4, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %.03.i32 = select i1 %.not11.i31, float %247, float %246, !dbg !32
  br label %__nv_logf.exit33, !dbg !32

__nv_logf.exit33:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i30
  %r.i.0.i28 = phi float [ %.03.i32, %__nv_fmaf_rn.exit.i.i30 ], [ %.04.i27, %__nv_logf.exit ], !dbg !32
  %248 = fcmp olt float %152, 0x3810000000000000, !dbg !32
  %249 = fmul float %152, 0x4160000000000000, !dbg !32
  %.02.i34 = select i1 %248, float %249, float %152, !dbg !32
  %i.i.0.i35 = select i1 %248, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %250 = bitcast float %.02.i34 to i32, !dbg !32
  %251 = add i32 %250, -1059760811, !dbg !32
  %252 = and i32 %251, -8388608, !dbg !32
  %253 = sub i32 %250, %252, !dbg !32
  %254 = bitcast i32 %253 to float, !dbg !32
  %255 = sitofp i32 %252 to float, !dbg !32
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i36 = icmp eq i32 %256, 0, !dbg !32
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %255, float 0x3E80000000000000, float %i.i.0.i35) #4, !dbg !32
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %255, float 0x3E80000000000000, float %i.i.0.i35) #4, !dbg !32
  %.08.i37 = select i1 %.not.i36, float %258, float %257, !dbg !32
  %259 = fadd float %254, -1.000000e+00, !dbg !32
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i38 = icmp eq i32 %260, 0, !dbg !32
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %259, float 0x3FC2073EC0000000) #4, !dbg !32
  %262 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %259, float 0x3FC2073EC0000000) #4, !dbg !32
  %.010.i39 = select i1 %.not1.i38, float %262, float %261, !dbg !32
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i40 = icmp eq i32 %263, 0, !dbg !32
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i39, float %259, float 0xBFBF19B980000000) #4, !dbg !32
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i39, float %259, float 0xBFBF19B980000000) #4, !dbg !32
  %.011.i41 = select i1 %.not2.i40, float %265, float %264, !dbg !32
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i42 = icmp eq i32 %266, 0, !dbg !32
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i41, float %259, float 0x3FC1E52AA0000000) #4, !dbg !32
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i41, float %259, float 0x3FC1E52AA0000000) #4, !dbg !32
  %.012.i43 = select i1 %.not3.i42, float %268, float %267, !dbg !32
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i44 = icmp eq i32 %269, 0, !dbg !32
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i43, float %259, float 0xBFC55B1720000000) #4, !dbg !32
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i43, float %259, float 0xBFC55B1720000000) #4, !dbg !32
  %.09.i45 = select i1 %.not4.i44, float %271, float %270, !dbg !32
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i46 = icmp eq i32 %272, 0, !dbg !32
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i45, float %259, float 0x3FC99DA160000000) #4, !dbg !32
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i45, float %259, float 0x3FC99DA160000000) #4, !dbg !32
  %.05.i47 = select i1 %.not5.i46, float %274, float %273, !dbg !32
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i48 = icmp eq i32 %275, 0, !dbg !32
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i47, float %259, float 0xBFCFFFE440000000) #4, !dbg !32
  %277 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i47, float %259, float 0xBFCFFFE440000000) #4, !dbg !32
  %.01.i49 = select i1 %.not6.i48, float %277, float %276, !dbg !32
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i50 = icmp eq i32 %278, 0, !dbg !32
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i49, float %259, float 0x3FD5554F00000000) #4, !dbg !32
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i49, float %259, float 0x3FD5554F00000000) #4, !dbg !32
  %.0.i51 = select i1 %.not7.i50, float %280, float %279, !dbg !32
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i52 = icmp eq i32 %281, 0, !dbg !32
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i51, float %259, float -5.000000e-01) #4, !dbg !32
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i51, float %259, float -5.000000e-01) #4, !dbg !32
  %.07.i53 = select i1 %.not8.i52, float %283, float %282, !dbg !32
  %284 = fmul float %259, %.07.i53, !dbg !32
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not9.i54 = icmp eq i32 %285, 0, !dbg !32
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %284, float %259, float %259) #4, !dbg !32
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %284, float %259, float %259) #4, !dbg !32
  %.06.i55 = select i1 %.not9.i54, float %287, float %286, !dbg !32
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not10.i56 = icmp eq i32 %288, 0, !dbg !32
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i37, float 0x3FE62E4300000000, float %.06.i55) #4, !dbg !32
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i37, float 0x3FE62E4300000000, float %.06.i55) #4, !dbg !32
  %.04.i57 = select i1 %.not10.i56, float %290, float %289, !dbg !32
  %291 = icmp ugt i32 %250, 2139095039, !dbg !32
  br i1 %291, label %__nv_fmaf_rn.exit.i.i60, label %__nv_logf.exit63, !dbg !32

__nv_fmaf_rn.exit.i.i60:                          ; preds = %__nv_logf.exit33
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not11.i61 = icmp eq i32 %292, 0, !dbg !32
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i34, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i34, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %.03.i62 = select i1 %.not11.i61, float %294, float %293, !dbg !32
  br label %__nv_logf.exit63, !dbg !32

__nv_logf.exit63:                                 ; preds = %__nv_logf.exit33, %__nv_fmaf_rn.exit.i.i60
  %r.i.0.i58 = phi float [ %.03.i62, %__nv_fmaf_rn.exit.i.i60 ], [ %.04.i57, %__nv_logf.exit33 ], !dbg !32
  %295 = fcmp olt float %153, 0x3810000000000000, !dbg !32
  %296 = fmul float %153, 0x4160000000000000, !dbg !32
  %.02.i64 = select i1 %295, float %296, float %153, !dbg !32
  %i.i.0.i65 = select i1 %295, float -2.300000e+01, float 0.000000e+00, !dbg !32
  %297 = bitcast float %.02.i64 to i32, !dbg !32
  %298 = add i32 %297, -1059760811, !dbg !32
  %299 = and i32 %298, -8388608, !dbg !32
  %300 = sub i32 %297, %299, !dbg !32
  %301 = bitcast i32 %300 to float, !dbg !32
  %302 = sitofp i32 %299 to float, !dbg !32
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i66 = icmp eq i32 %303, 0, !dbg !32
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %302, float 0x3E80000000000000, float %i.i.0.i65) #4, !dbg !32
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %302, float 0x3E80000000000000, float %i.i.0.i65) #4, !dbg !32
  %.08.i67 = select i1 %.not.i66, float %305, float %304, !dbg !32
  %306 = fadd float %301, -1.000000e+00, !dbg !32
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i68 = icmp eq i32 %307, 0, !dbg !32
  %308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %306, float 0x3FC2073EC0000000) #4, !dbg !32
  %309 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %306, float 0x3FC2073EC0000000) #4, !dbg !32
  %.010.i69 = select i1 %.not1.i68, float %309, float %308, !dbg !32
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i70 = icmp eq i32 %310, 0, !dbg !32
  %311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i69, float %306, float 0xBFBF19B980000000) #4, !dbg !32
  %312 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i69, float %306, float 0xBFBF19B980000000) #4, !dbg !32
  %.011.i71 = select i1 %.not2.i70, float %312, float %311, !dbg !32
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i72 = icmp eq i32 %313, 0, !dbg !32
  %314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i71, float %306, float 0x3FC1E52AA0000000) #4, !dbg !32
  %315 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i71, float %306, float 0x3FC1E52AA0000000) #4, !dbg !32
  %.012.i73 = select i1 %.not3.i72, float %315, float %314, !dbg !32
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i74 = icmp eq i32 %316, 0, !dbg !32
  %317 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i73, float %306, float 0xBFC55B1720000000) #4, !dbg !32
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i73, float %306, float 0xBFC55B1720000000) #4, !dbg !32
  %.09.i75 = select i1 %.not4.i74, float %318, float %317, !dbg !32
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i76 = icmp eq i32 %319, 0, !dbg !32
  %320 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i75, float %306, float 0x3FC99DA160000000) #4, !dbg !32
  %321 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i75, float %306, float 0x3FC99DA160000000) #4, !dbg !32
  %.05.i77 = select i1 %.not5.i76, float %321, float %320, !dbg !32
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i78 = icmp eq i32 %322, 0, !dbg !32
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i77, float %306, float 0xBFCFFFE440000000) #4, !dbg !32
  %324 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i77, float %306, float 0xBFCFFFE440000000) #4, !dbg !32
  %.01.i79 = select i1 %.not6.i78, float %324, float %323, !dbg !32
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i80 = icmp eq i32 %325, 0, !dbg !32
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i79, float %306, float 0x3FD5554F00000000) #4, !dbg !32
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i79, float %306, float 0x3FD5554F00000000) #4, !dbg !32
  %.0.i81 = select i1 %.not7.i80, float %327, float %326, !dbg !32
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i82 = icmp eq i32 %328, 0, !dbg !32
  %329 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i81, float %306, float -5.000000e-01) #4, !dbg !32
  %330 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i81, float %306, float -5.000000e-01) #4, !dbg !32
  %.07.i83 = select i1 %.not8.i82, float %330, float %329, !dbg !32
  %331 = fmul float %306, %.07.i83, !dbg !32
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not9.i84 = icmp eq i32 %332, 0, !dbg !32
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %331, float %306, float %306) #4, !dbg !32
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %331, float %306, float %306) #4, !dbg !32
  %.06.i85 = select i1 %.not9.i84, float %334, float %333, !dbg !32
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not10.i86 = icmp eq i32 %335, 0, !dbg !32
  %336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i67, float 0x3FE62E4300000000, float %.06.i85) #4, !dbg !32
  %337 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i67, float 0x3FE62E4300000000, float %.06.i85) #4, !dbg !32
  %.04.i87 = select i1 %.not10.i86, float %337, float %336, !dbg !32
  %338 = icmp ugt i32 %297, 2139095039, !dbg !32
  br i1 %338, label %__nv_fmaf_rn.exit.i.i90, label %__nv_logf.exit93, !dbg !32

__nv_fmaf_rn.exit.i.i90:                          ; preds = %__nv_logf.exit63
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not11.i91 = icmp eq i32 %339, 0, !dbg !32
  %340 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i64, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %341 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i64, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !32
  %.03.i92 = select i1 %.not11.i91, float %341, float %340, !dbg !32
  br label %__nv_logf.exit93, !dbg !32

__nv_logf.exit93:                                 ; preds = %__nv_logf.exit63, %__nv_fmaf_rn.exit.i.i90
  %r.i.0.i88 = phi float [ %.03.i92, %__nv_fmaf_rn.exit.i.i90 ], [ %.04.i87, %__nv_logf.exit63 ], !dbg !32
  %342 = fcmp oeq float %.02.i34, 0.000000e+00, !dbg !32
  %r.i.1.i59 = select i1 %342, float 0xFFF0000000000000, float %r.i.0.i58, !dbg !32
  %343 = fcmp oeq float %.02.i4, 0.000000e+00, !dbg !32
  %r.i.1.i29 = select i1 %343, float 0xFFF0000000000000, float %r.i.0.i28, !dbg !32
  %344 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !32
  %r.i.1.i = select i1 %344, float 0xFFF0000000000000, float %r.i.0.i, !dbg !32
  %345 = extractvalue { i32, i32, i32, i32 } %22, 3, !dbg !14
  %346 = bitcast i32 %345 to float, !dbg !14
  %347 = extractvalue { i32, i32, i32, i32 } %22, 2, !dbg !14
  %348 = bitcast i32 %347 to float, !dbg !14
  %349 = extractvalue { i32, i32, i32, i32 } %22, 1, !dbg !14
  %350 = bitcast i32 %349 to float, !dbg !14
  %351 = extractvalue { i32, i32, i32, i32 } %22, 0, !dbg !14
  %352 = bitcast i32 %351 to float, !dbg !14
  %353 = fcmp oeq float %.02.i64, 0.000000e+00, !dbg !32
  %r.i.1.i89 = select i1 %353, float 0xFFF0000000000000, float %r.i.0.i88, !dbg !32
  %354 = fadd float %89, %r.i.1.i, !dbg !33
  %355 = fadd float %89, %r.i.1.i29, !dbg !33
  %356 = fadd float %89, %r.i.1.i59, !dbg !33
  %357 = fadd float %89, %r.i.1.i89, !dbg !33
  %358 = fsub float %17, %354, !dbg !34
  %359 = fsub float %18, %355, !dbg !34
  %360 = fsub float %19, %356, !dbg !34
  %361 = fsub float %20, %357, !dbg !34
  %362 = fmul float %358, %352, !dbg !35
  %363 = fmul float %359, %350, !dbg !35
  %364 = fmul float %360, %348, !dbg !35
  %365 = fmul float %361, %346, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %366 = fadd float %362, %363, !dbg !40
  %367 = fadd float %366, %364, !dbg !40
  %368 = fadd float %367, %365, !dbg !40
  %369 = bitcast float %368 to i32, !dbg !36
  %370 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %369, i32 16, i32 31), !dbg !36
  %371 = bitcast i32 %370 to float, !dbg !36
  %372 = fadd float %368, %371, !dbg !40
  %373 = bitcast float %372 to i32, !dbg !36
  %374 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %373, i32 8, i32 31), !dbg !36
  %375 = bitcast i32 %374 to float, !dbg !36
  %376 = fadd float %372, %375, !dbg !40
  %377 = bitcast float %376 to i32, !dbg !36
  %378 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %377, i32 4, i32 31), !dbg !36
  %379 = bitcast i32 %378 to float, !dbg !36
  %380 = fadd float %376, %379, !dbg !40
  %381 = bitcast float %380 to i32, !dbg !36
  %382 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %381, i32 2, i32 31), !dbg !36
  %383 = bitcast i32 %382 to float, !dbg !36
  %384 = fadd float %380, %383, !dbg !40
  %385 = bitcast float %384 to i32, !dbg !36
  %386 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %385, i32 1, i32 31), !dbg !36
  %387 = bitcast i32 %386 to float, !dbg !36
  %388 = fadd float %384, %387, !dbg !40
  %389 = bitcast float %388 to <1 x i32>, !dbg !36
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %71, <1 x i32> %389, i1 %69) #4, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %390 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %75, i1 %74) #4, !dbg !36
  %391 = bitcast i32 %390 to float, !dbg !36
  %392 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %390, i32 1, i32 31), !dbg !36
  %393 = bitcast i32 %392 to float, !dbg !36
  %394 = fadd float %391, %393, !dbg !40
  %395 = bitcast float %394 to <1 x i32>, !dbg !36
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %75, <1 x i32> %395, i1 %85) #4, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %396 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !36
  %397 = fadd float %396, 0.000000e+00, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %398 = fadd float %352, %350, !dbg !46
  %399 = fadd float %398, %348, !dbg !46
  %400 = fadd float %399, %346, !dbg !46
  %401 = bitcast float %400 to i32, !dbg !44
  %402 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %401, i32 16, i32 31), !dbg !44
  %403 = bitcast i32 %402 to float, !dbg !44
  %404 = fadd float %400, %403, !dbg !46
  %405 = bitcast float %404 to i32, !dbg !44
  %406 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %405, i32 8, i32 31), !dbg !44
  %407 = bitcast i32 %406 to float, !dbg !44
  %408 = fadd float %404, %407, !dbg !46
  %409 = bitcast float %408 to i32, !dbg !44
  %410 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %409, i32 4, i32 31), !dbg !44
  %411 = bitcast i32 %410 to float, !dbg !44
  %412 = fadd float %408, %411, !dbg !46
  %413 = bitcast float %412 to i32, !dbg !44
  %414 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %413, i32 2, i32 31), !dbg !44
  %415 = bitcast i32 %414 to float, !dbg !44
  %416 = fadd float %412, %415, !dbg !46
  %417 = bitcast float %416 to i32, !dbg !44
  %418 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %417, i32 1, i32 31), !dbg !44
  %419 = bitcast i32 %418 to float, !dbg !44
  %420 = fadd float %416, %419, !dbg !46
  %421 = bitcast float %420 to <1 x i32>, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %71, <1 x i32> %421, i1 %69) #4, !dbg !44
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %422 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %75, i1 %74) #4, !dbg !44
  %423 = bitcast i32 %422 to float, !dbg !44
  %424 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %422, i32 1, i32 31), !dbg !44
  %425 = bitcast i32 %424 to float, !dbg !44
  %426 = fadd float %423, %425, !dbg !46
  %427 = bitcast float %426 to <1 x i32>, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %75, <1 x i32> %427, i1 %85) #4, !dbg !44
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %428 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !44
  %429 = fadd float %428, 0.000000e+00, !dbg !47
  %430 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %397, float %429) #4, !dbg !49
  %431 = fsub float 0.000000e+00, %430, !dbg !50
  tail call void @llvm.nvvm.barrier0(), !dbg !51
  %urem = and i32 %5, 63, !dbg !52
  %432 = icmp eq i32 %urem, 0, !dbg !52
  %433 = bitcast float %431 to i32, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %433, ptr addrspace(1) %0, i1 %432) #4, !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.up.i32(i32, i32, i32, i32) #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py", directory: "inductor_cache/ad")
!4 = !{ptr @triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0", linkageName: "triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0", scope: !3, file: !3, line: 24, type: !8, scopeLine: 24, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 32, column: 26, scope: !7)
!11 = !DILocation(line: 36, column: 30, scope: !7)
!12 = !DILocation(line: 36, column: 35, scope: !7)
!13 = !DILocation(line: 37, column: 31, scope: !7)
!14 = !DILocation(line: 37, column: 36, scope: !7)
!15 = !DILocation(line: 118, column: 15, scope: !16, inlinedAt: !19)
!16 = distinct !DILexicalBlockFile(scope: !18, file: !17, discriminator: 0)
!17 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!18 = distinct !DILexicalBlockFile(scope: !7, file: !17, discriminator: 0)
!19 = !DILocation(line: 39, column: 70, scope: !7)
!20 = !DILocation(line: 120, column: 21, scope: !16, inlinedAt: !19)
!21 = !DILocation(line: 120, column: 16, scope: !16, inlinedAt: !19)
!22 = !DILocation(line: 121, column: 29, scope: !16, inlinedAt: !19)
!23 = !DILocation(line: 131, column: 29, scope: !18, inlinedAt: !19)
!24 = !DILocation(line: 73, column: 15, scope: !18, inlinedAt: !25)
!25 = !DILocation(line: 39, column: 44, scope: !7)
!26 = !DILocation(line: 40, column: 18, scope: !7)
!27 = !DILocation(line: 41, column: 23, scope: !7)
!28 = !DILocation(line: 44, column: 44, scope: !7)
!29 = !DILocation(line: 13, column: 20, scope: !30, inlinedAt: !28)
!30 = distinct !DILexicalBlockFile(scope: !7, file: !3, discriminator: 0)
!31 = !DILocation(line: 46, column: 19, scope: !7)
!32 = !DILocation(line: 47, column: 24, scope: !7)
!33 = !DILocation(line: 48, column: 20, scope: !7)
!34 = !DILocation(line: 49, column: 19, scope: !7)
!35 = !DILocation(line: 50, column: 20, scope: !7)
!36 = !DILocation(line: 267, column: 36, scope: !37, inlinedAt: !39)
!37 = distinct !DILexicalBlockFile(scope: !7, file: !38, discriminator: 0)
!38 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!39 = !DILocation(line: 52, column: 59, scope: !7)
!40 = !DILocation(line: 256, column: 15, scope: !41, inlinedAt: !39)
!41 = distinct !DILexicalBlockFile(scope: !37, file: !38, discriminator: 0)
!42 = !DILocation(line: 73, column: 15, scope: !18, inlinedAt: !43)
!43 = !DILocation(line: 52, column: 45, scope: !7)
!44 = !DILocation(line: 267, column: 36, scope: !37, inlinedAt: !45)
!45 = !DILocation(line: 54, column: 59, scope: !7)
!46 = !DILocation(line: 256, column: 15, scope: !41, inlinedAt: !45)
!47 = !DILocation(line: 73, column: 15, scope: !18, inlinedAt: !48)
!48 = !DILocation(line: 54, column: 45, scope: !7)
!49 = !DILocation(line: 55, column: 20, scope: !7)
!50 = !DILocation(line: 56, column: 13, scope: !7)
!51 = !DILocation(line: 57, column: 4, scope: !7)
!52 = !DILocation(line: 58, column: 63, scope: !7)
!53 = !DILocation(line: 58, column: 4, scope: !7)
