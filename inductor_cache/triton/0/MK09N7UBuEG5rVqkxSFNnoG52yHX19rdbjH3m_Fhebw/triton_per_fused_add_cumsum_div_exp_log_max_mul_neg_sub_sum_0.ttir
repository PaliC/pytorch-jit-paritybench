#loc = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":24:0)
#loc1 = loc(unknown)
#loc8 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":39:70)
#loc25 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":52:59)
#loc28 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":54:59)
#loc37 = loc(callsite(#loc1 at #loc8))
#loc45 = loc(callsite(#loc1 at #loc25))
#loc49 = loc(callsite(#loc1 at #loc28))
module {
  tt.func public @triton_per_fused_add_cumsum_div_exp_log_max_mul_neg_sub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":24:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":24:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":24:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":24:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e-07> : tensor<256xf32> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>> loc(#loc6)
    %7 = "tt.reduce"(%3) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc8)), %arg5: f32 loc(callsite(#loc1 at #loc8))):
      %27 = arith.cmpf ogt, %arg4, %arg5 : f32 loc(#loc51)
      %28 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc52)
      %29 = arith.ori %27, %28 : i1 loc(#loc53)
      %30 = arith.select %29, %arg4, %arg5 : f32 loc(#loc54)
      tt.reduce.return %30 : f32 loc(#loc36)
    }) : (tensor<256xf32>) -> f32 loc(#loc36)
    %8 = arith.addf %7, %cst : f32 loc(#loc42)
    %9 = tt.splat %8 : f32 -> tensor<256xf32> loc(#loc15)
    %10 = arith.subf %3, %9 : tensor<256xf32> loc(#loc15)
    %11 = math.exp %10 : tensor<256xf32> loc(#loc16)
    %12 = "tt.scan"(%11) <{axis = 0 : i32, reverse = false}> ({
    ^bb0(%arg4: f32 loc(unknown), %arg5: f32 loc(unknown)):
      %27 = arith.addf %arg4, %arg5 : f32 loc(#loc43)
      tt.scan.return %27 : f32 loc(#loc17)
    }) : (tensor<256xf32>) -> tensor<256xf32> loc(#loc17)
    %13 = arith.addf %12, %cst_0 : tensor<256xf32> loc(#loc19)
    %14 = math.log %13 : tensor<256xf32> loc(#loc20)
    %15 = arith.addf %14, %9 : tensor<256xf32> loc(#loc21)
    %16 = arith.subf %3, %15 : tensor<256xf32> loc(#loc22)
    %17 = arith.mulf %16, %6 : tensor<256xf32> loc(#loc23)
    %18 = "tt.reduce"(%17) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc25)), %arg5: f32 loc(callsite(#loc1 at #loc25))):
      %27 = arith.addf %arg4, %arg5 : f32 loc(#loc55)
      tt.reduce.return %27 : f32 loc(#loc44)
    }) : (tensor<256xf32>) -> f32 loc(#loc44)
    %19 = arith.addf %18, %cst : f32 loc(#loc47)
    %20 = "tt.reduce"(%6) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc28)), %arg5: f32 loc(callsite(#loc1 at #loc28))):
      %27 = arith.addf %arg4, %arg5 : f32 loc(#loc56)
      tt.reduce.return %27 : f32 loc(#loc48)
    }) : (tensor<256xf32>) -> f32 loc(#loc48)
    %21 = arith.addf %20, %cst : f32 loc(#loc50)
    %22 = arith.divf %19, %21 : f32 loc(#loc30)
    %23 = arith.subf %cst, %22 : f32 loc(#loc31)
    %24 = tt.splat %23 : f32 -> tensor<1xf32> loc(#loc31)
    gpu.barrier loc(#loc32)
    %25 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc33)
    %26 = tt.splat %25 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc33)
    tt.store %26, %24 : tensor<1x!tt.ptr<f32>> loc(#loc34)
    tt.return loc(#loc35)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":32:26)
#loc3 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":36:30)
#loc4 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":36:35)
#loc5 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":37:31)
#loc6 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":37:36)
#loc7 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc14 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":39:44)
#loc15 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":40:18)
#loc16 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":41:23)
#loc17 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":44:44)
#loc18 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":13:20)
#loc19 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":46:19)
#loc20 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":47:24)
#loc21 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":48:20)
#loc22 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":49:19)
#loc23 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":50:20)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc27 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":52:45)
#loc29 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":54:45)
#loc30 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":55:20)
#loc31 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":56:13)
#loc32 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":57:4)
#loc33 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":58:28)
#loc34 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":58:63)
#loc35 = loc("inductor_cache/ad/cadk3ex5crg7rdr72bwthfv42jeangoao5txlm7rwaij67xeyvws.py":58:4)
#loc36 = loc(callsite(#loc7 at #loc8))
#loc38 = loc(callsite(#loc9 at #loc7))
#loc39 = loc(callsite(#loc10 at #loc7))
#loc40 = loc(callsite(#loc11 at #loc7))
#loc41 = loc(callsite(#loc12 at #loc7))
#loc42 = loc(callsite(#loc13 at #loc14))
#loc43 = loc(callsite(#loc18 at #loc17))
#loc44 = loc(callsite(#loc24 at #loc25))
#loc46 = loc(callsite(#loc26 at #loc24))
#loc47 = loc(callsite(#loc13 at #loc27))
#loc48 = loc(callsite(#loc24 at #loc28))
#loc50 = loc(callsite(#loc13 at #loc29))
#loc51 = loc(callsite(#loc38 at #loc8))
#loc52 = loc(callsite(#loc39 at #loc8))
#loc53 = loc(callsite(#loc40 at #loc8))
#loc54 = loc(callsite(#loc41 at #loc8))
#loc55 = loc(callsite(#loc46 at #loc25))
#loc56 = loc(callsite(#loc46 at #loc28))
