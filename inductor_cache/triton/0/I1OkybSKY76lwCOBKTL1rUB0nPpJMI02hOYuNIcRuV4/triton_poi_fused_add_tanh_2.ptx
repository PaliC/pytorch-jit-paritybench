//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_tanh_2 // -- Begin function triton_poi_fused_add_tanh_2
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_tanh_2
.visible .entry triton_poi_fused_add_tanh_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_tanh_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_tanh_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_tanh_2_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_tanh_2_param_3,
	.param .u32 triton_poi_fused_add_tanh_2_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<40>;
	.reg .f32 	%f<62>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_add_tanh_2_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_add_tanh_2_param_1];
$L__tmp0:
	.loc	1 21 28                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:21:28
	// begin inline asm
	mov.u32 %r8, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:21:33
	shl.b32 	%r17, %r8, 8;
	ld.param.u64 	%rd8, [triton_poi_fused_add_tanh_2_param_2];
	ld.param.u64 	%rd9, [triton_poi_fused_add_tanh_2_param_3];
	.loc	1 22 36                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:22:36
	mov.u32 	%r18, %tid.x;
	shl.b32 	%r19, %r18, 1;
	and.b32  	%r20, %r19, 254;
	.loc	1 22 23                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:22:23
	or.b32  	%r1, %r17, %r20;
	.loc	1 23 21                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:23:21
	setp.lt.s32 	%p1, %r1, 256;
	.loc	1 25 19                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:25:19
	bfe.s32 	%r21, %r8, 23, 1;
	shr.u32 	%r22, %r21, 30;
	add.s32 	%r23, %r1, %r22;
	and.b32  	%r24, %r23, -4;
	sub.s32 	%r25, %r1, %r24;
	.loc	1 26 19                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:26:19
	shr.u32 	%r26, %r21, 26;
	add.s32 	%r27, %r1, %r26;
	and.b32  	%r28, %r27, -64;
	sub.s32 	%r29, %r1, %r28;
	.loc	1 27 34                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:27:34
	mul.wide.s32 	%rd10, %r1, 4;
	add.s64 	%rd13, %rd6, %rd10;
	.loc	1 27 39                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:27:39
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.v2.b32 { %r9, %r10 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r9;
	mov.b32 	%f6, %r10;
	.loc	1 28 30                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:28:30
	mul.wide.s32 	%rd11, %r25, 4;
	add.s64 	%rd3, %rd7, %rd11;
	.loc	1 28 35                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:28:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r11;
	mov.b32 	%f8, %r12;
	.loc	1 29 30                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:29:30
	mul.wide.s32 	%rd12, %r29, 4;
	add.s64 	%rd4, %rd8, %rd12;
	.loc	1 29 35                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:29:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r13, %r14 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r13;
	mov.b32 	%f10, %r14;
	.loc	1 30 30                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:30:30
	add.s64 	%rd5, %rd9, %rd12;
	.loc	1 30 35                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:30:35
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r15, %r16 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r15;
	mov.b32 	%f12, %r16;
	.loc	1 31 18                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:31:18
	add.f32 	%f13, %f5, %f7;
	add.f32 	%f14, %f6, %f8;
	.loc	1 32 18                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:32:18
	add.f32 	%f15, %f13, %f9;
	add.f32 	%f16, %f14, %f10;
	.loc	1 33 18                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:33:18
	add.f32 	%f1, %f15, %f11;
	add.f32 	%f2, %f16, %f12;
	.loc	1 34 26                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:34:26
	abs.ftz.f32 	%f3, %f1;
	setp.ltu.f32 	%p5, %f3, 0f3F19999A;
	mov.f32 	%f55, 0f3F800000;
	mov.f32 	%f56, 0fC0000000;
	mov.f32 	%f57, 0fBD563CAE;
	mov.f32 	%f58, 0f3C80F082;
	mov.f32 	%f59, 0f3E085941;
	mov.f32 	%f60, 0fBEAAA9ED;
	mov.f32 	%f61, 0f00000000;
	@%p5 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f25, %f1, %f1;
	fma.rn.ftz.f32 	%f28, %f58, %f25, %f57;
	fma.rn.ftz.f32 	%f30, %f28, %f25, %f59;
	fma.rn.ftz.f32 	%f32, %f30, %f25, %f60;
	fma.rn.ftz.f32 	%f34, %f32, %f25, %f61;
	fma.rn.ftz.f32 	%f35, %f34, %f1, %f1;
	.loc	1 35 39                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:35:39
	mov.b32 	%r38, %f35;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	.loc	1 34 26                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:34:26
	mul.f32 	%f19, %f3, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f20, %f19;
	add.f32 	%f18, %f20, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f17,%f18;
	// end inline asm
	fma.rn.ftz.f32 	%f23, %f17, %f56, %f55;
	setp.ge.f32 	%p6, %f3, 0f41102CB4;
	selp.f32 	%f24, 0f3F800000, %f23, %p6;
	mov.b32 	%r30, %f24;
	mov.b32 	%r31, %f1;
	and.b32  	%r32, %r31, -2147483648;
	or.b32  	%r38, %r32, %r30;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 34 26                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:34:26
	abs.ftz.f32 	%f4, %f2;
	setp.ltu.f32 	%p7, %f4, 0f3F19999A;
	@%p7 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;
$L__BB0_5:                              // %__internal_fmad.exit3.i8
	mul.f32 	%f44, %f2, %f2;
	fma.rn.ftz.f32 	%f47, %f58, %f44, %f57;
	fma.rn.ftz.f32 	%f49, %f47, %f44, %f59;
	fma.rn.ftz.f32 	%f51, %f49, %f44, %f60;
	fma.rn.ftz.f32 	%f53, %f51, %f44, %f61;
	fma.rn.ftz.f32 	%f54, %f53, %f2, %f2;
	.loc	1 35 39                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:35:39
	mov.b32 	%r39, %f54;
	bra.uni 	$L__BB0_6;
$L__BB0_4:                              // %__internal_fmad.exit1.i3
	.loc	1 34 26                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:34:26
	mul.f32 	%f38, %f4, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f39, %f38;
	add.f32 	%f37, %f39, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f36,%f37;
	// end inline asm
	fma.rn.ftz.f32 	%f42, %f36, %f56, %f55;
	setp.ge.f32 	%p8, %f4, 0f41102CB4;
	selp.f32 	%f43, 0f3F800000, %f42, %p8;
	mov.b32 	%r33, %f43;
	mov.b32 	%r34, %f2;
	and.b32  	%r35, %r34, -2147483648;
	or.b32  	%r39, %r35, %r33;
$L__BB0_6:                              // %__nv_tanhf.exit19
	.loc	1 35 39                         // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:35:39
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd13 + 0 ], { %r38, %r39 };
	// end inline asm
	.loc	1 35 4                          // cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fe/cfeqzxthgasnny36b7ubhe7tubqkcyzqd23oikumgrxfjooo4cox.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 101
.b8 113
.b8 122
.b8 120
.b8 116
.b8 104
.b8 103
.b8 97
.b8 115
.b8 110
.b8 110
.b8 121
.b8 51
.b8 54
.b8 98
.b8 55
.b8 117
.b8 98
.b8 104
.b8 101
.b8 55
.b8 116
.b8 117
.b8 98
.b8 113
.b8 107
.b8 99
.b8 121
.b8 122
.b8 113
.b8 100
.b8 50
.b8 51
.b8 111
.b8 105
.b8 107
.b8 117
.b8 109
.b8 103
.b8 114
.b8 120
.b8 102
.b8 106
.b8 111
.b8 111
.b8 111
.b8 52
.b8 99
.b8 111
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 101
.b8 0
	}
	.section	.debug_macinfo	{	}
