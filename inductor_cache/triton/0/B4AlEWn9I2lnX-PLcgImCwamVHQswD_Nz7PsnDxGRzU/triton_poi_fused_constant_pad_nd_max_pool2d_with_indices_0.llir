; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_constant_pad_nd_max_pool2d_with_indices_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 144, !dbg !14
  %10 = sdiv i32 %8, 3, !dbg !15
  %11 = sdiv i32 %8, 9, !dbg !16
  %12 = shl i32 %11, 4, !dbg !17
  %13 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !18
  %14 = insertelement <2 x i32> %13, i32 %10, i64 1, !dbg !18
  %15 = srem <2 x i32> %14, splat (i32 3), !dbg !18
  %16 = extractelement <2 x i32> %15, i64 0, !dbg !18
  %17 = extractelement <2 x i32> %15, i64 1, !dbg !19
  %18 = icmp sgt i32 %17, 0, !dbg !20
  %19 = shl nsw <2 x i32> %15, splat (i32 1), !dbg !21
  %20 = shl nsw i32 %16, 1, !dbg !21
  %21 = icmp sgt i32 %16, 0, !dbg !22
  %22 = and i1 %21, %18, !dbg !23
  %23 = shl nsw i32 %17, 3, !dbg !24
  %24 = add i32 %12, %20, !dbg !25
  %25 = add i32 %24, -10, !dbg !26
  %26 = add i32 %25, %23, !dbg !27
  %27 = sext i32 %26 to i64, !dbg !28
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !28
  %29 = and i1 %9, %22, !dbg !29
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %29, i32 0, i1 %29) #1, !dbg !30
  %31 = bitcast i32 %30 to float, !dbg !30
  %32 = select i1 %22, float %31, float 0xFFF0000000000000, !dbg !31
  %33 = icmp sgt <2 x i32> %15, splat (i32 -1), !dbg !32
  %34 = extractelement <2 x i1> %33, i64 0, !dbg !33
  %35 = and i1 %34, %18, !dbg !33
  %36 = add i32 %24, -9, !dbg !34
  %37 = add i32 %36, %23, !dbg !35
  %38 = sext i32 %37 to i64, !dbg !36
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !36
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %29, i32 0, i1 %29) #1, !dbg !37
  %41 = or disjoint <2 x i32> %19, splat (i32 1), !dbg !38
  %42 = icmp slt <2 x i32> %41, splat (i32 5), !dbg !39
  %43 = and <2 x i1> %33, %42, !dbg !40
  %44 = extractelement <2 x i1> %43, i64 0, !dbg !41
  %45 = and i1 %18, %44, !dbg !42
  %46 = add i32 %24, -8, !dbg !43
  %47 = add i32 %46, %23, !dbg !44
  %48 = sext i32 %47 to i64, !dbg !45
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !45
  %50 = and i1 %9, %45, !dbg !46
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %50, i32 0, i1 %50) #1, !dbg !47
  %52 = extractelement <2 x i1> %33, i64 1, !dbg !48
  %53 = and i1 %21, %52, !dbg !48
  %54 = add i32 %24, -6, !dbg !49
  %55 = add i32 %54, %23, !dbg !50
  %56 = sext i32 %55 to i64, !dbg !51
  %57 = getelementptr float, ptr addrspace(1) %0, i64 %56, !dbg !51
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %57, i1 %29, i32 0, i1 %29) #1, !dbg !52
  %59 = or i32 %17, %16, !dbg !19
  %60 = icmp sgt i32 %59, -1, !dbg !19
  %61 = and i1 %22, %60, !dbg !53
  %62 = add i32 %24, -5, !dbg !54
  %63 = add i32 %62, %23, !dbg !55
  %64 = sext i32 %63 to i64, !dbg !56
  %65 = getelementptr float, ptr addrspace(1) %0, i64 %64, !dbg !56
  %66 = and i1 %9, %61, !dbg !57
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %66, i32 0, i1 %66) #1, !dbg !58
  %68 = and i1 %52, %44, !dbg !59
  %69 = add i32 %24, -4, !dbg !60
  %70 = add i32 %69, %23, !dbg !61
  %71 = sext i32 %70 to i64, !dbg !62
  %72 = getelementptr float, ptr addrspace(1) %0, i64 %71, !dbg !62
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %72, i1 %50, i32 0, i1 %50) #1, !dbg !63
  %74 = extractelement <2 x i1> %43, i64 1, !dbg !41
  %75 = and i1 %21, %74, !dbg !64
  %76 = add i32 %24, -2, !dbg !65
  %77 = add i32 %76, %23, !dbg !66
  %78 = sext i32 %77 to i64, !dbg !67
  %79 = getelementptr float, ptr addrspace(1) %0, i64 %78, !dbg !67
  %80 = and i1 %9, %75, !dbg !68
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %79, i1 %80, i32 0, i1 %80) #1, !dbg !69
  %82 = and i1 %34, %74, !dbg !70
  %83 = add i32 %24, -1, !dbg !71
  %84 = add i32 %83, %23, !dbg !72
  %85 = sext i32 %84 to i64, !dbg !73
  %86 = getelementptr float, ptr addrspace(1) %0, i64 %85, !dbg !73
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %86, i1 %80, i32 0, i1 %80) #1, !dbg !74
  %88 = and i1 %44, %74, !dbg !41
  %89 = and i1 %60, %88, !dbg !75
  %90 = add i32 %24, %23, !dbg !76
  %91 = sext i32 %90 to i64, !dbg !77
  %92 = getelementptr float, ptr addrspace(1) %0, i64 %91, !dbg !77
  %93 = and i1 %9, %89, !dbg !78
  %94 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %92, i1 %93, i32 0, i1 %93) #1, !dbg !79
  %95 = insertelement <8 x i32> poison, i32 %94, i64 0, !dbg !79
  %96 = insertelement <8 x i32> %95, i32 %87, i64 1, !dbg !79
  %97 = insertelement <8 x i32> %96, i32 %81, i64 2, !dbg !79
  %98 = insertelement <8 x i32> %97, i32 %73, i64 3, !dbg !79
  %99 = insertelement <8 x i32> %98, i32 %67, i64 4, !dbg !79
  %100 = insertelement <8 x i32> %99, i32 %58, i64 5, !dbg !79
  %101 = insertelement <8 x i32> %100, i32 %51, i64 6, !dbg !79
  %102 = insertelement <8 x i32> %101, i32 %40, i64 7, !dbg !79
  %103 = bitcast <8 x i32> %102 to <8 x float>, !dbg !79
  %104 = insertelement <8 x i1> poison, i1 %88, i64 0, !dbg !80
  %105 = insertelement <8 x i1> %104, i1 %82, i64 1, !dbg !80
  %106 = insertelement <8 x i1> %105, i1 %75, i64 2, !dbg !80
  %107 = insertelement <8 x i1> %106, i1 %68, i64 3, !dbg !80
  %108 = insertelement <8 x i1> %107, i1 %60, i64 4, !dbg !80
  %109 = insertelement <8 x i1> %108, i1 %53, i64 5, !dbg !80
  %110 = insertelement <8 x i1> %109, i1 %45, i64 6, !dbg !80
  %111 = insertelement <8 x i1> %110, i1 %35, i64 7, !dbg !80
  %112 = select <8 x i1> %111, <8 x float> %103, <8 x float> splat (float 0xFFF0000000000000), !dbg !80
  %113 = extractelement <8 x float> %112, i64 7, !dbg !81
  %114 = fcmp ogt float %113, %32, !dbg !85
  %115 = fcmp uno <8 x float> %112, zeroinitializer, !dbg !86
  %116 = extractelement <8 x i1> %115, i64 7, !dbg !88
  %117 = or i1 %114, %116, !dbg !88
  %118 = select i1 %117, float %113, float %32, !dbg !81
  %119 = extractelement <8 x float> %112, i64 6, !dbg !89
  %120 = fcmp ogt float %119, %118, !dbg !91
  %121 = extractelement <8 x i1> %115, i64 6, !dbg !92
  %122 = or i1 %121, %120, !dbg !92
  %123 = select i1 %122, float %119, float %118, !dbg !89
  %124 = extractelement <8 x float> %112, i64 5, !dbg !93
  %125 = fcmp ogt float %124, %123, !dbg !95
  %126 = extractelement <8 x i1> %115, i64 5, !dbg !96
  %127 = or i1 %126, %125, !dbg !96
  %128 = select i1 %127, float %124, float %123, !dbg !93
  %129 = extractelement <8 x float> %112, i64 4, !dbg !97
  %130 = fcmp ogt float %129, %128, !dbg !99
  %131 = extractelement <8 x i1> %115, i64 4, !dbg !100
  %132 = or i1 %131, %130, !dbg !100
  %133 = select i1 %132, float %129, float %128, !dbg !97
  %134 = extractelement <8 x float> %112, i64 3, !dbg !101
  %135 = fcmp ogt float %134, %133, !dbg !103
  %136 = extractelement <8 x i1> %115, i64 3, !dbg !104
  %137 = or i1 %136, %135, !dbg !104
  %138 = select i1 %137, float %134, float %133, !dbg !101
  %139 = extractelement <8 x float> %112, i64 2, !dbg !105
  %140 = fcmp ogt float %139, %138, !dbg !107
  %141 = extractelement <8 x i1> %115, i64 2, !dbg !108
  %142 = or i1 %141, %140, !dbg !108
  %143 = select i1 %142, float %139, float %138, !dbg !105
  %144 = extractelement <8 x float> %112, i64 1, !dbg !109
  %145 = fcmp ogt float %144, %143, !dbg !111
  %146 = extractelement <8 x i1> %115, i64 1, !dbg !112
  %147 = or i1 %146, %145, !dbg !112
  %148 = select i1 %147, float %144, float %143, !dbg !109
  %149 = extractelement <8 x float> %112, i64 0, !dbg !113
  %150 = fcmp ogt float %149, %148, !dbg !114
  %151 = extractelement <8 x i1> %115, i64 0, !dbg !115
  %152 = or i1 %151, %150, !dbg !115
  %153 = select i1 %152, float %149, float %148, !dbg !113
  %154 = sext i32 %8 to i64, !dbg !116
  %155 = getelementptr float, ptr addrspace(1) %1, i64 %154, !dbg !116
  %156 = bitcast float %153 to i32, !dbg !117
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %156, ptr addrspace(1) %155, i1 %9) #1, !dbg !117
  ret void, !dbg !118
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py", directory: "inductor_cache/yx")
!4 = !{ptr @triton_poi_fused_constant_pad_nd_max_pool2d_with_indices_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_constant_pad_nd_max_pool2d_with_indices_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_constant_pad_nd_max_pool2d_with_indices_0", linkageName: "triton_poi_fused_constant_pad_nd_max_pool2d_with_indices_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 46, column: 56, scope: !7)
!18 = !DILocation(line: 25, column: 19, scope: !7)
!19 = !DILocation(line: 97, column: 20, scope: !7)
!20 = !DILocation(line: 30, column: 19, scope: !7)
!21 = !DILocation(line: 34, column: 20, scope: !7)
!22 = !DILocation(line: 35, column: 19, scope: !7)
!23 = !DILocation(line: 38, column: 19, scope: !7)
!24 = !DILocation(line: 46, column: 48, scope: !7)
!25 = !DILocation(line: 46, column: 39, scope: !7)
!26 = !DILocation(line: 46, column: 46, scope: !7)
!27 = !DILocation(line: 46, column: 53, scope: !7)
!28 = !DILocation(line: 46, column: 31, scope: !7)
!29 = !DILocation(line: 46, column: 69, scope: !7)
!30 = !DILocation(line: 46, column: 61, scope: !7)
!31 = !DILocation(line: 48, column: 35, scope: !7)
!32 = !DILocation(line: 50, column: 21, scope: !7)
!33 = !DILocation(line: 53, column: 19, scope: !7)
!34 = !DILocation(line: 61, column: 45, scope: !7)
!35 = !DILocation(line: 61, column: 52, scope: !7)
!36 = !DILocation(line: 61, column: 31, scope: !7)
!37 = !DILocation(line: 61, column: 60, scope: !7)
!38 = !DILocation(line: 65, column: 16, scope: !7)
!39 = !DILocation(line: 67, column: 20, scope: !7)
!40 = !DILocation(line: 68, column: 20, scope: !7)
!41 = !DILocation(line: 149, column: 21, scope: !7)
!42 = !DILocation(line: 69, column: 19, scope: !7)
!43 = !DILocation(line: 77, column: 45, scope: !7)
!44 = !DILocation(line: 77, column: 52, scope: !7)
!45 = !DILocation(line: 77, column: 31, scope: !7)
!46 = !DILocation(line: 77, column: 68, scope: !7)
!47 = !DILocation(line: 77, column: 60, scope: !7)
!48 = !DILocation(line: 85, column: 20, scope: !7)
!49 = !DILocation(line: 93, column: 45, scope: !7)
!50 = !DILocation(line: 93, column: 52, scope: !7)
!51 = !DILocation(line: 93, column: 31, scope: !7)
!52 = !DILocation(line: 93, column: 60, scope: !7)
!53 = !DILocation(line: 104, column: 20, scope: !7)
!54 = !DILocation(line: 105, column: 45, scope: !7)
!55 = !DILocation(line: 105, column: 52, scope: !7)
!56 = !DILocation(line: 105, column: 31, scope: !7)
!57 = !DILocation(line: 105, column: 68, scope: !7)
!58 = !DILocation(line: 105, column: 60, scope: !7)
!59 = !DILocation(line: 109, column: 20, scope: !7)
!60 = !DILocation(line: 117, column: 45, scope: !7)
!61 = !DILocation(line: 117, column: 52, scope: !7)
!62 = !DILocation(line: 117, column: 31, scope: !7)
!63 = !DILocation(line: 117, column: 60, scope: !7)
!64 = !DILocation(line: 125, column: 20, scope: !7)
!65 = !DILocation(line: 133, column: 46, scope: !7)
!66 = !DILocation(line: 133, column: 53, scope: !7)
!67 = !DILocation(line: 133, column: 32, scope: !7)
!68 = !DILocation(line: 133, column: 70, scope: !7)
!69 = !DILocation(line: 133, column: 61, scope: !7)
!70 = !DILocation(line: 137, column: 21, scope: !7)
!71 = !DILocation(line: 145, column: 46, scope: !7)
!72 = !DILocation(line: 145, column: 53, scope: !7)
!73 = !DILocation(line: 145, column: 32, scope: !7)
!74 = !DILocation(line: 145, column: 61, scope: !7)
!75 = !DILocation(line: 156, column: 22, scope: !7)
!76 = !DILocation(line: 157, column: 46, scope: !7)
!77 = !DILocation(line: 157, column: 32, scope: !7)
!78 = !DILocation(line: 157, column: 63, scope: !7)
!79 = !DILocation(line: 157, column: 54, scope: !7)
!80 = !DILocation(line: 159, column: 38, scope: !7)
!81 = !DILocation(line: 121, column: 29, scope: !82, inlinedAt: !84)
!82 = distinct !DILexicalBlockFile(scope: !7, file: !83, discriminator: 0)
!83 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!84 = !DILocation(line: 64, column: 42, scope: !7)
!85 = !DILocation(line: 118, column: 15, scope: !82, inlinedAt: !84)
!86 = !DILocation(line: 120, column: 21, scope: !82, inlinedAt: !87)
!87 = !DILocation(line: 160, column: 44, scope: !7)
!88 = !DILocation(line: 120, column: 16, scope: !82, inlinedAt: !84)
!89 = !DILocation(line: 121, column: 29, scope: !82, inlinedAt: !90)
!90 = !DILocation(line: 80, column: 42, scope: !7)
!91 = !DILocation(line: 118, column: 15, scope: !82, inlinedAt: !90)
!92 = !DILocation(line: 120, column: 16, scope: !82, inlinedAt: !90)
!93 = !DILocation(line: 121, column: 29, scope: !82, inlinedAt: !94)
!94 = !DILocation(line: 96, column: 42, scope: !7)
!95 = !DILocation(line: 118, column: 15, scope: !82, inlinedAt: !94)
!96 = !DILocation(line: 120, column: 16, scope: !82, inlinedAt: !94)
!97 = !DILocation(line: 121, column: 29, scope: !82, inlinedAt: !98)
!98 = !DILocation(line: 108, column: 42, scope: !7)
!99 = !DILocation(line: 118, column: 15, scope: !82, inlinedAt: !98)
!100 = !DILocation(line: 120, column: 16, scope: !82, inlinedAt: !98)
!101 = !DILocation(line: 121, column: 29, scope: !82, inlinedAt: !102)
!102 = !DILocation(line: 120, column: 42, scope: !7)
!103 = !DILocation(line: 118, column: 15, scope: !82, inlinedAt: !102)
!104 = !DILocation(line: 120, column: 16, scope: !82, inlinedAt: !102)
!105 = !DILocation(line: 121, column: 29, scope: !82, inlinedAt: !106)
!106 = !DILocation(line: 136, column: 44, scope: !7)
!107 = !DILocation(line: 118, column: 15, scope: !82, inlinedAt: !106)
!108 = !DILocation(line: 120, column: 16, scope: !82, inlinedAt: !106)
!109 = !DILocation(line: 121, column: 29, scope: !82, inlinedAt: !110)
!110 = !DILocation(line: 148, column: 44, scope: !7)
!111 = !DILocation(line: 118, column: 15, scope: !82, inlinedAt: !110)
!112 = !DILocation(line: 120, column: 16, scope: !82, inlinedAt: !110)
!113 = !DILocation(line: 121, column: 29, scope: !82, inlinedAt: !87)
!114 = !DILocation(line: 118, column: 15, scope: !82, inlinedAt: !87)
!115 = !DILocation(line: 120, column: 16, scope: !82, inlinedAt: !87)
!116 = !DILocation(line: 161, column: 25, scope: !7)
!117 = !DILocation(line: 161, column: 38, scope: !7)
!118 = !DILocation(line: 161, column: 4, scope: !7)
