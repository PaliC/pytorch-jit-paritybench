; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_copy_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 1280, !dbg !14
  %.frozen6 = freeze i32 %10, !dbg !15
  %13 = sdiv i32 %.frozen6, 20, !dbg !15
  %.frozen = freeze i32 %10, !dbg !16
  %14 = sdiv i32 %.frozen, 5, !dbg !16
  %15 = mul i32 %14, 5, !dbg !17
  %.decomposed = sub i32 %.frozen, %15, !dbg !17
  %.frozen4 = freeze i32 %11, !dbg !16
  %16 = sdiv i32 %.frozen4, 5, !dbg !16
  %17 = mul i32 %16, 5, !dbg !17
  %.decomposed5 = sub i32 %.frozen4, %17, !dbg !17
  %18 = srem i32 %14, 4, !dbg !18
  %19 = srem i32 %16, 4, !dbg !18
  %20 = sdiv i32 %10, 80, !dbg !19
  %21 = mul i32 %13, 20, !dbg !20
  %.decomposed7 = sub i32 %.frozen6, %21, !dbg !20
  %22 = add nsw i32 %.decomposed7, 60, !dbg !21
  %23 = mul nsw i32 %20, 80, !dbg !22
  %24 = add i32 %22, %23, !dbg !23
  %25 = sext i32 %24 to i64, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !24
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %26, i1 %12) #1, !dbg !25
  %28 = extractvalue { i32, i32 } %27, 0, !dbg !25
  %29 = extractvalue { i32, i32 } %27, 1, !dbg !25
  %30 = sext i32 %10 to i64, !dbg !26
  %31 = getelementptr float, ptr addrspace(1) %1, i64 %30, !dbg !26
  %32 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %31, i1 %12) #1, !dbg !27
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !27
  %34 = extractvalue { i32, i32 } %32, 1, !dbg !27
  %35 = and i32 %13, -2147483645, !dbg !28
  %36 = icmp eq i32 %35, 3, !dbg !28
  %37 = icmp sgt i32 %.decomposed, 2, !dbg !29
  %38 = icmp sgt i32 %.decomposed5, 2, !dbg !29
  %39 = shl nsw i32 %18, 2, !dbg !30
  %40 = shl nsw i32 %19, 2, !dbg !30
  %41 = shl nsw i32 %20, 4, !dbg !31
  %42 = add nsw i32 %41, -1, !dbg !32
  %43 = add nsw i32 %42, %.decomposed, !dbg !33
  %44 = add nsw i32 %43, %39, !dbg !34
  %45 = add nsw i32 %42, %.decomposed5, !dbg !33
  %46 = add nsw i32 %45, %40, !dbg !34
  %47 = sext i32 %44 to i64, !dbg !35
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !35
  %49 = sext i32 %46 to i64, !dbg !35
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !35
  %51 = and i1 %12, %37, !dbg !36
  %52 = and i1 %38, %12, !dbg !36
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %51, i32 0, i1 %51) #1, !dbg !37
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %52, i32 0, i1 %52) #1, !dbg !37
  %.v = select i1 %37, i32 %53, i32 %28, !dbg !38
  %.v1 = select i1 %38, i32 %54, i32 %29, !dbg !38
  %.v2 = select i1 %36, i32 %.v, i32 %33, !dbg !39
  %.v3 = select i1 %36, i32 %.v1, i32 %34, !dbg !39
  %55 = getelementptr float, ptr addrspace(1) %2, i64 %30, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.v2, i32 %.v3, ptr addrspace(1) %55, i1 %12) #1, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbascvyznixls7tne6sxr4ee2sipz4tcgiotdhyczybsjwwjmszb.py", directory: "inductor_cache/ba")
!4 = !{ptr @triton_poi_fused_copy_6, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_copy_6, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_copy_6", linkageName: "triton_poi_fused_copy_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 21, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 26, scope: !7)
!19 = !DILocation(line: 27, column: 19, scope: !7)
!20 = !DILocation(line: 28, column: 19, scope: !7)
!21 = !DILocation(line: 30, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 43, scope: !7)
!23 = !DILocation(line: 30, column: 40, scope: !7)
!24 = !DILocation(line: 30, column: 30, scope: !7)
!25 = !DILocation(line: 30, column: 48, scope: !7)
!26 = !DILocation(line: 31, column: 30, scope: !7)
!27 = !DILocation(line: 31, column: 35, scope: !7)
!28 = !DILocation(line: 34, column: 19, scope: !7)
!29 = !DILocation(line: 37, column: 19, scope: !7)
!30 = !DILocation(line: 38, column: 44, scope: !7)
!31 = !DILocation(line: 38, column: 52, scope: !7)
!32 = !DILocation(line: 38, column: 37, scope: !7)
!33 = !DILocation(line: 38, column: 42, scope: !7)
!34 = !DILocation(line: 38, column: 49, scope: !7)
!35 = !DILocation(line: 38, column: 30, scope: !7)
!36 = !DILocation(line: 38, column: 64, scope: !7)
!37 = !DILocation(line: 38, column: 57, scope: !7)
!38 = !DILocation(line: 39, column: 32, scope: !7)
!39 = !DILocation(line: 40, column: 33, scope: !7)
!40 = !DILocation(line: 41, column: 25, scope: !7)
!41 = !DILocation(line: 41, column: 37, scope: !7)
!42 = !DILocation(line: 41, column: 4, scope: !7)
