#loc = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":19:0)
module {
  tt.func public @triton_poi_fused_relu_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":19:0)) attributes {noinline = false} {
    %c728_i32 = arith.constant 728 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x1024xf32> loc(#loc1)
    %cst_0 = arith.constant dense<2981888> : tensor<1x1024xi32> loc(#loc1)
    %cst_1 = arith.constant dense<4096> : tensor<1x1024xi32> loc(#loc1)
    %cst_2 = arith.constant dense<728> : tensor<1x1024xi32> loc(#loc1)
    %cst_3 = arith.constant dense<2912> : tensor<1x1024xi32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<1024xi32> -> tensor<1x1024xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x1024xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x1024xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_3 : tensor<1x1024xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.remsi %5, %cst_2 : tensor<1x1024xi32> loc(#loc9)
    %9 = arith.divsi %5, %cst_2 : tensor<1x1024xi32> loc(#loc10)
    %10 = arith.muli %5, %cst_1 : tensor<1x1024xi32> loc(#loc11)
    %11 = tt.splat %7 : i32 -> tensor<1x1024xi32> loc(#loc12)
    %12 = arith.addi %11, %10 : tensor<1x1024xi32> loc(#loc12)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc13)
    %14 = tt.addptr %13, %12 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc13)
    %15 = tt.load %14, %6 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>> loc(#loc14)
    %16 = arith.cmpf ogt, %cst, %15 : tensor<1x1024xf32> loc(#loc27)
    %17 = arith.select %16, %cst, %15 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc28)
    %18 = arith.muli %7, %c728_i32 : i32 loc(#loc18)
    %19 = tt.splat %18 : i32 -> tensor<1x1024xi32> loc(#loc19)
    %20 = arith.addi %8, %19 : tensor<1x1024xi32> loc(#loc19)
    %21 = arith.muli %9, %cst_0 : tensor<1x1024xi32> loc(#loc20)
    %22 = arith.addi %20, %21 : tensor<1x1024xi32> loc(#loc21)
    %23 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc22)
    %24 = tt.addptr %23, %22 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc22)
    tt.store %24, %17, %6 : tensor<1x1024x!tt.ptr<f32>> loc(#loc23)
    %25 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc24)
    %26 = tt.addptr %25, %12 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc24)
    tt.store %26, %17, %6 : tensor<1x1024x!tt.ptr<f32>> loc(#loc25)
    tt.return loc(#loc26)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":22:28)
#loc3 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":22:33)
#loc4 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":23:36)
#loc5 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":23:44)
#loc6 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":23:23)
#loc7 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":24:21)
#loc8 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":25:28)
#loc9 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":30:19)
#loc10 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":31:19)
#loc11 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":32:40)
#loc12 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":32:35)
#loc13 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":32:30)
#loc14 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":32:45)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc16 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":34:40)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc18 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":35:34)
#loc19 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":35:30)
#loc20 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":35:47)
#loc21 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":35:39)
#loc22 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":35:25)
#loc23 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":35:58)
#loc24 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":36:25)
#loc25 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":36:46)
#loc26 = loc("inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py":36:4)
#loc27 = loc(callsite(#loc15 at #loc16))
#loc28 = loc(callsite(#loc17 at #loc16))
