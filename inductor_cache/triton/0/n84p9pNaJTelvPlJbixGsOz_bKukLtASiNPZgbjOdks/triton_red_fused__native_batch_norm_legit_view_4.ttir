#loc = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":19:0)
#loc1 = loc(unknown)
#loc33 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":43:41)
#loc80 = loc(callsite(#loc1 at #loc33))
module {
  tt.func public @triton_red_fused__native_batch_norm_legit_view_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":19:0), %arg2: i32 loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<16x16xf32> loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<12288> : tensor<16x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<1x16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<16x1xf32> loc(#loc1)
    %cst_4 = arith.constant dense<4.096000e+03> : tensor<16x1xf32> loc(#loc1)
    %cst_5 = arith.constant dense<3> : tensor<16x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<16x16xf32> loc(#loc1)
    %cst_7 = arith.constant dense<4096> : tensor<16x1xi32> loc(#loc1)
    %cst_8 = arith.constant dense<4096> : tensor<1x16xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_9 = arith.constant dense<12> : tensor<16x1xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<16xi32> -> tensor<16x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<16x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<16x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_9 : tensor<16x1xi32> loc(#loc7)
    %7 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc8)
    %8 = arith.muli %5, %cst_7 : tensor<16x1xi32> loc(#loc9)
    %9 = tt.broadcast %8 : tensor<16x1xi32> -> tensor<16x16xi32> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x16x!tt.ptr<f32>> loc(#loc11)
    %11 = tt.broadcast %6 : tensor<16x1xi1> -> tensor<16x16xi1> loc(#loc12)
    %12:3 = scf.for %arg4 = %c0_i32 to %c4096_i32 step %c16_i32 iter_args(%arg5 = %cst_6, %arg6 = %cst_6, %arg7 = %cst_6) -> (tensor<16x16xf32>, tensor<16x16xf32>, tensor<16x16xf32>)  : i32 {
      %31 = tt.splat %arg4 : i32 -> tensor<1x16xi32> loc(#loc14)
      %32 = arith.addi %31, %7 : tensor<1x16xi32> loc(#loc14)
      %33 = arith.cmpi slt, %32, %cst_8 : tensor<1x16xi32> loc(#loc15)
      %34 = tt.broadcast %32 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc10)
      %35 = arith.addi %34, %9 : tensor<16x16xi32> loc(#loc10)
      %36 = tt.addptr %10, %35 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc11)
      %37 = tt.broadcast %33 : tensor<1x16xi1> -> tensor<16x16xi1> loc(#loc12)
      %38 = arith.andi %37, %11 : tensor<16x16xi1> loc(#loc12)
      %39 = tt.load %36, %38, %cst_6 evictionPolicy = evict_last : tensor<16x16x!tt.ptr<f32>> loc(#loc16)
      %40 = arith.cmpi eq, %arg4, %c0_i32 : i32 loc(#loc17)
      %41:3 = scf.if %40 -> (tensor<16x16xf32>, tensor<16x16xf32>, tensor<16x16xf32>) {
        scf.yield %cst_6, %39, %cst_0 : tensor<16x16xf32>, tensor<16x16xf32>, tensor<16x16xf32> loc(#loc71)
      } else {
        %45 = arith.subf %39, %arg5 : tensor<16x16xf32> loc(#loc72)
        %46 = arith.addf %arg7, %cst_0 : tensor<16x16xf32> loc(#loc73)
        %47 = arith.divf %45, %46 : tensor<16x16xf32> loc(#loc74)
        %48 = arith.addf %arg5, %47 : tensor<16x16xf32> loc(#loc75)
        %49 = arith.subf %39, %48 : tensor<16x16xf32> loc(#loc76)
        %50 = arith.mulf %45, %49 : tensor<16x16xf32> loc(#loc77)
        %51 = arith.addf %arg6, %50 : tensor<16x16xf32> loc(#loc78)
        scf.yield %51, %48, %46 : tensor<16x16xf32>, tensor<16x16xf32>, tensor<16x16xf32> loc(#loc78)
      } loc(#loc70)
      %42 = arith.select %38, %41#1, %arg5 : tensor<16x16xi1>, tensor<16x16xf32> loc(#loc28)
      %43 = arith.select %38, %41#0, %arg6 : tensor<16x16xi1>, tensor<16x16xf32> loc(#loc29)
      %44 = arith.select %38, %41#2, %arg7 : tensor<16x16xi1>, tensor<16x16xf32> loc(#loc30)
      scf.yield %42, %43, %44 : tensor<16x16xf32>, tensor<16x16xf32>, tensor<16x16xf32> loc(#loc31)
    } loc(#loc13)
    %13:3 = "tt.reduce"(%12#0, %12#1, %12#2) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc33)), %arg5: f32 loc(callsite(#loc1 at #loc33)), %arg6: f32 loc(callsite(#loc1 at #loc33)), %arg7: f32 loc(callsite(#loc1 at #loc33)), %arg8: f32 loc(callsite(#loc1 at #loc33)), %arg9: f32 loc(callsite(#loc1 at #loc33))):
      %31 = arith.subf %arg7, %arg4 : f32 loc(#loc93)
      %32 = arith.addf %arg6, %arg9 : f32 loc(#loc94)
      %33 = arith.cmpf oeq, %32, %cst : f32 loc(#loc95)
      %34 = arith.divf %arg9, %32 : f32 loc(#loc96)
      %35 = arith.select %33, %cst, %34 : f32 loc(#loc97)
      %36 = arith.mulf %31, %35 : f32 loc(#loc98)
      %37 = arith.addf %arg4, %36 : f32 loc(#loc99)
      %38 = arith.addf %arg5, %arg8 : f32 loc(#loc100)
      %39 = arith.mulf %31, %31 : f32 loc(#loc101)
      %40 = arith.mulf %39, %arg6 : f32 loc(#loc102)
      %41 = arith.mulf %40, %35 : f32 loc(#loc103)
      %42 = arith.addf %38, %41 : f32 loc(#loc104)
      tt.reduce.return %37, %42, %32 : f32, f32, f32 loc(#loc79)
    }) : (tensor<16x16xf32>, tensor<16x16xf32>, tensor<16x16xf32>) -> (tensor<16xf32>, tensor<16xf32>, tensor<16xf32>) loc(#loc79)
    %14 = tt.expand_dims %13#0 {axis = 1 : i32} : tensor<16xf32> -> tensor<16x1xf32> loc(#loc46)
    %15 = tt.expand_dims %13#1 {axis = 1 : i32} : tensor<16xf32> -> tensor<16x1xf32> loc(#loc47)
    %16 = arith.remsi %5, %cst_5 : tensor<16x1xi32> loc(#loc48)
    %17 = arith.divsi %5, %cst_5 : tensor<16x1xi32> loc(#loc49)
    %18 = arith.muli %5, %cst_7 : tensor<16x1xi32> loc(#loc50)
    %19 = tt.broadcast %18 : tensor<16x1xi32> -> tensor<16x16xi32> loc(#loc51)
    %20 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x16x!tt.ptr<f32>> loc(#loc52)
    %21 = tt.broadcast %6 : tensor<16x1xi1> -> tensor<16x16xi1> loc(#loc53)
    %22 = tt.broadcast %14 : tensor<16x1xf32> -> tensor<16x16xf32> loc(#loc54)
    %23 = arith.divf %15, %cst_4 : tensor<16x1xf32> loc(#loc55)
    %24 = arith.addf %23, %cst_3 : tensor<16x1xf32> loc(#loc56)
    %25 = tt.extern_elementwise %24 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<16x1xf32>) -> tensor<16x1xf32> loc(#loc57)
    %26 = tt.broadcast %25 : tensor<16x1xf32> -> tensor<16x16xf32> loc(#loc58)
    %27 = tt.broadcast %16 : tensor<16x1xi32> -> tensor<16x16xi32> loc(#loc59)
    %28 = arith.muli %17, %cst_1 : tensor<16x1xi32> loc(#loc60)
    %29 = tt.broadcast %28 : tensor<16x1xi32> -> tensor<16x16xi32> loc(#loc61)
    %30 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x16x!tt.ptr<f32>> loc(#loc62)
    scf.for %arg4 = %c0_i32 to %c4096_i32 step %c16_i32  : i32 {
      %31 = tt.splat %arg4 : i32 -> tensor<1x16xi32> loc(#loc64)
      %32 = arith.addi %31, %7 : tensor<1x16xi32> loc(#loc64)
      %33 = arith.cmpi slt, %32, %cst_8 : tensor<1x16xi32> loc(#loc65)
      %34 = tt.broadcast %32 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc51)
      %35 = arith.addi %34, %19 : tensor<16x16xi32> loc(#loc51)
      %36 = tt.addptr %20, %35 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc52)
      %37 = tt.broadcast %33 : tensor<1x16xi1> -> tensor<16x16xi1> loc(#loc53)
      %38 = arith.andi %37, %21 : tensor<16x16xi1> loc(#loc53)
      %39 = tt.load %36, %38, %cst_6 evictionPolicy = evict_first : tensor<16x16x!tt.ptr<f32>> loc(#loc66)
      %40 = arith.subf %39, %22 : tensor<16x16xf32> loc(#loc54)
      %41 = arith.mulf %40, %26 : tensor<16x16xf32> loc(#loc58)
      %42 = arith.muli %32, %cst_2 : tensor<1x16xi32> loc(#loc67)
      %43 = tt.broadcast %42 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc59)
      %44 = arith.addi %27, %43 : tensor<16x16xi32> loc(#loc59)
      %45 = arith.addi %44, %29 : tensor<16x16xi32> loc(#loc61)
      %46 = tt.addptr %30, %45 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc62)
      tt.store %46, %41, %38 : tensor<16x16x!tt.ptr<f32>> loc(#loc68)
    } loc(#loc63)
    tt.return loc(#loc69)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":22:28)
#loc3 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":22:33)
#loc4 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":23:36)
#loc5 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":23:44)
#loc6 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":23:23)
#loc7 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":24:21)
#loc8 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":25:33)
#loc9 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":34:44)
#loc10 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":34:39)
#loc11 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":34:34)
#loc12 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":34:57)
#loc13 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":30:36)
#loc14 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":31:27)
#loc15 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":32:25)
#loc16 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":34:49)
#loc17 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":37:62)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc19 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":37:51)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc28 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":39:60)
#loc29 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":40:56)
#loc30 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":41:64)
#loc31 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":41:8)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc46 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":45:20)
#loc47 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":46:20)
#loc48 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":48:19)
#loc49 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":49:19)
#loc50 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":54:44)
#loc51 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":54:39)
#loc52 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":54:34)
#loc53 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":54:57)
#loc54 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":55:22)
#loc55 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":57:22)
#loc56 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":59:23)
#loc57 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":60:32)
#loc58 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":61:23)
#loc59 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":62:34)
#loc60 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":62:47)
#loc61 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":62:41)
#loc62 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":62:29)
#loc63 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":50:36)
#loc64 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":51:27)
#loc65 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":52:25)
#loc66 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":54:49)
#loc67 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":62:36)
#loc68 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":62:59)
#loc69 = loc("inductor_cache/md/cmddf2ubutcclvflw7aspsxu4vacd5g7gugwz6bg2dz5eleh3gas.py":50:4)
#loc70 = loc(callsite(#loc18 at #loc19))
#loc71 = loc(callsite(#loc20 at #loc19))
#loc72 = loc(callsite(#loc21 at #loc19))
#loc73 = loc(callsite(#loc22 at #loc19))
#loc74 = loc(callsite(#loc23 at #loc19))
#loc75 = loc(callsite(#loc24 at #loc19))
#loc76 = loc(callsite(#loc25 at #loc19))
#loc77 = loc(callsite(#loc26 at #loc19))
#loc78 = loc(callsite(#loc27 at #loc19))
#loc79 = loc(callsite(#loc32 at #loc33))
#loc81 = loc(callsite(#loc34 at #loc32))
#loc82 = loc(callsite(#loc35 at #loc32))
#loc83 = loc(callsite(#loc36 at #loc32))
#loc84 = loc(callsite(#loc37 at #loc32))
#loc85 = loc(callsite(#loc38 at #loc32))
#loc86 = loc(callsite(#loc39 at #loc32))
#loc87 = loc(callsite(#loc40 at #loc32))
#loc88 = loc(callsite(#loc41 at #loc32))
#loc89 = loc(callsite(#loc42 at #loc32))
#loc90 = loc(callsite(#loc43 at #loc32))
#loc91 = loc(callsite(#loc44 at #loc32))
#loc92 = loc(callsite(#loc45 at #loc32))
#loc93 = loc(callsite(#loc81 at #loc33))
#loc94 = loc(callsite(#loc82 at #loc33))
#loc95 = loc(callsite(#loc83 at #loc33))
#loc96 = loc(callsite(#loc84 at #loc33))
#loc97 = loc(callsite(#loc85 at #loc33))
#loc98 = loc(callsite(#loc86 at #loc33))
#loc99 = loc(callsite(#loc87 at #loc33))
#loc100 = loc(callsite(#loc88 at #loc33))
#loc101 = loc(callsite(#loc89 at #loc33))
#loc102 = loc(callsite(#loc90 at #loc33))
#loc103 = loc(callsite(#loc91 at #loc33))
#loc104 = loc(callsite(#loc92 at #loc33))
