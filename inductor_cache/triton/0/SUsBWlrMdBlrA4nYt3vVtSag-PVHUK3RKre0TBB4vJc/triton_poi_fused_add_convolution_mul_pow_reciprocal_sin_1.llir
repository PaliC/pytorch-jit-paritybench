; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_add_convolution_mul_pow_reciprocal_sin_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %7 = shl i32 %6, 6, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 62, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 64, !dbg !14
  %13 = sdiv i32 %11, 4, !dbg !15
  %14 = srem i32 %13, 4, !dbg !16
  %15 = sext i32 %11 to i64, !dbg !17
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !17
  %17 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %16, i1 %12) #4, !dbg !18
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !18
  %19 = extractvalue { i32, i32 } %17, 1, !dbg !18
  %20 = bitcast i32 %18 to float, !dbg !18
  %21 = bitcast i32 %19 to float, !dbg !18
  %22 = sext i32 %14 to i64, !dbg !19
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %22, !dbg !19
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %12) #4, !dbg !20
  %25 = bitcast i32 %24 to float, !dbg !20
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %12) #4, !dbg !20
  %27 = bitcast i32 %26 to float, !dbg !20
  %28 = getelementptr float, ptr addrspace(1) %2, i64 %22, !dbg !21
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %12) #4, !dbg !22
  %30 = bitcast i32 %29 to float, !dbg !22
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %12) #4, !dbg !22
  %32 = bitcast i32 %31 to float, !dbg !22
  %33 = fadd float %20, %25, !dbg !23
  %34 = fadd float %21, %27, !dbg !23
  %35 = fadd float %30, 0x3E112E0BE0000000, !dbg !24
  %36 = fadd float %32, 0x3E112E0BE0000000, !dbg !24
  %37 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %35) #4, !dbg !25
  %38 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %36) #4, !dbg !25
  %39 = fmul float %33, %30, !dbg !26
  %40 = fmul float %34, %32, !dbg !26
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !27
  %41 = fmul float %39, 0x3FE45F3060000000, !dbg !27
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i = icmp eq i32 %42, 0, !dbg !27
  %43 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %41) #4, !dbg !27
  %44 = tail call i32 @llvm.nvvm.f2i.rn(float %41) #4, !dbg !27
  %.01.i = select i1 %.not.i, i32 %44, i32 %43, !dbg !27
  %45 = sitofp i32 %.01.i to float, !dbg !27
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not15.i = icmp eq i32 %46, 0, !dbg !27
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %45, float 0xBFF921FB40000000, float %39) #4, !dbg !27
  %48 = tail call float @llvm.nvvm.fma.rn.f(float %45, float 0xBFF921FB40000000, float %39) #4, !dbg !27
  %.02.i = select i1 %.not15.i, float %48, float %47, !dbg !27
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not16.i = icmp eq i32 %49, 0, !dbg !27
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %45, float 0xBE74442D00000000, float %.02.i) #4, !dbg !27
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %45, float 0xBE74442D00000000, float %.02.i) #4, !dbg !27
  %.03.i = select i1 %.not16.i, float %51, float %50, !dbg !27
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not17.i = icmp eq i32 %52, 0, !dbg !27
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %45, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !27
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %45, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !27
  %.04.i = select i1 %.not17.i, float %54, float %53, !dbg !27
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not18.i = icmp eq i32 %55, 0, !dbg !27
  %56 = tail call float @llvm.nvvm.fabs.ftz.f(float %39) #4, !dbg !27
  %57 = tail call float @llvm.nvvm.fabs.f(float %39) #4, !dbg !27
  %.06.i = select i1 %.not18.i, float %57, float %56, !dbg !27
  %58 = fcmp ult float %.06.i, 1.056150e+05, !dbg !27
  br i1 %58, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !27

__nv_isinff.exit.i.i.i:                           ; preds = %5
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not19.i = icmp eq i32 %59, 0, !dbg !27
  %.07.i = select i1 %.not19.i, float %57, float %56, !dbg !27
  %60 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !27
  br i1 %60, label %__nv_fmul_rn.exit.i.i.i, label %64, !dbg !27

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not27.i = icmp eq i32 %61, 0, !dbg !27
  %62 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %39, float 0.000000e+00) #4, !dbg !27
  %63 = tail call float @llvm.nvvm.mul.rn.f(float %39, float 0.000000e+00) #4, !dbg !27
  %.08.i = select i1 %.not27.i, float %63, float %62, !dbg !27
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !27

64:                                               ; preds = %__nv_isinff.exit.i.i.i
  %65 = bitcast float %39 to i32, !dbg !27
  %66 = lshr i32 %65, 23, !dbg !27
  %67 = and i32 %66, 224, !dbg !27
  %68 = add nsw i32 %67, -128, !dbg !27
  %69 = shl i32 %65, 8, !dbg !27
  %70 = or i32 %69, -2147483648, !dbg !27
  %71 = lshr exact i32 %68, 5, !dbg !27
  br label %72, !dbg !27

72:                                               ; preds = %64, %72
  %indvars.iv = phi i64 [ 0, %64 ], [ %indvars.iv.next, %72 ]
  %hi.i.i.i.0.i56 = phi i32 [ 0, %64 ], [ %77, %72 ]
  %73 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !27
  %74 = load i32, ptr addrspace(1) %73, align 4, !dbg !27
  %75 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %74, i32 %70, i32 %hi.i.i.i.0.i56) #5, !dbg !27, !srcloc !28
  %76 = extractvalue { i32, i32 } %75, 0, !dbg !27
  %77 = extractvalue { i32, i32 } %75, 1, !dbg !27
  %78 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !27
  store i32 %76, ptr %78, align 4, !dbg !27
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !27
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !27
  br i1 %exitcond.not, label %79, label %72, !dbg !27, !llvm.loop !29

79:                                               ; preds = %72
  %80 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !27
  store i32 %77, ptr %80, align 4, !dbg !27
  %81 = and i32 %66, 31, !dbg !27
  %82 = sub nsw i32 6, %71, !dbg !27
  %83 = sext i32 %82 to i64, !dbg !27
  %84 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %83, !dbg !27
  %85 = load i32, ptr %84, align 4, !dbg !27
  %86 = sub nsw i32 5, %71, !dbg !27
  %87 = sext i32 %86 to i64, !dbg !27
  %88 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %87, !dbg !27
  %89 = load i32, ptr %88, align 4, !dbg !27
  %.not20.i = icmp eq i32 %81, 0, !dbg !27
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %90, !dbg !27

90:                                               ; preds = %79
  %91 = sub nsw i32 4, %71, !dbg !27
  %92 = sub nuw nsw i32 32, %81, !dbg !27
  %93 = shl i32 %85, %81, !dbg !27
  %94 = lshr i32 %89, %92, !dbg !27
  %95 = add i32 %94, %93, !dbg !27
  %96 = shl i32 %89, %81, !dbg !27
  %97 = sext i32 %91 to i64, !dbg !27
  %98 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %97, !dbg !27
  %99 = load i32, ptr %98, align 4, !dbg !27
  %100 = lshr i32 %99, %92, !dbg !27
  %101 = add i32 %100, %96, !dbg !27
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !27

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %90, %79
  %hi.i.i.i.1.i = phi i32 [ %95, %90 ], [ %85, %79 ], !dbg !27
  %lo.i.i.i.0.i = phi i32 [ %101, %90 ], [ %89, %79 ], !dbg !27
  %102 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !27
  %103 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !27
  %104 = shl i32 %lo.i.i.i.0.i, 2, !dbg !27
  %105 = lshr i32 %103, 31, !dbg !27
  %106 = add nuw nsw i32 %105, %102, !dbg !27
  %107 = sub nsw i32 0, %106, !dbg !27
  %.not2123.i = icmp slt i32 %65, 0, !dbg !27
  %spec.select.i = select i1 %.not2123.i, i32 %107, i32 %106, !dbg !27
  %108 = xor i32 %103, %65, !dbg !27
  %.lobit.i = ashr i32 %103, 31, !dbg !27
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %103, !dbg !27
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %104, !dbg !27
  %109 = zext i32 %hi.i.i.i.2.i to i64, !dbg !27
  %110 = shl nuw i64 %109, 32, !dbg !27
  %111 = zext i32 %lo.i.i.i.1.i to i64, !dbg !27
  %112 = or disjoint i64 %110, %111, !dbg !27
  %113 = sitofp i64 %112 to double, !dbg !27
  %114 = fmul double %113, 0x3BF921FB54442D19, !dbg !27
  %115 = fptrunc double %114 to float, !dbg !27
  %116 = fneg float %115, !dbg !27
  %.not2526.i = icmp slt i32 %108, 0, !dbg !27
  %r.i.i.i.0.i = select i1 %.not2526.i, float %116, float %115, !dbg !27
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !27

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %5
  %i.i.1.i = phi i32 [ %.01.i, %5 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !27
  %t.i.i.1.i = phi float [ %.04.i, %5 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !27
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not28.i = icmp eq i32 %117, 0, !dbg !27
  %118 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !27
  %119 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !27
  %.011.i = select i1 %.not28.i, float %119, float %118, !dbg !27
  %120 = and i32 %i.i.1.i, 1, !dbg !27
  %.not29.i = icmp eq i32 %120, 0, !dbg !27
  %121 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !27
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not30.i = icmp eq i32 %122, 0, !dbg !27
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %121, float 0.000000e+00) #4, !dbg !27
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %121, float 0.000000e+00) #4, !dbg !27
  %.012.i = select i1 %.not30.i, float %124, float %123, !dbg !27
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !27

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not31.i = icmp eq i32 %125, 0, !dbg !27
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !27
  %127 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !27
  %.013.i = select i1 %.not31.i, float %127, float %126, !dbg !27
  br label %__internal_fmad.exit2.i.i.i, !dbg !27

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %128 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !27
  %129 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !27
  %130 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !27
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not32.i = icmp eq i32 %131, 0, !dbg !27
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %130, float %.011.i, float %129) #4, !dbg !27
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %130, float %.011.i, float %129) #4, !dbg !27
  %.010.i = select i1 %.not32.i, float %133, float %132, !dbg !27
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not33.i = icmp eq i32 %134, 0, !dbg !27
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %128) #4, !dbg !27
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %128) #4, !dbg !27
  %.09.i = select i1 %.not33.i, float %136, float %135, !dbg !27
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not34.i = icmp eq i32 %137, 0, !dbg !27
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %121) #4, !dbg !27
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %121) #4, !dbg !27
  %.05.i = select i1 %.not34.i, float %139, float %138, !dbg !27
  %140 = and i32 %i.i.1.i, 2, !dbg !27
  %.not35.i = icmp eq i32 %140, 0, !dbg !27
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !27

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not36.i = icmp eq i32 %141, 0, !dbg !27
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !27
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !27
  %.0.i = select i1 %.not36.i, float %143, float %142, !dbg !27
  br label %__nv_sinf.exit, !dbg !27

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !27
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !27
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !27
  %144 = fmul float %40, 0x3FE45F3060000000, !dbg !27
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i2 = icmp eq i32 %145, 0, !dbg !27
  %146 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %144) #4, !dbg !27
  %147 = tail call i32 @llvm.nvvm.f2i.rn(float %144) #4, !dbg !27
  %.01.i3 = select i1 %.not.i2, i32 %147, i32 %146, !dbg !27
  %148 = sitofp i32 %.01.i3 to float, !dbg !27
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not15.i4 = icmp eq i32 %149, 0, !dbg !27
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float 0xBFF921FB40000000, float %40) #4, !dbg !27
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %148, float 0xBFF921FB40000000, float %40) #4, !dbg !27
  %.02.i5 = select i1 %.not15.i4, float %151, float %150, !dbg !27
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not16.i6 = icmp eq i32 %152, 0, !dbg !27
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !27
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %148, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !27
  %.03.i7 = select i1 %.not16.i6, float %154, float %153, !dbg !27
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not17.i8 = icmp eq i32 %155, 0, !dbg !27
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !27
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %148, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !27
  %.04.i9 = select i1 %.not17.i8, float %157, float %156, !dbg !27
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not18.i10 = icmp eq i32 %158, 0, !dbg !27
  %159 = tail call float @llvm.nvvm.fabs.ftz.f(float %40) #4, !dbg !27
  %160 = tail call float @llvm.nvvm.fabs.f(float %40) #4, !dbg !27
  %.06.i11 = select i1 %.not18.i10, float %160, float %159, !dbg !27
  %161 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !27
  br i1 %161, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !27

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not19.i13 = icmp eq i32 %162, 0, !dbg !27
  %.07.i14 = select i1 %.not19.i13, float %160, float %159, !dbg !27
  %163 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !27
  br i1 %163, label %__nv_fmul_rn.exit.i.i.i52, label %167, !dbg !27

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not27.i53 = icmp eq i32 %164, 0, !dbg !27
  %165 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %40, float 0.000000e+00) #4, !dbg !27
  %166 = tail call float @llvm.nvvm.mul.rn.f(float %40, float 0.000000e+00) #4, !dbg !27
  %.08.i54 = select i1 %.not27.i53, float %166, float %165, !dbg !27
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !27

167:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %168 = bitcast float %40 to i32, !dbg !27
  %169 = lshr i32 %168, 23, !dbg !27
  %170 = and i32 %169, 224, !dbg !27
  %171 = add nsw i32 %170, -128, !dbg !27
  %172 = shl i32 %168, 8, !dbg !27
  %173 = or i32 %172, -2147483648, !dbg !27
  %174 = lshr exact i32 %171, 5, !dbg !27
  br label %175, !dbg !27

175:                                              ; preds = %167, %175
  %indvars.iv63 = phi i64 [ 0, %167 ], [ %indvars.iv.next64, %175 ]
  %hi.i.i.i.0.i1558 = phi i32 [ 0, %167 ], [ %180, %175 ]
  %176 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv63, !dbg !27
  %177 = load i32, ptr addrspace(1) %176, align 4, !dbg !27
  %178 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %177, i32 %173, i32 %hi.i.i.i.0.i1558) #5, !dbg !27, !srcloc !28
  %179 = extractvalue { i32, i32 } %178, 0, !dbg !27
  %180 = extractvalue { i32, i32 } %178, 1, !dbg !27
  %181 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv63, !dbg !27
  store i32 %179, ptr %181, align 4, !dbg !27
  %indvars.iv.next64 = add nuw nsw i64 %indvars.iv63, 1, !dbg !27
  %exitcond65.not = icmp eq i64 %indvars.iv.next64, 6, !dbg !27
  br i1 %exitcond65.not, label %182, label %175, !dbg !27, !llvm.loop !31

182:                                              ; preds = %175
  %183 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !27
  store i32 %180, ptr %183, align 4, !dbg !27
  %184 = and i32 %169, 31, !dbg !27
  %185 = sub nsw i32 6, %174, !dbg !27
  %186 = sext i32 %185 to i64, !dbg !27
  %187 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %186, !dbg !27
  %188 = load i32, ptr %187, align 4, !dbg !27
  %189 = sub nsw i32 5, %174, !dbg !27
  %190 = sext i32 %189 to i64, !dbg !27
  %191 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %190, !dbg !27
  %192 = load i32, ptr %191, align 4, !dbg !27
  %.not20.i17 = icmp eq i32 %184, 0, !dbg !27
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %193, !dbg !27

193:                                              ; preds = %182
  %194 = sub nsw i32 4, %174, !dbg !27
  %195 = sub nuw nsw i32 32, %184, !dbg !27
  %196 = shl i32 %188, %184, !dbg !27
  %197 = lshr i32 %192, %195, !dbg !27
  %198 = add i32 %197, %196, !dbg !27
  %199 = shl i32 %192, %184, !dbg !27
  %200 = sext i32 %194 to i64, !dbg !27
  %201 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %200, !dbg !27
  %202 = load i32, ptr %201, align 4, !dbg !27
  %203 = lshr i32 %202, %195, !dbg !27
  %204 = add i32 %203, %199, !dbg !27
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !27

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %193, %182
  %hi.i.i.i.1.i19 = phi i32 [ %198, %193 ], [ %188, %182 ], !dbg !27
  %lo.i.i.i.0.i20 = phi i32 [ %204, %193 ], [ %192, %182 ], !dbg !27
  %205 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !27
  %206 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !27
  %207 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !27
  %208 = lshr i32 %206, 31, !dbg !27
  %209 = add nuw nsw i32 %208, %205, !dbg !27
  %210 = sub nsw i32 0, %209, !dbg !27
  %.not2123.i21 = icmp slt i32 %168, 0, !dbg !27
  %spec.select.i22 = select i1 %.not2123.i21, i32 %210, i32 %209, !dbg !27
  %211 = xor i32 %206, %168, !dbg !27
  %.lobit.i23 = ashr i32 %206, 31, !dbg !27
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %206, !dbg !27
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %207, !dbg !27
  %212 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !27
  %213 = shl nuw i64 %212, 32, !dbg !27
  %214 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !27
  %215 = or disjoint i64 %213, %214, !dbg !27
  %216 = sitofp i64 %215 to double, !dbg !27
  %217 = fmul double %216, 0x3BF921FB54442D19, !dbg !27
  %218 = fptrunc double %217 to float, !dbg !27
  %219 = fneg float %218, !dbg !27
  %.not2526.i27 = icmp slt i32 %211, 0, !dbg !27
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %219, float %218, !dbg !27
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !27

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !27
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !27
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not28.i32 = icmp eq i32 %220, 0, !dbg !27
  %221 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !27
  %222 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !27
  %.011.i33 = select i1 %.not28.i32, float %222, float %221, !dbg !27
  %223 = and i32 %i.i.1.i30, 1, !dbg !27
  %.not29.i34 = icmp eq i32 %223, 0, !dbg !27
  %224 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !27
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not30.i35 = icmp eq i32 %225, 0, !dbg !27
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %224, float 0.000000e+00) #4, !dbg !27
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %224, float 0.000000e+00) #4, !dbg !27
  %.012.i36 = select i1 %.not30.i35, float %227, float %226, !dbg !27
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !27

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not31.i38 = icmp eq i32 %228, 0, !dbg !27
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !27
  %230 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !27
  %.013.i39 = select i1 %.not31.i38, float %230, float %229, !dbg !27
  br label %__internal_fmad.exit2.i.i.i40, !dbg !27

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %231 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !27
  %232 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !27
  %233 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !27
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not32.i41 = icmp eq i32 %234, 0, !dbg !27
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %233, float %.011.i33, float %232) #4, !dbg !27
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %233, float %.011.i33, float %232) #4, !dbg !27
  %.010.i42 = select i1 %.not32.i41, float %236, float %235, !dbg !27
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not33.i43 = icmp eq i32 %237, 0, !dbg !27
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %231) #4, !dbg !27
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %231) #4, !dbg !27
  %.09.i44 = select i1 %.not33.i43, float %239, float %238, !dbg !27
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not34.i45 = icmp eq i32 %240, 0, !dbg !27
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %224) #4, !dbg !27
  %242 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %224) #4, !dbg !27
  %.05.i46 = select i1 %.not34.i45, float %242, float %241, !dbg !27
  %243 = and i32 %i.i.1.i30, 2, !dbg !27
  %.not35.i47 = icmp eq i32 %243, 0, !dbg !27
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !27

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not36.i49 = icmp eq i32 %244, 0, !dbg !27
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !27
  %246 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !27
  %.0.i50 = select i1 %.not36.i49, float %246, float %245, !dbg !27
  br label %__nv_sinf.exit55, !dbg !27

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !27
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !27
  %247 = fmul float %z.i.i.0.i, %z.i.i.0.i, !dbg !32
  %248 = fmul float %z.i.i.0.i51, %z.i.i.0.i51, !dbg !32
  %249 = fmul float %37, %247, !dbg !33
  %250 = fmul float %38, %248, !dbg !33
  %251 = fadd float %33, %249, !dbg !34
  %252 = fadd float %34, %250, !dbg !34
  %253 = bitcast float %33 to i32, !dbg !35
  %254 = bitcast float %34 to i32, !dbg !35
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %253, i32 %254, ptr addrspace(1) %16, i1 %12) #4, !dbg !35
  %255 = getelementptr float, ptr addrspace(1) %3, i64 %15, !dbg !36
  %256 = bitcast float %251 to i32, !dbg !37
  %257 = bitcast float %252 to i32, !dbg !37
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %256, i32 %257, ptr addrspace(1) %255, i1 %12) #4, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cltoucqgui7wjzjfiscxphuklr5y4nrgx33kuparhjtjs4mlzcnc.py", directory: "inductor_cache/lt")
!4 = !{ptr @triton_poi_fused_add_convolution_mul_pow_reciprocal_sin_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_convolution_mul_pow_reciprocal_sin_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_convolution_mul_pow_reciprocal_sin_1", linkageName: "triton_poi_fused_add_convolution_mul_pow_reciprocal_sin_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 26, scope: !7)
!17 = !DILocation(line: 26, column: 34, scope: !7)
!18 = !DILocation(line: 26, column: 39, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 35, scope: !7)
!23 = !DILocation(line: 29, column: 18, scope: !7)
!24 = !DILocation(line: 31, column: 18, scope: !7)
!25 = !DILocation(line: 33, column: 18, scope: !7)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 35, column: 23, scope: !7)
!28 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!29 = distinct !{!29, !30}
!30 = !{!"llvm.loop.unroll.count", i32 1}
!31 = distinct !{!31, !30}
!32 = !DILocation(line: 36, column: 19, scope: !7)
!33 = !DILocation(line: 37, column: 19, scope: !7)
!34 = !DILocation(line: 38, column: 19, scope: !7)
!35 = !DILocation(line: 39, column: 39, scope: !7)
!36 = !DILocation(line: 40, column: 25, scope: !7)
!37 = !DILocation(line: 40, column: 37, scope: !7)
!38 = !DILocation(line: 40, column: 4, scope: !7)
