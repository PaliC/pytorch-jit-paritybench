//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<48>;
	.reg .b32 	%r<204>;
	.reg .f32 	%f<79>;
	.reg .b64 	%rd<34>;
	.loc	1 19 0                          // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_0];
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_1];
$L__tmp0:
	.loc	1 22 28                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:22:33
	shl.b32 	%r81, %r1, 5;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_2];
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_3];
	.loc	1 23 44                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:23:44
	mov.u32 	%r82, %tid.x;
	shl.b32 	%r83, %r82, 1;
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_4];
	and.b32  	%r84, %r83, 30;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_5];
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_6];
	bfe.u32 	%r85, %r82, 3, 1;
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training_add_relu_18_param_7];
	and.b32  	%r86, %r82, 16;
	and.b32  	%r87, %r82, 32;
	and.b32  	%r88, %r82, 64;
	or.b32  	%r89, %r87, %r88;
	or.b32  	%r90, %r86, %r89;
	shr.u32 	%r91, %r90, 3;
	or.b32  	%r92, %r91, %r85;
	.loc	1 23 23                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:23:23
	or.b32  	%r93, %r81, %r84;
	or.b32  	%r94, %r81, %r92;
	or.b32  	%r95, %r94, 16;
	.loc	1 24 21                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:24:21
	setp.lt.s32 	%p5, %r93, 104;
	setp.lt.s32 	%p33, %r94, 104;
	setp.lt.s32 	%p34, %r95, 104;
	.loc	1 25 28                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:25:33
	shl.b32 	%r96, %r2, 5;
	.loc	1 26 44                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:26:44
	or.b32  	%r97, %r86, %r88;
	or.b32  	%r98, %r97, %r87;
	shr.u32 	%r99, %r98, 4;
	shl.b32 	%r100, %r82, 2;
	and.b32  	%r101, %r100, 28;
	.loc	1 26 23                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:26:23
	or.b32  	%r102, %r96, %r99;
	or.b32  	%r103, %r102, 8;
	or.b32  	%r104, %r102, 16;
	or.b32  	%r105, %r102, 24;
	or.b32  	%r106, %r96, %r101;
	.loc	1 27 21                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:27:21
	setp.lt.s32 	%p35, %r102, 256;
	setp.lt.s32 	%p36, %r103, 256;
	setp.lt.s32 	%p37, %r104, 256;
	setp.lt.s32 	%p38, %r105, 256;
	setp.lt.s32 	%p39, %r106, 256;
	.loc	1 30 19                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:30:19
	mul.hi.s32 	%r108, %r93, 1321528399;
	shr.u32 	%r109, %r108, 31;
	shr.s32 	%r110, %r108, 3;
	add.s32 	%r111, %r110, %r109;
	.loc	1 29 19                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:29:19
	mul.lo.s32 	%r112, %r111, 26;
	sub.s32 	%r113, %r93, %r112;
	.loc	1 30 19                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:30:19
	mul.hi.s32 	%r115, %r94, 1321528399;
	shr.u32 	%r116, %r115, 31;
	shr.s32 	%r117, %r115, 3;
	add.s32 	%r118, %r117, %r116;
	.loc	1 29 19                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:29:19
	mul.lo.s32 	%r119, %r118, 26;
	sub.s32 	%r120, %r94, %r119;
	.loc	1 30 19                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:30:19
	mul.hi.s32 	%r122, %r95, 1321528399;
	shr.u32 	%r123, %r122, 31;
	shr.s32 	%r124, %r122, 3;
	add.s32 	%r125, %r124, %r123;
	.loc	1 29 19                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:29:19
	mul.lo.s32 	%r126, %r125, 26;
	sub.s32 	%r127, %r95, %r126;
	.loc	1 31 35                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:31:35
	mad.lo.s32 	%r128, %r111, 6656, %r113;
	.loc	1 31 43                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:31:43
	mad.lo.s32 	%r129, %r102, 26, %r128;
	add.s32 	%r130, %r129, 208;
	add.s32 	%r131, %r129, 416;
	add.s32 	%r132, %r129, 624;
	.loc	1 31 30                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:31:30
	mul.wide.s32 	%rd25, %r129, 4;
	add.s64 	%rd1, %rd17, %rd25;
	mul.wide.s32 	%rd26, %r130, 4;
	add.s64 	%rd2, %rd17, %rd26;
	mul.wide.s32 	%rd27, %r131, 4;
	add.s64 	%rd3, %rd17, %rd27;
	mul.wide.s32 	%rd28, %r132, 4;
	add.s64 	%rd4, %rd17, %rd28;
	.loc	1 31 61                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:31:61
	and.pred  	%p1, %p5, %p35;
	and.pred  	%p2, %p36, %p5;
	and.pred  	%p3, %p37, %p5;
	and.pred  	%p4, %p38, %p5;
	and.pred  	%p9, %p33, %p39;
	and.pred  	%p10, %p34, %p39;
	.loc	1 31 53                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:31:53
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r7, %r8 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 32 30                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:32:30
	mul.wide.s32 	%rd29, %r113, 4;
	add.s64 	%rd5, %rd18, %rd29;
	.loc	1 32 35                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:32:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:33:30
	add.s64 	%rd6, %rd19, %rd29;
	.loc	1 33 35                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:33:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r13, %r14 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r13;
	mov.b32 	%f2, %r14;
	.loc	1 34 31                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:34:31
	add.s64 	%rd7, %rd20, %rd29;
	.loc	1 34 36                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:34:36
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r15, %r16 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:35:31
	add.s64 	%rd8, %rd21, %rd29;
	.loc	1 35 36                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:35:36
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r17, %r18 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 36 39                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:36:39
	add.s32 	%r133, %r106, 13312;
	.loc	1 36 48                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:36:48
	shl.b32 	%r134, %r120, 8;
	shl.b32 	%r135, %r127, 8;
	.loc	1 36 44                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:36:44
	add.s32 	%r136, %r133, %r134;
	.loc	1 36 53                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:36:53
	mad.lo.s32 	%r137, %r118, 26624, %r136;
	.loc	1 36 44                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:36:44
	mad.lo.s32 	%r138, %r125, 26624, %r135;
	.loc	1 36 53                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:36:53
	add.s32 	%r139, %r138, %r133;
	.loc	1 36 31                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:36:31
	mul.wide.s32 	%rd30, %r137, 4;
	add.s64 	%rd9, %rd22, %rd30;
	mul.wide.s32 	%rd31, %r139, 4;
	add.s64 	%rd10, %rd22, %rd31;
	.loc	1 36 64                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:36:64
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p9 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p10 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 39 18                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:39:18
	add.f32 	%f3, %f1, 0f3727C5AC;
	add.f32 	%f4, %f2, 0f3727C5AC;
	.loc	1 40 26                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:40:26
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 36 64                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:36:64
	mov.b32 	%f7, %r26;
	mov.b32 	%f8, %r25;
	mov.b32 	%f9, %r24;
	mov.b32 	%f10, %r23;
	mov.b32 	%f11, %r22;
	mov.b32 	%f12, %r21;
	mov.b32 	%f13, %r20;
	mov.b32 	%f14, %r19;
	.loc	1 42 18                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:42:18
	mov.b32 	%r29, %f5;
	mov.b32 	%r28, 1065353216;
	// begin inline asm
	div.full.f32 %r27, %r28, %r29;
	// end inline asm
	mov.b32 	%f15, %r27;
	mov.b32 	%r32, %f6;
	// begin inline asm
	div.full.f32 %r30, %r28, %r32;
	// end inline asm
	mov.b32 	%f16, %r30;
	.loc	1 32 35                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:32:35
	mov.b32 	%f17, %r12;
	mov.b32 	%f18, %r11;
	.loc	1 31 53                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:31:53
	mov.b32 	%f19, %r10;
	mov.b32 	%f20, %r9;
	mov.b32 	%f21, %r8;
	mov.b32 	%f22, %r7;
	mov.b32 	%f23, %r6;
	mov.b32 	%f24, %r5;
	mov.b32 	%f25, %r4;
	mov.b32 	%f26, %r3;
	.loc	1 37 18                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:37:18
	sub.f32 	%f27, %f26, %f18;
	sub.f32 	%f28, %f25, %f17;
	sub.f32 	%f29, %f24, %f18;
	sub.f32 	%f30, %f23, %f17;
	sub.f32 	%f31, %f22, %f18;
	sub.f32 	%f32, %f21, %f17;
	sub.f32 	%f33, %f20, %f18;
	sub.f32 	%f34, %f19, %f17;
	.loc	1 35 36                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:35:36
	mov.b32 	%f35, %r18;
	mov.b32 	%f36, %r17;
	.loc	1 34 36                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:34:36
	mov.b32 	%f37, %r16;
	mov.b32 	%f38, %r15;
	.loc	1 45 19                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:45:19
	mul.f32 	%f39, %f34, %f16;
	mul.f32 	%f40, %f33, %f15;
	mul.f32 	%f41, %f32, %f16;
	mul.f32 	%f42, %f31, %f15;
	mul.f32 	%f43, %f30, %f16;
	mul.f32 	%f44, %f29, %f15;
	mul.f32 	%f45, %f28, %f16;
	mul.f32 	%f46, %f27, %f15;
	.loc	1 47 20                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:47:20
	fma.rn.f32 	%f47, %f46, %f38, %f36;
	fma.rn.f32 	%f48, %f45, %f37, %f35;
	fma.rn.f32 	%f49, %f44, %f38, %f36;
	fma.rn.f32 	%f50, %f43, %f37, %f35;
	fma.rn.f32 	%f51, %f42, %f38, %f36;
	fma.rn.f32 	%f52, %f41, %f37, %f35;
	fma.rn.f32 	%f53, %f40, %f38, %f36;
	fma.rn.f32 	%f54, %f39, %f37, %f35;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p40, %f54, 0f00000000;
	setp.lt.f32 	%p41, %f53, 0f00000000;
	setp.lt.f32 	%p42, %f52, 0f00000000;
	setp.lt.f32 	%p43, %f51, 0f00000000;
	setp.lt.f32 	%p44, %f50, 0f00000000;
	setp.lt.f32 	%p45, %f49, 0f00000000;
	setp.lt.f32 	%p46, %f48, 0f00000000;
	setp.lt.f32 	%p47, %f47, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f55, 0f00000000, %f47, %p47;
	selp.f32 	%f56, 0f00000000, %f48, %p46;
	selp.f32 	%f57, 0f00000000, %f49, %p45;
	selp.f32 	%f58, 0f00000000, %f50, %p44;
	selp.f32 	%f59, 0f00000000, %f51, %p43;
	selp.f32 	%f60, 0f00000000, %f52, %p42;
	selp.f32 	%f61, 0f00000000, %f53, %p41;
	selp.f32 	%f62, 0f00000000, %f54, %p40;
	shl.b32 	%r140, %r82, 6;
	and.b32  	%r141, %r140, 960;
	or.b32  	%r142, %r99, %r141;
	and.b32  	%r143, %r100, 508;
	shr.u32 	%r144, %r141, 3;
	mov.u32 	%r145, global_smem;
	add.s32 	%r146, %r145, %r144;
	shl.b32 	%r147, %r142, 2;
	add.s32 	%r33, %r146, %r147;
	mov.b32 	%r34, %f55;
	mov.pred 	%p11, -1;
	// begin inline asm
	@%p11 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	or.b32  	%r148, %r141, 32;
	shr.u32 	%r149, %r148, 3;
	add.s32 	%r150, %r145, %r149;
	add.s32 	%r151, %r150, %r147;
	add.s32 	%r35, %r151, 128;
	mov.b32 	%r36, %f56;
	// begin inline asm
	@%p11 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r33, 32;
	mov.b32 	%r38, %f57;
	// begin inline asm
	@%p11 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r151, 160;
	mov.b32 	%r40, %f58;
	// begin inline asm
	@%p11 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r33, 64;
	mov.b32 	%r42, %f59;
	// begin inline asm
	@%p11 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r151, 192;
	mov.b32 	%r44, %f60;
	// begin inline asm
	@%p11 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r33, 96;
	mov.b32 	%r46, %f61;
	// begin inline asm
	@%p11 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r151, 224;
	mov.b32 	%r48, %f62;
	// begin inline asm
	@%p11 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r152, %r82, 1;
	and.b32  	%r153, %r152, 60;
	add.s32 	%r154, %r145, %r153;
	shl.b32 	%r155, %r143, 2;
	add.s32 	%r156, %r154, %r155;
	ld.shared.f32 	%f63, [%r156];
	ld.shared.f32 	%f64, [%r156+4];
	ld.shared.f32 	%f65, [%r156+8];
	ld.shared.f32 	%f66, [%r156+12];
	or.b32  	%r157, %r143, 512;
	shr.u32 	%r158, %r157, 3;
	and.b32  	%r159, %r158, 124;
	add.s32 	%r160, %r145, %r159;
	add.s32 	%r161, %r160, %r155;
	ld.shared.f32 	%f67, [%r161+2048];
	ld.shared.f32 	%f68, [%r161+2052];
	ld.shared.f32 	%f69, [%r161+2056];
	ld.shared.f32 	%f70, [%r161+2060];
$L__tmp2:
	.loc	1 50 20                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:50:20
	add.f32 	%f71, %f63, %f14;
	add.f32 	%f72, %f64, %f13;
	add.f32 	%f73, %f65, %f12;
	add.f32 	%f74, %f66, %f11;
	add.f32 	%f75, %f67, %f10;
	add.f32 	%f76, %f68, %f9;
	add.f32 	%f77, %f69, %f8;
	add.f32 	%f78, %f70, %f7;
	.loc	1 51 30                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:51:30
	add.s32 	%r162, %r134, %r106;
	.loc	1 51 39                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:51:39
	mad.lo.s32 	%r163, %r118, 13312, %r162;
	.loc	1 51 30                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:51:30
	mad.lo.s32 	%r164, %r125, 13312, %r135;
	.loc	1 51 39                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:51:39
	add.s32 	%r165, %r164, %r106;
	.loc	1 51 25                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:51:25
	mul.wide.s32 	%rd32, %r163, 4;
	add.s64 	%rd11, %rd23, %rd32;
	mul.wide.s32 	%rd33, %r165, 4;
	add.s64 	%rd12, %rd23, %rd33;
	.loc	1 51 57                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:51:57
	mov.b32 	%r49, %f63;
	mov.b32 	%r50, %f64;
	mov.b32 	%r51, %f65;
	mov.b32 	%r52, %f66;
	// begin inline asm
	@%p9 st.global.v4.b32 [ %rd11 + 0 ], { %r49, %r50, %r51, %r52 };
	// end inline asm
	mov.b32 	%r53, %f67;
	mov.b32 	%r54, %f68;
	mov.b32 	%r55, %f69;
	mov.b32 	%r56, %f70;
	// begin inline asm
	@%p10 st.global.v4.b32 [ %rd12 + 0 ], { %r53, %r54, %r55, %r56 };
	// end inline asm
	.loc	1 52 25                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:52:25
	add.s64 	%rd13, %rd24, %rd25;
	add.s64 	%rd14, %rd24, %rd26;
	add.s64 	%rd15, %rd24, %rd27;
	add.s64 	%rd16, %rd24, %rd28;
	.loc	1 52 55                         // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:52:55
	bar.sync 	0;
	shl.b32 	%r166, %r82, 7;
	and.b32  	%r167, %r166, 896;
	or.b32  	%r168, %r92, %r167;
	and.b32  	%r169, %r83, 254;
	shr.u32 	%r170, %r167, 2;
	add.s32 	%r171, %r145, %r170;
	shl.b32 	%r172, %r168, 2;
	add.s32 	%r57, %r171, %r172;
	mov.b32 	%r58, %f71;
	// begin inline asm
	@%p11 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	or.b32  	%r173, %r167, 32;
	shr.u32 	%r174, %r173, 2;
	add.s32 	%r175, %r145, %r174;
	add.s32 	%r176, %r175, %r172;
	add.s32 	%r59, %r176, 128;
	mov.b32 	%r60, %f72;
	// begin inline asm
	@%p11 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	or.b32  	%r177, %r167, 64;
	shr.u32 	%r178, %r177, 2;
	add.s32 	%r179, %r145, %r178;
	add.s32 	%r180, %r179, %r172;
	add.s32 	%r61, %r180, 256;
	mov.b32 	%r62, %f73;
	// begin inline asm
	@%p11 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	or.b32  	%r181, %r167, 96;
	shr.u32 	%r182, %r181, 2;
	add.s32 	%r183, %r145, %r182;
	add.s32 	%r184, %r183, %r172;
	add.s32 	%r63, %r184, 384;
	mov.b32 	%r64, %f74;
	// begin inline asm
	@%p11 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	add.s32 	%r65, %r57, 64;
	mov.b32 	%r66, %f75;
	// begin inline asm
	@%p11 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	add.s32 	%r67, %r176, 192;
	mov.b32 	%r68, %f76;
	// begin inline asm
	@%p11 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	add.s32 	%r69, %r180, 320;
	mov.b32 	%r70, %f77;
	// begin inline asm
	@%p11 st.shared.b32 [ %r69 + 0 ], %r70;
	// end inline asm
	add.s32 	%r71, %r184, 448;
	mov.b32 	%r72, %f78;
	// begin inline asm
	@%p11 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r185, %r152, 56;
	add.s32 	%r186, %r145, %r185;
	shl.b32 	%r187, %r169, 2;
	add.s32 	%r188, %r186, %r187;
	or.b32  	%r189, %r169, 256;
	shr.u32 	%r190, %r189, 2;
	and.b32  	%r191, %r190, 120;
	add.s32 	%r192, %r145, %r191;
	add.s32 	%r193, %r192, %r187;
	ld.shared.v2.u32 	{%r75, %r76}, [%r193+1024];
	or.b32  	%r194, %r169, 512;
	shr.u32 	%r195, %r194, 2;
	and.b32  	%r196, %r195, 184;
	add.s32 	%r197, %r145, %r196;
	add.s32 	%r198, %r197, %r187;
	ld.shared.v2.u32 	{%r77, %r78}, [%r198+2048];
	or.b32  	%r199, %r169, 768;
	shr.u32 	%r200, %r199, 2;
	and.b32  	%r201, %r200, 248;
	add.s32 	%r202, %r145, %r201;
	add.s32 	%r203, %r202, %r187;
	ld.shared.v2.u32 	{%r79, %r80}, [%r203+3072];
	ld.shared.v2.u32 	{%r73, %r74}, [%r188];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd13 + 0 ], { %r73, %r74 };
	// end inline asm
	// begin inline asm
	@%p2 st.global.v2.b32 [ %rd14 + 0 ], { %r75, %r76 };
	// end inline asm
	// begin inline asm
	@%p3 st.global.v2.b32 [ %rd15 + 0 ], { %r77, %r78 };
	// end inline asm
	// begin inline asm
	@%p4 st.global.v2.b32 [ %rd16 + 0 ], { %r79, %r80 };
	// end inline asm
	.loc	1 52 4                          // cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py:52:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/r5/cr5l2xx4g4vgk3d3mtyespfnzmiqn6pw55levxvpisk5k5pdhkwx.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 210                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 53
.b8 108
.b8 50
.b8 120
.b8 120
.b8 52
.b8 103
.b8 52
.b8 118
.b8 103
.b8 107
.b8 51
.b8 100
.b8 51
.b8 109
.b8 116
.b8 121
.b8 101
.b8 115
.b8 112
.b8 102
.b8 110
.b8 122
.b8 109
.b8 105
.b8 113
.b8 110
.b8 54
.b8 112
.b8 119
.b8 53
.b8 53
.b8 108
.b8 101
.b8 118
.b8 120
.b8 118
.b8 112
.b8 105
.b8 115
.b8 107
.b8 53
.b8 107
.b8 53
.b8 112
.b8 100
.b8 104
.b8 107
.b8 119
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 53
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x44 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 49
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa7:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
