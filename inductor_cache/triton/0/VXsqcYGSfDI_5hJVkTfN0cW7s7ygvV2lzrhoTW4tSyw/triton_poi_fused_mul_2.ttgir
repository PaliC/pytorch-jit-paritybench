#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 1], order = [0, 1]}>
#loc = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_mul_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":19:0), %arg3: i32 loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":19:0)) attributes {noinline = false} {
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<4> : tensor<1x4xi32, #blocked> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<16> : tensor<1x4xi32, #blocked1> loc(#loc1)
    %cst_1 = arith.constant dense<4> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<1x4xi32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %3 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x4xi32, #blocked1> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x4xi32, #blocked> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<1x4xi32, #blocked1> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<1x4xi32, #blocked> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<1x4xi32, #blocked1> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<1x4xi32, #blocked> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_4 : tensor<1x4xi32, #blocked1> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst : tensor<1x4xi32, #blocked> loc(#loc6)
    %12 = tt.get_program_id x : i32 loc(#loc7)
    %13 = arith.muli %12, %c8_i32 : i32 loc(#loc8)
    %14 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc9)
    %15 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc9)
    %16 = tt.expand_dims %14 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xi32, #blocked1> loc(#loc9)
    %17 = tt.expand_dims %15 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc9)
    %18 = tt.splat %13 : i32 -> tensor<8x1xi32, #blocked1> loc(#loc10)
    %19 = tt.splat %13 : i32 -> tensor<8x1xi32, #blocked> loc(#loc10)
    %20 = arith.addi %18, %16 : tensor<8x1xi32, #blocked1> loc(#loc10)
    %21 = arith.addi %19, %17 : tensor<8x1xi32, #blocked> loc(#loc10)
    %22 = arith.cmpi slt, %20, %cst_2 : tensor<8x1xi32, #blocked1> loc(#loc11)
    %23 = arith.cmpi slt, %21, %cst_3 : tensor<8x1xi32, #blocked> loc(#loc11)
    %24 = arith.remsi %21, %cst_1 : tensor<8x1xi32, #blocked> loc(#loc12)
    %25 = arith.muli %21, %cst_1 : tensor<8x1xi32, #blocked> loc(#loc13)
    %26 = tt.broadcast %9 : tensor<1x4xi32, #blocked> -> tensor<8x4xi32, #blocked> loc(#loc14)
    %27 = tt.broadcast %25 : tensor<8x1xi32, #blocked> -> tensor<8x4xi32, #blocked> loc(#loc14)
    %28 = arith.addi %26, %27 : tensor<8x4xi32, #blocked> loc(#loc14)
    %29 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x4x!tt.ptr<f32>, #blocked> loc(#loc15)
    %30 = tt.addptr %29, %28 : tensor<8x4x!tt.ptr<f32>, #blocked>, tensor<8x4xi32, #blocked> loc(#loc15)
    %31 = tt.broadcast %22 : tensor<8x1xi1, #blocked1> -> tensor<8x4xi1, #blocked1> loc(#loc16)
    %32 = tt.broadcast %23 : tensor<8x1xi1, #blocked> -> tensor<8x4xi1, #blocked> loc(#loc16)
    %33 = tt.broadcast %10 : tensor<1x4xi1, #blocked1> -> tensor<8x4xi1, #blocked1> loc(#loc16)
    %34 = tt.broadcast %11 : tensor<1x4xi1, #blocked> -> tensor<8x4xi1, #blocked> loc(#loc16)
    %35 = arith.andi %31, %33 : tensor<8x4xi1, #blocked1> loc(#loc16)
    %36 = arith.andi %32, %34 : tensor<8x4xi1, #blocked> loc(#loc16)
    %37 = tt.load %30, %36 evictionPolicy = evict_last : tensor<8x4x!tt.ptr<f32>, #blocked> loc(#loc17)
    %38 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc18)
    %39 = tt.addptr %38, %24 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc18)
    %40 = tt.load %39, %23 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc19)
    %41 = tt.broadcast %40 : tensor<8x1xf32, #blocked> -> tensor<8x4xf32, #blocked> loc(#loc20)
    %42 = arith.addf %37, %41 : tensor<8x4xf32, #blocked> loc(#loc20)
    %43 = arith.muli %8, %cst_0 : tensor<1x4xi32, #blocked1> loc(#loc21)
    %44 = tt.broadcast %20 : tensor<8x1xi32, #blocked1> -> tensor<8x4xi32, #blocked1> loc(#loc22)
    %45 = tt.broadcast %43 : tensor<1x4xi32, #blocked1> -> tensor<8x4xi32, #blocked1> loc(#loc22)
    %46 = arith.addi %44, %45 : tensor<8x4xi32, #blocked1> loc(#loc22)
    %47 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x4x!tt.ptr<f32>, #blocked1> loc(#loc23)
    %48 = tt.addptr %47, %46 : tensor<8x4x!tt.ptr<f32>, #blocked1>, tensor<8x4xi32, #blocked1> loc(#loc23)
    %49 = triton_gpu.convert_layout %42 : tensor<8x4xf32, #blocked> -> tensor<8x4xf32, #blocked1> loc(#loc24)
    tt.store %48, %49, %35 : tensor<8x4x!tt.ptr<f32>, #blocked1> loc(#loc24)
    tt.return loc(#loc25)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":22:28)
#loc3 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":22:33)
#loc4 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":23:44)
#loc5 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":23:23)
#loc6 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":24:21)
#loc7 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":25:28)
#loc8 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":25:33)
#loc9 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":26:44)
#loc10 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":26:23)
#loc11 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":27:21)
#loc12 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":30:19)
#loc13 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":31:37)
#loc14 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":31:35)
#loc15 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":31:30)
#loc16 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":31:50)
#loc17 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":31:42)
#loc18 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":32:30)
#loc19 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":32:35)
#loc20 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":33:18)
#loc21 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":36:33)
#loc22 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":36:30)
#loc23 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":36:25)
#loc24 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":36:44)
#loc25 = loc("inductor_cache/gq/cgqzrkcrcaupacxhkyavlfii7ipkdigzni5riho5c6zgt5rkstlv.py":36:4)
