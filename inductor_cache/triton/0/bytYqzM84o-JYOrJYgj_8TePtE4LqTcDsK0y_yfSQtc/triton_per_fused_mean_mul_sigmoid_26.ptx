//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mean_mul_sigmoid_26 // -- Begin function triton_per_fused_mean_mul_sigmoid_26
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mean_mul_sigmoid_26
.visible .entry triton_per_fused_mean_mul_sigmoid_26(
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_mul_sigmoid_26_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_mul_sigmoid_26_param_1,
	.param .u32 triton_per_fused_mean_mul_sigmoid_26_param_2,
	.param .u32 triton_per_fused_mean_mul_sigmoid_26_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<89>;
	.reg .f32 	%f<55>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_per_fused_mean_mul_sigmoid_26_param_0];
	ld.param.u64 	%rd4, [triton_per_fused_mean_mul_sigmoid_26_param_1];
$L__tmp0:
	.loc	1 23 28                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:23:33
	shl.b32 	%r43, %r1, 5;
	.loc	1 24 44                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:24:44
	mov.u32 	%r44, %tid.x;
	and.b32  	%r45, %r44, 24;
	shl.b32 	%r46, %r44, 2;
	and.b32  	%r47, %r46, 28;
	and.b32  	%r48, %r44, 31;
	.loc	1 24 23                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:24:23
	or.b32  	%r49, %r43, %r47;
	or.b32  	%r50, %r43, %r48;
	.loc	1 25 21                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:25:21
	setp.lt.s32 	%p1, %r49, 3072;
	setp.lt.s32 	%p14, %r50, 3072;
	.loc	1 26 34                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:26:34
	bfe.u32 	%r51, %r44, 3, 4;
	.loc	1 31 19                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:31:19
	mul.hi.s32 	%r53, %r49, 715827883;
	shr.u32 	%r54, %r53, 31;
	shr.s32 	%r55, %r53, 7;
	add.s32 	%r56, %r55, %r54;
	.loc	1 30 19                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:30:19
	mul.lo.s32 	%r57, %r56, 768;
	sub.s32 	%r58, %r49, %r57;
	.loc	1 33 35                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:33:35
	mad.lo.s32 	%r59, %r51, 768, %r58;
	.loc	1 33 44                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:33:44
	mad.lo.s32 	%r60, %r56, 12288, %r59;
	.loc	1 33 30                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:33:30
	mul.wide.s32 	%rd5, %r60, 4;
	add.s64 	%rd1, %rd4, %rd5;
	mov.b32 	%r6, 0;
	.loc	1 33 55                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:33:55
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f9, %r2;
	mov.b32 	%f10, %r3;
	mov.b32 	%f11, %r4;
	mov.b32 	%f12, %r5;
	mov.f32 	%f13, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f14, %f13, %f9;
	sub.f32 	%f15, %f13, %f10;
	sub.f32 	%f16, %f13, %f11;
	sub.f32 	%f17, %f13, %f12;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f14, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f15, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f16, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f17, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f18, %f1, 0f3F800000;
	add.f32 	%f19, %f3, 0f3F800000;
	add.f32 	%f20, %f5, 0f3F800000;
	add.f32 	%f21, %f7, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r12, %f18;
	mov.b32 	%r11, 1065353216;
	// begin inline asm
	div.full.f32 %r10, %r11, %r12;
	// end inline asm
	mov.b32 	%f22, %r10;
	mov.b32 	%r15, %f19;
	// begin inline asm
	div.full.f32 %r13, %r11, %r15;
	// end inline asm
	mov.b32 	%f23, %r13;
	mov.b32 	%r18, %f20;
	// begin inline asm
	div.full.f32 %r16, %r11, %r18;
	// end inline asm
	mov.b32 	%f24, %r16;
	mov.b32 	%r21, %f21;
	// begin inline asm
	div.full.f32 %r19, %r11, %r21;
	// end inline asm
	mov.b32 	%f25, %r19;
$L__tmp2:
	.loc	1 35 18                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:35:18
	mul.f32 	%f26, %f22, %f9;
	mul.f32 	%f27, %f23, %f10;
	mul.f32 	%f28, %f24, %f11;
	mul.f32 	%f29, %f25, %f12;
	.loc	1 37 33                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:37:33
	selp.f32 	%f30, %f26, 0f00000000, %p1;
	selp.f32 	%f31, %f27, 0f00000000, %p1;
	selp.f32 	%f32, %f28, 0f00000000, %p1;
	selp.f32 	%f33, %f29, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f30;
	shfl.sync.bfly.b32	%r62, %r61, 16, 31, -1;
	mov.b32 	%f34, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f30, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f35;
	shfl.sync.bfly.b32	%r64, %r63, 8, 31, -1;
	mov.b32 	%f36, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f31;
	shfl.sync.bfly.b32	%r66, %r65, 16, 31, -1;
	mov.b32 	%f38, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f31, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f39;
	shfl.sync.bfly.b32	%r68, %r67, 8, 31, -1;
	mov.b32 	%f40, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f32;
	shfl.sync.bfly.b32	%r70, %r69, 16, 31, -1;
	mov.b32 	%f42, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f32, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f43;
	shfl.sync.bfly.b32	%r72, %r71, 8, 31, -1;
	mov.b32 	%f44, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f33;
	shfl.sync.bfly.b32	%r74, %r73, 16, 31, -1;
	mov.b32 	%f46, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f33, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f47;
	shfl.sync.bfly.b32	%r76, %r75, 8, 31, -1;
	mov.b32 	%f48, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p6, %r45, 0;
	bfe.u32 	%r77, %r44, 5, 2;
	shl.b32 	%r78, %r77, 2;
	shl.b32 	%r79, %r47, 4;
	or.b32  	%r80, %r79, %r78;
	mov.u32 	%r81, global_smem;
	add.s32 	%r22, %r81, %r80;
	mov.b32 	%r23, %f37;
	// begin inline asm
	@%p6 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	add.s32 	%r24, %r22, 16;
	mov.b32 	%r25, %f41;
	// begin inline asm
	@%p6 st.shared.b32 [ %r24 + 0 ], %r25;
	// end inline asm
	add.s32 	%r26, %r22, 32;
	mov.b32 	%r27, %f45;
	// begin inline asm
	@%p6 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	add.s32 	%r28, %r22, 48;
	mov.b32 	%r29, %f49;
	// begin inline asm
	@%p6 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r44, 128;
	add.s32 	%r31, %r81, %r46;
	// begin inline asm
	@%p10 ld.shared.b32 %r30, [ %r31 + 0 ];
	// end inline asm
	mov.b32 	%f50, %r30;
	shfl.sync.bfly.b32	%r82, %r30, 2, 31, -1;
	mov.b32 	%f51, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f52;
	shfl.sync.bfly.b32	%r84, %r83, 1, 31, -1;
	mov.b32 	%f53, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r85, %r44, 3;
	setp.eq.s32 	%p15, %r85, 0;
	and.pred  	%p11, %p10, %p15;
	mov.b32 	%r33, %f54;
	// begin inline asm
	@%p11 st.shared.b32 [ %r31 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r86, %r81, %r79;
	ld.shared.u32 	%r35, [%r86];
	ld.shared.u32 	%r36, [%r86+16];
	ld.shared.u32 	%r37, [%r86+32];
	ld.shared.u32 	%r38, [%r86+48];
$L__tmp4:
	.loc	1 40 18                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:40:18
	bar.sync 	0;
	mad.lo.s32 	%r34, %r47, -12, %r86;
	mov.pred 	%p12, -1;
	// begin inline asm
	@%p12 st.shared.v4.b32 [ %r34 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r87, %r48, 2;
	add.s32 	%r88, %r81, %r87;
	ld.shared.u32 	%r40, [%r88];
	mov.b32 	%r41, 1098907648;
	// begin inline asm
	div.full.f32 %r42, %r40, %r41;
	// end inline asm
	.loc	1 41 4                          // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:41:4
	bar.sync 	0;
	.loc	1 42 28                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:42:28
	mul.wide.s32 	%rd6, %r50, 4;
	add.s64 	%rd2, %rd3, %rd6;
	.loc	1 42 39                         // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:42:39
	setp.eq.s32 	%p16, %r77, 0;
	and.pred  	%p13, %p16, %p14;
	// begin inline asm
	@%p13 st.global.b32 [ %rd2 + 0 ], { %r42 };
	// end inline asm
	.loc	1 42 4                          // c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py:42:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/2h/c2hcr4zsjccq6wbqxxmxgcmahahclhrnkzaasoppyxngxxs7tqvl.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 205                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 50
.b8 104
.b8 99
.b8 114
.b8 52
.b8 122
.b8 115
.b8 106
.b8 99
.b8 99
.b8 113
.b8 54
.b8 119
.b8 98
.b8 113
.b8 120
.b8 120
.b8 109
.b8 120
.b8 103
.b8 99
.b8 109
.b8 97
.b8 104
.b8 97
.b8 104
.b8 99
.b8 108
.b8 104
.b8 114
.b8 110
.b8 107
.b8 122
.b8 97
.b8 97
.b8 115
.b8 111
.b8 112
.b8 112
.b8 121
.b8 120
.b8 110
.b8 103
.b8 120
.b8 120
.b8 115
.b8 55
.b8 116
.b8 113
.b8 118
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 50
.b8 104
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x27 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 50
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8a:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9f:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 34                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
