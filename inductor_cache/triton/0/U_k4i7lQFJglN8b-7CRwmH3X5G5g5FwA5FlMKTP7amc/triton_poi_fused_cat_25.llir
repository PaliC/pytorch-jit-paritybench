; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_25(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, i32 %10) local_unnamed_addr !dbg !7 {
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %13 = shl i32 %12, 7, !dbg !11
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %15 = and i32 %14, 127, !dbg !12
  %16 = or disjoint i32 %13, %15, !dbg !13
  %17 = icmp slt i32 %16, 256, !dbg !14
  %18 = sdiv i32 %16, 4, !dbg !15
  %19 = sdiv i32 %16, 16, !dbg !16
  %20 = srem i32 %19, 4, !dbg !17
  %21 = sdiv i32 %16, 64, !dbg !18
  %22 = insertelement <2 x i32> poison, i32 %16, i64 0, !dbg !19
  %23 = insertelement <2 x i32> %22, i32 %18, i64 1, !dbg !19
  %24 = srem <2 x i32> %23, splat (i32 4), !dbg !19
  %25 = icmp slt <2 x i32> %24, splat (i32 1), !dbg !20
  %26 = extractelement <2 x i1> %25, i64 0, !dbg !21
  %27 = extractelement <2 x i1> %25, i64 1, !dbg !22
  %28 = and i1 %26, %27, !dbg !23
  %29 = sext i32 %19 to i64, !dbg !24
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !24
  %31 = and i1 %17, %28, !dbg !25
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %31, i32 0, i1 %31) #1, !dbg !26
  %33 = extractelement <2 x i32> %24, i64 0, !dbg !27
  %34 = icmp eq i32 %33, 1, !dbg !28
  %35 = and i1 %34, %27, !dbg !29
  %36 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !30
  %37 = and i1 %17, %35, !dbg !31
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %37, i32 0, i1 %37) #1, !dbg !32
  %39 = icmp sgt i32 %33, 1, !dbg !33
  %40 = and i1 %39, %27, !dbg !34
  %41 = shl nsw i32 %33, 2, !dbg !27
  %42 = add nsw i32 %41, -8, !dbg !27
  %43 = add nsw i32 %42, %20, !dbg !35
  %44 = shl nsw i32 %21, 3, !dbg !36
  %45 = add nsw i32 %43, %44, !dbg !37
  %46 = sext i32 %45 to i64, !dbg !38
  %47 = getelementptr float, ptr addrspace(1) %2, i64 %46, !dbg !38
  %48 = and i1 %17, %40, !dbg !39
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %48, i32 0, i1 %48) #1, !dbg !40
  %.v = select i1 %34, i32 %38, i32 %49, !dbg !41
  %.v1 = select i1 %26, i32 %32, i32 %.v, !dbg !42
  %50 = extractelement <2 x i32> %24, i64 1, !dbg !43
  %51 = icmp eq i32 %50, 1, !dbg !44
  %52 = and i1 %26, %51, !dbg !45
  %53 = getelementptr float, ptr addrspace(1) %3, i64 %29, !dbg !46
  %54 = and i1 %17, %52, !dbg !47
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %53, i1 %54, i32 0, i1 %54) #1, !dbg !48
  %56 = and i1 %34, %51, !dbg !49
  %57 = getelementptr float, ptr addrspace(1) %4, i64 %29, !dbg !50
  %58 = and i1 %17, %56, !dbg !51
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %57, i1 %58, i32 0, i1 %58) #1, !dbg !52
  %60 = and i1 %39, %51, !dbg !53
  %61 = getelementptr float, ptr addrspace(1) %5, i64 %46, !dbg !54
  %62 = and i1 %17, %60, !dbg !55
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %61, i1 %62, i32 0, i1 %62) #1, !dbg !56
  %.v2 = select i1 %34, i32 %59, i32 %63, !dbg !57
  %.v3 = select i1 %26, i32 %55, i32 %.v2, !dbg !58
  %64 = icmp sgt i32 %50, 1, !dbg !43
  %65 = and i1 %26, %64, !dbg !59
  %66 = add nsw i32 %50, -2, !dbg !60
  %67 = shl nsw i32 %66, 2, !dbg !61
  %68 = add nsw i32 %44, %20, !dbg !62
  %69 = add nsw i32 %68, %67, !dbg !63
  %70 = sext i32 %69 to i64, !dbg !64
  %71 = getelementptr float, ptr addrspace(1) %6, i64 %70, !dbg !64
  %72 = and i1 %17, %65, !dbg !65
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %71, i1 %72, i32 0, i1 %72) #1, !dbg !66
  %74 = and i1 %34, %64, !dbg !67
  %75 = getelementptr float, ptr addrspace(1) %7, i64 %70, !dbg !68
  %76 = and i1 %17, %74, !dbg !69
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %75, i1 %76, i32 0, i1 %76) #1, !dbg !70
  %78 = and i1 %39, %64, !dbg !71
  %79 = shl nsw i32 %66, 3, !dbg !72
  %80 = shl nsw i32 %21, 4, !dbg !73
  %81 = add nsw i32 %79, %80, !dbg !74
  %82 = add nsw i32 %81, %43, !dbg !75
  %83 = sext i32 %82 to i64, !dbg !76
  %84 = getelementptr float, ptr addrspace(1) %8, i64 %83, !dbg !76
  %85 = and i1 %17, %78, !dbg !77
  %86 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %84, i1 %85, i32 0, i1 %85) #1, !dbg !78
  %.v4 = select i1 %34, i32 %77, i32 %86, !dbg !79
  %.v5 = select i1 %26, i32 %73, i32 %.v4, !dbg !21
  %87 = sext i32 %16 to i64, !dbg !80
  %88 = getelementptr float, ptr addrspace(1) %9, i64 %87, !dbg !80
  %89 = select i1 %64, i32 %.v5, i32 0, !dbg !81
  %90 = select i1 %51, i32 %.v3, i32 %89, !dbg !22
  %91 = select i1 %27, i32 %.v1, i32 %90, !dbg !22
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %91, ptr addrspace(1) %88, i1 %17) #1, !dbg !82
  ret void, !dbg !83
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cudva62zp6fn5eavyiq64wuehy6bc6fuqd6e4rpg24vr43cbqdi2.py", directory: "inductor_cache/ud")
!4 = !{ptr @triton_poi_fused_cat_25, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_25, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_25", linkageName: "triton_poi_fused_cat_25", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 27, scope: !7)
!18 = !DILocation(line: 28, column: 19, scope: !7)
!19 = !DILocation(line: 25, column: 19, scope: !7)
!20 = !DILocation(line: 39, column: 18, scope: !7)
!21 = !DILocation(line: 105, column: 35, scope: !7)
!22 = !DILocation(line: 0, scope: !7)
!23 = !DILocation(line: 40, column: 19, scope: !7)
!24 = !DILocation(line: 41, column: 31, scope: !7)
!25 = !DILocation(line: 41, column: 44, scope: !7)
!26 = !DILocation(line: 41, column: 36, scope: !7)
!27 = !DILocation(line: 52, column: 39, scope: !7)
!28 = !DILocation(line: 45, column: 20, scope: !7)
!29 = !DILocation(line: 46, column: 20, scope: !7)
!30 = !DILocation(line: 47, column: 31, scope: !7)
!31 = !DILocation(line: 47, column: 44, scope: !7)
!32 = !DILocation(line: 47, column: 36, scope: !7)
!33 = !DILocation(line: 48, column: 20, scope: !7)
!34 = !DILocation(line: 51, column: 20, scope: !7)
!35 = !DILocation(line: 52, column: 36, scope: !7)
!36 = !DILocation(line: 52, column: 54, scope: !7)
!37 = !DILocation(line: 52, column: 52, scope: !7)
!38 = !DILocation(line: 52, column: 31, scope: !7)
!39 = !DILocation(line: 52, column: 67, scope: !7)
!40 = !DILocation(line: 52, column: 59, scope: !7)
!41 = !DILocation(line: 53, column: 35, scope: !7)
!42 = !DILocation(line: 54, column: 34, scope: !7)
!43 = !DILocation(line: 83, column: 20, scope: !7)
!44 = !DILocation(line: 60, column: 20, scope: !7)
!45 = !DILocation(line: 66, column: 20, scope: !7)
!46 = !DILocation(line: 67, column: 31, scope: !7)
!47 = !DILocation(line: 67, column: 44, scope: !7)
!48 = !DILocation(line: 67, column: 36, scope: !7)
!49 = !DILocation(line: 72, column: 20, scope: !7)
!50 = !DILocation(line: 73, column: 31, scope: !7)
!51 = !DILocation(line: 73, column: 44, scope: !7)
!52 = !DILocation(line: 73, column: 36, scope: !7)
!53 = !DILocation(line: 77, column: 20, scope: !7)
!54 = !DILocation(line: 78, column: 31, scope: !7)
!55 = !DILocation(line: 78, column: 67, scope: !7)
!56 = !DILocation(line: 78, column: 59, scope: !7)
!57 = !DILocation(line: 79, column: 35, scope: !7)
!58 = !DILocation(line: 80, column: 35, scope: !7)
!59 = !DILocation(line: 91, column: 20, scope: !7)
!60 = !DILocation(line: 92, column: 46, scope: !7)
!61 = !DILocation(line: 92, column: 39, scope: !7)
!62 = !DILocation(line: 92, column: 36, scope: !7)
!63 = !DILocation(line: 92, column: 52, scope: !7)
!64 = !DILocation(line: 92, column: 31, scope: !7)
!65 = !DILocation(line: 92, column: 67, scope: !7)
!66 = !DILocation(line: 92, column: 59, scope: !7)
!67 = !DILocation(line: 97, column: 20, scope: !7)
!68 = !DILocation(line: 98, column: 31, scope: !7)
!69 = !DILocation(line: 98, column: 67, scope: !7)
!70 = !DILocation(line: 98, column: 59, scope: !7)
!71 = !DILocation(line: 102, column: 20, scope: !7)
!72 = !DILocation(line: 103, column: 55, scope: !7)
!73 = !DILocation(line: 103, column: 71, scope: !7)
!74 = !DILocation(line: 103, column: 52, scope: !7)
!75 = !DILocation(line: 103, column: 68, scope: !7)
!76 = !DILocation(line: 103, column: 31, scope: !7)
!77 = !DILocation(line: 103, column: 84, scope: !7)
!78 = !DILocation(line: 103, column: 76, scope: !7)
!79 = !DILocation(line: 104, column: 35, scope: !7)
!80 = !DILocation(line: 110, column: 25, scope: !7)
!81 = !DILocation(line: 107, column: 35, scope: !7)
!82 = !DILocation(line: 110, column: 37, scope: !7)
!83 = !DILocation(line: 110, column: 4, scope: !7)
