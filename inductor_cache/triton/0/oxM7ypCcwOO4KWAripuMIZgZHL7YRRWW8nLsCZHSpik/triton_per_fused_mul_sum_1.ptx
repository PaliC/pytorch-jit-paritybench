//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mul_sum_1 // -- Begin function triton_per_fused_mul_sum_1
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mul_sum_1
.visible .entry triton_per_fused_mul_sum_1(
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sum_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sum_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sum_1_param_2,
	.param .u32 triton_per_fused_mul_sum_1_param_3,
	.param .u32 triton_per_fused_mul_sum_1_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<66>;
	.reg .f32 	%f<23>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_per_fused_mul_sum_1_param_0];
	ld.param.u64 	%rd6, [triton_per_fused_mul_sum_1_param_1];
$L__tmp0:
	.loc	1 23 28                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:23:33
	shl.b32 	%r20, %r1, 3;
	ld.param.u64 	%rd7, [triton_per_fused_mul_sum_1_param_2];
	.loc	1 24 44                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:24:44
	mov.u32 	%r21, %tid.x;
	and.b32  	%r22, %r21, 31;
	shl.b32 	%r23, %r21, 1;
	and.b32  	%r24, %r23, 6;
	and.b32  	%r25, %r21, 7;
	.loc	1 24 23                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:24:23
	or.b32  	%r26, %r20, %r24;
	or.b32  	%r27, %r20, %r25;
	.loc	1 25 21                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:25:21
	setp.lt.s32 	%p3, %r26, 16;
	setp.lt.s32 	%p12, %r27, 16;
	.loc	1 26 34                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:26:34
	bfe.u32 	%r28, %r21, 2, 2;
	.loc	1 32 19                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:32:19
	shr.s32 	%r30, %r26, 31;
	shr.u32 	%r31, %r30, 30;
	add.s32 	%r32, %r26, %r31;
	.loc	1 31 19                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:31:19
	and.b32  	%r33, %r32, -4;
	sub.s32 	%r34, %r26, %r33;
	.loc	1 34 30                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:34:30
	mul.wide.u32 	%rd8, %r28, 4;
	add.s64 	%rd1, %rd5, %rd8;
	mov.pred 	%p1, -1;
	.loc	1 34 35                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:34:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	.loc	1 35 37                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:35:37
	and.b32  	%r35, %r21, 60;
	.loc	1 35 35                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:35:35
	add.s32 	%r36, %r34, %r35;
	.loc	1 35 45                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:35:45
	shl.b32 	%r37, %r32, 4;
	and.b32  	%r38, %r37, -64;
	.loc	1 35 42                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:35:42
	add.s32 	%r39, %r36, %r38;
	.loc	1 35 30                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:35:30
	mul.wide.s32 	%rd9, %r39, 4;
	add.s64 	%rd3, %rd6, %rd9;
	mov.b32 	%r6, 0;
	.loc	1 35 50                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:35:50
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p3 ld.global.v2.b32 { %r4, %r5 }, [ %rd3 + 0 ];
	@!%p3 mov.u32 %r4, %r6;
	@!%p3 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	.loc	1 36 18                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:36:18
	mul.f32 	%f4, %f1, %f2;
	mul.f32 	%f5, %f1, %f3;
	.loc	1 38 33                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:38:33
	selp.f32 	%f6, %f4, 0f00000000, %p3;
	selp.f32 	%f7, %f5, 0f00000000, %p3;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f6;
	shfl.sync.bfly.b32	%r41, %r40, 16, 31, -1;
	mov.b32 	%f8, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f6, %f8;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f9;
	shfl.sync.bfly.b32	%r43, %r42, 8, 31, -1;
	mov.b32 	%f10, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f9, %f10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f11;
	shfl.sync.bfly.b32	%r45, %r44, 4, 31, -1;
	mov.b32 	%f12, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f11, %f12;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f7;
	shfl.sync.bfly.b32	%r47, %r46, 16, 31, -1;
	mov.b32 	%f14, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f7, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f15;
	shfl.sync.bfly.b32	%r49, %r48, 8, 31, -1;
	mov.b32 	%f16, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f17;
	shfl.sync.bfly.b32	%r51, %r50, 4, 31, -1;
	mov.b32 	%f18, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	setp.lt.u32 	%p6, %r22, 4;
	shl.b32 	%r52, %r24, 3;
	shr.u32 	%r53, %r21, 3;
	and.b32  	%r54, %r53, 4;
	or.b32  	%r55, %r52, %r54;
	mov.u32 	%r56, global_smem;
	add.s32 	%r8, %r56, %r55;
	mov.b32 	%r9, %f13;
	// begin inline asm
	@%p6 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	add.s32 	%r10, %r8, 8;
	mov.b32 	%r11, %f19;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p8, %r21, 16;
	shl.b32 	%r57, %r21, 2;
	add.s32 	%r13, %r56, %r57;
	// begin inline asm
	@%p8 ld.shared.b32 %r12, [ %r13 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r12;
	shfl.sync.bfly.b32	%r58, %r12, 1, 31, -1;
	mov.b32 	%f21, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r59, %r21, 1;
	setp.eq.b32 	%p13, %r59, 1;
	not.pred 	%p14, %p13;
	and.pred  	%p9, %p8, %p14;
	mov.b32 	%r15, %f22;
	// begin inline asm
	@%p9 st.shared.b32 [ %r13 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r60, %r56, %r52;
	ld.shared.u32 	%r17, [%r60];
	ld.shared.u32 	%r18, [%r60+8];
$L__tmp2:
	.loc	1 39 27                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:39:27
	bar.sync 	0;
	shl.b32 	%r61, %r24, 2;
	sub.s32 	%r16, %r60, %r61;
	// begin inline asm
	@%p1 st.shared.v2.b32 [ %r16 + 0 ], { %r17, %r18 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r62, %r25, 2;
	add.s32 	%r63, %r56, %r62;
	ld.shared.u32 	%r19, [%r63];
	.loc	1 40 25                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:40:25
	mul.wide.s32 	%rd10, %r27, 4;
	add.s64 	%rd4, %rd7, %rd10;
	.loc	1 40 36                         // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:40:36
	bfe.u32 	%r64, %r21, 3, 2;
	or.b32  	%r65, %r54, %r64;
	setp.eq.s32 	%p15, %r65, 0;
	and.pred  	%p11, %p15, %p12;
	// begin inline asm
	@%p11 st.global.b32 [ %rd4 + 0 ], { %r19 };
	// end inline asm
	.loc	1 40 4                          // ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py:40:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 171                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa4 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 105
.b8 112
.b8 98
.b8 112
.b8 118
.b8 54
.b8 103
.b8 52
.b8 106
.b8 103
.b8 51
.b8 53
.b8 55
.b8 55
.b8 97
.b8 53
.b8 112
.b8 102
.b8 102
.b8 54
.b8 122
.b8 103
.b8 98
.b8 116
.b8 52
.b8 114
.b8 99
.b8 117
.b8 113
.b8 121
.b8 51
.b8 109
.b8 99
.b8 110
.b8 102
.b8 116
.b8 117
.b8 52
.b8 122
.b8 116
.b8 117
.b8 112
.b8 51
.b8 115
.b8 55
.b8 107
.b8 52
.b8 100
.b8 108
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 105
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x80:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x95:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
