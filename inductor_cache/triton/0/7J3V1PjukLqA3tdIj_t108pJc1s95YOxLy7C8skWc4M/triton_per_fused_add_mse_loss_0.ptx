//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_mse_loss_0 // -- Begin function triton_per_fused_add_mse_loss_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_add_mse_loss_0
.visible .entry triton_per_fused_add_mse_loss_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_0_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_0_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_0_param_6,
	.param .u32 triton_per_fused_add_mse_loss_0_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<95>;
	.reg .f32 	%f<99>;
	.reg .b64 	%rd<15>;
	.loc	1 19 0                          // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_per_fused_add_mse_loss_0_param_0];
	ld.param.u64 	%rd8, [triton_per_fused_add_mse_loss_0_param_1];
$L__tmp0:
	.loc	1 27 26                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:27:26
	mov.u32 	%r53, %tid.x;
	and.b32  	%r54, %r53, 31;
	ld.param.u64 	%rd9, [triton_per_fused_add_mse_loss_0_param_2];
	ld.param.u64 	%rd10, [triton_per_fused_add_mse_loss_0_param_3];
	shl.b32 	%r55, %r53, 2;
	ld.param.u64 	%rd11, [triton_per_fused_add_mse_loss_0_param_4];
	and.b32  	%r56, %r55, 252;
	ld.param.u64 	%rd12, [triton_per_fused_add_mse_loss_0_param_5];
	ld.param.u64 	%rd13, [triton_per_fused_add_mse_loss_0_param_6];
	.loc	1 31 30                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:31:30
	mul.wide.u32 	%rd14, %r56, 4;
	add.s64 	%rd1, %rd8, %rd14;
	mov.pred 	%p1, -1;
	.loc	1 31 35                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:31:35
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 32 30                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:32:30
	add.s64 	%rd2, %rd9, %rd14;
	.loc	1 32 35                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:32:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 30                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:33:30
	add.s64 	%rd3, %rd10, %rd14;
	.loc	1 33 35                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:33:35
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p1 ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 30                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:34:30
	add.s64 	%rd4, %rd11, %rd14;
	.loc	1 34 35                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:34:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p1 ld.global.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 35 31                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:35:31
	add.s64 	%rd5, %rd12, %rd14;
	.loc	1 35 36                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:35:36
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p1 ld.global.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 36 31                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:36:31
	add.s64 	%rd6, %rd13, %rd14;
	.loc	1 36 36                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:36:36
	// begin inline asm
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	@%p1 ld.global.v4.b32 { %r21, %r22, %r23, %r24 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 31 35                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:31:35
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r1;
	.loc	1 32 35                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:32:35
	mov.b32 	%f3, %r6;
	mov.b32 	%f4, %r5;
	.loc	1 37 18                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:37:18
	sub.f32 	%f5, %f2, %f4;
	sub.f32 	%f6, %f1, %f3;
	.loc	1 38 18                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:38:18
	mul.f32 	%f7, %f6, %f6;
	.loc	1 31 35                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:31:35
	mov.b32 	%f8, %r3;
	mov.b32 	%f9, %r4;
	.loc	1 32 35                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:32:35
	mov.b32 	%f10, %r7;
	mov.b32 	%f11, %r8;
	.loc	1 37 18                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:37:18
	sub.f32 	%f12, %f9, %f11;
	sub.f32 	%f13, %f8, %f10;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f14, %f5, %f5, %f7;
	fma.rn.f32 	%f15, %f13, %f13, %f14;
	fma.rn.f32 	%f16, %f12, %f12, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f16;
	shfl.sync.bfly.b32	%r58, %r57, 16, 31, -1;
	mov.b32 	%f17, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f18;
	shfl.sync.bfly.b32	%r60, %r59, 8, 31, -1;
	mov.b32 	%f19, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f20;
	shfl.sync.bfly.b32	%r62, %r61, 4, 31, -1;
	mov.b32 	%f21, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f22;
	shfl.sync.bfly.b32	%r64, %r63, 2, 31, -1;
	mov.b32 	%f23, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f24;
	shfl.sync.bfly.b32	%r66, %r65, 1, 31, -1;
	mov.b32 	%f25, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p7, %r54, 0;
	shr.u32 	%r67, %r53, 3;
	and.b32  	%r68, %r67, 4;
	mov.u32 	%r69, global_smem;
	add.s32 	%r25, %r69, %r68;
	mov.b32 	%r26, %f26;
	// begin inline asm
	@%p7 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p8, %r53, 2;
	add.s32 	%r28, %r69, %r55;
	// begin inline asm
	@%p8 ld.shared.b32 %r27, [ %r28 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r27;
	shfl.sync.bfly.b32	%r70, %r27, 1, 31, -1;
	mov.b32 	%f28, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r71, %r53, 1;
	setp.eq.b32 	%p17, %r71, 1;
	not.pred 	%p18, %p17;
	and.pred  	%p9, %p8, %p18;
	mov.b32 	%r30, %f29;
	// begin inline asm
	@%p9 st.shared.b32 [ %r28 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f30, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f31, %f30, 0f00000000;
$L__tmp3:
	.loc	1 33 35                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:33:35
	mov.b32 	%f32, %r10;
	mov.b32 	%f33, %r9;
	.loc	1 34 35                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:34:35
	mov.b32 	%f34, %r14;
	mov.b32 	%f35, %r13;
	.loc	1 41 18                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:41:18
	sub.f32 	%f36, %f33, %f35;
	sub.f32 	%f37, %f32, %f34;
	.loc	1 42 19                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:42:19
	mul.f32 	%f38, %f37, %f37;
	.loc	1 33 35                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:33:35
	mov.b32 	%f39, %r11;
	mov.b32 	%f40, %r12;
	.loc	1 34 35                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:34:35
	mov.b32 	%f41, %r15;
	mov.b32 	%f42, %r16;
	.loc	1 41 18                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:41:18
	sub.f32 	%f43, %f40, %f42;
	sub.f32 	%f44, %f39, %f41;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f45, %f36, %f36, %f38;
	fma.rn.f32 	%f46, %f44, %f44, %f45;
	fma.rn.f32 	%f47, %f43, %f43, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f47;
	shfl.sync.bfly.b32	%r73, %r72, 16, 31, -1;
	mov.b32 	%f48, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f49;
	shfl.sync.bfly.b32	%r75, %r74, 8, 31, -1;
	mov.b32 	%f50, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f51;
	shfl.sync.bfly.b32	%r77, %r76, 4, 31, -1;
	mov.b32 	%f52, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f53;
	shfl.sync.bfly.b32	%r79, %r78, 2, 31, -1;
	mov.b32 	%f54, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f55;
	shfl.sync.bfly.b32	%r81, %r80, 1, 31, -1;
	mov.b32 	%f56, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f57;
	// begin inline asm
	@%p7 st.shared.b32 [ %r25 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p8 ld.shared.b32 %r33, [ %r28 + 0 ];
	// end inline asm
	mov.b32 	%f58, %r33;
	shfl.sync.bfly.b32	%r82, %r33, 1, 31, -1;
	mov.b32 	%f59, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f60;
	// begin inline asm
	@%p9 st.shared.b32 [ %r28 + 0 ], %r36;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f61, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f62, %f61, 0f00000000;
$L__tmp6:
	.loc	1 35 36                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:35:36
	mov.b32 	%f63, %r18;
	mov.b32 	%f64, %r17;
	.loc	1 36 36                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:36:36
	mov.b32 	%f65, %r22;
	mov.b32 	%f66, %r21;
	.loc	1 45 20                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:45:20
	sub.f32 	%f67, %f64, %f66;
	sub.f32 	%f68, %f63, %f65;
	.loc	1 46 20                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:46:20
	mul.f32 	%f69, %f68, %f68;
	.loc	1 35 36                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:35:36
	mov.b32 	%f70, %r19;
	mov.b32 	%f71, %r20;
	.loc	1 36 36                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:36:36
	mov.b32 	%f72, %r23;
	mov.b32 	%f73, %r24;
	.loc	1 45 20                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:45:20
	sub.f32 	%f74, %f71, %f73;
	sub.f32 	%f75, %f70, %f72;
$L__tmp7:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f76, %f67, %f67, %f69;
	fma.rn.f32 	%f77, %f75, %f75, %f76;
	fma.rn.f32 	%f78, %f74, %f74, %f77;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f78;
	shfl.sync.bfly.b32	%r84, %r83, 16, 31, -1;
	mov.b32 	%f79, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f80, %f78, %f79;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f80;
	shfl.sync.bfly.b32	%r86, %r85, 8, 31, -1;
	mov.b32 	%f81, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f80, %f81;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r87, %f82;
	shfl.sync.bfly.b32	%r88, %r87, 4, 31, -1;
	mov.b32 	%f83, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f84;
	shfl.sync.bfly.b32	%r90, %r89, 2, 31, -1;
	mov.b32 	%f85, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f86;
	shfl.sync.bfly.b32	%r92, %r91, 1, 31, -1;
	mov.b32 	%f87, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f88;
	// begin inline asm
	@%p7 st.shared.b32 [ %r25 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p8 ld.shared.b32 %r39, [ %r28 + 0 ];
	// end inline asm
	mov.b32 	%f89, %r39;
	shfl.sync.bfly.b32	%r93, %r39, 1, 31, -1;
	mov.b32 	%f90, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f91, %f89, %f90;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f91;
	// begin inline asm
	@%p9 st.shared.b32 [ %r28 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f92, [global_smem];
$L__tmp8:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f93, %f92, 0f00000000;
$L__tmp9:
	.loc	1 50 19                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:50:19
	mov.b32 	%r44, %f31;
	mov.b32 	%r45, 1132462080;
	// begin inline asm
	div.full.f32 %r43, %r44, %r45;
	// end inline asm
	mov.b32 	%f94, %r43;
	.loc	1 51 20                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:51:20
	mov.b32 	%r47, %f62;
	// begin inline asm
	div.full.f32 %r46, %r47, %r45;
	// end inline asm
	mov.b32 	%f95, %r46;
	.loc	1 52 20                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:52:20
	add.f32 	%f96, %f94, %f95;
	.loc	1 53 20                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:53:20
	mov.b32 	%r50, %f93;
	// begin inline asm
	div.full.f32 %r49, %r50, %r45;
	// end inline asm
	mov.b32 	%f97, %r49;
	.loc	1 54 20                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:54:20
	add.f32 	%f98, %f96, %f97;
	.loc	1 55 4                          // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:55:4
	bar.sync 	0;
	.loc	1 56 63                         // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:56:63
	and.b32  	%r94, %r53, 63;
	setp.eq.s32 	%p16, %r94, 0;
	mov.b32 	%r52, %f98;
	// begin inline asm
	@%p16 st.global.b32 [ %rd7 + 0 ], { %r52 };
	// end inline asm
	.loc	1 56 4                          // czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py:56:4
	ret;
$L__tmp10:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 296                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x121 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 101
.b8 103
.b8 55
.b8 107
.b8 109
.b8 118
.b8 114
.b8 52
.b8 116
.b8 102
.b8 106
.b8 101
.b8 122
.b8 52
.b8 111
.b8 103
.b8 112
.b8 115
.b8 119
.b8 51
.b8 50
.b8 101
.b8 50
.b8 110
.b8 100
.b8 53
.b8 109
.b8 109
.b8 115
.b8 99
.b8 51
.b8 50
.b8 53
.b8 108
.b8 118
.b8 120
.b8 99
.b8 51
.b8 118
.b8 105
.b8 110
.b8 114
.b8 117
.b8 113
.b8 103
.b8 106
.b8 121
.b8 110
.b8 54
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 101
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x22 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 115
.b8 101
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x85:0xa6 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9a:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xca:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xfa:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x112:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp8                           // DW_AT_low_pc
.b64 $L__tmp9                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
