#loc = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":19:0)
#loc1 = loc(unknown)
#loc18 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":40:57)
#loc24 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":44:59)
#loc28 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":48:59)
#loc40 = loc(callsite(#loc1 at #loc18))
#loc44 = loc(callsite(#loc1 at #loc24))
#loc47 = loc(callsite(#loc1 at #loc28))
module {
  tt.func public @triton_per_fused_add_mse_loss_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>> loc(#loc6)
    %7 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc7)
    %8 = tt.addptr %7, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc7)
    %9 = tt.load %8 : tensor<256x!tt.ptr<f32>> loc(#loc8)
    %10 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc9)
    %11 = tt.addptr %10, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc9)
    %12 = tt.load %11 : tensor<256x!tt.ptr<f32>> loc(#loc10)
    %13 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc11)
    %14 = tt.addptr %13, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc11)
    %15 = tt.load %14 : tensor<256x!tt.ptr<f32>> loc(#loc12)
    %16 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc13)
    %17 = tt.addptr %16, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc13)
    %18 = tt.load %17 : tensor<256x!tt.ptr<f32>> loc(#loc14)
    %19 = arith.subf %3, %6 : tensor<256xf32> loc(#loc15)
    %20 = arith.mulf %19, %19 : tensor<256xf32> loc(#loc16)
    %21 = "tt.reduce"(%20) <{axis = 0 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc18)), %arg9: f32 loc(callsite(#loc1 at #loc18))):
      %39 = arith.addf %arg8, %arg9 : f32 loc(#loc49)
      tt.reduce.return %39 : f32 loc(#loc39)
    }) : (tensor<256xf32>) -> f32 loc(#loc39)
    %22 = arith.addf %21, %cst_0 : f32 loc(#loc42)
    %23 = arith.subf %9, %12 : tensor<256xf32> loc(#loc22)
    %24 = arith.mulf %23, %23 : tensor<256xf32> loc(#loc23)
    %25 = "tt.reduce"(%24) <{axis = 0 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc24)), %arg9: f32 loc(callsite(#loc1 at #loc24))):
      %39 = arith.addf %arg8, %arg9 : f32 loc(#loc50)
      tt.reduce.return %39 : f32 loc(#loc43)
    }) : (tensor<256xf32>) -> f32 loc(#loc43)
    %26 = arith.addf %25, %cst_0 : f32 loc(#loc45)
    %27 = arith.subf %15, %18 : tensor<256xf32> loc(#loc26)
    %28 = arith.mulf %27, %27 : tensor<256xf32> loc(#loc27)
    %29 = "tt.reduce"(%28) <{axis = 0 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc28)), %arg9: f32 loc(callsite(#loc1 at #loc28))):
      %39 = arith.addf %arg8, %arg9 : f32 loc(#loc51)
      tt.reduce.return %39 : f32 loc(#loc46)
    }) : (tensor<256xf32>) -> f32 loc(#loc46)
    %30 = arith.addf %29, %cst_0 : f32 loc(#loc48)
    %31 = arith.divf %22, %cst : f32 loc(#loc30)
    %32 = arith.divf %26, %cst : f32 loc(#loc31)
    %33 = arith.addf %31, %32 : f32 loc(#loc32)
    %34 = arith.divf %30, %cst : f32 loc(#loc33)
    %35 = arith.addf %33, %34 : f32 loc(#loc34)
    %36 = tt.splat %35 : f32 -> tensor<1xf32> loc(#loc34)
    gpu.barrier loc(#loc35)
    %37 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc36)
    %38 = tt.splat %37 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc36)
    tt.store %38, %36 : tensor<1x!tt.ptr<f32>> loc(#loc37)
    tt.return loc(#loc38)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":27:26)
#loc3 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":31:30)
#loc4 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":31:35)
#loc5 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":32:30)
#loc6 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":32:35)
#loc7 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":33:30)
#loc8 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":33:35)
#loc9 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":34:30)
#loc10 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":34:35)
#loc11 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":35:31)
#loc12 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":35:36)
#loc13 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":36:31)
#loc14 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":36:36)
#loc15 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":37:18)
#loc16 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":38:18)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc21 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":40:44)
#loc22 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":41:18)
#loc23 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":42:19)
#loc25 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":44:45)
#loc26 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":45:20)
#loc27 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":46:20)
#loc29 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":48:45)
#loc30 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":50:19)
#loc31 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":51:20)
#loc32 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":52:20)
#loc33 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":53:20)
#loc34 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":54:20)
#loc35 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":55:4)
#loc36 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":56:28)
#loc37 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":56:63)
#loc38 = loc("inductor_cache/ze/czeg7kmvr4tfjez4ogpsw32e2nd5mmsc325lvxc3vinruqgjyn6v.py":56:4)
#loc39 = loc(callsite(#loc17 at #loc18))
#loc41 = loc(callsite(#loc19 at #loc17))
#loc42 = loc(callsite(#loc20 at #loc21))
#loc43 = loc(callsite(#loc17 at #loc24))
#loc45 = loc(callsite(#loc20 at #loc25))
#loc46 = loc(callsite(#loc17 at #loc28))
#loc48 = loc(callsite(#loc20 at #loc29))
#loc49 = loc(callsite(#loc41 at #loc18))
#loc50 = loc(callsite(#loc41 at #loc24))
#loc51 = loc(callsite(#loc41 at #loc28))
