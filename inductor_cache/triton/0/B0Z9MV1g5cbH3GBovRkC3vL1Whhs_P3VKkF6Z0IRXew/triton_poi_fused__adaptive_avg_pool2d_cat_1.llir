; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__adaptive_avg_pool2d_cat_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 144, !dbg !14
  %.frozen = freeze i32 %8, !dbg !15
  %10 = sdiv i32 %.frozen, 3, !dbg !15
  %11 = srem i32 %10, 3, !dbg !16
  %12 = mul i32 %10, 3, !dbg !17
  %.decomposed = sub i32 %.frozen, %12, !dbg !17
  %.frozen4 = freeze i32 %8, !dbg !18
  %13 = sdiv i32 %.frozen4, 9, !dbg !18
  %14 = mul i32 %13, 9, !dbg !19
  %.decomposed5 = sub i32 %.frozen4, %14, !dbg !19
  %.tr = trunc nsw i32 %11 to i8, !dbg !20
  %.lhs.trunc = shl nsw i8 %.tr, 2, !dbg !20
  %15 = sdiv i8 %.lhs.trunc, 3, !dbg !20
  %.sext = sext i8 %15 to i32, !dbg !20
  %.tr3 = trunc nsw i32 %.decomposed to i8, !dbg !21
  %.lhs.trunc1 = shl nsw i8 %.tr3, 2, !dbg !21
  %16 = sdiv i8 %.lhs.trunc1, 3, !dbg !21
  %.sext2 = sext i8 %16 to i32, !dbg !21
  %17 = shl nsw i32 %.sext, 2, !dbg !22
  %18 = shl i32 %13, 4, !dbg !23
  %19 = add i32 %18, %.sext2, !dbg !24
  %20 = add i32 %19, %17, !dbg !25
  %21 = sext i32 %20 to i64, !dbg !26
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !26
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %9, i32 0, i1 %9) #1, !dbg !27
  %24 = bitcast i32 %23 to float, !dbg !27
  %25 = add i32 %19, 1, !dbg !28
  %26 = add i32 %25, %17, !dbg !29
  %27 = sext i32 %26 to i64, !dbg !30
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !30
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %9, i32 0, i1 %9) #1, !dbg !31
  %30 = bitcast i32 %29 to float, !dbg !31
  %31 = fadd float %24, %30, !dbg !32
  %32 = add i32 %19, 4, !dbg !33
  %33 = add i32 %32, %17, !dbg !34
  %34 = sext i32 %33 to i64, !dbg !35
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !35
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %9, i32 0, i1 %9) #1, !dbg !36
  %37 = bitcast i32 %36 to float, !dbg !36
  %38 = fadd float %31, %37, !dbg !37
  %39 = add i32 %19, 5, !dbg !38
  %40 = add i32 %39, %17, !dbg !39
  %41 = sext i32 %40 to i64, !dbg !40
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !40
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %42, i1 %9, i32 0, i1 %9) #1, !dbg !41
  %44 = bitcast i32 %43 to float, !dbg !41
  %45 = fadd float %38, %44, !dbg !42
  %46 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %45, float 4.000000e+00) #1, !dbg !43
  %47 = mul i32 %13, 110, !dbg !44
  %48 = add i32 %47, %.decomposed5, !dbg !45
  %49 = sext i32 %48 to i64, !dbg !46
  %50 = getelementptr float, ptr addrspace(1) %1, i64 %49, !dbg !46
  %51 = bitcast float %46 to i32, !dbg !47
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %51, ptr addrspace(1) %50, i1 %9) #1, !dbg !47
  ret void, !dbg !48
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ckcqvtktfgyljyhpfcrdh7l4u3zka4fqxm6pq62h2b3z7ntcjcsm.py", directory: "inductor_cache/kc")
!4 = !{ptr @triton_poi_fused__adaptive_avg_pool2d_cat_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__adaptive_avg_pool2d_cat_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__adaptive_avg_pool2d_cat_1", linkageName: "triton_poi_fused__adaptive_avg_pool2d_cat_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 19, scope: !7)
!20 = !DILocation(line: 29, column: 21, scope: !7)
!21 = !DILocation(line: 32, column: 21, scope: !7)
!22 = !DILocation(line: 36, column: 33, scope: !7)
!23 = !DILocation(line: 36, column: 51, scope: !7)
!24 = !DILocation(line: 36, column: 48, scope: !7)
!25 = !DILocation(line: 36, column: 57, scope: !7)
!26 = !DILocation(line: 36, column: 30, scope: !7)
!27 = !DILocation(line: 36, column: 72, scope: !7)
!28 = !DILocation(line: 40, column: 53, scope: !7)
!29 = !DILocation(line: 40, column: 62, scope: !7)
!30 = !DILocation(line: 40, column: 31, scope: !7)
!31 = !DILocation(line: 40, column: 77, scope: !7)
!32 = !DILocation(line: 41, column: 20, scope: !7)
!33 = !DILocation(line: 45, column: 53, scope: !7)
!34 = !DILocation(line: 45, column: 62, scope: !7)
!35 = !DILocation(line: 45, column: 31, scope: !7)
!36 = !DILocation(line: 45, column: 77, scope: !7)
!37 = !DILocation(line: 46, column: 20, scope: !7)
!38 = !DILocation(line: 48, column: 53, scope: !7)
!39 = !DILocation(line: 48, column: 62, scope: !7)
!40 = !DILocation(line: 48, column: 31, scope: !7)
!41 = !DILocation(line: 48, column: 77, scope: !7)
!42 = !DILocation(line: 49, column: 20, scope: !7)
!43 = !DILocation(line: 65, column: 20, scope: !7)
!44 = !DILocation(line: 66, column: 34, scope: !7)
!45 = !DILocation(line: 66, column: 30, scope: !7)
!46 = !DILocation(line: 66, column: 25, scope: !7)
!47 = !DILocation(line: 66, column: 46, scope: !7)
!48 = !DILocation(line: 66, column: 4, scope: !7)
