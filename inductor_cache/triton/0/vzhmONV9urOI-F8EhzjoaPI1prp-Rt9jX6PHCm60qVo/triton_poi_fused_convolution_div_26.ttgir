#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [1, 0]}>
#loc = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_convolution_div_26(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":19:0), %arg5: i32 loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":19:0)) attributes {noinline = false} {
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c9_i32 = arith.constant 9 : i32 loc(#loc1)
    %cst = arith.constant dense<9> : tensor<1x1024xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<2304> : tensor<1x1024xi32, #blocked1> loc(#loc1)
    %cst_1 = arith.constant dense<256> : tensor<1x1024xi32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<131072> : tensor<1x1024xi32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<131072> : tensor<1x1024xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = tt.get_program_id z : i32 loc(#loc3)
    %2 = tt.get_num_programs y : i32 loc(#loc4)
    %3 = arith.muli %1, %2 : i32 loc(#loc5)
    %4 = arith.addi %0, %3 : i32 loc(#loc6)
    %5 = arith.muli %4, %c1024_i32 : i32 loc(#loc7)
    %6 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc8)
    %7 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc8)
    %8 = tt.expand_dims %6 {axis = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x1024xi32, #blocked1> loc(#loc8)
    %9 = tt.expand_dims %7 {axis = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x1024xi32, #blocked> loc(#loc8)
    %10 = tt.splat %5 : i32 -> tensor<1x1024xi32, #blocked1> loc(#loc9)
    %11 = tt.splat %5 : i32 -> tensor<1x1024xi32, #blocked> loc(#loc9)
    %12 = arith.addi %10, %8 : tensor<1x1024xi32, #blocked1> loc(#loc9)
    %13 = arith.addi %11, %9 : tensor<1x1024xi32, #blocked> loc(#loc9)
    %14 = arith.cmpi slt, %12, %cst_2 : tensor<1x1024xi32, #blocked1> loc(#loc10)
    %15 = arith.cmpi slt, %13, %cst_3 : tensor<1x1024xi32, #blocked> loc(#loc10)
    %16 = tt.get_program_id x : i32 loc(#loc11)
    %17 = arith.cmpi slt, %16, %c9_i32 : i32 loc(#loc12)
    %18 = arith.remsi %12, %cst_1 : tensor<1x1024xi32, #blocked1> loc(#loc13)
    %19 = arith.divsi %12, %cst_1 : tensor<1x1024xi32, #blocked1> loc(#loc14)
    %20 = arith.muli %16, %c256_i32 : i32 loc(#loc15)
    %21 = tt.splat %20 : i32 -> tensor<1x1024xi32, #blocked1> loc(#loc16)
    %22 = arith.addi %18, %21 : tensor<1x1024xi32, #blocked1> loc(#loc16)
    %23 = arith.muli %19, %cst_0 : tensor<1x1024xi32, #blocked1> loc(#loc17)
    %24 = arith.addi %22, %23 : tensor<1x1024xi32, #blocked1> loc(#loc18)
    %25 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked1> loc(#loc19)
    %26 = tt.addptr %25, %24 : tensor<1x1024x!tt.ptr<f32>, #blocked1>, tensor<1x1024xi32, #blocked1> loc(#loc19)
    %27 = tt.splat %17 : i1 -> tensor<1x1024xi1, #blocked1> loc(#loc20)
    %28 = tt.splat %17 : i1 -> tensor<1x1024xi1, #blocked> loc(#loc20)
    %29 = arith.andi %27, %14 : tensor<1x1024xi1, #blocked1> loc(#loc20)
    %30 = arith.andi %28, %15 : tensor<1x1024xi1, #blocked> loc(#loc20)
    %31 = tt.load %26, %29 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>, #blocked1> loc(#loc21)
    %32 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc22)
    %33 = tt.load %32 : !tt.ptr<f32> loc(#loc23)
    %34 = tt.splat %33 : f32 -> tensor<1x1024xf32, #blocked1> loc(#loc24)
    %35 = arith.divf %31, %34 : tensor<1x1024xf32, #blocked1> loc(#loc25)
    %36 = arith.muli %13, %cst : tensor<1x1024xi32, #blocked> loc(#loc26)
    %37 = tt.splat %16 : i32 -> tensor<1x1024xi32, #blocked> loc(#loc27)
    %38 = arith.addi %37, %36 : tensor<1x1024xi32, #blocked> loc(#loc27)
    %39 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc28)
    %40 = tt.addptr %39, %38 : tensor<1x1024x!tt.ptr<f32>, #blocked>, tensor<1x1024xi32, #blocked> loc(#loc28)
    %41 = triton_gpu.convert_layout %35 : tensor<1x1024xf32, #blocked1> -> tensor<1x1024xf32, #blocked> loc(#loc29)
    tt.store %40, %41, %30 : tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc29)
    %42 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked1> loc(#loc30)
    %43 = tt.addptr %42, %24 : tensor<1x1024x!tt.ptr<f32>, #blocked1>, tensor<1x1024xi32, #blocked1> loc(#loc30)
    tt.store %43, %35, %29 : tensor<1x1024x!tt.ptr<f32>, #blocked1> loc(#loc31)
    tt.return loc(#loc32)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":22:29)
#loc3 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":22:48)
#loc4 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":22:69)
#loc5 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":22:53)
#loc6 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":22:34)
#loc7 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":22:75)
#loc8 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":23:44)
#loc9 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":23:23)
#loc10 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":24:21)
#loc11 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":25:28)
#loc12 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":27:21)
#loc13 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":29:19)
#loc14 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":30:19)
#loc15 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":32:39)
#loc16 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":32:35)
#loc17 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":32:49)
#loc18 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":32:44)
#loc19 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":32:30)
#loc20 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":32:62)
#loc21 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":32:54)
#loc22 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":33:30)
#loc23 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":33:19)
#loc24 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":34:33)
#loc25 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":35:18)
#loc26 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":36:32)
#loc27 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":36:30)
#loc28 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":36:25)
#loc29 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":36:43)
#loc30 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":37:25)
#loc31 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":37:55)
#loc32 = loc("inductor_cache/5k/c5k5drpvhioohlytcynxgdftagqgno3q4r22niz5cxrqb5vmf35v.py":37:4)
