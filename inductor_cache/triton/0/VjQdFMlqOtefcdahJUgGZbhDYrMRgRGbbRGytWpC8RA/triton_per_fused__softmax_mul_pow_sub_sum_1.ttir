#loc = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":19:0)
#loc1 = loc(unknown)
#loc59 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":59:39)
#loc69 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":64:26)
#loc82 = loc(callsite(#loc1 at #loc59))
#loc88 = loc(callsite(#loc1 at #loc69))
module {
  tt.func public @triton_per_fused__softmax_mul_pow_sub_sum_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<8x32xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<8x32xf32> loc(#loc1)
    %cst_1 = arith.constant dense<3> : tensor<1x32xi32> loc(#loc1)
    %cst_2 = arith.constant dense<48> : tensor<8x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<1x32xi32> loc(#loc1)
    %cst_4 = arith.constant dense<32> : tensor<8x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<1x32xi32> loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<1x32xi32> loc(#loc1)
    %cst_7 = arith.constant dense<16> : tensor<8x1xi32> loc(#loc1)
    %cst_8 = arith.constant dense<64> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_8 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_7 : tensor<8x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_7 : tensor<8x1xi32> loc(#loc11)
    %11 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc12)
    %12 = tt.addptr %11, %8 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc12)
    %13 = tt.load %12 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc13)
    %14 = arith.muli %10, %cst_8 : tensor<8x1xi32> loc(#loc14)
    %15 = arith.addi %9, %14 : tensor<8x1xi32> loc(#loc15)
    %16 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc16)
    %17 = tt.addptr %16, %15 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc16)
    %18 = tt.load %17, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc17)
    %19 = arith.muli %8, %cst_6 : tensor<1x32xi32> loc(#loc18)
    %20 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc19)
    %21 = tt.addptr %20, %19 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc19)
    %22 = tt.load %21 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc20)
    %23 = arith.addi %9, %cst_7 : tensor<8x1xi32> loc(#loc21)
    %24 = arith.addi %23, %14 : tensor<8x1xi32> loc(#loc22)
    %25 = tt.addptr %16, %24 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc23)
    %26 = tt.load %25, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc24)
    %27 = arith.addi %19, %cst_5 : tensor<1x32xi32> loc(#loc25)
    %28 = tt.addptr %20, %27 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc26)
    %29 = tt.load %28 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc27)
    %30 = arith.addi %9, %cst_4 : tensor<8x1xi32> loc(#loc28)
    %31 = arith.addi %30, %14 : tensor<8x1xi32> loc(#loc29)
    %32 = tt.addptr %16, %31 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc30)
    %33 = tt.load %32, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc31)
    %34 = arith.addi %19, %cst_3 : tensor<1x32xi32> loc(#loc32)
    %35 = tt.addptr %20, %34 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc33)
    %36 = tt.load %35 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc34)
    %37 = arith.addi %9, %cst_2 : tensor<8x1xi32> loc(#loc35)
    %38 = arith.addi %37, %14 : tensor<8x1xi32> loc(#loc36)
    %39 = tt.addptr %16, %38 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc37)
    %40 = tt.load %39, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc38)
    %41 = arith.addi %19, %cst_1 : tensor<1x32xi32> loc(#loc39)
    %42 = tt.addptr %20, %41 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc40)
    %43 = tt.load %42 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc41)
    %44 = tt.broadcast %18 : tensor<8x1xf32> -> tensor<8x32xf32> loc(#loc42)
    %45 = tt.broadcast %22 : tensor<1x32xf32> -> tensor<8x32xf32> loc(#loc42)
    %46 = arith.subf %44, %45 : tensor<8x32xf32> loc(#loc42)
    %47 = tt.broadcast %13 : tensor<1x32xf32> -> tensor<8x32xf32> loc(#loc43)
    %48 = arith.mulf %47, %46 : tensor<8x32xf32> loc(#loc43)
    %49 = arith.mulf %48, %48 : tensor<8x32xf32> loc(#loc44)
    %50 = tt.broadcast %26 : tensor<8x1xf32> -> tensor<8x32xf32> loc(#loc45)
    %51 = tt.broadcast %29 : tensor<1x32xf32> -> tensor<8x32xf32> loc(#loc45)
    %52 = arith.subf %50, %51 : tensor<8x32xf32> loc(#loc45)
    %53 = arith.mulf %47, %52 : tensor<8x32xf32> loc(#loc46)
    %54 = arith.mulf %53, %53 : tensor<8x32xf32> loc(#loc47)
    %55 = arith.addf %49, %54 : tensor<8x32xf32> loc(#loc48)
    %56 = tt.broadcast %33 : tensor<8x1xf32> -> tensor<8x32xf32> loc(#loc49)
    %57 = tt.broadcast %36 : tensor<1x32xf32> -> tensor<8x32xf32> loc(#loc49)
    %58 = arith.subf %56, %57 : tensor<8x32xf32> loc(#loc49)
    %59 = arith.mulf %47, %58 : tensor<8x32xf32> loc(#loc50)
    %60 = arith.mulf %59, %59 : tensor<8x32xf32> loc(#loc51)
    %61 = arith.addf %55, %60 : tensor<8x32xf32> loc(#loc52)
    %62 = tt.broadcast %40 : tensor<8x1xf32> -> tensor<8x32xf32> loc(#loc53)
    %63 = tt.broadcast %43 : tensor<1x32xf32> -> tensor<8x32xf32> loc(#loc53)
    %64 = arith.subf %62, %63 : tensor<8x32xf32> loc(#loc53)
    %65 = arith.mulf %47, %64 : tensor<8x32xf32> loc(#loc54)
    %66 = arith.mulf %65, %65 : tensor<8x32xf32> loc(#loc55)
    %67 = arith.addf %61, %66 : tensor<8x32xf32> loc(#loc56)
    %68 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x32xi1> loc(#loc57)
    %69 = arith.select %68, %67, %cst_0 : tensor<8x32xi1>, tensor<8x32xf32> loc(#loc57)
    %70 = "tt.reduce"(%69) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc59)), %arg9: f32 loc(callsite(#loc1 at #loc59))):
      %88 = arith.cmpf ogt, %arg8, %arg9 : f32 loc(#loc90)
      %89 = arith.cmpf une, %arg8, %arg8 : f32 loc(#loc91)
      %90 = arith.ori %88, %89 : i1 loc(#loc92)
      %91 = arith.select %90, %arg8, %arg9 : f32 loc(#loc93)
      tt.reduce.return %91 : f32 loc(#loc81)
    }) : (tensor<8x32xf32>) -> tensor<8xf32> loc(#loc81)
    %71 = tt.expand_dims %70 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc64)
    %72 = tt.broadcast %71 : tensor<8x1xf32> -> tensor<8x32xf32> loc(#loc65)
    %73 = arith.subf %67, %72 : tensor<8x32xf32> loc(#loc65)
    %74 = math.exp %73 : tensor<8x32xf32> loc(#loc66)
    %75 = arith.select %68, %74, %cst : tensor<8x32xi1>, tensor<8x32xf32> loc(#loc67)
    %76 = "tt.reduce"(%75) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc69)), %arg9: f32 loc(callsite(#loc1 at #loc69))):
      %88 = arith.addf %arg8, %arg9 : f32 loc(#loc94)
      tt.reduce.return %88 : f32 loc(#loc87)
    }) : (tensor<8x32xf32>) -> tensor<8xf32> loc(#loc87)
    %77 = tt.expand_dims %76 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc71)
    %78 = arith.muli %5, %cst_4 : tensor<8x1xi32> loc(#loc72)
    %79 = tt.broadcast %8 : tensor<1x32xi32> -> tensor<8x32xi32> loc(#loc73)
    %80 = tt.broadcast %78 : tensor<8x1xi32> -> tensor<8x32xi32> loc(#loc73)
    %81 = arith.addi %79, %80 : tensor<8x32xi32> loc(#loc73)
    %82 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x32x!tt.ptr<f32>> loc(#loc74)
    %83 = tt.addptr %82, %81 : tensor<8x32x!tt.ptr<f32>>, tensor<8x32xi32> loc(#loc74)
    tt.store %83, %67, %68 : tensor<8x32x!tt.ptr<f32>> loc(#loc75)
    %84 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc76)
    %85 = tt.addptr %84, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc76)
    tt.store %85, %71, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc77)
    %86 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc78)
    %87 = tt.addptr %86, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc78)
    tt.store %87, %77, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc79)
    tt.return loc(#loc80)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":23:28)
#loc3 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":23:33)
#loc4 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":24:36)
#loc5 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":24:44)
#loc6 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":24:23)
#loc7 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":25:21)
#loc8 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":26:26)
#loc9 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":26:34)
#loc10 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":30:19)
#loc11 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":31:19)
#loc12 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":33:30)
#loc13 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":33:35)
#loc14 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":34:38)
#loc15 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":34:35)
#loc16 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":34:30)
#loc17 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":34:43)
#loc18 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":35:32)
#loc19 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":35:30)
#loc20 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":35:37)
#loc21 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":36:35)
#loc22 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":36:40)
#loc23 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":36:30)
#loc24 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":36:48)
#loc25 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":37:34)
#loc26 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":37:30)
#loc27 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":37:41)
#loc28 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":38:36)
#loc29 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":38:41)
#loc30 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":38:31)
#loc31 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":38:49)
#loc32 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":39:35)
#loc33 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":39:31)
#loc34 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":39:42)
#loc35 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":40:36)
#loc36 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":40:41)
#loc37 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":40:31)
#loc38 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":40:49)
#loc39 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":41:35)
#loc40 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":41:31)
#loc41 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":41:42)
#loc42 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":42:18)
#loc43 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":43:18)
#loc44 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":44:18)
#loc45 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":45:18)
#loc46 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":46:18)
#loc47 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":47:19)
#loc48 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":48:19)
#loc49 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":49:20)
#loc50 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":50:19)
#loc51 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":51:20)
#loc52 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":52:20)
#loc53 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":53:20)
#loc54 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":54:19)
#loc55 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":55:20)
#loc56 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":56:20)
#loc57 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":58:35)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc64 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":59:42)
#loc65 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":60:20)
#loc66 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":61:24)
#loc67 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":63:35)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc70 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc71 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":64:29)
#loc72 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":65:33)
#loc73 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":65:30)
#loc74 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":65:25)
#loc75 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":65:45)
#loc76 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":66:25)
#loc77 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":66:37)
#loc78 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":67:25)
#loc79 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":67:37)
#loc80 = loc("inductor_cache/x6/cx6gtck5e6uith5muxcddw65o3ty4zqm6q5rz7pv7thaowhkrwrk.py":67:4)
#loc81 = loc(callsite(#loc58 at #loc59))
#loc83 = loc(callsite(#loc60 at #loc58))
#loc84 = loc(callsite(#loc61 at #loc58))
#loc85 = loc(callsite(#loc62 at #loc58))
#loc86 = loc(callsite(#loc63 at #loc58))
#loc87 = loc(callsite(#loc68 at #loc69))
#loc89 = loc(callsite(#loc70 at #loc68))
#loc90 = loc(callsite(#loc83 at #loc59))
#loc91 = loc(callsite(#loc84 at #loc59))
#loc92 = loc(callsite(#loc85 at #loc59))
#loc93 = loc(callsite(#loc86 at #loc59))
#loc94 = loc(callsite(#loc89 at #loc69))
