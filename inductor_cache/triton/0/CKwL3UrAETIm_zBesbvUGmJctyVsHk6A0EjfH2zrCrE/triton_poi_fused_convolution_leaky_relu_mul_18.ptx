//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_leaky_relu_mul_18 // -- Begin function triton_poi_fused_convolution_leaky_relu_mul_18
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_leaky_relu_mul_18
.visible .entry triton_poi_fused_convolution_leaky_relu_mul_18(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_mul_18_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_mul_18_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_mul_18_param_2,
	.param .u32 triton_poi_fused_convolution_leaky_relu_mul_18_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<73>;
	.reg .f32 	%f<49>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_convolution_leaky_relu_mul_18_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_convolution_leaky_relu_mul_18_param_1];
$L__tmp0:
	.loc	1 21 28                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:21:33
	shl.b32 	%r38, %r1, 10;
	ld.param.u64 	%rd10, [triton_poi_fused_convolution_leaky_relu_mul_18_param_2];
	.loc	1 22 36                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:22:36
	mov.u32 	%r39, %tid.x;
	shl.b32 	%r40, %r39, 3;
	and.b32  	%r41, %r40, 1016;
	shl.b32 	%r42, %r39, 2;
	and.b32  	%r43, %r42, 508;
	.loc	1 22 23                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:22:23
	or.b32  	%r44, %r38, %r41;
	or.b32  	%r45, %r44, 4;
	or.b32  	%r46, %r38, %r43;
	.loc	1 25 19                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:25:19
	bfe.s32 	%r47, %r1, 21, 1;
	shr.u32 	%r48, %r47, 23;
	add.s32 	%r49, %r44, %r48;
	and.b32  	%r50, %r49, -512;
	sub.s32 	%r51, %r44, %r50;
	add.s32 	%r52, %r45, %r48;
	and.b32  	%r53, %r52, -512;
	sub.s32 	%r54, %r45, %r53;
	.loc	1 26 34                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:26:34
	cvt.s64.s32 	%rd11, %r44;
	mul.wide.s32 	%rd12, %r44, 4;
	add.s64 	%rd1, %rd8, %rd12;
	add.s64 	%rd2, %rd1, 16;
	mul.wide.s32 	%rd13, %r46, 4;
	add.s64 	%rd6, %rd8, %rd13;
	cvt.s64.s32 	%rd14, %r38;
	cvt.u64.u32 	%rd15, %r43;
	or.b64  	%rd16, %rd14, %rd15;
	shl.b64 	%rd17, %rd16, 2;
	add.s64 	%rd18, %rd8, %rd17;
	add.s64 	%rd7, %rd18, 2048;
	mov.pred 	%p1, -1;
	.loc	1 26 39                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:26:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 27 30                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:27:30
	mul.wide.s32 	%rd19, %r51, 4;
	add.s64 	%rd3, %rd9, %rd19;
	mul.wide.s32 	%rd20, %r54, 4;
	add.s64 	%rd4, %rd9, %rd20;
	.loc	1 27 35                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:27:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 36 25                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:36:25
	add.s64 	%rd5, %rd10, %rd11;
	.loc	1 26 39                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:26:39
	mov.b32 	%f1, %r5;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r3;
	mov.b32 	%f4, %r2;
	.loc	1 27 35                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:27:35
	mov.b32 	%f5, %r13;
	mov.b32 	%f6, %r12;
	mov.b32 	%f7, %r11;
	mov.b32 	%f8, %r10;
	.loc	1 28 18                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:28:18
	add.f32 	%f9, %f4, %f8;
	add.f32 	%f10, %f3, %f7;
	add.f32 	%f11, %f2, %f6;
	add.f32 	%f12, %f1, %f5;
	.loc	1 30 18                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:30:18
	setp.gt.f32 	%p10, %f12, 0f00000000;
	setp.gt.f32 	%p11, %f11, 0f00000000;
	setp.gt.f32 	%p12, %f10, 0f00000000;
	setp.gt.f32 	%p13, %f9, 0f00000000;
	.loc	1 32 18                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:32:18
	mul.f32 	%f13, %f9, 0f3E4CCCCD;
	mul.f32 	%f14, %f10, 0f3E4CCCCD;
	mul.f32 	%f15, %f11, 0f3E4CCCCD;
	mul.f32 	%f16, %f12, 0f3E4CCCCD;
	.loc	1 33 32                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:33:32
	selp.f32 	%f17, %f9, %f13, %p13;
	selp.f32 	%f18, %f10, %f14, %p12;
	selp.f32 	%f19, %f11, %f15, %p11;
	selp.f32 	%f20, %f12, %f16, %p10;
	.loc	1 35 18                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:35:18
	mul.f32 	%f21, %f17, 0f3FB504F3;
	mul.f32 	%f22, %f18, 0f3FB504F3;
	mul.f32 	%f23, %f19, 0f3FB504F3;
	mul.f32 	%f24, %f20, 0f3FB504F3;
	.loc	1 26 39                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:26:39
	mov.b32 	%f25, %r9;
	mov.b32 	%f26, %r8;
	mov.b32 	%f27, %r7;
	mov.b32 	%f28, %r6;
	.loc	1 27 35                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:27:35
	mov.b32 	%f29, %r17;
	mov.b32 	%f30, %r16;
	mov.b32 	%f31, %r15;
	mov.b32 	%f32, %r14;
	.loc	1 28 18                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:28:18
	add.f32 	%f33, %f28, %f32;
	add.f32 	%f34, %f27, %f31;
	add.f32 	%f35, %f26, %f30;
	add.f32 	%f36, %f25, %f29;
	.loc	1 30 18                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:30:18
	setp.gt.f32 	%p14, %f36, 0f00000000;
	setp.gt.f32 	%p15, %f35, 0f00000000;
	setp.gt.f32 	%p16, %f34, 0f00000000;
	setp.gt.f32 	%p17, %f33, 0f00000000;
	.loc	1 32 18                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:32:18
	mul.f32 	%f37, %f33, 0f3E4CCCCD;
	mul.f32 	%f38, %f34, 0f3E4CCCCD;
	mul.f32 	%f39, %f35, 0f3E4CCCCD;
	mul.f32 	%f40, %f36, 0f3E4CCCCD;
	.loc	1 33 32                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:33:32
	selp.f32 	%f41, %f33, %f37, %p17;
	selp.f32 	%f42, %f34, %f38, %p16;
	selp.f32 	%f43, %f35, %f39, %p15;
	selp.f32 	%f44, %f36, %f40, %p14;
	.loc	1 35 18                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:35:18
	mul.f32 	%f45, %f41, 0f3FB504F3;
	mul.f32 	%f46, %f42, 0f3FB504F3;
	mul.f32 	%f47, %f43, 0f3FB504F3;
	mul.f32 	%f48, %f44, 0f3FB504F3;
	.loc	1 36 36                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:36:36
	selp.u32 	%r55, 1, 0, %p10;
	selp.u32 	%r56, 1, 0, %p11;
	prmt.b32 	%r57, %r56, %r55, 0x3340U;
	selp.u32 	%r58, 1, 0, %p12;
	selp.u32 	%r59, 1, 0, %p13;
	prmt.b32 	%r60, %r59, %r58, 0x3340U;
	prmt.b32 	%r61, %r60, %r57, 0x5410U;
	selp.u32 	%r62, 1, 0, %p14;
	selp.u32 	%r63, 1, 0, %p15;
	prmt.b32 	%r64, %r63, %r62, 0x3340U;
	selp.u32 	%r65, 1, 0, %p16;
	selp.u32 	%r66, 1, 0, %p17;
	prmt.b32 	%r67, %r66, %r65, 0x3340U;
	prmt.b32 	%r68, %r67, %r64, 0x5410U;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd5 + 0 ], { %r61, %r68 };
	// end inline asm
	.loc	1 37 39                         // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:37:39
	shl.b32 	%r69, %r41, 2;
	mov.u32 	%r70, global_smem;
	add.s32 	%r20, %r70, %r69;
	mov.b32 	%r21, %f21;
	mov.b32 	%r22, %f22;
	mov.b32 	%r23, %f23;
	mov.b32 	%r24, %f24;
	mov.b32 	%r26, %f45;
	mov.b32 	%r27, %f46;
	mov.b32 	%r28, %f47;
	mov.b32 	%r29, %f48;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r20 + 0 ], { %r21, %r22, %r23, %r24 };
	// end inline asm
	add.s32 	%r25, %r20, 16;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r25 + 0 ], { %r26, %r27, %r28, %r29 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r71, %r43, 2;
	add.s32 	%r72, %r70, %r71;
	ld.shared.v4.u32 	{%r34, %r35, %r36, %r37}, [%r72+2048];
	ld.shared.v4.u32 	{%r30, %r31, %r32, %r33}, [%r72];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd6 + 0 ], { %r30, %r31, %r32, %r33 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd7 + 0 ], { %r34, %r35, %r36, %r37 };
	// end inline asm
	.loc	1 37 4                          // c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py:37:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/4i/c4isxvxmw2fwuurf45c4xjg3e3f4zdro2fwzvx2ofdssf4onltvq.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 105
.b8 115
.b8 120
.b8 118
.b8 120
.b8 109
.b8 119
.b8 50
.b8 102
.b8 119
.b8 117
.b8 117
.b8 114
.b8 102
.b8 52
.b8 53
.b8 99
.b8 52
.b8 120
.b8 106
.b8 103
.b8 51
.b8 101
.b8 51
.b8 102
.b8 52
.b8 122
.b8 100
.b8 114
.b8 111
.b8 50
.b8 102
.b8 119
.b8 122
.b8 118
.b8 120
.b8 50
.b8 111
.b8 102
.b8 100
.b8 115
.b8 115
.b8 102
.b8 52
.b8 111
.b8 110
.b8 108
.b8 116
.b8 118
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 52
.b8 105
.b8 0
	}
	.section	.debug_macinfo	{	}
