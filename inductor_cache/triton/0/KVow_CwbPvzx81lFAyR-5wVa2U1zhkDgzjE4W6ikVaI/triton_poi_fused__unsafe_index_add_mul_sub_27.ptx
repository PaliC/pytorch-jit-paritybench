//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__unsafe_index_add_mul_sub_27 // -- Begin function triton_poi_fused__unsafe_index_add_mul_sub_27
                                        // @triton_poi_fused__unsafe_index_add_mul_sub_27
.visible .entry triton_poi_fused__unsafe_index_add_mul_sub_27(
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_27_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_27_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_27_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_27_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_27_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sub_27_param_5,
	.param .u32 triton_poi_fused__unsafe_index_add_mul_sub_27_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<26>;
	.reg .f32 	%f<6>;
	.reg .b64 	%rd<38>;
	.loc	1 19 0                          // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused__unsafe_index_add_mul_sub_27_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused__unsafe_index_add_mul_sub_27_param_1];
$L__tmp0:
	.loc	1 21 28                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:21:33
	shl.b32 	%r6, %r1, 7;
	ld.param.u64 	%rd13, [triton_poi_fused__unsafe_index_add_mul_sub_27_param_2];
	ld.param.u64 	%rd14, [triton_poi_fused__unsafe_index_add_mul_sub_27_param_3];
	.loc	1 22 36                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:22:36
	mov.u32 	%r7, %tid.x;
	and.b32  	%r8, %r7, 127;
	ld.param.u64 	%rd15, [triton_poi_fused__unsafe_index_add_mul_sub_27_param_4];
	.loc	1 22 23                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:22:23
	or.b32  	%r9, %r6, %r8;
	ld.param.u64 	%rd16, [triton_poi_fused__unsafe_index_add_mul_sub_27_param_5];
	.loc	1 24 21                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:24:21
	shr.s32 	%r11, %r9, 31;
	shr.u32 	%r12, %r11, 28;
	add.s32 	%r13, %r9, %r12;
	shr.s32 	%r14, %r13, 4;
	.loc	1 24 27                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:24:27
	shr.u32 	%r15, %r14, 28;
	add.s32 	%r16, %r14, %r15;
	and.b32  	%r17, %r16, -16;
	sub.s32 	%r18, %r14, %r17;
	.loc	1 25 19                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:25:19
	and.b32  	%r19, %r13, -16;
	sub.s32 	%r20, %r9, %r19;
	.loc	1 26 19                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:26:19
	bfe.s32 	%r21, %r1, 24, 1;
	shr.u32 	%r22, %r21, 24;
	add.s32 	%r23, %r9, %r22;
	shr.s32 	%r24, %r23, 8;
	.loc	1 28 30                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:28:30
	mul.wide.s32 	%rd17, %r18, 8;
	add.s64 	%rd2, %rd11, %rd17;
	mov.pred 	%p1, -1;
	.loc	1 28 35                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:28:35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 29 30                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:29:30
	mul.wide.s32 	%rd18, %r20, 8;
	add.s64 	%rd4, %rd12, %rd18;
	.loc	1 29 35                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:29:35
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 30 31                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:30:31
	add.s64 	%rd6, %rd14, %rd18;
	.loc	1 30 36                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:30:36
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 31 31                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:31:31
	mul.wide.s32 	%rd19, %r20, 4;
	add.s64 	%rd7, %rd15, %rd19;
	.loc	1 31 36                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:31:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 35 32                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:35:32
	shr.u64 	%rd20, %rd1, 60;
	and.b64  	%rd21, %rd20, 8;
	add.s64 	%rd22, %rd21, %rd1;
	.loc	1 39 49                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:39:49
	shl.b32 	%r25, %r24, 6;
	.loc	1 39 30                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:39:30
	shl.b64 	%rd23, %rd3, 2;
	add.s64 	%rd24, %rd13, %rd23;
	shr.u64 	%rd25, %rd3, 58;
	and.b64  	%rd26, %rd25, 32;
	add.s64 	%rd27, %rd24, %rd26;
	shl.b64 	%rd28, %rd22, 5;
	add.s64 	%rd29, %rd27, %rd28;
	mul.wide.s32 	%rd30, %r25, 4;
	add.s64 	%rd8, %rd29, %rd30;
	.loc	1 39 54                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:39:54
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 43 31                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:43:31
	shl.b64 	%rd31, %rd5, 2;
	add.s64 	%rd32, %rd13, %rd31;
	shr.u64 	%rd33, %rd5, 58;
	and.b64  	%rd34, %rd33, 32;
	add.s64 	%rd35, %rd32, %rd34;
	add.s64 	%rd36, %rd35, %rd28;
	add.s64 	%rd9, %rd36, %rd30;
	.loc	1 43 56                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:43:56
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	.loc	1 44 20                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:44:20
	sub.f32 	%f4, %f3, %f2;
	.loc	1 46 19                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:46:19
	fma.rn.f32 	%f5, %f4, %f1, %f2;
	.loc	1 47 25                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:47:25
	mul.wide.s32 	%rd37, %r9, 4;
	add.s64 	%rd10, %rd16, %rd37;
	.loc	1 47 37                         // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:47:37
	mov.b32 	%r5, %f5;
	// begin inline asm
	@%p1 st.global.b32 [ %rd10 + 0 ], { %r5 };
	// end inline asm
	.loc	1 47 4                          // cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py:47:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/v3/cv3gestj4uustey4idrb4bn2phnjgqwwl264crrto4gj6e3qdmht.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 51
.b8 103
.b8 101
.b8 115
.b8 116
.b8 106
.b8 52
.b8 117
.b8 117
.b8 115
.b8 116
.b8 101
.b8 121
.b8 52
.b8 105
.b8 100
.b8 114
.b8 98
.b8 52
.b8 98
.b8 110
.b8 50
.b8 112
.b8 104
.b8 110
.b8 106
.b8 103
.b8 113
.b8 119
.b8 119
.b8 108
.b8 50
.b8 54
.b8 52
.b8 99
.b8 114
.b8 114
.b8 116
.b8 111
.b8 52
.b8 103
.b8 106
.b8 54
.b8 101
.b8 51
.b8 113
.b8 100
.b8 109
.b8 104
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 51
.b8 0
	}
	.section	.debug_macinfo	{	}
