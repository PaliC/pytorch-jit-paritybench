//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mean_28 // -- Begin function triton_per_fused_mean_28
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mean_28
.visible .entry triton_per_fused_mean_28(
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_28_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_28_param_1,
	.param .u32 triton_per_fused_mean_28_param_2,
	.param .u32 triton_per_fused_mean_28_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<73>;
	.reg .f32 	%f<28>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_per_fused_mean_28_param_0];
	ld.param.u64 	%rd7, [triton_per_fused_mean_28_param_1];
$L__tmp0:
	.loc	1 23 28                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:23:33
	shl.b32 	%r33, %r1, 5;
	.loc	1 24 44                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:24:44
	mov.u32 	%r34, %tid.x;
	and.b32  	%r35, %r34, 16;
	shl.b32 	%r36, %r34, 1;
	and.b32  	%r37, %r36, 30;
	and.b32  	%r38, %r34, 31;
	.loc	1 24 23                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:24:23
	or.b32  	%r39, %r33, %r37;
	or.b32  	%r40, %r33, %r38;
	.loc	1 25 21                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:25:21
	setp.lt.s32 	%p1, %r39, 600;
	setp.lt.s32 	%p19, %r40, 600;
	.loc	1 26 34                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:26:34
	bfe.u32 	%r41, %r34, 4, 4;
	.loc	1 31 19                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:31:19
	mul.hi.s32 	%r43, %r39, 458129845;
	shr.u32 	%r44, %r43, 31;
	shr.s32 	%r45, %r43, 4;
	add.s32 	%r46, %r45, %r44;
	.loc	1 30 19                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:30:19
	mul.lo.s32 	%r47, %r46, 150;
	sub.s32 	%r48, %r39, %r47;
	.loc	1 33 35                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:33:35
	mad.lo.s32 	%r49, %r41, 150, %r48;
	.loc	1 33 44                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:33:44
	mad.lo.s32 	%r50, %r46, 9600, %r49;
	add.s32 	%r51, %r50, 2400;
	add.s32 	%r52, %r50, 4800;
	add.s32 	%r53, %r50, 7200;
	.loc	1 33 30                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:33:30
	mul.wide.s32 	%rd8, %r50, 4;
	add.s64 	%rd1, %rd7, %rd8;
	mul.wide.s32 	%rd9, %r51, 4;
	add.s64 	%rd2, %rd7, %rd9;
	mul.wide.s32 	%rd10, %r52, 4;
	add.s64 	%rd3, %rd7, %rd10;
	mul.wide.s32 	%rd11, %r53, 4;
	add.s64 	%rd4, %rd7, %rd11;
	mov.b32 	%r4, 0;
	.loc	1 33 54                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:33:54
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r6, %r4;
	@!%p1 mov.u32 %r7, %r4;
	// end inline asm
	mov.b32 	%f3, %r6;
	mov.b32 	%f4, %r7;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.v2.b32 { %r10, %r11 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r10, %r4;
	@!%p1 mov.u32 %r11, %r4;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.v2.b32 { %r14, %r15 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r14, %r4;
	@!%p1 mov.u32 %r15, %r4;
	// end inline asm
	mov.b32 	%f7, %r14;
	mov.b32 	%f8, %r15;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f1, %f3;
	add.f32 	%f10, %f2, %f4;
	add.f32 	%f11, %f9, %f5;
	add.f32 	%f12, %f10, %f6;
	add.f32 	%f13, %f11, %f7;
	selp.f32 	%f14, %f13, 0f00000000, %p1;
	add.f32 	%f15, %f12, %f8;
	selp.f32 	%f16, %f15, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f14;
	shfl.sync.bfly.b32	%r55, %r54, 16, 31, -1;
	mov.b32 	%f17, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f14, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f16;
	shfl.sync.bfly.b32	%r57, %r56, 16, 31, -1;
	mov.b32 	%f19, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f16, %f19;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p13, %r35, 0;
	bfe.u32 	%r58, %r34, 5, 3;
	shl.b32 	%r59, %r58, 2;
	shl.b32 	%r60, %r37, 5;
	or.b32  	%r61, %r60, %r59;
	mov.u32 	%r62, global_smem;
	add.s32 	%r18, %r62, %r61;
	mov.b32 	%r19, %f18;
	// begin inline asm
	@%p13 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r18, 32;
	mov.b32 	%r21, %f20;
	// begin inline asm
	@%p13 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p15, %r34, 256;
	shl.b32 	%r63, %r34, 2;
	add.s32 	%r23, %r62, %r63;
	// begin inline asm
	@%p15 ld.shared.b32 %r22, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r22;
	shfl.sync.bfly.b32	%r64, %r22, 4, 31, -1;
	mov.b32 	%f22, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f23;
	shfl.sync.bfly.b32	%r66, %r65, 2, 31, -1;
	mov.b32 	%f24, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f25;
	shfl.sync.bfly.b32	%r68, %r67, 1, 31, -1;
	mov.b32 	%f26, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r69, %r34, 7;
	setp.eq.s32 	%p20, %r69, 0;
	and.pred  	%p16, %p15, %p20;
	mov.b32 	%r25, %f27;
	// begin inline asm
	@%p16 st.shared.b32 [ %r23 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r70, %r62, %r60;
	ld.shared.u32 	%r27, [%r70];
	ld.shared.u32 	%r28, [%r70+32];
$L__tmp2:
	.loc	1 38 18                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:38:18
	bar.sync 	0;
	mad.lo.s32 	%r26, %r37, -28, %r70;
	mov.pred 	%p17, -1;
	// begin inline asm
	@%p17 st.shared.v2.b32 [ %r26 + 0 ], { %r27, %r28 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r71, %r38, 2;
	add.s32 	%r72, %r62, %r71;
	ld.shared.u32 	%r30, [%r72];
	mov.b32 	%r31, 1115684864;
	// begin inline asm
	div.full.f32 %r32, %r30, %r31;
	// end inline asm
	.loc	1 39 4                          // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:39:4
	bar.sync 	0;
	.loc	1 40 28                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:40:28
	mul.wide.s32 	%rd12, %r40, 4;
	add.s64 	%rd5, %rd6, %rd12;
	.loc	1 40 39                         // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:40:39
	setp.eq.s32 	%p21, %r58, 0;
	and.pred  	%p18, %p21, %p19;
	// begin inline asm
	@%p18 st.global.b32 [ %rd5 + 0 ], { %r32 };
	// end inline asm
	.loc	1 40 4                          // cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py:40:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bt/cbtl5kzs67t42v224nkhwa5m3nlscoe3maekwcrav6tc6pp4urgi.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 169                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 116
.b8 108
.b8 53
.b8 107
.b8 122
.b8 115
.b8 54
.b8 55
.b8 116
.b8 52
.b8 50
.b8 118
.b8 50
.b8 50
.b8 52
.b8 110
.b8 107
.b8 104
.b8 119
.b8 97
.b8 53
.b8 109
.b8 51
.b8 110
.b8 108
.b8 115
.b8 99
.b8 111
.b8 101
.b8 51
.b8 109
.b8 97
.b8 101
.b8 107
.b8 119
.b8 99
.b8 114
.b8 97
.b8 118
.b8 54
.b8 116
.b8 99
.b8 54
.b8 112
.b8 112
.b8 52
.b8 117
.b8 114
.b8 103
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 50
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x93:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
