; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_23(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 10, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 2, !dbg !12
  %10 = and i32 %9, 508, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = or disjoint i32 %11, 512, !dbg !13
  %.frozen = freeze i32 %11, !dbg !14
  %13 = sdiv i32 %.frozen, 49152, !dbg !14
  %14 = mul i32 %13, 49152, !dbg !15
  %.decomposed = sub i32 %.frozen, %14, !dbg !15
  %.frozen1 = freeze i32 %12, !dbg !14
  %15 = sdiv i32 %.frozen1, 49152, !dbg !14
  %16 = mul i32 %15, 49152, !dbg !15
  %.decomposed2 = sub i32 %.frozen1, %16, !dbg !15
  %17 = sext i32 %11 to i64, !dbg !16
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !16
  %19 = sext i32 %12 to i64, !dbg !16
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !16
  %21 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %18, i1 true) #1, !dbg !17
  %22 = extractvalue { i32, i32, i32, i32 } %21, 0, !dbg !17
  %23 = extractvalue { i32, i32, i32, i32 } %21, 1, !dbg !17
  %24 = extractvalue { i32, i32, i32, i32 } %21, 2, !dbg !17
  %25 = extractvalue { i32, i32, i32, i32 } %21, 3, !dbg !17
  %26 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !17
  %27 = extractvalue { i32, i32, i32, i32 } %26, 0, !dbg !17
  %28 = extractvalue { i32, i32, i32, i32 } %26, 1, !dbg !17
  %29 = extractvalue { i32, i32, i32, i32 } %26, 2, !dbg !17
  %30 = extractvalue { i32, i32, i32, i32 } %26, 3, !dbg !17
  %31 = mul i32 %13, 786432, !dbg !18
  %32 = mul i32 %15, 786432, !dbg !18
  %33 = add i32 %31, %.decomposed, !dbg !19
  %34 = add i32 %32, %.decomposed2, !dbg !19
  %35 = sext i32 %33 to i64, !dbg !20
  %36 = getelementptr float, ptr addrspace(1) %1, i64 %35, !dbg !20
  %37 = sext i32 %34 to i64, !dbg !20
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !20
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %22, i32 %23, i32 %24, i32 %25, ptr addrspace(1) %36, i1 true) #1, !dbg !21
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %27, i32 %28, i32 %29, i32 %30, ptr addrspace(1) %38, i1 true) #1, !dbg !21
  %39 = mul i32 %13, 835584, !dbg !22
  %40 = mul i32 %15, 835584, !dbg !22
  %41 = add i32 %39, %.decomposed, !dbg !23
  %42 = add i32 %40, %.decomposed2, !dbg !23
  %43 = sext i32 %41 to i64, !dbg !24
  %44 = getelementptr float, ptr addrspace(1) %2, i64 %43, !dbg !24
  %45 = sext i32 %42 to i64, !dbg !24
  %46 = getelementptr float, ptr addrspace(1) %2, i64 %45, !dbg !24
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %22, i32 %23, i32 %24, i32 %25, ptr addrspace(1) %44, i1 true) #1, !dbg !25
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %27, i32 %28, i32 %29, i32 %30, ptr addrspace(1) %46, i1 true) #1, !dbg !25
  %47 = mul i32 %13, 884736, !dbg !26
  %48 = mul i32 %15, 884736, !dbg !26
  %49 = add i32 %47, %.decomposed, !dbg !27
  %50 = add i32 %48, %.decomposed2, !dbg !27
  %51 = sext i32 %49 to i64, !dbg !28
  %52 = getelementptr float, ptr addrspace(1) %3, i64 %51, !dbg !28
  %53 = sext i32 %50 to i64, !dbg !28
  %54 = getelementptr float, ptr addrspace(1) %3, i64 %53, !dbg !28
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %22, i32 %23, i32 %24, i32 %25, ptr addrspace(1) %52, i1 true) #1, !dbg !29
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %27, i32 %28, i32 %29, i32 %30, ptr addrspace(1) %54, i1 true) #1, !dbg !29
  ret void, !dbg !30
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cblhf7z3jtmmlcnzgrkbwbps3t76s4liiyw5hvhfv5mrivi5b5ep.py", directory: "inductor_cache/bl")
!4 = !{ptr @triton_poi_fused_cat_23, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_23, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_23", linkageName: "triton_poi_fused_cat_23", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 26, column: 19, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 30, scope: !7)
!17 = !DILocation(line: 27, column: 35, scope: !7)
!18 = !DILocation(line: 28, column: 37, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 25, scope: !7)
!21 = !DILocation(line: 28, column: 48, scope: !7)
!22 = !DILocation(line: 29, column: 37, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 25, scope: !7)
!25 = !DILocation(line: 29, column: 48, scope: !7)
!26 = !DILocation(line: 30, column: 37, scope: !7)
!27 = !DILocation(line: 30, column: 30, scope: !7)
!28 = !DILocation(line: 30, column: 25, scope: !7)
!29 = !DILocation(line: 30, column: 48, scope: !7)
!30 = !DILocation(line: 30, column: 4, scope: !7)
