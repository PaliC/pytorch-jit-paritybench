; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_11(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 7, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 127, !dbg !12
  %11 = or disjoint i32 %8, %10, !dbg !13
  %12 = icmp slt i32 %11, 256, !dbg !14
  %13 = sdiv i32 %11, 4, !dbg !15
  %14 = sdiv i32 %11, 16, !dbg !16
  %15 = srem i32 %14, 4, !dbg !17
  %16 = sdiv i32 %11, 64, !dbg !18
  %17 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !19
  %18 = insertelement <2 x i32> %17, i32 %13, i64 1, !dbg !19
  %19 = srem <2 x i32> %18, splat (i32 4), !dbg !19
  %20 = icmp slt <2 x i32> %19, splat (i32 2), !dbg !20
  %21 = extractelement <2 x i1> %20, i64 0, !dbg !21
  %22 = extractelement <2 x i1> %20, i64 1, !dbg !22
  %23 = and i1 %21, %22, !dbg !23
  %24 = extractelement <2 x i32> %19, i64 0, !dbg !24
  %25 = shl nsw i32 %24, 2, !dbg !25
  %26 = add nsw i32 %15, %25, !dbg !26
  %27 = extractelement <2 x i32> %19, i64 1, !dbg !27
  %28 = shl nsw i32 %27, 3, !dbg !28
  %29 = shl nsw i32 %16, 4, !dbg !29
  %30 = add nsw i32 %28, %29, !dbg !30
  %31 = add nsw i32 %30, %26, !dbg !31
  %32 = sext i32 %31 to i64, !dbg !32
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !32
  %34 = and i1 %12, %23, !dbg !33
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %34, i32 0, i1 %34) #1, !dbg !34
  %36 = icmp sgt i32 %24, 1, !dbg !24
  %37 = and i1 %36, %22, !dbg !35
  %38 = add nsw i32 %26, -8, !dbg !36
  %39 = add nsw i32 %30, %38, !dbg !37
  %40 = sext i32 %39 to i64, !dbg !38
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !38
  %42 = and i1 %12, %37, !dbg !39
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %42, i32 0, i1 %42) #1, !dbg !40
  %.v = select i1 %21, i32 %35, i32 %43, !dbg !41
  %44 = icmp sgt i32 %27, 1, !dbg !27
  %45 = and i1 %21, %44, !dbg !42
  %46 = add nsw i32 %28, -16, !dbg !43
  %47 = add nsw i32 %26, %29, !dbg !44
  %48 = add nsw i32 %47, %46, !dbg !45
  %49 = sext i32 %48 to i64, !dbg !46
  %50 = getelementptr float, ptr addrspace(1) %2, i64 %49, !dbg !46
  %51 = and i1 %12, %45, !dbg !47
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %51, i32 0, i1 %51) #1, !dbg !48
  %53 = and i1 %36, %44, !dbg !49
  %54 = add nsw i32 %46, %29, !dbg !50
  %55 = add nsw i32 %54, %38, !dbg !51
  %56 = sext i32 %55 to i64, !dbg !52
  %57 = getelementptr float, ptr addrspace(1) %3, i64 %56, !dbg !52
  %58 = and i1 %12, %53, !dbg !53
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %57, i1 %58, i32 0, i1 %58) #1, !dbg !54
  %.v1 = select i1 %21, i32 %52, i32 %59, !dbg !21
  %.v2 = select i1 %22, i32 %.v, i32 %.v1, !dbg !22
  %60 = sext i32 %11 to i64, !dbg !55
  %61 = getelementptr float, ptr addrspace(1) %4, i64 %60, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %.v2, ptr addrspace(1) %61, i1 %12) #1, !dbg !56
  ret void, !dbg !57
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnvq3vuh2gw6soyd5wxfztvlnxchktemh57u5hr67ozxn2tshavv.py", directory: "inductor_cache/nv")
!4 = !{ptr @triton_poi_fused_cat_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_11, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_11", linkageName: "triton_poi_fused_cat_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 21, scope: !7)
!17 = !DILocation(line: 26, column: 27, scope: !7)
!18 = !DILocation(line: 27, column: 19, scope: !7)
!19 = !DILocation(line: 25, column: 19, scope: !7)
!20 = !DILocation(line: 38, column: 18, scope: !7)
!21 = !DILocation(line: 64, column: 35, scope: !7)
!22 = !DILocation(line: 0, scope: !7)
!23 = !DILocation(line: 39, column: 19, scope: !7)
!24 = !DILocation(line: 41, column: 20, scope: !7)
!25 = !DILocation(line: 40, column: 39, scope: !7)
!26 = !DILocation(line: 40, column: 36, scope: !7)
!27 = !DILocation(line: 49, column: 20, scope: !7)
!28 = !DILocation(line: 40, column: 48, scope: !7)
!29 = !DILocation(line: 40, column: 57, scope: !7)
!30 = !DILocation(line: 40, column: 45, scope: !7)
!31 = !DILocation(line: 40, column: 54, scope: !7)
!32 = !DILocation(line: 40, column: 31, scope: !7)
!33 = !DILocation(line: 40, column: 70, scope: !7)
!34 = !DILocation(line: 40, column: 62, scope: !7)
!35 = !DILocation(line: 44, column: 20, scope: !7)
!36 = !DILocation(line: 45, column: 36, scope: !7)
!37 = !DILocation(line: 45, column: 61, scope: !7)
!38 = !DILocation(line: 45, column: 31, scope: !7)
!39 = !DILocation(line: 45, column: 77, scope: !7)
!40 = !DILocation(line: 45, column: 69, scope: !7)
!41 = !DILocation(line: 46, column: 34, scope: !7)
!42 = !DILocation(line: 57, column: 20, scope: !7)
!43 = !DILocation(line: 58, column: 48, scope: !7)
!44 = !DILocation(line: 58, column: 45, scope: !7)
!45 = !DILocation(line: 58, column: 61, scope: !7)
!46 = !DILocation(line: 58, column: 31, scope: !7)
!47 = !DILocation(line: 58, column: 77, scope: !7)
!48 = !DILocation(line: 58, column: 69, scope: !7)
!49 = !DILocation(line: 62, column: 20, scope: !7)
!50 = !DILocation(line: 63, column: 52, scope: !7)
!51 = !DILocation(line: 63, column: 68, scope: !7)
!52 = !DILocation(line: 63, column: 31, scope: !7)
!53 = !DILocation(line: 63, column: 84, scope: !7)
!54 = !DILocation(line: 63, column: 76, scope: !7)
!55 = !DILocation(line: 68, column: 25, scope: !7)
!56 = !DILocation(line: 68, column: 37, scope: !7)
!57 = !DILocation(line: 68, column: 4, scope: !7)
