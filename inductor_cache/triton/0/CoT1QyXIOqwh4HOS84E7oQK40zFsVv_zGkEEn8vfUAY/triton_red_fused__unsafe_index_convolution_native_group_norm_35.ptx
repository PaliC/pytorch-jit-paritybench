//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__unsafe_index_convolution_native_group_norm_35 // -- Begin function triton_red_fused__unsafe_index_convolution_native_group_norm_35
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__unsafe_index_convolution_native_group_norm_35
.visible .entry triton_red_fused__unsafe_index_convolution_native_group_norm_35(
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_6,
	.param .u32 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_7,
	.param .u32 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<34>;
	.reg .b32 	%r<101>;
	.reg .f32 	%f<51>;
	.reg .b64 	%rd<81>;
	.loc	1 19 0                          // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:19:0

// %bb.0:                               // %.peel.next
	ld.param.u64 	%rd12, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_6];
	ld.param.u64 	%rd11, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_5];
	ld.param.u64 	%rd10, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_4];
	ld.param.u64 	%rd9, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_1];
	ld.param.u64 	%rd17, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_0];
$L__tmp0:
	.loc	1 22 28                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:22:28
	// begin inline asm
	mov.u32 %r9, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:22:33
	shl.b32 	%r15, %r9, 6;
	ld.param.u64 	%rd23, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_2];
	.loc	1 23 44                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:23:44
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd24, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_3];
	and.b32  	%r2, %r1, 3;
	and.b32  	%r3, %r1, 63;
	bfe.u32 	%r16, %r1, 2, 6;
	.loc	1 23 23                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:23:23
	or.b32  	%r4, %r15, %r3;
	or.b32  	%r5, %r15, %r16;
	.loc	1 24 21                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:24:21
	setp.lt.s32 	%p1, %r4, 512;
	setp.lt.s32 	%p8, %r5, 512;
	.loc	1 27 19                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:27:19
	shr.s32 	%r18, %r4, 31;
	shr.u32 	%r19, %r18, 30;
	add.s32 	%r20, %r4, %r19;
	shr.s32 	%r21, %r20, 2;
	.loc	1 26 19                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:26:19
	and.b32  	%r22, %r20, 268435452;
	sub.s32 	%r23, %r4, %r22;
	.loc	1 28 26                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:28:26
	shr.s32 	%r24, %r20, 31;
	shr.u32 	%r25, %r24, 27;
	add.s32 	%r26, %r21, %r25;
	and.b32  	%r27, %r26, -32;
	sub.s32 	%r28, %r21, %r27;
	.loc	1 29 31                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:29:31
	mul.wide.s32 	%rd25, %r28, 4;
	add.s64 	%rd13, %rd23, %rd25;
	.loc	1 29 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:29:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r10;
	.loc	1 41 42                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:41:42
	shl.b32 	%r29, %r23, 4;
	.loc	1 54 71                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:71
	shl.b32 	%r30, %r21, 15;
	.loc	1 54 65                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:65
	cvt.s64.s32 	%rd1, %r30;
	.loc	1 63 40                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:63:40
	shl.b32 	%r31, %r5, 16;
	bfe.u32 	%r6, %r1, 6, 2;
	or.b32  	%r32, %r31, %r2;
	shl.b32 	%r33, %r1, 2;
	and.b32  	%r34, %r33, 252;
	or.b32  	%r35, %r34, %r6;
	and.b32  	%r36, %r1, 255;
	mov.u32 	%r37, global_smem;
	add.s32 	%r38, %r37, %r34;
	shl.b32 	%r39, %r35, 2;
	add.s32 	%r51, %r38, %r39;
	and.b32  	%r40, %r1, 252;
	add.s32 	%r41, %r37, %r40;
	shl.b32 	%r42, %r36, 2;
	add.s32 	%r8, %r41, %r42;
	.loc	1 41 34                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:41:34
	mul.wide.s32 	%rd26, %r29, 8;
	add.s64 	%rd15, %rd17, %rd26;
	.loc	1 41 47                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:41:47
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd14 }, [ %rd15 + 0 ];
	@!%p1 mov.u64 %rd14, 0x0;
	// end inline asm
	mov.pred 	%p17, -1;
	.loc	1 42 39                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:42:39
	// begin inline asm
	mov.u64 %rd16, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd16 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 43 34                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:43:34
	mul.wide.u32 	%rd27, %r6, 8;
	add.s64 	%rd19, %rd17, %rd27;
	.loc	1 43 39                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:43:39
	// begin inline asm
	mov.u64 %rd18, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd18 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 47 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:47:36
	shr.u64 	%rd28, %rd14, 58;
	and.b64  	%rd29, %rd28, 32;
	add.s64 	%rd30, %rd29, %rd14;
	.loc	1 50 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:50:36
	shr.u64 	%rd31, %rd16, 58;
	and.b64  	%rd32, %rd31, 32;
	add.s64 	%rd33, %rd32, %rd16;
	.loc	1 54 35                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:35
	shl.b64 	%rd34, %rd18, 2;
	add.s64 	%rd35, %rd9, %rd34;
	shr.u64 	%rd36, %rd18, 56;
	and.b64  	%rd37, %rd36, 128;
	add.s64 	%rd38, %rd35, %rd37;
	shl.b64 	%rd39, %rd33, 7;
	add.s64 	%rd40, %rd38, %rd39;
	shl.b64 	%rd41, %rd30, 12;
	add.s64 	%rd42, %rd40, %rd41;
	mul.wide.s32 	%rd43, %r30, 4;
	add.s64 	%rd20, %rd42, %rd43;
	.loc	1 54 76                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:76
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd20 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r11;
	.loc	1 55 24                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:55:24
	add.f32 	%f12, %f1, %f11;
	.loc	1 63 29                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:63:29
	mul.wide.s32 	%rd44, %r32, 4;
	add.s64 	%rd21, %rd24, %rd44;
	.loc	1 63 52                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:63:52
	bar.sync 	0;
	mov.b32 	%r13, %f12;
	// begin inline asm
	@%p17 st.shared.b32 [ %r51 + 0 ], %r13;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r14, [%r8];
	// begin inline asm
	@%p8 st.global.b32 [ %rd21 + 0 ], { %r14 };
	// end inline asm
	.loc	1 62 58                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:62:58
	selp.f32 	%f48, 0f3F800000, 0f00000000, %p1;
	.loc	1 60 54                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:60:54
	selp.f32 	%f50, %f12, 0f00000000, %p1;
	.loc	1 34 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:34:36
	shl.b32 	%r43, %r9, 22;
	shl.b32 	%r44, %r16, 16;
	or.b32  	%r45, %r43, %r44;
	or.b32  	%r46, %r45, %r2;
	mul.wide.s32 	%rd45, %r46, 4;
	add.s64 	%rd46, %rd45, %rd24;
	add.s64 	%rd79, %rd46, 16;
	mov.f32 	%f49, 0f00000000;
	mov.u64 	%rd80, 4;
	shl.b64 	%rd74, %rd1, 2;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 36                          // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:0:36
	cvt.u32.u64 	%r54, %rd80;
	.loc	1 37 23                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:37:23
	shr.u32 	%r55, %r54, 12;
	.loc	1 39 23                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:39:23
	and.b32  	%r56, %r54, 60;
	or.b32  	%r57, %r6, %r56;
	.loc	1 41 34                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:41:34
	mul.wide.u32 	%rd55, %r55, 8;
	add.s64 	%rd48, %rd15, %rd55;
	.loc	1 41 47                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:41:47
	// begin inline asm
	mov.u64 %rd47, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd47 }, [ %rd48 + 0 ];
	@!%p1 mov.u64 %rd47, 0x0;
	// end inline asm
	.loc	1 42 34                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:42:34
	shr.u64 	%rd56, %rd80, 3;
	and.b64  	%rd57, %rd56, 504;
	add.s64 	%rd50, %rd17, %rd57;
	.loc	1 42 39                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:42:39
	// begin inline asm
	mov.u64 %rd49, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd49 }, [ %rd50 + 0 ];
	// end inline asm
	.loc	1 43 34                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:43:34
	mul.wide.u32 	%rd58, %r57, 8;
	add.s64 	%rd52, %rd17, %rd58;
	.loc	1 43 39                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:43:39
	// begin inline asm
	mov.u64 %rd51, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd51 }, [ %rd52 + 0 ];
	// end inline asm
	.loc	1 47 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:47:36
	shr.u64 	%rd59, %rd47, 58;
	and.b64  	%rd60, %rd59, 32;
	add.s64 	%rd61, %rd60, %rd47;
	.loc	1 50 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:50:36
	shr.u64 	%rd62, %rd49, 58;
	and.b64  	%rd63, %rd62, 32;
	add.s64 	%rd64, %rd63, %rd49;
	.loc	1 54 35                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:35
	shl.b64 	%rd65, %rd51, 2;
	add.s64 	%rd66, %rd9, %rd65;
	shr.u64 	%rd67, %rd51, 56;
	and.b64  	%rd68, %rd67, 128;
	add.s64 	%rd69, %rd66, %rd68;
	shl.b64 	%rd70, %rd64, 7;
	add.s64 	%rd71, %rd69, %rd70;
	shl.b64 	%rd72, %rd61, 12;
	add.s64 	%rd73, %rd71, %rd72;
	add.s64 	%rd53, %rd73, %rd74;
	.loc	1 54 76                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:76
	// begin inline asm
	mov.u32 %r47, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r47 }, [ %rd53 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r47;
	.loc	1 55 24                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:55:24
	add.f32 	%f14, %f1, %f13;
$L__tmp1:
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f15, %f14, %f50;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f16, %f48, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r49, %f15;
	mov.b32 	%r50, %f16;
	// begin inline asm
	div.full.f32 %r48, %r49, %r50;
	// end inline asm
	mov.b32 	%f17, %r48;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f18, %f50, %f17;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f19, %f14, %f18;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f20, %f15, %f19, %f49;
$L__tmp2:
	.loc	1 60 54                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:60:54
	selp.f32 	%f50, %f18, %f50, %p1;
	.loc	1 61 50                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:61:50
	selp.f32 	%f49, %f20, %f49, %p1;
	.loc	1 62 58                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:62:58
	selp.f32 	%f48, %f16, %f48, %p1;
	.loc	1 63 52                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:63:52
	bar.sync 	0;
	mov.b32 	%r52, %f14;
	// begin inline asm
	@%p17 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r53, [%r8];
	// begin inline asm
	@%p8 st.global.b32 [ %rd79 + 0 ], { %r53 };
	// end inline asm
	.loc	1 34 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:34:36
	add.s64 	%rd6, %rd80, 4;
	add.s64 	%rd79, %rd79, 16;
	setp.lt.u64 	%p16, %rd80, 65532;
	mov.u64 	%rd80, %rd6;
	@%p16 bra 	$L__BB0_1;
// %bb.2:                               // %.loopexit
$L__tmp3:
	.loc	2 204 46                        // triton_helpers.py:204:46
	bar.sync 	0;
	shl.b32 	%r85, %r6, 2;
	shl.b32 	%r86, %r3, 4;
	or.b32  	%r87, %r86, %r85;
	add.s32 	%r58, %r37, %r87;
	mov.b32 	%r59, %f50;
	// begin inline asm
	@%p17 st.shared.b32 [ %r58 + 0 ], %r59;
	// end inline asm
	add.s32 	%r89, %r37, 1024;
	add.s32 	%r60, %r89, %r87;
	mov.b32 	%r61, %f49;
	// begin inline asm
	@%p17 st.shared.b32 [ %r60 + 0 ], %r61;
	// end inline asm
	add.s32 	%r90, %r37, 2048;
	add.s32 	%r62, %r90, %r87;
	mov.b32 	%r63, %f48;
	// begin inline asm
	@%p17 st.shared.b32 [ %r62 + 0 ], %r63;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p20, %r1, 256;
	add.s32 	%r65, %r37, %r33;
	// begin inline asm
	@%p20 ld.shared.b32 %r64, [ %r65 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r64;
	add.s32 	%r67, %r89, %r33;
	// begin inline asm
	@%p20 ld.shared.b32 %r66, [ %r67 + 0 ];
	// end inline asm
	mov.b32 	%f22, %r66;
	add.s32 	%r69, %r90, %r33;
	// begin inline asm
	@%p20 ld.shared.b32 %r68, [ %r69 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r68;
	shfl.sync.bfly.b32	%r92, %r64, 2, 31, -1;
	mov.b32 	%f24, %r92;
	shfl.sync.bfly.b32	%r93, %r66, 2, 31, -1;
	mov.b32 	%f25, %r93;
	shfl.sync.bfly.b32	%r71, %r68, 2, 31, -1;
	mov.b32 	%f26, %r71;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f27, %f24, %f21;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f28, %f23, %f26;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p30, %f28, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r72, %f28;
	// begin inline asm
	div.full.f32 %r70, %r71, %r72;
	// end inline asm
	mov.b32 	%f29, %r70;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f30, 0f00000000, %f29, %p30;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f31, %f27, %f30, %f21;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f32, %f22, %f25;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f33, %f27, %f27;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f34, %f33, %f23;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f35, %f34, %f30, %f32;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r94, %f31;
	shfl.sync.bfly.b32	%r95, %r94, 1, 31, -1;
	mov.b32 	%f36, %r95;
	mov.b32 	%r96, %f35;
	shfl.sync.bfly.b32	%r97, %r96, 1, 31, -1;
	mov.b32 	%f37, %r97;
	shfl.sync.bfly.b32	%r74, %r72, 1, 31, -1;
	mov.b32 	%f38, %r74;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f39, %f36, %f31;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f40, %f28, %f38;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p31, %f40, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r75, %f40;
	// begin inline asm
	div.full.f32 %r73, %r74, %r75;
	// end inline asm
	mov.b32 	%f41, %r73;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f42, 0f00000000, %f41, %p31;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f43, %f39, %f42, %f31;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f44, %f35, %f37;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f45, %f39, %f39;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f46, %f28, %f45;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f47, %f42, %f46, %f44;
	.loc	2 204 46                        // triton_helpers.py:204:46
	setp.eq.s32 	%p32, %r2, 0;
	and.pred  	%p23, %p20, %p32;
	mov.b32 	%r77, %f43;
	// begin inline asm
	@%p23 st.shared.b32 [ %r65 + 0 ], %r77;
	// end inline asm
	mov.b32 	%r79, %f47;
	// begin inline asm
	@%p23 st.shared.b32 [ %r67 + 0 ], %r79;
	// end inline asm
	// begin inline asm
	@%p23 st.shared.b32 [ %r69 + 0 ], %r75;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r98, %r37, %r86;
	ld.shared.u32 	%r82, [%r98];
	add.s32 	%r99, %r89, %r86;
	ld.shared.u32 	%r83, [%r99];
	add.s32 	%r100, %r90, %r86;
	ld.shared.u32 	%r84, [%r100];
$L__tmp4:
	.loc	1 70 25                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:70:25
	mul.wide.s32 	%rd78, %r4, 4;
	add.s64 	%rd75, %rd10, %rd78;
	.loc	1 70 37                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:70:37
	setp.eq.s32 	%p33, %r6, 0;
	and.pred  	%p26, %p33, %p1;
	// begin inline asm
	@%p26 st.global.b32 [ %rd75 + 0 ], { %r82 };
	// end inline asm
	.loc	1 71 25                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:71:25
	add.s64 	%rd76, %rd11, %rd78;
	.loc	1 71 37                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:71:37
	// begin inline asm
	@%p26 st.global.b32 [ %rd76 + 0 ], { %r83 };
	// end inline asm
	.loc	1 72 25                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:72:25
	add.s64 	%rd77, %rd12, %rd78;
	.loc	1 72 37                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:72:37
	// begin inline asm
	@%p26 st.global.b32 [ %rd77 + 0 ], { %r84 };
	// end inline asm
	.loc	1 72 4                          // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:72:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 232                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 101
.b8 108
.b8 112
.b8 113
.b8 98
.b8 50
.b8 119
.b8 119
.b8 119
.b8 104
.b8 104
.b8 52
.b8 100
.b8 103
.b8 121
.b8 122
.b8 104
.b8 120
.b8 120
.b8 53
.b8 101
.b8 112
.b8 100
.b8 105
.b8 113
.b8 105
.b8 98
.b8 122
.b8 118
.b8 53
.b8 113
.b8 120
.b8 99
.b8 100
.b8 107
.b8 116
.b8 50
.b8 54
.b8 107
.b8 107
.b8 108
.b8 98
.b8 106
.b8 53
.b8 118
.b8 110
.b8 122
.b8 106
.b8 55
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 101
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x42 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 51
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa5:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 58                                  // DW_AT_call_line
.b8 55                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
