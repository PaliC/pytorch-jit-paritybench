#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":19:0)
#loc1 = loc(unknown)
#loc36 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":55:26)
#loc55 = loc(callsite(#loc1 at #loc36))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":19:0), %arg5: i32 loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<49> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<8.100000e-01> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e-01> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_4 = arith.constant 1.000000e+00 : f32 loc(#loc1)
    %c2_i64 = arith.constant 2 : i64 loc(#loc1)
    %c0_i64 = arith.constant 0 : i64 loc(#loc1)
    %c-1_i32 = arith.constant -1 : i32 loc(#loc1)
    %c49_i32 = arith.constant 49 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_5 = arith.constant dense<4.900000e+01> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc4)
    %4 = arith.cmpi slt, %3, %cst : tensor<1x64xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %0, %c4_i32 : i32 loc(#loc6)
    %6 = arith.remsi %5, %c4_i32 : i32 loc(#loc7)
    %7 = arith.remsi %0, %c4_i32 : i32 loc(#loc8)
    %8 = arith.muli %0, %c49_i32 : i32 loc(#loc9)
    %9 = tt.splat %8 : i32 -> tensor<1x64xi32, #blocked> loc(#loc10)
    %10 = arith.addi %3, %9 : tensor<1x64xi32, #blocked> loc(#loc10)
    %11 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc11)
    %12 = tt.addptr %11, %10 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc11)
    %13 = tt.splat %1 : i1 -> tensor<1x64xi1, #blocked> loc(#loc12)
    %14 = arith.andi %4, %13 : tensor<1x64xi1, #blocked> loc(#loc12)
    %15 = tt.load %12, %14, %cst_0 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc13)
    %16 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc14)
    %17 = tt.splat %16 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc15)
    %18 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc15)
    %19 = tt.load %17, %18 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc15)
    %20 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc16)
    %21 = tt.addptr %20, %10 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc16)
    %22 = tt.load %21, %14, %cst_0 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc17)
    %23 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc18)
    %24 = tt.splat %23 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc19)
    %25 = tt.load %24, %18 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc19)
    %26 = tt.broadcast %19 : tensor<1x1xf32, #blocked> -> tensor<1x64xf32, #blocked> loc(#loc20)
    %27 = arith.subf %15, %26 : tensor<1x64xf32, #blocked> loc(#loc20)
    %28 = arith.mulf %27, %27 : tensor<1x64xf32, #blocked> loc(#loc21)
    %29 = arith.addf %28, %cst_1 : tensor<1x64xf32, #blocked> loc(#loc22)
    %30 = tt.extern_elementwise %29 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x64xf32, #blocked>) -> tensor<1x64xf32, #blocked> loc(#loc23)
    %31 = arith.divf %27, %30 : tensor<1x64xf32, #blocked> loc(#loc24)
    %32 = tt.broadcast %25 : tensor<1x1xf32, #blocked> -> tensor<1x64xf32, #blocked> loc(#loc25)
    %33 = arith.subf %22, %32 : tensor<1x64xf32, #blocked> loc(#loc25)
    %34 = arith.mulf %33, %33 : tensor<1x64xf32, #blocked> loc(#loc26)
    %35 = arith.addf %34, %cst_1 : tensor<1x64xf32, #blocked> loc(#loc27)
    %36 = tt.extern_elementwise %35 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x64xf32, #blocked>) -> tensor<1x64xf32, #blocked> loc(#loc28)
    %37 = arith.divf %33, %36 : tensor<1x64xf32, #blocked> loc(#loc29)
    %38 = arith.subf %31, %37 : tensor<1x64xf32, #blocked> loc(#loc30)
    %39 = arith.mulf %38, %38 : tensor<1x64xf32, #blocked> loc(#loc31)
    %40 = arith.addf %39, %cst_2 : tensor<1x64xf32, #blocked> loc(#loc32)
    %41 = arith.divf %39, %40 : tensor<1x64xf32, #blocked> loc(#loc33)
    %42 = arith.select %14, %41, %cst_0 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc34)
    %43 = "tt.reduce"(%42) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc36)), %arg7: f32 loc(callsite(#loc1 at #loc36))):
      %63 = arith.addf %arg6, %arg7 : f32 loc(#loc57)
      tt.reduce.return %63 : f32 loc(#loc54)
    }) : (tensor<1x64xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc54)
    %44 = triton_gpu.convert_layout %43 {fastmath = #arith.fastmath<none>} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc38)
    %45 = tt.expand_dims %44 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc39)
    %46 = arith.divf %45, %cst_5 : tensor<1x1xf32, #blocked1> loc(#loc40)
    %47 = arith.addi %6, %c-1_i32 : i32 loc(#loc41)
    %48 = arith.extsi %47 : i32 to i64 loc(#loc42)
    %49 = arith.cmpi sge, %48, %c0_i64 : i64 loc(#loc42)
    %50 = arith.cmpi slt, %48, %c2_i64 : i64 loc(#loc43)
    %51 = arith.addi %7, %c-1_i32 : i32 loc(#loc44)
    %52 = arith.extsi %51 : i32 to i64 loc(#loc45)
    %53 = arith.cmpi sge, %52, %c0_i64 : i64 loc(#loc45)
    %54 = arith.cmpi slt, %52, %c2_i64 : i64 loc(#loc46)
    %55 = arith.andi %49, %50 : i1 loc(#loc47)
    %56 = arith.andi %55, %53 : i1 loc(#loc48)
    %57 = arith.andi %56, %54 : i1 loc(#loc49)
    %58 = arith.select %57, %cst_4, %cst_3 : f32 loc(#loc50)
    %59 = tt.splat %58 : f32 -> tensor<1x1xf32, #blocked1> loc(#loc50)
    %60 = arith.mulf %46, %59 : tensor<1x1xf32, #blocked1> loc(#loc38)
    gpu.barrier loc(#loc51)
    %61 = tt.splat %16 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc52)
    %62 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked1> loc(#loc52)
    tt.store %61, %60, %62 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc52)
    tt.return loc(#loc53)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":23:28)
#loc3 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":25:21)
#loc4 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":26:34)
#loc5 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":28:21)
#loc6 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":31:21)
#loc7 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":31:26)
#loc8 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":32:19)
#loc9 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":33:38)
#loc10 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":33:35)
#loc11 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":33:30)
#loc12 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":33:51)
#loc13 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":33:43)
#loc14 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":34:34)
#loc15 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":34:39)
#loc16 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":35:30)
#loc17 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":35:43)
#loc18 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":36:30)
#loc19 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":36:35)
#loc20 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":37:18)
#loc21 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":38:18)
#loc22 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":40:18)
#loc23 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":41:26)
#loc24 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":42:18)
#loc25 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":43:19)
#loc26 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":44:20)
#loc27 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":45:20)
#loc28 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":46:27)
#loc29 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":47:20)
#loc30 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":48:19)
#loc31 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":49:20)
#loc32 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":51:20)
#loc33 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":52:20)
#loc34 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":54:43)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc38 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":72:20)
#loc39 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":55:29)
#loc40 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":57:20)
#loc41 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":58:19)
#loc42 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":60:21)
#loc43 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":62:20)
#loc44 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":63:19)
#loc45 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":64:21)
#loc46 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":65:20)
#loc47 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":66:20)
#loc48 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":67:20)
#loc49 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":68:20)
#loc50 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":71:35)
#loc51 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":73:4)
#loc52 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":74:40)
#loc53 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":74:4)
#loc54 = loc(callsite(#loc35 at #loc36))
#loc56 = loc(callsite(#loc37 at #loc35))
#loc57 = loc(callsite(#loc56 at #loc36))
