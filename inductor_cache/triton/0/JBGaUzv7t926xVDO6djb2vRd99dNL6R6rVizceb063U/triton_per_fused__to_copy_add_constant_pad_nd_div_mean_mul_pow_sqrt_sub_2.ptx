//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2 // -- Begin function triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2
.visible .entry triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_3,
	.param .u32 triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_4,
	.param .u32 triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<60>;
	.reg .f32 	%f<34>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd6, [triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_0];
	ld.param.u64 	%rd7, [triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_1];
$L__tmp0:
	.loc	1 23 28                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:25:21
	setp.lt.s32 	%p3, %r1, 64;
	ld.param.u64 	%rd8, [triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_2];
	ld.param.u64 	%rd9, [triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_3];
	.loc	1 26 34                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:26:34
	mov.u32 	%r27, %tid.x;
	and.b32  	%r28, %r27, 63;
	.loc	1 28 21                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:28:21
	setp.lt.u32 	%p11, %r28, 49;
	.loc	1 33 35                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:33:35
	mad.lo.s32 	%r29, %r1, 49, %r28;
	.loc	1 33 30                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:33:30
	mul.wide.s32 	%rd10, %r29, 4;
	add.s64 	%rd1, %rd7, %rd10;
	.loc	1 33 51                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:33:51
	and.pred  	%p1, %p11, %p3;
	mov.b32 	%r3, 0;
	.loc	1 33 43                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:33:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 34 34                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:34:34
	mul.wide.s32 	%rd11, %r1, 4;
	add.s64 	%rd2, %rd6, %rd11;
	.loc	1 34 39                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:34:39
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 35 30                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:35:30
	add.s64 	%rd3, %rd8, %rd10;
	.loc	1 35 43                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:35:43
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r5, %r3;
	// end inline asm
	mov.b32 	%f3, %r5;
	.loc	1 36 30                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:36:30
	add.s64 	%rd4, %rd9, %rd11;
	.loc	1 36 35                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:36:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r7;
	.loc	1 37 18                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:37:18
	sub.f32 	%f5, %f1, %f2;
	.loc	1 40 18                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:40:18
	fma.rn.f32 	%f6, %f5, %f5, 0f3F4F5C29;
	.loc	1 41 26                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:41:26
	sqrt.approx.ftz.f32 	%f7, %f6;
	.loc	1 42 18                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:42:18
	mov.b32 	%r9, %f5;
	mov.b32 	%r10, %f7;
	// begin inline asm
	div.full.f32 %r8, %r9, %r10;
	// end inline asm
	mov.b32 	%f8, %r8;
	.loc	1 43 19                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:43:19
	sub.f32 	%f9, %f3, %f4;
	.loc	1 45 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:45:20
	fma.rn.f32 	%f10, %f9, %f9, 0f3F4F5C29;
	.loc	1 46 27                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:46:27
	sqrt.approx.ftz.f32 	%f11, %f10;
	.loc	1 31 21                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:31:21
	shr.s32 	%r30, %r1, 31;
	shr.u32 	%r31, %r30, 30;
	add.s32 	%r32, %r1, %r31;
	not.b32 	%r33, %r32;
	shr.s32 	%r34, %r32, 2;
	.loc	1 26 34                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:26:34
	and.b32  	%r35, %r27, 31;
	.loc	1 47 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:47:20
	mov.b32 	%r12, %f9;
	mov.b32 	%r13, %f11;
	// begin inline asm
	div.full.f32 %r11, %r12, %r13;
	// end inline asm
	mov.b32 	%f12, %r11;
	.loc	1 48 19                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:48:19
	sub.f32 	%f13, %f8, %f12;
	.loc	1 49 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:49:20
	mul.f32 	%f14, %f13, %f13;
	.loc	1 51 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:51:20
	fma.rn.f32 	%f15, %f13, %f13, 0f3DCCCCCD;
	.loc	1 52 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:52:20
	mov.b32 	%r15, %f14;
	mov.b32 	%r16, %f15;
	// begin inline asm
	div.full.f32 %r14, %r15, %r16;
	// end inline asm
	mov.b32 	%f16, %r14;
	.loc	1 54 43                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:54:43
	selp.f32 	%f17, %f16, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f17;
	shfl.sync.bfly.b32	%r37, %r36, 16, 31, -1;
	mov.b32 	%f18, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f19;
	shfl.sync.bfly.b32	%r39, %r38, 8, 31, -1;
	mov.b32 	%f20, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f21;
	shfl.sync.bfly.b32	%r41, %r40, 4, 31, -1;
	mov.b32 	%f22, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f23;
	shfl.sync.bfly.b32	%r43, %r42, 2, 31, -1;
	mov.b32 	%f24, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f25;
	shfl.sync.bfly.b32	%r45, %r44, 1, 31, -1;
	mov.b32 	%f26, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p7, %r35, 0;
	shr.u32 	%r46, %r27, 3;
	and.b32  	%r47, %r46, 4;
	mov.u32 	%r48, global_smem;
	add.s32 	%r17, %r48, %r47;
	mov.b32 	%r18, %f27;
	// begin inline asm
	@%p7 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p8, %r27, 2;
	shl.b32 	%r49, %r27, 2;
	add.s32 	%r20, %r48, %r49;
	// begin inline asm
	@%p8 ld.shared.b32 %r19, [ %r20 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r19;
	shfl.sync.bfly.b32	%r50, %r19, 1, 31, -1;
	mov.b32 	%f29, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r51, %r27, 1;
	setp.eq.b32 	%p12, %r51, 1;
	not.pred 	%p13, %p12;
	and.pred  	%p9, %p8, %p13;
	mov.b32 	%r22, %f30;
	// begin inline asm
	@%p9 st.shared.b32 [ %r20 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 57 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:57:20
	ld.shared.u32 	%r24, [global_smem];
	mov.b32 	%r25, 1111752704;
	// begin inline asm
	div.full.f32 %r23, %r24, %r25;
	// end inline asm
	mov.b32 	%f31, %r23;
	.loc	1 31 26                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:31:26
	shr.u32 	%r52, %r34, 30;
	add.s32 	%r53, %r34, %r52;
	not.b32 	%r54, %r53;
	.loc	1 66 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:66:20
	or.b32  	%r55, %r54, 3;
	add.s32 	%r56, %r55, %r34;
	or.b32  	%r57, %r33, 3;
	add.s32 	%r58, %r57, %r1;
	.loc	1 68 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:68:20
	or.b32  	%r59, %r56, %r58;
	setp.lt.u32 	%p14, %r59, 2;
	.loc	1 71 35                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:71:35
	selp.f32 	%f32, 0f3F800000, 0f00000000, %p14;
	.loc	1 72 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:72:20
	mul.f32 	%f33, %f32, %f31;
	.loc	1 73 4                          // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:73:4
	bar.sync 	0;
	.loc	1 74 40                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:74:40
	setp.eq.s32 	%p15, %r28, 0;
	mov.b32 	%r26, %f33;
	and.pred  	%p10, %p15, %p3;
	// begin inline asm
	@%p10 st.global.b32 [ %rd2 + 0 ], { %r26 };
	// end inline asm
	.loc	1 74 4                          // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:74:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 218                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 108
.b8 100
.b8 99
.b8 54
.b8 50
.b8 105
.b8 113
.b8 97
.b8 98
.b8 121
.b8 50
.b8 54
.b8 113
.b8 51
.b8 55
.b8 106
.b8 55
.b8 106
.b8 106
.b8 104
.b8 117
.b8 113
.b8 111
.b8 115
.b8 111
.b8 110
.b8 108
.b8 53
.b8 102
.b8 115
.b8 55
.b8 50
.b8 110
.b8 97
.b8 50
.b8 116
.b8 122
.b8 55
.b8 115
.b8 97
.b8 54
.b8 116
.b8 111
.b8 53
.b8 52
.b8 117
.b8 115
.b8 100
.b8 116
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x4c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 115
.b8 116
.b8 97
.b8 110
.b8 116
.b8 95
.b8 112
.b8 97
.b8 100
.b8 95
.b8 110
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xaf:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
