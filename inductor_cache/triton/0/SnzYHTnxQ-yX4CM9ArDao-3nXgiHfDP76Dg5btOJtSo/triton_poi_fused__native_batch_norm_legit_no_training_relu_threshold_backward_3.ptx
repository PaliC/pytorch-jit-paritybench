//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<82>;
	.reg .b16 	%rs<45>;
	.reg .b32 	%r<252>;
	.reg .f32 	%f<88>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_1];
$L__tmp0:
	.loc	1 22 28                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:22:33
	shl.b32 	%r114, %r1, 8;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_2];
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_3];
	.loc	1 23 44                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:23:44
	mov.u32 	%r115, %tid.x;
	shl.b32 	%r116, %r115, 4;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_4];
	and.b32  	%r117, %r116, 240;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_5];
	and.b32  	%r118, %r115, 255;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_3_param_6];
	.loc	1 23 23                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:23:23
	or.b32  	%r119, %r114, %r117;
	or.b32  	%r120, %r119, 4;
	or.b32  	%r121, %r119, 8;
	or.b32  	%r122, %r119, 12;
	or.b32  	%r123, %r114, %r118;
	.loc	1 25 28                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:25:33
	shl.b32 	%r124, %r2, 4;
	.loc	1 26 44                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:26:44
	bfe.u32 	%r125, %r115, 4, 4;
	.loc	1 26 23                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:26:23
	or.b32  	%r126, %r124, %r125;
	.loc	1 27 21                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:27:21
	setp.lt.s32 	%p1, %r126, 64;
	.loc	1 30 19                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:30:19
	shr.s32 	%r128, %r119, 31;
	shr.u32 	%r129, %r128, 24;
	add.s32 	%r130, %r119, %r129;
	.loc	1 29 19                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:29:19
	and.b32  	%r131, %r130, -256;
	sub.s32 	%r132, %r119, %r131;
	bfe.s32 	%r133, %r1, 23, 1;
	shr.u32 	%r134, %r133, 24;
	add.s32 	%r135, %r120, %r134;
	and.b32  	%r136, %r135, -256;
	sub.s32 	%r137, %r120, %r136;
	add.s32 	%r138, %r121, %r134;
	and.b32  	%r139, %r138, -256;
	sub.s32 	%r140, %r121, %r139;
	add.s32 	%r141, %r122, %r134;
	and.b32  	%r142, %r141, -256;
	sub.s32 	%r143, %r122, %r142;
	add.s32 	%r144, %r123, %r134;
	and.b32  	%r145, %r144, -256;
	sub.s32 	%r146, %r123, %r145;
	.loc	1 32 39                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:32:39
	shl.b32 	%r147, %r126, 8;
	.loc	1 32 50                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:32:50
	shl.b32 	%r148, %r130, 6;
	and.b32  	%r149, %r148, -16384;
	.loc	1 32 35                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:32:35
	add.s32 	%r150, %r149, %r147;
	.loc	1 32 44                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:32:44
	add.s32 	%r151, %r150, %r132;
	add.s32 	%r152, %r150, %r137;
	add.s32 	%r153, %r150, %r140;
	add.s32 	%r154, %r150, %r143;
	.loc	1 32 30                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:32:30
	cvt.s64.s32 	%rd21, %r151;
	mul.wide.s32 	%rd22, %r151, 4;
	add.s64 	%rd1, %rd14, %rd22;
	mul.wide.s32 	%rd23, %r152, 4;
	add.s64 	%rd2, %rd14, %rd23;
	mul.wide.s32 	%rd24, %r153, 4;
	add.s64 	%rd3, %rd14, %rd24;
	mul.wide.s32 	%rd25, %r154, 4;
	add.s64 	%rd4, %rd14, %rd25;
	.loc	1 32 55                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:32:55
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r21, %r22, %r23 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd4 + 0 ];
	// end inline asm
	and.b32  	%r155, %r116, 4080;
	and.b32  	%r156, %r115, 240;
	add.s32 	%r157, %r155, %r156;
	shl.b32 	%r158, %r157, 2;
	mov.u32 	%r159, global_smem;
	add.s32 	%r19, %r159, %r158;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r19 + 0 ], { %r20, %r21, %r22, %r23 };
	// end inline asm
	add.s32 	%r24, %r19, 16;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r24 + 0 ], { %r25, %r26, %r27, %r28 };
	// end inline asm
	add.s32 	%r29, %r19, 32;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r29 + 0 ], { %r30, %r31, %r32, %r33 };
	// end inline asm
	add.s32 	%r34, %r19, 48;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r34 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r160, %r118, 2;
	add.s32 	%r161, %r159, %r160;
	ld.shared.f32 	%f1, [%r161];
	ld.shared.f32 	%f2, [%r161+1088];
	ld.shared.f32 	%f3, [%r161+2176];
	ld.shared.f32 	%f4, [%r161+3264];
	ld.shared.f32 	%f5, [%r161+4352];
	ld.shared.f32 	%f6, [%r161+5440];
	ld.shared.f32 	%f7, [%r161+6528];
	ld.shared.f32 	%f8, [%r161+7616];
	ld.shared.f32 	%f9, [%r161+8704];
	ld.shared.f32 	%f10, [%r161+9792];
	ld.shared.f32 	%f11, [%r161+10880];
	ld.shared.f32 	%f12, [%r161+11968];
	ld.shared.f32 	%f13, [%r161+13056];
	ld.shared.f32 	%f14, [%r161+14144];
	ld.shared.f32 	%f15, [%r161+15232];
	ld.shared.f32 	%f16, [%r161+16320];
	.loc	1 33 30                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:33:30
	mul.wide.s32 	%rd26, %r146, 4;
	add.s64 	%rd5, %rd15, %rd26;
	.loc	1 33 35                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:33:35
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r39 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:34:30
	add.s64 	%rd6, %rd16, %rd26;
	.loc	1 34 35                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:34:35
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r40 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r40;
	.loc	1 35 31                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:35:31
	add.s64 	%rd7, %rd17, %rd26;
	.loc	1 35 36                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:35:36
	// begin inline asm
	mov.u32 %r41, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r41 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:36:31
	add.s64 	%rd8, %rd18, %rd26;
	.loc	1 36 36                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:36:36
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r42 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 39 18                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:39:18
	add.f32 	%f18, %f17, 0f3727C5AC;
	.loc	1 40 26                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:40:26
	sqrt.approx.ftz.f32 	%f19, %f18;
	.loc	1 26 44                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:26:44
	shl.b32 	%r162, %r115, 2;
	and.b32  	%r163, %r162, 12;
	.loc	1 26 23                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:26:23
	or.b32  	%r164, %r124, %r163;
	.loc	1 27 21                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:27:21
	setp.lt.s32 	%p29, %r164, 64;
	.loc	1 23 44                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:23:44
	bfe.u32 	%r165, %r115, 2, 6;
	.loc	1 23 23                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:23:23
	or.b32  	%r166, %r114, %r165;
	.loc	1 42 18                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:42:18
	mov.b32 	%r45, %f19;
	mov.b32 	%r44, 1065353216;
	// begin inline asm
	div.full.f32 %r43, %r44, %r45;
	// end inline asm
	mov.b32 	%f20, %r43;
	.loc	1 37 18                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:37:18
	mov.b32 	%f21, %r39;
	sub.f32 	%f22, %f1, %f21;
	sub.f32 	%f23, %f5, %f21;
	sub.f32 	%f24, %f9, %f21;
	sub.f32 	%f25, %f13, %f21;
	sub.f32 	%f26, %f15, %f21;
	sub.f32 	%f27, %f2, %f21;
	sub.f32 	%f28, %f6, %f21;
	sub.f32 	%f29, %f10, %f21;
	sub.f32 	%f30, %f14, %f21;
	sub.f32 	%f31, %f16, %f21;
	sub.f32 	%f32, %f3, %f21;
	sub.f32 	%f33, %f4, %f21;
	sub.f32 	%f34, %f7, %f21;
	sub.f32 	%f35, %f8, %f21;
	sub.f32 	%f36, %f11, %f21;
	sub.f32 	%f37, %f12, %f21;
	.loc	1 45 19                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:45:19
	mul.f32 	%f38, %f37, %f20;
	mul.f32 	%f39, %f36, %f20;
	mul.f32 	%f40, %f35, %f20;
	mul.f32 	%f41, %f34, %f20;
	mul.f32 	%f42, %f33, %f20;
	mul.f32 	%f43, %f32, %f20;
	mul.f32 	%f44, %f31, %f20;
	mul.f32 	%f45, %f30, %f20;
	mul.f32 	%f46, %f29, %f20;
	mul.f32 	%f47, %f28, %f20;
	mul.f32 	%f48, %f27, %f20;
	mul.f32 	%f49, %f26, %f20;
	mul.f32 	%f50, %f25, %f20;
	mul.f32 	%f51, %f24, %f20;
	mul.f32 	%f52, %f23, %f20;
	mul.f32 	%f53, %f22, %f20;
	.loc	1 46 20                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:46:20
	mov.b32 	%f54, %r41;
	.loc	1 47 20                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:47:20
	mov.b32 	%f55, %r42;
	fma.rn.f32 	%f56, %f53, %f54, %f55;
	fma.rn.f32 	%f57, %f52, %f54, %f55;
	fma.rn.f32 	%f58, %f51, %f54, %f55;
	fma.rn.f32 	%f59, %f50, %f54, %f55;
	fma.rn.f32 	%f60, %f49, %f54, %f55;
	fma.rn.f32 	%f61, %f48, %f54, %f55;
	fma.rn.f32 	%f62, %f47, %f54, %f55;
	fma.rn.f32 	%f63, %f46, %f54, %f55;
	fma.rn.f32 	%f64, %f45, %f54, %f55;
	fma.rn.f32 	%f65, %f44, %f54, %f55;
	fma.rn.f32 	%f66, %f43, %f54, %f55;
	fma.rn.f32 	%f67, %f42, %f54, %f55;
	fma.rn.f32 	%f68, %f41, %f54, %f55;
	fma.rn.f32 	%f69, %f40, %f54, %f55;
	fma.rn.f32 	%f70, %f39, %f54, %f55;
	fma.rn.f32 	%f71, %f38, %f54, %f55;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p50, %f71, 0f00000000;
	setp.lt.f32 	%p51, %f70, 0f00000000;
	setp.lt.f32 	%p52, %f69, 0f00000000;
	setp.lt.f32 	%p53, %f68, 0f00000000;
	setp.lt.f32 	%p54, %f67, 0f00000000;
	setp.lt.f32 	%p55, %f66, 0f00000000;
	setp.lt.f32 	%p56, %f65, 0f00000000;
	setp.lt.f32 	%p57, %f64, 0f00000000;
	setp.lt.f32 	%p58, %f63, 0f00000000;
	setp.lt.f32 	%p59, %f62, 0f00000000;
	setp.lt.f32 	%p60, %f61, 0f00000000;
	setp.lt.f32 	%p61, %f60, 0f00000000;
	setp.lt.f32 	%p62, %f59, 0f00000000;
	setp.lt.f32 	%p63, %f58, 0f00000000;
	setp.lt.f32 	%p64, %f57, 0f00000000;
	setp.lt.f32 	%p65, %f56, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f72, 0f00000000, %f56, %p65;
	selp.f32 	%f73, 0f00000000, %f57, %p64;
	selp.f32 	%f74, 0f00000000, %f58, %p63;
	selp.f32 	%f75, 0f00000000, %f59, %p62;
	selp.f32 	%f76, 0f00000000, %f60, %p61;
	selp.f32 	%f77, 0f00000000, %f61, %p60;
	selp.f32 	%f78, 0f00000000, %f62, %p59;
	selp.f32 	%f79, 0f00000000, %f63, %p58;
	selp.f32 	%f80, 0f00000000, %f64, %p57;
	selp.f32 	%f81, 0f00000000, %f65, %p56;
	selp.f32 	%f82, 0f00000000, %f66, %p55;
	selp.f32 	%f83, 0f00000000, %f67, %p54;
	selp.f32 	%f84, 0f00000000, %f68, %p53;
	selp.f32 	%f85, 0f00000000, %f69, %p52;
	selp.f32 	%f86, 0f00000000, %f70, %p51;
	selp.f32 	%f87, 0f00000000, %f71, %p50;
$L__tmp2:
	.loc	1 51 21                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:51:21
	setp.le.f32 	%p66, %f87, 0f00000000;
	selp.u16 	%rs17, 1, 0, %p66;
	setp.le.f32 	%p67, %f86, 0f00000000;
	selp.u16 	%rs18, -1, 0, %p67;
	shl.b16 	%rs19, %rs18, 1;
	or.b16  	%rs20, %rs17, %rs19;
	setp.le.f32 	%p68, %f85, 0f00000000;
	selp.u16 	%rs21, 1, 0, %p68;
	setp.le.f32 	%p69, %f84, 0f00000000;
	selp.u16 	%rs22, -1, 0, %p69;
	shl.b16 	%rs23, %rs22, 1;
	or.b16  	%rs24, %rs21, %rs23;
	setp.le.f32 	%p70, %f83, 0f00000000;
	selp.u16 	%rs25, 1, 0, %p70;
	setp.le.f32 	%p71, %f82, 0f00000000;
	selp.u16 	%rs26, -1, 0, %p71;
	shl.b16 	%rs27, %rs26, 1;
	or.b16  	%rs28, %rs25, %rs27;
	setp.le.f32 	%p72, %f81, 0f00000000;
	setp.le.f32 	%p73, %f80, 0f00000000;
	selp.u16 	%rs14, 1, 0, %p73;
	setp.le.f32 	%p74, %f79, 0f00000000;
	selp.u16 	%rs10, 1, 0, %p74;
	setp.le.f32 	%p75, %f78, 0f00000000;
	selp.u16 	%rs6, 1, 0, %p75;
	setp.le.f32 	%p76, %f77, 0f00000000;
	selp.u16 	%rs2, 1, 0, %p76;
	setp.le.f32 	%p77, %f76, 0f00000000;
	setp.le.f32 	%p78, %f75, 0f00000000;
	setp.le.f32 	%p79, %f74, 0f00000000;
	setp.le.f32 	%p80, %f73, 0f00000000;
	setp.le.f32 	%p81, %f72, 0f00000000;
	.loc	1 23 23                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:23:23
	shl.b32 	%r167, %r166, 6;
	.loc	1 52 30                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:52:30
	add.s32 	%r168, %r164, %r167;
	add.s32 	%r169, %r168, 4096;
	add.s32 	%r170, %r168, 8192;
	add.s32 	%r171, %r168, 12288;
	.loc	1 52 25                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:52:25
	mul.wide.s32 	%rd27, %r168, 4;
	add.s64 	%rd9, %rd19, %rd27;
	mul.wide.s32 	%rd28, %r169, 4;
	add.s64 	%rd10, %rd19, %rd28;
	mul.wide.s32 	%rd29, %r170, 4;
	add.s64 	%rd11, %rd19, %rd29;
	mul.wide.s32 	%rd30, %r171, 4;
	add.s64 	%rd12, %rd19, %rd30;
	.loc	1 52 45                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:52:45
	bar.sync 	0;
	and.b32  	%r172, %r162, 1020;
	shr.u32 	%r173, %r155, 2;
	add.s32 	%r174, %r159, %r173;
	shl.b32 	%r175, %r155, 2;
	add.s32 	%r46, %r174, %r175;
	mov.b32 	%r47, %f72;
	// begin inline asm
	@%p5 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r48, %r46, 4;
	mov.b32 	%r49, %f77;
	// begin inline asm
	@%p5 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	add.s32 	%r50, %r46, 8;
	mov.b32 	%r51, %f82;
	// begin inline asm
	@%p5 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	add.s32 	%r52, %r46, 12;
	mov.b32 	%r53, %f83;
	// begin inline asm
	@%p5 st.shared.b32 [ %r52 + 0 ], %r53;
	// end inline asm
	add.s32 	%r54, %r46, 16;
	mov.b32 	%r55, %f73;
	// begin inline asm
	@%p5 st.shared.b32 [ %r54 + 0 ], %r55;
	// end inline asm
	add.s32 	%r56, %r46, 20;
	mov.b32 	%r57, %f78;
	// begin inline asm
	@%p5 st.shared.b32 [ %r56 + 0 ], %r57;
	// end inline asm
	add.s32 	%r58, %r46, 24;
	mov.b32 	%r59, %f84;
	// begin inline asm
	@%p5 st.shared.b32 [ %r58 + 0 ], %r59;
	// end inline asm
	add.s32 	%r60, %r46, 28;
	mov.b32 	%r61, %f85;
	// begin inline asm
	@%p5 st.shared.b32 [ %r60 + 0 ], %r61;
	// end inline asm
	add.s32 	%r62, %r46, 32;
	mov.b32 	%r63, %f74;
	// begin inline asm
	@%p5 st.shared.b32 [ %r62 + 0 ], %r63;
	// end inline asm
	add.s32 	%r64, %r46, 36;
	mov.b32 	%r65, %f79;
	// begin inline asm
	@%p5 st.shared.b32 [ %r64 + 0 ], %r65;
	// end inline asm
	add.s32 	%r66, %r46, 40;
	mov.b32 	%r67, %f86;
	// begin inline asm
	@%p5 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	add.s32 	%r68, %r46, 44;
	mov.b32 	%r69, %f87;
	// begin inline asm
	@%p5 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	add.s32 	%r70, %r46, 48;
	mov.b32 	%r71, %f75;
	// begin inline asm
	@%p5 st.shared.b32 [ %r70 + 0 ], %r71;
	// end inline asm
	add.s32 	%r72, %r46, 52;
	mov.b32 	%r73, %f80;
	// begin inline asm
	@%p5 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	add.s32 	%r74, %r46, 56;
	mov.b32 	%r75, %f76;
	// begin inline asm
	@%p5 st.shared.b32 [ %r74 + 0 ], %r75;
	// end inline asm
	add.s32 	%r76, %r46, 60;
	mov.b32 	%r77, %f81;
	// begin inline asm
	@%p5 st.shared.b32 [ %r76 + 0 ], %r77;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r176, %r115, 252;
	add.s32 	%r177, %r159, %r176;
	shl.b32 	%r178, %r172, 2;
	add.s32 	%r179, %r177, %r178;
	ld.shared.u32 	%r78, [%r179];
	ld.shared.u32 	%r79, [%r179+4];
	ld.shared.u32 	%r80, [%r179+8];
	ld.shared.u32 	%r81, [%r179+12];
	or.b32  	%r180, %r172, 1024;
	shr.u32 	%r181, %r180, 2;
	and.b32  	%r182, %r181, 508;
	add.s32 	%r183, %r159, %r182;
	add.s32 	%r184, %r183, %r178;
	ld.shared.u32 	%r82, [%r184+4096];
	ld.shared.u32 	%r83, [%r184+4100];
	ld.shared.u32 	%r84, [%r184+4104];
	ld.shared.u32 	%r85, [%r184+4108];
	or.b32  	%r185, %r172, 2048;
	shr.u32 	%r186, %r185, 2;
	and.b32  	%r187, %r186, 764;
	add.s32 	%r188, %r159, %r187;
	add.s32 	%r189, %r188, %r178;
	ld.shared.u32 	%r86, [%r189+8192];
	ld.shared.u32 	%r87, [%r189+8196];
	ld.shared.u32 	%r88, [%r189+8200];
	ld.shared.u32 	%r89, [%r189+8204];
	or.b32  	%r190, %r172, 3072;
	shr.u32 	%r191, %r190, 2;
	and.b32  	%r192, %r191, 1020;
	add.s32 	%r193, %r159, %r192;
	add.s32 	%r194, %r193, %r178;
	ld.shared.u32 	%r90, [%r194+12288];
	ld.shared.u32 	%r91, [%r194+12292];
	ld.shared.u32 	%r92, [%r194+12296];
	ld.shared.u32 	%r93, [%r194+12300];
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd9 + 0 ], { %r78, %r79, %r80, %r81 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd10 + 0 ], { %r82, %r83, %r84, %r85 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd11 + 0 ], { %r86, %r87, %r88, %r89 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd12 + 0 ], { %r90, %r91, %r92, %r93 };
	// end inline asm
	.loc	1 53 25                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:53:25
	add.s64 	%rd13, %rd20, %rd21;
	.loc	1 53 57                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:53:57
	bar.sync 	0;
	selp.u16 	%rs1, 1, 0, %p81;
	selp.u16 	%rs3, 1, 0, %p71;
	selp.u16 	%rs5, 1, 0, %p80;
	selp.u16 	%rs7, 1, 0, %p69;
	selp.u16 	%rs9, 1, 0, %p79;
	selp.u16 	%rs11, 1, 0, %p67;
	selp.u16 	%rs13, 1, 0, %p78;
	selp.u16 	%rs15, 1, 0, %p77;
	add.s32 	%r94, %r159, %r118;
	// begin inline asm
	@%p5 st.shared.b8 [ %r94 + 0 ], %rs1;
	// end inline asm
	add.s32 	%r95, %r94, 272;
	// begin inline asm
	@%p5 st.shared.b8 [ %r95 + 0 ], %rs2;
	// end inline asm
	add.s32 	%r96, %r94, 544;
	// begin inline asm
	@%p5 st.shared.b8 [ %r96 + 0 ], %rs3;
	// end inline asm
	add.s32 	%r97, %r94, 816;
	and.b16  	%rs4, %rs28, 1;
	// begin inline asm
	@%p5 st.shared.b8 [ %r97 + 0 ], %rs4;
	// end inline asm
	add.s32 	%r98, %r94, 1088;
	// begin inline asm
	@%p5 st.shared.b8 [ %r98 + 0 ], %rs5;
	// end inline asm
	add.s32 	%r99, %r94, 1360;
	// begin inline asm
	@%p5 st.shared.b8 [ %r99 + 0 ], %rs6;
	// end inline asm
	add.s32 	%r100, %r94, 1632;
	// begin inline asm
	@%p5 st.shared.b8 [ %r100 + 0 ], %rs7;
	// end inline asm
	add.s32 	%r101, %r94, 1904;
	and.b16  	%rs8, %rs24, 1;
	// begin inline asm
	@%p5 st.shared.b8 [ %r101 + 0 ], %rs8;
	// end inline asm
	add.s32 	%r102, %r94, 2176;
	// begin inline asm
	@%p5 st.shared.b8 [ %r102 + 0 ], %rs9;
	// end inline asm
	add.s32 	%r103, %r94, 2448;
	// begin inline asm
	@%p5 st.shared.b8 [ %r103 + 0 ], %rs10;
	// end inline asm
	add.s32 	%r104, %r94, 2720;
	// begin inline asm
	@%p5 st.shared.b8 [ %r104 + 0 ], %rs11;
	// end inline asm
	add.s32 	%r105, %r94, 2992;
	and.b16  	%rs12, %rs20, 1;
	// begin inline asm
	@%p5 st.shared.b8 [ %r105 + 0 ], %rs12;
	// end inline asm
	add.s32 	%r106, %r94, 3264;
	// begin inline asm
	@%p5 st.shared.b8 [ %r106 + 0 ], %rs13;
	// end inline asm
	add.s32 	%r107, %r94, 3536;
	// begin inline asm
	@%p5 st.shared.b8 [ %r107 + 0 ], %rs14;
	// end inline asm
	add.s32 	%r108, %r94, 3808;
	// begin inline asm
	@%p5 st.shared.b8 [ %r108 + 0 ], %rs15;
	// end inline asm
	add.s32 	%r109, %r94, 4080;
	.loc	1 51 21                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:51:21
	selp.u16 	%rs16, 1, 0, %p72;
	.loc	1 53 57                         // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:53:57
	// begin inline asm
	@%p5 st.shared.b8 [ %r109 + 0 ], %rs16;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r195, %r159, %r157;
	ld.shared.v4.u32 	{%r196, %r197, %r198, %r199}, [%r195];
	bfe.u32 	%r204, %r196, 0, 8;
	bfe.u32 	%r205, %r196, 16, 8;
	cvt.u16.u32 	%rs29, %r205;
	bfe.u32 	%r206, %r196, 8, 8;
	cvt.u16.u32 	%rs30, %r206;
	mov.b32 	%r207, {%rs30, %rs29};
	and.b32  	%r208, %r207, 65537;
	bfe.u32 	%r209, %r197, 0, 8;
	bfe.u32 	%r210, %r197, 16, 8;
	cvt.u16.u32 	%rs31, %r210;
	bfe.u32 	%r211, %r197, 8, 8;
	cvt.u16.u32 	%rs32, %r211;
	mov.b32 	%r212, {%rs32, %rs31};
	and.b32  	%r213, %r212, 65537;
	bfe.u32 	%r214, %r198, 0, 8;
	bfe.u32 	%r215, %r198, 16, 8;
	cvt.u16.u32 	%rs33, %r215;
	bfe.u32 	%r216, %r198, 8, 8;
	cvt.u16.u32 	%rs34, %r216;
	mov.b32 	%r217, {%rs34, %rs33};
	and.b32  	%r218, %r217, 65537;
	bfe.u32 	%r219, %r199, 0, 8;
	bfe.u32 	%r220, %r199, 16, 8;
	cvt.u16.u32 	%rs35, %r220;
	bfe.u32 	%r221, %r199, 8, 8;
	cvt.u16.u32 	%rs36, %r221;
	mov.b32 	%r222, {%rs36, %rs35};
	and.b32  	%r223, %r222, 65537;
	mov.b32 	{%rs37, %rs38}, %r208;
	cvt.u32.u16 	%r224, %rs38;
	bfe.u32 	%r225, %r196, 24, 1;
	prmt.b32 	%r226, %r224, %r225, 0x3340U;
	cvt.u32.u16 	%r227, %rs37;
	and.b32  	%r228, %r204, 1;
	prmt.b32 	%r229, %r228, %r227, 0x3340U;
	prmt.b32 	%r230, %r229, %r226, 0x5410U;
	mov.b32 	{%rs39, %rs40}, %r213;
	cvt.u32.u16 	%r231, %rs40;
	bfe.u32 	%r232, %r197, 24, 1;
	prmt.b32 	%r233, %r231, %r232, 0x3340U;
	cvt.u32.u16 	%r234, %rs39;
	and.b32  	%r235, %r209, 1;
	prmt.b32 	%r236, %r235, %r234, 0x3340U;
	prmt.b32 	%r237, %r236, %r233, 0x5410U;
	mov.b32 	{%rs41, %rs42}, %r218;
	cvt.u32.u16 	%r238, %rs42;
	bfe.u32 	%r239, %r198, 24, 1;
	prmt.b32 	%r240, %r238, %r239, 0x3340U;
	cvt.u32.u16 	%r241, %rs41;
	and.b32  	%r242, %r214, 1;
	prmt.b32 	%r243, %r242, %r241, 0x3340U;
	prmt.b32 	%r244, %r243, %r240, 0x5410U;
	mov.b32 	{%rs43, %rs44}, %r223;
	cvt.u32.u16 	%r245, %rs44;
	bfe.u32 	%r246, %r199, 24, 1;
	prmt.b32 	%r247, %r245, %r246, 0x3340U;
	cvt.u32.u16 	%r248, %rs43;
	and.b32  	%r249, %r219, 1;
	prmt.b32 	%r250, %r249, %r248, 0x3340U;
	prmt.b32 	%r251, %r250, %r247, 0x5410U;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd13 + 0 ], { %r230, %r237, %r244, %r251 };
	// end inline asm
	.loc	1 53 4                          // cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py:53:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ag/cagsxs6imdawwm7iekvfxo73bbnjj2denzrqa3pm4wjve2hr6oql.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 224                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 97
.b8 103
.b8 115
.b8 120
.b8 115
.b8 54
.b8 105
.b8 109
.b8 100
.b8 97
.b8 119
.b8 119
.b8 109
.b8 55
.b8 105
.b8 101
.b8 107
.b8 118
.b8 102
.b8 120
.b8 111
.b8 55
.b8 51
.b8 98
.b8 98
.b8 110
.b8 106
.b8 106
.b8 50
.b8 100
.b8 101
.b8 110
.b8 122
.b8 114
.b8 113
.b8 97
.b8 51
.b8 112
.b8 109
.b8 52
.b8 119
.b8 106
.b8 118
.b8 101
.b8 50
.b8 104
.b8 114
.b8 54
.b8 111
.b8 113
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 97
.b8 103
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x52 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb5:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xca:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
