; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_exp_lift_fresh_log_mul_pow_sub_sum_1(i64 %0, double %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #1, !dbg !10
  %8 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #1, !dbg !11
  %9 = bitcast i32 %8 to float, !dbg !11
  %10 = getelementptr i8, ptr addrspace(1) %2, i64 4, !dbg !12
  %11 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %10, i1 true) #1, !dbg !13
  %12 = getelementptr i8, ptr addrspace(1) %3, i64 4, !dbg !14
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 true) #1, !dbg !15
  %14 = bitcast i32 %13 to float, !dbg !15
  %15 = getelementptr i8, ptr addrspace(1) %2, i64 8, !dbg !16
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 true) #1, !dbg !17
  %17 = getelementptr i8, ptr addrspace(1) %3, i64 8, !dbg !18
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 true) #1, !dbg !19
  %19 = bitcast i32 %18 to float, !dbg !19
  %20 = getelementptr i8, ptr addrspace(1) %2, i64 12, !dbg !20
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !21
  %22 = getelementptr i8, ptr addrspace(1) %3, i64 12, !dbg !22
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 true) #1, !dbg !23
  %24 = bitcast i32 %23 to float, !dbg !23
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %4, i1 true) #1, !dbg !24
  %26 = getelementptr i8, ptr addrspace(1) %4, i64 4, !dbg !25
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #1, !dbg !26
  %28 = getelementptr i8, ptr addrspace(1) %4, i64 8, !dbg !27
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #1, !dbg !28
  %30 = getelementptr i8, ptr addrspace(1) %4, i64 12, !dbg !29
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #1, !dbg !30
  %32 = sitofp i64 %0 to double, !dbg !31
  %33 = fmul double %32, -5.000000e-01, !dbg !32
  %34 = fmul double %33, 0x3FFD67F1C864BEB4, !dbg !33
  %35 = fptrunc double %34 to float, !dbg !34
  %36 = fptrunc double %1 to float, !dbg !35
  %37 = fmul float %9, 3.000000e+00, !dbg !36
  %38 = fmul float %37, 0x3FF7154760000000, !dbg !37
  %39 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %38) #1, !dbg !37
  %40 = fmul float %14, 3.000000e+00, !dbg !38
  %41 = fmul float %40, 0x3FF7154760000000, !dbg !39
  %42 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %41) #1, !dbg !39
  %43 = fmul float %19, 3.000000e+00, !dbg !40
  %44 = fmul float %43, 0x3FF7154760000000, !dbg !41
  %45 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %44) #1, !dbg !41
  %46 = fmul float %24, 3.000000e+00, !dbg !42
  %47 = fmul float %46, 0x3FF7154760000000, !dbg !43
  %48 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %47) #1, !dbg !43
  %49 = insertelement <2 x i32> poison, i32 %7, i64 0, !dbg !10
  %50 = insertelement <2 x i32> %49, i32 %25, i64 1, !dbg !10
  %51 = bitcast <2 x i32> %50 to <2 x float>, !dbg !10
  %52 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !13
  %53 = insertelement <2 x i32> %52, i32 %27, i64 1, !dbg !13
  %54 = bitcast <2 x i32> %53 to <2 x float>, !dbg !13
  %55 = insertelement <2 x i32> poison, i32 %16, i64 0, !dbg !17
  %56 = insertelement <2 x i32> %55, i32 %29, i64 1, !dbg !17
  %57 = bitcast <2 x i32> %56 to <2 x float>, !dbg !17
  %58 = insertelement <2 x i32> poison, i32 %21, i64 0, !dbg !21
  %59 = insertelement <2 x i32> %58, i32 %31, i64 1, !dbg !21
  %60 = bitcast <2 x i32> %59 to <2 x float>, !dbg !21
  %61 = insertelement <2 x float> %51, float %39, i64 0, !dbg !44
  %62 = fmul <2 x float> %61, %51, !dbg !44
  %63 = insertelement <2 x float> %54, float %42, i64 0, !dbg !45
  %64 = fmul <2 x float> %63, %54, !dbg !45
  %65 = fadd <2 x float> %62, %64, !dbg !46
  %66 = insertelement <2 x float> %57, float %45, i64 0, !dbg !47
  %67 = fmul <2 x float> %66, %57, !dbg !47
  %68 = fadd <2 x float> %65, %67, !dbg !48
  %69 = insertelement <2 x float> %60, float %48, i64 0, !dbg !49
  %70 = fmul <2 x float> %69, %60, !dbg !49
  %71 = fadd <2 x float> %68, %70, !dbg !50
  %72 = insertelement <2 x float> <float poison, float 5.000000e-01>, float %36, i64 0, !dbg !51
  %73 = fmul <2 x float> %71, %72, !dbg !51
  %74 = extractelement <2 x float> %73, i64 0, !dbg !52
  %75 = fsub float %35, %74, !dbg !52
  %76 = extractelement <2 x float> %73, i64 1, !dbg !53
  %77 = fsub float %75, %76, !dbg !53
  %78 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !54
  %79 = and i32 %78, 31, !dbg !54
  %80 = icmp eq i32 %79, 0, !dbg !54
  %81 = bitcast float %77 to i32, !dbg !54
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %81, ptr addrspace(1) %5, i1 %80) #1, !dbg !54
  ret void, !dbg !55
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "citaggqcgbsahzd5ayopju4kxemzevd7nkrcpkox4zsx3ivoldd2.py", directory: "inductor_cache/it")
!4 = !{ptr @triton_poi_fused_exp_lift_fresh_log_mul_pow_sub_sum_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_exp_lift_fresh_log_mul_pow_sub_sum_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_exp_lift_fresh_log_mul_pow_sub_sum_1", linkageName: "triton_poi_fused_exp_lift_fresh_log_mul_pow_sub_sum_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 19, scope: !7)
!11 = !DILocation(line: 28, column: 20, scope: !7)
!12 = !DILocation(line: 30, column: 31, scope: !7)
!13 = !DILocation(line: 30, column: 20, scope: !7)
!14 = !DILocation(line: 32, column: 31, scope: !7)
!15 = !DILocation(line: 32, column: 20, scope: !7)
!16 = !DILocation(line: 34, column: 31, scope: !7)
!17 = !DILocation(line: 34, column: 20, scope: !7)
!18 = !DILocation(line: 36, column: 31, scope: !7)
!19 = !DILocation(line: 36, column: 20, scope: !7)
!20 = !DILocation(line: 38, column: 31, scope: !7)
!21 = !DILocation(line: 38, column: 20, scope: !7)
!22 = !DILocation(line: 40, column: 31, scope: !7)
!23 = !DILocation(line: 40, column: 20, scope: !7)
!24 = !DILocation(line: 42, column: 20, scope: !7)
!25 = !DILocation(line: 44, column: 31, scope: !7)
!26 = !DILocation(line: 44, column: 20, scope: !7)
!27 = !DILocation(line: 46, column: 31, scope: !7)
!28 = !DILocation(line: 46, column: 20, scope: !7)
!29 = !DILocation(line: 48, column: 31, scope: !7)
!30 = !DILocation(line: 48, column: 20, scope: !7)
!31 = !DILocation(line: 50, column: 19, scope: !7)
!32 = !DILocation(line: 52, column: 18, scope: !7)
!33 = !DILocation(line: 54, column: 18, scope: !7)
!34 = !DILocation(line: 55, column: 19, scope: !7)
!35 = !DILocation(line: 56, column: 19, scope: !7)
!36 = !DILocation(line: 58, column: 20, scope: !7)
!37 = !DILocation(line: 59, column: 24, scope: !7)
!38 = !DILocation(line: 61, column: 20, scope: !7)
!39 = !DILocation(line: 62, column: 24, scope: !7)
!40 = !DILocation(line: 65, column: 20, scope: !7)
!41 = !DILocation(line: 66, column: 24, scope: !7)
!42 = !DILocation(line: 69, column: 20, scope: !7)
!43 = !DILocation(line: 70, column: 24, scope: !7)
!44 = !DILocation(line: 60, column: 20, scope: !7)
!45 = !DILocation(line: 63, column: 20, scope: !7)
!46 = !DILocation(line: 64, column: 20, scope: !7)
!47 = !DILocation(line: 67, column: 20, scope: !7)
!48 = !DILocation(line: 68, column: 20, scope: !7)
!49 = !DILocation(line: 71, column: 20, scope: !7)
!50 = !DILocation(line: 72, column: 20, scope: !7)
!51 = !DILocation(line: 73, column: 19, scope: !7)
!52 = !DILocation(line: 74, column: 19, scope: !7)
!53 = !DILocation(line: 84, column: 20, scope: !7)
!54 = !DILocation(line: 85, column: 65, scope: !7)
!55 = !DILocation(line: 85, column: 4, scope: !7)
