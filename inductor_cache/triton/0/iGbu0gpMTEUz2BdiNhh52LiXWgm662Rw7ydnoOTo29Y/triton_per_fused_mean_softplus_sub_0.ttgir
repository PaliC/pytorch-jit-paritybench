#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#loc = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":19:0)
#loc1 = loc(unknown)
#loc13 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":40:58)
#loc23 = loc(callsite(#loc1 at #loc13))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_mean_softplus_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant dense<2.000000e+01> : tensor<256xf32, #blocked> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc6)
    %7 = arith.subf %3, %6 : tensor<256xf32, #blocked> loc(#loc7)
    %8 = arith.cmpf ogt, %7, %cst_1 : tensor<256xf32, #blocked> loc(#loc8)
    %9 = math.exp %7 : tensor<256xf32, #blocked> loc(#loc9)
    %10 = tt.extern_elementwise %9 {libname = "", libpath = "", pure = true, symbol = "__nv_log1pf"} : (tensor<256xf32, #blocked>) -> tensor<256xf32, #blocked> loc(#loc10)
    %11 = arith.select %8, %7, %10 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc11)
    %12 = "tt.reduce"(%11) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc13)), %arg5: f32 loc(callsite(#loc1 at #loc13))):
      %18 = arith.addf %arg4, %arg5 : f32 loc(#loc26)
      tt.reduce.return %18 : f32 loc(#loc22)
    }) : (tensor<256xf32, #blocked>) -> f32 loc(#loc22)
    %13 = arith.addf %12, %cst_0 : f32 loc(#loc25)
    %14 = arith.divf %13, %cst : f32 loc(#loc17)
    %15 = tt.splat %14 : f32 -> tensor<1xf32, #blocked1> loc(#loc17)
    gpu.barrier loc(#loc18)
    %16 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc19)
    %17 = tt.splat %16 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc19)
    tt.store %17, %15 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc20)
    tt.return loc(#loc21)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":27:26)
#loc3 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":31:30)
#loc4 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":31:35)
#loc5 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":32:30)
#loc6 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":32:35)
#loc7 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":33:18)
#loc8 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":35:18)
#loc9 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":36:23)
#loc10 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":37:27)
#loc11 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":38:32)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc16 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":40:45)
#loc17 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":42:20)
#loc18 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":43:4)
#loc19 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":44:28)
#loc20 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":44:63)
#loc21 = loc("inductor_cache/3p/c3pfbjp2crzl3q4xl32hvjqeqg5ogufuglz5gdcpjymo2l63gda7.py":44:4)
#loc22 = loc(callsite(#loc12 at #loc13))
#loc24 = loc(callsite(#loc14 at #loc12))
#loc25 = loc(callsite(#loc15 at #loc16))
#loc26 = loc(callsite(#loc24 at #loc13))
