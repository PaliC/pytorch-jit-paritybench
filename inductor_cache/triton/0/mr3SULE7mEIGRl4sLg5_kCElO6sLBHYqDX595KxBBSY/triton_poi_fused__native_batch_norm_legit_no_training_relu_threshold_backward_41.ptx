//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<39>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<95>;
	.reg .f32 	%f<55>;
	.reg .b64 	%rd<28>;
	.loc	1 19 0                          // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_1];
$L__tmp0:
	.loc	1 22 28                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:22:33
	shl.b32 	%r49, %r1, 3;
	ld.param.u64 	%rd6, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_2];
	ld.param.u64 	%rd7, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_3];
	.loc	1 23 44                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:23:44
	mov.u32 	%r50, %tid.x;
	shl.b32 	%r51, %r50, 1;
	ld.param.u64 	%rd8, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_4];
	and.b32  	%r52, %r51, 6;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_5];
	.loc	1 23 23                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:23:23
	or.b32  	%r53, %r49, %r52;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_41_param_6];
	.loc	1 24 21                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:24:21
	setp.lt.s32 	%p1, %r53, 8;
	.loc	1 25 28                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:25:33
	shl.b32 	%r54, %r2, 7;
	.loc	1 26 44                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:26:44
	bfe.u32 	%r55, %r50, 2, 5;
	.loc	1 26 23                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:26:23
	or.b32  	%r56, %r54, %r55;
	shl.b32 	%r57, %r56, 1;
	.loc	1 32 47                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:32:47
	shl.b32 	%r58, %r53, 12;
	.loc	1 32 42                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:32:42
	add.s32 	%r59, %r57, %r58;
	or.b32  	%r60, %r59, 64;
	or.b32  	%r61, %r59, 128;
	or.b32  	%r62, %r59, 192;
	.loc	1 32 30                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:32:30
	cvt.s64.s32 	%rd18, %r59;
	mul.wide.s32 	%rd19, %r59, 4;
	add.s64 	%rd1, %rd15, %rd19;
	cvt.s64.s32 	%rd20, %r60;
	mul.wide.s32 	%rd21, %r60, 4;
	add.s64 	%rd2, %rd15, %rd21;
	cvt.s64.s32 	%rd22, %r61;
	mul.wide.s32 	%rd23, %r61, 4;
	add.s64 	%rd3, %rd15, %rd23;
	cvt.s64.s32 	%rd24, %r62;
	mul.wide.s32 	%rd25, %r62, 4;
	add.s64 	%rd4, %rd15, %rd25;
	.loc	1 32 52                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:32:52
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r7, %r8 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 35                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:33:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 35                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:34:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r13, %r14 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r13;
	mov.b32 	%f2, %r14;
	.loc	1 35 36                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:35:36
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r15, %r16 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 36                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:36:36
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r17, %r18 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 39 18                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:39:18
	add.f32 	%f3, %f1, 0f3727C5AC;
	add.f32 	%f4, %f2, 0f3727C5AC;
	.loc	1 40 26                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:40:26
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 26 44                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:26:44
	shl.b32 	%r63, %r50, 2;
	and.b32  	%r64, %r63, 124;
	.loc	1 26 23                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:26:23
	or.b32  	%r65, %r54, %r64;
	.loc	1 23 44                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:23:44
	bfe.u32 	%r66, %r50, 5, 2;
	.loc	1 23 23                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:23:23
	or.b32  	%r67, %r66, %r49;
	or.b32  	%r68, %r67, 4;
	.loc	1 24 21                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:24:21
	setp.lt.s32 	%p18, %r68, 8;
	setp.lt.s32 	%p17, %r67, 8;
	.loc	1 42 18                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:42:18
	mov.b32 	%r21, %f5;
	mov.b32 	%r20, 1065353216;
	// begin inline asm
	div.full.f32 %r19, %r20, %r21;
	// end inline asm
	mov.b32 	%f7, %r19;
	mov.b32 	%r24, %f6;
	// begin inline asm
	div.full.f32 %r22, %r20, %r24;
	// end inline asm
	mov.b32 	%f8, %r22;
	.loc	1 52 35                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:52:35
	shl.b32 	%r69, %r67, 12;
	shl.b32 	%r70, %r68, 12;
	.loc	1 52 30                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:52:30
	add.s32 	%r71, %r65, %r69;
	add.s32 	%r72, %r65, %r70;
	.loc	1 52 25                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:52:25
	mul.wide.s32 	%rd26, %r71, 4;
	add.s64 	%rd9, %rd16, %rd26;
	mul.wide.s32 	%rd27, %r72, 4;
	add.s64 	%rd10, %rd16, %rd27;
	.loc	1 52 47                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:52:47
	shl.b32 	%r73, %r50, 8;
	and.b32  	%r74, %r73, 768;
	or.b32  	%r75, %r74, %r55;
	and.b32  	%r76, %r63, 508;
	shr.u32 	%r77, %r74, 7;
	add.s32 	%r78, %r77, %r75;
	shl.b32 	%r79, %r78, 2;
	mov.u32 	%r80, global_smem;
	add.s32 	%r25, %r80, %r79;
	or.b32  	%r81, %r74, 128;
	shr.u32 	%r82, %r81, 7;
	add.s32 	%r83, %r82, %r75;
	shl.b32 	%r84, %r83, 2;
	add.s32 	%r85, %r80, %r84;
	add.s32 	%r27, %r85, 512;
	add.s32 	%r29, %r25, 128;
	add.s32 	%r31, %r85, 640;
	add.s32 	%r33, %r25, 256;
	add.s32 	%r35, %r85, 768;
	add.s32 	%r37, %r25, 384;
	add.s32 	%r39, %r85, 896;
	bfe.u32 	%r86, %r63, 7, 2;
	or.b32  	%r87, %r86, %r76;
	shl.b32 	%r88, %r87, 2;
	add.s32 	%r89, %r80, %r88;
	or.b32  	%r90, %r76, 512;
	shr.u32 	%r91, %r90, 7;
	add.s32 	%r92, %r91, %r76;
	shl.b32 	%r93, %r92, 2;
	add.s32 	%r94, %r80, %r93;
	.loc	1 53 25                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:53:25
	add.s64 	%rd11, %rd17, %rd18;
	add.s64 	%rd12, %rd17, %rd20;
	add.s64 	%rd13, %rd17, %rd22;
	add.s64 	%rd14, %rd17, %rd24;
	.loc	1 33 35                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:33:35
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	.loc	1 32 52                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:32:52
	mov.b32 	%f11, %r3;
	mov.b32 	%f12, %r4;
	.loc	1 37 18                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:37:18
	sub.f32 	%f13, %f12, %f10;
	sub.f32 	%f14, %f11, %f9;
	.loc	1 36 36                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:36:36
	mov.b32 	%f15, %r17;
	mov.b32 	%f16, %r18;
	.loc	1 35 36                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:35:36
	mov.b32 	%f17, %r15;
	mov.b32 	%f18, %r16;
	.loc	1 45 19                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:45:19
	mul.f32 	%f19, %f14, %f7;
	mul.f32 	%f20, %f13, %f8;
	.loc	1 47 20                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:47:20
	fma.rn.f32 	%f21, %f20, %f18, %f16;
	fma.rn.f32 	%f22, %f19, %f17, %f15;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p23, %f22, 0f00000000;
	setp.lt.f32 	%p24, %f21, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f23, 0f00000000, %f21, %p24;
	mov.b32 	%r28, %f23;
	selp.f32 	%f24, 0f00000000, %f22, %p23;
$L__tmp2:
	.loc	1 51 21                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:51:21
	setp.le.f32 	%p25, %f23, 0f00000000;
	setp.le.f32 	%p26, %f24, 0f00000000;
$L__tmp3:
	.loc	2 121 29                        // triton_helpers.py:121:29
	mov.b32 	%r26, %f24;
	mov.pred 	%p9, -1;
$L__tmp4:
	.loc	1 52 47                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:52:47
	// begin inline asm
	@%p9 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	// begin inline asm
	@%p9 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	.loc	1 32 52                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:32:52
	mov.b32 	%f25, %r5;
	mov.b32 	%f26, %r6;
	.loc	1 37 18                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:37:18
	sub.f32 	%f27, %f26, %f10;
	sub.f32 	%f28, %f25, %f9;
	.loc	1 45 19                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:45:19
	mul.f32 	%f29, %f28, %f7;
	mul.f32 	%f30, %f27, %f8;
	.loc	1 47 20                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:47:20
	fma.rn.f32 	%f31, %f30, %f18, %f16;
	fma.rn.f32 	%f32, %f29, %f17, %f15;
$L__tmp5:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p27, %f32, 0f00000000;
	setp.lt.f32 	%p28, %f31, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f33, 0f00000000, %f31, %p28;
	mov.b32 	%r32, %f33;
	selp.f32 	%f34, 0f00000000, %f32, %p27;
$L__tmp6:
	.loc	1 51 21                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:51:21
	setp.le.f32 	%p29, %f33, 0f00000000;
	setp.le.f32 	%p30, %f34, 0f00000000;
$L__tmp7:
	.loc	2 121 29                        // triton_helpers.py:121:29
	mov.b32 	%r30, %f34;
$L__tmp8:
	.loc	1 52 47                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:52:47
	// begin inline asm
	@%p9 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	// begin inline asm
	@%p9 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	.loc	1 32 52                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:32:52
	mov.b32 	%f35, %r7;
	mov.b32 	%f36, %r8;
	.loc	1 37 18                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:37:18
	sub.f32 	%f37, %f36, %f10;
	sub.f32 	%f38, %f35, %f9;
	.loc	1 45 19                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:45:19
	mul.f32 	%f39, %f38, %f7;
	mul.f32 	%f40, %f37, %f8;
	.loc	1 47 20                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:47:20
	fma.rn.f32 	%f41, %f40, %f18, %f16;
	fma.rn.f32 	%f42, %f39, %f17, %f15;
$L__tmp9:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p31, %f42, 0f00000000;
	setp.lt.f32 	%p32, %f41, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f43, 0f00000000, %f41, %p32;
	mov.b32 	%r36, %f43;
	selp.f32 	%f44, 0f00000000, %f42, %p31;
$L__tmp10:
	.loc	1 51 21                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:51:21
	setp.le.f32 	%p33, %f43, 0f00000000;
	setp.le.f32 	%p34, %f44, 0f00000000;
$L__tmp11:
	.loc	2 121 29                        // triton_helpers.py:121:29
	mov.b32 	%r34, %f44;
$L__tmp12:
	.loc	1 52 47                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:52:47
	// begin inline asm
	@%p9 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	// begin inline asm
	@%p9 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	.loc	1 32 52                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:32:52
	mov.b32 	%f45, %r9;
	mov.b32 	%f46, %r10;
	.loc	1 37 18                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:37:18
	sub.f32 	%f47, %f46, %f10;
	sub.f32 	%f48, %f45, %f9;
	.loc	1 45 19                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:45:19
	mul.f32 	%f49, %f48, %f7;
	mul.f32 	%f50, %f47, %f8;
	.loc	1 47 20                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:47:20
	fma.rn.f32 	%f51, %f50, %f18, %f16;
	fma.rn.f32 	%f52, %f49, %f17, %f15;
$L__tmp13:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p35, %f52, 0f00000000;
	setp.lt.f32 	%p36, %f51, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f53, 0f00000000, %f51, %p36;
	mov.b32 	%r40, %f53;
	selp.f32 	%f54, 0f00000000, %f52, %p35;
$L__tmp14:
	.loc	1 51 21                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:51:21
	setp.le.f32 	%p37, %f53, 0f00000000;
	setp.le.f32 	%p38, %f54, 0f00000000;
$L__tmp15:
	.loc	2 121 29                        // triton_helpers.py:121:29
	mov.b32 	%r38, %f54;
$L__tmp16:
	.loc	1 52 47                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:52:47
	// begin inline asm
	@%p9 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	// begin inline asm
	@%p9 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r41, [%r89];
	ld.shared.u32 	%r42, [%r89+4];
	ld.shared.u32 	%r43, [%r89+8];
	ld.shared.u32 	%r44, [%r89+12];
	ld.shared.u32 	%r45, [%r94+2048];
	ld.shared.u32 	%r46, [%r94+2052];
	ld.shared.u32 	%r47, [%r94+2056];
	ld.shared.u32 	%r48, [%r94+2060];
	// begin inline asm
	@%p17 st.global.v4.b32 [ %rd9 + 0 ], { %r41, %r42, %r43, %r44 };
	// end inline asm
	// begin inline asm
	@%p18 st.global.v4.b32 [ %rd10 + 0 ], { %r45, %r46, %r47, %r48 };
	// end inline asm
	.loc	1 53 54                         // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:53:54
	selp.u16 	%rs5, 1, 0, %p26;
	selp.u16 	%rs6, 1, 0, %p25;
	shl.b16 	%rs7, %rs6, 8;
	or.b16  	%rs1, %rs5, %rs7;
	// begin inline asm
	@%p1 st.global.b16 [ %rd11 + 0 ], { %rs1 };
	// end inline asm
	selp.u16 	%rs8, 1, 0, %p30;
	selp.u16 	%rs9, 1, 0, %p29;
	shl.b16 	%rs10, %rs9, 8;
	or.b16  	%rs2, %rs8, %rs10;
	// begin inline asm
	@%p1 st.global.b16 [ %rd12 + 0 ], { %rs2 };
	// end inline asm
	selp.u16 	%rs11, 1, 0, %p34;
	selp.u16 	%rs12, 1, 0, %p33;
	shl.b16 	%rs13, %rs12, 8;
	or.b16  	%rs3, %rs11, %rs13;
	// begin inline asm
	@%p1 st.global.b16 [ %rd13 + 0 ], { %rs3 };
	// end inline asm
	selp.u16 	%rs14, 1, 0, %p38;
	selp.u16 	%rs15, 1, 0, %p37;
	shl.b16 	%rs16, %rs15, 8;
	or.b16  	%rs4, %rs14, %rs16;
	// begin inline asm
	@%p1 st.global.b16 [ %rd14 + 0 ], { %rs4 };
	// end inline asm
	.loc	1 53 4                          // cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py:53:4
	ret;
$L__tmp17:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/m2/cm2bzjaawz4kie6xaips5j6hqukrgmbf37w3n7lkja33zonu4o42.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 225                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xda DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 50
.b8 98
.b8 122
.b8 106
.b8 97
.b8 97
.b8 119
.b8 122
.b8 52
.b8 107
.b8 105
.b8 101
.b8 54
.b8 120
.b8 97
.b8 105
.b8 112
.b8 115
.b8 53
.b8 106
.b8 54
.b8 104
.b8 113
.b8 117
.b8 107
.b8 114
.b8 103
.b8 109
.b8 98
.b8 102
.b8 51
.b8 55
.b8 119
.b8 51
.b8 110
.b8 55
.b8 108
.b8 107
.b8 106
.b8 97
.b8 51
.b8 51
.b8 122
.b8 111
.b8 110
.b8 117
.b8 52
.b8 111
.b8 52
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 50
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x53 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 52
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb6:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xcb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp16                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
