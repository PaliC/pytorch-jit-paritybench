; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_20(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 8448, !dbg !14
  %14 = sdiv i32 %12, 16, !dbg !15
  %15 = srem i32 %14, 132, !dbg !16
  %.frozen = freeze i32 %12, !dbg !17
  %16 = sdiv i32 %.frozen, 2112, !dbg !17
  %17 = icmp slt i32 %15, 96, !dbg !18
  %18 = icmp slt i32 %15, 48, !dbg !19
  %19 = mul i32 %16, 2112, !dbg !20
  %srem.decomposed = sub i32 %.frozen, %19, !dbg !20
  %20 = mul nsw i32 %16, 768, !dbg !21
  %21 = add nsw i32 %20, %srem.decomposed, !dbg !22
  %22 = sext i32 %21 to i64, !dbg !23
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !23
  %24 = and i1 %13, %18, !dbg !24
  %25 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %23, i1 %24, i32 0, i1 %24, i32 0, i1 %24) #1, !dbg !25
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !25
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !25
  %28 = bitcast i32 %26 to float, !dbg !25
  %29 = bitcast i32 %27 to float, !dbg !25
  %30 = fcmp ogt float %28, 0.000000e+00, !dbg !26
  %31 = fcmp ogt float %29, 0.000000e+00, !dbg !26
  %32 = fmul float %28, 0x3FC99999A0000000, !dbg !27
  %33 = fmul float %29, 0x3FC99999A0000000, !dbg !27
  %34 = select i1 %30, float %28, float %32, !dbg !28
  %35 = select i1 %31, float %29, float %33, !dbg !28
  %36 = add nsw i32 %15, -48, !dbg !29
  %37 = icmp ult i32 %36, 48, !dbg !29
  %38 = add nsw i32 %srem.decomposed, -768, !dbg !30
  %39 = add nsw i32 %38, %20, !dbg !31
  %40 = sext i32 %39 to i64, !dbg !32
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !32
  %42 = and i1 %13, %37, !dbg !33
  %43 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %41, i1 %42, i32 0, i1 %42, i32 0, i1 %42) #1, !dbg !34
  %44 = extractvalue { i32, i32 } %43, 0, !dbg !34
  %45 = extractvalue { i32, i32 } %43, 1, !dbg !34
  %46 = bitcast i32 %44 to float, !dbg !34
  %47 = bitcast i32 %45 to float, !dbg !34
  %48 = fcmp ogt float %46, 0.000000e+00, !dbg !35
  %49 = fcmp ogt float %47, 0.000000e+00, !dbg !35
  %50 = fmul float %46, 0x3FC99999A0000000, !dbg !36
  %51 = fmul float %47, 0x3FC99999A0000000, !dbg !36
  %52 = select i1 %48, float %46, float %50, !dbg !37
  %53 = select i1 %49, float %47, float %51, !dbg !37
  %54 = select i1 %37, float %52, float 0.000000e+00, !dbg !38
  %55 = select i1 %37, float %53, float 0.000000e+00, !dbg !38
  %56 = select i1 %18, float %34, float %54, !dbg !39
  %57 = select i1 %18, float %35, float %55, !dbg !39
  %58 = icmp slt i32 %15, 114, !dbg !40
  %59 = add nsw i32 %15, -96, !dbg !41
  %60 = icmp ult i32 %59, 18, !dbg !41
  %61 = mul nsw i32 %16, 288, !dbg !42
  %62 = add nsw i32 %srem.decomposed, -1536, !dbg !43
  %63 = add nsw i32 %62, %61, !dbg !44
  %64 = sext i32 %63 to i64, !dbg !45
  %65 = getelementptr float, ptr addrspace(1) %2, i64 %64, !dbg !45
  %66 = and i1 %13, %60, !dbg !46
  %67 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %65, i1 %66, i32 0, i1 %66, i32 0, i1 %66) #1, !dbg !47
  %68 = extractvalue { i32, i32 } %67, 0, !dbg !47
  %69 = extractvalue { i32, i32 } %67, 1, !dbg !47
  %70 = bitcast i32 %68 to float, !dbg !47
  %71 = bitcast i32 %69 to float, !dbg !47
  %72 = fcmp ogt float %70, 0.000000e+00, !dbg !48
  %73 = fcmp ogt float %71, 0.000000e+00, !dbg !48
  %74 = fmul float %70, 0x3FC99999A0000000, !dbg !49
  %75 = fmul float %71, 0x3FC99999A0000000, !dbg !49
  %76 = select i1 %72, float %70, float %74, !dbg !50
  %77 = select i1 %73, float %71, float %75, !dbg !50
  %78 = select i1 %60, float %76, float 0.000000e+00, !dbg !51
  %79 = select i1 %60, float %77, float 0.000000e+00, !dbg !51
  %80 = icmp sgt i32 %15, 113, !dbg !52
  %81 = add nsw i32 %srem.decomposed, -1824, !dbg !53
  %82 = add nsw i32 %81, %61, !dbg !54
  %83 = sext i32 %82 to i64, !dbg !55
  %84 = getelementptr float, ptr addrspace(1) %3, i64 %83, !dbg !55
  %85 = and i1 %13, %80, !dbg !56
  %86 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %84, i1 %85, i32 0, i1 %85, i32 0, i1 %85) #1, !dbg !57
  %87 = extractvalue { i32, i32 } %86, 0, !dbg !57
  %88 = extractvalue { i32, i32 } %86, 1, !dbg !57
  %89 = bitcast i32 %87 to float, !dbg !57
  %90 = bitcast i32 %88 to float, !dbg !57
  %91 = fcmp ogt float %89, 0.000000e+00, !dbg !58
  %92 = fcmp ogt float %90, 0.000000e+00, !dbg !58
  %93 = fmul float %89, 0x3FC99999A0000000, !dbg !59
  %94 = fmul float %90, 0x3FC99999A0000000, !dbg !59
  %95 = select i1 %91, float %89, float %93, !dbg !60
  %96 = select i1 %92, float %90, float %94, !dbg !60
  %97 = select i1 %58, float %78, float %95, !dbg !61
  %98 = select i1 %58, float %79, float %96, !dbg !61
  %99 = select i1 %17, float %56, float %97, !dbg !62
  %100 = select i1 %17, float %57, float %98, !dbg !62
  %101 = sext i32 %12 to i64, !dbg !63
  %102 = getelementptr float, ptr addrspace(1) %4, i64 %101, !dbg !63
  %103 = bitcast float %99 to i32, !dbg !64
  %104 = bitcast float %100 to i32, !dbg !64
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %103, i32 %104, ptr addrspace(1) %102, i1 %13) #1, !dbg !64
  ret void, !dbg !65
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6tmfrahqa5qgqdhs7qdtz6hqmanetjaq7bucx3clpoa7frj65bq.py", directory: "inductor_cache/6t")
!4 = !{ptr @triton_poi_fused_cat_20, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_20, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_20", linkageName: "triton_poi_fused_cat_20", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 32, column: 18, scope: !7)
!19 = !DILocation(line: 37, column: 18, scope: !7)
!20 = !DILocation(line: 39, column: 36, scope: !7)
!21 = !DILocation(line: 39, column: 50, scope: !7)
!22 = !DILocation(line: 39, column: 46, scope: !7)
!23 = !DILocation(line: 39, column: 31, scope: !7)
!24 = !DILocation(line: 39, column: 63, scope: !7)
!25 = !DILocation(line: 39, column: 55, scope: !7)
!26 = !DILocation(line: 41, column: 20, scope: !7)
!27 = !DILocation(line: 43, column: 20, scope: !7)
!28 = !DILocation(line: 44, column: 35, scope: !7)
!29 = !DILocation(line: 50, column: 20, scope: !7)
!30 = !DILocation(line: 51, column: 36, scope: !7)
!31 = !DILocation(line: 51, column: 56, scope: !7)
!32 = !DILocation(line: 51, column: 31, scope: !7)
!33 = !DILocation(line: 51, column: 73, scope: !7)
!34 = !DILocation(line: 51, column: 65, scope: !7)
!35 = !DILocation(line: 53, column: 20, scope: !7)
!36 = !DILocation(line: 55, column: 20, scope: !7)
!37 = !DILocation(line: 56, column: 35, scope: !7)
!38 = !DILocation(line: 58, column: 35, scope: !7)
!39 = !DILocation(line: 59, column: 34, scope: !7)
!40 = !DILocation(line: 69, column: 20, scope: !7)
!41 = !DILocation(line: 70, column: 20, scope: !7)
!42 = !DILocation(line: 71, column: 58, scope: !7)
!43 = !DILocation(line: 71, column: 36, scope: !7)
!44 = !DILocation(line: 71, column: 54, scope: !7)
!45 = !DILocation(line: 71, column: 31, scope: !7)
!46 = !DILocation(line: 71, column: 71, scope: !7)
!47 = !DILocation(line: 71, column: 63, scope: !7)
!48 = !DILocation(line: 73, column: 20, scope: !7)
!49 = !DILocation(line: 75, column: 20, scope: !7)
!50 = !DILocation(line: 76, column: 35, scope: !7)
!51 = !DILocation(line: 78, column: 35, scope: !7)
!52 = !DILocation(line: 79, column: 21, scope: !7)
!53 = !DILocation(line: 83, column: 36, scope: !7)
!54 = !DILocation(line: 83, column: 64, scope: !7)
!55 = !DILocation(line: 83, column: 31, scope: !7)
!56 = !DILocation(line: 83, column: 81, scope: !7)
!57 = !DILocation(line: 83, column: 73, scope: !7)
!58 = !DILocation(line: 85, column: 20, scope: !7)
!59 = !DILocation(line: 87, column: 20, scope: !7)
!60 = !DILocation(line: 88, column: 35, scope: !7)
!61 = !DILocation(line: 91, column: 35, scope: !7)
!62 = !DILocation(line: 0, scope: !7)
!63 = !DILocation(line: 95, column: 25, scope: !7)
!64 = !DILocation(line: 95, column: 37, scope: !7)
!65 = !DILocation(line: 95, column: 4, scope: !7)
