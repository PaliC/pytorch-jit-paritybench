#loc = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":37:24)
#loc26 = loc(callsite(#loc1 at #loc16))
module {
  tt.func public @triton_per_fused_convolution_mean_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":19:0)) attributes {noinline = false} {
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.remsi %0, %c4_i32 : i32 loc(#loc6)
    %6 = arith.muli %0, %c16_i32 : i32 loc(#loc7)
    %7 = tt.splat %6 : i32 -> tensor<1x16xi32> loc(#loc8)
    %8 = arith.addi %4, %7 : tensor<1x16xi32> loc(#loc8)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %8 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc9)
    %11 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc10)
    %12 = tt.load %10, %11, %cst_0 : tensor<1x16x!tt.ptr<f32>> loc(#loc10)
    %13 = tt.addptr %arg2, %5 : !tt.ptr<f32>, i32 loc(#loc11)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc11)
    %15 = tt.load %14, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc12)
    %16 = tt.broadcast %15 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc13)
    %17 = arith.addf %12, %16 : tensor<1x16xf32> loc(#loc13)
    %18 = arith.select %11, %17, %cst_0 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc14)
    %19 = "tt.reduce"(%18) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc16)), %arg6: f32 loc(callsite(#loc1 at #loc16))):
      %24 = arith.addf %arg5, %arg6 : f32 loc(#loc28)
      tt.reduce.return %24 : f32 loc(#loc25)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc25)
    %20 = tt.expand_dims %19 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc18)
    %21 = arith.divf %20, %cst : tensor<1x1xf32> loc(#loc19)
    tt.store %10, %17, %11 : tensor<1x16x!tt.ptr<f32>> loc(#loc20)
    gpu.barrier loc(#loc21)
    %22 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc22)
    %23 = tt.splat %22 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc22)
    tt.store %23, %21, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc23)
    tt.return loc(#loc24)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":23:28)
#loc3 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":25:21)
#loc4 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":26:26)
#loc5 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":26:34)
#loc6 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":31:19)
#loc7 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":32:42)
#loc8 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":32:39)
#loc9 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":32:34)
#loc10 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":32:47)
#loc11 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":33:30)
#loc12 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":33:35)
#loc13 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":34:18)
#loc14 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":36:33)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc18 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":37:27)
#loc19 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":39:18)
#loc20 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":40:47)
#loc21 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":41:4)
#loc22 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":42:28)
#loc23 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":42:39)
#loc24 = loc("inductor_cache/qa/cqao3yfr4goqytynd6qy7im2bwg3dtypxyucii6i3okt5kzgiaea.py":42:4)
#loc25 = loc(callsite(#loc15 at #loc16))
#loc27 = loc(callsite(#loc17 at #loc15))
#loc28 = loc(callsite(#loc27 at #loc16))
