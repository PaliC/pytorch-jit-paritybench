; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_clone_mul_sigmoid_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 7, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %12 = sdiv i32 %10, 64, !dbg !15
  %13 = srem i32 %10, 16, !dbg !16
  %14 = srem i32 %10, 4, !dbg !17
  %15 = shl nsw i32 %12, 4, !dbg !18
  %16 = add nsw i32 %15, %13, !dbg !19
  %17 = sext i32 %16 to i64, !dbg !20
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !20
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 %11) #1, !dbg !21
  %20 = bitcast i32 %19 to float, !dbg !21
  %21 = fsub float 0.000000e+00, %20, !dbg !22
  %22 = fmul float %21, 0x3FF7154760000000, !dbg !26
  %23 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !27
  %24 = shufflevector <2 x i32> %23, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !27
  %25 = sdiv <2 x i32> %24, <i32 16, i32 4>, !dbg !27
  %26 = srem <2 x i32> %25, splat (i32 4), !dbg !28
  %27 = extractelement <2 x i32> %25, i64 1, !dbg !29
  %28 = sext i32 %27 to i64, !dbg !29
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !29
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %11) #1, !dbg !30
  %31 = bitcast i32 %30 to float, !dbg !30
  %32 = extractelement <2 x i32> %25, i64 0, !dbg !31
  %33 = shl nsw i32 %32, 2, !dbg !31
  %34 = add nsw i32 %33, %14, !dbg !32
  %35 = sext i32 %34 to i64, !dbg !33
  %36 = getelementptr float, ptr addrspace(1) %2, i64 %35, !dbg !33
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %11) #1, !dbg !34
  %38 = bitcast i32 %37 to float, !dbg !34
  %39 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %22) #1, !dbg !26
  %40 = fadd float %39, 1.000000e+00, !dbg !35
  %41 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %40) #1, !dbg !36
  %42 = fmul float %41, %20, !dbg !37
  %43 = fsub float 0.000000e+00, %31, !dbg !38
  %44 = fmul float %43, 0x3FF7154760000000, !dbg !40
  %45 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %44) #1, !dbg !40
  %46 = fadd float %45, 1.000000e+00, !dbg !41
  %47 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %46) #1, !dbg !42
  %48 = fmul float %47, %31, !dbg !43
  %49 = fadd float %42, %48, !dbg !44
  %50 = fsub float 0.000000e+00, %38, !dbg !45
  %51 = fmul float %50, 0x3FF7154760000000, !dbg !47
  %52 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %51) #1, !dbg !47
  %53 = fadd float %52, 1.000000e+00, !dbg !48
  %54 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %53) #1, !dbg !49
  %55 = fmul float %54, %38, !dbg !50
  %56 = fadd float %49, %55, !dbg !51
  %57 = fmul float %56, 0x3FD5555560000000, !dbg !52
  %58 = shl nsw <2 x i32> %26, <i32 2, i32 4>, !dbg !53
  %59 = shl nsw i32 %12, 6, !dbg !54
  %60 = add i32 %59, %14, !dbg !55
  %61 = extractelement <2 x i32> %58, i64 0, !dbg !56
  %62 = add i32 %60, %61, !dbg !56
  %63 = extractelement <2 x i32> %58, i64 1, !dbg !57
  %64 = add i32 %62, %63, !dbg !57
  %65 = sext i32 %64 to i64, !dbg !58
  %66 = getelementptr float, ptr addrspace(1) %3, i64 %65, !dbg !58
  %67 = bitcast float %57 to i32, !dbg !59
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %67, ptr addrspace(1) %66, i1 %11) #1, !dbg !59
  ret void, !dbg !60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cip4obzbgwylpqvpefgh6xxn3tuii36kawbuiknzmtrpywl34sf2.py", directory: "inductor_cache/ip")
!4 = !{ptr @triton_poi_fused_add_clone_mul_sigmoid_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_clone_mul_sigmoid_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_clone_mul_sigmoid_4", linkageName: "triton_poi_fused_add_clone_mul_sigmoid_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 19, scope: !7)
!18 = !DILocation(line: 31, column: 38, scope: !7)
!19 = !DILocation(line: 31, column: 35, scope: !7)
!20 = !DILocation(line: 31, column: 30, scope: !7)
!21 = !DILocation(line: 31, column: 43, scope: !7)
!22 = !DILocation(line: 47, column: 30, scope: !23, inlinedAt: !25)
!23 = distinct !DILexicalBlockFile(scope: !7, file: !24, discriminator: 0)
!24 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!25 = !DILocation(line: 34, column: 22, scope: !7)
!26 = !DILocation(line: 47, column: 29, scope: !23, inlinedAt: !25)
!27 = !DILocation(line: 28, column: 19, scope: !7)
!28 = !DILocation(line: 30, column: 27, scope: !7)
!29 = !DILocation(line: 32, column: 30, scope: !7)
!30 = !DILocation(line: 32, column: 35, scope: !7)
!31 = !DILocation(line: 33, column: 37, scope: !7)
!32 = !DILocation(line: 33, column: 35, scope: !7)
!33 = !DILocation(line: 33, column: 30, scope: !7)
!34 = !DILocation(line: 33, column: 42, scope: !7)
!35 = !DILocation(line: 47, column: 20, scope: !23, inlinedAt: !25)
!36 = !DILocation(line: 47, column: 16, scope: !23, inlinedAt: !25)
!37 = !DILocation(line: 35, column: 18, scope: !7)
!38 = !DILocation(line: 47, column: 30, scope: !23, inlinedAt: !39)
!39 = !DILocation(line: 36, column: 22, scope: !7)
!40 = !DILocation(line: 47, column: 29, scope: !23, inlinedAt: !39)
!41 = !DILocation(line: 47, column: 20, scope: !23, inlinedAt: !39)
!42 = !DILocation(line: 47, column: 16, scope: !23, inlinedAt: !39)
!43 = !DILocation(line: 37, column: 18, scope: !7)
!44 = !DILocation(line: 38, column: 18, scope: !7)
!45 = !DILocation(line: 47, column: 30, scope: !23, inlinedAt: !46)
!46 = !DILocation(line: 39, column: 22, scope: !7)
!47 = !DILocation(line: 47, column: 29, scope: !23, inlinedAt: !46)
!48 = !DILocation(line: 47, column: 20, scope: !23, inlinedAt: !46)
!49 = !DILocation(line: 47, column: 16, scope: !23, inlinedAt: !46)
!50 = !DILocation(line: 40, column: 18, scope: !7)
!51 = !DILocation(line: 41, column: 19, scope: !7)
!52 = !DILocation(line: 43, column: 20, scope: !7)
!53 = !DILocation(line: 44, column: 32, scope: !7)
!54 = !DILocation(line: 44, column: 48, scope: !7)
!55 = !DILocation(line: 44, column: 30, scope: !7)
!56 = !DILocation(line: 44, column: 37, scope: !7)
!57 = !DILocation(line: 44, column: 45, scope: !7)
!58 = !DILocation(line: 44, column: 25, scope: !7)
!59 = !DILocation(line: 44, column: 60, scope: !7)
!60 = !DILocation(line: 44, column: 4, scope: !7)
