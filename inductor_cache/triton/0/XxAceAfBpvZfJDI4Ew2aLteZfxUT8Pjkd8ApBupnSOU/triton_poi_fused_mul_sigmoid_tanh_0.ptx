//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_mul_sigmoid_tanh_0 // -- Begin function triton_poi_fused_mul_sigmoid_tanh_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_mul_sigmoid_tanh_0
.visible .entry triton_poi_fused_mul_sigmoid_tanh_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_sigmoid_tanh_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_sigmoid_tanh_0_param_1,
	.param .u32 triton_poi_fused_mul_sigmoid_tanh_0_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<26>;
	.reg .f32 	%f<70>;
	.reg .b64 	%rd<8>;
	.loc	1 19 0                          // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_mul_sigmoid_tanh_0_param_0];
$L__tmp0:
	.loc	1 21 28                         // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:21:28
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:21:33
	shl.b32 	%r6, %r3, 6;
	.loc	1 22 36                         // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:22:36
	mov.u32 	%r7, %tid.x;
	shl.b32 	%r8, %r7, 1;
	and.b32  	%r9, %r8, 62;
	.loc	1 22 23                         // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:22:23
	or.b32  	%r10, %r6, %r9;
	.loc	1 23 21                         // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:23:21
	setp.lt.s32 	%p1, %r10, 48;
	.loc	1 25 30                         // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:25:30
	mul.wide.s32 	%rd5, %r10, 4;
	add.s64 	%rd3, %rd4, %rd5;
	.loc	1 25 35                         // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:25:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v2.b32 { %r4, %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r4;
	mov.b32 	%f2, %r5;
	.loc	1 26 26                         // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:26:26
	abs.ftz.f32 	%f3, %f1;
	setp.ltu.f32 	%p2, %f3, 0f3F19999A;
	mov.f32 	%f60, 0f3F800000;
	mov.f32 	%f61, 0fC0000000;
	mov.f32 	%f63, 0fBD563CAE;
	mov.f32 	%f64, 0f3C80F082;
	mov.f32 	%f65, 0f3E085941;
	mov.f32 	%f66, 0fBEAAA9ED;
	mov.f32 	%f67, 0f00000000;
	@%p2 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f19, %f1, %f1;
	fma.rn.ftz.f32 	%f22, %f64, %f19, %f63;
	fma.rn.ftz.f32 	%f24, %f22, %f19, %f65;
	fma.rn.ftz.f32 	%f26, %f24, %f19, %f66;
	fma.rn.ftz.f32 	%f28, %f26, %f19, %f67;
	fma.rn.ftz.f32 	%f68, %f28, %f1, %f1;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	mul.f32 	%f13, %f3, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f14, %f13;
	add.f32 	%f12, %f14, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f11,%f12;
	// end inline asm
	fma.rn.ftz.f32 	%f17, %f11, %f61, %f60;
	setp.ge.f32 	%p3, %f3, 0f41102CB4;
	selp.f32 	%f18, 0f3F800000, %f17, %p3;
	mov.b32 	%r11, %f18;
	and.b32  	%r12, %r4, -2147483648;
	or.b32  	%r13, %r12, %r11;
	mov.b32 	%f68, %r13;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 0 26                          // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:0:26
	ld.param.u64 	%rd2, [triton_poi_fused_mul_sigmoid_tanh_0_param_1];
	cvt.s64.s32 	%rd1, %r10;
	.loc	1 26 26                         // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:26:26
	abs.ftz.f32 	%f7, %f2;
	setp.ltu.f32 	%p4, %f7, 0f3F19999A;
	@%p4 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;
$L__BB0_5:                              // %__internal_fmad.exit3.i8
	mul.f32 	%f37, %f2, %f2;
	fma.rn.ftz.f32 	%f40, %f64, %f37, %f63;
	fma.rn.ftz.f32 	%f42, %f40, %f37, %f65;
	fma.rn.ftz.f32 	%f44, %f42, %f37, %f66;
	fma.rn.ftz.f32 	%f46, %f44, %f37, %f67;
	fma.rn.ftz.f32 	%f69, %f46, %f2, %f2;
	bra.uni 	$L__BB0_6;
$L__BB0_4:                              // %__internal_fmad.exit1.i3
	mul.f32 	%f31, %f7, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f32, %f31;
	add.f32 	%f30, %f32, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f29,%f30;
	// end inline asm
	fma.rn.ftz.f32 	%f35, %f29, %f61, %f60;
	setp.ge.f32 	%p5, %f7, 0f41102CB4;
	selp.f32 	%f36, 0f3F800000, %f35, %p5;
	mov.b32 	%r14, %f36;
	and.b32  	%r15, %r5, -2147483648;
	or.b32  	%r16, %r15, %r14;
	mov.b32 	%f69, %r16;
$L__BB0_6:                              // %__nv_tanhf.exit19
	.loc	1 0 26                          // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:0:26
	cvt.u32.u64 	%r25, %rd1;
	.loc	1 23 21                         // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:23:21
	setp.lt.s32 	%p6, %r25, 48;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f52, %f67, %f1;
	sub.f32 	%f53, %f67, %f2;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f48, %f52, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f47, %f48;
	// end inline asm
	mul.f32 	%f50, %f53, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f49, %f50;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f54, %f47, 0f3F800000;
	add.f32 	%f55, %f49, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r19, %f54;
	mov.b32 	%r18, 1065353216;
	// begin inline asm
	div.full.f32 %r17, %r18, %r19;
	// end inline asm
	mov.b32 	%f56, %r17;
	mov.b32 	%r22, %f55;
	// begin inline asm
	div.full.f32 %r20, %r18, %r22;
	// end inline asm
	mov.b32 	%f57, %r20;
$L__tmp2:
	.loc	1 28 18                         // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:28:18
	mul.f32 	%f58, %f68, %f56;
	mul.f32 	%f59, %f69, %f57;
	.loc	1 29 25                         // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:29:25
	shl.b64 	%rd7, %rd1, 2;
	add.s64 	%rd6, %rd2, %rd7;
	.loc	1 29 36                         // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:29:36
	mov.b32 	%r23, %f58;
	mov.b32 	%r24, %f59;
	// begin inline asm
	@%p6 st.global.v2.b32 [ %rd6 + 0 ], { %r23, %r24 };
	// end inline asm
	.loc	1 29 4                          // cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py:29:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/js/cjsq6nqwgmmjsfj4ggv2txjnwol4nddpyadfaxhpuweoy3dvgrta.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 180                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xad DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 115
.b8 113
.b8 54
.b8 110
.b8 113
.b8 119
.b8 103
.b8 109
.b8 109
.b8 106
.b8 115
.b8 102
.b8 106
.b8 52
.b8 103
.b8 103
.b8 118
.b8 50
.b8 116
.b8 120
.b8 106
.b8 110
.b8 119
.b8 111
.b8 108
.b8 52
.b8 110
.b8 100
.b8 100
.b8 112
.b8 121
.b8 97
.b8 100
.b8 102
.b8 97
.b8 120
.b8 104
.b8 112
.b8 117
.b8 119
.b8 101
.b8 111
.b8 121
.b8 51
.b8 100
.b8 118
.b8 103
.b8 114
.b8 116
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 116
.b8 97
.b8 110
.b8 104
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 27                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
