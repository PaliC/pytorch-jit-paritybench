; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_clone_transpose_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 1, !dbg !12
  %10 = and i32 %9, 15, !dbg !12
  %11 = and i32 %8, 1, !dbg !12
  %12 = shl nuw nsw i32 %11, 1, !dbg !12
  %13 = shl i32 %8, 1, !dbg !12
  %14 = and i32 %13, 14, !dbg !12
  %15 = or disjoint i32 %7, %10, !dbg !13
  %16 = or disjoint i32 %7, %14, !dbg !13
  %17 = icmp slt i32 %15, 16, !dbg !14
  %18 = icmp slt i32 %16, 16, !dbg !14
  %19 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !15
  %20 = shl i32 %19, 2, !dbg !16
  %.lobit12 = lshr i32 %8, 3, !dbg !17
  %21 = and i32 %.lobit12, 3, !dbg !17
  %22 = or disjoint i32 %20, %12, !dbg !18
  %23 = or disjoint i32 %20, %21, !dbg !18
  %24 = icmp slt i32 %22, 4, !dbg !19
  %25 = icmp slt i32 %23, 4, !dbg !19
  %.frozen = freeze i32 %16, !dbg !20
  %26 = sdiv i32 %.frozen, 4, !dbg !20
  %27 = mul i32 %26, 4, !dbg !21
  %.decomposed = sub i32 %.frozen, %27, !dbg !21
  %28 = shl i32 %15, 2, !dbg !22
  %29 = add i32 %22, %28, !dbg !23
  %30 = sext i32 %29 to i64, !dbg !24
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !24
  %32 = and i1 %17, %24, !dbg !25
  %33 = and i1 %18, %25, !dbg !25
  %34 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %31, i1 %32) #2, !dbg !26
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !26
  %36 = extractvalue { i32, i32 } %34, 1, !dbg !26
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %30, !dbg !27
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %35, i32 %36, ptr addrspace(1) %37, i1 %32) #2, !dbg !28
  %38 = shl i32 %23, 2, !dbg !29
  %39 = add i32 %38, %.decomposed, !dbg !30
  %40 = shl i32 %26, 4, !dbg !31
  %41 = add i32 %39, %40, !dbg !32
  %42 = sext i32 %41 to i64, !dbg !33
  %43 = getelementptr float, ptr addrspace(1) %2, i64 %42, !dbg !33
  %44 = shl nuw nsw i32 %11, 5, !dbg !34
  %45 = or disjoint i32 %44, %10, !dbg !34
  %46 = and i32 %13, 62, !dbg !34
  %47 = shl nuw nsw i32 %11, 2, !dbg !34
  %48 = add nuw nsw i32 %45, %47, !dbg !34
  %49 = zext nneg i32 %48 to i64, !dbg !34
  %50 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %49, !dbg !34
  %51 = insertelement <1 x i32> poison, i32 %35, i64 0, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %50, <1 x i32> %51, i1 true) #2, !dbg !34
  %52 = or disjoint i32 %45, 16, !dbg !34
  %53 = lshr i32 %52, 3, !dbg !34
  %54 = and i32 %53, 6, !dbg !34
  %55 = add nuw nsw i32 %54, %52, !dbg !34
  %56 = zext nneg i32 %55 to i64, !dbg !34
  %57 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %56, !dbg !34
  %58 = insertelement <1 x i32> poison, i32 %36, i64 0, !dbg !34
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %57, <1 x i32> %58, i1 true) #2, !dbg !34
  tail call void @llvm.nvvm.barrier0(), !dbg !34
  %59 = lshr i32 %13, 3, !dbg !34
  %60 = and i32 %59, 6, !dbg !34
  %61 = add nuw nsw i32 %60, %46, !dbg !34
  %62 = zext nneg i32 %61 to i64, !dbg !34
  %63 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %62, !dbg !34
  %.extract = load i32, ptr addrspace(3) %63, align 8, !dbg !34
  %64 = getelementptr inbounds i8, ptr addrspace(3) %63, i64 4, !dbg !34
  %.extract4 = load i32, ptr addrspace(3) %64, align 4, !dbg !34
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract, i32 %.extract4, ptr addrspace(1) %43, i1 %33) #2, !dbg !34
  ret void, !dbg !35
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ck6mao2cjqqelrkw733xyc2xo2fy3jc3xui55fxz4efzl3ucyksl.py", directory: "inductor_cache/k6")
!4 = !{ptr @triton_poi_fused_clone_transpose_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_transpose_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_transpose_0", linkageName: "triton_poi_fused_clone_transpose_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 31, column: 19, scope: !7)
!21 = !DILocation(line: 30, column: 19, scope: !7)
!22 = !DILocation(line: 32, column: 37, scope: !7)
!23 = !DILocation(line: 32, column: 35, scope: !7)
!24 = !DILocation(line: 32, column: 30, scope: !7)
!25 = !DILocation(line: 32, column: 50, scope: !7)
!26 = !DILocation(line: 32, column: 42, scope: !7)
!27 = !DILocation(line: 33, column: 25, scope: !7)
!28 = !DILocation(line: 33, column: 43, scope: !7)
!29 = !DILocation(line: 34, column: 32, scope: !7)
!30 = !DILocation(line: 34, column: 30, scope: !7)
!31 = !DILocation(line: 34, column: 40, scope: !7)
!32 = !DILocation(line: 34, column: 37, scope: !7)
!33 = !DILocation(line: 34, column: 25, scope: !7)
!34 = !DILocation(line: 34, column: 51, scope: !7)
!35 = !DILocation(line: 34, column: 4, scope: !7)
