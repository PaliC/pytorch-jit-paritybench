#loc = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":19:0)
#loc1 = loc(unknown)
#loc20 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":36:38)
#loc35 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":48:25)
#loc55 = loc(callsite(#loc1 at #loc20))
#loc61 = loc(callsite(#loc1 at #loc35))
module {
  tt.func public @triton_red_fused__softmax_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":19:0), %arg1: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":19:0)) attributes {noinline = false} {
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_0 = arith.constant dense<4096> : tensor<1x2048xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0xFF800000> : tensor<1x2048xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc3)
    %2 = tt.expand_dims %1 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc4)
    %3 = arith.muli %0, %c4096_i32 : i32 loc(#loc5)
    %4 = tt.splat %3 : i32 -> tensor<1x2048xi32> loc(#loc6)
    %5 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc7)
    %6 = scf.for %arg3 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg4 = %cst_1) -> (tensor<1x2048xf32>)  : i32 {
      %21 = tt.splat %arg3 : i32 -> tensor<1x2048xi32> loc(#loc9)
      %22 = arith.addi %21, %2 : tensor<1x2048xi32> loc(#loc9)
      %23 = arith.cmpi slt, %22, %cst_0 : tensor<1x2048xi32> loc(#loc10)
      %24 = arith.addi %22, %4 : tensor<1x2048xi32> loc(#loc6)
      %25 = tt.addptr %5, %24 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc7)
      %26 = tt.load %25, %23, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc11)
      %27 = arith.cmpf ogt, %arg4, %26 : tensor<1x2048xf32> loc(#loc50)
      %28 = arith.cmpf une, %arg4, %arg4 : tensor<1x2048xf32> loc(#loc51)
      %29 = arith.ori %27, %28 : tensor<1x2048xi1> loc(#loc52)
      %30 = arith.select %29, %arg4, %26 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc53)
      %31 = arith.select %23, %30, %arg4 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc17)
      scf.yield %31 : tensor<1x2048xf32> loc(#loc18)
    } loc(#loc8)
    %7 = "tt.reduce"(%6) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc20)), %arg4: f32 loc(callsite(#loc1 at #loc20))):
      %21 = arith.cmpf ogt, %arg3, %arg4 : f32 loc(#loc63)
      %22 = arith.cmpf une, %arg3, %arg3 : f32 loc(#loc64)
      %23 = arith.ori %21, %22 : i1 loc(#loc65)
      %24 = arith.select %23, %arg3, %arg4 : f32 loc(#loc66)
      tt.reduce.return %24 : f32 loc(#loc54)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc54)
    %8 = tt.expand_dims %7 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc21)
    %9 = arith.muli %0, %c4096_i32 : i32 loc(#loc22)
    %10 = tt.splat %9 : i32 -> tensor<1x2048xi32> loc(#loc23)
    %11 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc24)
    %12 = tt.broadcast %8 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc25)
    %13 = scf.for %arg3 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg4 = %cst) -> (tensor<1x2048xf32>)  : i32 {
      %21 = tt.splat %arg3 : i32 -> tensor<1x2048xi32> loc(#loc27)
      %22 = arith.addi %21, %2 : tensor<1x2048xi32> loc(#loc27)
      %23 = arith.cmpi slt, %22, %cst_0 : tensor<1x2048xi32> loc(#loc28)
      %24 = arith.addi %22, %10 : tensor<1x2048xi32> loc(#loc23)
      %25 = tt.addptr %11, %24 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc24)
      %26 = tt.load %25, %23, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc29)
      %27 = arith.subf %26, %12 : tensor<1x2048xf32> loc(#loc25)
      %28 = math.exp %27 : tensor<1x2048xf32> loc(#loc30)
      %29 = arith.addf %arg4, %28 : tensor<1x2048xf32> loc(#loc31)
      %30 = arith.select %23, %29, %arg4 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc32)
      scf.yield %30 : tensor<1x2048xf32> loc(#loc33)
    } loc(#loc26)
    %14 = "tt.reduce"(%13) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc35)), %arg4: f32 loc(callsite(#loc1 at #loc35))):
      %21 = arith.addf %arg3, %arg4 : f32 loc(#loc67)
      tt.reduce.return %21 : f32 loc(#loc60)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc60)
    %15 = tt.expand_dims %14 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc37)
    %16 = arith.muli %0, %c4096_i32 : i32 loc(#loc38)
    %17 = tt.splat %16 : i32 -> tensor<1x2048xi32> loc(#loc39)
    %18 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc40)
    %19 = tt.broadcast %8 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc41)
    %20 = tt.broadcast %15 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc42)
    scf.for %arg3 = %c0_i32 to %c4096_i32 step %c2048_i32  : i32 {
      %21 = tt.splat %arg3 : i32 -> tensor<1x2048xi32> loc(#loc44)
      %22 = arith.addi %21, %2 : tensor<1x2048xi32> loc(#loc44)
      %23 = arith.cmpi slt, %22, %cst_0 : tensor<1x2048xi32> loc(#loc45)
      %24 = arith.addi %22, %17 : tensor<1x2048xi32> loc(#loc39)
      %25 = tt.addptr %18, %24 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc40)
      %26 = tt.load %25, %23, %cst evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc46)
      %27 = arith.subf %26, %19 : tensor<1x2048xf32> loc(#loc41)
      %28 = math.exp %27 : tensor<1x2048xf32> loc(#loc47)
      %29 = arith.divf %28, %20 : tensor<1x2048xf32> loc(#loc42)
      tt.store %25, %29, %23 : tensor<1x2048x!tt.ptr<f32>> loc(#loc48)
    } loc(#loc43)
    tt.return loc(#loc49)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":22:28)
#loc3 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":25:25)
#loc4 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":25:33)
#loc5 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":32:48)
#loc6 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":32:43)
#loc7 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":32:38)
#loc8 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":28:36)
#loc9 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":29:27)
#loc10 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":30:25)
#loc11 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":32:53)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc13 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":34:45)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc17 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":35:38)
#loc18 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":35:8)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc21 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":36:41)
#loc22 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":42:48)
#loc23 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":42:43)
#loc24 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":42:38)
#loc25 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":43:22)
#loc26 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":38:36)
#loc27 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":39:27)
#loc28 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":40:25)
#loc29 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":42:53)
#loc30 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":44:27)
#loc31 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":46:23)
#loc32 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":47:38)
#loc33 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":47:8)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc37 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":48:28)
#loc38 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":53:49)
#loc39 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":53:44)
#loc40 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":53:39)
#loc41 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":54:24)
#loc42 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":56:24)
#loc43 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":49:36)
#loc44 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":50:27)
#loc45 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":51:25)
#loc46 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":53:54)
#loc47 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":55:28)
#loc48 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":57:54)
#loc49 = loc("inductor_cache/c3/cc3gl3iqjyxnc7gk3j35p2vncofz4h2c7mssbff2cbanp4emzkmg.py":49:4)
#loc50 = loc(callsite(#loc12 at #loc13))
#loc51 = loc(callsite(#loc14 at #loc13))
#loc52 = loc(callsite(#loc15 at #loc13))
#loc53 = loc(callsite(#loc16 at #loc13))
#loc54 = loc(callsite(#loc19 at #loc20))
#loc56 = loc(callsite(#loc12 at #loc19))
#loc57 = loc(callsite(#loc14 at #loc19))
#loc58 = loc(callsite(#loc15 at #loc19))
#loc59 = loc(callsite(#loc16 at #loc19))
#loc60 = loc(callsite(#loc34 at #loc35))
#loc62 = loc(callsite(#loc36 at #loc34))
#loc63 = loc(callsite(#loc56 at #loc20))
#loc64 = loc(callsite(#loc57 at #loc20))
#loc65 = loc(callsite(#loc58 at #loc20))
#loc66 = loc(callsite(#loc59 at #loc20))
#loc67 = loc(callsite(#loc62 at #loc35))
