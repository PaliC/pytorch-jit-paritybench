; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_24(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 2, !dbg !12
  %9 = and i32 %8, 508, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = or disjoint i32 %10, 2, !dbg !13
  %13 = or disjoint i32 %10, 3, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %14 = sdiv i32 %.frozen, 256, !dbg !14
  %15 = mul i32 %14, 256, !dbg !15
  %.decomposed = sub i32 %.frozen, %15, !dbg !15
  %16 = srem i32 %11, 256, !dbg !15
  %17 = srem i32 %12, 256, !dbg !15
  %18 = srem i32 %13, 256, !dbg !15
  %19 = srem i32 %14, 64, !dbg !16
  %20 = sdiv i32 %10, 16384, !dbg !17
  %21 = icmp slt i32 %.decomposed, 128, !dbg !18
  %22 = shl nsw i32 %.decomposed, 6, !dbg !19
  %23 = shl nsw i32 %16, 6, !dbg !19
  %24 = shl nsw i32 %17, 6, !dbg !19
  %25 = shl nsw i32 %18, 6, !dbg !19
  %26 = shl nsw i32 %20, 13, !dbg !20
  %27 = add nsw i32 %26, %19, !dbg !21
  %28 = add nsw i32 %27, %22, !dbg !22
  %29 = add nsw i32 %27, %23, !dbg !22
  %30 = add nsw i32 %27, %24, !dbg !22
  %31 = add nsw i32 %27, %25, !dbg !22
  %32 = sext i32 %28 to i64, !dbg !23
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !23
  %34 = sext i32 %29 to i64, !dbg !23
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !23
  %36 = sext i32 %30 to i64, !dbg !23
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !23
  %38 = sext i32 %31 to i64, !dbg !23
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !23
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %21, i32 0, i1 %21) #1, !dbg !24
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %21, i32 0, i1 %21) #1, !dbg !24
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %21, i32 0, i1 %21) #1, !dbg !24
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %21, i32 0, i1 %21) #1, !dbg !24
  %44 = icmp sgt i32 %.decomposed, 127, !dbg !25
  %45 = shl nsw i32 %14, 7, !dbg !26
  %46 = add nsw i32 %.decomposed, -128, !dbg !27
  %47 = add nsw i32 %46, %45, !dbg !28
  %48 = sext i32 %47 to i64, !dbg !29
  %49 = getelementptr float, ptr addrspace(1) %1, i64 %48, !dbg !29
  %50 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %49, i1 %44, i32 0, i1 %44, i32 0, i1 %44, i32 0, i1 %44, i32 0, i1 %44) #1, !dbg !30
  %51 = extractvalue { i32, i32, i32, i32 } %50, 0, !dbg !30
  %52 = extractvalue { i32, i32, i32, i32 } %50, 1, !dbg !30
  %53 = extractvalue { i32, i32, i32, i32 } %50, 2, !dbg !30
  %54 = extractvalue { i32, i32, i32, i32 } %50, 3, !dbg !30
  %55 = bitcast i32 %51 to float, !dbg !30
  %56 = bitcast i32 %52 to float, !dbg !30
  %57 = bitcast i32 %53 to float, !dbg !30
  %58 = bitcast i32 %54 to float, !dbg !30
  %59 = fcmp ogt float %55, 0.000000e+00, !dbg !31
  %60 = fcmp ogt float %56, 0.000000e+00, !dbg !31
  %61 = fcmp ogt float %57, 0.000000e+00, !dbg !31
  %62 = fcmp ogt float %58, 0.000000e+00, !dbg !31
  %63 = fmul float %55, 0x3FB99999A0000000, !dbg !32
  %64 = fmul float %56, 0x3FB99999A0000000, !dbg !32
  %65 = fmul float %57, 0x3FB99999A0000000, !dbg !32
  %66 = fmul float %58, 0x3FB99999A0000000, !dbg !32
  %67 = select i1 %59, float %55, float %63, !dbg !33
  %68 = select i1 %60, float %56, float %64, !dbg !33
  %69 = select i1 %61, float %57, float %65, !dbg !33
  %70 = select i1 %62, float %58, float %66, !dbg !33
  %71 = sext i32 %10 to i64, !dbg !34
  %72 = getelementptr float, ptr addrspace(1) %2, i64 %71, !dbg !34
  %73 = bitcast float %67 to i32, !dbg !35
  %74 = select i1 %21, i32 %40, i32 %73, !dbg !36
  %75 = bitcast float %68 to i32, !dbg !35
  %76 = select i1 %21, i32 %41, i32 %75, !dbg !36
  %77 = bitcast float %69 to i32, !dbg !35
  %78 = select i1 %21, i32 %42, i32 %77, !dbg !36
  %79 = bitcast float %70 to i32, !dbg !35
  %80 = select i1 %21, i32 %43, i32 %79, !dbg !36
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %74, i32 %76, i32 %78, i32 %80, ptr addrspace(1) %72, i1 true) #1, !dbg !35
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbehso2rvw23okdas2xhbtirxbukmnxncqnsrtifnleb5ztr2e7n.py", directory: "inductor_cache/be")
!4 = !{ptr @triton_poi_fused_cat_24, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_24, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_24", linkageName: "triton_poi_fused_cat_24", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 28, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 33, column: 18, scope: !7)
!19 = !DILocation(line: 34, column: 39, scope: !7)
!20 = !DILocation(line: 34, column: 50, scope: !7)
!21 = !DILocation(line: 34, column: 35, scope: !7)
!22 = !DILocation(line: 34, column: 45, scope: !7)
!23 = !DILocation(line: 34, column: 30, scope: !7)
!24 = !DILocation(line: 34, column: 55, scope: !7)
!25 = !DILocation(line: 35, column: 19, scope: !7)
!26 = !DILocation(line: 38, column: 34, scope: !7)
!27 = !DILocation(line: 38, column: 49, scope: !7)
!28 = !DILocation(line: 38, column: 40, scope: !7)
!29 = !DILocation(line: 38, column: 30, scope: !7)
!30 = !DILocation(line: 38, column: 55, scope: !7)
!31 = !DILocation(line: 40, column: 19, scope: !7)
!32 = !DILocation(line: 42, column: 19, scope: !7)
!33 = !DILocation(line: 43, column: 34, scope: !7)
!34 = !DILocation(line: 47, column: 25, scope: !7)
!35 = !DILocation(line: 47, column: 37, scope: !7)
!36 = !DILocation(line: 46, column: 33, scope: !7)
!37 = !DILocation(line: 47, column: 4, scope: !7)
