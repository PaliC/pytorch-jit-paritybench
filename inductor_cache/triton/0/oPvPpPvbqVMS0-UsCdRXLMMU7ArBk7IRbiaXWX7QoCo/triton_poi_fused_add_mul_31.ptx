//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mul_31 // -- Begin function triton_poi_fused_add_mul_31
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_mul_31
.visible .entry triton_poi_fused_add_mul_31(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_31_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_31_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_31_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_31_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_31_param_4,
	.param .u32 triton_poi_fused_add_mul_31_param_5,
	.param .u32 triton_poi_fused_add_mul_31_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<43>;
	.reg .b32 	%r<193>;
	.reg .f32 	%f<105>;
	.reg .b64 	%rd<29>;
	.loc	1 19 0                          // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:19:0

// %bb.0:
	ld.param.u64 	%rd15, [triton_poi_fused_add_mul_31_param_0];
	ld.param.u64 	%rd16, [triton_poi_fused_add_mul_31_param_1];
$L__tmp0:
	.loc	1 22 28                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:22:33
	shl.b32 	%r89, %r1, 8;
	ld.param.u64 	%rd17, [triton_poi_fused_add_mul_31_param_2];
	ld.param.u64 	%rd18, [triton_poi_fused_add_mul_31_param_3];
	.loc	1 23 44                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:23:44
	mov.u32 	%r90, %tid.x;
	ld.param.u64 	%rd19, [triton_poi_fused_add_mul_31_param_4];
	bfe.u32 	%r91, %r90, 2, 6;
	or.b32  	%r92, %r91, 64;
	or.b32  	%r93, %r91, 128;
	or.b32  	%r94, %r91, 192;
	shl.b32 	%r95, %r90, 2;
	and.b32  	%r96, %r95, 12;
	and.b32  	%r97, %r95, 252;
	and.b32  	%r98, %r90, 255;
	.loc	1 23 23                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:23:23
	or.b32  	%r99, %r89, %r91;
	or.b32  	%r100, %r89, %r92;
	or.b32  	%r101, %r89, %r93;
	or.b32  	%r102, %r89, %r94;
	or.b32  	%r103, %r89, %r97;
	or.b32  	%r104, %r89, %r98;
	.loc	1 24 21                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:24:21
	setp.lt.s32 	%p33, %r99, 512;
	setp.lt.s32 	%p34, %r100, 512;
	setp.lt.s32 	%p35, %r101, 512;
	setp.lt.s32 	%p36, %r102, 512;
	setp.lt.s32 	%p37, %r103, 512;
	setp.lt.s32 	%p5, %r104, 512;
	.loc	1 25 28                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:25:33
	shl.b32 	%r105, %r2, 4;
	.loc	1 26 44                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:26:44
	bfe.u32 	%r106, %r90, 6, 2;
	.loc	1 26 23                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:26:23
	or.b32  	%r107, %r105, %r96;
	or.b32  	%r108, %r105, %r106;
	or.b32  	%r109, %r108, 4;
	or.b32  	%r110, %r108, 8;
	or.b32  	%r111, %r108, 12;
	.loc	1 27 21                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:27:21
	setp.lt.s32 	%p38, %r107, 64;
	setp.lt.s32 	%p39, %r108, 64;
	setp.lt.s32 	%p40, %r109, 64;
	setp.lt.s32 	%p41, %r110, 64;
	setp.lt.s32 	%p42, %r111, 64;
	.loc	1 31 19                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:31:19
	shr.s32 	%r113, %r103, 31;
	shr.u32 	%r114, %r113, 25;
	add.s32 	%r115, %r103, %r114;
	.loc	1 30 19                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:30:19
	and.b32  	%r116, %r115, -128;
	sub.s32 	%r117, %r103, %r116;
	bfe.s32 	%r118, %r1, 23, 1;
	shr.u32 	%r119, %r118, 25;
	add.s32 	%r120, %r104, %r119;
	and.b32  	%r121, %r120, -128;
	sub.s32 	%r122, %r104, %r121;
	.loc	1 32 38                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:32:38
	shl.b32 	%r123, %r99, 6;
	shl.b32 	%r124, %r100, 6;
	shl.b32 	%r125, %r101, 6;
	shl.b32 	%r126, %r102, 6;
	.loc	1 32 35                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:32:35
	add.s32 	%r127, %r107, %r123;
	add.s32 	%r128, %r107, %r124;
	add.s32 	%r129, %r107, %r125;
	add.s32 	%r130, %r107, %r126;
	.loc	1 32 30                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:32:30
	mul.wide.s32 	%rd20, %r127, 4;
	add.s64 	%rd1, %rd15, %rd20;
	mul.wide.s32 	%rd21, %r128, 4;
	add.s64 	%rd2, %rd15, %rd21;
	mul.wide.s32 	%rd22, %r129, 4;
	add.s64 	%rd3, %rd15, %rd22;
	mul.wide.s32 	%rd23, %r130, 4;
	add.s64 	%rd4, %rd15, %rd23;
	.loc	1 32 51                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:32:51
	and.pred  	%p1, %p33, %p38;
	and.pred  	%p2, %p34, %p38;
	and.pred  	%p3, %p35, %p38;
	and.pred  	%p4, %p36, %p38;
	and.pred  	%p6, %p37, %p39;
	and.pred  	%p7, %p40, %p37;
	and.pred  	%p8, %p41, %p37;
	and.pred  	%p9, %p42, %p37;
	.loc	1 32 43                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:32:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r15;
	mov.b32 	%f14, %r16;
	mov.b32 	%f15, %r17;
	mov.b32 	%f16, %r18;
	.loc	1 33 30                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:33:30
	mul.wide.s32 	%rd24, %r122, 4;
	add.s64 	%rd5, %rd16, %rd24;
	.loc	1 33 35                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:33:35
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r38 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 39                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:34:39
	shl.b32 	%r131, %r108, 7;
	shl.b32 	%r132, %r109, 7;
	shl.b32 	%r133, %r110, 7;
	shl.b32 	%r134, %r111, 7;
	.loc	1 34 49                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:34:49
	shl.b32 	%r135, %r115, 6;
	and.b32  	%r136, %r135, -8192;
	.loc	1 34 35                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:34:35
	add.s32 	%r137, %r136, %r117;
	.loc	1 34 44                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:34:44
	add.s32 	%r138, %r137, %r131;
	add.s32 	%r139, %r137, %r132;
	add.s32 	%r140, %r137, %r133;
	add.s32 	%r141, %r137, %r134;
	.loc	1 34 30                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:34:30
	mul.wide.s32 	%rd25, %r138, 4;
	add.s64 	%rd6, %rd17, %rd25;
	mul.wide.s32 	%rd26, %r139, 4;
	add.s64 	%rd7, %rd17, %rd26;
	mul.wide.s32 	%rd27, %r140, 4;
	add.s64 	%rd8, %rd17, %rd27;
	mul.wide.s32 	%rd28, %r141, 4;
	add.s64 	%rd9, %rd17, %rd28;
	.loc	1 34 54                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:34:54
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r20, %r21, %r22, %r23 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r20;
	mov.b32 	%f18, %r21;
	mov.b32 	%f19, %r22;
	mov.b32 	%f20, %r23;
	// begin inline asm
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p7 ld.global.L1::evict_last.v4.b32 { %r24, %r25, %r26, %r27 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r24;
	mov.b32 	%f22, %r25;
	mov.b32 	%f23, %r26;
	mov.b32 	%f24, %r27;
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	@%p8 ld.global.L1::evict_last.v4.b32 { %r28, %r29, %r30, %r31 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r28;
	mov.b32 	%f26, %r29;
	mov.b32 	%f27, %r30;
	mov.b32 	%f28, %r31;
	// begin inline asm
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	@%p9 ld.global.L1::evict_last.v4.b32 { %r32, %r33, %r34, %r35 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r32;
	mov.b32 	%f30, %r33;
	mov.b32 	%f31, %r34;
	mov.b32 	%f32, %r35;
	.loc	1 35 30                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:35:30
	add.s64 	%rd10, %rd18, %rd24;
	.loc	1 35 35                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:35:35
	// begin inline asm
	mov.u32 %r72, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r72 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 36 18                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:36:18
	shl.b32 	%r142, %r98, 2;
	mov.u32 	%r143, global_smem;
	add.s32 	%r37, %r143, %r142;
	mov.pred 	%p11, -1;
	// begin inline asm
	@%p11 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r144, %r97, 2;
	add.s32 	%r145, %r143, %r144;
	ld.shared.v4.f32 	{%f33, %f34, %f35, %f36}, [%r145];
	mul.f32 	%f37, %f33, %f17;
	mul.f32 	%f38, %f34, %f18;
	mul.f32 	%f39, %f35, %f19;
	mul.f32 	%f40, %f36, %f20;
	mul.f32 	%f41, %f33, %f21;
	mul.f32 	%f42, %f34, %f22;
	mul.f32 	%f43, %f35, %f23;
	mul.f32 	%f44, %f36, %f24;
	mul.f32 	%f45, %f33, %f25;
	mul.f32 	%f46, %f34, %f26;
	mul.f32 	%f47, %f35, %f27;
	mul.f32 	%f48, %f36, %f28;
	mul.f32 	%f49, %f33, %f29;
	mul.f32 	%f50, %f34, %f30;
	mul.f32 	%f51, %f35, %f31;
	mul.f32 	%f52, %f36, %f32;
	bar.sync 	0;
	shl.b32 	%r146, %r90, 6;
	and.b32  	%r147, %r146, 4032;
	or.b32  	%r148, %r147, %r106;
	and.b32  	%r149, %r95, 1020;
	shr.u32 	%r150, %r147, 2;
	add.s32 	%r151, %r143, %r150;
	shl.b32 	%r152, %r148, 2;
	add.s32 	%r39, %r151, %r152;
	mov.b32 	%r40, %f37;
	// begin inline asm
	@%p11 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	or.b32  	%r153, %r147, 16;
	shr.u32 	%r154, %r153, 2;
	add.s32 	%r155, %r143, %r154;
	add.s32 	%r156, %r155, %r152;
	add.s32 	%r41, %r156, 64;
	mov.b32 	%r42, %f38;
	// begin inline asm
	@%p11 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	or.b32  	%r157, %r147, 32;
	shr.u32 	%r158, %r157, 2;
	add.s32 	%r159, %r143, %r158;
	add.s32 	%r160, %r159, %r152;
	add.s32 	%r43, %r160, 128;
	mov.b32 	%r44, %f39;
	// begin inline asm
	@%p11 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	or.b32  	%r161, %r147, 48;
	shr.u32 	%r162, %r161, 2;
	add.s32 	%r163, %r143, %r162;
	add.s32 	%r164, %r163, %r152;
	add.s32 	%r45, %r164, 192;
	mov.b32 	%r46, %f40;
	// begin inline asm
	@%p11 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r39, 16;
	mov.b32 	%r48, %f41;
	// begin inline asm
	@%p11 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r156, 80;
	mov.b32 	%r50, %f42;
	// begin inline asm
	@%p11 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	add.s32 	%r51, %r160, 144;
	mov.b32 	%r52, %f43;
	// begin inline asm
	@%p11 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	add.s32 	%r53, %r164, 208;
	mov.b32 	%r54, %f44;
	// begin inline asm
	@%p11 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	add.s32 	%r55, %r39, 32;
	mov.b32 	%r56, %f45;
	// begin inline asm
	@%p11 st.shared.b32 [ %r55 + 0 ], %r56;
	// end inline asm
	add.s32 	%r57, %r156, 96;
	mov.b32 	%r58, %f46;
	// begin inline asm
	@%p11 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	add.s32 	%r59, %r160, 160;
	mov.b32 	%r60, %f47;
	// begin inline asm
	@%p11 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	add.s32 	%r61, %r164, 224;
	mov.b32 	%r62, %f48;
	// begin inline asm
	@%p11 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	add.s32 	%r63, %r39, 48;
	mov.b32 	%r64, %f49;
	// begin inline asm
	@%p11 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	add.s32 	%r65, %r156, 112;
	mov.b32 	%r66, %f50;
	// begin inline asm
	@%p11 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	add.s32 	%r67, %r160, 176;
	mov.b32 	%r68, %f51;
	// begin inline asm
	@%p11 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	add.s32 	%r69, %r164, 240;
	mov.b32 	%r70, %f52;
	// begin inline asm
	@%p11 st.shared.b32 [ %r69 + 0 ], %r70;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r165, %r90, 252;
	add.s32 	%r166, %r143, %r165;
	shl.b32 	%r167, %r149, 2;
	add.s32 	%r168, %r166, %r167;
	ld.shared.f32 	%f53, [%r168];
	ld.shared.f32 	%f54, [%r168+4];
	ld.shared.f32 	%f55, [%r168+8];
	ld.shared.f32 	%f56, [%r168+12];
	or.b32  	%r169, %r149, 1024;
	shr.u32 	%r170, %r169, 2;
	and.b32  	%r171, %r170, 508;
	add.s32 	%r172, %r143, %r171;
	add.s32 	%r173, %r172, %r167;
	ld.shared.f32 	%f57, [%r173+4096];
	ld.shared.f32 	%f58, [%r173+4100];
	ld.shared.f32 	%f59, [%r173+4104];
	ld.shared.f32 	%f60, [%r173+4108];
	or.b32  	%r174, %r149, 2048;
	shr.u32 	%r175, %r174, 2;
	and.b32  	%r176, %r175, 764;
	add.s32 	%r177, %r143, %r176;
	add.s32 	%r178, %r177, %r167;
	ld.shared.f32 	%f61, [%r178+8192];
	ld.shared.f32 	%f62, [%r178+8196];
	ld.shared.f32 	%f63, [%r178+8200];
	ld.shared.f32 	%f64, [%r178+8204];
	or.b32  	%r179, %r149, 3072;
	shr.u32 	%r180, %r179, 2;
	and.b32  	%r181, %r180, 1020;
	add.s32 	%r182, %r143, %r181;
	add.s32 	%r183, %r182, %r167;
	ld.shared.f32 	%f65, [%r183+12288];
	ld.shared.f32 	%f66, [%r183+12292];
	ld.shared.f32 	%f67, [%r183+12296];
	ld.shared.f32 	%f68, [%r183+12300];
	.loc	1 38 18                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:38:18
	bar.sync 	0;
	shl.b32 	%r184, %r98, 3;
	add.s32 	%r71, %r143, %r184;
	// begin inline asm
	@%p11 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r185, %r91, 3;
	add.s32 	%r186, %r143, %r185;
	ld.shared.f32 	%f69, [%r186];
	shl.b32 	%r187, %r92, 3;
	add.s32 	%r188, %r143, %r187;
	ld.shared.f32 	%f70, [%r188];
	shl.b32 	%r189, %r93, 3;
	add.s32 	%r190, %r143, %r189;
	ld.shared.f32 	%f71, [%r190];
	shl.b32 	%r191, %r94, 3;
	add.s32 	%r192, %r143, %r191;
	ld.shared.f32 	%f72, [%r192];
	.loc	1 37 18                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:37:18
	add.f32 	%f73, %f53, %f69;
	add.f32 	%f74, %f54, %f69;
	add.f32 	%f75, %f55, %f69;
	add.f32 	%f76, %f56, %f69;
	add.f32 	%f77, %f57, %f70;
	add.f32 	%f78, %f58, %f70;
	add.f32 	%f79, %f59, %f70;
	add.f32 	%f80, %f60, %f70;
	add.f32 	%f81, %f61, %f71;
	add.f32 	%f82, %f62, %f71;
	add.f32 	%f83, %f63, %f71;
	add.f32 	%f84, %f64, %f71;
	add.f32 	%f85, %f65, %f72;
	add.f32 	%f86, %f66, %f72;
	add.f32 	%f87, %f67, %f72;
	add.f32 	%f88, %f68, %f72;
	.loc	1 38 18                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:38:18
	add.f32 	%f89, %f73, %f1;
	add.f32 	%f90, %f74, %f2;
	add.f32 	%f91, %f75, %f3;
	add.f32 	%f92, %f76, %f4;
	add.f32 	%f93, %f77, %f5;
	add.f32 	%f94, %f78, %f6;
	add.f32 	%f95, %f79, %f7;
	add.f32 	%f96, %f80, %f8;
	add.f32 	%f97, %f81, %f9;
	add.f32 	%f98, %f82, %f10;
	add.f32 	%f99, %f83, %f11;
	add.f32 	%f100, %f84, %f12;
	add.f32 	%f101, %f85, %f13;
	add.f32 	%f102, %f86, %f14;
	add.f32 	%f103, %f87, %f15;
	add.f32 	%f104, %f88, %f16;
	.loc	1 39 25                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:39:25
	add.s64 	%rd11, %rd19, %rd20;
	add.s64 	%rd12, %rd19, %rd21;
	add.s64 	%rd13, %rd19, %rd22;
	add.s64 	%rd14, %rd19, %rd23;
	.loc	1 39 44                         // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:39:44
	mov.b32 	%r73, %f89;
	mov.b32 	%r74, %f90;
	mov.b32 	%r75, %f91;
	mov.b32 	%r76, %f92;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd11 + 0 ], { %r73, %r74, %r75, %r76 };
	// end inline asm
	mov.b32 	%r77, %f93;
	mov.b32 	%r78, %f94;
	mov.b32 	%r79, %f95;
	mov.b32 	%r80, %f96;
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd12 + 0 ], { %r77, %r78, %r79, %r80 };
	// end inline asm
	mov.b32 	%r81, %f97;
	mov.b32 	%r82, %f98;
	mov.b32 	%r83, %f99;
	mov.b32 	%r84, %f100;
	// begin inline asm
	@%p3 st.global.v4.b32 [ %rd13 + 0 ], { %r81, %r82, %r83, %r84 };
	// end inline asm
	mov.b32 	%r85, %f101;
	mov.b32 	%r86, %f102;
	mov.b32 	%r87, %f103;
	mov.b32 	%r88, %f104;
	// begin inline asm
	@%p4 st.global.v4.b32 [ %rd14 + 0 ], { %r85, %r86, %r87, %r88 };
	// end inline asm
	.loc	1 39 4                          // cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py:39:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 97
.b8 105
.b8 113
.b8 98
.b8 106
.b8 113
.b8 53
.b8 101
.b8 118
.b8 55
.b8 101
.b8 111
.b8 111
.b8 104
.b8 117
.b8 50
.b8 116
.b8 119
.b8 122
.b8 102
.b8 111
.b8 53
.b8 122
.b8 120
.b8 103
.b8 115
.b8 114
.b8 52
.b8 113
.b8 122
.b8 116
.b8 120
.b8 108
.b8 52
.b8 112
.b8 117
.b8 99
.b8 98
.b8 100
.b8 111
.b8 98
.b8 99
.b8 54
.b8 120
.b8 117
.b8 103
.b8 99
.b8 103
.b8 97
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 97
.b8 0
	}
	.section	.debug_macinfo	{	}
