//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_mean_43 // -- Begin function triton_poi_fused__native_batch_norm_legit_mean_43
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused__native_batch_norm_legit_mean_43
.visible .entry triton_poi_fused__native_batch_norm_legit_mean_43(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_mean_43_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_mean_43_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_mean_43_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_mean_43_param_3,
	.param .u32 triton_poi_fused__native_batch_norm_legit_mean_43_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<40>;
	.reg .f32 	%f<47>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_mean_43_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_mean_43_param_1];
$L__tmp0:
	.loc	1 21 28                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:21:33
	shl.b32 	%r34, %r1, 8;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_mean_43_param_2];
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_mean_43_param_3];
	.loc	1 22 36                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:22:36
	mov.u32 	%r35, %tid.x;
	shl.b32 	%r36, %r35, 1;
	and.b32  	%r37, %r36, 254;
	.loc	1 22 23                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:22:23
	or.b32  	%r38, %r34, %r37;
	.loc	1 25 32                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:25:32
	shl.b32 	%r39, %r38, 2;
	.loc	1 25 30                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:25:30
	mul.wide.s32 	%rd16, %r39, 4;
	add.s64 	%rd1, %rd12, %rd16;
	add.s64 	%rd2, %rd1, 16;
	mov.pred 	%p1, -1;
	.loc	1 25 37                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:25:37
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 26 30                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:26:30
	add.s64 	%rd3, %rd1, 4;
	add.s64 	%rd4, %rd1, 20;
	.loc	1 26 41                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:26:41
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r5;
	.loc	1 27 30                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:27:30
	add.s64 	%rd5, %rd1, 8;
	add.s64 	%rd6, %rd1, 24;
	.loc	1 27 41                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:27:41
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r7;
	.loc	1 28 30                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:28:30
	add.s64 	%rd7, %rd1, 12;
	add.s64 	%rd8, %rd1, 28;
	.loc	1 28 41                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:28:41
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r9;
	.loc	1 29 18                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:29:18
	add.f32 	%f9, %f1, %f3;
	add.f32 	%f10, %f2, %f4;
	.loc	1 30 18                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:30:18
	add.f32 	%f11, %f9, %f5;
	add.f32 	%f12, %f10, %f6;
	.loc	1 31 18                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:31:18
	add.f32 	%f13, %f11, %f7;
	add.f32 	%f14, %f12, %f8;
	.loc	1 33 18                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:33:18
	mov.b32 	%r11, %f13;
	mov.b32 	%r12, 1082130432;
	// begin inline asm
	div.full.f32 %r28, %r11, %r12;
	// end inline asm
	mov.b32 	%f15, %r28;
	mov.b32 	%r14, %f14;
	// begin inline asm
	div.full.f32 %r29, %r14, %r12;
	// end inline asm
	mov.b32 	%f16, %r29;
	.loc	1 34 18                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:34:18
	sub.f32 	%f17, %f1, %f15;
	sub.f32 	%f18, %f2, %f16;
	.loc	1 36 19                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:36:19
	sub.f32 	%f19, %f3, %f15;
	sub.f32 	%f20, %f4, %f16;
	.loc	1 37 20                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:37:20
	mul.f32 	%f21, %f19, %f19;
	mul.f32 	%f22, %f20, %f20;
	.loc	1 38 20                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:38:20
	fma.rn.f32 	%f23, %f17, %f17, %f21;
	fma.rn.f32 	%f24, %f18, %f18, %f22;
	.loc	1 39 19                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:39:19
	sub.f32 	%f25, %f5, %f15;
	sub.f32 	%f26, %f6, %f16;
	.loc	1 41 20                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:41:20
	fma.rn.f32 	%f27, %f25, %f25, %f23;
	fma.rn.f32 	%f28, %f26, %f26, %f24;
	.loc	1 42 19                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:42:19
	sub.f32 	%f29, %f7, %f15;
	sub.f32 	%f30, %f8, %f16;
	.loc	1 44 20                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:44:20
	fma.rn.f32 	%f31, %f29, %f29, %f27;
	fma.rn.f32 	%f32, %f30, %f30, %f28;
	.loc	1 45 20                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:45:20
	mov.b32 	%r17, %f31;
	// begin inline asm
	div.full.f32 %r16, %r17, %r12;
	// end inline asm
	mov.b32 	%f33, %r16;
	mov.b32 	%r20, %f32;
	// begin inline asm
	div.full.f32 %r19, %r20, %r12;
	// end inline asm
	mov.b32 	%f34, %r19;
	.loc	1 47 20                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:47:20
	add.f32 	%f35, %f33, 0f3727C5AC;
	add.f32 	%f36, %f34, 0f3727C5AC;
	.loc	1 48 28                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:48:28
	rsqrt.approx.ftz.f32 	%f37, %f35;
	rsqrt.approx.ftz.f32 	%f38, %f36;
	.loc	1 50 20                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:50:20
	mul.f32 	%f39, %f19, %f37;
	mul.f32 	%f40, %f20, %f38;
	.loc	1 51 20                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:51:20
	fma.rn.f32 	%f41, %f17, %f37, %f39;
	fma.rn.f32 	%f42, %f18, %f38, %f40;
	.loc	1 53 20                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:53:20
	fma.rn.f32 	%f43, %f25, %f37, %f41;
	fma.rn.f32 	%f44, %f26, %f38, %f42;
	.loc	1 55 20                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:55:20
	fma.rn.f32 	%f45, %f29, %f37, %f43;
	fma.rn.f32 	%f46, %f30, %f38, %f44;
	.loc	1 56 20                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:56:20
	mov.b32 	%r23, %f45;
	// begin inline asm
	div.full.f32 %r32, %r23, %r12;
	// end inline asm
	mov.b32 	%r26, %f46;
	// begin inline asm
	div.full.f32 %r33, %r26, %r12;
	// end inline asm
	.loc	1 57 25                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:57:25
	mul.wide.s32 	%rd17, %r38, 4;
	add.s64 	%rd9, %rd13, %rd17;
	.loc	1 57 36                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:57:36
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd9 + 0 ], { %r28, %r29 };
	// end inline asm
	.loc	1 58 25                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:58:25
	add.s64 	%rd10, %rd14, %rd17;
	.loc	1 58 37                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:58:37
	mov.b32 	%r30, %f37;
	mov.b32 	%r31, %f38;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd10 + 0 ], { %r30, %r31 };
	// end inline asm
	.loc	1 59 25                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:59:25
	add.s64 	%rd11, %rd15, %rd17;
	.loc	1 59 37                         // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:59:37
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd11 + 0 ], { %r32, %r33 };
	// end inline asm
	.loc	1 59 4                          // clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py:59:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/lp/clp6dkmlm7er2pufzv6prbup7cwmudxftb7pud2rd2p3xitfsvvm.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 112
.b8 54
.b8 100
.b8 107
.b8 109
.b8 108
.b8 109
.b8 55
.b8 101
.b8 114
.b8 50
.b8 112
.b8 117
.b8 102
.b8 122
.b8 118
.b8 54
.b8 112
.b8 114
.b8 98
.b8 117
.b8 112
.b8 55
.b8 99
.b8 119
.b8 109
.b8 117
.b8 100
.b8 120
.b8 102
.b8 116
.b8 98
.b8 55
.b8 112
.b8 117
.b8 100
.b8 50
.b8 114
.b8 100
.b8 50
.b8 112
.b8 51
.b8 120
.b8 105
.b8 116
.b8 102
.b8 115
.b8 118
.b8 118
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 108
.b8 112
.b8 0
	}
	.section	.debug_macinfo	{	}
