; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_9(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %.fr = freeze i32 %4, !dbg !11
  %5 = shl i32 %.fr, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 192, !dbg !14
  %10 = srem i32 %8, 12, !dbg !15
  %11 = icmp slt i32 %10, 3, !dbg !16
  %12 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !17
  %13 = shufflevector <2 x i32> %12, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !17
  %14 = sdiv <2 x i32> %13, <i32 24, i32 12>, !dbg !17
  %15 = srem <2 x i32> %14, splat (i32 2), !dbg !18
  %16 = shl nsw <2 x i32> %15, <i32 3, i32 1>, !dbg !19
  %17 = shl nsw i32 %10, 4, !dbg !20
  %18 = srem i32 %8, 48, !dbg !21
  %19 = sub nsw i32 %8, %18, !dbg !21
  %20 = add i32 %19, %17, !dbg !22
  %21 = extractelement <2 x i32> %16, i64 0, !dbg !23
  %22 = add i32 %20, %21, !dbg !24
  %23 = extractelement <2 x i32> %16, i64 1, !dbg !25
  %24 = add i32 %22, %23, !dbg !26
  %25 = sext i32 %24 to i64, !dbg !27
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !27
  %27 = and i1 %9, %11, !dbg !28
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %27, i32 0, i1 %27) #1, !dbg !29
  %29 = add nsw i32 %10, -3, !dbg !30
  %30 = icmp ult i32 %29, 3, !dbg !30
  %31 = add i32 %20, -44, !dbg !31
  %32 = add i32 %31, %23, !dbg !32
  %33 = add i32 %32, %21, !dbg !33
  %34 = sext i32 %33 to i64, !dbg !34
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !34
  %36 = and i1 %9, %30, !dbg !35
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %36, i32 0, i1 %36) #1, !dbg !36
  %38 = add nsw i32 %10, -6, !dbg !37
  %39 = icmp ult i32 %38, 3, !dbg !37
  %40 = add i32 %20, -95, !dbg !38
  %41 = add i32 %40, %23, !dbg !39
  %42 = add i32 %41, %21, !dbg !40
  %43 = sext i32 %42 to i64, !dbg !41
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !41
  %45 = and i1 %9, %39, !dbg !42
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %44, i1 %45, i32 0, i1 %45) #1, !dbg !43
  %47 = icmp sgt i32 %10, 8, !dbg !44
  %48 = add i32 %20, -139, !dbg !45
  %49 = add i32 %48, %23, !dbg !25
  %50 = add i32 %49, %21, !dbg !23
  %51 = sext i32 %50 to i64, !dbg !46
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !46
  %53 = and i1 %9, %47, !dbg !47
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %53, i32 0, i1 %53) #1, !dbg !48
  %.v = select i1 %39, i32 %46, i32 %54, !dbg !49
  %.v2 = select i1 %30, i32 %37, i32 %.v, !dbg !50
  %.v3 = select i1 %11, i32 %28, i32 %.v2, !dbg !51
  %55 = sext i32 %8 to i64, !dbg !52
  %56 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %.v3, ptr addrspace(1) %56, i1 %9) #1, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2y4taieuipv24fli4kmhjyao4sbrfhshs6ezpqv7btjjpahlthl.py", directory: "inductor_cache/2y")
!4 = !{ptr @triton_poi_fused_cat_9, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_9, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_9", linkageName: "triton_poi_fused_cat_9", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 33, column: 18, scope: !7)
!17 = !DILocation(line: 26, column: 21, scope: !7)
!18 = !DILocation(line: 26, column: 27, scope: !7)
!19 = !DILocation(line: 34, column: 39, scope: !7)
!20 = !DILocation(line: 34, column: 48, scope: !7)
!21 = !DILocation(line: 34, column: 57, scope: !7)
!22 = !DILocation(line: 34, column: 37, scope: !7)
!23 = !DILocation(line: 48, column: 66, scope: !7)
!24 = !DILocation(line: 34, column: 44, scope: !7)
!25 = !DILocation(line: 48, column: 49, scope: !7)
!26 = !DILocation(line: 34, column: 54, scope: !7)
!27 = !DILocation(line: 34, column: 30, scope: !7)
!28 = !DILocation(line: 34, column: 69, scope: !7)
!29 = !DILocation(line: 34, column: 62, scope: !7)
!30 = !DILocation(line: 38, column: 18, scope: !7)
!31 = !DILocation(line: 39, column: 53, scope: !7)
!32 = !DILocation(line: 39, column: 49, scope: !7)
!33 = !DILocation(line: 39, column: 66, scope: !7)
!34 = !DILocation(line: 39, column: 31, scope: !7)
!35 = !DILocation(line: 39, column: 81, scope: !7)
!36 = !DILocation(line: 39, column: 74, scope: !7)
!37 = !DILocation(line: 43, column: 20, scope: !7)
!38 = !DILocation(line: 44, column: 53, scope: !7)
!39 = !DILocation(line: 44, column: 49, scope: !7)
!40 = !DILocation(line: 44, column: 66, scope: !7)
!41 = !DILocation(line: 44, column: 31, scope: !7)
!42 = !DILocation(line: 44, column: 82, scope: !7)
!43 = !DILocation(line: 44, column: 74, scope: !7)
!44 = !DILocation(line: 45, column: 20, scope: !7)
!45 = !DILocation(line: 48, column: 53, scope: !7)
!46 = !DILocation(line: 48, column: 31, scope: !7)
!47 = !DILocation(line: 48, column: 82, scope: !7)
!48 = !DILocation(line: 48, column: 74, scope: !7)
!49 = !DILocation(line: 49, column: 35, scope: !7)
!50 = !DILocation(line: 50, column: 34, scope: !7)
!51 = !DILocation(line: 51, column: 33, scope: !7)
!52 = !DILocation(line: 52, column: 25, scope: !7)
!53 = !DILocation(line: 52, column: 37, scope: !7)
!54 = !DILocation(line: 52, column: 4, scope: !7)
