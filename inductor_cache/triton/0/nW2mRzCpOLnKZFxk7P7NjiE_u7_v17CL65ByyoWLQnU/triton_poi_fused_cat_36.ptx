//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_36 // -- Begin function triton_poi_fused_cat_36
                                        // @triton_poi_fused_cat_36
.visible .entry triton_poi_fused_cat_36(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_36_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_36_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_36_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_36_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_36_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_36_param_5,
	.param .u32 triton_poi_fused_cat_36_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<44>;
	.reg .b32 	%r<113>;
	.reg .f32 	%f<98>;
	.reg .b64 	%rd<33>;
	.loc	1 19 0                          // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:19:0

// %bb.0:
	ld.param.u64 	%rd16, [triton_poi_fused_cat_36_param_0];
	ld.param.u64 	%rd17, [triton_poi_fused_cat_36_param_1];
$L__tmp0:
	.loc	1 21 28                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:21:33
	shl.b32 	%r84, %r1, 8;
	ld.param.u64 	%rd18, [triton_poi_fused_cat_36_param_2];
	ld.param.u64 	%rd19, [triton_poi_fused_cat_36_param_3];
	.loc	1 22 36                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:22:36
	mov.u32 	%r85, %tid.x;
	shl.b32 	%r86, %r85, 1;
	ld.param.u64 	%rd20, [triton_poi_fused_cat_36_param_4];
	and.b32  	%r87, %r86, 254;
	ld.param.u64 	%rd21, [triton_poi_fused_cat_36_param_5];
	.loc	1 22 23                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:22:23
	or.b32  	%r88, %r84, %r87;
	.loc	1 24 21                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:24:21
	shr.s32 	%r90, %r88, 31;
	shr.u32 	%r91, %r90, 28;
	add.s32 	%r92, %r88, %r91;
	shr.s32 	%r93, %r92, 4;
	.loc	1 24 27                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:24:27
	shr.s32 	%r94, %r92, 31;
	shr.u32 	%r95, %r94, 26;
	add.s32 	%r96, %r93, %r95;
	and.b32  	%r97, %r96, -64;
	sub.s32 	%r98, %r93, %r97;
	.loc	1 25 19                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:25:19
	and.b32  	%r99, %r92, -16;
	sub.s32 	%r100, %r88, %r99;
	.loc	1 26 19                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:26:19
	shr.u32 	%r101, %r90, 22;
	add.s32 	%r102, %r88, %r101;
	shr.s32 	%r103, %r102, 10;
	.loc	1 32 18                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:32:18
	setp.lt.s32 	%p1, %r98, 16;
	.loc	1 33 35                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:33:35
	and.b32  	%r104, %r102, -1024;
	sub.s32 	%r105, %r88, %r104;
	.loc	1 33 49                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:33:49
	shl.b32 	%r106, %r103, 8;
	.loc	1 33 45                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:33:45
	add.s32 	%r107, %r106, %r105;
	.loc	1 33 30                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:33:30
	mul.wide.s32 	%rd22, %r107, 4;
	add.s64 	%rd1, %rd16, %rd22;
	mov.b32 	%r4, 0;
	.loc	1 33 54                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:33:54
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f17, %r2;
	mov.b32 	%f18, %r3;
	.loc	1 34 38                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:34:38
	shl.b32 	%r108, %r103, 6;
	.loc	1 34 35                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:34:35
	add.s32 	%r109, %r108, %r100;
	.loc	1 34 30                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:34:30
	mul.wide.s32 	%rd23, %r109, 4;
	add.s64 	%rd2, %rd17, %rd23;
	.loc	1 34 43                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:34:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r6, %r4;
	@!%p1 mov.u32 %r7, %r4;
	// end inline asm
	mov.b32 	%f19, %r6;
	mov.b32 	%f20, %r7;
	mov.f32 	%f21, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f22, %f21, %f19;
	sub.f32 	%f23, %f21, %f20;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f22, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f23, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f24, %f1, 0f3F800000;
	add.f32 	%f25, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r12, %f24;
	mov.b32 	%r11, 1065353216;
	// begin inline asm
	div.full.f32 %r10, %r11, %r12;
	// end inline asm
	mov.b32 	%f26, %r10;
	mov.b32 	%r15, %f25;
	// begin inline asm
	div.full.f32 %r13, %r11, %r15;
	// end inline asm
	mov.b32 	%f27, %r13;
$L__tmp2:
	.loc	1 37 18                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:37:18
	fma.rn.f32 	%f28, %f26, %f17, %f17;
	fma.rn.f32 	%f29, %f27, %f18, %f18;
	.loc	1 43 20                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:43:20
	and.b32  	%r110, %r98, -16;
	setp.eq.s32 	%p7, %r110, 16;
	.loc	1 44 40                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:44:40
	shl.b32 	%r111, %r98, 4;
	mad.lo.s32 	%r112, %r103, 192, %r109;
	.loc	1 44 31                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:44:31
	cvt.s64.s32 	%rd24, %r111;
	cvt.s64.s32 	%rd25, %r112;
	add.s64 	%rd26, %rd25, %rd24;
	shl.b64 	%rd27, %rd26, 2;
	add.s64 	%rd28, %rd16, %rd27;
	add.s64 	%rd3, %rd28, -1024;
	.loc	1 44 63                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:44:63
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p7 ld.global.v2.b32 { %r16, %r17 }, [ %rd3 + 0 ];
	@!%p7 mov.u32 %r16, %r4;
	@!%p7 mov.u32 %r17, %r4;
	// end inline asm
	mov.b32 	%f30, %r16;
	mov.b32 	%f31, %r17;
	.loc	1 45 31                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:45:31
	add.s64 	%rd29, %rd18, %rd27;
	add.s64 	%rd4, %rd29, -1024;
	.loc	1 45 63                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:45:63
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p7 ld.global.v2.b32 { %r20, %r21 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r20, %r4;
	@!%p7 mov.u32 %r21, %r4;
	// end inline asm
	mov.b32 	%f32, %r20;
	mov.b32 	%f33, %r21;
	.loc	1 46 20                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:46:20
	add.f32 	%f34, %f30, %f32;
	add.f32 	%f35, %f31, %f33;
	.loc	1 47 31                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:47:31
	add.s64 	%rd5, %rd2, 64;
	.loc	1 47 49                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:47:49
	// begin inline asm
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p7 ld.global.L1::evict_last.v2.b32 { %r24, %r25 }, [ %rd5 + 0 ];
	@!%p7 mov.u32 %r24, %r4;
	@!%p7 mov.u32 %r25, %r4;
	// end inline asm
	mov.b32 	%f36, %r24;
	mov.b32 	%f37, %r25;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f38, %f21, %f36;
	sub.f32 	%f39, %f21, %f37;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f6, %f38, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f39, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f40, %f5, 0f3F800000;
	add.f32 	%f41, %f7, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r30, %f40;
	// begin inline asm
	div.full.f32 %r28, %r11, %r30;
	// end inline asm
	mov.b32 	%f42, %r28;
	mov.b32 	%r33, %f41;
	// begin inline asm
	div.full.f32 %r31, %r11, %r33;
	// end inline asm
	mov.b32 	%f43, %r31;
$L__tmp4:
	.loc	1 50 20                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:50:20
	fma.rn.f32 	%f44, %f34, %f42, %f34;
	fma.rn.f32 	%f45, %f35, %f43, %f35;
	.loc	1 56 20                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:56:20
	setp.eq.s32 	%p16, %r110, 32;
	.loc	1 57 31                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:57:31
	add.s64 	%rd6, %rd28, -2048;
	.loc	1 57 63                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:57:63
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	@%p16 ld.global.v2.b32 { %r34, %r35 }, [ %rd6 + 0 ];
	@!%p16 mov.u32 %r34, %r4;
	@!%p16 mov.u32 %r35, %r4;
	// end inline asm
	mov.b32 	%f46, %r34;
	mov.b32 	%f47, %r35;
	.loc	1 58 31                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:58:31
	add.s64 	%rd7, %rd29, -2048;
	.loc	1 58 63                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:58:63
	// begin inline asm
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	@%p16 ld.global.v2.b32 { %r38, %r39 }, [ %rd7 + 0 ];
	@!%p16 mov.u32 %r38, %r4;
	@!%p16 mov.u32 %r39, %r4;
	// end inline asm
	mov.b32 	%f48, %r38;
	mov.b32 	%f49, %r39;
	.loc	1 59 20                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:59:20
	add.f32 	%f50, %f46, %f48;
	add.f32 	%f51, %f47, %f49;
	.loc	1 60 31                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:60:31
	add.s64 	%rd30, %rd19, %rd27;
	add.s64 	%rd8, %rd30, -2048;
	.loc	1 60 63                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:60:63
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	@%p16 ld.global.v2.b32 { %r42, %r43 }, [ %rd8 + 0 ];
	@!%p16 mov.u32 %r42, %r4;
	@!%p16 mov.u32 %r43, %r4;
	// end inline asm
	mov.b32 	%f52, %r42;
	mov.b32 	%f53, %r43;
	.loc	1 61 20                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:61:20
	add.f32 	%f54, %f50, %f52;
	add.f32 	%f55, %f51, %f53;
	.loc	1 62 31                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:62:31
	add.s64 	%rd9, %rd2, 128;
	.loc	1 62 49                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:62:49
	// begin inline asm
	mov.u32 %r46, 0x0;
	mov.u32 %r47, 0x0;
	@%p16 ld.global.L1::evict_last.v2.b32 { %r46, %r47 }, [ %rd9 + 0 ];
	@!%p16 mov.u32 %r46, %r4;
	@!%p16 mov.u32 %r47, %r4;
	// end inline asm
	mov.b32 	%f56, %r46;
	mov.b32 	%f57, %r47;
$L__tmp5:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f58, %f21, %f56;
	sub.f32 	%f59, %f21, %f57;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f10, %f58, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f59, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f60, %f9, 0f3F800000;
	add.f32 	%f61, %f11, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r52, %f60;
	// begin inline asm
	div.full.f32 %r50, %r11, %r52;
	// end inline asm
	mov.b32 	%f62, %r50;
	mov.b32 	%r55, %f61;
	// begin inline asm
	div.full.f32 %r53, %r11, %r55;
	// end inline asm
	mov.b32 	%f63, %r53;
$L__tmp6:
	.loc	1 65 20                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:65:20
	fma.rn.f32 	%f64, %f54, %f62, %f54;
	fma.rn.f32 	%f65, %f55, %f63, %f55;
	.loc	1 68 20                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:68:20
	setp.gt.s32 	%p28, %r98, 47;
	.loc	1 71 31                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:71:31
	add.s64 	%rd10, %rd28, -3072;
	.loc	1 71 63                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:71:63
	// begin inline asm
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	@%p28 ld.global.v2.b32 { %r56, %r57 }, [ %rd10 + 0 ];
	@!%p28 mov.u32 %r56, %r4;
	@!%p28 mov.u32 %r57, %r4;
	// end inline asm
	mov.b32 	%f66, %r56;
	mov.b32 	%f67, %r57;
	.loc	1 72 31                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:72:31
	add.s64 	%rd11, %rd29, -3072;
	.loc	1 72 63                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:72:63
	// begin inline asm
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	@%p28 ld.global.v2.b32 { %r60, %r61 }, [ %rd11 + 0 ];
	@!%p28 mov.u32 %r60, %r4;
	@!%p28 mov.u32 %r61, %r4;
	// end inline asm
	mov.b32 	%f68, %r60;
	mov.b32 	%f69, %r61;
	.loc	1 73 20                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:73:20
	add.f32 	%f70, %f66, %f68;
	add.f32 	%f71, %f67, %f69;
	.loc	1 74 31                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:74:31
	add.s64 	%rd12, %rd30, -3072;
	.loc	1 74 63                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:74:63
	// begin inline asm
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	@%p28 ld.global.v2.b32 { %r64, %r65 }, [ %rd12 + 0 ];
	@!%p28 mov.u32 %r64, %r4;
	@!%p28 mov.u32 %r65, %r4;
	// end inline asm
	mov.b32 	%f72, %r64;
	mov.b32 	%f73, %r65;
	.loc	1 75 20                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:75:20
	add.f32 	%f74, %f70, %f72;
	add.f32 	%f75, %f71, %f73;
	.loc	1 76 31                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:76:31
	add.s64 	%rd31, %rd20, %rd27;
	add.s64 	%rd13, %rd31, -3072;
	.loc	1 76 63                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:76:63
	// begin inline asm
	mov.u32 %r68, 0x0;
	mov.u32 %r69, 0x0;
	@%p28 ld.global.v2.b32 { %r68, %r69 }, [ %rd13 + 0 ];
	@!%p28 mov.u32 %r68, %r4;
	@!%p28 mov.u32 %r69, %r4;
	// end inline asm
	mov.b32 	%f76, %r68;
	mov.b32 	%f77, %r69;
	.loc	1 77 20                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:77:20
	add.f32 	%f78, %f74, %f76;
	add.f32 	%f79, %f75, %f77;
	.loc	1 78 31                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:78:31
	add.s64 	%rd14, %rd2, 192;
	.loc	1 78 49                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:78:49
	// begin inline asm
	mov.u32 %r72, 0x0;
	mov.u32 %r73, 0x0;
	@%p28 ld.global.L1::evict_last.v2.b32 { %r72, %r73 }, [ %rd14 + 0 ];
	@!%p28 mov.u32 %r72, %r4;
	@!%p28 mov.u32 %r73, %r4;
	// end inline asm
	mov.b32 	%f80, %r72;
	mov.b32 	%f81, %r73;
$L__tmp7:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f82, %f21, %f80;
	sub.f32 	%f83, %f21, %f81;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f14, %f82, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f83, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f84, %f13, 0f3F800000;
	add.f32 	%f85, %f15, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r78, %f84;
	// begin inline asm
	div.full.f32 %r76, %r11, %r78;
	// end inline asm
	mov.b32 	%f86, %r76;
	mov.b32 	%r81, %f85;
	// begin inline asm
	div.full.f32 %r79, %r11, %r81;
	// end inline asm
	mov.b32 	%f87, %r79;
$L__tmp8:
	.loc	1 81 20                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:81:20
	fma.rn.f32 	%f88, %f78, %f86, %f78;
	fma.rn.f32 	%f89, %f79, %f87, %f79;
	.loc	1 83 35                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:83:35
	selp.f32 	%f90, %f88, 0f00000000, %p28;
	selp.f32 	%f91, %f89, 0f00000000, %p28;
	.loc	1 0 0                           // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:0:0
	selp.f32 	%f92, %f64, %f90, %p16;
	selp.f32 	%f93, %f65, %f91, %p16;
	selp.f32 	%f94, %f44, %f92, %p7;
	selp.f32 	%f95, %f45, %f93, %p7;
	selp.f32 	%f96, %f28, %f94, %p1;
	selp.f32 	%f97, %f29, %f95, %p1;
	.loc	1 87 25                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:87:25
	mul.wide.s32 	%rd32, %r88, 4;
	add.s64 	%rd15, %rd21, %rd32;
	.loc	1 87 37                         // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:87:37
	mov.b32 	%r82, %f96;
	mov.b32 	%r83, %f97;
	mov.pred 	%p43, -1;
	// begin inline asm
	@%p43 st.global.v2.b32 [ %rd15 + 0 ], { %r82, %r83 };
	// end inline asm
	.loc	1 87 4                          // ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py:87:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/tv/ctvku4udfn4nsdvaftvuqltt6rlfuvouo5rtrjt6iyndfvgbp2fo.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 240                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 118
.b8 107
.b8 117
.b8 52
.b8 117
.b8 100
.b8 102
.b8 110
.b8 52
.b8 110
.b8 115
.b8 100
.b8 118
.b8 97
.b8 102
.b8 116
.b8 118
.b8 117
.b8 113
.b8 108
.b8 116
.b8 116
.b8 54
.b8 114
.b8 108
.b8 102
.b8 117
.b8 118
.b8 111
.b8 117
.b8 111
.b8 53
.b8 114
.b8 116
.b8 114
.b8 106
.b8 116
.b8 54
.b8 105
.b8 121
.b8 110
.b8 100
.b8 102
.b8 118
.b8 103
.b8 98
.b8 112
.b8 50
.b8 102
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 51
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7d:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x92:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 35                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xaa:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 63                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xda:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 79                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
