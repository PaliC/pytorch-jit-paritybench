//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_view_1 // -- Begin function triton_poi_fused_clone_view_1
                                        // @triton_poi_fused_clone_view_1
.visible .entry triton_poi_fused_clone_view_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_view_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_view_1_param_1,
	.param .u32 triton_poi_fused_clone_view_1_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<54>;
	.reg .f32 	%f<25>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused_clone_view_1_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_clone_view_1_param_1];
$L__tmp0:
	.loc	1 21 28                         // cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py:21:33
	shl.b32 	%r26, %r1, 10;
	.loc	1 22 36                         // cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py:22:36
	mov.u32 	%r27, %tid.x;
	shl.b32 	%r28, %r27, 2;
	and.b32  	%r29, %r28, 508;
	.loc	1 22 23                         // cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py:22:23
	or.b32  	%r30, %r26, %r29;
	or.b32  	%r31, %r30, 2;
	or.b32  	%r32, %r30, 512;
	or.b32  	%r33, %r30, 514;
	.loc	1 25 19                         // cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py:25:19
	mul.hi.s32 	%r34, %r30, 715827883;
	shr.u32 	%r35, %r34, 31;
	add.s32 	%r36, %r34, %r35;
	mul.lo.s32 	%r37, %r36, 6;
	sub.s32 	%r38, %r30, %r37;
	mul.hi.s32 	%r39, %r31, 715827883;
	shr.u32 	%r40, %r39, 31;
	add.s32 	%r41, %r39, %r40;
	mul.lo.s32 	%r42, %r41, 6;
	sub.s32 	%r43, %r31, %r42;
	mul.hi.s32 	%r44, %r32, 715827883;
	shr.u32 	%r45, %r44, 31;
	add.s32 	%r46, %r44, %r45;
	mul.lo.s32 	%r47, %r46, 6;
	sub.s32 	%r48, %r32, %r47;
	mul.hi.s32 	%r49, %r33, 715827883;
	shr.u32 	%r50, %r49, 31;
	add.s32 	%r51, %r49, %r50;
	mul.lo.s32 	%r52, %r51, 6;
	sub.s32 	%r53, %r33, %r52;
	.loc	1 26 34                         // cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py:26:34
	mul.wide.s32 	%rd11, %r30, 4;
	add.s64 	%rd1, %rd9, %rd11;
	add.s64 	%rd2, %rd1, 2048;
	mov.pred 	%p1, -1;
	.loc	1 26 39                         // cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py:26:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r9;
	.loc	1 27 30                         // cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py:27:30
	mul.wide.s32 	%rd12, %r38, 4;
	add.s64 	%rd3, %rd10, %rd12;
	mul.wide.s32 	%rd13, %r43, 4;
	add.s64 	%rd4, %rd10, %rd13;
	mul.wide.s32 	%rd14, %r48, 4;
	add.s64 	%rd5, %rd10, %rd14;
	mul.wide.s32 	%rd15, %r53, 4;
	add.s64 	%rd6, %rd10, %rd15;
	.loc	1 27 35                         // cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py:27:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	mov.b32 	%f10, %r11;
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r12;
	mov.b32 	%f12, %r13;
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r14, %r15 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r14;
	mov.b32 	%f14, %r15;
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r16, %r17 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r16;
	mov.b32 	%f16, %r17;
	.loc	1 28 18                         // cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py:28:18
	add.f32 	%f17, %f1, %f9;
	add.f32 	%f18, %f2, %f10;
	add.f32 	%f19, %f3, %f11;
	add.f32 	%f20, %f4, %f12;
	add.f32 	%f21, %f5, %f13;
	add.f32 	%f22, %f6, %f14;
	add.f32 	%f23, %f7, %f15;
	add.f32 	%f24, %f8, %f16;
	.loc	1 29 39                         // cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py:29:39
	mov.b32 	%r18, %f17;
	mov.b32 	%r19, %f18;
	mov.b32 	%r20, %f19;
	mov.b32 	%r21, %f20;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r18, %r19, %r20, %r21 };
	// end inline asm
	mov.b32 	%r22, %f21;
	mov.b32 	%r23, %f22;
	mov.b32 	%r24, %f23;
	mov.b32 	%r25, %f24;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r22, %r23, %r24, %r25 };
	// end inline asm
	.loc	1 29 4                          // cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py:29:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ar/cargfxn6llrdemz4uvotv2xcl2vfdry4asvyeda57dpqukf74fh6.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 97
.b8 114
.b8 103
.b8 102
.b8 120
.b8 110
.b8 54
.b8 108
.b8 108
.b8 114
.b8 100
.b8 101
.b8 109
.b8 122
.b8 52
.b8 117
.b8 118
.b8 111
.b8 116
.b8 118
.b8 50
.b8 120
.b8 99
.b8 108
.b8 50
.b8 118
.b8 102
.b8 100
.b8 114
.b8 121
.b8 52
.b8 97
.b8 115
.b8 118
.b8 121
.b8 101
.b8 100
.b8 97
.b8 53
.b8 55
.b8 100
.b8 112
.b8 113
.b8 117
.b8 107
.b8 102
.b8 55
.b8 52
.b8 102
.b8 104
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 97
.b8 114
.b8 0
	}
	.section	.debug_macinfo	{	}
