//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_mul_0 // -- Begin function triton_poi_fused_cat_mul_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
                                        // @triton_poi_fused_cat_mul_0
.visible .entry triton_poi_fused_cat_mul_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_mul_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_mul_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_mul_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_mul_0_param_3,
	.param .u32 triton_poi_fused_cat_mul_0_param_4
)
.reqntid 32, 1, 1
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<31>;
	.reg .b32 	%r<133>;
	.reg .f32 	%f<96>;
	.reg .b64 	%rd<36>;
	.reg .f64 	%fd<5>;
	.loc	1 19 0                          // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:19:0

// %bb.0:
	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd10, [triton_poi_fused_cat_mul_0_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_cat_mul_0_param_1];
	add.u64 	%rd12, %SPL, 0;
	add.u64 	%rd14, %SPL, 0;
$L__tmp0:
	.loc	1 21 28                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:21:28
	// begin inline asm
	mov.u32 %r46, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:21:33
	shl.b32 	%r50, %r46, 4;
	.loc	1 22 36                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:22:36
	mov.u32 	%r3, %tid.x;
	and.b32  	%r51, %r3, 15;
	.loc	1 22 23                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:22:23
	or.b32  	%r4, %r50, %r51;
	.loc	1 23 21                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:23:21
	setp.lt.s32 	%p4, %r4, 16;
	.loc	1 25 19                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:25:19
	shr.s32 	%r53, %r4, 31;
	shr.u32 	%r54, %r53, 30;
	add.s32 	%r55, %r4, %r54;
	shr.s32 	%r56, %r55, 2;
	.loc	1 24 19                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:24:19
	and.b32  	%r57, %r55, -4;
	sub.s32 	%r5, %r4, %r57;
	mov.pred 	%p1, -1;
	.loc	1 27 20                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:27:20
	// begin inline asm
	mov.u32 %r47, 0x0;
	@%p1 ld.global.b32 { %r47 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 33 18                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:33:18
	setp.lt.s32 	%p5, %r5, 2;
	.loc	1 34 30                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:34:30
	mul.wide.s32 	%rd15, %r5, 4;
	add.s64 	%rd9, %rd10, %rd15;
	.loc	1 34 42                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:34:42
	and.pred  	%p2, %p4, %p5;
	mov.b32 	%r124, 0;
	.loc	1 34 35                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:34:35
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r48 }, [ %rd9 + 0 ];
	@!%p2 mov.u32 %r48, %r124;
	// end inline asm
	mov.b32 	%f34, %r48;
	.loc	1 36 19                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:36:19
	cvt.rn.f32.s32 	%f1, %r56;
	.loc	1 37 18                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:37:18
	mul.f32 	%f2, %f34, %f1;
	.loc	1 38 23                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:38:23
	mul.f32 	%f35, %f2, 0f3F22F983;
	cvt.rni.ftz.s32.f32 	%r127, %f35;
	cvt.rn.f32.s32 	%f36, %r127;
	mov.f32 	%f37, 0fBFC90FDA;
	fma.rn.ftz.f32 	%f38, %f36, %f37, %f2;
	mov.f32 	%f39, 0fB3A22168;
	fma.rn.ftz.f32 	%f40, %f36, %f39, %f38;
	mov.f32 	%f41, 0fA7C234C5;
	fma.rn.ftz.f32 	%f86, %f36, %f41, %f40;
	abs.ftz.f32 	%f4, %f2;
	setp.ltu.f32 	%p6, %f4, 0f47CE4780;
	mov.f32 	%f83, 0f00000000;
	@%p6 bra 	$L__BB0_8;
// %bb.1:                               // %__nv_isinff.exit.i.i.i
	setp.neu.f32 	%p7, %f4, 0f7F800000;
	@%p7 bra 	$L__BB0_3;
// %bb.2:                               // %__nv_fmul_rn.exit.i.i.i
	mul.rn.ftz.f32 	%f86, %f2, %f83;
	mov.b32 	%r127, 0;
	bra.uni 	$L__BB0_8;
$L__BB0_3:
	.loc	1 0 23                          // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:0:23
	cvt.u32.u64 	%r2, %rd14;
	.loc	1 38 23                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:38:23
	mov.b32 	%r8, %f2;
	shr.u32 	%r9, %r8, 23;
	and.b32  	%r59, %r9, 224;
	add.s32 	%r60, %r59, -128;
	shl.b32 	%r61, %r8, 8;
	or.b32  	%r65, %r61, -2147483648;
	shr.u32 	%r11, %r60, 5;
	mov.u64 	%rd34, 0;
	mov.u64 	%rd17, __cudart_i2opi_f;
	mov.u32 	%r123, %r2;
$L__BB0_4:                              // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	add.s64 	%rd18, %rd17, %rd34;
	ld.global.nc.u32 	%r64, [%rd18];
	// begin inline asm
	{
	mad.lo.cc.u32   %r62, %r64, %r65, %r124;
	madc.hi.u32     %r124, %r64, %r65,  0;
	}
	// end inline asm
	st.local.u32 	[%r123], %r62;
	add.s32 	%r123, %r123, 4;
	add.s64 	%rd34, %rd34, 4;
	setp.ne.s64 	%p8, %rd34, 24;
	@%p8 bra 	$L__BB0_4;
// %bb.5:
	st.local.u32 	[%r2+24], %r124;
	and.b32  	%r16, %r9, 31;
	shl.b32 	%r67, %r11, 2;
	sub.s32 	%r17, %r2, %r67;
	ld.local.u32 	%r125, [%r17+24];
	ld.local.u32 	%r126, [%r17+20];
	setp.eq.s32 	%p9, %r16, 0;
	@%p9 bra 	$L__BB0_7;
// %bb.6:
	.loc	1 0 23                          // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:0:23
	mov.b32 	%r68, 32;
	.loc	1 38 23                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:38:23
	sub.s32 	%r69, %r68, %r16;
	shl.b32 	%r70, %r125, %r16;
	shr.u32 	%r71, %r126, %r69;
	add.s32 	%r125, %r71, %r70;
	shl.b32 	%r72, %r126, %r16;
	ld.local.u32 	%r73, [%r17+16];
	shr.u32 	%r74, %r73, %r69;
	add.s32 	%r126, %r74, %r72;
$L__BB0_7:                              // %__internal_trig_reduction_slowpath.exit.i.i.i
	shr.u32 	%r75, %r125, 30;
	shf.l.wrap.b32 	%r76, %r126, %r125, 2;
	shl.b32 	%r77, %r126, 2;
	shr.u32 	%r78, %r76, 31;
	add.s32 	%r79, %r78, %r75;
	neg.s32 	%r80, %r79;
	setp.lt.s32 	%p10, %r8, 0;
	selp.b32 	%r127, %r80, %r79, %p10;
	xor.b32  	%r81, %r76, %r8;
	shr.s32 	%r82, %r76, 31;
	xor.b32  	%r83, %r82, %r76;
	xor.b32  	%r84, %r82, %r77;
	cvt.u64.u32 	%rd19, %r83;
	shl.b64 	%rd20, %rd19, 32;
	cvt.u64.u32 	%rd21, %r84;
	or.b64  	%rd22, %rd20, %rd21;
	cvt.rn.f64.s64 	%fd1, %rd22;
	mul.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f42, %fd2;
	neg.f32 	%f43, %f42;
	setp.lt.s32 	%p11, %r81, 0;
	selp.f32 	%f86, %f43, %f42, %p11;
$L__BB0_8:                              // %__internal_trig_reduction_kernel.exit.i.i
	mul.rn.ftz.f32 	%f8, %f86, %f86;
	and.b32  	%r86, %r127, 1;
	setp.eq.b32 	%p12, %r86, 1;
	selp.f32 	%f9, 0f3F800000, %f86, %p12;
	fma.rn.ftz.f32 	%f10, %f8, %f9, %f83;
	mov.f32 	%f49, 0fBAB607ED;
	mov.f32 	%f50, 0f37CBAC00;
	mov.f32 	%f89, 0fB94D4153;
	mov.f32 	%f88, 0f3C0885E4;
	mov.f32 	%f87, 0fBE2AAAA8;
	@!%p12 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_9:                              // %__internal_fmad.exit1.i.i.i
	.loc	1 0 23                          // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:0:23
	fma.rn.ftz.f32 	%f89, %f50, %f8, %f49;
	mov.f32 	%f88, 0f3D2AAABB;
	mov.f32 	%f87, 0fBEFFFFFF;
$L__BB0_10:                             // %__internal_fmad.exit2.i.i.i
	.loc	1 38 23                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:38:23
	fma.rn.ftz.f32 	%f53, %f89, %f8, %f88;
	fma.rn.ftz.f32 	%f54, %f53, %f8, %f87;
	fma.rn.ftz.f32 	%f90, %f54, %f10, %f9;
	and.b32  	%r87, %r127, 2;
	setp.eq.s32 	%p13, %r87, 0;
	mov.f32 	%f56, 0fBF800000;
	@%p13 bra 	$L__BB0_12;
// %bb.11:                              // %__internal_fmad.exit5.i.i.i
	.loc	1 0 23                          // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:0:23
	fma.rn.ftz.f32 	%f90, %f90, %f56, %f83;
$L__BB0_12:                             // %__nv_sinf.exit
	.loc	1 41 20                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:41:20
	setp.gt.s32 	%p17, %r5, 1;
	.loc	1 44 31                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:44:31
	add.s64 	%rd23, %rd9, -8;
	.loc	1 44 51                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:44:51
	and.pred  	%p14, %p4, %p17;
	mov.b32 	%r129, 0;
	.loc	1 44 43                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:44:43
	// begin inline asm
	mov.u32 %r88, 0x0;
	@%p14 ld.global.L1::evict_last.b32 { %r88 }, [ %rd23 + 0 ];
	@!%p14 mov.u32 %r88, %r129;
	// end inline asm
	mov.b32 	%f57, %r88;
	.loc	1 47 20                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:47:20
	mul.f32 	%f18, %f1, %f57;
	.loc	1 48 24                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:48:24
	mul.f32 	%f58, %f18, 0f3F22F983;
	cvt.rni.ftz.s32.f32 	%r132, %f58;
	cvt.rn.f32.s32 	%f59, %r132;
	fma.rn.ftz.f32 	%f61, %f59, %f37, %f18;
	fma.rn.ftz.f32 	%f63, %f59, %f39, %f61;
	fma.rn.ftz.f32 	%f91, %f59, %f41, %f63;
	abs.ftz.f32 	%f20, %f18;
	setp.ltu.f32 	%p18, %f20, 0f47CE4780;
	@%p18 bra 	$L__BB0_20;
// %bb.13:                              // %__nv_isinff.exit.i.i.i12
	setp.neu.f32 	%p19, %f20, 0f7F800000;
	@%p19 bra 	$L__BB0_15;
// %bb.14:                              // %__nv_fmul_rn.exit.i.i.i51
	mul.rn.ftz.f32 	%f91, %f18, %f83;
	mov.b32 	%r132, 0;
	bra.uni 	$L__BB0_20;
$L__BB0_15:
	.loc	1 0 24                          // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:0:24
	cvt.u32.u64 	%r1, %rd12;
	.loc	1 48 24                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:48:24
	mov.b32 	%r27, %f18;
	shr.u32 	%r28, %r27, 23;
	and.b32  	%r91, %r28, 224;
	add.s32 	%r92, %r91, -128;
	shl.b32 	%r93, %r27, 8;
	or.b32  	%r97, %r93, -2147483648;
	shr.u32 	%r30, %r92, 5;
	mov.u64 	%rd35, 0;
	mov.u64 	%rd25, __cudart_i2opi_f;
	mov.u32 	%r128, %r1;
$L__BB0_16:                             // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	add.s64 	%rd26, %rd25, %rd35;
	ld.global.nc.u32 	%r96, [%rd26];
	// begin inline asm
	{
	mad.lo.cc.u32   %r94, %r96, %r97, %r129;
	madc.hi.u32     %r129, %r96, %r97,  0;
	}
	// end inline asm
	st.local.u32 	[%r128], %r94;
	add.s32 	%r128, %r128, 4;
	add.s64 	%rd35, %rd35, 4;
	setp.ne.s64 	%p20, %rd35, 24;
	@%p20 bra 	$L__BB0_16;
// %bb.17:
	st.local.u32 	[%r1+24], %r129;
	and.b32  	%r35, %r28, 31;
	shl.b32 	%r99, %r30, 2;
	sub.s32 	%r36, %r1, %r99;
	ld.local.u32 	%r130, [%r36+24];
	ld.local.u32 	%r131, [%r36+20];
	setp.eq.s32 	%p21, %r35, 0;
	@%p21 bra 	$L__BB0_19;
// %bb.18:
	.loc	1 0 24                          // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:0:24
	mov.b32 	%r100, 32;
	.loc	1 48 24                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:48:24
	sub.s32 	%r101, %r100, %r35;
	shl.b32 	%r102, %r130, %r35;
	shr.u32 	%r103, %r131, %r101;
	add.s32 	%r130, %r103, %r102;
	shl.b32 	%r104, %r131, %r35;
	ld.local.u32 	%r105, [%r36+16];
	shr.u32 	%r106, %r105, %r101;
	add.s32 	%r131, %r106, %r104;
$L__BB0_19:                             // %__internal_trig_reduction_slowpath.exit.i.i.i18
	shr.u32 	%r107, %r130, 30;
	shf.l.wrap.b32 	%r108, %r131, %r130, 2;
	shl.b32 	%r109, %r131, 2;
	shr.u32 	%r110, %r108, 31;
	add.s32 	%r111, %r110, %r107;
	neg.s32 	%r112, %r111;
	setp.lt.s32 	%p22, %r27, 0;
	selp.b32 	%r132, %r112, %r111, %p22;
	xor.b32  	%r113, %r108, %r27;
	shr.s32 	%r114, %r108, 31;
	xor.b32  	%r115, %r114, %r108;
	xor.b32  	%r116, %r114, %r109;
	cvt.u64.u32 	%rd27, %r115;
	shl.b64 	%rd28, %rd27, 32;
	cvt.u64.u32 	%rd29, %r116;
	or.b64  	%rd30, %rd28, %rd29;
	cvt.rn.f64.s64 	%fd3, %rd30;
	mul.f64 	%fd4, %fd3, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f65, %fd4;
	neg.f32 	%f66, %f65;
	setp.lt.s32 	%p23, %r113, 0;
	selp.f32 	%f91, %f66, %f65, %p23;
$L__BB0_20:                             // %__internal_trig_reduction_kernel.exit.i.i29
	add.s32 	%r45, %r132, 1;
	mul.rn.ftz.f32 	%f24, %f91, %f91;
	and.b32  	%r118, %r132, 1;
	setp.eq.b32 	%p24, %r118, 1;
	selp.f32 	%f25, %f91, 0f3F800000, %p24;
	fma.rn.ftz.f32 	%f26, %f24, %f25, %f83;
	mov.f32 	%f94, 0fB94D4153;
	mov.f32 	%f93, 0f3C0885E4;
	mov.f32 	%f92, 0fBE2AAAA8;
	@%p24 bra 	$L__BB0_22;
// %bb.21:                              // %__internal_fmad.exit1.i.i.i48
	.loc	1 0 24                          // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:0:24
	fma.rn.ftz.f32 	%f94, %f50, %f24, %f49;
	mov.f32 	%f93, 0f3D2AAABB;
	mov.f32 	%f92, 0fBEFFFFFF;
$L__BB0_22:                             // %__internal_fmad.exit2.i.i.i36
	ld.param.u64 	%rd7, [triton_poi_fused_cat_mul_0_param_3];
	ld.param.u64 	%rd6, [triton_poi_fused_cat_mul_0_param_2];
	.loc	1 48 24                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:48:24
	fma.rn.ftz.f32 	%f76, %f94, %f24, %f93;
	fma.rn.ftz.f32 	%f77, %f76, %f24, %f92;
	fma.rn.ftz.f32 	%f95, %f77, %f26, %f25;
	and.b32  	%r119, %r45, 2;
	setp.eq.s32 	%p25, %r119, 0;
	@%p25 bra 	$L__BB0_24;
// %bb.23:                              // %__internal_fmad.exit5.i.i.i44
	.loc	1 0 24                          // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:0:24
	fma.rn.ftz.f32 	%f95, %f95, %f56, %f83;
$L__BB0_24:                             // %__nv_cosf.exit
	.loc	1 27 20                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:27:20
	mov.b32 	%f80, %r47;
	.loc	1 22 36                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:22:36
	and.b32  	%r122, %r3, 16;
	.loc	1 0 0                           // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:0:0
	selp.f32 	%f81, %f90, %f95, %p5;
	.loc	1 52 20                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:52:20
	mul.f32 	%f82, %f81, %f80;
	.loc	1 53 25                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:53:25
	mul.wide.s32 	%rd33, %r4, 4;
	add.s64 	%rd31, %rd6, %rd33;
	.loc	1 53 37                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:53:37
	setp.eq.s32 	%p30, %r122, 0;
	mov.b32 	%r120, %f81;
	and.pred  	%p26, %p30, %p4;
	// begin inline asm
	@%p26 st.global.b32 [ %rd31 + 0 ], { %r120 };
	// end inline asm
	.loc	1 54 25                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:54:25
	add.s64 	%rd32, %rd7, %rd33;
	.loc	1 54 37                         // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:54:37
	mov.b32 	%r121, %f82;
	// begin inline asm
	@%p26 st.global.b32 [ %rd32 + 0 ], { %r121 };
	// end inline asm
	.loc	1 54 4                          // c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py:54:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/4a/c4agc4l65hob3qi7kbqcnnohvbos5fpinss5gk3cl2txfupvmdhq.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 97
.b8 103
.b8 99
.b8 52
.b8 108
.b8 54
.b8 53
.b8 104
.b8 111
.b8 98
.b8 51
.b8 113
.b8 105
.b8 55
.b8 107
.b8 98
.b8 113
.b8 99
.b8 110
.b8 110
.b8 111
.b8 104
.b8 118
.b8 98
.b8 111
.b8 115
.b8 53
.b8 102
.b8 112
.b8 105
.b8 110
.b8 115
.b8 115
.b8 53
.b8 103
.b8 107
.b8 51
.b8 99
.b8 108
.b8 50
.b8 116
.b8 120
.b8 102
.b8 117
.b8 112
.b8 118
.b8 109
.b8 100
.b8 104
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 52
.b8 97
.b8 0
	}
	.section	.debug_macinfo	{	}
