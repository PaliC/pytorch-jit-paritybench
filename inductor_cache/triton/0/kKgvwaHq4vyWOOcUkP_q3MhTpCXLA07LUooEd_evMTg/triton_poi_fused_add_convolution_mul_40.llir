; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_convolution_mul_40(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, i32 %10) local_unnamed_addr !dbg !7 {
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %13 = shl i32 %12, 7, !dbg !11
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %15 = and i32 %14, 127, !dbg !12
  %16 = or disjoint i32 %13, %15, !dbg !13
  %17 = sext i32 %16 to i64, !dbg !14
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !14
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 true) #1, !dbg !15
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %4, i1 true) #1, !dbg !16
  %21 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !17
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !18
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %5, i1 true) #1, !dbg !19
  %24 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !20
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #1, !dbg !21
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %6, i1 true) #1, !dbg !22
  %27 = getelementptr float, ptr addrspace(1) %3, i64 %17, !dbg !23
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !24
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %7, i1 true) #1, !dbg !25
  %30 = getelementptr i8, ptr addrspace(1) %8, i64 4, !dbg !26
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #1, !dbg !27
  %32 = getelementptr i8, ptr addrspace(1) %8, i64 8, !dbg !28
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 true) #1, !dbg !29
  %34 = getelementptr i8, ptr addrspace(1) %8, i64 12, !dbg !30
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #1, !dbg !31
  %36 = getelementptr i8, ptr addrspace(1) %8, i64 16, !dbg !32
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 true) #1, !dbg !33
  %38 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !15
  %39 = insertelement <2 x i32> %38, i32 %22, i64 1, !dbg !15
  %40 = bitcast <2 x i32> %39 to <2 x float>, !dbg !15
  %41 = insertelement <2 x i32> poison, i32 %20, i64 0, !dbg !16
  %42 = insertelement <2 x i32> %41, i32 %23, i64 1, !dbg !16
  %43 = bitcast <2 x i32> %42 to <2 x float>, !dbg !16
  %44 = insertelement <2 x i32> poison, i32 %31, i64 0, !dbg !27
  %45 = insertelement <2 x i32> %44, i32 %33, i64 1, !dbg !27
  %46 = bitcast <2 x i32> %45 to <2 x float>, !dbg !27
  %47 = fadd <2 x float> %40, %43, !dbg !34
  %48 = fmul <2 x float> %47, %46, !dbg !35
  %shift = shufflevector <2 x float> %48, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !36
  %49 = fadd <2 x float> %48, %shift, !dbg !36
  %50 = insertelement <2 x i32> poison, i32 %25, i64 0, !dbg !21
  %51 = insertelement <2 x i32> %50, i32 %28, i64 1, !dbg !21
  %52 = bitcast <2 x i32> %51 to <2 x float>, !dbg !21
  %53 = insertelement <2 x i32> poison, i32 %26, i64 0, !dbg !22
  %54 = insertelement <2 x i32> %53, i32 %29, i64 1, !dbg !22
  %55 = bitcast <2 x i32> %54 to <2 x float>, !dbg !22
  %56 = insertelement <2 x i32> poison, i32 %35, i64 0, !dbg !31
  %57 = insertelement <2 x i32> %56, i32 %37, i64 1, !dbg !31
  %58 = bitcast <2 x i32> %57 to <2 x float>, !dbg !31
  %59 = fadd <2 x float> %52, %55, !dbg !37
  %60 = fmul <2 x float> %59, %58, !dbg !38
  %61 = fadd <2 x float> %49, %60, !dbg !39
  %shift1 = shufflevector <2 x float> %60, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %62 = fadd <2 x float> %61, %shift1, !dbg !40
  %bc = bitcast <2 x float> %47 to <2 x i32>, !dbg !41
  %63 = extractelement <2 x i32> %bc, i64 0, !dbg !41
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %63, ptr addrspace(1) %18, i1 true) #1, !dbg !41
  %bc2 = bitcast <2 x float> %47 to <2 x i32>, !dbg !42
  %64 = extractelement <2 x i32> %bc2, i64 1, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %64, ptr addrspace(1) %21, i1 true) #1, !dbg !42
  %bc3 = bitcast <2 x float> %59 to <2 x i32>, !dbg !43
  %65 = extractelement <2 x i32> %bc3, i64 0, !dbg !43
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %65, ptr addrspace(1) %24, i1 true) #1, !dbg !43
  %bc4 = bitcast <2 x float> %59 to <2 x i32>, !dbg !44
  %66 = extractelement <2 x i32> %bc4, i64 1, !dbg !44
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %66, ptr addrspace(1) %27, i1 true) #1, !dbg !44
  %67 = getelementptr float, ptr addrspace(1) %9, i64 %17, !dbg !45
  %bc5 = bitcast <2 x float> %62 to <2 x i32>, !dbg !46
  %68 = extractelement <2 x i32> %bc5, i64 0, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %68, ptr addrspace(1) %67, i1 true) #1, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpfmzzwv5vxlwb7qsa6byji2tfg66e5ljhoympmux3g4zp5ci2ec.py", directory: "inductor_cache/pf")
!4 = !{ptr @triton_poi_fused_add_convolution_mul_40, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_convolution_mul_40, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_convolution_mul_40", linkageName: "triton_poi_fused_add_convolution_mul_40", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 34, scope: !7)
!15 = !DILocation(line: 25, column: 39, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 34, scope: !7)
!18 = !DILocation(line: 28, column: 39, scope: !7)
!19 = !DILocation(line: 29, column: 19, scope: !7)
!20 = !DILocation(line: 31, column: 34, scope: !7)
!21 = !DILocation(line: 31, column: 39, scope: !7)
!22 = !DILocation(line: 32, column: 19, scope: !7)
!23 = !DILocation(line: 34, column: 35, scope: !7)
!24 = !DILocation(line: 34, column: 40, scope: !7)
!25 = !DILocation(line: 35, column: 20, scope: !7)
!26 = !DILocation(line: 37, column: 31, scope: !7)
!27 = !DILocation(line: 37, column: 20, scope: !7)
!28 = !DILocation(line: 39, column: 31, scope: !7)
!29 = !DILocation(line: 39, column: 20, scope: !7)
!30 = !DILocation(line: 41, column: 31, scope: !7)
!31 = !DILocation(line: 41, column: 20, scope: !7)
!32 = !DILocation(line: 43, column: 31, scope: !7)
!33 = !DILocation(line: 43, column: 20, scope: !7)
!34 = !DILocation(line: 45, column: 18, scope: !7)
!35 = !DILocation(line: 49, column: 20, scope: !7)
!36 = !DILocation(line: 51, column: 20, scope: !7)
!37 = !DILocation(line: 47, column: 19, scope: !7)
!38 = !DILocation(line: 52, column: 20, scope: !7)
!39 = !DILocation(line: 53, column: 20, scope: !7)
!40 = !DILocation(line: 55, column: 20, scope: !7)
!41 = !DILocation(line: 56, column: 39, scope: !7)
!42 = !DILocation(line: 57, column: 39, scope: !7)
!43 = !DILocation(line: 58, column: 40, scope: !7)
!44 = !DILocation(line: 59, column: 40, scope: !7)
!45 = !DILocation(line: 60, column: 25, scope: !7)
!46 = !DILocation(line: 60, column: 37, scope: !7)
!47 = !DILocation(line: 60, column: 4, scope: !7)
