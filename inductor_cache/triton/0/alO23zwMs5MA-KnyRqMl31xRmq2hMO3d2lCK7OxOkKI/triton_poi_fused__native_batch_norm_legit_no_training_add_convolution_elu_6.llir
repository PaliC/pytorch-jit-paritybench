; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %11 = shl i32 %10, 9, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = shl i32 %12, 1, !dbg !12
  %14 = and i32 %13, 510, !dbg !12
  %15 = or disjoint i32 %11, %14, !dbg !13
  %16 = sdiv i32 %15, 256, !dbg !14
  %17 = srem i32 %16, 256, !dbg !15
  %.frozen = freeze i32 %15, !dbg !16
  %18 = sdiv i32 %.frozen, 65536, !dbg !16
  %19 = mul i32 %18, 65536, !dbg !17
  %.decomposed = sub i32 %.frozen, %19, !dbg !17
  %20 = sext i32 %15 to i64, !dbg !18
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !18
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %21, i1 true) #3, !dbg !19
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !19
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !19
  %25 = bitcast i32 %23 to float, !dbg !19
  %26 = bitcast i32 %24 to float, !dbg !19
  %27 = sext i32 %17 to i64, !dbg !20
  %28 = getelementptr float, ptr addrspace(1) %2, i64 %27, !dbg !20
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #3, !dbg !21
  %30 = bitcast i32 %29 to float, !dbg !21
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #3, !dbg !21
  %32 = bitcast i32 %31 to float, !dbg !21
  %33 = mul i32 %18, 98304, !dbg !22
  %34 = add i32 %33, %.decomposed, !dbg !23
  %35 = sext i32 %34 to i64, !dbg !24
  %36 = getelementptr float, ptr addrspace(1) %3, i64 %35, !dbg !24
  %37 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %36, i1 true) #3, !dbg !25
  %38 = extractvalue { i32, i32 } %37, 0, !dbg !25
  %39 = extractvalue { i32, i32 } %37, 1, !dbg !25
  %40 = bitcast i32 %38 to float, !dbg !25
  %41 = bitcast i32 %39 to float, !dbg !25
  %42 = getelementptr float, ptr addrspace(1) %4, i64 %27, !dbg !26
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #3, !dbg !27
  %44 = bitcast i32 %43 to float, !dbg !27
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #3, !dbg !27
  %46 = bitcast i32 %45 to float, !dbg !27
  %47 = getelementptr float, ptr addrspace(1) %5, i64 %27, !dbg !28
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #3, !dbg !29
  %49 = bitcast i32 %48 to float, !dbg !29
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #3, !dbg !29
  %51 = bitcast i32 %50 to float, !dbg !29
  %52 = getelementptr float, ptr addrspace(1) %6, i64 %27, !dbg !30
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 true) #3, !dbg !31
  %54 = bitcast i32 %53 to float, !dbg !31
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 true) #3, !dbg !31
  %56 = bitcast i32 %55 to float, !dbg !31
  %57 = getelementptr float, ptr addrspace(1) %7, i64 %27, !dbg !32
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 true) #3, !dbg !33
  %59 = bitcast i32 %58 to float, !dbg !33
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 true) #3, !dbg !33
  %61 = bitcast i32 %60 to float, !dbg !33
  %62 = fadd float %25, %30, !dbg !34
  %63 = fadd float %26, %32, !dbg !34
  %64 = fadd float %62, %40, !dbg !35
  %65 = fadd float %63, %41, !dbg !35
  %66 = fsub float %64, %44, !dbg !36
  %67 = fsub float %65, %46, !dbg !36
  %68 = fadd float %49, 0x3F1A36E2E0000000, !dbg !37
  %69 = fadd float %51, 0x3F1A36E2E0000000, !dbg !37
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i = icmp eq i32 %70, 0, !dbg !38
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !38
  %.not1.i = icmp eq i32 %71, 0, !dbg !38
  br i1 %.not.i, label %77, label %72, !dbg !38

72:                                               ; preds = %9
  br i1 %.not1.i, label %75, label %73, !dbg !38

73:                                               ; preds = %72
  %74 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %68) #3, !dbg !38
  br label %__nv_sqrtf.exit, !dbg !38

75:                                               ; preds = %72
  %76 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %68) #3, !dbg !38
  br label %__nv_sqrtf.exit, !dbg !38

77:                                               ; preds = %9
  br i1 %.not1.i, label %80, label %78, !dbg !38

78:                                               ; preds = %77
  %79 = tail call float @llvm.nvvm.sqrt.rn.f(float %68) #3, !dbg !38
  br label %__nv_sqrtf.exit, !dbg !38

80:                                               ; preds = %77
  %81 = tail call float @llvm.nvvm.sqrt.approx.f(float %68) #3, !dbg !38
  br label %__nv_sqrtf.exit, !dbg !38

__nv_sqrtf.exit:                                  ; preds = %73, %75, %78, %80
  %.0.i = phi float [ %74, %73 ], [ %76, %75 ], [ %79, %78 ], [ %81, %80 ], !dbg !38
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i1 = icmp eq i32 %82, 0, !dbg !38
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !38
  %.not1.i4 = icmp eq i32 %83, 0, !dbg !38
  br i1 %.not.i1, label %89, label %84, !dbg !38

84:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %87, label %85, !dbg !38

85:                                               ; preds = %84
  %86 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %69) #3, !dbg !38
  br label %__nv_sqrtf.exit5, !dbg !38

87:                                               ; preds = %84
  %88 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %69) #3, !dbg !38
  br label %__nv_sqrtf.exit5, !dbg !38

89:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %92, label %90, !dbg !38

90:                                               ; preds = %89
  %91 = tail call float @llvm.nvvm.sqrt.rn.f(float %69) #3, !dbg !38
  br label %__nv_sqrtf.exit5, !dbg !38

92:                                               ; preds = %89
  %93 = tail call float @llvm.nvvm.sqrt.approx.f(float %69) #3, !dbg !38
  br label %__nv_sqrtf.exit5, !dbg !38

__nv_sqrtf.exit5:                                 ; preds = %85, %87, %90, %92
  %.0.i3 = phi float [ %86, %85 ], [ %88, %87 ], [ %91, %90 ], [ %93, %92 ], !dbg !38
  %94 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !39
  %95 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !39
  %96 = fmul float %66, %94, !dbg !40
  %97 = fmul float %67, %95, !dbg !40
  %98 = fmul float %96, %54, !dbg !41
  %99 = fmul float %97, %56, !dbg !41
  %100 = fadd float %98, %59, !dbg !42
  %101 = fadd float %99, %61, !dbg !42
  %102 = fmul float %100, 0x3FF7154760000000, !dbg !43
  %103 = tail call float @llvm.nvvm.round.f(float %102) #3, !dbg !43
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i6 = icmp eq i32 %104, 0, !dbg !43
  %105 = tail call float @llvm.nvvm.fabs.ftz.f(float %100) #3, !dbg !43
  %106 = tail call float @llvm.nvvm.fabs.f(float %100) #3, !dbg !43
  %.03.i = select i1 %.not.i6, float %106, float %105, !dbg !43
  %107 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i = select i1 %107, float 0.000000e+00, float %103, !dbg !43
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %110 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !43
  %j.0.i = select i1 %110, float 1.270000e+02, float %t.0.i, !dbg !43
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i = icmp eq i32 %116, 0, !dbg !43
  br i1 %.not8.i, label %119, label %117, !dbg !43

117:                                              ; preds = %__nv_sqrtf.exit5
  %118 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !43
  br label %__nv_expm1f.exit, !dbg !43

119:                                              ; preds = %__nv_sqrtf.exit5
  %120 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !43
  br label %__nv_expm1f.exit, !dbg !43

__nv_expm1f.exit:                                 ; preds = %117, %119
  %.0.i7 = phi float [ %118, %117 ], [ %120, %119 ], !dbg !43
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %122 = fmul float %101, 0x3FF7154760000000, !dbg !43
  %123 = tail call float @llvm.nvvm.round.f(float %122) #3, !dbg !43
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i10 = icmp eq i32 %124, 0, !dbg !43
  %125 = tail call float @llvm.nvvm.fabs.ftz.f(float %101) #3, !dbg !43
  %126 = tail call float @llvm.nvvm.fabs.f(float %101) #3, !dbg !43
  %.03.i11 = select i1 %.not.i10, float %126, float %125, !dbg !43
  %127 = fcmp olt float %.03.i11, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i12 = select i1 %127, float 0.000000e+00, float %123, !dbg !43
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %130 = fcmp oeq float %t.0.i12, 1.280000e+02, !dbg !43
  %j.0.i13 = select i1 %130, float 1.270000e+02, float %t.0.i12, !dbg !43
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i14 = icmp eq i32 %136, 0, !dbg !43
  br i1 %.not8.i14, label %139, label %137, !dbg !43

137:                                              ; preds = %__nv_expm1f.exit
  %138 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i13) #3, !dbg !43
  br label %__nv_expm1f.exit36, !dbg !43

139:                                              ; preds = %__nv_expm1f.exit
  %140 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i13) #3, !dbg !43
  br label %__nv_expm1f.exit36, !dbg !43

__nv_expm1f.exit36:                               ; preds = %137, %139
  %.0.i15 = phi float [ %138, %137 ], [ %140, %139 ], !dbg !43
  %141 = fcmp oeq float %100, 0.000000e+00, !dbg !43
  %142 = fadd float %100, %100, !dbg !43
  %143 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !43
  %144 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !43
  %.not9.i = icmp eq i32 %121, 0, !dbg !43
  %.not7.i = icmp eq i32 %115, 0, !dbg !43
  %.not6.i = icmp eq i32 %114, 0, !dbg !43
  %.not5.i = icmp eq i32 %113, 0, !dbg !43
  %.not4.i = icmp eq i32 %112, 0, !dbg !43
  %.not3.i = icmp eq i32 %111, 0, !dbg !43
  %.not2.i8 = icmp eq i32 %109, 0, !dbg !43
  %145 = fneg float %t.0.i, !dbg !43
  %.not1.i9 = icmp eq i32 %108, 0, !dbg !43
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %145, float 0x3FE62E4000000000, float %100) #3, !dbg !43
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %145, float 0x3FE62E4000000000, float %100) #3, !dbg !43
  %.04.i = select i1 %.not1.i9, float %146, float %147, !dbg !43
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %145, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !43
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %145, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !43
  %.05.i = select i1 %.not2.i8, float %148, float %149, !dbg !43
  %150 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !43
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i = select i1 %.not3.i, float %150, float %151, !dbg !43
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !43
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i = select i1 %.not4.i, float %152, float %153, !dbg !43
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !43
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i = select i1 %.not5.i, float %154, float %155, !dbg !43
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i = select i1 %.not6.i, float %156, float %157, !dbg !43
  %158 = fmul float %.05.i, %.06.i, !dbg !43
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %158, float %.05.i, float %.05.i) #3, !dbg !43
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %158, float %.05.i, float %.05.i) #3, !dbg !43
  %.01.i = select i1 %.not7.i, float %159, float %160, !dbg !43
  %161 = fadd float %.0.i7, -1.000000e+00, !dbg !43
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i7, float %161) #3, !dbg !43
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i7, float %161) #3, !dbg !43
  %.02.i = select i1 %.not9.i, float %162, float %163, !dbg !43
  %164 = fadd float %.02.i, %.02.i, !dbg !43
  %u.0.i = select i1 %110, float %164, float %.02.i, !dbg !43
  %u.1.i = select i1 %144, float 0x7FF0000000000000, float %u.0.i, !dbg !43
  %u.2.i = select i1 %143, float -1.000000e+00, float %u.1.i, !dbg !43
  %u.3.i = select i1 %141, float %142, float %u.2.i, !dbg !43
  %165 = fcmp ogt float %101, 0.000000e+00, !dbg !44
  %166 = fcmp ogt float %100, 0.000000e+00, !dbg !44
  %.not7.i16 = icmp eq i32 %135, 0, !dbg !43
  %.not6.i17 = icmp eq i32 %134, 0, !dbg !43
  %.not5.i18 = icmp eq i32 %133, 0, !dbg !43
  %.not4.i19 = icmp eq i32 %132, 0, !dbg !43
  %.not3.i20 = icmp eq i32 %131, 0, !dbg !43
  %.not2.i21 = icmp eq i32 %129, 0, !dbg !43
  %167 = fneg float %t.0.i12, !dbg !43
  %.not1.i22 = icmp eq i32 %128, 0, !dbg !43
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %167, float 0x3FE62E4000000000, float %101) #3, !dbg !43
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %167, float 0x3FE62E4000000000, float %101) #3, !dbg !43
  %.04.i23 = select i1 %.not1.i22, float %168, float %169, !dbg !43
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %167, float 0x3EB7F7D1C0000000, float %.04.i23) #3, !dbg !43
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %167, float 0x3EB7F7D1C0000000, float %.04.i23) #3, !dbg !43
  %.05.i24 = select i1 %.not2.i21, float %170, float %171, !dbg !43
  %172 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i24, float 0x3F812ACC60000000) #3, !dbg !43
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i24, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i25 = select i1 %.not3.i20, float %172, float %173, !dbg !43
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i25, float %.05.i24, float 0x3FA5557C60000000) #3, !dbg !43
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i25, float %.05.i24, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i26 = select i1 %.not4.i19, float %174, float %175, !dbg !43
  %176 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i26, float %.05.i24, float 0x3FC5553EC0000000) #3, !dbg !43
  %177 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i26, float %.05.i24, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i27 = select i1 %.not5.i18, float %176, float %177, !dbg !43
  %178 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i27, float %.05.i24, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i27, float %.05.i24, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i28 = select i1 %.not6.i17, float %178, float %179, !dbg !43
  %180 = fmul float %.05.i24, %.06.i28, !dbg !43
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %180, float %.05.i24, float %.05.i24) #3, !dbg !43
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %180, float %.05.i24, float %.05.i24) #3, !dbg !43
  %.01.i29 = select i1 %.not7.i16, float %181, float %182, !dbg !43
  %183 = fadd float %.0.i15, -1.000000e+00, !dbg !43
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not9.i30 = icmp eq i32 %184, 0, !dbg !43
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i29, float %.0.i15, float %183) #3, !dbg !43
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i29, float %.0.i15, float %183) #3, !dbg !43
  %.02.i31 = select i1 %.not9.i30, float %186, float %185, !dbg !43
  %187 = fadd float %.02.i31, %.02.i31, !dbg !43
  %u.0.i32 = select i1 %130, float %187, float %.02.i31, !dbg !43
  %188 = fcmp ogt float %j.0.i13, 1.280000e+02, !dbg !43
  %u.1.i33 = select i1 %188, float 0x7FF0000000000000, float %u.0.i32, !dbg !43
  %189 = fcmp olt float %j.0.i13, -2.500000e+01, !dbg !43
  %u.2.i34 = select i1 %189, float -1.000000e+00, float %u.1.i33, !dbg !43
  %190 = fcmp oeq float %101, 0.000000e+00, !dbg !43
  %191 = fadd float %101, %101, !dbg !43
  %u.3.i35 = select i1 %190, float %191, float %u.2.i34, !dbg !43
  %192 = select i1 %166, float %100, float %u.3.i, !dbg !45
  %193 = select i1 %165, float %101, float %u.3.i35, !dbg !45
  %194 = bitcast float %62 to i32, !dbg !46
  %195 = bitcast float %63 to i32, !dbg !46
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %194, i32 %195, ptr addrspace(1) %21, i1 true) #3, !dbg !46
  %196 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !47
  %197 = bitcast float %192 to i32, !dbg !48
  %198 = bitcast float %193 to i32, !dbg !48
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %197, i32 %198, ptr addrspace(1) %196, i1 true) #3, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ciedqmlkoem2ebyfxqto4wsrnzr42x4caxx2wj3kc332nv33z3y2.py", directory: "inductor_cache/ie")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_6, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_6, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_6", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 34, scope: !7)
!19 = !DILocation(line: 28, column: 39, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 41, scope: !7)
!23 = !DILocation(line: 30, column: 35, scope: !7)
!24 = !DILocation(line: 30, column: 30, scope: !7)
!25 = !DILocation(line: 30, column: 46, scope: !7)
!26 = !DILocation(line: 31, column: 30, scope: !7)
!27 = !DILocation(line: 31, column: 35, scope: !7)
!28 = !DILocation(line: 32, column: 30, scope: !7)
!29 = !DILocation(line: 32, column: 35, scope: !7)
!30 = !DILocation(line: 33, column: 31, scope: !7)
!31 = !DILocation(line: 33, column: 36, scope: !7)
!32 = !DILocation(line: 34, column: 31, scope: !7)
!33 = !DILocation(line: 34, column: 36, scope: !7)
!34 = !DILocation(line: 35, column: 18, scope: !7)
!35 = !DILocation(line: 36, column: 18, scope: !7)
!36 = !DILocation(line: 37, column: 18, scope: !7)
!37 = !DILocation(line: 39, column: 18, scope: !7)
!38 = !DILocation(line: 40, column: 27, scope: !7)
!39 = !DILocation(line: 42, column: 20, scope: !7)
!40 = !DILocation(line: 45, column: 19, scope: !7)
!41 = !DILocation(line: 46, column: 20, scope: !7)
!42 = !DILocation(line: 47, column: 20, scope: !7)
!43 = !DILocation(line: 51, column: 28, scope: !7)
!44 = !DILocation(line: 49, column: 20, scope: !7)
!45 = !DILocation(line: 53, column: 35, scope: !7)
!46 = !DILocation(line: 54, column: 39, scope: !7)
!47 = !DILocation(line: 55, column: 28, scope: !7)
!48 = !DILocation(line: 55, column: 40, scope: !7)
!49 = !DILocation(line: 55, column: 4, scope: !7)
