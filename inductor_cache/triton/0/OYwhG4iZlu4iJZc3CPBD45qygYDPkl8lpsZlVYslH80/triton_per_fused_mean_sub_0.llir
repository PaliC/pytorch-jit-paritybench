; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_mean_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = icmp slt i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 15, !dbg !12
  %9 = srem i32 %5, 2, !dbg !13
  %10 = shl i32 %5, 4, !dbg !14
  %11 = or disjoint i32 %10, %8, !dbg !15
  %12 = sext i32 %11 to i64, !dbg !16
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !16
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %13, i1 %6, i32 0, i1 %6) #2, !dbg !17
  %15 = bitcast i32 %14 to float, !dbg !17
  %16 = sext i32 %9 to i64, !dbg !18
  %17 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !18
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %6) #2, !dbg !19
  %19 = bitcast i32 %18 to float, !dbg !19
  %20 = fadd float %15, %19, !dbg !20
  %21 = select i1 %6, float %20, float 0.000000e+00, !dbg !21
  %22 = bitcast float %21 to i32, !dbg !22
  %23 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %22, i32 8, i32 31), !dbg !22
  %24 = bitcast i32 %23 to float, !dbg !22
  %25 = fadd float %21, %24, !dbg !26
  %26 = bitcast float %25 to i32, !dbg !22
  %27 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %26, i32 4, i32 31), !dbg !22
  %28 = bitcast i32 %27 to float, !dbg !22
  %29 = fadd float %25, %28, !dbg !26
  %30 = bitcast float %29 to i32, !dbg !22
  %31 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %30, i32 2, i32 31), !dbg !22
  %32 = bitcast i32 %31 to float, !dbg !22
  %33 = fadd float %29, %32, !dbg !26
  %34 = bitcast float %33 to i32, !dbg !22
  %35 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %34, i32 1, i32 31), !dbg !22
  %36 = bitcast i32 %35 to float, !dbg !22
  %37 = fadd float %33, %36, !dbg !26
  %38 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %37, float 1.600000e+01) #2, !dbg !28
  %39 = fsub float %20, %38, !dbg !29
  %40 = and i32 %7, 48, !dbg !30
  %41 = icmp eq i32 %40, 0, !dbg !30
  %42 = bitcast float %39 to i32, !dbg !30
  %43 = and i1 %41, %6, !dbg !30
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %42, ptr addrspace(1) %13, i1 %43) #2, !dbg !30
  ret void, !dbg !31
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ca2pp4kmcuwezjnw7migysvwlhow42fqym2n54upvtbcz3h25s7k.py", directory: "inductor_cache/a2")
!4 = !{ptr @triton_per_fused_mean_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_mean_sub_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_mean_sub_0", linkageName: "triton_per_fused_mean_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 19, scope: !7)
!14 = !DILocation(line: 32, column: 42, scope: !7)
!15 = !DILocation(line: 32, column: 39, scope: !7)
!16 = !DILocation(line: 32, column: 34, scope: !7)
!17 = !DILocation(line: 32, column: 47, scope: !7)
!18 = !DILocation(line: 33, column: 30, scope: !7)
!19 = !DILocation(line: 33, column: 35, scope: !7)
!20 = !DILocation(line: 34, column: 18, scope: !7)
!21 = !DILocation(line: 36, column: 33, scope: !7)
!22 = !DILocation(line: 267, column: 36, scope: !23, inlinedAt: !25)
!23 = distinct !DILexicalBlockFile(scope: !7, file: !24, discriminator: 0)
!24 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!25 = !DILocation(line: 37, column: 24, scope: !7)
!26 = !DILocation(line: 256, column: 15, scope: !27, inlinedAt: !25)
!27 = distinct !DILexicalBlockFile(scope: !23, file: !24, discriminator: 0)
!28 = !DILocation(line: 39, column: 18, scope: !7)
!29 = !DILocation(line: 40, column: 18, scope: !7)
!30 = !DILocation(line: 41, column: 47, scope: !7)
!31 = !DILocation(line: 41, column: 4, scope: !7)
