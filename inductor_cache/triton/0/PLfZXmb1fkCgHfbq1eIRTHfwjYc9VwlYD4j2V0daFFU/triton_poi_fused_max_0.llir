; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %12 = shl i32 %10, 2, !dbg !15
  %13 = or disjoint i32 %12, 4, !dbg !15
  %14 = sext i32 %12 to i64, !dbg !16
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !16
  %16 = sext i32 %13 to i64, !dbg !16
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !16
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 %11) #1, !dbg !17
  %19 = bitcast i32 %18 to float, !dbg !17
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %11) #1, !dbg !17
  %21 = bitcast i32 %20 to float, !dbg !17
  %22 = or disjoint i32 %12, 1, !dbg !18
  %23 = or disjoint i32 %12, 5, !dbg !18
  %24 = sext i32 %22 to i64, !dbg !19
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !19
  %26 = sext i32 %23 to i64, !dbg !19
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !19
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %11) #1, !dbg !20
  %29 = bitcast i32 %28 to float, !dbg !20
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %11) #1, !dbg !20
  %31 = bitcast i32 %30 to float, !dbg !20
  %32 = or disjoint i32 %12, 2, !dbg !21
  %33 = or disjoint i32 %12, 6, !dbg !21
  %34 = sext i32 %32 to i64, !dbg !22
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !22
  %36 = sext i32 %33 to i64, !dbg !22
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !22
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %11) #1, !dbg !23
  %39 = bitcast i32 %38 to float, !dbg !23
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %11) #1, !dbg !23
  %41 = bitcast i32 %40 to float, !dbg !23
  %42 = or disjoint i32 %12, 3, !dbg !24
  %43 = or disjoint i32 %12, 7, !dbg !24
  %44 = sext i32 %42 to i64, !dbg !25
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !25
  %46 = sext i32 %43 to i64, !dbg !25
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !25
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %11) #1, !dbg !26
  %49 = bitcast i32 %48 to float, !dbg !26
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 %11) #1, !dbg !26
  %51 = bitcast i32 %50 to float, !dbg !26
  %52 = fcmp ogt float %19, %29, !dbg !27
  %53 = fcmp ogt float %21, %31, !dbg !27
  %54 = fcmp uno float %19, 0.000000e+00, !dbg !31
  %55 = fcmp uno float %21, 0.000000e+00, !dbg !31
  %56 = or i1 %54, %52, !dbg !32
  %57 = or i1 %55, %53, !dbg !32
  %58 = select i1 %56, float %19, float %29, !dbg !33
  %59 = select i1 %57, float %21, float %31, !dbg !33
  %60 = fcmp ogt float %58, %39, !dbg !34
  %61 = fcmp ogt float %59, %41, !dbg !34
  %62 = fcmp uno float %58, 0.000000e+00, !dbg !36
  %63 = fcmp uno float %59, 0.000000e+00, !dbg !36
  %64 = or i1 %60, %62, !dbg !37
  %65 = or i1 %61, %63, !dbg !37
  %66 = select i1 %64, float %58, float %39, !dbg !38
  %67 = select i1 %65, float %59, float %41, !dbg !38
  %68 = fcmp ogt float %66, %49, !dbg !39
  %69 = fcmp ogt float %67, %51, !dbg !39
  %70 = fcmp uno float %66, 0.000000e+00, !dbg !41
  %71 = fcmp uno float %67, 0.000000e+00, !dbg !41
  %72 = or i1 %68, %70, !dbg !42
  %73 = or i1 %69, %71, !dbg !42
  %74 = fcmp oeq float %19, %29, !dbg !43
  %75 = fcmp oeq float %21, %31, !dbg !43
  %76 = or i1 %54, %74, !dbg !44
  %77 = or i1 %52, %76, !dbg !44
  %78 = or i1 %55, %75, !dbg !44
  %79 = or i1 %53, %78, !dbg !44
  %80 = select i1 %77, float %19, float %29, !dbg !45
  %81 = select i1 %79, float %21, float %31, !dbg !45
  %not. = xor i1 %77, true, !dbg !46
  %82 = zext i1 %not. to i64, !dbg !46
  %not.1 = xor i1 %79, true, !dbg !46
  %83 = zext i1 %not.1 to i64, !dbg !46
  %84 = fcmp ogt float %80, %39, !dbg !47
  %85 = fcmp ogt float %81, %41, !dbg !47
  %86 = fcmp oeq float %80, %39, !dbg !48
  %87 = fcmp oeq float %81, %41, !dbg !48
  %88 = fcmp uno float %80, 0.000000e+00, !dbg !49
  %89 = fcmp uno float %81, 0.000000e+00, !dbg !49
  %90 = fcmp uno float %39, 0.000000e+00, !dbg !50
  %91 = fcmp uno float %41, 0.000000e+00, !dbg !50
  %92 = xor i1 %90, true, !dbg !51
  %93 = and i1 %88, %92, !dbg !51
  %94 = xor i1 %91, true, !dbg !51
  %95 = and i1 %89, %94, !dbg !51
  %96 = or i1 %84, %93, !dbg !52
  %97 = or i1 %85, %95, !dbg !52
  %98 = and i1 %90, %88, !dbg !53
  %99 = and i1 %91, %89, !dbg !53
  %100 = or i1 %86, %98, !dbg !54
  %101 = or i1 %87, %99, !dbg !54
  %102 = or i1 %96, %100, !dbg !55
  %103 = or i1 %97, %101, !dbg !55
  %104 = select i1 %102, float %80, float %39, !dbg !56
  %105 = select i1 %103, float %81, float %41, !dbg !56
  %106 = select i1 %102, i64 %82, i64 2, !dbg !57
  %107 = select i1 %103, i64 %83, i64 2, !dbg !57
  %108 = fcmp ogt float %104, %49, !dbg !58
  %109 = fcmp ogt float %105, %51, !dbg !58
  %110 = fcmp oeq float %104, %49, !dbg !59
  %111 = fcmp oeq float %105, %51, !dbg !59
  %112 = fcmp uno float %104, 0.000000e+00, !dbg !60
  %113 = fcmp uno float %105, 0.000000e+00, !dbg !60
  %114 = fcmp uno float %49, 0.000000e+00, !dbg !61
  %115 = fcmp uno float %51, 0.000000e+00, !dbg !61
  %116 = xor i1 %114, true, !dbg !62
  %117 = and i1 %112, %116, !dbg !62
  %118 = xor i1 %115, true, !dbg !62
  %119 = and i1 %113, %118, !dbg !62
  %120 = or i1 %108, %117, !dbg !63
  %121 = or i1 %109, %119, !dbg !63
  %122 = and i1 %114, %112, !dbg !64
  %123 = and i1 %115, %113, !dbg !64
  %124 = or i1 %110, %122, !dbg !65
  %125 = or i1 %111, %123, !dbg !65
  %126 = or i1 %120, %124, !dbg !66
  %127 = or i1 %121, %125, !dbg !66
  %128 = select i1 %126, i64 %106, i64 3, !dbg !67
  %129 = select i1 %127, i64 %107, i64 3, !dbg !67
  %130 = sext i32 %10 to i64, !dbg !68
  %131 = getelementptr float, ptr addrspace(1) %1, i64 %130, !dbg !68
  %132 = bitcast float %66 to i32, !dbg !69
  %133 = select i1 %72, i32 %132, i32 %48, !dbg !70
  %134 = bitcast float %67 to i32, !dbg !69
  %135 = select i1 %73, i32 %134, i32 %50, !dbg !70
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %133, i32 %135, ptr addrspace(1) %131, i1 %11) #1, !dbg !69
  %136 = getelementptr i64, ptr addrspace(1) %2, i64 %130, !dbg !71
  tail call void asm sideeffect "@$3 st.global.v2.b64 [ $2 + 0 ], { $0, $1 };", "l,l,l,b"(i64 %128, i64 %129, ptr addrspace(1) %136, i1 %11) #1, !dbg !72
  ret void, !dbg !73
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c573j2ibmzp37vmrebm3n7lbovgazrhmkpdzqwuzwgzqynzvrdqo.py", directory: "inductor_cache/57")
!4 = !{ptr @triton_poi_fused_max_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_0", linkageName: "triton_poi_fused_max_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 26, column: 34, scope: !7)
!19 = !DILocation(line: 26, column: 30, scope: !7)
!20 = !DILocation(line: 26, column: 41, scope: !7)
!21 = !DILocation(line: 27, column: 34, scope: !7)
!22 = !DILocation(line: 27, column: 30, scope: !7)
!23 = !DILocation(line: 27, column: 41, scope: !7)
!24 = !DILocation(line: 28, column: 34, scope: !7)
!25 = !DILocation(line: 28, column: 30, scope: !7)
!26 = !DILocation(line: 28, column: 41, scope: !7)
!27 = !DILocation(line: 118, column: 15, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !7, file: !29, discriminator: 0)
!29 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!30 = !DILocation(line: 29, column: 40, scope: !7)
!31 = !DILocation(line: 120, column: 21, scope: !28, inlinedAt: !30)
!32 = !DILocation(line: 120, column: 16, scope: !28, inlinedAt: !30)
!33 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !30)
!34 = !DILocation(line: 118, column: 15, scope: !28, inlinedAt: !35)
!35 = !DILocation(line: 30, column: 40, scope: !7)
!36 = !DILocation(line: 120, column: 21, scope: !28, inlinedAt: !35)
!37 = !DILocation(line: 120, column: 16, scope: !28, inlinedAt: !35)
!38 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !35)
!39 = !DILocation(line: 118, column: 15, scope: !28, inlinedAt: !40)
!40 = !DILocation(line: 31, column: 40, scope: !7)
!41 = !DILocation(line: 120, column: 21, scope: !28, inlinedAt: !40)
!42 = !DILocation(line: 120, column: 16, scope: !28, inlinedAt: !40)
!43 = !DILocation(line: 33, column: 19, scope: !7)
!44 = !DILocation(line: 44, column: 20, scope: !7)
!45 = !DILocation(line: 45, column: 34, scope: !7)
!46 = !DILocation(line: 46, column: 35, scope: !7)
!47 = !DILocation(line: 47, column: 20, scope: !7)
!48 = !DILocation(line: 48, column: 21, scope: !7)
!49 = !DILocation(line: 49, column: 21, scope: !7)
!50 = !DILocation(line: 50, column: 20, scope: !7)
!51 = !DILocation(line: 51, column: 20, scope: !7)
!52 = !DILocation(line: 52, column: 20, scope: !7)
!53 = !DILocation(line: 53, column: 20, scope: !7)
!54 = !DILocation(line: 54, column: 20, scope: !7)
!55 = !DILocation(line: 58, column: 20, scope: !7)
!56 = !DILocation(line: 59, column: 35, scope: !7)
!57 = !DILocation(line: 60, column: 35, scope: !7)
!58 = !DILocation(line: 61, column: 20, scope: !7)
!59 = !DILocation(line: 62, column: 21, scope: !7)
!60 = !DILocation(line: 63, column: 21, scope: !7)
!61 = !DILocation(line: 64, column: 20, scope: !7)
!62 = !DILocation(line: 65, column: 20, scope: !7)
!63 = !DILocation(line: 66, column: 20, scope: !7)
!64 = !DILocation(line: 67, column: 20, scope: !7)
!65 = !DILocation(line: 68, column: 20, scope: !7)
!66 = !DILocation(line: 72, column: 20, scope: !7)
!67 = !DILocation(line: 74, column: 35, scope: !7)
!68 = !DILocation(line: 75, column: 25, scope: !7)
!69 = !DILocation(line: 75, column: 36, scope: !7)
!70 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !40)
!71 = !DILocation(line: 76, column: 25, scope: !7)
!72 = !DILocation(line: 76, column: 37, scope: !7)
!73 = !DILocation(line: 76, column: 4, scope: !7)
