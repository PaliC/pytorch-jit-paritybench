//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_exp_sub_6 // -- Begin function triton_poi_fused_exp_sub_6
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_exp_sub_6
.visible .entry triton_poi_fused_exp_sub_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused_exp_sub_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_exp_sub_6_param_1,
	.param .u32 triton_poi_fused_exp_sub_6_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<22>;
	.reg .f32 	%f<3>;
	.reg .b64 	%rd<10>;
	.reg .f64 	%fd<43>;
	.loc	1 19 0                          // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_exp_sub_6_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused_exp_sub_6_param_1];
$L__tmp0:
	.loc	1 21 28                         // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:21:28
	// begin inline asm
	mov.u32 %r6, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:21:33
	shl.b32 	%r7, %r6, 2;
	.loc	1 22 36                         // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:22:36
	mov.u32 	%r1, %tid.x;
	and.b32  	%r8, %r1, 3;
	.loc	1 22 23                         // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:22:23
	or.b32  	%r2, %r7, %r8;
	.loc	1 23 21                         // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:23:21
	setp.lt.s32 	%p1, %r2, 4;
	.loc	1 25 34                         // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:25:34
	mul.wide.s32 	%rd7, %r2, 8;
	add.s64 	%rd9, %rd6, %rd7;
	.loc	1 25 39                         // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:25:39
	// begin inline asm
	mov.u64 %rd2, 0x0;
	@%p1 ld.global.b64 { %rd2 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b64 	%fd6, %rd2;
	mov.pred 	%p2, -1;
	.loc	1 26 19                         // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:26:19
	// begin inline asm
	mov.u64 %rd4, 0x0;
	@%p2 ld.global.b64 { %rd4 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b64 	%fd7, %rd4;
	.loc	1 28 18                         // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:28:18
	sub.f64 	%fd1, %fd6, %fd7;
	mov.f64 	%fd8, 0d4338000000000000;
	mov.f64 	%fd9, 0d3FF71547652B82FE;
	.loc	1 29 25                         // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:29:25
	fma.rn.f64 	%fd10, %fd1, %fd9, %fd8;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd10;
	}
	mov.f64 	%fd11, 0dC338000000000000;
	add.rn.f64 	%fd12, %fd10, %fd11;
	mov.f64 	%fd13, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd14, %fd12, %fd13, %fd1;
	mov.f64 	%fd15, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd16, %fd12, %fd15, %fd14;
	mov.f64 	%fd17, 0d3E928AF3FCA213EA;
	mov.f64 	%fd18, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd19, %fd18, %fd16, %fd17;
	mov.f64 	%fd20, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd21, %fd19, %fd16, %fd20;
	mov.f64 	%fd22, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd23, %fd21, %fd16, %fd22;
	mov.f64 	%fd24, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd25, %fd23, %fd16, %fd24;
	mov.f64 	%fd26, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd27, %fd25, %fd16, %fd26;
	mov.f64 	%fd28, 0d3F81111111122322;
	fma.rn.f64 	%fd29, %fd27, %fd16, %fd28;
	mov.f64 	%fd30, 0d3FA55555555502A1;
	fma.rn.f64 	%fd31, %fd29, %fd16, %fd30;
	mov.f64 	%fd32, 0d3FC5555555555511;
	fma.rn.f64 	%fd33, %fd31, %fd16, %fd32;
	mov.f64 	%fd34, 0d3FE000000000000B;
	fma.rn.f64 	%fd35, %fd33, %fd16, %fd34;
	mov.f64 	%fd36, 0d3FF0000000000000;
	fma.rn.f64 	%fd37, %fd35, %fd16, %fd36;
	fma.rn.f64 	%fd38, %fd37, %fd16, %fd36;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4, %temp}, %fd38;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd38;
	}
	shl.b32 	%r9, %r3, 20;
	add.s32 	%r10, %r5, %r9;
	mov.b64 	%fd42, {%r4, %r10};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd1;
	}
	mov.b32 	%f2, %r11;
	abs.ftz.f32 	%f1, %f2;
	setp.lt.f32 	%p3, %f1, 0f4086232B;
	@%p3 bra 	$L__BB0_3;
// %bb.1:                               // %__internal_fast_icmp_abs_lt.exit.i
	setp.lt.f64 	%p4, %fd1, 0d0000000000000000;
	add.f64 	%fd39, %fd1, 0d7FF0000000000000;
	selp.f64 	%fd42, 0d0000000000000000, %fd39, %p4;
	setp.geu.f32 	%p5, %f1, 0f40874800;
	@%p5 bra 	$L__BB0_3;
// %bb.2:
	shr.u32 	%r12, %r3, 31;
	add.s32 	%r13, %r3, %r12;
	shr.s32 	%r14, %r13, 1;
	shl.b32 	%r15, %r14, 20;
	add.s32 	%r16, %r5, %r15;
	mov.b64 	%fd40, {%r4, %r16};
	sub.s32 	%r17, %r3, %r14;
	shl.b32 	%r18, %r17, 20;
	add.s32 	%r19, %r18, 1072693248;
	mov.b32 	%r20, 0;
	mov.b64 	%fd41, {%r20, %r19};
	mul.f64 	%fd42, %fd41, %fd40;
$L__BB0_3:                              // %__nv_exp.exit
	.loc	1 22 36                         // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:22:36
	and.b32  	%r21, %r1, 28;
	.loc	1 30 39                         // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:30:39
	setp.eq.s32 	%p8, %r21, 0;
	mov.b64 	%rd8, %fd42;
	and.pred  	%p6, %p8, %p1;
	// begin inline asm
	@%p6 st.global.b64 [ %rd9 + 0 ], { %rd8 };
	// end inline asm
	.loc	1 30 4                          // c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py:30:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/4r/c4r3h44nbx2d6rhztvqnjb7l76us5s6tlffoy32vtxemznvfa3ve.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 114
.b8 51
.b8 104
.b8 52
.b8 52
.b8 110
.b8 98
.b8 120
.b8 50
.b8 100
.b8 54
.b8 114
.b8 104
.b8 122
.b8 116
.b8 118
.b8 113
.b8 110
.b8 106
.b8 98
.b8 55
.b8 108
.b8 55
.b8 54
.b8 117
.b8 115
.b8 53
.b8 115
.b8 54
.b8 116
.b8 108
.b8 102
.b8 102
.b8 111
.b8 121
.b8 51
.b8 50
.b8 118
.b8 116
.b8 120
.b8 101
.b8 109
.b8 122
.b8 110
.b8 118
.b8 102
.b8 97
.b8 51
.b8 118
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 52
.b8 114
.b8 0
	}
	.section	.debug_macinfo	{	}
