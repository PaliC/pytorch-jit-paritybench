#loc = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":19:0)
#loc1 = loc(unknown)
#loc36 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":45:26)
#loc47 = loc(callsite(#loc1 at #loc36))
module {
  tt.func public @triton_per_fused_abs_convolution_max_pool2d_with_indices_mean_relu_sub_16(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":19:0)) attributes {noinline = false} {
    %c8192_i32 = arith.constant 8192 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x128xf32> loc(#loc1)
    %cst_0 = arith.constant dense<32768> : tensor<1x128xi32> loc(#loc1)
    %cst_1 = arith.constant dense<512> : tensor<1x128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<64> : tensor<1x128xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc5)
    %5 = arith.remsi %0, %c64_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c64_i32 : i32 loc(#loc7)
    %7 = arith.remsi %4, %cst_2 : tensor<1x128xi32> loc(#loc8)
    %8 = arith.muli %7, %cst_1 : tensor<1x128xi32> loc(#loc9)
    %9 = arith.muli %5, %c128_i32 : i32 loc(#loc10)
    %10 = tt.splat %9 : i32 -> tensor<1x128xi32> loc(#loc11)
    %11 = arith.addi %4, %10 : tensor<1x128xi32> loc(#loc11)
    %12 = arith.muli %6, %c8192_i32 : i32 loc(#loc12)
    %13 = tt.splat %12 : i32 -> tensor<1x128xi32> loc(#loc13)
    %14 = arith.addi %11, %13 : tensor<1x128xi32> loc(#loc13)
    %15 = arith.divsi %14, %cst_0 : tensor<1x128xi32> loc(#loc14)
    %16 = arith.muli %15, %cst_0 : tensor<1x128xi32> loc(#loc15)
    %17 = arith.addi %8, %16 : tensor<1x128xi32> loc(#loc16)
    %18 = arith.divsi %14, %cst_2 : tensor<1x128xi32> loc(#loc17)
    %19 = arith.remsi %18, %cst_1 : tensor<1x128xi32> loc(#loc18)
    %20 = arith.addi %17, %19 : tensor<1x128xi32> loc(#loc19)
    %21 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc20)
    %22 = tt.addptr %21, %20 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc20)
    %23 = tt.splat %1 : i1 -> tensor<1x128xi1> loc(#loc21)
    %24 = tt.load %22, %23, %cst evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>> loc(#loc21)
    %25 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc22)
    %26 = tt.addptr %25, %19 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc22)
    %27 = tt.load %26, %23, %cst evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>> loc(#loc23)
    %28 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc24)
    %29 = tt.addptr %28, %20 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc24)
    %30 = tt.load %29, %23, %cst evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>> loc(#loc25)
    %31 = arith.addf %24, %27 : tensor<1x128xf32> loc(#loc26)
    %32 = arith.cmpf ogt, %cst, %31 : tensor<1x128xf32> loc(#loc42)
    %33 = arith.select %32, %cst, %31 : tensor<1x128xi1>, tensor<1x128xf32> loc(#loc43)
    %34 = arith.addf %30, %27 : tensor<1x128xf32> loc(#loc30)
    %35 = arith.cmpf ogt, %cst, %34 : tensor<1x128xf32> loc(#loc44)
    %36 = arith.select %35, %cst, %34 : tensor<1x128xi1>, tensor<1x128xf32> loc(#loc45)
    %37 = arith.subf %33, %36 : tensor<1x128xf32> loc(#loc32)
    %38 = math.absf %37 : tensor<1x128xf32> loc(#loc33)
    %39 = arith.select %23, %38, %cst : tensor<1x128xi1>, tensor<1x128xf32> loc(#loc34)
    %40 = "tt.reduce"(%39) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc36)), %arg7: f32 loc(callsite(#loc1 at #loc36))):
      %44 = arith.addf %arg6, %arg7 : f32 loc(#loc49)
      tt.reduce.return %44 : f32 loc(#loc46)
    }) : (tensor<1x128xf32>) -> tensor<1xf32> loc(#loc46)
    %41 = tt.expand_dims %40 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc38)
    %42 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc39)
    %43 = tt.splat %42 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc39)
    tt.store %43, %41, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc40)
    tt.return loc(#loc41)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":23:28)
#loc3 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":25:21)
#loc4 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":26:26)
#loc5 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":26:34)
#loc6 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":30:19)
#loc7 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":31:19)
#loc8 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":33:41)
#loc9 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":33:36)
#loc10 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":33:65)
#loc11 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":33:61)
#loc12 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":33:75)
#loc13 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":33:70)
#loc14 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":33:82)
#loc15 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":33:55)
#loc16 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":33:48)
#loc17 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":33:121)
#loc18 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":33:127)
#loc19 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":33:93)
#loc20 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":33:30)
#loc21 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":33:135)
#loc22 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":34:31)
#loc23 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":34:72)
#loc24 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":35:30)
#loc25 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":35:135)
#loc26 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":36:18)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc28 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":38:40)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc30 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":39:18)
#loc31 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":40:40)
#loc32 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":41:18)
#loc33 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":42:23)
#loc34 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":44:35)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc38 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":45:29)
#loc39 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":46:25)
#loc40 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":46:37)
#loc41 = loc("inductor_cache/ne/cneu5soynpjk6yfdqityslk3vvqs7wrydajkf7757ee3o3fgh4wj.py":46:4)
#loc42 = loc(callsite(#loc27 at #loc28))
#loc43 = loc(callsite(#loc29 at #loc28))
#loc44 = loc(callsite(#loc27 at #loc31))
#loc45 = loc(callsite(#loc29 at #loc31))
#loc46 = loc(callsite(#loc35 at #loc36))
#loc48 = loc(callsite(#loc37 at #loc35))
#loc49 = loc(callsite(#loc48 at #loc36))
