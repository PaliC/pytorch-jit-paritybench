; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_30(ptr addrspace(1) %0, ptr addrspace(1) nocapture readnone %1, ptr addrspace(1) nocapture readnone %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) nocapture readnone %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, ptr addrspace(1) %10, ptr addrspace(1) %11, ptr addrspace(1) %12, ptr addrspace(1) %13, ptr addrspace(1) %14, ptr addrspace(1) %15, ptr addrspace(1) %16, i32 %17) local_unnamed_addr !dbg !7 {
  %19 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %20 = shl i32 %19, 7, !dbg !11
  %21 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %22 = and i32 %21, 127, !dbg !12
  %23 = or disjoint i32 %20, %22, !dbg !13
  %24 = sdiv i32 %23, 4, !dbg !14
  %.frozen1 = freeze i32 %23, !dbg !15
  %25 = sdiv i32 %.frozen1, 5120, !dbg !15
  %.frozen = freeze i32 %23, !dbg !16
  %26 = sdiv i32 %.frozen, 2, !dbg !16
  %27 = srem i32 %26, 2, !dbg !17
  %28 = mul i32 %26, 2, !dbg !18
  %.decomposed = sub i32 %.frozen, %28, !dbg !18
  %29 = mul i32 %25, 5120, !dbg !19
  %srem.decomposed = sub i32 %.frozen1, %29, !dbg !19
  %30 = shl nsw i32 %25, 10, !dbg !20
  %31 = add nsw i32 %30, %srem.decomposed, !dbg !21
  %32 = sext i32 %31 to i64, !dbg !22
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !22
  %34 = shl nsw i32 %25, 8, !dbg !23
  %35 = sext i32 %.decomposed to i64, !dbg !24
  %36 = getelementptr float, ptr addrspace(1) %6, i64 %35, !dbg !24
  %37 = sext i32 %27 to i64, !dbg !25
  %38 = getelementptr float, ptr addrspace(1) %7, i64 %37, !dbg !25
  %39 = insertelement <2 x i32> poison, i32 %23, i64 0, !dbg !26
  %40 = insertelement <2 x i32> %39, i32 %24, i64 1, !dbg !26
  %41 = srem <2 x i32> %40, <i32 4, i32 1280>, !dbg !26
  %42 = extractelement <2 x i32> %41, i64 1, !dbg !27
  %43 = icmp slt i32 %42, 256, !dbg !28
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %43, i32 0, i1 %43) #1, !dbg !29
  %45 = bitcast i32 %44 to float, !dbg !29
  %46 = add nsw i32 %34, %42, !dbg !30
  %47 = sext i32 %46 to i64, !dbg !31
  %48 = getelementptr float, ptr addrspace(1) %3, i64 %47, !dbg !31
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %43, i32 0, i1 %43) #1, !dbg !32
  %50 = bitcast i32 %49 to float, !dbg !32
  %51 = sext i32 %42 to i64, !dbg !33
  %52 = getelementptr float, ptr addrspace(1) %4, i64 %51, !dbg !33
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %43, i32 0, i1 %43) #1, !dbg !34
  %54 = bitcast i32 %53 to float, !dbg !34
  %55 = fadd float %50, %54, !dbg !35
  %56 = fcmp olt float %55, 0.000000e+00, !dbg !36
  %57 = select i1 %56, float 0.000000e+00, float %55, !dbg !40
  %58 = fsub float %57, %57, !dbg !41
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %43, i32 0, i1 %43) #1, !dbg !42
  %60 = bitcast i32 %59 to float, !dbg !42
  %61 = fmul float %58, %60, !dbg !43
  %62 = fadd float %57, %61, !dbg !44
  %63 = fsub float %62, %45, !dbg !45
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %43, i32 0, i1 %43) #1, !dbg !46
  %65 = bitcast i32 %64 to float, !dbg !46
  %66 = fmul float %63, %65, !dbg !47
  %67 = fadd float %66, %45, !dbg !48
  %68 = and i32 %42, -256, !dbg !49
  %69 = icmp eq i32 %68, 256, !dbg !49
  %70 = insertelement <2 x i32> <i32 poison, i32 -256>, i32 %30, i64 0, !dbg !50
  %71 = add nsw <2 x i32> %70, %41, !dbg !50
  %72 = extractelement <2 x i32> %71, i64 1, !dbg !51
  %73 = shl nsw i32 %72, 2, !dbg !51
  %74 = extractelement <2 x i32> %71, i64 0, !dbg !52
  %75 = add nsw i32 %74, %73, !dbg !53
  %76 = sext i32 %75 to i64, !dbg !54
  %77 = getelementptr float, ptr addrspace(1) %8, i64 %76, !dbg !54
  %78 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %77, i1 %69, i32 0, i1 %69) #1, !dbg !55
  %79 = sext i32 %72 to i64, !dbg !56
  %80 = getelementptr float, ptr addrspace(1) %9, i64 %79, !dbg !56
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %80, i1 %69, i32 0, i1 %69) #1, !dbg !57
  %82 = icmp eq i32 %68, 512, !dbg !58
  %83 = add nsw i32 %42, -512, !dbg !59
  %84 = shl nsw i32 %83, 2, !dbg !60
  %85 = add nsw i32 %74, %84, !dbg !61
  %86 = sext i32 %85 to i64, !dbg !62
  %87 = getelementptr float, ptr addrspace(1) %10, i64 %86, !dbg !62
  %88 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %87, i1 %82, i32 0, i1 %82) #1, !dbg !63
  %89 = sext i32 %83 to i64, !dbg !64
  %90 = getelementptr float, ptr addrspace(1) %11, i64 %89, !dbg !64
  %91 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %90, i1 %82, i32 0, i1 %82) #1, !dbg !65
  %92 = icmp eq i32 %68, 768, !dbg !66
  %93 = add nsw i32 %42, -768, !dbg !67
  %94 = shl nsw i32 %93, 2, !dbg !68
  %95 = add nsw i32 %74, %94, !dbg !69
  %96 = sext i32 %95 to i64, !dbg !70
  %97 = getelementptr float, ptr addrspace(1) %12, i64 %96, !dbg !70
  %98 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %97, i1 %92, i32 0, i1 %92) #1, !dbg !71
  %99 = sext i32 %93 to i64, !dbg !72
  %100 = getelementptr float, ptr addrspace(1) %13, i64 %99, !dbg !72
  %101 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %100, i1 %92, i32 0, i1 %92) #1, !dbg !73
  %102 = icmp sgt i32 %42, 1023, !dbg !27
  %103 = add nsw i32 %42, -1024, !dbg !74
  %104 = shl nsw i32 %103, 2, !dbg !75
  %105 = add nsw i32 %74, %104, !dbg !52
  %106 = sext i32 %105 to i64, !dbg !76
  %107 = getelementptr float, ptr addrspace(1) %14, i64 %106, !dbg !76
  %108 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %107, i1 %102, i32 0, i1 %102) #1, !dbg !77
  %109 = sext i32 %103 to i64, !dbg !78
  %110 = getelementptr float, ptr addrspace(1) %15, i64 %109, !dbg !78
  %111 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %110, i1 %102, i32 0, i1 %102) #1, !dbg !79
  %112 = insertelement <4 x i32> poison, i32 %108, i64 0, !dbg !77
  %113 = insertelement <4 x i32> %112, i32 %98, i64 1, !dbg !77
  %114 = insertelement <4 x i32> %113, i32 %88, i64 2, !dbg !77
  %115 = insertelement <4 x i32> %114, i32 %78, i64 3, !dbg !77
  %116 = bitcast <4 x i32> %115 to <4 x float>, !dbg !77
  %117 = insertelement <4 x i32> poison, i32 %111, i64 0, !dbg !79
  %118 = insertelement <4 x i32> %117, i32 %101, i64 1, !dbg !79
  %119 = insertelement <4 x i32> %118, i32 %91, i64 2, !dbg !79
  %120 = insertelement <4 x i32> %119, i32 %81, i64 3, !dbg !79
  %121 = bitcast <4 x i32> %120 to <4 x float>, !dbg !79
  %122 = fadd <4 x float> %116, %121, !dbg !80
  %123 = fcmp olt <4 x float> %122, zeroinitializer, !dbg !81
  %124 = extractelement <4 x i1> %123, i64 3, !dbg !83
  %125 = extractelement <4 x float> %122, i64 3, !dbg !83
  %126 = select i1 %124, float 0.000000e+00, float %125, !dbg !83
  %127 = extractelement <4 x i1> %123, i64 2, !dbg !85
  %128 = extractelement <4 x float> %122, i64 2, !dbg !85
  %129 = select i1 %127, float 0.000000e+00, float %128, !dbg !85
  %130 = extractelement <4 x i1> %123, i64 1, !dbg !87
  %131 = extractelement <4 x float> %122, i64 1, !dbg !87
  %132 = select i1 %130, float 0.000000e+00, float %131, !dbg !87
  %133 = extractelement <4 x i1> %123, i64 0, !dbg !89
  %134 = extractelement <4 x float> %122, i64 0, !dbg !89
  %135 = select i1 %133, float 0.000000e+00, float %134, !dbg !89
  %136 = select i1 %102, float %135, float 0.000000e+00, !dbg !90
  %137 = select i1 %92, float %132, float %136, !dbg !91
  %138 = select i1 %82, float %129, float %137, !dbg !91
  %139 = select i1 %69, float %126, float %138, !dbg !91
  %140 = select i1 %43, float %67, float %139, !dbg !91
  %141 = sext i32 %23 to i64, !dbg !92
  %142 = getelementptr float, ptr addrspace(1) %16, i64 %141, !dbg !92
  %143 = bitcast float %140 to i32, !dbg !93
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %143, ptr addrspace(1) %142, i1 true) #1, !dbg !93
  ret void, !dbg !94
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cxap25ocqms4sa4uy5wixqoq6plpcxdfgtw4cnj5le4lof4vsaym.py", directory: "inductor_cache/xa")
!4 = !{ptr @triton_poi_fused_cat_30, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_30, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_30", linkageName: "triton_poi_fused_cat_30", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 21, scope: !7)
!17 = !DILocation(line: 27, column: 26, scope: !7)
!18 = !DILocation(line: 28, column: 19, scope: !7)
!19 = !DILocation(line: 35, column: 35, scope: !7)
!20 = !DILocation(line: 35, column: 49, scope: !7)
!21 = !DILocation(line: 35, column: 44, scope: !7)
!22 = !DILocation(line: 35, column: 30, scope: !7)
!23 = !DILocation(line: 45, column: 35, scope: !7)
!24 = !DILocation(line: 55, column: 31, scope: !7)
!25 = !DILocation(line: 59, column: 31, scope: !7)
!26 = !DILocation(line: 26, column: 19, scope: !7)
!27 = !DILocation(line: 97, column: 20, scope: !7)
!28 = !DILocation(line: 34, column: 18, scope: !7)
!29 = !DILocation(line: 35, column: 54, scope: !7)
!30 = !DILocation(line: 45, column: 41, scope: !7)
!31 = !DILocation(line: 45, column: 31, scope: !7)
!32 = !DILocation(line: 45, column: 47, scope: !7)
!33 = !DILocation(line: 46, column: 31, scope: !7)
!34 = !DILocation(line: 46, column: 36, scope: !7)
!35 = !DILocation(line: 47, column: 20, scope: !7)
!36 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !39)
!37 = distinct !DILexicalBlockFile(scope: !7, file: !38, discriminator: 0)
!38 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!39 = !DILocation(line: 49, column: 42, scope: !7)
!40 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !39)
!41 = !DILocation(line: 54, column: 20, scope: !7)
!42 = !DILocation(line: 55, column: 36, scope: !7)
!43 = !DILocation(line: 56, column: 20, scope: !7)
!44 = !DILocation(line: 57, column: 20, scope: !7)
!45 = !DILocation(line: 58, column: 20, scope: !7)
!46 = !DILocation(line: 59, column: 36, scope: !7)
!47 = !DILocation(line: 60, column: 20, scope: !7)
!48 = !DILocation(line: 61, column: 19, scope: !7)
!49 = !DILocation(line: 67, column: 20, scope: !7)
!50 = !DILocation(line: 68, column: 36, scope: !7)
!51 = !DILocation(line: 68, column: 39, scope: !7)
!52 = !DILocation(line: 100, column: 56, scope: !7)
!53 = !DILocation(line: 68, column: 54, scope: !7)
!54 = !DILocation(line: 68, column: 31, scope: !7)
!55 = !DILocation(line: 68, column: 64, scope: !7)
!56 = !DILocation(line: 69, column: 31, scope: !7)
!57 = !DILocation(line: 69, column: 45, scope: !7)
!58 = !DILocation(line: 78, column: 20, scope: !7)
!59 = !DILocation(line: 79, column: 49, scope: !7)
!60 = !DILocation(line: 79, column: 40, scope: !7)
!61 = !DILocation(line: 79, column: 55, scope: !7)
!62 = !DILocation(line: 79, column: 32, scope: !7)
!63 = !DILocation(line: 79, column: 65, scope: !7)
!64 = !DILocation(line: 80, column: 32, scope: !7)
!65 = !DILocation(line: 80, column: 46, scope: !7)
!66 = !DILocation(line: 89, column: 20, scope: !7)
!67 = !DILocation(line: 90, column: 49, scope: !7)
!68 = !DILocation(line: 90, column: 40, scope: !7)
!69 = !DILocation(line: 90, column: 55, scope: !7)
!70 = !DILocation(line: 90, column: 32, scope: !7)
!71 = !DILocation(line: 90, column: 65, scope: !7)
!72 = !DILocation(line: 91, column: 32, scope: !7)
!73 = !DILocation(line: 91, column: 46, scope: !7)
!74 = !DILocation(line: 100, column: 50, scope: !7)
!75 = !DILocation(line: 100, column: 40, scope: !7)
!76 = !DILocation(line: 100, column: 32, scope: !7)
!77 = !DILocation(line: 100, column: 66, scope: !7)
!78 = !DILocation(line: 101, column: 32, scope: !7)
!79 = !DILocation(line: 101, column: 47, scope: !7)
!80 = !DILocation(line: 102, column: 20, scope: !7)
!81 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !82)
!82 = !DILocation(line: 104, column: 42, scope: !7)
!83 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !84)
!84 = !DILocation(line: 72, column: 42, scope: !7)
!85 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !86)
!86 = !DILocation(line: 83, column: 42, scope: !7)
!87 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !88)
!88 = !DILocation(line: 94, column: 42, scope: !7)
!89 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !82)
!90 = !DILocation(line: 106, column: 35, scope: !7)
!91 = !DILocation(line: 0, scope: !7)
!92 = !DILocation(line: 111, column: 25, scope: !7)
!93 = !DILocation(line: 111, column: 37, scope: !7)
!94 = !DILocation(line: 111, column: 4, scope: !7)
