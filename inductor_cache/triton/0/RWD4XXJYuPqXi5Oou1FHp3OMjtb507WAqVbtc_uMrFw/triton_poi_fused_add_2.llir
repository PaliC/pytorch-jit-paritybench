; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 256, !dbg !14
  %14 = sext i32 %12 to i64, !dbg !15
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !15
  %16 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %15, i1 %13) #1, !dbg !16
  %17 = extractvalue { i32, i32 } %16, 0, !dbg !16
  %18 = extractvalue { i32, i32 } %16, 1, !dbg !16
  %19 = bitcast i32 %17 to float, !dbg !16
  %20 = bitcast i32 %18 to float, !dbg !16
  %21 = getelementptr float, ptr addrspace(1) %1, i64 %14, !dbg !17
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %21, i1 %13) #1, !dbg !18
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !18
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !18
  %25 = bitcast i32 %23 to float, !dbg !18
  %26 = bitcast i32 %24 to float, !dbg !18
  %27 = getelementptr float, ptr addrspace(1) %2, i64 %14, !dbg !19
  %28 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %27, i1 %13) #1, !dbg !20
  %29 = extractvalue { i32, i32 } %28, 0, !dbg !20
  %30 = extractvalue { i32, i32 } %28, 1, !dbg !20
  %31 = bitcast i32 %29 to float, !dbg !20
  %32 = bitcast i32 %30 to float, !dbg !20
  %33 = getelementptr float, ptr addrspace(1) %3, i64 %14, !dbg !21
  %34 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %33, i1 %13) #1, !dbg !22
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !22
  %36 = extractvalue { i32, i32 } %34, 1, !dbg !22
  %37 = bitcast i32 %35 to float, !dbg !22
  %38 = bitcast i32 %36 to float, !dbg !22
  %39 = getelementptr float, ptr addrspace(1) %4, i64 %14, !dbg !23
  %40 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %39, i1 %13) #1, !dbg !24
  %41 = extractvalue { i32, i32 } %40, 0, !dbg !24
  %42 = extractvalue { i32, i32 } %40, 1, !dbg !24
  %43 = bitcast i32 %41 to float, !dbg !24
  %44 = bitcast i32 %42 to float, !dbg !24
  %45 = fadd float %37, %43, !dbg !25
  %46 = fadd float %38, %44, !dbg !25
  %47 = fadd float %45, %31, !dbg !26
  %48 = fadd float %46, %32, !dbg !26
  %49 = fadd float %47, %25, !dbg !27
  %50 = fadd float %48, %26, !dbg !27
  %51 = fadd float %49, %19, !dbg !28
  %52 = fadd float %50, %20, !dbg !28
  %53 = bitcast float %51 to i32, !dbg !29
  %54 = bitcast float %52 to i32, !dbg !29
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %53, i32 %54, ptr addrspace(1) %15, i1 %13) #1, !dbg !29
  ret void, !dbg !30
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cgxw7lzqwd7groxp5wp6fhggsdd5dz2xwrrbho23bvjluhiqcyp4.py", directory: "inductor_cache/gx")
!4 = !{ptr @triton_poi_fused_add_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_2", linkageName: "triton_poi_fused_add_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 34, scope: !7)
!16 = !DILocation(line: 25, column: 39, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 35, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 35, scope: !7)
!25 = !DILocation(line: 30, column: 18, scope: !7)
!26 = !DILocation(line: 31, column: 18, scope: !7)
!27 = !DILocation(line: 32, column: 18, scope: !7)
!28 = !DILocation(line: 33, column: 18, scope: !7)
!29 = !DILocation(line: 34, column: 39, scope: !7)
!30 = !DILocation(line: 34, column: 4, scope: !7)
