; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__log_softmax_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 256, !dbg !14
  %.frozen = freeze i32 %8, !dbg !15
  %10 = sdiv i32 %.frozen, 64, !dbg !15
  %11 = mul i32 %10, 64, !dbg !16
  %.decomposed = sub i32 %.frozen, %11, !dbg !16
  %12 = shl nsw i32 %10, 4, !dbg !17
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !18
  %13 = sdiv i8 %.lhs.trunc, 16, !dbg !18
  %.sext = sext i8 %13 to i32, !dbg !18
  %14 = shl nsw i32 %.sext, 6, !dbg !19
  %15 = mul i8 %13, 16, !dbg !20
  %.decomposed3 = sub i8 %.lhs.trunc, %15, !dbg !20
  %.sext2 = sext i8 %.decomposed3 to i32, !dbg !20
  %16 = add nsw i32 %14, %.sext2, !dbg !21
  %17 = add nsw i32 %16, %12, !dbg !22
  %18 = sext i32 %17 to i64, !dbg !23
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !23
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %9) #1, !dbg !24
  %21 = bitcast i32 %20 to float, !dbg !24
  %22 = sext i32 %16 to i64, !dbg !25
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !25
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %9) #1, !dbg !26
  %25 = bitcast i32 %24 to float, !dbg !26
  %26 = getelementptr i8, ptr addrspace(1) %23, i64 64, !dbg !27
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %9) #1, !dbg !28
  %28 = bitcast i32 %27 to float, !dbg !28
  %29 = getelementptr i8, ptr addrspace(1) %23, i64 128, !dbg !29
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %9) #1, !dbg !30
  %31 = bitcast i32 %30 to float, !dbg !30
  %32 = getelementptr i8, ptr addrspace(1) %23, i64 192, !dbg !31
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %9) #1, !dbg !32
  %34 = bitcast i32 %33 to float, !dbg !32
  %35 = fcmp ogt float %25, %28, !dbg !33
  %36 = fcmp uno float %25, 0.000000e+00, !dbg !37
  %37 = or i1 %36, %35, !dbg !38
  %38 = select i1 %37, float %25, float %28, !dbg !39
  %39 = fcmp ogt float %38, %31, !dbg !40
  %40 = fcmp uno float %38, 0.000000e+00, !dbg !42
  %41 = or i1 %39, %40, !dbg !43
  %42 = select i1 %41, float %38, float %31, !dbg !44
  %43 = fcmp ogt float %42, %34, !dbg !45
  %44 = fcmp uno float %42, 0.000000e+00, !dbg !47
  %45 = or i1 %43, %44, !dbg !48
  %46 = select i1 %45, float %42, float %34, !dbg !49
  %47 = fsub float %21, %46, !dbg !50
  %48 = sext i32 %8 to i64, !dbg !51
  %49 = getelementptr float, ptr addrspace(1) %1, i64 %48, !dbg !51
  %50 = bitcast float %47 to i32, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %50, ptr addrspace(1) %49, i1 %9) #1, !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ch4d3trbnxjltxk5a7elnbhqljdh5cfya5ypql4klfz6kk3a3x3i.py", directory: "inductor_cache/h4")
!4 = !{ptr @triton_poi_fused__log_softmax_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__log_softmax_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__log_softmax_0", linkageName: "triton_poi_fused__log_softmax_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 33, scope: !7)
!18 = !DILocation(line: 27, column: 48, scope: !7)
!19 = !DILocation(line: 27, column: 42, scope: !7)
!20 = !DILocation(line: 27, column: 61, scope: !7)
!21 = !DILocation(line: 27, column: 38, scope: !7)
!22 = !DILocation(line: 27, column: 56, scope: !7)
!23 = !DILocation(line: 27, column: 30, scope: !7)
!24 = !DILocation(line: 27, column: 68, scope: !7)
!25 = !DILocation(line: 28, column: 30, scope: !7)
!26 = !DILocation(line: 28, column: 60, scope: !7)
!27 = !DILocation(line: 29, column: 30, scope: !7)
!28 = !DILocation(line: 29, column: 65, scope: !7)
!29 = !DILocation(line: 30, column: 30, scope: !7)
!30 = !DILocation(line: 30, column: 65, scope: !7)
!31 = !DILocation(line: 31, column: 30, scope: !7)
!32 = !DILocation(line: 31, column: 65, scope: !7)
!33 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !36)
!34 = distinct !DILexicalBlockFile(scope: !7, file: !35, discriminator: 0)
!35 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!36 = !DILocation(line: 32, column: 40, scope: !7)
!37 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !36)
!38 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !36)
!39 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !36)
!40 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !41)
!41 = !DILocation(line: 33, column: 40, scope: !7)
!42 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !41)
!43 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !41)
!44 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !41)
!45 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !46)
!46 = !DILocation(line: 34, column: 40, scope: !7)
!47 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !46)
!48 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !46)
!49 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !46)
!50 = !DILocation(line: 35, column: 18, scope: !7)
!51 = !DILocation(line: 36, column: 25, scope: !7)
!52 = !DILocation(line: 36, column: 36, scope: !7)
!53 = !DILocation(line: 36, column: 4, scope: !7)
