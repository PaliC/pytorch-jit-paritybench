; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_constant_pad_nd_convolution_max_pool2d_with_indices_relu_8(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %.frozen = freeze i32 %9, !dbg !14
  %10 = sdiv i32 %.frozen, 32, !dbg !14
  %11 = mul i32 %10, 32, !dbg !15
  %.decomposed = sub i32 %.frozen, %11, !dbg !15
  %12 = srem i32 %10, 16, !dbg !16
  %13 = sdiv i32 %9, 512, !dbg !17
  %14 = sext i32 %9 to i64, !dbg !18
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !18
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 true) #1, !dbg !19
  %17 = bitcast i32 %16 to float, !dbg !19
  %18 = sext i32 %.decomposed to i64, !dbg !20
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !20
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !21
  %21 = bitcast i32 %20 to float, !dbg !21
  %22 = fadd float %17, %21, !dbg !22
  %23 = icmp slt i32 %.decomposed, 28, !dbg !23
  %24 = mul nsw i32 %12, 56, !dbg !24
  %25 = mul i32 %13, 1792, !dbg !25
  %26 = add i32 %25, %.decomposed, !dbg !26
  %27 = add i32 %26, %24, !dbg !27
  %28 = sext i32 %27 to i64, !dbg !28
  %29 = getelementptr float, ptr addrspace(1) %2, i64 %28, !dbg !28
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %23, i32 0, i1 %23) #1, !dbg !29
  %31 = bitcast i32 %30 to float, !dbg !29
  %32 = add i32 %26, 28, !dbg !30
  %33 = add i32 %32, %24, !dbg !31
  %34 = sext i32 %33 to i64, !dbg !32
  %35 = getelementptr float, ptr addrspace(1) %2, i64 %34, !dbg !32
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %23, i32 0, i1 %23) #1, !dbg !33
  %37 = bitcast i32 %36 to float, !dbg !33
  %38 = fcmp ogt float %37, %31, !dbg !34
  %39 = fcmp uno float %37, 0.000000e+00, !dbg !38
  %40 = or i1 %38, %39, !dbg !39
  %41 = select i1 %40, float %37, float %31, !dbg !40
  %42 = add i32 %26, 896, !dbg !41
  %43 = add i32 %42, %24, !dbg !42
  %44 = sext i32 %43 to i64, !dbg !43
  %45 = getelementptr float, ptr addrspace(1) %2, i64 %44, !dbg !43
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %23, i32 0, i1 %23) #1, !dbg !44
  %47 = bitcast i32 %46 to float, !dbg !44
  %48 = fcmp olt float %41, %47, !dbg !45
  %49 = fcmp uno float %47, 0.000000e+00, !dbg !47
  %50 = or i1 %49, %48, !dbg !48
  %51 = select i1 %50, float %47, float %41, !dbg !49
  %52 = add i32 %26, 924, !dbg !50
  %53 = add i32 %52, %24, !dbg !51
  %54 = sext i32 %53 to i64, !dbg !52
  %55 = getelementptr float, ptr addrspace(1) %2, i64 %54, !dbg !52
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %23, i32 0, i1 %23) #1, !dbg !53
  %57 = bitcast i32 %56 to float, !dbg !53
  %58 = fcmp olt float %51, %57, !dbg !54
  %59 = fcmp uno float %57, 0.000000e+00, !dbg !56
  %60 = or i1 %59, %58, !dbg !57
  %61 = select i1 %60, float %57, float %51, !dbg !58
  %62 = select i1 %23, float %61, float 0.000000e+00, !dbg !59
  %63 = fadd float %22, %62, !dbg !60
  %64 = fcmp olt float %63, 0.000000e+00, !dbg !61
  %65 = select i1 %64, float 0.000000e+00, float %63, !dbg !63
  %66 = bitcast float %65 to i32, !dbg !64
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %66, ptr addrspace(1) %15, i1 true) #1, !dbg !64
  ret void, !dbg !65
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "craq2kyxzn26mgnfi3372p5ptbrkmghaqdtwnp7pugffxputapux.py", directory: "inductor_cache/ra")
!4 = !{ptr @triton_poi_fused_add_constant_pad_nd_convolution_max_pool2d_with_indices_relu_8, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_constant_pad_nd_convolution_max_pool2d_with_indices_relu_8, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_constant_pad_nd_convolution_max_pool2d_with_indices_relu_8", linkageName: "triton_poi_fused_add_constant_pad_nd_convolution_max_pool2d_with_indices_relu_8", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 26, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 27, scope: !7)
!17 = !DILocation(line: 27, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 34, scope: !7)
!19 = !DILocation(line: 28, column: 39, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 18, scope: !7)
!23 = !DILocation(line: 33, column: 18, scope: !7)
!24 = !DILocation(line: 34, column: 38, scope: !7)
!25 = !DILocation(line: 34, column: 48, scope: !7)
!26 = !DILocation(line: 34, column: 35, scope: !7)
!27 = !DILocation(line: 34, column: 43, scope: !7)
!28 = !DILocation(line: 34, column: 30, scope: !7)
!29 = !DILocation(line: 34, column: 53, scope: !7)
!30 = !DILocation(line: 35, column: 40, scope: !7)
!31 = !DILocation(line: 35, column: 48, scope: !7)
!32 = !DILocation(line: 35, column: 30, scope: !7)
!33 = !DILocation(line: 35, column: 58, scope: !7)
!34 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !37)
!35 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!36 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!37 = !DILocation(line: 36, column: 40, scope: !7)
!38 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !37)
!39 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !37)
!40 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !37)
!41 = !DILocation(line: 37, column: 41, scope: !7)
!42 = !DILocation(line: 37, column: 49, scope: !7)
!43 = !DILocation(line: 37, column: 30, scope: !7)
!44 = !DILocation(line: 37, column: 59, scope: !7)
!45 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !46)
!46 = !DILocation(line: 38, column: 41, scope: !7)
!47 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !46)
!48 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !46)
!49 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !46)
!50 = !DILocation(line: 39, column: 42, scope: !7)
!51 = !DILocation(line: 39, column: 50, scope: !7)
!52 = !DILocation(line: 39, column: 31, scope: !7)
!53 = !DILocation(line: 39, column: 60, scope: !7)
!54 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !55)
!55 = !DILocation(line: 40, column: 42, scope: !7)
!56 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !55)
!57 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !55)
!58 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !55)
!59 = !DILocation(line: 42, column: 34, scope: !7)
!60 = !DILocation(line: 43, column: 19, scope: !7)
!61 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !62)
!62 = !DILocation(line: 45, column: 42, scope: !7)
!63 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !62)
!64 = !DILocation(line: 46, column: 40, scope: !7)
!65 = !DILocation(line: 46, column: 4, scope: !7)
