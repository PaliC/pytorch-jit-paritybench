; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 6, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 2, !dbg !12
  %10 = and i32 %8, 62, !dbg !12
  %11 = or disjoint i32 %6, %10, !dbg !13
  %12 = or disjoint i32 %9, %6, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = icmp slt i32 %11, 64, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %15 = sdiv i32 %.frozen, 4, !dbg !15
  %16 = mul i32 %15, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %16, !dbg !16
  %17 = srem i32 %13, 4, !dbg !16
  %18 = icmp slt i32 %.decomposed, 1, !dbg !17
  %19 = icmp slt i32 %17, 1, !dbg !17
  %20 = sext i32 %15 to i64, !dbg !18
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !18
  %22 = and i1 %14, %18, !dbg !19
  %23 = and i1 %14, %19, !dbg !19
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %21, i1 %22, i32 0, i1 %22) #1, !dbg !20
  %25 = bitcast i32 %24 to float, !dbg !20
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %21, i1 %23, i32 0, i1 %23) #1, !dbg !20
  %27 = bitcast i32 %26 to float, !dbg !20
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !21
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %22, i32 0, i1 %22) #1, !dbg !22
  %30 = bitcast i32 %29 to float, !dbg !22
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %23, i32 0, i1 %23) #1, !dbg !22
  %32 = bitcast i32 %31 to float, !dbg !22
  %33 = fadd float %25, %30, !dbg !23
  %34 = fadd float %27, %32, !dbg !23
  %35 = icmp sgt i32 %17, 0, !dbg !24
  %36 = icmp slt i32 %.decomposed, 2, !dbg !25
  %37 = and i1 %35, %36, !dbg !26
  %38 = add nsw i32 %15, 16, !dbg !27
  %39 = sext i32 %38 to i64, !dbg !28
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !28
  %41 = and i1 %14, %37, !dbg !29
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 false, i32 0, i1 false) #1, !dbg !30
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %41, i32 0, i1 %41) #1, !dbg !30
  %44 = bitcast i32 %43 to float, !dbg !30
  %45 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !31
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 false, i32 0, i1 false) #1, !dbg !32
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %41, i32 0, i1 %41) #1, !dbg !32
  %48 = bitcast i32 %47 to float, !dbg !32
  %49 = fadd float %44, %48, !dbg !33
  %50 = icmp sgt i32 %.decomposed, 1, !dbg !34
  %51 = icmp slt i32 %17, 3, !dbg !35
  %52 = icmp eq i32 %.decomposed, 2, !dbg !36
  %53 = and i1 %50, %51, !dbg !36
  %54 = add nsw i32 %15, 32, !dbg !37
  %55 = sext i32 %54 to i64, !dbg !38
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !38
  %57 = and i1 %14, %52, !dbg !39
  %58 = and i1 %14, %53, !dbg !39
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %57, i32 0, i1 %57) #1, !dbg !40
  %60 = bitcast i32 %59 to float, !dbg !40
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %58, i32 0, i1 %58) #1, !dbg !40
  %62 = bitcast i32 %61 to float, !dbg !40
  %63 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !41
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %63, i1 %57, i32 0, i1 %57) #1, !dbg !42
  %65 = bitcast i32 %64 to float, !dbg !42
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %63, i1 %58, i32 0, i1 %58) #1, !dbg !42
  %67 = bitcast i32 %66 to float, !dbg !42
  %68 = fadd float %60, %65, !dbg !43
  %69 = fadd float %62, %67, !dbg !43
  %70 = icmp sgt i32 %.decomposed, 2, !dbg !44
  %71 = icmp sgt i32 %17, 2, !dbg !44
  %72 = add nsw i32 %15, 48, !dbg !45
  %73 = sext i32 %72 to i64, !dbg !46
  %74 = getelementptr float, ptr addrspace(1) %0, i64 %73, !dbg !46
  %75 = and i1 %14, %70, !dbg !47
  %76 = and i1 %14, %71, !dbg !47
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %74, i1 %75, i32 0, i1 %75) #1, !dbg !48
  %78 = bitcast i32 %77 to float, !dbg !48
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %74, i1 %76, i32 0, i1 %76) #1, !dbg !48
  %80 = bitcast i32 %79 to float, !dbg !48
  %81 = getelementptr float, ptr addrspace(1) %1, i64 %73, !dbg !49
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %81, i1 %75, i32 0, i1 %75) #1, !dbg !50
  %83 = bitcast i32 %82 to float, !dbg !50
  %84 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %81, i1 %76, i32 0, i1 %76) #1, !dbg !50
  %85 = bitcast i32 %84 to float, !dbg !50
  %86 = fadd float %78, %83, !dbg !51
  %87 = fadd float %80, %85, !dbg !51
  %88 = select i1 %70, float %86, float 0.000000e+00, !dbg !52
  %89 = select i1 %71, float %87, float 0.000000e+00, !dbg !52
  %90 = select i1 %52, float %68, float %88, !dbg !53
  %91 = select i1 %53, float %69, float %89, !dbg !53
  %92 = select i1 %37, float %49, float %91, !dbg !53
  %93 = select i1 %18, float %33, float %90, !dbg !53
  %94 = select i1 %19, float %34, float %92, !dbg !53
  %95 = sext i32 %11 to i64, !dbg !54
  %96 = getelementptr float, ptr addrspace(1) %2, i64 %95, !dbg !54
  %97 = bitcast float %93 to i32, !dbg !55
  %98 = bitcast float %94 to i32, !dbg !55
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %97, i32 %98, ptr addrspace(1) %96, i1 %14) #1, !dbg !55
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4hcjapnh3vluezf2oseu3oxdw23deqbsugntdavzyoe5ia6ankx.py", directory: "inductor_cache/4h")
!4 = !{ptr @triton_poi_fused_cat_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_3, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_3", linkageName: "triton_poi_fused_cat_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 30, scope: !7)
!19 = !DILocation(line: 32, column: 42, scope: !7)
!20 = !DILocation(line: 32, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 30, scope: !7)
!22 = !DILocation(line: 33, column: 35, scope: !7)
!23 = !DILocation(line: 34, column: 18, scope: !7)
!24 = !DILocation(line: 37, column: 20, scope: !7)
!25 = !DILocation(line: 39, column: 19, scope: !7)
!26 = !DILocation(line: 40, column: 20, scope: !7)
!27 = !DILocation(line: 41, column: 36, scope: !7)
!28 = !DILocation(line: 41, column: 31, scope: !7)
!29 = !DILocation(line: 41, column: 49, scope: !7)
!30 = !DILocation(line: 41, column: 41, scope: !7)
!31 = !DILocation(line: 42, column: 31, scope: !7)
!32 = !DILocation(line: 42, column: 41, scope: !7)
!33 = !DILocation(line: 43, column: 20, scope: !7)
!34 = !DILocation(line: 46, column: 20, scope: !7)
!35 = !DILocation(line: 48, column: 19, scope: !7)
!36 = !DILocation(line: 49, column: 20, scope: !7)
!37 = !DILocation(line: 50, column: 36, scope: !7)
!38 = !DILocation(line: 50, column: 31, scope: !7)
!39 = !DILocation(line: 50, column: 49, scope: !7)
!40 = !DILocation(line: 50, column: 41, scope: !7)
!41 = !DILocation(line: 51, column: 31, scope: !7)
!42 = !DILocation(line: 51, column: 41, scope: !7)
!43 = !DILocation(line: 52, column: 20, scope: !7)
!44 = !DILocation(line: 55, column: 20, scope: !7)
!45 = !DILocation(line: 58, column: 36, scope: !7)
!46 = !DILocation(line: 58, column: 31, scope: !7)
!47 = !DILocation(line: 58, column: 49, scope: !7)
!48 = !DILocation(line: 58, column: 41, scope: !7)
!49 = !DILocation(line: 59, column: 31, scope: !7)
!50 = !DILocation(line: 59, column: 41, scope: !7)
!51 = !DILocation(line: 60, column: 20, scope: !7)
!52 = !DILocation(line: 62, column: 35, scope: !7)
!53 = !DILocation(line: 0, scope: !7)
!54 = !DILocation(line: 66, column: 25, scope: !7)
!55 = !DILocation(line: 66, column: 37, scope: !7)
!56 = !DILocation(line: 66, column: 4, scope: !7)
