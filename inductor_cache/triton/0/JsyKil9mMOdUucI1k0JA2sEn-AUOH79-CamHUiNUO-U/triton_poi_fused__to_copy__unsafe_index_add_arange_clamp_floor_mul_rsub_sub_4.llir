; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_floor_mul_rsub_sub_4(ptr addrspace(1) %0, ptr addrspace(1) nocapture readnone %1, ptr addrspace(1) nocapture readnone %2, ptr addrspace(1) %3, ptr addrspace(1) nocapture readnone %4, ptr addrspace(1) nocapture readnone %5, ptr addrspace(1) nocapture readnone %6, ptr addrspace(1) nocapture readnone %7, ptr addrspace(1) nocapture readnone %8, ptr addrspace(1) nocapture readnone %9, i32 %10) local_unnamed_addr !dbg !7 {
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %13 = shl i32 %12, 7, !dbg !11
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %15 = and i32 %14, 127, !dbg !12
  %16 = or disjoint i32 %13, %15, !dbg !13
  %17 = icmp slt i32 %16, 1024, !dbg !14
  %.frozen = freeze i32 %16, !dbg !15
  %18 = sdiv i32 %.frozen, 16, !dbg !15
  %19 = srem i32 %18, 16, !dbg !16
  %20 = mul i32 %18, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %20, !dbg !17
  %21 = sdiv i32 %16, 256, !dbg !18
  %22 = sext i32 %21 to i64, !dbg !19
  %23 = getelementptr float, ptr addrspace(1) %3, i64 %22, !dbg !19
  %24 = getelementptr i8, ptr addrspace(1) %23, i64 16, !dbg !19
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %17) #2, !dbg !20
  %26 = bitcast i32 %25 to float, !dbg !20
  %27 = sitofp i32 %.decomposed to float, !dbg !21
  %28 = fadd float %27, 5.000000e-01, !dbg !22
  %29 = fmul float %28, 0x3FAFCD1E40000000, !dbg !23
  %30 = fadd float %29, -5.000000e-01, !dbg !24
  %31 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !25
  %.not.i = icmp eq i32 %31, 0, !dbg !25
  %32 = tail call float @llvm.nvvm.floor.ftz.f(float %30), !dbg !25
  %33 = tail call float @llvm.nvvm.floor.f(float %30), !dbg !25
  %.0.i = select i1 %.not.i, float %33, float %32, !dbg !25
  %34 = fsub float %30, %.0.i, !dbg !26
  %.inv = fcmp ole float %34, 0.000000e+00, !dbg !27
  %35 = select i1 %.inv, float 0.000000e+00, float %34, !dbg !27
  %36 = fcmp olt float %35, 1.000000e+00, !dbg !31
  %37 = fcmp uno float %35, 0.000000e+00, !dbg !33
  %38 = or i1 %36, %37, !dbg !34
  %39 = select i1 %38, float %35, float 1.000000e+00, !dbg !35
  %40 = fadd float %39, 1.000000e+00, !dbg !36
  %41 = fmul float %40, 7.500000e-01, !dbg !37
  %42 = fsub float 3.750000e+00, %41, !dbg !38
  %43 = fmul float %40, %42, !dbg !39
  %44 = fadd float %43, -6.000000e+00, !dbg !40
  %45 = fmul float %40, %44, !dbg !41
  %46 = fadd float %45, 3.000000e+00, !dbg !42
  %47 = fmul float %46, %26, !dbg !43
  %48 = fsub float 1.000000e+00, %39, !dbg !44
  %49 = insertelement <2 x float> poison, float %48, i64 0, !dbg !45
  %50 = insertelement <2 x float> %49, float %39, i64 1, !dbg !45
  %51 = fmul <2 x float> %50, splat (float 1.250000e+00), !dbg !45
  %52 = fadd <2 x float> %51, splat (float -2.250000e+00), !dbg !46
  %53 = fmul <2 x float> %50, %52, !dbg !47
  %54 = fmul <2 x float> %50, %53, !dbg !48
  %55 = fadd <2 x float> %54, splat (float 1.000000e+00), !dbg !49
  %56 = insertelement <2 x float> poison, float %26, i64 0, !dbg !50
  %57 = shufflevector <2 x float> %56, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !50
  %58 = fmul <2 x float> %55, %57, !dbg !50
  %59 = extractelement <2 x float> %58, i64 1, !dbg !51
  %60 = fadd float %59, %47, !dbg !51
  %61 = extractelement <2 x float> %58, i64 0, !dbg !52
  %62 = fadd float %61, %60, !dbg !52
  %63 = sitofp i32 %19 to float, !dbg !53
  %64 = fadd float %63, 5.000000e-01, !dbg !54
  %65 = fmul float %64, 0x3FAFCD1E40000000, !dbg !55
  %66 = fadd float %65, -5.000000e-01, !dbg !56
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !57
  %.not.i2 = icmp eq i32 %67, 0, !dbg !57
  %68 = tail call float @llvm.nvvm.floor.ftz.f(float %66), !dbg !57
  %69 = tail call float @llvm.nvvm.floor.f(float %66), !dbg !57
  %.0.i3 = select i1 %.not.i2, float %69, float %68, !dbg !57
  %70 = fsub float %66, %.0.i3, !dbg !58
  %.inv1 = fcmp ole float %70, 0.000000e+00, !dbg !59
  %71 = select i1 %.inv1, float 0.000000e+00, float %70, !dbg !59
  %72 = fcmp olt float %71, 1.000000e+00, !dbg !61
  %73 = fcmp uno float %71, 0.000000e+00, !dbg !63
  %74 = or i1 %72, %73, !dbg !64
  %75 = select i1 %74, float %71, float 1.000000e+00, !dbg !65
  %76 = fsub float 2.000000e+00, %39, !dbg !66
  %77 = fmul float %76, 7.500000e-01, !dbg !67
  %78 = fsub float 3.750000e+00, %77, !dbg !68
  %79 = fmul float %76, %78, !dbg !69
  %80 = insertelement <2 x float> poison, float %75, i64 0, !dbg !70
  %81 = insertelement <2 x float> %80, float %79, i64 1, !dbg !70
  %82 = fadd <2 x float> %81, <float 1.000000e+00, float -6.000000e+00>, !dbg !70
  %83 = fadd float %75, 1.000000e+00, !dbg !70
  %84 = fmul float %83, 7.500000e-01, !dbg !71
  %85 = fsub float 3.750000e+00, %84, !dbg !72
  %86 = insertelement <2 x float> poison, float %85, i64 0, !dbg !73
  %87 = insertelement <2 x float> %86, float %76, i64 1, !dbg !73
  %88 = fmul <2 x float> %82, %87, !dbg !73
  %89 = fadd <2 x float> %88, <float -6.000000e+00, float 3.000000e+00>, !dbg !74
  %90 = insertelement <2 x float> %82, float %26, i64 1, !dbg !75
  %91 = fmul <2 x float> %89, %90, !dbg !75
  %92 = insertelement <2 x float> <float 3.000000e+00, float poison>, float %62, i64 1, !dbg !76
  %93 = fadd <2 x float> %91, %92, !dbg !76
  %94 = extractelement <2 x float> %93, i64 0, !dbg !77
  %95 = extractelement <2 x float> %93, i64 1, !dbg !78
  %96 = fmul float %94, %95, !dbg !77
  %97 = fmul float %75, 1.250000e+00, !dbg !79
  %98 = fadd float %97, -2.250000e+00, !dbg !80
  %99 = fmul float %75, %98, !dbg !81
  %100 = fmul float %75, %99, !dbg !82
  %101 = fadd float %100, 1.000000e+00, !dbg !83
  %102 = fmul float %101, %95, !dbg !84
  %103 = fadd float %96, %102, !dbg !85
  %104 = fsub float 1.000000e+00, %75, !dbg !86
  %105 = fmul float %104, 1.250000e+00, !dbg !87
  %106 = fadd float %105, -2.250000e+00, !dbg !88
  %107 = fmul float %104, %106, !dbg !89
  %108 = fmul float %104, %107, !dbg !90
  %109 = fadd float %108, 1.000000e+00, !dbg !91
  %110 = fmul float %109, %95, !dbg !92
  %111 = fadd float %110, %103, !dbg !93
  %112 = fsub float 2.000000e+00, %75, !dbg !94
  %113 = fmul float %112, 7.500000e-01, !dbg !95
  %114 = fsub float 3.750000e+00, %113, !dbg !96
  %115 = fmul float %112, %114, !dbg !97
  %116 = fadd float %115, -6.000000e+00, !dbg !98
  %117 = fmul float %112, %116, !dbg !99
  %118 = fadd float %117, 3.000000e+00, !dbg !100
  %119 = fmul float %118, %95, !dbg !78
  %120 = fadd float %119, %111, !dbg !101
  %121 = sext i32 %16 to i64, !dbg !102
  %122 = getelementptr float, ptr addrspace(1) %0, i64 %121, !dbg !102
  %123 = bitcast float %120 to i32, !dbg !103
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %123, ptr addrspace(1) %122, i1 %17) #2, !dbg !103
  ret void, !dbg !104
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.f(float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2ryb7dfk4b3gizwykb4xn622drqqx35dcycl5mjv3jhxqn4s3iw.py", directory: "inductor_cache/2r")
!4 = !{ptr @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_floor_mul_rsub_sub_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_floor_mul_rsub_sub_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_floor_mul_rsub_sub_4", linkageName: "triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_floor_mul_rsub_sub_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 30, column: 30, scope: !7)
!20 = !DILocation(line: 30, column: 39, scope: !7)
!21 = !DILocation(line: 45, column: 21, scope: !7)
!22 = !DILocation(line: 47, column: 20, scope: !7)
!23 = !DILocation(line: 49, column: 20, scope: !7)
!24 = !DILocation(line: 50, column: 20, scope: !7)
!25 = !DILocation(line: 51, column: 28, scope: !7)
!26 = !DILocation(line: 52, column: 20, scope: !7)
!27 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !7, file: !29, discriminator: 0)
!29 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!30 = !DILocation(line: 54, column: 42, scope: !7)
!31 = !DILocation(line: 110, column: 15, scope: !28, inlinedAt: !32)
!32 = !DILocation(line: 56, column: 42, scope: !7)
!33 = !DILocation(line: 112, column: 21, scope: !28, inlinedAt: !32)
!34 = !DILocation(line: 112, column: 16, scope: !28, inlinedAt: !32)
!35 = !DILocation(line: 113, column: 29, scope: !28, inlinedAt: !32)
!36 = !DILocation(line: 57, column: 20, scope: !7)
!37 = !DILocation(line: 59, column: 20, scope: !7)
!38 = !DILocation(line: 61, column: 20, scope: !7)
!39 = !DILocation(line: 62, column: 20, scope: !7)
!40 = !DILocation(line: 64, column: 20, scope: !7)
!41 = !DILocation(line: 65, column: 20, scope: !7)
!42 = !DILocation(line: 67, column: 20, scope: !7)
!43 = !DILocation(line: 68, column: 19, scope: !7)
!44 = !DILocation(line: 84, column: 20, scope: !7)
!45 = !DILocation(line: 85, column: 20, scope: !7)
!46 = !DILocation(line: 86, column: 20, scope: !7)
!47 = !DILocation(line: 87, column: 20, scope: !7)
!48 = !DILocation(line: 88, column: 20, scope: !7)
!49 = !DILocation(line: 89, column: 20, scope: !7)
!50 = !DILocation(line: 90, column: 19, scope: !7)
!51 = !DILocation(line: 80, column: 20, scope: !7)
!52 = !DILocation(line: 91, column: 20, scope: !7)
!53 = !DILocation(line: 115, column: 21, scope: !7)
!54 = !DILocation(line: 116, column: 20, scope: !7)
!55 = !DILocation(line: 117, column: 20, scope: !7)
!56 = !DILocation(line: 118, column: 20, scope: !7)
!57 = !DILocation(line: 119, column: 28, scope: !7)
!58 = !DILocation(line: 120, column: 20, scope: !7)
!59 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !60)
!60 = !DILocation(line: 121, column: 42, scope: !7)
!61 = !DILocation(line: 110, column: 15, scope: !28, inlinedAt: !62)
!62 = !DILocation(line: 122, column: 42, scope: !7)
!63 = !DILocation(line: 112, column: 21, scope: !28, inlinedAt: !62)
!64 = !DILocation(line: 112, column: 16, scope: !28, inlinedAt: !62)
!65 = !DILocation(line: 113, column: 29, scope: !28, inlinedAt: !62)
!66 = !DILocation(line: 96, column: 20, scope: !7)
!67 = !DILocation(line: 97, column: 20, scope: !7)
!68 = !DILocation(line: 98, column: 20, scope: !7)
!69 = !DILocation(line: 99, column: 20, scope: !7)
!70 = !DILocation(line: 123, column: 20, scope: !7)
!71 = !DILocation(line: 124, column: 20, scope: !7)
!72 = !DILocation(line: 125, column: 20, scope: !7)
!73 = !DILocation(line: 126, column: 20, scope: !7)
!74 = !DILocation(line: 127, column: 20, scope: !7)
!75 = !DILocation(line: 128, column: 21, scope: !7)
!76 = !DILocation(line: 129, column: 22, scope: !7)
!77 = !DILocation(line: 130, column: 21, scope: !7)
!78 = !DILocation(line: 153, column: 21, scope: !7)
!79 = !DILocation(line: 131, column: 21, scope: !7)
!80 = !DILocation(line: 132, column: 22, scope: !7)
!81 = !DILocation(line: 133, column: 22, scope: !7)
!82 = !DILocation(line: 134, column: 22, scope: !7)
!83 = !DILocation(line: 135, column: 22, scope: !7)
!84 = !DILocation(line: 136, column: 21, scope: !7)
!85 = !DILocation(line: 137, column: 22, scope: !7)
!86 = !DILocation(line: 138, column: 21, scope: !7)
!87 = !DILocation(line: 139, column: 22, scope: !7)
!88 = !DILocation(line: 140, column: 22, scope: !7)
!89 = !DILocation(line: 141, column: 22, scope: !7)
!90 = !DILocation(line: 142, column: 22, scope: !7)
!91 = !DILocation(line: 143, column: 22, scope: !7)
!92 = !DILocation(line: 144, column: 21, scope: !7)
!93 = !DILocation(line: 145, column: 22, scope: !7)
!94 = !DILocation(line: 146, column: 21, scope: !7)
!95 = !DILocation(line: 147, column: 22, scope: !7)
!96 = !DILocation(line: 148, column: 22, scope: !7)
!97 = !DILocation(line: 149, column: 22, scope: !7)
!98 = !DILocation(line: 150, column: 22, scope: !7)
!99 = !DILocation(line: 151, column: 22, scope: !7)
!100 = !DILocation(line: 152, column: 22, scope: !7)
!101 = !DILocation(line: 154, column: 22, scope: !7)
!102 = !DILocation(line: 155, column: 28, scope: !7)
!103 = !DILocation(line: 155, column: 41, scope: !7)
!104 = !DILocation(line: 155, column: 4, scope: !7)
