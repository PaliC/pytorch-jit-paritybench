; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_23(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %10 = shl i32 %9, 9, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 1, !dbg !12
  %13 = and i32 %12, 510, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = sext i32 %14 to i64, !dbg !14
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !14
  %17 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %16, i1 true) #3, !dbg !15
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !15
  %19 = extractvalue { i32, i32 } %17, 1, !dbg !15
  %20 = bitcast i32 %18 to float, !dbg !15
  %21 = bitcast i32 %19 to float, !dbg !15
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #3, !dbg !16
  %23 = bitcast i32 %22 to float, !dbg !16
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #3, !dbg !17
  %25 = bitcast i32 %24 to float, !dbg !17
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %4, i1 true) #3, !dbg !18
  %27 = bitcast i32 %26 to float, !dbg !18
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %5, i1 true) #3, !dbg !19
  %29 = bitcast i32 %28 to float, !dbg !19
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %6, i1 true) #3, !dbg !20
  %31 = bitcast i32 %30 to float, !dbg !20
  %32 = fadd float %20, %23, !dbg !21
  %33 = fadd float %21, %23, !dbg !21
  %34 = fsub float %32, %25, !dbg !22
  %35 = fsub float %33, %25, !dbg !22
  %36 = fadd float %27, 0x3EE4F8B580000000, !dbg !23
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !24
  %.not.i = icmp eq i32 %37, 0, !dbg !24
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !24
  %.not1.i = icmp eq i32 %38, 0, !dbg !24
  br i1 %.not.i, label %44, label %39, !dbg !24

39:                                               ; preds = %8
  br i1 %.not1.i, label %42, label %40, !dbg !24

40:                                               ; preds = %39
  %41 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %36) #3, !dbg !24
  br label %__nv_sqrtf.exit, !dbg !24

42:                                               ; preds = %39
  %43 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %36) #3, !dbg !24
  br label %__nv_sqrtf.exit, !dbg !24

44:                                               ; preds = %8
  br i1 %.not1.i, label %47, label %45, !dbg !24

45:                                               ; preds = %44
  %46 = tail call float @llvm.nvvm.sqrt.rn.f(float %36) #3, !dbg !24
  br label %__nv_sqrtf.exit, !dbg !24

47:                                               ; preds = %44
  %48 = tail call float @llvm.nvvm.sqrt.approx.f(float %36) #3, !dbg !24
  br label %__nv_sqrtf.exit, !dbg !24

__nv_sqrtf.exit:                                  ; preds = %40, %42, %45, %47
  %.0.i = phi float [ %41, %40 ], [ %43, %42 ], [ %46, %45 ], [ %48, %47 ], !dbg !24
  %49 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !25
  %50 = fmul float %34, %49, !dbg !26
  %51 = fmul float %35, %49, !dbg !26
  %52 = fmul float %50, %29, !dbg !27
  %53 = fmul float %51, %29, !dbg !27
  %54 = fadd float %52, %31, !dbg !28
  %55 = fadd float %53, %31, !dbg !28
  %56 = fmul float %54, 0x3FF7154760000000, !dbg !29
  %57 = tail call float @llvm.nvvm.round.f(float %56) #3, !dbg !29
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i1 = icmp eq i32 %58, 0, !dbg !29
  %59 = tail call float @llvm.nvvm.fabs.ftz.f(float %54) #3, !dbg !29
  %60 = tail call float @llvm.nvvm.fabs.f(float %54) #3, !dbg !29
  %.03.i = select i1 %.not.i1, float %60, float %59, !dbg !29
  %61 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !29
  %t.0.i = select i1 %61, float 0.000000e+00, float %57, !dbg !29
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %64 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !29
  %j.0.i = select i1 %64, float 1.270000e+02, float %t.0.i, !dbg !29
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not8.i = icmp eq i32 %70, 0, !dbg !29
  br i1 %.not8.i, label %73, label %71, !dbg !29

71:                                               ; preds = %__nv_sqrtf.exit
  %72 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !29
  br label %__nv_expm1f.exit, !dbg !29

73:                                               ; preds = %__nv_sqrtf.exit
  %74 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !29
  br label %__nv_expm1f.exit, !dbg !29

__nv_expm1f.exit:                                 ; preds = %71, %73
  %.0.i2 = phi float [ %72, %71 ], [ %74, %73 ], !dbg !29
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %76 = fmul float %55, 0x3FF7154760000000, !dbg !29
  %77 = tail call float @llvm.nvvm.round.f(float %76) #3, !dbg !29
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i5 = icmp eq i32 %78, 0, !dbg !29
  %79 = tail call float @llvm.nvvm.fabs.ftz.f(float %55) #3, !dbg !29
  %80 = tail call float @llvm.nvvm.fabs.f(float %55) #3, !dbg !29
  %.03.i6 = select i1 %.not.i5, float %80, float %79, !dbg !29
  %81 = fcmp olt float %.03.i6, 0x3FDA3D70A0000000, !dbg !29
  %t.0.i7 = select i1 %81, float 0.000000e+00, float %77, !dbg !29
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %84 = fcmp oeq float %t.0.i7, 1.280000e+02, !dbg !29
  %j.0.i8 = select i1 %84, float 1.270000e+02, float %t.0.i7, !dbg !29
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not8.i9 = icmp eq i32 %90, 0, !dbg !29
  br i1 %.not8.i9, label %93, label %91, !dbg !29

91:                                               ; preds = %__nv_expm1f.exit
  %92 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i8) #3, !dbg !29
  br label %__nv_expm1f.exit31, !dbg !29

93:                                               ; preds = %__nv_expm1f.exit
  %94 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i8) #3, !dbg !29
  br label %__nv_expm1f.exit31, !dbg !29

__nv_expm1f.exit31:                               ; preds = %91, %93
  %.0.i10 = phi float [ %92, %91 ], [ %94, %93 ], !dbg !29
  %95 = fcmp oeq float %54, 0.000000e+00, !dbg !29
  %96 = fadd float %54, %54, !dbg !29
  %97 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !29
  %98 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !29
  %.not9.i = icmp eq i32 %75, 0, !dbg !29
  %.not7.i = icmp eq i32 %69, 0, !dbg !29
  %.not6.i = icmp eq i32 %68, 0, !dbg !29
  %.not5.i = icmp eq i32 %67, 0, !dbg !29
  %.not4.i = icmp eq i32 %66, 0, !dbg !29
  %.not3.i = icmp eq i32 %65, 0, !dbg !29
  %.not2.i3 = icmp eq i32 %63, 0, !dbg !29
  %99 = fneg float %t.0.i, !dbg !29
  %.not1.i4 = icmp eq i32 %62, 0, !dbg !29
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %99, float 0x3FE62E4000000000, float %54) #3, !dbg !29
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %99, float 0x3FE62E4000000000, float %54) #3, !dbg !29
  %.04.i = select i1 %.not1.i4, float %100, float %101, !dbg !29
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %99, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !29
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %99, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !29
  %.05.i = select i1 %.not2.i3, float %102, float %103, !dbg !29
  %104 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !29
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !29
  %.07.i = select i1 %.not3.i, float %104, float %105, !dbg !29
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !29
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !29
  %.08.i = select i1 %.not4.i, float %106, float %107, !dbg !29
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !29
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !29
  %.09.i = select i1 %.not5.i, float %108, float %109, !dbg !29
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !29
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !29
  %.06.i = select i1 %.not6.i, float %110, float %111, !dbg !29
  %112 = fmul float %.05.i, %.06.i, !dbg !29
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %112, float %.05.i, float %.05.i) #3, !dbg !29
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %112, float %.05.i, float %.05.i) #3, !dbg !29
  %.01.i = select i1 %.not7.i, float %113, float %114, !dbg !29
  %115 = fadd float %.0.i2, -1.000000e+00, !dbg !29
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i2, float %115) #3, !dbg !29
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i2, float %115) #3, !dbg !29
  %.02.i = select i1 %.not9.i, float %116, float %117, !dbg !29
  %118 = fadd float %.02.i, %.02.i, !dbg !29
  %u.0.i = select i1 %64, float %118, float %.02.i, !dbg !29
  %u.1.i = select i1 %98, float 0x7FF0000000000000, float %u.0.i, !dbg !29
  %u.2.i = select i1 %97, float -1.000000e+00, float %u.1.i, !dbg !29
  %u.3.i = select i1 %95, float %96, float %u.2.i, !dbg !29
  %119 = fcmp ogt float %55, 0.000000e+00, !dbg !30
  %120 = fcmp ogt float %54, 0.000000e+00, !dbg !30
  %.not7.i11 = icmp eq i32 %89, 0, !dbg !29
  %.not6.i12 = icmp eq i32 %88, 0, !dbg !29
  %.not5.i13 = icmp eq i32 %87, 0, !dbg !29
  %.not4.i14 = icmp eq i32 %86, 0, !dbg !29
  %.not3.i15 = icmp eq i32 %85, 0, !dbg !29
  %.not2.i16 = icmp eq i32 %83, 0, !dbg !29
  %121 = fneg float %t.0.i7, !dbg !29
  %.not1.i17 = icmp eq i32 %82, 0, !dbg !29
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %121, float 0x3FE62E4000000000, float %55) #3, !dbg !29
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %121, float 0x3FE62E4000000000, float %55) #3, !dbg !29
  %.04.i18 = select i1 %.not1.i17, float %122, float %123, !dbg !29
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %121, float 0x3EB7F7D1C0000000, float %.04.i18) #3, !dbg !29
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %121, float 0x3EB7F7D1C0000000, float %.04.i18) #3, !dbg !29
  %.05.i19 = select i1 %.not2.i16, float %124, float %125, !dbg !29
  %126 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i19, float 0x3F812ACC60000000) #3, !dbg !29
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i19, float 0x3F812ACC60000000) #3, !dbg !29
  %.07.i20 = select i1 %.not3.i15, float %126, float %127, !dbg !29
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i20, float %.05.i19, float 0x3FA5557C60000000) #3, !dbg !29
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i20, float %.05.i19, float 0x3FA5557C60000000) #3, !dbg !29
  %.08.i21 = select i1 %.not4.i14, float %128, float %129, !dbg !29
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i21, float %.05.i19, float 0x3FC5553EC0000000) #3, !dbg !29
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i21, float %.05.i19, float 0x3FC5553EC0000000) #3, !dbg !29
  %.09.i22 = select i1 %.not5.i13, float %130, float %131, !dbg !29
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i22, float %.05.i19, float 0x3FDFFFFFC0000000) #3, !dbg !29
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i22, float %.05.i19, float 0x3FDFFFFFC0000000) #3, !dbg !29
  %.06.i23 = select i1 %.not6.i12, float %132, float %133, !dbg !29
  %134 = fmul float %.05.i19, %.06.i23, !dbg !29
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %134, float %.05.i19, float %.05.i19) #3, !dbg !29
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %134, float %.05.i19, float %.05.i19) #3, !dbg !29
  %.01.i24 = select i1 %.not7.i11, float %135, float %136, !dbg !29
  %137 = fadd float %.0.i10, -1.000000e+00, !dbg !29
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not9.i25 = icmp eq i32 %138, 0, !dbg !29
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i24, float %.0.i10, float %137) #3, !dbg !29
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i24, float %.0.i10, float %137) #3, !dbg !29
  %.02.i26 = select i1 %.not9.i25, float %140, float %139, !dbg !29
  %141 = fadd float %.02.i26, %.02.i26, !dbg !29
  %u.0.i27 = select i1 %84, float %141, float %.02.i26, !dbg !29
  %142 = fcmp ogt float %j.0.i8, 1.280000e+02, !dbg !29
  %u.1.i28 = select i1 %142, float 0x7FF0000000000000, float %u.0.i27, !dbg !29
  %143 = fcmp olt float %j.0.i8, -2.500000e+01, !dbg !29
  %u.2.i29 = select i1 %143, float -1.000000e+00, float %u.1.i28, !dbg !29
  %144 = fcmp oeq float %55, 0.000000e+00, !dbg !29
  %145 = fadd float %55, %55, !dbg !29
  %u.3.i30 = select i1 %144, float %145, float %u.2.i29, !dbg !29
  %146 = select i1 %120, float %54, float %u.3.i, !dbg !31
  %147 = select i1 %119, float %55, float %u.3.i30, !dbg !31
  %148 = bitcast float %32 to i32, !dbg !32
  %149 = bitcast float %33 to i32, !dbg !32
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %148, i32 %149, ptr addrspace(1) %16, i1 true) #3, !dbg !32
  %150 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !33
  %151 = bitcast float %146 to i32, !dbg !34
  %152 = bitcast float %147 to i32, !dbg !34
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %151, i32 %152, ptr addrspace(1) %150, i1 true) #3, !dbg !34
  ret void, !dbg !35
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cima5rbndsuyjscmtbiojgsr5ej277cnm6vp2jrt3kllx3ybprwb.py", directory: "inductor_cache/im")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_23, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_23, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_23", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_23", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 34, scope: !7)
!15 = !DILocation(line: 25, column: 39, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 19, scope: !7)
!18 = !DILocation(line: 30, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 20, scope: !7)
!20 = !DILocation(line: 34, column: 20, scope: !7)
!21 = !DILocation(line: 36, column: 18, scope: !7)
!22 = !DILocation(line: 37, column: 18, scope: !7)
!23 = !DILocation(line: 39, column: 19, scope: !7)
!24 = !DILocation(line: 40, column: 27, scope: !7)
!25 = !DILocation(line: 42, column: 20, scope: !7)
!26 = !DILocation(line: 45, column: 19, scope: !7)
!27 = !DILocation(line: 46, column: 20, scope: !7)
!28 = !DILocation(line: 47, column: 20, scope: !7)
!29 = !DILocation(line: 51, column: 28, scope: !7)
!30 = !DILocation(line: 49, column: 20, scope: !7)
!31 = !DILocation(line: 53, column: 35, scope: !7)
!32 = !DILocation(line: 54, column: 39, scope: !7)
!33 = !DILocation(line: 55, column: 28, scope: !7)
!34 = !DILocation(line: 55, column: 40, scope: !7)
!35 = !DILocation(line: 55, column: 4, scope: !7)
