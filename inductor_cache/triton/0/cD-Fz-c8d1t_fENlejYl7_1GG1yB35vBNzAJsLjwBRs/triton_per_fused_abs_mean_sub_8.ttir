#loc = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":19:0)
#loc1 = loc(unknown)
#loc30 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":38:24)
#loc37 = loc(callsite(#loc1 at #loc30))
module {
  tt.func public @triton_per_fused_abs_mean_sub_8(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":19:0)) attributes {noinline = false} {
    %c8192_i32 = arith.constant 8192 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %cst = arith.constant dense<262144> : tensor<1x128xi32> loc(#loc1)
    %cst_0 = arith.constant dense<4096> : tensor<1x128xi32> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<1x128xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc3)
    %2 = tt.expand_dims %1 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc4)
    %3 = arith.remsi %0, %c128_i32 : i32 loc(#loc5)
    %4 = arith.divsi %0, %c128_i32 : i32 loc(#loc6)
    %5 = arith.remsi %2, %cst_1 : tensor<1x128xi32> loc(#loc7)
    %6 = arith.muli %5, %cst_1 : tensor<1x128xi32> loc(#loc8)
    %7 = arith.muli %4, %c128_i32 : i32 loc(#loc9)
    %8 = tt.splat %7 : i32 -> tensor<1x128xi32> loc(#loc10)
    %9 = arith.addi %2, %8 : tensor<1x128xi32> loc(#loc10)
    %10 = arith.divsi %9, %cst_1 : tensor<1x128xi32> loc(#loc11)
    %11 = arith.remsi %10, %cst_1 : tensor<1x128xi32> loc(#loc12)
    %12 = arith.muli %11, %cst_0 : tensor<1x128xi32> loc(#loc13)
    %13 = arith.addi %6, %12 : tensor<1x128xi32> loc(#loc14)
    %14 = arith.muli %3, %c8192_i32 : i32 loc(#loc15)
    %15 = tt.splat %14 : i32 -> tensor<1x128xi32> loc(#loc16)
    %16 = arith.addi %9, %15 : tensor<1x128xi32> loc(#loc16)
    %17 = arith.divsi %16, %cst : tensor<1x128xi32> loc(#loc17)
    %18 = arith.muli %17, %cst : tensor<1x128xi32> loc(#loc18)
    %19 = arith.addi %13, %18 : tensor<1x128xi32> loc(#loc19)
    %20 = arith.divsi %16, %cst_0 : tensor<1x128xi32> loc(#loc20)
    %21 = arith.remsi %20, %cst_1 : tensor<1x128xi32> loc(#loc21)
    %22 = arith.addi %19, %21 : tensor<1x128xi32> loc(#loc22)
    %23 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc23)
    %24 = tt.addptr %23, %22 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc23)
    %25 = tt.load %24 evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>> loc(#loc24)
    %26 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc25)
    %27 = tt.addptr %26, %22 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc25)
    %28 = tt.load %27 evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>> loc(#loc26)
    %29 = arith.subf %25, %28 : tensor<1x128xf32> loc(#loc27)
    %30 = math.absf %29 : tensor<1x128xf32> loc(#loc28)
    %31 = "tt.reduce"(%30) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc30)), %arg6: f32 loc(callsite(#loc1 at #loc30))):
      %35 = arith.addf %arg5, %arg6 : f32 loc(#loc39)
      tt.reduce.return %35 : f32 loc(#loc36)
    }) : (tensor<1x128xf32>) -> tensor<1xf32> loc(#loc36)
    %32 = tt.expand_dims %31 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc32)
    %33 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc33)
    %34 = tt.splat %33 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc33)
    tt.store %34, %32 : tensor<1x1x!tt.ptr<f32>> loc(#loc34)
    tt.return loc(#loc35)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":23:28)
#loc3 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":26:26)
#loc4 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":26:34)
#loc5 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":30:19)
#loc6 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":31:19)
#loc7 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:40)
#loc8 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:35)
#loc9 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:65)
#loc10 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:61)
#loc11 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:72)
#loc12 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:78)
#loc13 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:54)
#loc14 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:47)
#loc15 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:113)
#loc16 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:108)
#loc17 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:120)
#loc18 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:93)
#loc19 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:85)
#loc20 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:160)
#loc21 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:168)
#loc22 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:132)
#loc23 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:30)
#loc24 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":33:175)
#loc25 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":34:30)
#loc26 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":34:175)
#loc27 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":35:18)
#loc28 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":36:23)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc32 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":38:27)
#loc33 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":39:25)
#loc34 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":39:36)
#loc35 = loc("inductor_cache/ja/cja6rr7syjuu5ejhimstweh2m3zi4aetp23dkoxyy7vlkko4punz.py":39:4)
#loc36 = loc(callsite(#loc29 at #loc30))
#loc38 = loc(callsite(#loc31 at #loc29))
#loc39 = loc(callsite(#loc38 at #loc30))
