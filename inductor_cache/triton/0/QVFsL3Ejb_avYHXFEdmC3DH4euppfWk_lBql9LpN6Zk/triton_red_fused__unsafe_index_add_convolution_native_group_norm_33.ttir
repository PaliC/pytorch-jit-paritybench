#loc = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0)
#loc1 = loc(unknown)
#loc70 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":67:44)
#loc103 = loc(callsite(#loc1 at #loc70))
module {
  tt.func public @triton_red_fused__unsafe_index_add_convolution_native_group_norm_33(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<32> : tensor<1x512xi64> loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<8x512xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<1x512xi64> loc(#loc1)
    %cst_3 = arith.constant dense<0> : tensor<8x512xi64> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c65536_i32 = arith.constant 65536 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<32768> : tensor<8x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<1024> : tensor<8x512xi64> loc(#loc1)
    %cst_6 = arith.constant dense<32> : tensor<8x512xi64> loc(#loc1)
    %cst_7 = arith.constant dense<65536> : tensor<8x1xi32> loc(#loc1)
    %cst_8 = arith.constant dense<0.000000e+00> : tensor<8x512xf32> loc(#loc1)
    %cst_9 = arith.constant dense<16> : tensor<8x1xi32> loc(#loc1)
    %cst_10 = arith.constant dense<64> : tensor<1x512xi32> loc(#loc1)
    %cst_11 = arith.constant dense<4096> : tensor<1x512xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_12 = arith.constant dense<32> : tensor<8x1xi32> loc(#loc1)
    %cst_13 = arith.constant dense<4> : tensor<8x1xi32> loc(#loc1)
    %cst_14 = arith.constant dense<512> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_14 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<512xi32> -> tensor<1x512xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_13 : tensor<8x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_13 : tensor<8x1xi32> loc(#loc11)
    %11 = arith.remsi %10, %cst_12 : tensor<8x1xi32> loc(#loc12)
    %12 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc13)
    %13 = tt.addptr %12, %11 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc13)
    %14 = tt.load %13, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc14)
    %15 = arith.muli %9, %cst_9 : tensor<8x1xi32> loc(#loc15)
    %16 = tt.broadcast %15 : tensor<8x1xi32> -> tensor<8x512xi32> loc(#loc16)
    %17 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<8x512x!tt.ptr<i64>> loc(#loc17)
    %18 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x512xi1> loc(#loc18)
    %19 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<1x512x!tt.ptr<i64>> loc(#loc19)
    %20 = arith.muli %5, %cst_7 : tensor<8x1xi32> loc(#loc20)
    %21 = tt.broadcast %20 : tensor<8x1xi32> -> tensor<8x512xi32> loc(#loc21)
    %22 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x512x!tt.ptr<f32>> loc(#loc22)
    %23 = arith.muli %10, %cst_4 : tensor<8x1xi32> loc(#loc23)
    %24 = arith.extsi %23 : tensor<8x1xi32> to tensor<8x1xi64> loc(#loc24)
    %25 = tt.broadcast %24 : tensor<8x1xi64> -> tensor<8x512xi64> loc(#loc24)
    %26 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x512x!tt.ptr<f32>> loc(#loc25)
    %27 = tt.broadcast %14 : tensor<8x1xf32> -> tensor<8x512xf32> loc(#loc26)
    %28 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<8x512x!tt.ptr<f32>> loc(#loc27)
    %29:3 = scf.for %arg10 = %c0_i32 to %c65536_i32 step %c512_i32 iter_args(%arg11 = %cst_8, %arg12 = %cst_8, %arg13 = %cst_8) -> (tensor<8x512xf32>, tensor<8x512xf32>, tensor<8x512xf32>)  : i32 {
      %40 = tt.splat %arg10 : i32 -> tensor<1x512xi32> loc(#loc29)
      %41 = arith.addi %40, %8 : tensor<1x512xi32> loc(#loc29)
      %42 = arith.divsi %41, %cst_11 : tensor<1x512xi32> loc(#loc30)
      %43 = arith.divsi %41, %cst_10 : tensor<1x512xi32> loc(#loc31)
      %44 = arith.remsi %43, %cst_10 : tensor<1x512xi32> loc(#loc32)
      %45 = arith.remsi %41, %cst_10 : tensor<1x512xi32> loc(#loc33)
      %46 = tt.broadcast %42 : tensor<1x512xi32> -> tensor<8x512xi32> loc(#loc16)
      %47 = arith.addi %46, %16 : tensor<8x512xi32> loc(#loc16)
      %48 = tt.addptr %17, %47 : tensor<8x512x!tt.ptr<i64>>, tensor<8x512xi32> loc(#loc17)
      %49 = tt.load %48, %18, %cst_3 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<i64>> loc(#loc18)
      %50 = tt.addptr %19, %44 : tensor<1x512x!tt.ptr<i64>>, tensor<1x512xi32> loc(#loc19)
      %51 = tt.load %50 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<i64>> loc(#loc34)
      %52 = tt.addptr %19, %45 : tensor<1x512x!tt.ptr<i64>>, tensor<1x512xi32> loc(#loc35)
      %53 = tt.load %52 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<i64>> loc(#loc36)
      %54 = tt.broadcast %41 : tensor<1x512xi32> -> tensor<8x512xi32> loc(#loc21)
      %55 = arith.addi %54, %21 : tensor<8x512xi32> loc(#loc21)
      %56 = tt.addptr %22, %55 : tensor<8x512x!tt.ptr<f32>>, tensor<8x512xi32> loc(#loc22)
      %57 = tt.load %56, %18, %cst_8 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<f32>> loc(#loc37)
      %58 = arith.addi %49, %cst_6 : tensor<8x512xi64> loc(#loc38)
      %59 = arith.cmpi slt, %49, %cst_3 : tensor<8x512xi64> loc(#loc39)
      %60 = arith.select %59, %58, %49 : tensor<8x512xi1>, tensor<8x512xi64> loc(#loc40)
      %61 = arith.addi %51, %cst : tensor<1x512xi64> loc(#loc41)
      %62 = arith.cmpi slt, %51, %cst_2 : tensor<1x512xi64> loc(#loc42)
      %63 = arith.select %62, %61, %51 : tensor<1x512xi1>, tensor<1x512xi64> loc(#loc43)
      %64 = arith.addi %53, %cst : tensor<1x512xi64> loc(#loc44)
      %65 = arith.cmpi slt, %53, %cst_2 : tensor<1x512xi64> loc(#loc45)
      %66 = arith.select %65, %64, %53 : tensor<1x512xi1>, tensor<1x512xi64> loc(#loc46)
      %67 = arith.muli %63, %cst : tensor<1x512xi64> loc(#loc47)
      %68 = arith.addi %66, %67 : tensor<1x512xi64> loc(#loc48)
      %69 = tt.broadcast %68 : tensor<1x512xi64> -> tensor<8x512xi64> loc(#loc48)
      %70 = arith.muli %60, %cst_5 : tensor<8x512xi64> loc(#loc49)
      %71 = arith.addi %69, %70 : tensor<8x512xi64> loc(#loc50)
      %72 = arith.addi %71, %25 : tensor<8x512xi64> loc(#loc24)
      %73 = tt.addptr %26, %72 : tensor<8x512x!tt.ptr<f32>>, tensor<8x512xi64> loc(#loc25)
      %74 = tt.load %73, %18 evictionPolicy = evict_last : tensor<8x512x!tt.ptr<f32>> loc(#loc51)
      %75 = arith.addf %74, %27 : tensor<8x512xf32> loc(#loc26)
      %76 = arith.addf %75, %57 : tensor<8x512xf32> loc(#loc52)
      %77 = arith.cmpi eq, %arg10, %c0_i32 : i32 loc(#loc53)
      %78:3 = scf.if %77 -> (tensor<8x512xf32>, tensor<8x512xf32>, tensor<8x512xf32>) {
        scf.yield %cst_8, %76, %cst_1 : tensor<8x512xf32>, tensor<8x512xf32>, tensor<8x512xf32> loc(#loc94)
      } else {
        %83 = arith.subf %76, %arg11 : tensor<8x512xf32> loc(#loc95)
        %84 = arith.addf %arg13, %cst_1 : tensor<8x512xf32> loc(#loc96)
        %85 = arith.divf %83, %84 : tensor<8x512xf32> loc(#loc97)
        %86 = arith.addf %arg11, %85 : tensor<8x512xf32> loc(#loc98)
        %87 = arith.subf %76, %86 : tensor<8x512xf32> loc(#loc99)
        %88 = arith.mulf %83, %87 : tensor<8x512xf32> loc(#loc100)
        %89 = arith.addf %arg12, %88 : tensor<8x512xf32> loc(#loc101)
        scf.yield %89, %86, %84 : tensor<8x512xf32>, tensor<8x512xf32>, tensor<8x512xf32> loc(#loc101)
      } loc(#loc93)
      %79 = arith.select %18, %78#1, %arg11 : tensor<8x512xi1>, tensor<8x512xf32> loc(#loc64)
      %80 = arith.select %18, %78#0, %arg12 : tensor<8x512xi1>, tensor<8x512xf32> loc(#loc65)
      %81 = arith.select %18, %78#2, %arg13 : tensor<8x512xi1>, tensor<8x512xf32> loc(#loc66)
      %82 = tt.addptr %28, %55 : tensor<8x512x!tt.ptr<f32>>, tensor<8x512xi32> loc(#loc27)
      tt.store %82, %76, %18 : tensor<8x512x!tt.ptr<f32>> loc(#loc67)
      scf.yield %79, %80, %81 : tensor<8x512xf32>, tensor<8x512xf32>, tensor<8x512xf32> loc(#loc68)
    } loc(#loc28)
    %30:3 = "tt.reduce"(%29#0, %29#1, %29#2) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc70)), %arg11: f32 loc(callsite(#loc1 at #loc70)), %arg12: f32 loc(callsite(#loc1 at #loc70)), %arg13: f32 loc(callsite(#loc1 at #loc70)), %arg14: f32 loc(callsite(#loc1 at #loc70)), %arg15: f32 loc(callsite(#loc1 at #loc70))):
      %40 = arith.subf %arg13, %arg10 : f32 loc(#loc116)
      %41 = arith.addf %arg12, %arg15 : f32 loc(#loc117)
      %42 = arith.cmpf oeq, %41, %cst_0 : f32 loc(#loc118)
      %43 = arith.divf %arg15, %41 : f32 loc(#loc119)
      %44 = arith.select %42, %cst_0, %43 : f32 loc(#loc120)
      %45 = arith.mulf %40, %44 : f32 loc(#loc121)
      %46 = arith.addf %arg10, %45 : f32 loc(#loc122)
      %47 = arith.addf %arg11, %arg14 : f32 loc(#loc123)
      %48 = arith.mulf %40, %40 : f32 loc(#loc124)
      %49 = arith.mulf %48, %arg12 : f32 loc(#loc125)
      %50 = arith.mulf %49, %44 : f32 loc(#loc126)
      %51 = arith.addf %47, %50 : f32 loc(#loc127)
      tt.reduce.return %46, %51, %41 : f32, f32, f32 loc(#loc102)
    }) : (tensor<8x512xf32>, tensor<8x512xf32>, tensor<8x512xf32>) -> (tensor<8xf32>, tensor<8xf32>, tensor<8xf32>) loc(#loc102)
    %31 = tt.expand_dims %30#0 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc83)
    %32 = tt.expand_dims %30#1 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc84)
    %33 = tt.expand_dims %30#2 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc85)
    %34 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc86)
    %35 = tt.addptr %34, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc86)
    tt.store %35, %31, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc87)
    %36 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc88)
    %37 = tt.addptr %36, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc88)
    tt.store %37, %32, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc89)
    %38 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc90)
    %39 = tt.addptr %38, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc90)
    tt.store %39, %33, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc91)
    tt.return loc(#loc92)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":22:28)
#loc3 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":22:33)
#loc4 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":23:36)
#loc5 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":23:44)
#loc6 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":23:23)
#loc7 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":24:21)
#loc8 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":25:25)
#loc9 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":25:33)
#loc10 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":26:19)
#loc11 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":27:19)
#loc12 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":28:26)
#loc13 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":29:31)
#loc14 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":29:36)
#loc15 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:42)
#loc16 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:39)
#loc17 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:34)
#loc18 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:47)
#loc19 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":42:34)
#loc20 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:46)
#loc21 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:40)
#loc22 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:35)
#loc23 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:71)
#loc24 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:65)
#loc25 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:35)
#loc26 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":56:24)
#loc27 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":65:29)
#loc28 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":34:36)
#loc29 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":35:27)
#loc30 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":37:23)
#loc31 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":38:25)
#loc32 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":38:31)
#loc33 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":39:23)
#loc34 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":42:39)
#loc35 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":43:34)
#loc36 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":43:39)
#loc37 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:51)
#loc38 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":46:22)
#loc39 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":47:22)
#loc40 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":48:36)
#loc41 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":49:22)
#loc42 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":50:22)
#loc43 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":51:36)
#loc44 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":52:23)
#loc45 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":53:23)
#loc46 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":54:39)
#loc47 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:46)
#loc48 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:43)
#loc49 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:58)
#loc50 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:53)
#loc51 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:76)
#loc52 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":57:24)
#loc53 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":60:66)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc55 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":60:55)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc64 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":62:54)
#loc65 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":63:50)
#loc66 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":64:58)
#loc67 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":65:52)
#loc68 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":65:8)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc72 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc73 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc74 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc75 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc76 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc77 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc78 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc79 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc80 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc81 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc82 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc83 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":69:22)
#loc84 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":70:22)
#loc85 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":71:22)
#loc86 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":72:25)
#loc87 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":72:37)
#loc88 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":73:25)
#loc89 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":73:37)
#loc90 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":74:25)
#loc91 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":74:37)
#loc92 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":74:4)
#loc93 = loc(callsite(#loc54 at #loc55))
#loc94 = loc(callsite(#loc56 at #loc55))
#loc95 = loc(callsite(#loc57 at #loc55))
#loc96 = loc(callsite(#loc58 at #loc55))
#loc97 = loc(callsite(#loc59 at #loc55))
#loc98 = loc(callsite(#loc60 at #loc55))
#loc99 = loc(callsite(#loc61 at #loc55))
#loc100 = loc(callsite(#loc62 at #loc55))
#loc101 = loc(callsite(#loc63 at #loc55))
#loc102 = loc(callsite(#loc69 at #loc70))
#loc104 = loc(callsite(#loc71 at #loc69))
#loc105 = loc(callsite(#loc72 at #loc69))
#loc106 = loc(callsite(#loc73 at #loc69))
#loc107 = loc(callsite(#loc74 at #loc69))
#loc108 = loc(callsite(#loc75 at #loc69))
#loc109 = loc(callsite(#loc76 at #loc69))
#loc110 = loc(callsite(#loc77 at #loc69))
#loc111 = loc(callsite(#loc78 at #loc69))
#loc112 = loc(callsite(#loc79 at #loc69))
#loc113 = loc(callsite(#loc80 at #loc69))
#loc114 = loc(callsite(#loc81 at #loc69))
#loc115 = loc(callsite(#loc82 at #loc69))
#loc116 = loc(callsite(#loc104 at #loc70))
#loc117 = loc(callsite(#loc105 at #loc70))
#loc118 = loc(callsite(#loc106 at #loc70))
#loc119 = loc(callsite(#loc107 at #loc70))
#loc120 = loc(callsite(#loc108 at #loc70))
#loc121 = loc(callsite(#loc109 at #loc70))
#loc122 = loc(callsite(#loc110 at #loc70))
#loc123 = loc(callsite(#loc111 at #loc70))
#loc124 = loc(callsite(#loc112 at #loc70))
#loc125 = loc(callsite(#loc113 at #loc70))
#loc126 = loc(callsite(#loc114 at #loc70))
#loc127 = loc(callsite(#loc115 at #loc70))
