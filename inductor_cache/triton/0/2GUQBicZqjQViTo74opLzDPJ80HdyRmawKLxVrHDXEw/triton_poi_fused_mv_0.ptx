//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_mv_0   // -- Begin function triton_poi_fused_mv_0
                                        // @triton_poi_fused_mv_0
.visible .entry triton_poi_fused_mv_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_0_param_2,
	.param .u32 triton_poi_fused_mv_0_param_3
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<58>;
	.reg .f32 	%f<21>;
	.reg .b64 	%rd<25>;
	.loc	1 19 0                          // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_poi_fused_mv_0_param_0];
	ld.param.u64 	%rd3, [triton_poi_fused_mv_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:21:33
	shl.b32 	%r16, %r1, 6;
	ld.param.u64 	%rd15, [triton_poi_fused_mv_0_param_2];
	.loc	1 22 36                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:22:36
	mov.u32 	%r17, %tid.x;
	shl.b32 	%r18, %r17, 1;
	and.b32  	%r19, %r18, 2;
	and.b32  	%r20, %r18, 62;
	.loc	1 22 23                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:22:23
	or.b32  	%r21, %r16, %r20;
	or.b32  	%r22, %r19, %r16;
	or.b32  	%r23, %r22, 1;
	.loc	1 23 21                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:23:21
	setp.lt.s32 	%p1, %r21, 64;
	.loc	1 25 70                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:25:70
	shr.s32 	%r25, %r21, 31;
	shr.u32 	%r26, %r25, 30;
	add.s32 	%r27, %r21, %r26;
	shr.s32 	%r28, %r27, 2;
	.loc	1 25 39                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:25:39
	and.b32  	%r29, %r27, 1073741820;
	sub.s32 	%r30, %r21, %r29;
	bfe.s32 	%r31, %r1, 25, 1;
	shr.u32 	%r32, %r31, 30;
	add.s32 	%r33, %r23, %r32;
	and.b32  	%r34, %r33, 1073741764;
	sub.s32 	%r35, %r23, %r34;
	.loc	1 25 34                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:25:34
	shl.b32 	%r36, %r30, 2;
	shl.b32 	%r37, %r35, 2;
	.loc	1 25 55                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:25:55
	shr.u32 	%r38, %r31, 28;
	add.s32 	%r39, %r21, %r38;
	.loc	1 25 49                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:25:49
	shl.b32 	%r40, %r39, 2;
	and.b32  	%r41, %r40, -64;
	.loc	1 25 75                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:25:75
	shr.u32 	%r42, %r28, 30;
	add.s32 	%r43, %r28, %r42;
	and.b32  	%r44, %r43, -4;
	sub.s32 	%r45, %r28, %r44;
	.loc	1 25 45                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:25:45
	add.s32 	%r46, %r45, %r41;
	.loc	1 25 63                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:25:63
	add.s32 	%r47, %r46, %r36;
	add.s32 	%r48, %r46, %r37;
	.loc	1 25 30                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:25:30
	mul.wide.s32 	%rd16, %r47, 4;
	add.s64 	%rd1, %rd14, %rd16;
	mul.wide.s32 	%rd17, %r48, 4;
	add.s64 	%rd2, %rd14, %rd17;
	.loc	1 25 81                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:25:81
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	mov.pred 	%p3, -1;
	.loc	1 26 19                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:26:19
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	.loc	1 28 50                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:28:50
	add.s32 	%r49, %r46, 16;
	.loc	1 28 68                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:28:68
	add.s32 	%r50, %r49, %r36;
	add.s32 	%r51, %r49, %r37;
	.loc	1 28 30                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:28:30
	mul.wide.s32 	%rd18, %r50, 4;
	add.s64 	%rd4, %rd14, %rd18;
	mul.wide.s32 	%rd19, %r51, 4;
	add.s64 	%rd5, %rd14, %rd19;
	.loc	1 28 86                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:28:86
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	.loc	1 29 30                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:29:30
	add.s64 	%rd6, %rd3, 4;
	.loc	1 29 19                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:29:19
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p3 ld.global.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r7;
	.loc	1 31 50                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:31:50
	add.s32 	%r52, %r46, 32;
	.loc	1 31 68                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:31:68
	add.s32 	%r53, %r52, %r36;
	add.s32 	%r54, %r52, %r37;
	.loc	1 31 30                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:31:30
	mul.wide.s32 	%rd20, %r53, 4;
	add.s64 	%rd7, %rd14, %rd20;
	mul.wide.s32 	%rd21, %r54, 4;
	add.s64 	%rd8, %rd14, %rd21;
	.loc	1 31 86                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:31:86
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r9;
	.loc	1 32 31                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:32:31
	add.s64 	%rd9, %rd3, 8;
	.loc	1 32 20                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:32:20
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p3 ld.global.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	.loc	1 34 51                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:34:51
	add.s32 	%r55, %r46, 48;
	.loc	1 34 69                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:34:69
	add.s32 	%r56, %r55, %r36;
	add.s32 	%r57, %r55, %r37;
	.loc	1 34 31                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:34:31
	mul.wide.s32 	%rd22, %r56, 4;
	add.s64 	%rd10, %rd14, %rd22;
	mul.wide.s32 	%rd23, %r57, 4;
	add.s64 	%rd11, %rd14, %rd23;
	.loc	1 34 87                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:34:87
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r11;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r12;
	.loc	1 35 31                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:35:31
	add.s64 	%rd12, %rd3, 12;
	.loc	1 35 20                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:35:20
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p3 ld.global.b32 { %r13 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r13;
	.loc	1 38 18                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:38:18
	mul.f32 	%f13, %f4, %f6;
	mul.f32 	%f14, %f5, %f6;
	.loc	1 39 18                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:39:18
	fma.rn.f32 	%f15, %f1, %f3, %f13;
	fma.rn.f32 	%f16, %f2, %f3, %f14;
	.loc	1 41 19                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:41:19
	fma.rn.f32 	%f17, %f7, %f9, %f15;
	fma.rn.f32 	%f18, %f8, %f9, %f16;
	.loc	1 43 20                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:43:20
	fma.rn.f32 	%f19, %f10, %f12, %f17;
	fma.rn.f32 	%f20, %f11, %f12, %f18;
	.loc	1 44 25                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:44:25
	mul.wide.s32 	%rd24, %r21, 4;
	add.s64 	%rd13, %rd15, %rd24;
	.loc	1 44 37                         // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:44:37
	mov.b32 	%r14, %f19;
	mov.b32 	%r15, %f20;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd13 + 0 ], { %r14, %r15 };
	// end inline asm
	.loc	1 44 4                          // cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py:44:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/pn/cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 112
.b8 110
.b8 118
.b8 100
.b8 102
.b8 120
.b8 55
.b8 50
.b8 121
.b8 117
.b8 107
.b8 112
.b8 55
.b8 102
.b8 107
.b8 53
.b8 108
.b8 110
.b8 119
.b8 98
.b8 108
.b8 97
.b8 119
.b8 109
.b8 113
.b8 115
.b8 50
.b8 105
.b8 109
.b8 103
.b8 122
.b8 98
.b8 110
.b8 100
.b8 121
.b8 106
.b8 110
.b8 114
.b8 99
.b8 118
.b8 50
.b8 122
.b8 113
.b8 101
.b8 118
.b8 97
.b8 53
.b8 55
.b8 105
.b8 101
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 112
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
