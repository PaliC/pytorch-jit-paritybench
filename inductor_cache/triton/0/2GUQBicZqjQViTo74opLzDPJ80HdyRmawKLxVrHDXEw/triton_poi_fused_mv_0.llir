; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mv_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 6, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 2, !dbg !12
  %10 = and i32 %8, 62, !dbg !12
  %11 = or disjoint i32 %6, %10, !dbg !13
  %12 = or disjoint i32 %9, %6, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = icmp slt i32 %11, 64, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %15 = sdiv i32 %.frozen, 4, !dbg !15
  %16 = mul i32 %15, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %16, !dbg !16
  %17 = srem i32 %13, 4, !dbg !16
  %18 = shl nsw i32 %.decomposed, 2, !dbg !17
  %19 = shl nsw i32 %17, 2, !dbg !17
  %20 = sdiv i32 %11, 16, !dbg !18
  %21 = shl i32 %20, 6, !dbg !19
  %22 = srem i32 %15, 4, !dbg !20
  %23 = add i32 %22, %21, !dbg !21
  %24 = add i32 %23, %18, !dbg !22
  %25 = add i32 %23, %19, !dbg !22
  %26 = sext i32 %24 to i64, !dbg !23
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !23
  %28 = sext i32 %25 to i64, !dbg !23
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !23
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %14) #1, !dbg !24
  %31 = bitcast i32 %30 to float, !dbg !24
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %14) #1, !dbg !24
  %33 = bitcast i32 %32 to float, !dbg !24
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !25
  %35 = bitcast i32 %34 to float, !dbg !25
  %36 = add i32 %23, 16, !dbg !26
  %37 = add i32 %36, %18, !dbg !27
  %38 = add i32 %36, %19, !dbg !27
  %39 = sext i32 %37 to i64, !dbg !28
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !28
  %41 = sext i32 %38 to i64, !dbg !28
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !28
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %14) #1, !dbg !29
  %44 = bitcast i32 %43 to float, !dbg !29
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %14) #1, !dbg !29
  %46 = bitcast i32 %45 to float, !dbg !29
  %47 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !30
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #1, !dbg !31
  %49 = bitcast i32 %48 to float, !dbg !31
  %50 = add i32 %23, 32, !dbg !32
  %51 = add i32 %50, %18, !dbg !33
  %52 = add i32 %50, %19, !dbg !33
  %53 = sext i32 %51 to i64, !dbg !34
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !34
  %55 = sext i32 %52 to i64, !dbg !34
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !34
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 %14) #1, !dbg !35
  %58 = bitcast i32 %57 to float, !dbg !35
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %14) #1, !dbg !35
  %60 = bitcast i32 %59 to float, !dbg !35
  %61 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !36
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 true) #1, !dbg !37
  %63 = bitcast i32 %62 to float, !dbg !37
  %64 = add i32 %23, 48, !dbg !38
  %65 = add i32 %64, %18, !dbg !39
  %66 = add i32 %64, %19, !dbg !39
  %67 = sext i32 %65 to i64, !dbg !40
  %68 = getelementptr float, ptr addrspace(1) %0, i64 %67, !dbg !40
  %69 = sext i32 %66 to i64, !dbg !40
  %70 = getelementptr float, ptr addrspace(1) %0, i64 %69, !dbg !40
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %68, i1 %14) #1, !dbg !41
  %72 = bitcast i32 %71 to float, !dbg !41
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %70, i1 %14) #1, !dbg !41
  %74 = bitcast i32 %73 to float, !dbg !41
  %75 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !42
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 true) #1, !dbg !43
  %77 = bitcast i32 %76 to float, !dbg !43
  %78 = fmul float %31, %35, !dbg !44
  %79 = fmul float %33, %35, !dbg !44
  %80 = fmul float %44, %49, !dbg !45
  %81 = fmul float %46, %49, !dbg !45
  %82 = fadd float %78, %80, !dbg !46
  %83 = fadd float %79, %81, !dbg !46
  %84 = fmul float %58, %63, !dbg !47
  %85 = fmul float %60, %63, !dbg !47
  %86 = fadd float %82, %84, !dbg !48
  %87 = fadd float %83, %85, !dbg !48
  %88 = fmul float %72, %77, !dbg !49
  %89 = fmul float %74, %77, !dbg !49
  %90 = fadd float %86, %88, !dbg !50
  %91 = fadd float %87, %89, !dbg !50
  %92 = sext i32 %11 to i64, !dbg !51
  %93 = getelementptr float, ptr addrspace(1) %2, i64 %92, !dbg !51
  %94 = bitcast float %90 to i32, !dbg !52
  %95 = bitcast float %91 to i32, !dbg !52
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %94, i32 %95, ptr addrspace(1) %93, i1 %14) #1, !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpnvdfx72yukp7fk5lnwblawmqs2imgzbndyjnrcv2zqeva57ied.py", directory: "inductor_cache/pn")
!4 = !{ptr @triton_poi_fused_mv_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mv_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mv_0", linkageName: "triton_poi_fused_mv_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 70, scope: !7)
!16 = !DILocation(line: 25, column: 39, scope: !7)
!17 = !DILocation(line: 25, column: 34, scope: !7)
!18 = !DILocation(line: 25, column: 55, scope: !7)
!19 = !DILocation(line: 25, column: 49, scope: !7)
!20 = !DILocation(line: 25, column: 75, scope: !7)
!21 = !DILocation(line: 25, column: 45, scope: !7)
!22 = !DILocation(line: 25, column: 63, scope: !7)
!23 = !DILocation(line: 25, column: 30, scope: !7)
!24 = !DILocation(line: 25, column: 81, scope: !7)
!25 = !DILocation(line: 26, column: 19, scope: !7)
!26 = !DILocation(line: 28, column: 50, scope: !7)
!27 = !DILocation(line: 28, column: 68, scope: !7)
!28 = !DILocation(line: 28, column: 30, scope: !7)
!29 = !DILocation(line: 28, column: 86, scope: !7)
!30 = !DILocation(line: 29, column: 30, scope: !7)
!31 = !DILocation(line: 29, column: 19, scope: !7)
!32 = !DILocation(line: 31, column: 50, scope: !7)
!33 = !DILocation(line: 31, column: 68, scope: !7)
!34 = !DILocation(line: 31, column: 30, scope: !7)
!35 = !DILocation(line: 31, column: 86, scope: !7)
!36 = !DILocation(line: 32, column: 31, scope: !7)
!37 = !DILocation(line: 32, column: 20, scope: !7)
!38 = !DILocation(line: 34, column: 51, scope: !7)
!39 = !DILocation(line: 34, column: 69, scope: !7)
!40 = !DILocation(line: 34, column: 31, scope: !7)
!41 = !DILocation(line: 34, column: 87, scope: !7)
!42 = !DILocation(line: 35, column: 31, scope: !7)
!43 = !DILocation(line: 35, column: 20, scope: !7)
!44 = !DILocation(line: 37, column: 18, scope: !7)
!45 = !DILocation(line: 38, column: 18, scope: !7)
!46 = !DILocation(line: 39, column: 18, scope: !7)
!47 = !DILocation(line: 40, column: 19, scope: !7)
!48 = !DILocation(line: 41, column: 19, scope: !7)
!49 = !DILocation(line: 42, column: 20, scope: !7)
!50 = !DILocation(line: 43, column: 20, scope: !7)
!51 = !DILocation(line: 44, column: 25, scope: !7)
!52 = !DILocation(line: 44, column: 37, scope: !7)
!53 = !DILocation(line: 44, column: 4, scope: !7)
