; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_replication_pad2d_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 576, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %12 = sdiv i32 %.frozen, 4, !dbg !15
  %13 = mul i32 %12, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = srem i32 %10, 4, !dbg !16
  %15 = srem i32 %12, 6, !dbg !17
  %16 = sdiv i32 %9, 24, !dbg !18
  %17 = srem i32 %16, 6, !dbg !19
  %18 = sdiv i32 %9, 144, !dbg !20
  %19 = icmp sgt i32 %17, 1, !dbg !21
  %20 = tail call i32 @llvm.smin.i32(i32 %17, i32 4), !dbg !22
  %21 = shl nsw i32 %20, 2, !dbg !23
  %22 = add nsw i32 %21, -4, !dbg !23
  %23 = select i1 %19, i32 %22, i32 0, !dbg !24
  %24 = shl nsw i32 %.decomposed, 4, !dbg !25
  %25 = shl nsw i32 %14, 4, !dbg !25
  %26 = shl nsw i32 %18, 6, !dbg !26
  %27 = icmp sgt i32 %15, 1, !dbg !27
  %28 = tail call i32 @llvm.smin.i32(i32 %15, i32 4), !dbg !28
  %29 = add nsw i32 %28, -1, !dbg !28
  %30 = select i1 %27, i32 %29, i32 0, !dbg !29
  %31 = add nsw i32 %30, %26, !dbg !30
  %32 = add nsw i32 %31, %24, !dbg !31
  %33 = add nsw i32 %32, %23, !dbg !32
  %34 = add nsw i32 %31, %25, !dbg !31
  %35 = add nsw i32 %34, %23, !dbg !32
  %36 = sext i32 %33 to i64, !dbg !33
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !33
  %38 = sext i32 %35 to i64, !dbg !33
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !33
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %11) #2, !dbg !34
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %11) #2, !dbg !34
  %42 = sext i32 %9 to i64, !dbg !35
  %43 = getelementptr float, ptr addrspace(1) %1, i64 %42, !dbg !35
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %40, i32 %41, ptr addrspace(1) %43, i1 %11) #2, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cg25rezzf7ic2fhx4ozucj635iglfuz4g7eqlglbj7eh3kht7jve.py", directory: "inductor_cache/g2")
!4 = !{ptr @triton_poi_fused_replication_pad2d_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_replication_pad2d_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_replication_pad2d_0", linkageName: "triton_poi_fused_replication_pad2d_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 26, scope: !7)
!18 = !DILocation(line: 26, column: 21, scope: !7)
!19 = !DILocation(line: 26, column: 27, scope: !7)
!20 = !DILocation(line: 27, column: 19, scope: !7)
!21 = !DILocation(line: 29, column: 108, scope: !7)
!22 = !DILocation(line: 29, column: 117, scope: !7)
!23 = !DILocation(line: 29, column: 33, scope: !7)
!24 = !DILocation(line: 29, column: 93, scope: !7)
!25 = !DILocation(line: 29, column: 267, scope: !7)
!26 = !DILocation(line: 29, column: 275, scope: !7)
!27 = !DILocation(line: 29, column: 356, scope: !7)
!28 = !DILocation(line: 29, column: 365, scope: !7)
!29 = !DILocation(line: 29, column: 341, scope: !7)
!30 = !DILocation(line: 29, column: 264, scope: !7)
!31 = !DILocation(line: 29, column: 272, scope: !7)
!32 = !DILocation(line: 29, column: 281, scope: !7)
!33 = !DILocation(line: 29, column: 30, scope: !7)
!34 = !DILocation(line: 29, column: 512, scope: !7)
!35 = !DILocation(line: 30, column: 25, scope: !7)
!36 = !DILocation(line: 30, column: 36, scope: !7)
!37 = !DILocation(line: 30, column: 4, scope: !7)
