//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_div_mul_sigmoid_softplus_0 // -- Begin function triton_poi_fused_div_mul_sigmoid_softplus_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_div_mul_sigmoid_softplus_0
.visible .entry triton_poi_fused_div_mul_sigmoid_softplus_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_mul_sigmoid_softplus_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_mul_sigmoid_softplus_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_mul_sigmoid_softplus_0_param_2,
	.param .u32 triton_poi_fused_div_mul_sigmoid_softplus_0_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<21>;
	.reg .f32 	%f<53>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:19:0

// %bb.0:
	ld.param.u64 	%rd2, [triton_poi_fused_div_mul_sigmoid_softplus_0_param_2];
	ld.param.u64 	%rd5, [triton_poi_fused_div_mul_sigmoid_softplus_0_param_0];
	ld.param.u64 	%rd4, [triton_poi_fused_div_mul_sigmoid_softplus_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:21:28
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:21:33
	shl.b32 	%r6, %r3, 7;
	.loc	1 22 36                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:22:36
	mov.u32 	%r7, %tid.x;
	and.b32  	%r8, %r7, 127;
	.loc	1 22 23                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:22:23
	or.b32  	%r9, %r6, %r8;
	.loc	1 23 21                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:23:21
	setp.lt.s32 	%p1, %r9, 256;
	.loc	1 25 30                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:25:30
	cvt.s64.s32 	%rd1, %r9;
	mul.wide.s32 	%rd6, %r9, 4;
	add.s64 	%rd3, %rd5, %rd6;
	.loc	1 25 35                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:25:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.pred 	%p2, -1;
	.loc	1 26 19                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:26:19
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p2 ld.global.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r5;
	.loc	1 30 23                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:30:23
	mul.f32 	%f9, %f1, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8, %f9;
	// end inline asm
	mov.f32 	%f10, 0f3F800000;
	.loc	1 31 27                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:31:27
	add.rz.ftz.f32 	%f11, %f8, %f10;
	mov.b32 	%r10, %f11;
	add.s32 	%r11, %r10, -1061158912;
	and.b32  	%r12, %r11, -8388608;
	mov.b32 	%r2, %f8;
	sub.s32 	%r13, %r2, %r12;
	mov.b32 	%f12, %r13;
	mov.b32 	%r14, 1082130432;
	sub.s32 	%r15, %r14, %r12;
	mov.b32 	%f13, %r15;
	mov.f32 	%f14, 0fBF800000;
	mov.f32 	%f15, 0f3E800000;
	fma.rn.ftz.f32 	%f16, %f15, %f13, %f14;
	add.f32 	%f17, %f16, %f12;
	cvt.rn.f32.s32 	%f18, %r12;
	mul.f32 	%f19, %f18, 0f34000000;
	mov.f32 	%f20, 0f3DD80012;
	mov.f32 	%f21, 0fBD39BF78;
	fma.rn.ftz.f32 	%f22, %f21, %f17, %f20;
	mov.f32 	%f23, 0fBE0778E0;
	fma.rn.ftz.f32 	%f24, %f22, %f17, %f23;
	mov.f32 	%f25, 0f3E146475;
	fma.rn.ftz.f32 	%f26, %f24, %f17, %f25;
	mov.f32 	%f27, 0fBE2A68DD;
	fma.rn.ftz.f32 	%f28, %f26, %f17, %f27;
	mov.f32 	%f29, 0f3E4CAF9E;
	fma.rn.ftz.f32 	%f30, %f28, %f17, %f29;
	mov.f32 	%f31, 0fBE800042;
	fma.rn.ftz.f32 	%f32, %f30, %f17, %f31;
	mov.f32 	%f33, 0f3EAAAAE6;
	fma.rn.ftz.f32 	%f34, %f32, %f17, %f33;
	mov.f32 	%f35, 0fBF000000;
	fma.rn.ftz.f32 	%f36, %f34, %f17, %f35;
	mul.f32 	%f37, %f17, %f36;
	fma.rn.ftz.f32 	%f38, %f37, %f17, %f17;
	mov.f32 	%f39, 0f3F317218;
	fma.rn.ftz.f32 	%f52, %f19, %f39, %f38;
	setp.lt.u32 	%p3, %r2, 2139095040;
	@%p3 bra 	$L__BB0_4;
// %bb.1:
	setp.lt.s32 	%p4, %r2, -1082130431;
	@%p4 bra 	$L__BB0_3;
// %bb.2:                               // %__nv_fmaf_rn.exit.i
	.loc	1 0 27                          // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:0:27
	mov.f32 	%f40, 0f7F800000;
	fma.rn.ftz.f32 	%f52, %f8, %f40, %f40;
$L__BB0_3:
	.loc	1 31 27                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:31:27
	setp.eq.f32 	%p5, %f8, 0f00000000;
	selp.f32 	%f52, 0f80000000, %f52, %p5;
$L__BB0_4:                              // %__nv_log1pf.exit
	.loc	1 0 27                          // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:0:27
	cvt.u32.u64 	%r20, %rd1;
	.loc	1 23 21                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:23:21
	setp.lt.s32 	%p6, %r20, 256;
	.loc	1 29 18                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:29:18
	setp.gt.f32 	%p7, %f1, 0f41A00000;
	.loc	1 25 35                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:25:35
	mov.b32 	%f43, %r4;
	.loc	1 32 32                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:32:32
	selp.f32 	%f44, %f1, %f52, %p7;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	neg.f32 	%f45, %f44;
	fma.rn.f32 	%f46, %f45, %f43, 0f00000000;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f42, %f46, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f41, %f42;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f47, %f41, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r18, %f47;
	mov.b32 	%r17, 1065353216;
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%f48, %r16;
$L__tmp2:
	.loc	1 35 19                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:35:19
	mul.f32 	%f49, %f48, %f43;
	.loc	1 37 20                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:37:20
	mul.f32 	%f50, %f49, 0f3F68BA2F;
	.loc	1 38 25                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:38:25
	shl.b64 	%rd8, %rd1, 2;
	add.s64 	%rd7, %rd2, %rd8;
	.loc	1 38 37                         // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:38:37
	mov.b32 	%r19, %f50;
	// begin inline asm
	@%p6 st.global.b32 [ %rd7 + 0 ], { %r19 };
	// end inline asm
	.loc	1 38 4                          // cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py:38:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/lo/cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 188                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 111
.b8 105
.b8 98
.b8 102
.b8 55
.b8 101
.b8 98
.b8 116
.b8 103
.b8 55
.b8 99
.b8 50
.b8 52
.b8 104
.b8 54
.b8 101
.b8 103
.b8 114
.b8 55
.b8 121
.b8 100
.b8 109
.b8 50
.b8 99
.b8 103
.b8 101
.b8 108
.b8 110
.b8 113
.b8 107
.b8 106
.b8 116
.b8 109
.b8 114
.b8 53
.b8 97
.b8 50
.b8 52
.b8 102
.b8 101
.b8 122
.b8 98
.b8 115
.b8 121
.b8 103
.b8 107
.b8 54
.b8 108
.b8 55
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 108
.b8 111
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 112
.b8 108
.b8 117
.b8 115
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x91:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 34                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
