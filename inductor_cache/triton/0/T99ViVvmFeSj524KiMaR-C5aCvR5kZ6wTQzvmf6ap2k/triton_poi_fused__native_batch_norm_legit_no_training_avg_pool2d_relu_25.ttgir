#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_avg_pool2d_relu_25(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":19:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<34816> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<1088> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<8> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<64> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<17> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<2> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<0> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<16> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<-1> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<-64> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<2048> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<1> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<960> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<1024> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<-2> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<16> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_2 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_3 : tensor<512xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_4 : tensor<512xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_5 : tensor<512xi32, #blocked> loc(#loc9)
    %9 = arith.remsi %8, %cst_6 : tensor<512xi32, #blocked> loc(#loc10)
    %10 = arith.remsi %4, %cst_3 : tensor<512xi32, #blocked> loc(#loc11)
    %11 = arith.remsi %4, %cst_5 : tensor<512xi32, #blocked> loc(#loc12)
    %12 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc13)
    %13 = tt.addptr %12, %11 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc13)
    %14 = tt.load %13, %5 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc14)
    %15 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc15)
    %16 = tt.addptr %15, %11 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc15)
    %17 = tt.load %16, %5 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc16)
    %18 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc17)
    %19 = tt.addptr %18, %11 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc17)
    %20 = tt.load %19, %5 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc18)
    %21 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc19)
    %22 = tt.addptr %21, %11 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc19)
    %23 = tt.load %22, %5 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc20)
    %24 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc21)
    %25 = tt.addptr %24, %11 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc21)
    %26 = tt.load %25, %5 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc22)
    %27 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc23)
    %28 = tt.addptr %27, %11 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc23)
    %29 = tt.load %28, %5 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc24)
    %30 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc25)
    %31 = tt.addptr %30, %11 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc25)
    %32 = tt.load %31, %5 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc26)
    %33 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc27)
    %34 = tt.addptr %33, %11 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc27)
    %35 = tt.load %34, %5 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc28)
    %36 = arith.muli %7, %cst_7 : tensor<512xi32, #blocked> loc(#loc29)
    %37 = arith.extsi %36 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc30)
    %38 = arith.cmpi sge, %37, %cst_8 : tensor<512xi64, #blocked> loc(#loc30)
    %39 = arith.cmpi slt, %37, %cst_9 : tensor<512xi64, #blocked> loc(#loc31)
    %40 = arith.andi %38, %39 : tensor<512xi1, #blocked> loc(#loc32)
    %41 = arith.addi %9, %cst_10 : tensor<512xi32, #blocked> loc(#loc33)
    %42 = arith.extsi %41 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc34)
    %43 = arith.cmpi sge, %42, %cst_8 : tensor<512xi64, #blocked> loc(#loc34)
    %44 = arith.cmpi slt, %42, %cst_9 : tensor<512xi64, #blocked> loc(#loc35)
    %45 = arith.andi %43, %44 : tensor<512xi1, #blocked> loc(#loc36)
    %46 = arith.andi %40, %45 : tensor<512xi1, #blocked> loc(#loc37)
    %47 = arith.addi %10, %cst_11 : tensor<512xi32, #blocked> loc(#loc38)
    %48 = arith.muli %6, %cst_12 : tensor<512xi32, #blocked> loc(#loc39)
    %49 = arith.addi %47, %48 : tensor<512xi32, #blocked> loc(#loc40)
    %50 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc41)
    %51 = tt.addptr %50, %49 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc41)
    %52 = arith.andi %46, %5 : tensor<512xi1, #blocked> loc(#loc42)
    %53 = tt.load %51, %52, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc43)
    %54 = arith.extsi %9 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc44)
    %55 = arith.cmpi sge, %54, %cst_8 : tensor<512xi64, #blocked> loc(#loc44)
    %56 = arith.cmpi slt, %54, %cst_9 : tensor<512xi64, #blocked> loc(#loc45)
    %57 = arith.andi %55, %56 : tensor<512xi1, #blocked> loc(#loc46)
    %58 = arith.andi %40, %57 : tensor<512xi1, #blocked> loc(#loc47)
    %59 = arith.addi %10, %48 : tensor<512xi32, #blocked> loc(#loc48)
    %60 = tt.addptr %50, %59 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc49)
    %61 = arith.andi %58, %5 : tensor<512xi1, #blocked> loc(#loc50)
    %62 = tt.load %60, %61, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc51)
    %63 = arith.addf %62, %53 : tensor<512xf32, #blocked> loc(#loc52)
    %64 = arith.addi %36, %cst_13 : tensor<512xi32, #blocked> loc(#loc53)
    %65 = arith.extsi %64 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc54)
    %66 = arith.cmpi sge, %65, %cst_8 : tensor<512xi64, #blocked> loc(#loc54)
    %67 = arith.cmpi slt, %65, %cst_9 : tensor<512xi64, #blocked> loc(#loc55)
    %68 = arith.andi %66, %67 : tensor<512xi1, #blocked> loc(#loc56)
    %69 = arith.andi %68, %45 : tensor<512xi1, #blocked> loc(#loc57)
    %70 = arith.addi %10, %cst_14 : tensor<512xi32, #blocked> loc(#loc58)
    %71 = arith.addi %70, %48 : tensor<512xi32, #blocked> loc(#loc59)
    %72 = tt.addptr %50, %71 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc60)
    %73 = arith.andi %69, %5 : tensor<512xi1, #blocked> loc(#loc61)
    %74 = tt.load %72, %73, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc62)
    %75 = arith.addf %74, %63 : tensor<512xf32, #blocked> loc(#loc63)
    %76 = arith.andi %68, %57 : tensor<512xi1, #blocked> loc(#loc64)
    %77 = arith.addi %10, %cst_15 : tensor<512xi32, #blocked> loc(#loc65)
    %78 = arith.addi %77, %48 : tensor<512xi32, #blocked> loc(#loc66)
    %79 = tt.addptr %50, %78 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc67)
    %80 = arith.andi %76, %5 : tensor<512xi1, #blocked> loc(#loc68)
    %81 = tt.load %79, %80, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc69)
    %82 = arith.addf %81, %75 : tensor<512xf32, #blocked> loc(#loc70)
    %83 = arith.muli %7, %cst_16 : tensor<512xi32, #blocked> loc(#loc71)
    %84 = arith.addi %36, %cst_7 : tensor<512xi32, #blocked> loc(#loc72)
    %85 = arith.cmpi sge, %84, %cst_17 : tensor<512xi32, #blocked> loc(#loc73)
    %86 = arith.extui %85 : tensor<512xi1, #blocked> to tensor<512xi32, #blocked> loc(#loc74)
    %87 = arith.muli %86, %cst_17 : tensor<512xi32, #blocked> loc(#loc74)
    %88 = arith.cmpi slt, %84, %cst_17 : tensor<512xi32, #blocked> loc(#loc75)
    %89 = arith.extui %88 : tensor<512xi1, #blocked> to tensor<512xi32, #blocked> loc(#loc76)
    %90 = arith.muli %84, %89 : tensor<512xi32, #blocked> loc(#loc76)
    %91 = arith.addi %87, %90 : tensor<512xi32, #blocked> loc(#loc77)
    %92 = arith.addi %9, %cst_13 : tensor<512xi32, #blocked> loc(#loc78)
    %93 = arith.cmpi sge, %92, %cst_6 : tensor<512xi32, #blocked> loc(#loc79)
    %94 = arith.extui %93 : tensor<512xi1, #blocked> to tensor<512xi32, #blocked> loc(#loc80)
    %95 = arith.muli %94, %cst_6 : tensor<512xi32, #blocked> loc(#loc80)
    %96 = arith.cmpi slt, %92, %cst_6 : tensor<512xi32, #blocked> loc(#loc81)
    %97 = arith.extui %96 : tensor<512xi1, #blocked> to tensor<512xi32, #blocked> loc(#loc82)
    %98 = arith.muli %92, %97 : tensor<512xi32, #blocked> loc(#loc82)
    %99 = arith.addi %95, %98 : tensor<512xi32, #blocked> loc(#loc83)
    %100 = arith.muli %91, %99 : tensor<512xi32, #blocked> loc(#loc84)
    %101 = arith.addi %83, %100 : tensor<512xi32, #blocked> loc(#loc85)
    %102 = arith.muli %9, %cst_10 : tensor<512xi32, #blocked> loc(#loc86)
    %103 = arith.muli %102, %91 : tensor<512xi32, #blocked> loc(#loc87)
    %104 = arith.addi %101, %103 : tensor<512xi32, #blocked> loc(#loc88)
    %105 = arith.muli %83, %99 : tensor<512xi32, #blocked> loc(#loc89)
    %106 = arith.addi %104, %105 : tensor<512xi32, #blocked> loc(#loc90)
    %107 = arith.muli %9, %cst_7 : tensor<512xi32, #blocked> loc(#loc91)
    %108 = arith.muli %107, %7 : tensor<512xi32, #blocked> loc(#loc92)
    %109 = arith.addi %106, %108 : tensor<512xi32, #blocked> loc(#loc93)
    %110 = arith.addi %109, %91 : tensor<512xi32, #blocked> loc(#loc94)
    %111 = arith.sitofp %110 : tensor<512xi32, #blocked> to tensor<512xf32, #blocked> loc(#loc95)
    %112 = arith.divf %82, %111 : tensor<512xf32, #blocked> loc(#loc95)
    %113 = arith.subf %112, %14 : tensor<512xf32, #blocked> loc(#loc96)
    %114 = arith.addf %17, %cst_0 : tensor<512xf32, #blocked> loc(#loc97)
    %115 = tt.extern_elementwise %114 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc98)
    %116 = arith.divf %cst_1, %115 : tensor<512xf32, #blocked> loc(#loc99)
    %117 = arith.mulf %113, %116 : tensor<512xf32, #blocked> loc(#loc100)
    %118 = arith.mulf %117, %20 : tensor<512xf32, #blocked> loc(#loc101)
    %119 = arith.addf %118, %23 : tensor<512xf32, #blocked> loc(#loc102)
    %120 = arith.cmpf ogt, %cst, %119 : tensor<512xf32, #blocked> loc(#loc120)
    %121 = arith.select %120, %cst, %119 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc121)
    %122 = arith.subf %112, %26 : tensor<512xf32, #blocked> loc(#loc106)
    %123 = arith.addf %29, %cst_0 : tensor<512xf32, #blocked> loc(#loc107)
    %124 = tt.extern_elementwise %123 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc108)
    %125 = arith.divf %cst_1, %124 : tensor<512xf32, #blocked> loc(#loc109)
    %126 = arith.mulf %122, %125 : tensor<512xf32, #blocked> loc(#loc110)
    %127 = arith.mulf %126, %32 : tensor<512xf32, #blocked> loc(#loc111)
    %128 = arith.addf %127, %35 : tensor<512xf32, #blocked> loc(#loc112)
    %129 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc113)
    %130 = tt.addptr %129, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc113)
    tt.store %130, %112, %5 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc114)
    %131 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc115)
    %132 = tt.addptr %131, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc115)
    tt.store %132, %121, %5 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc116)
    %133 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc117)
    %134 = tt.addptr %133, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc117)
    tt.store %134, %128, %5 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc118)
    tt.return loc(#loc119)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":21:28)
#loc3 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":21:33)
#loc4 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":22:36)
#loc5 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":22:23)
#loc6 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":23:21)
#loc7 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":24:21)
#loc8 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":24:29)
#loc9 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":25:21)
#loc10 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":25:27)
#loc11 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":26:19)
#loc12 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":29:19)
#loc13 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":30:31)
#loc14 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":30:36)
#loc15 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":31:31)
#loc16 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":31:36)
#loc17 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":32:31)
#loc18 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":32:36)
#loc19 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":33:31)
#loc20 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":33:36)
#loc21 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":34:31)
#loc22 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":34:36)
#loc23 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":35:31)
#loc24 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":35:36)
#loc25 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":36:31)
#loc26 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":36:36)
#loc27 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":37:31)
#loc28 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":37:36)
#loc29 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":38:13)
#loc30 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":40:19)
#loc31 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":42:18)
#loc32 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":43:18)
#loc33 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":44:18)
#loc34 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":45:19)
#loc35 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":46:18)
#loc36 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":47:18)
#loc37 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":48:19)
#loc38 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":49:39)
#loc39 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":49:49)
#loc40 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":49:44)
#loc41 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":49:31)
#loc42 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":49:62)
#loc43 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":49:54)
#loc44 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":51:21)
#loc45 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":52:20)
#loc46 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":53:20)
#loc47 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":54:19)
#loc48 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":55:36)
#loc49 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":55:31)
#loc50 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":55:54)
#loc51 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":55:46)
#loc52 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":56:20)
#loc53 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":57:16)
#loc54 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":58:21)
#loc55 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":59:20)
#loc56 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":60:20)
#loc57 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":61:20)
#loc58 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":62:37)
#loc59 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":62:42)
#loc60 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":62:31)
#loc61 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":62:60)
#loc62 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":62:52)
#loc63 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":63:20)
#loc64 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":64:20)
#loc65 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":65:38)
#loc66 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":65:43)
#loc67 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":65:31)
#loc68 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":65:61)
#loc69 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":65:53)
#loc70 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":66:20)
#loc71 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:18)
#loc72 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:46)
#loc73 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:42)
#loc74 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:33)
#loc75 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:83)
#loc76 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:69)
#loc77 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:55)
#loc78 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:111)
#loc79 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:107)
#loc80 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:98)
#loc81 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:142)
#loc82 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:130)
#loc83 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:118)
#loc84 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:90)
#loc85 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:24)
#loc86 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:156)
#loc87 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:160)
#loc88 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:151)
#loc89 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:237)
#loc90 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:228)
#loc91 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:300)
#loc92 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:303)
#loc93 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:298)
#loc94 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":67:309)
#loc95 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":68:20)
#loc96 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":69:20)
#loc97 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":71:20)
#loc98 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":72:27)
#loc99 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":74:20)
#loc100 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":77:20)
#loc101 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":78:20)
#loc102 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":79:20)
#loc103 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc104 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":81:42)
#loc105 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc106 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":82:20)
#loc107 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":83:20)
#loc108 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":84:27)
#loc109 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":85:20)
#loc110 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":87:20)
#loc111 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":88:20)
#loc112 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":89:20)
#loc113 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":90:25)
#loc114 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":90:37)
#loc115 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":91:25)
#loc116 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":91:37)
#loc117 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":92:25)
#loc118 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":92:37)
#loc119 = loc("inductor_cache/2f/c2fixvw5jcbh2c2zedugy6e6rfuvokgpjp5oiey7op7iwsv2s5p3.py":92:4)
#loc120 = loc(callsite(#loc103 at #loc104))
#loc121 = loc(callsite(#loc105 at #loc104))
