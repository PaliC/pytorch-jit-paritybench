#loc = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":19:0)
module {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_20(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":19:0), %arg4: i32 loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":19:0)) attributes {noinline = false} {
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c5_i32 = arith.constant 5 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<2048> : tensor<1x256xi32> loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<1x256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<3> : tensor<1x256xi8> loc(#loc1)
    %cst_2 = arith.constant dense<2> : tensor<1x256xi8> loc(#loc1)
    %cst_3 = arith.constant dense<0> : tensor<1x256xi8> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<1x256xi8> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<1x256xi32> loc(#loc1)
    %cst_6 = arith.constant dense<512> : tensor<1x256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x256xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x256xi32> loc(#loc6)
    %6 = tt.get_program_id x : i32 loc(#loc7)
    %7 = arith.cmpi slt, %6, %c4_i32 : i32 loc(#loc8)
    %8 = arith.remsi %6, %c2_i32 : i32 loc(#loc9)
    %9 = arith.divsi %6, %c2_i32 : i32 loc(#loc10)
    %10 = arith.remsi %5, %cst_6 : tensor<1x256xi32> loc(#loc11)
    %11 = arith.divsi %5, %cst_6 : tensor<1x256xi32> loc(#loc12)
    %12 = arith.muli %8, %c2_i32 : i32 loc(#loc13)
    %13 = arith.muli %9, %c8_i32 : i32 loc(#loc14)
    %14 = arith.addi %12, %13 : i32 loc(#loc15)
    %15 = arith.muli %5, %cst_5 : tensor<1x256xi32> loc(#loc16)
    %16 = tt.splat %14 : i32 -> tensor<1x256xi32> loc(#loc17)
    %17 = arith.addi %16, %15 : tensor<1x256xi32> loc(#loc17)
    %18 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc18)
    %19 = tt.addptr %18, %17 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc18)
    %20 = tt.splat %7 : i1 -> tensor<1x256xi1> loc(#loc19)
    %21 = tt.load %19, %20 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc19)
    %22 = arith.addi %12, %c1_i32 : i32 loc(#loc20)
    %23 = arith.addi %22, %13 : i32 loc(#loc21)
    %24 = tt.splat %23 : i32 -> tensor<1x256xi32> loc(#loc22)
    %25 = arith.addi %24, %15 : tensor<1x256xi32> loc(#loc22)
    %26 = tt.addptr %18, %25 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc23)
    %27 = tt.load %26, %20 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc24)
    %28 = arith.addi %12, %c4_i32 : i32 loc(#loc25)
    %29 = arith.addi %28, %13 : i32 loc(#loc26)
    %30 = tt.splat %29 : i32 -> tensor<1x256xi32> loc(#loc27)
    %31 = arith.addi %30, %15 : tensor<1x256xi32> loc(#loc27)
    %32 = tt.addptr %18, %31 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc28)
    %33 = tt.load %32, %20 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc29)
    %34 = arith.addi %12, %c5_i32 : i32 loc(#loc30)
    %35 = arith.addi %34, %13 : i32 loc(#loc31)
    %36 = tt.splat %35 : i32 -> tensor<1x256xi32> loc(#loc32)
    %37 = arith.addi %36, %15 : tensor<1x256xi32> loc(#loc32)
    %38 = tt.addptr %18, %37 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc33)
    %39 = tt.load %38, %20 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc34)
    %40 = arith.cmpf ogt, %27, %21 : tensor<1x256xf32> loc(#loc56)
    %41 = arith.cmpf une, %27, %27 : tensor<1x256xf32> loc(#loc57)
    %42 = arith.ori %40, %41 : tensor<1x256xi1> loc(#loc58)
    %43 = arith.select %42, %27, %21 : tensor<1x256xi1>, tensor<1x256xf32> loc(#loc59)
    %44 = arith.cmpf ogt, %33, %43 : tensor<1x256xf32> loc(#loc60)
    %45 = arith.cmpf une, %33, %33 : tensor<1x256xf32> loc(#loc61)
    %46 = arith.ori %44, %45 : tensor<1x256xi1> loc(#loc62)
    %47 = arith.select %46, %33, %43 : tensor<1x256xi1>, tensor<1x256xf32> loc(#loc63)
    %48 = arith.cmpf ogt, %39, %47 : tensor<1x256xf32> loc(#loc64)
    %49 = arith.cmpf une, %39, %39 : tensor<1x256xf32> loc(#loc65)
    %50 = arith.ori %48, %49 : tensor<1x256xi1> loc(#loc66)
    %51 = arith.select %50, %39, %47 : tensor<1x256xi1>, tensor<1x256xf32> loc(#loc67)
    %52 = arith.select %40, %cst_4, %cst_3 : tensor<1x256xi1>, tensor<1x256xi8> loc(#loc42)
    %53 = arith.select %44, %cst_2, %52 : tensor<1x256xi1>, tensor<1x256xi8> loc(#loc43)
    %54 = arith.select %48, %cst_1, %53 : tensor<1x256xi1>, tensor<1x256xi8> loc(#loc44)
    %55 = arith.muli %5, %cst_0 : tensor<1x256xi32> loc(#loc45)
    %56 = tt.splat %6 : i32 -> tensor<1x256xi32> loc(#loc46)
    %57 = arith.addi %56, %55 : tensor<1x256xi32> loc(#loc46)
    %58 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc47)
    %59 = tt.addptr %58, %57 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc47)
    tt.store %59, %51, %20 : tensor<1x256x!tt.ptr<f32>> loc(#loc48)
    %60 = arith.muli %6, %c512_i32 : i32 loc(#loc49)
    %61 = tt.splat %60 : i32 -> tensor<1x256xi32> loc(#loc50)
    %62 = arith.addi %10, %61 : tensor<1x256xi32> loc(#loc50)
    %63 = arith.muli %11, %cst : tensor<1x256xi32> loc(#loc51)
    %64 = arith.addi %62, %63 : tensor<1x256xi32> loc(#loc52)
    %65 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<1x256x!tt.ptr<i8>> loc(#loc53)
    %66 = tt.addptr %65, %64 : tensor<1x256x!tt.ptr<i8>>, tensor<1x256xi32> loc(#loc53)
    tt.store %66, %54, %20 : tensor<1x256x!tt.ptr<i8>> loc(#loc54)
    tt.return loc(#loc55)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":22:28)
#loc3 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":22:33)
#loc4 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":23:36)
#loc5 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":23:44)
#loc6 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":23:23)
#loc7 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":25:28)
#loc8 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":27:21)
#loc9 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":28:19)
#loc10 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":29:19)
#loc11 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":32:19)
#loc12 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":33:19)
#loc13 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":34:32)
#loc14 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":34:39)
#loc15 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":34:37)
#loc16 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":34:47)
#loc17 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":34:44)
#loc18 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":34:30)
#loc19 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":34:52)
#loc20 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":35:34)
#loc21 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":35:41)
#loc22 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":35:48)
#loc23 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":35:30)
#loc24 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":35:56)
#loc25 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":36:34)
#loc26 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":36:41)
#loc27 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":36:48)
#loc28 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":36:30)
#loc29 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":36:56)
#loc30 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":37:34)
#loc31 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":37:41)
#loc32 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":37:48)
#loc33 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":37:30)
#loc34 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":37:56)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc36 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":38:40)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc40 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":39:40)
#loc41 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":40:40)
#loc42 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":44:33)
#loc43 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":47:35)
#loc44 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":50:35)
#loc45 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":51:32)
#loc46 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":51:30)
#loc47 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":51:25)
#loc48 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":51:43)
#loc49 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":52:34)
#loc50 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":52:30)
#loc51 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":52:44)
#loc52 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":52:39)
#loc53 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":52:25)
#loc54 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":52:56)
#loc55 = loc("inductor_cache/4r/c4rjn3i6dmommkba43uuwnv2uqpgcbl776txxe3w3vsoo6nytkax.py":52:4)
#loc56 = loc(callsite(#loc35 at #loc36))
#loc57 = loc(callsite(#loc37 at #loc36))
#loc58 = loc(callsite(#loc38 at #loc36))
#loc59 = loc(callsite(#loc39 at #loc36))
#loc60 = loc(callsite(#loc35 at #loc40))
#loc61 = loc(callsite(#loc37 at #loc40))
#loc62 = loc(callsite(#loc38 at #loc40))
#loc63 = loc(callsite(#loc39 at #loc40))
#loc64 = loc(callsite(#loc35 at #loc41))
#loc65 = loc(callsite(#loc37 at #loc41))
#loc66 = loc(callsite(#loc38 at #loc41))
#loc67 = loc(callsite(#loc39 at #loc41))
