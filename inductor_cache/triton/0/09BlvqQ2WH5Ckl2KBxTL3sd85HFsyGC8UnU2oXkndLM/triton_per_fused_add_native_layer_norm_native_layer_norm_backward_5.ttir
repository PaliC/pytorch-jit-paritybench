#loc = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0)
#loc1 = loc(unknown)
#loc32 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":44:26)
#loc39 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":52:26)
#loc56 = loc(callsite(#loc1 at #loc32))
#loc59 = loc(callsite(#loc1 at #loc39))
module {
  tt.func public @triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<3.125000e-02> : tensor<128x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<128x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<3.200000e+01> : tensor<128x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<32> : tensor<128x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<128x32xf32> loc(#loc1)
    %cst_4 = arith.constant dense<2048> : tensor<128x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<64> : tensor<1x32xi32> loc(#loc1)
    %cst_6 = arith.constant dense<64> : tensor<128x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<256> : tensor<128x1xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<128x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<128x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_7 : tensor<128x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_6 : tensor<128x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_6 : tensor<128x1xi32> loc(#loc11)
    %11 = arith.muli %8, %cst_5 : tensor<1x32xi32> loc(#loc12)
    %12 = tt.broadcast %9 : tensor<128x1xi32> -> tensor<128x32xi32> loc(#loc13)
    %13 = tt.broadcast %11 : tensor<1x32xi32> -> tensor<128x32xi32> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<128x32xi32> loc(#loc13)
    %15 = arith.muli %10, %cst_4 : tensor<128x1xi32> loc(#loc14)
    %16 = tt.broadcast %15 : tensor<128x1xi32> -> tensor<128x32xi32> loc(#loc15)
    %17 = arith.addi %14, %16 : tensor<128x32xi32> loc(#loc15)
    %18 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x32x!tt.ptr<f32>> loc(#loc16)
    %19 = tt.addptr %18, %17 : tensor<128x32x!tt.ptr<f32>>, tensor<128x32xi32> loc(#loc16)
    %20 = tt.broadcast %6 : tensor<128x1xi1> -> tensor<128x32xi1> loc(#loc17)
    %21 = tt.load %19, %20, %cst_3 : tensor<128x32x!tt.ptr<f32>> loc(#loc17)
    %22 = arith.muli %5, %cst_2 : tensor<128x1xi32> loc(#loc18)
    %23 = tt.broadcast %8 : tensor<1x32xi32> -> tensor<128x32xi32> loc(#loc19)
    %24 = tt.broadcast %22 : tensor<128x1xi32> -> tensor<128x32xi32> loc(#loc19)
    %25 = arith.addi %23, %24 : tensor<128x32xi32> loc(#loc19)
    %26 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x32x!tt.ptr<f32>> loc(#loc20)
    %27 = tt.addptr %26, %25 : tensor<128x32x!tt.ptr<f32>>, tensor<128x32xi32> loc(#loc20)
    %28 = tt.load %27, %20, %cst_3 : tensor<128x32x!tt.ptr<f32>> loc(#loc21)
    %29 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc22)
    %30 = tt.addptr %29, %8 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc22)
    %31 = tt.load %30 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc23)
    %32 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc24)
    %33 = tt.addptr %32, %8 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc24)
    %34 = tt.load %33 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc25)
    %35 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc26)
    %36 = tt.addptr %35, %8 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc26)
    %37 = tt.load %36 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc27)
    %38 = tt.broadcast %31 : tensor<1x32xf32> -> tensor<128x32xf32> loc(#loc28)
    %39 = arith.addf %28, %38 : tensor<128x32xf32> loc(#loc28)
    %40 = arith.addf %21, %39 : tensor<128x32xf32> loc(#loc29)
    %41 = arith.select %20, %40, %cst_3 : tensor<128x32xi1>, tensor<128x32xf32> loc(#loc30)
    %42 = "tt.reduce"(%41) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc32)), %arg11: f32 loc(callsite(#loc1 at #loc32))):
      %67 = arith.addf %arg10, %arg11 : f32 loc(#loc60)
      tt.reduce.return %67 : f32 loc(#loc55)
    }) : (tensor<128x32xf32>) -> tensor<128xf32> loc(#loc55)
    %43 = tt.expand_dims %42 {axis = 1 : i32} : tensor<128xf32> -> tensor<128x1xf32> loc(#loc34)
    %44 = arith.divf %43, %cst_1 : tensor<128x1xf32> loc(#loc35)
    %45 = tt.broadcast %44 : tensor<128x1xf32> -> tensor<128x32xf32> loc(#loc36)
    %46 = arith.subf %40, %45 : tensor<128x32xf32> loc(#loc36)
    %47 = arith.mulf %46, %46 : tensor<128x32xf32> loc(#loc37)
    %48 = arith.select %20, %47, %cst_3 : tensor<128x32xi1>, tensor<128x32xf32> loc(#loc38)
    %49 = "tt.reduce"(%48) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc39)), %arg11: f32 loc(callsite(#loc1 at #loc39))):
      %67 = arith.addf %arg10, %arg11 : f32 loc(#loc61)
      tt.reduce.return %67 : f32 loc(#loc58)
    }) : (tensor<128x32xf32>) -> tensor<128xf32> loc(#loc58)
    %50 = tt.expand_dims %49 {axis = 1 : i32} : tensor<128xf32> -> tensor<128x1xf32> loc(#loc40)
    %51 = arith.divf %50, %cst_1 : tensor<128x1xf32> loc(#loc41)
    %52 = arith.addf %51, %cst_0 : tensor<128x1xf32> loc(#loc42)
    %53 = tt.extern_elementwise %52 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<128x1xf32>) -> tensor<128x1xf32> loc(#loc43)
    %54 = tt.broadcast %53 : tensor<128x1xf32> -> tensor<128x32xf32> loc(#loc44)
    %55 = arith.mulf %46, %54 : tensor<128x32xf32> loc(#loc44)
    %56 = tt.broadcast %34 : tensor<1x32xf32> -> tensor<128x32xf32> loc(#loc45)
    %57 = arith.mulf %55, %56 : tensor<128x32xf32> loc(#loc45)
    %58 = tt.broadcast %37 : tensor<1x32xf32> -> tensor<128x32xf32> loc(#loc46)
    %59 = arith.addf %57, %58 : tensor<128x32xf32> loc(#loc46)
    %60 = arith.mulf %53, %cst : tensor<128x1xf32> loc(#loc47)
    %61 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<128x32x!tt.ptr<f32>> loc(#loc48)
    %62 = tt.addptr %61, %25 : tensor<128x32x!tt.ptr<f32>>, tensor<128x32xi32> loc(#loc48)
    tt.store %62, %55, %20 : tensor<128x32x!tt.ptr<f32>> loc(#loc49)
    %63 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<128x32x!tt.ptr<f32>> loc(#loc50)
    %64 = tt.addptr %63, %25 : tensor<128x32x!tt.ptr<f32>>, tensor<128x32xi32> loc(#loc50)
    tt.store %64, %59, %20 : tensor<128x32x!tt.ptr<f32>> loc(#loc51)
    %65 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<128x1x!tt.ptr<f32>> loc(#loc52)
    %66 = tt.addptr %65, %5 : tensor<128x1x!tt.ptr<f32>>, tensor<128x1xi32> loc(#loc52)
    tt.store %66, %60, %6 : tensor<128x1x!tt.ptr<f32>> loc(#loc53)
    tt.return loc(#loc54)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":23:28)
#loc3 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":23:33)
#loc4 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":24:36)
#loc5 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":24:44)
#loc6 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":24:23)
#loc7 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":25:21)
#loc8 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":26:26)
#loc9 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":26:34)
#loc10 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":30:19)
#loc11 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":31:19)
#loc12 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":33:38)
#loc13 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":33:35)
#loc14 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":33:48)
#loc15 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":33:43)
#loc16 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":33:30)
#loc17 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":33:53)
#loc18 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":34:38)
#loc19 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":34:35)
#loc20 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":34:30)
#loc21 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":34:43)
#loc22 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":35:30)
#loc23 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":35:35)
#loc24 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":36:31)
#loc25 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":36:36)
#loc26 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":37:31)
#loc27 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":37:36)
#loc28 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":38:18)
#loc29 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":39:18)
#loc30 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":43:34)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc34 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":44:29)
#loc35 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":47:20)
#loc36 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":48:19)
#loc37 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":49:20)
#loc38 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":51:35)
#loc40 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":52:29)
#loc41 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":55:20)
#loc42 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":57:20)
#loc43 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":58:28)
#loc44 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":59:20)
#loc45 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":60:20)
#loc46 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":61:20)
#loc47 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":63:20)
#loc48 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":64:25)
#loc49 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":64:45)
#loc50 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":65:25)
#loc51 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":65:45)
#loc52 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":66:25)
#loc53 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":66:37)
#loc54 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":66:4)
#loc55 = loc(callsite(#loc31 at #loc32))
#loc57 = loc(callsite(#loc33 at #loc31))
#loc58 = loc(callsite(#loc31 at #loc39))
#loc60 = loc(callsite(#loc57 at #loc32))
#loc61 = loc(callsite(#loc57 at #loc39))
