//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5 // -- Begin function triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5
.visible .entry triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_7,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_8,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<75>;
	.reg .b32 	%r<306>;
	.reg .f32 	%f<229>;
	.reg .b64 	%rd<39>;
	.loc	1 19 0                          // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd21, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_0];
	ld.param.u64 	%rd22, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_1];
$L__tmp0:
	.loc	1 23 28                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:23:33
	shl.b32 	%r178, %r1, 7;
	ld.param.u64 	%rd23, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_2];
	ld.param.u64 	%rd24, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_3];
	.loc	1 24 44                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:24:44
	mov.u32 	%r179, %tid.x;
	shl.b32 	%r180, %r179, 2;
	ld.param.u64 	%rd25, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_4];
	and.b32  	%r181, %r180, 28;
	ld.param.u64 	%rd26, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_5];
	and.b32  	%r182, %r180, 124;
	ld.param.u64 	%rd27, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_6];
	ld.param.u64 	%rd28, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_7];
	bfe.u32 	%r183, %r179, 3, 5;
	and.b32  	%r184, %r179, 127;
	.loc	1 24 23                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:24:23
	or.b32  	%r185, %r178, %r182;
	or.b32  	%r186, %r178, %r183;
	or.b32  	%r187, %r186, 32;
	or.b32  	%r188, %r186, 64;
	or.b32  	%r189, %r186, 96;
	.loc	1 25 21                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:25:21
	setp.lt.s32 	%p37, %r186, 256;
	setp.lt.s32 	%p42, %r187, 256;
	setp.lt.s32 	%p47, %r188, 256;
	setp.lt.s32 	%p52, %r189, 256;
	setp.lt.s32 	%p1, %r185, 256;
	.loc	1 31 19                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:31:19
	shr.s32 	%r191, %r185, 31;
	shr.u32 	%r192, %r191, 26;
	add.s32 	%r193, %r185, %r192;
	.loc	1 30 19                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:30:19
	and.b32  	%r194, %r193, -64;
	sub.s32 	%r195, %r185, %r194;
	.loc	1 33 38                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:33:38
	shl.b32 	%r196, %r179, 1;
	and.b32  	%r197, %r196, 448;
	.loc	1 33 48                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:33:48
	shl.b32 	%r198, %r193, 5;
	and.b32  	%r199, %r198, -2048;
	.loc	1 33 35                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:33:35
	add.s32 	%r200, %r199, %r195;
	.loc	1 33 43                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:33:43
	add.s32 	%r201, %r200, %r197;
	add.s32 	%r202, %r201, 512;
	add.s32 	%r203, %r201, 1024;
	add.s32 	%r204, %r201, 1536;
	.loc	1 33 30                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:33:30
	mul.wide.s32 	%rd29, %r201, 4;
	add.s64 	%rd1, %rd21, %rd29;
	mul.wide.s32 	%rd30, %r202, 4;
	add.s64 	%rd2, %rd21, %rd30;
	mul.wide.s32 	%rd31, %r203, 4;
	add.s64 	%rd3, %rd21, %rd31;
	mul.wide.s32 	%rd32, %r204, 4;
	add.s64 	%rd4, %rd21, %rd32;
	mov.b32 	%r6, 0;
	.loc	1 33 53                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:33:53
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r39, 0x0;
	mov.u32 %r41, 0x0;
	@%p1 ld.global.v4.b32 { %r35, %r37, %r39, %r41 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r35, %r6;
	@!%p1 mov.u32 %r37, %r6;
	@!%p1 mov.u32 %r39, %r6;
	@!%p1 mov.u32 %r41, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r43, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r47, 0x0;
	mov.u32 %r49, 0x0;
	@%p1 ld.global.v4.b32 { %r43, %r45, %r47, %r49 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r43, %r6;
	@!%p1 mov.u32 %r45, %r6;
	@!%p1 mov.u32 %r47, %r6;
	@!%p1 mov.u32 %r49, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r51, 0x0;
	mov.u32 %r53, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r57, 0x0;
	@%p1 ld.global.v4.b32 { %r51, %r53, %r55, %r57 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r51, %r6;
	@!%p1 mov.u32 %r53, %r6;
	@!%p1 mov.u32 %r55, %r6;
	@!%p1 mov.u32 %r57, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r59, 0x0;
	mov.u32 %r61, 0x0;
	mov.u32 %r63, 0x0;
	mov.u32 %r65, 0x0;
	@%p1 ld.global.v4.b32 { %r59, %r61, %r63, %r65 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r59, %r6;
	@!%p1 mov.u32 %r61, %r6;
	@!%p1 mov.u32 %r63, %r6;
	@!%p1 mov.u32 %r65, %r6;
	// end inline asm
	shl.b32 	%r205, %r179, 7;
	and.b32  	%r206, %r205, 3968;
	bfe.u32 	%r207, %r179, 5, 3;
	or.b32  	%r208, %r206, %r207;
	and.b32  	%r209, %r180, 1020;
	shr.u32 	%r210, %r206, 1;
	mov.u32 	%r211, global_smem;
	add.s32 	%r212, %r211, %r210;
	shl.b32 	%r213, %r208, 2;
	add.s32 	%r34, %r212, %r213;
	mov.pred 	%p21, -1;
	// begin inline asm
	@%p21 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	or.b32  	%r214, %r206, 32;
	shr.u32 	%r215, %r214, 1;
	add.s32 	%r216, %r211, %r215;
	add.s32 	%r217, %r216, %r213;
	add.s32 	%r36, %r217, 128;
	// begin inline asm
	@%p21 st.shared.b32 [ %r36 + 0 ], %r37;
	// end inline asm
	or.b32  	%r218, %r206, 64;
	shr.u32 	%r219, %r218, 1;
	add.s32 	%r220, %r211, %r219;
	add.s32 	%r221, %r220, %r213;
	add.s32 	%r38, %r221, 256;
	// begin inline asm
	@%p21 st.shared.b32 [ %r38 + 0 ], %r39;
	// end inline asm
	or.b32  	%r222, %r206, 96;
	shr.u32 	%r223, %r222, 1;
	add.s32 	%r224, %r211, %r223;
	add.s32 	%r225, %r224, %r213;
	add.s32 	%r40, %r225, 384;
	// begin inline asm
	@%p21 st.shared.b32 [ %r40 + 0 ], %r41;
	// end inline asm
	add.s32 	%r42, %r34, 32;
	// begin inline asm
	@%p21 st.shared.b32 [ %r42 + 0 ], %r43;
	// end inline asm
	add.s32 	%r44, %r217, 160;
	// begin inline asm
	@%p21 st.shared.b32 [ %r44 + 0 ], %r45;
	// end inline asm
	add.s32 	%r46, %r221, 288;
	// begin inline asm
	@%p21 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r48, %r225, 416;
	// begin inline asm
	@%p21 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	add.s32 	%r50, %r34, 64;
	// begin inline asm
	@%p21 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	add.s32 	%r52, %r217, 192;
	// begin inline asm
	@%p21 st.shared.b32 [ %r52 + 0 ], %r53;
	// end inline asm
	add.s32 	%r54, %r221, 320;
	// begin inline asm
	@%p21 st.shared.b32 [ %r54 + 0 ], %r55;
	// end inline asm
	add.s32 	%r56, %r225, 448;
	// begin inline asm
	@%p21 st.shared.b32 [ %r56 + 0 ], %r57;
	// end inline asm
	add.s32 	%r58, %r34, 96;
	// begin inline asm
	@%p21 st.shared.b32 [ %r58 + 0 ], %r59;
	// end inline asm
	add.s32 	%r60, %r217, 224;
	// begin inline asm
	@%p21 st.shared.b32 [ %r60 + 0 ], %r61;
	// end inline asm
	add.s32 	%r62, %r221, 352;
	// begin inline asm
	@%p21 st.shared.b32 [ %r62 + 0 ], %r63;
	// end inline asm
	add.s32 	%r64, %r225, 480;
	// begin inline asm
	@%p21 st.shared.b32 [ %r64 + 0 ], %r65;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r226, %r196, 496;
	add.s32 	%r227, %r211, %r226;
	shl.b32 	%r228, %r209, 2;
	add.s32 	%r229, %r227, %r228;
	ld.shared.v4.f32 	{%f1, %f2, %f3, %f4}, [%r229];
	or.b32  	%r230, %r209, 1024;
	shr.u32 	%r231, %r230, 1;
	and.b32  	%r232, %r231, 1008;
	add.s32 	%r233, %r211, %r232;
	add.s32 	%r234, %r233, %r228;
	ld.shared.v4.f32 	{%f5, %f6, %f7, %f8}, [%r234+4096];
	or.b32  	%r235, %r209, 2048;
	shr.u32 	%r236, %r235, 1;
	and.b32  	%r237, %r236, 1520;
	add.s32 	%r238, %r211, %r237;
	add.s32 	%r239, %r238, %r228;
	ld.shared.v4.f32 	{%f9, %f10, %f11, %f12}, [%r239+8192];
	or.b32  	%r240, %r209, 3072;
	shr.u32 	%r241, %r240, 1;
	and.b32  	%r242, %r241, 2032;
	add.s32 	%r243, %r211, %r242;
	add.s32 	%r244, %r243, %r228;
	ld.shared.v4.f32 	{%f13, %f14, %f15, %f16}, [%r244+12288];
	.loc	1 34 38                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:34:38
	shl.b32 	%r245, %r186, 5;
	shl.b32 	%r246, %r187, 5;
	shl.b32 	%r247, %r188, 5;
	shl.b32 	%r248, %r189, 5;
	.loc	1 34 35                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:34:35
	or.b32  	%r249, %r245, %r181;
	or.b32  	%r250, %r246, %r181;
	or.b32  	%r251, %r247, %r181;
	or.b32  	%r252, %r248, %r181;
	.loc	1 34 30                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:34:30
	mul.wide.s32 	%rd33, %r249, 4;
	add.s64 	%rd5, %rd22, %rd33;
	mul.wide.s32 	%rd34, %r250, 4;
	add.s64 	%rd6, %rd22, %rd34;
	mul.wide.s32 	%rd35, %r251, 4;
	add.s64 	%rd7, %rd22, %rd35;
	mul.wide.s32 	%rd36, %r252, 4;
	add.s64 	%rd8, %rd22, %rd36;
	.loc	1 34 43                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:34:43
	// begin inline asm
	mov.u32 %r66, 0x0;
	mov.u32 %r67, 0x0;
	mov.u32 %r68, 0x0;
	mov.u32 %r69, 0x0;
	@%p37 ld.global.v4.b32 { %r66, %r67, %r68, %r69 }, [ %rd5 + 0 ];
	@!%p37 mov.u32 %r66, %r6;
	@!%p37 mov.u32 %r67, %r6;
	@!%p37 mov.u32 %r68, %r6;
	@!%p37 mov.u32 %r69, %r6;
	// end inline asm
	mov.b32 	%f17, %r66;
	mov.b32 	%f18, %r67;
	mov.b32 	%f19, %r68;
	mov.b32 	%f20, %r69;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	@%p42 ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd6 + 0 ];
	@!%p42 mov.u32 %r74, %r6;
	@!%p42 mov.u32 %r75, %r6;
	@!%p42 mov.u32 %r76, %r6;
	@!%p42 mov.u32 %r77, %r6;
	// end inline asm
	mov.b32 	%f21, %r74;
	mov.b32 	%f22, %r75;
	mov.b32 	%f23, %r76;
	mov.b32 	%f24, %r77;
	// begin inline asm
	mov.u32 %r82, 0x0;
	mov.u32 %r83, 0x0;
	mov.u32 %r84, 0x0;
	mov.u32 %r85, 0x0;
	@%p47 ld.global.v4.b32 { %r82, %r83, %r84, %r85 }, [ %rd7 + 0 ];
	@!%p47 mov.u32 %r82, %r6;
	@!%p47 mov.u32 %r83, %r6;
	@!%p47 mov.u32 %r84, %r6;
	@!%p47 mov.u32 %r85, %r6;
	// end inline asm
	mov.b32 	%f25, %r82;
	mov.b32 	%f26, %r83;
	mov.b32 	%f27, %r84;
	mov.b32 	%f28, %r85;
	// begin inline asm
	mov.u32 %r90, 0x0;
	mov.u32 %r91, 0x0;
	mov.u32 %r92, 0x0;
	mov.u32 %r93, 0x0;
	@%p52 ld.global.v4.b32 { %r90, %r91, %r92, %r93 }, [ %rd8 + 0 ];
	@!%p52 mov.u32 %r90, %r6;
	@!%p52 mov.u32 %r91, %r6;
	@!%p52 mov.u32 %r92, %r6;
	@!%p52 mov.u32 %r93, %r6;
	// end inline asm
	mov.b32 	%f29, %r90;
	mov.b32 	%f30, %r91;
	mov.b32 	%f31, %r92;
	mov.b32 	%f32, %r93;
	.loc	1 35 30                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:35:30
	mul.wide.u32 	%rd37, %r181, 4;
	add.s64 	%rd9, %rd23, %rd37;
	.loc	1 35 35                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:35:35
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	@%p21 ld.global.L1::evict_last.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r98;
	mov.b32 	%f34, %r99;
	mov.b32 	%f35, %r100;
	mov.b32 	%f36, %r101;
	.loc	1 36 31                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:36:31
	add.s64 	%rd10, %rd24, %rd37;
	.loc	1 36 36                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:36:36
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	@%p21 ld.global.L1::evict_last.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:37:31
	add.s64 	%rd11, %rd25, %rd37;
	.loc	1 37 36                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:37:36
	// begin inline asm
	mov.u32 %r106, 0x0;
	mov.u32 %r107, 0x0;
	mov.u32 %r108, 0x0;
	mov.u32 %r109, 0x0;
	@%p21 ld.global.L1::evict_last.v4.b32 { %r106, %r107, %r108, %r109 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 38 18                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:38:18
	add.f32 	%f37, %f17, %f33;
	add.f32 	%f38, %f18, %f34;
	add.f32 	%f39, %f19, %f35;
	add.f32 	%f40, %f20, %f36;
	add.f32 	%f41, %f21, %f33;
	add.f32 	%f42, %f22, %f34;
	add.f32 	%f43, %f23, %f35;
	add.f32 	%f44, %f24, %f36;
	add.f32 	%f45, %f25, %f33;
	add.f32 	%f46, %f26, %f34;
	add.f32 	%f47, %f27, %f35;
	add.f32 	%f48, %f28, %f36;
	add.f32 	%f49, %f29, %f33;
	add.f32 	%f50, %f30, %f34;
	add.f32 	%f51, %f31, %f35;
	add.f32 	%f52, %f32, %f36;
	.loc	1 39 18                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:39:18
	add.f32 	%f53, %f1, %f37;
	add.f32 	%f54, %f2, %f38;
	add.f32 	%f55, %f3, %f39;
	add.f32 	%f56, %f4, %f40;
	add.f32 	%f57, %f5, %f41;
	add.f32 	%f58, %f6, %f42;
	add.f32 	%f59, %f7, %f43;
	add.f32 	%f60, %f8, %f44;
	add.f32 	%f61, %f9, %f45;
	add.f32 	%f62, %f10, %f46;
	add.f32 	%f63, %f11, %f47;
	add.f32 	%f64, %f12, %f48;
	add.f32 	%f65, %f13, %f49;
	add.f32 	%f66, %f14, %f50;
	add.f32 	%f67, %f15, %f51;
	add.f32 	%f68, %f16, %f52;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f69, %f53, %f54;
	add.f32 	%f70, %f55, %f69;
	add.f32 	%f71, %f56, %f70;
	selp.f32 	%f72, %f71, 0f00000000, %p37;
	add.f32 	%f73, %f57, %f58;
	add.f32 	%f74, %f59, %f73;
	add.f32 	%f75, %f60, %f74;
	selp.f32 	%f76, %f75, 0f00000000, %p42;
	add.f32 	%f77, %f61, %f62;
	add.f32 	%f78, %f63, %f77;
	add.f32 	%f79, %f64, %f78;
	selp.f32 	%f80, %f79, 0f00000000, %p47;
	add.f32 	%f81, %f65, %f66;
	add.f32 	%f82, %f67, %f81;
	add.f32 	%f83, %f68, %f82;
	selp.f32 	%f84, %f83, 0f00000000, %p52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r253, %f72;
	shfl.sync.bfly.b32	%r254, %r253, 4, 31, -1;
	mov.b32 	%f85, %r254;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f72, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r255, %f86;
	shfl.sync.bfly.b32	%r256, %r255, 2, 31, -1;
	mov.b32 	%f87, %r256;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r257, %f88;
	shfl.sync.bfly.b32	%r258, %r257, 1, 31, -1;
	mov.b32 	%f89, %r258;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f88, %f89;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r259, %f76;
	shfl.sync.bfly.b32	%r260, %r259, 4, 31, -1;
	mov.b32 	%f91, %r260;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f92, %f76, %f91;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r261, %f92;
	shfl.sync.bfly.b32	%r262, %r261, 2, 31, -1;
	mov.b32 	%f93, %r262;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f94, %f92, %f93;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r263, %f94;
	shfl.sync.bfly.b32	%r264, %r263, 1, 31, -1;
	mov.b32 	%f95, %r264;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f96, %f94, %f95;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r265, %f80;
	shfl.sync.bfly.b32	%r266, %r265, 4, 31, -1;
	mov.b32 	%f97, %r266;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f98, %f80, %f97;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r267, %f98;
	shfl.sync.bfly.b32	%r268, %r267, 2, 31, -1;
	mov.b32 	%f99, %r268;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f100, %f98, %f99;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r269, %f100;
	shfl.sync.bfly.b32	%r270, %r269, 1, 31, -1;
	mov.b32 	%f101, %r270;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f102, %f100, %f101;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r271, %f84;
	shfl.sync.bfly.b32	%r272, %r271, 4, 31, -1;
	mov.b32 	%f103, %r272;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f104, %f84, %f103;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r273, %f104;
	shfl.sync.bfly.b32	%r274, %r273, 2, 31, -1;
	mov.b32 	%f105, %r274;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f106, %f104, %f105;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r275, %f106;
	shfl.sync.bfly.b32	%r276, %r275, 1, 31, -1;
	mov.b32 	%f107, %r276;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f108, %f106, %f107;
$L__tmp2:
	.loc	1 47 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:47:20
	mov.b32 	%r111, %f90;
	mov.b32 	%r112, 1107296256;
	// begin inline asm
	div.full.f32 %r110, %r111, %r112;
	// end inline asm
	mov.b32 	%f109, %r110;
	mov.b32 	%r114, %f96;
	// begin inline asm
	div.full.f32 %r113, %r114, %r112;
	// end inline asm
	mov.b32 	%f110, %r113;
	mov.b32 	%r117, %f102;
	// begin inline asm
	div.full.f32 %r116, %r117, %r112;
	// end inline asm
	mov.b32 	%f111, %r116;
	mov.b32 	%r120, %f108;
	// begin inline asm
	div.full.f32 %r119, %r120, %r112;
	// end inline asm
	mov.b32 	%f112, %r119;
	.loc	1 48 19                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:48:19
	sub.f32 	%f113, %f53, %f109;
	sub.f32 	%f114, %f54, %f109;
	sub.f32 	%f115, %f55, %f109;
	sub.f32 	%f116, %f56, %f109;
	sub.f32 	%f117, %f57, %f110;
	sub.f32 	%f118, %f58, %f110;
	sub.f32 	%f119, %f59, %f110;
	sub.f32 	%f120, %f60, %f110;
	sub.f32 	%f121, %f61, %f111;
	sub.f32 	%f122, %f62, %f111;
	sub.f32 	%f123, %f63, %f111;
	sub.f32 	%f124, %f64, %f111;
	sub.f32 	%f125, %f65, %f112;
	sub.f32 	%f126, %f66, %f112;
	sub.f32 	%f127, %f67, %f112;
	sub.f32 	%f128, %f68, %f112;
	.loc	1 49 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:49:20
	mul.f32 	%f129, %f114, %f114;
	mul.f32 	%f130, %f118, %f118;
	mul.f32 	%f131, %f122, %f122;
	mul.f32 	%f132, %f126, %f126;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f133, %f113, %f113, %f129;
	fma.rn.f32 	%f134, %f115, %f115, %f133;
	fma.rn.f32 	%f135, %f116, %f116, %f134;
	selp.f32 	%f136, %f135, 0f00000000, %p37;
	fma.rn.f32 	%f137, %f117, %f117, %f130;
	fma.rn.f32 	%f138, %f119, %f119, %f137;
	fma.rn.f32 	%f139, %f120, %f120, %f138;
	selp.f32 	%f140, %f139, 0f00000000, %p42;
	fma.rn.f32 	%f141, %f121, %f121, %f131;
	fma.rn.f32 	%f142, %f123, %f123, %f141;
	fma.rn.f32 	%f143, %f124, %f124, %f142;
	selp.f32 	%f144, %f143, 0f00000000, %p47;
	fma.rn.f32 	%f145, %f125, %f125, %f132;
	fma.rn.f32 	%f146, %f127, %f127, %f145;
	fma.rn.f32 	%f147, %f128, %f128, %f146;
	selp.f32 	%f148, %f147, 0f00000000, %p52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r277, %f136;
	shfl.sync.bfly.b32	%r278, %r277, 4, 31, -1;
	mov.b32 	%f149, %r278;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f150, %f136, %f149;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r279, %f150;
	shfl.sync.bfly.b32	%r280, %r279, 2, 31, -1;
	mov.b32 	%f151, %r280;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f152, %f150, %f151;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r281, %f152;
	shfl.sync.bfly.b32	%r282, %r281, 1, 31, -1;
	mov.b32 	%f153, %r282;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f154, %f152, %f153;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r283, %f140;
	shfl.sync.bfly.b32	%r284, %r283, 4, 31, -1;
	mov.b32 	%f155, %r284;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f156, %f140, %f155;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r285, %f156;
	shfl.sync.bfly.b32	%r286, %r285, 2, 31, -1;
	mov.b32 	%f157, %r286;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f158, %f156, %f157;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r287, %f158;
	shfl.sync.bfly.b32	%r288, %r287, 1, 31, -1;
	mov.b32 	%f159, %r288;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f160, %f158, %f159;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r289, %f144;
	shfl.sync.bfly.b32	%r290, %r289, 4, 31, -1;
	mov.b32 	%f161, %r290;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f162, %f144, %f161;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r291, %f162;
	shfl.sync.bfly.b32	%r292, %r291, 2, 31, -1;
	mov.b32 	%f163, %r292;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f164, %f162, %f163;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r293, %f164;
	shfl.sync.bfly.b32	%r294, %r293, 1, 31, -1;
	mov.b32 	%f165, %r294;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f166, %f164, %f165;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r295, %f148;
	shfl.sync.bfly.b32	%r296, %r295, 4, 31, -1;
	mov.b32 	%f167, %r296;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f168, %f148, %f167;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r297, %f168;
	shfl.sync.bfly.b32	%r298, %r297, 2, 31, -1;
	mov.b32 	%f169, %r298;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f170, %f168, %f169;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r299, %f170;
	shfl.sync.bfly.b32	%r300, %r299, 1, 31, -1;
	mov.b32 	%f171, %r300;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f172, %f170, %f171;
$L__tmp4:
	.loc	1 63 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:63:20
	bar.sync 	0;
	shl.b32 	%r301, %r183, 2;
	add.s32 	%r122, %r211, %r301;
	mov.b32 	%r123, %f154;
	// begin inline asm
	@%p21 st.shared.b32 [ %r122 + 0 ], %r123;
	// end inline asm
	add.s32 	%r124, %r122, 128;
	mov.b32 	%r125, %f160;
	// begin inline asm
	@%p21 st.shared.b32 [ %r124 + 0 ], %r125;
	// end inline asm
	add.s32 	%r126, %r122, 256;
	mov.b32 	%r127, %f166;
	// begin inline asm
	@%p21 st.shared.b32 [ %r126 + 0 ], %r127;
	// end inline asm
	add.s32 	%r128, %r122, 384;
	mov.b32 	%r129, %f172;
	// begin inline asm
	@%p21 st.shared.b32 [ %r128 + 0 ], %r129;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r302, %r184, 2;
	add.s32 	%r303, %r211, %r302;
	.loc	1 55 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:55:20
	ld.shared.u32 	%r131, [%r303];
	// begin inline asm
	div.full.f32 %r130, %r131, %r112;
	// end inline asm
	mov.b32 	%f173, %r130;
	// begin inline asm
	div.full.f32 %r133, %r123, %r112;
	// end inline asm
	mov.b32 	%f174, %r133;
	// begin inline asm
	div.full.f32 %r136, %r125, %r112;
	// end inline asm
	mov.b32 	%f175, %r136;
	// begin inline asm
	div.full.f32 %r139, %r127, %r112;
	// end inline asm
	mov.b32 	%f176, %r139;
	// begin inline asm
	div.full.f32 %r142, %r129, %r112;
	// end inline asm
	mov.b32 	%f177, %r142;
	.loc	1 57 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:57:20
	add.f32 	%f178, %f173, 0f3727C5AC;
	add.f32 	%f179, %f174, 0f3727C5AC;
	add.f32 	%f180, %f175, 0f3727C5AC;
	add.f32 	%f181, %f176, 0f3727C5AC;
	add.f32 	%f182, %f177, 0f3727C5AC;
	.loc	1 58 28                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:58:28
	rsqrt.approx.ftz.f32 	%f183, %f178;
	rsqrt.approx.ftz.f32 	%f184, %f179;
	rsqrt.approx.ftz.f32 	%f185, %f180;
	rsqrt.approx.ftz.f32 	%f186, %f181;
	rsqrt.approx.ftz.f32 	%f187, %f182;
	.loc	1 37 36                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:37:36
	mov.b32 	%f188, %r109;
	mov.b32 	%f189, %r108;
	mov.b32 	%f190, %r107;
	mov.b32 	%f191, %r106;
	.loc	1 36 36                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:36:36
	mov.b32 	%f192, %r105;
	mov.b32 	%f193, %r104;
	mov.b32 	%f194, %r103;
	mov.b32 	%f195, %r102;
	.loc	1 24 23                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:24:23
	or.b32  	%r304, %r178, %r184;
	.loc	1 25 21                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:25:21
	setp.lt.s32 	%p73, %r304, 256;
	.loc	1 59 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:59:20
	mul.f32 	%f196, %f113, %f184;
	mul.f32 	%f197, %f114, %f184;
	mul.f32 	%f198, %f115, %f184;
	mul.f32 	%f199, %f116, %f184;
	mul.f32 	%f200, %f117, %f185;
	mul.f32 	%f201, %f118, %f185;
	mul.f32 	%f202, %f119, %f185;
	mul.f32 	%f203, %f120, %f185;
	mul.f32 	%f204, %f121, %f186;
	mul.f32 	%f205, %f122, %f186;
	mul.f32 	%f206, %f123, %f186;
	mul.f32 	%f207, %f124, %f186;
	mul.f32 	%f208, %f125, %f187;
	mul.f32 	%f209, %f126, %f187;
	mul.f32 	%f210, %f127, %f187;
	mul.f32 	%f211, %f128, %f187;
	.loc	1 61 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:61:20
	fma.rn.f32 	%f212, %f196, %f195, %f191;
	fma.rn.f32 	%f213, %f197, %f194, %f190;
	fma.rn.f32 	%f214, %f198, %f193, %f189;
	fma.rn.f32 	%f215, %f199, %f192, %f188;
	fma.rn.f32 	%f216, %f200, %f195, %f191;
	fma.rn.f32 	%f217, %f201, %f194, %f190;
	fma.rn.f32 	%f218, %f202, %f193, %f189;
	fma.rn.f32 	%f219, %f203, %f192, %f188;
	fma.rn.f32 	%f220, %f204, %f195, %f191;
	fma.rn.f32 	%f221, %f205, %f194, %f190;
	fma.rn.f32 	%f222, %f206, %f193, %f189;
	fma.rn.f32 	%f223, %f207, %f192, %f188;
	fma.rn.f32 	%f224, %f208, %f195, %f191;
	fma.rn.f32 	%f225, %f209, %f194, %f190;
	fma.rn.f32 	%f226, %f210, %f193, %f189;
	fma.rn.f32 	%f227, %f211, %f192, %f188;
	.loc	1 63 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:63:20
	mul.f32 	%f228, %f183, 0f3D000000;
	.loc	1 64 25                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:64:25
	add.s64 	%rd12, %rd26, %rd33;
	add.s64 	%rd13, %rd26, %rd34;
	add.s64 	%rd14, %rd26, %rd35;
	add.s64 	%rd15, %rd26, %rd36;
	.loc	1 64 45                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:64:45
	mov.b32 	%r145, %f196;
	mov.b32 	%r146, %f197;
	mov.b32 	%r147, %f198;
	mov.b32 	%r148, %f199;
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd12 + 0 ], { %r145, %r146, %r147, %r148 };
	// end inline asm
	mov.b32 	%r149, %f200;
	mov.b32 	%r150, %f201;
	mov.b32 	%r151, %f202;
	mov.b32 	%r152, %f203;
	// begin inline asm
	@%p42 st.global.v4.b32 [ %rd13 + 0 ], { %r149, %r150, %r151, %r152 };
	// end inline asm
	mov.b32 	%r153, %f204;
	mov.b32 	%r154, %f205;
	mov.b32 	%r155, %f206;
	mov.b32 	%r156, %f207;
	// begin inline asm
	@%p47 st.global.v4.b32 [ %rd14 + 0 ], { %r153, %r154, %r155, %r156 };
	// end inline asm
	mov.b32 	%r157, %f208;
	mov.b32 	%r158, %f209;
	mov.b32 	%r159, %f210;
	mov.b32 	%r160, %f211;
	// begin inline asm
	@%p52 st.global.v4.b32 [ %rd15 + 0 ], { %r157, %r158, %r159, %r160 };
	// end inline asm
	.loc	1 65 25                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:65:25
	add.s64 	%rd16, %rd27, %rd33;
	add.s64 	%rd17, %rd27, %rd34;
	add.s64 	%rd18, %rd27, %rd35;
	add.s64 	%rd19, %rd27, %rd36;
	.loc	1 65 45                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:65:45
	mov.b32 	%r161, %f212;
	mov.b32 	%r162, %f213;
	mov.b32 	%r163, %f214;
	mov.b32 	%r164, %f215;
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd16 + 0 ], { %r161, %r162, %r163, %r164 };
	// end inline asm
	mov.b32 	%r165, %f216;
	mov.b32 	%r166, %f217;
	mov.b32 	%r167, %f218;
	mov.b32 	%r168, %f219;
	// begin inline asm
	@%p42 st.global.v4.b32 [ %rd17 + 0 ], { %r165, %r166, %r167, %r168 };
	// end inline asm
	mov.b32 	%r169, %f220;
	mov.b32 	%r170, %f221;
	mov.b32 	%r171, %f222;
	mov.b32 	%r172, %f223;
	// begin inline asm
	@%p47 st.global.v4.b32 [ %rd18 + 0 ], { %r169, %r170, %r171, %r172 };
	// end inline asm
	mov.b32 	%r173, %f224;
	mov.b32 	%r174, %f225;
	mov.b32 	%r175, %f226;
	mov.b32 	%r176, %f227;
	// begin inline asm
	@%p52 st.global.v4.b32 [ %rd19 + 0 ], { %r173, %r174, %r175, %r176 };
	// end inline asm
	.loc	1 66 25                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:66:25
	mul.wide.s32 	%rd38, %r304, 4;
	add.s64 	%rd20, %rd28, %rd38;
	.loc	1 66 37                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:66:37
	and.b32  	%r305, %r179, 128;
	setp.eq.s32 	%p74, %r305, 0;
	mov.b32 	%r177, %f228;
	and.pred  	%p72, %p74, %p73;
	// begin inline asm
	@%p72 st.global.b32 [ %rd20 + 0 ], { %r177 };
	// end inline asm
	.loc	1 66 4                          // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:66:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 236                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 105
.b8 107
.b8 106
.b8 50
.b8 102
.b8 106
.b8 55
.b8 100
.b8 116
.b8 104
.b8 111
.b8 121
.b8 104
.b8 100
.b8 97
.b8 102
.b8 110
.b8 111
.b8 107
.b8 119
.b8 100
.b8 121
.b8 117
.b8 104
.b8 108
.b8 104
.b8 55
.b8 100
.b8 103
.b8 50
.b8 110
.b8 114
.b8 114
.b8 112
.b8 101
.b8 101
.b8 100
.b8 104
.b8 101
.b8 54
.b8 121
.b8 111
.b8 109
.b8 122
.b8 52
.b8 108
.b8 104
.b8 117
.b8 102
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 105
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x46 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa9:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 52                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
