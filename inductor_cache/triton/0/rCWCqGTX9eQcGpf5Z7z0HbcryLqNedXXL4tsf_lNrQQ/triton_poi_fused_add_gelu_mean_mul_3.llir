; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_gelu_mean_mul_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 7, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 127, !dbg !12
  %11 = or disjoint i32 %8, %10, !dbg !13
  %12 = icmp slt i32 %11, 256, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %13 = sdiv i32 %.frozen, 16, !dbg !15
  %14 = mul i32 %13, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = sdiv i32 %11, 64, !dbg !17
  %16 = sext i32 %11 to i64, !dbg !18
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !18
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %12) #3, !dbg !19
  %19 = mul i32 %15, 176, !dbg !20
  %20 = add i32 %19, %.decomposed, !dbg !21
  %21 = add i32 %20, 128, !dbg !22
  %22 = sext i32 %21 to i64, !dbg !23
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %22, !dbg !23
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %12) #3, !dbg !24
  %25 = getelementptr float, ptr addrspace(1) %2, i64 %16, !dbg !25
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %12) #3, !dbg !26
  %27 = bitcast i32 %26 to float, !dbg !26
  %28 = add i32 %20, 144, !dbg !27
  %29 = sext i32 %28 to i64, !dbg !28
  %30 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !28
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %12) #3, !dbg !29
  %32 = shl nsw i32 %13, 2, !dbg !30
  %33 = sext i32 %32 to i64, !dbg !31
  %34 = getelementptr float, ptr addrspace(1) %3, i64 %33, !dbg !31
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %12) #3, !dbg !32
  %36 = bitcast i32 %35 to float, !dbg !32
  %37 = or disjoint i32 %32, 1, !dbg !33
  %38 = sext i32 %37 to i64, !dbg !34
  %39 = getelementptr float, ptr addrspace(1) %3, i64 %38, !dbg !34
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %12) #3, !dbg !35
  %41 = bitcast i32 %40 to float, !dbg !35
  %42 = or disjoint i32 %32, 2, !dbg !36
  %43 = sext i32 %42 to i64, !dbg !37
  %44 = getelementptr float, ptr addrspace(1) %3, i64 %43, !dbg !37
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %12) #3, !dbg !38
  %46 = bitcast i32 %45 to float, !dbg !38
  %47 = or disjoint i32 %32, 3, !dbg !39
  %48 = sext i32 %47 to i64, !dbg !40
  %49 = getelementptr float, ptr addrspace(1) %3, i64 %48, !dbg !40
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %12) #3, !dbg !41
  %51 = bitcast i32 %50 to float, !dbg !41
  %52 = add i32 %20, 160, !dbg !42
  %53 = sext i32 %52 to i64, !dbg !43
  %54 = getelementptr float, ptr addrspace(1) %1, i64 %53, !dbg !43
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 %12) #3, !dbg !44
  %56 = fmul float %27, 0x3FE6A09E60000000, !dbg !45
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not.i = icmp eq i32 %57, 0, !dbg !46
  %58 = tail call float @llvm.nvvm.fabs.ftz.f(float %56) #3, !dbg !46
  %59 = tail call float @llvm.nvvm.fabs.f(float %56) #3, !dbg !46
  %.0.i = select i1 %.not.i, float %59, float %58, !dbg !46
  %60 = fcmp oge float %.0.i, 0x3FF00C1FC0000000, !dbg !46
  br i1 %60, label %__nv_fabsf.exit1.i, label %62, !dbg !46

__nv_fabsf.exit1.i:                               ; preds = %6
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not1.i = icmp eq i32 %61, 0, !dbg !46
  %.01.i = select i1 %.not1.i, float %59, float %58, !dbg !46
  br label %__internal_fmad.exit.i, !dbg !46

62:                                               ; preds = %6
  %63 = fmul float %56, %56, !dbg !46
  br label %__internal_fmad.exit.i, !dbg !46

__internal_fmad.exit.i:                           ; preds = %62, %__nv_fabsf.exit1.i
  %64 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %62 ], !dbg !46
  %65 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %62 ], !dbg !46
  %66 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %62 ], !dbg !46
  %67 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %62 ], !dbg !46
  %68 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %62 ], !dbg !46
  %69 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %62 ], !dbg !46
  %70 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %62 ], !dbg !46
  %71 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %63, %62 ], !dbg !46
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not2.i = icmp eq i32 %72, 0, !dbg !46
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %70, float %71, float %69) #3, !dbg !46
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %70, float %71, float %69) #3, !dbg !46
  %.02.i = select i1 %.not2.i, float %74, float %73, !dbg !46
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not3.i = icmp eq i32 %75, 0, !dbg !46
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %71, float %68) #3, !dbg !46
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %71, float %68) #3, !dbg !46
  %.03.i = select i1 %.not3.i, float %77, float %76, !dbg !46
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not4.i = icmp eq i32 %78, 0, !dbg !46
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %71, float %67) #3, !dbg !46
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %71, float %67) #3, !dbg !46
  %.04.i = select i1 %.not4.i, float %80, float %79, !dbg !46
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not5.i = icmp eq i32 %81, 0, !dbg !46
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %71, float %66) #3, !dbg !46
  %83 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %71, float %66) #3, !dbg !46
  %.05.i = select i1 %.not5.i, float %83, float %82, !dbg !46
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not6.i = icmp eq i32 %84, 0, !dbg !46
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %71, float %65) #3, !dbg !46
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %71, float %65) #3, !dbg !46
  %.06.i = select i1 %.not6.i, float %86, float %85, !dbg !46
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not7.i = icmp eq i32 %87, 0, !dbg !46
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %71, float %64) #3, !dbg !46
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %71, float %64) #3, !dbg !46
  %.07.i = select i1 %.not7.i, float %89, float %88, !dbg !46
  %90 = fneg float %71, !dbg !46
  %91 = select i1 %60, float %90, float %56, !dbg !46
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not8.i = icmp eq i32 %92, 0, !dbg !46
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %91, float %91) #3, !dbg !46
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %91, float %91) #3, !dbg !46
  %.08.i = select i1 %.not8.i, float %94, float %93, !dbg !46
  br i1 %60, label %95, label %__nv_erff.exit, !dbg !46

95:                                               ; preds = %__internal_fmad.exit.i
  %96 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #3, !dbg !46
  %97 = fsub float 1.000000e+00, %96, !dbg !46
  %98 = bitcast float %97 to i32, !dbg !46
  %99 = bitcast float %56 to i32, !dbg !46
  %100 = and i32 %99, -2147483648, !dbg !46
  %101 = or i32 %100, %98, !dbg !46
  %102 = bitcast i32 %101 to float, !dbg !46
  br label %__nv_erff.exit, !dbg !46

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %95
  %r.0.i = phi float [ %102, %95 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !46
  %103 = fadd float %36, %41, !dbg !47
  %104 = fadd float %103, %46, !dbg !48
  %105 = fadd float %104, %51, !dbg !49
  %106 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %105, float 4.000000e+00) #3, !dbg !50
  %107 = fmul float %106, 0x3FE6A09E60000000, !dbg !51
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not.i1 = icmp eq i32 %108, 0, !dbg !52
  %109 = tail call float @llvm.nvvm.fabs.ftz.f(float %107) #3, !dbg !52
  %110 = tail call float @llvm.nvvm.fabs.f(float %107) #3, !dbg !52
  %.0.i2 = select i1 %.not.i1, float %110, float %109, !dbg !52
  %111 = fcmp oge float %.0.i2, 0x3FF00C1FC0000000, !dbg !52
  br i1 %111, label %__nv_fabsf.exit1.i19, label %113, !dbg !52

__nv_fabsf.exit1.i19:                             ; preds = %__nv_erff.exit
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not1.i20 = icmp eq i32 %112, 0, !dbg !52
  %.01.i21 = select i1 %.not1.i20, float %110, float %109, !dbg !52
  br label %__internal_fmad.exit.i3, !dbg !52

113:                                              ; preds = %__nv_erff.exit
  %114 = fmul float %107, %107, !dbg !52
  br label %__internal_fmad.exit.i3, !dbg !52

__internal_fmad.exit.i3:                          ; preds = %113, %__nv_fabsf.exit1.i19
  %115 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i19 ], [ 0x3FC06EBA60000000, %113 ], !dbg !52
  %116 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i19 ], [ 0xBFD8127580000000, %113 ], !dbg !52
  %117 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i19 ], [ 0x3FBCE315E0000000, %113 ], !dbg !52
  %118 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i19 ], [ 0xBF9B837CE0000000, %113 ], !dbg !52
  %119 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i19 ], [ 0x3F755ABD40000000, %113 ], !dbg !52
  %120 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i19 ], [ 0xBF4AE9A400000000, %113 ], !dbg !52
  %121 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i19 ], [ 0x3F163D2D40000000, %113 ], !dbg !52
  %122 = phi float [ %.01.i21, %__nv_fabsf.exit1.i19 ], [ %114, %113 ], !dbg !52
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not2.i4 = icmp eq i32 %123, 0, !dbg !52
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %121, float %122, float %120) #3, !dbg !52
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %121, float %122, float %120) #3, !dbg !52
  %.02.i5 = select i1 %.not2.i4, float %125, float %124, !dbg !52
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not3.i6 = icmp eq i32 %126, 0, !dbg !52
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i5, float %122, float %119) #3, !dbg !52
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i5, float %122, float %119) #3, !dbg !52
  %.03.i7 = select i1 %.not3.i6, float %128, float %127, !dbg !52
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not4.i8 = icmp eq i32 %129, 0, !dbg !52
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i7, float %122, float %118) #3, !dbg !52
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i7, float %122, float %118) #3, !dbg !52
  %.04.i9 = select i1 %.not4.i8, float %131, float %130, !dbg !52
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not5.i10 = icmp eq i32 %132, 0, !dbg !52
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i9, float %122, float %117) #3, !dbg !52
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i9, float %122, float %117) #3, !dbg !52
  %.05.i11 = select i1 %.not5.i10, float %134, float %133, !dbg !52
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not6.i12 = icmp eq i32 %135, 0, !dbg !52
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i11, float %122, float %116) #3, !dbg !52
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i11, float %122, float %116) #3, !dbg !52
  %.06.i13 = select i1 %.not6.i12, float %137, float %136, !dbg !52
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not7.i14 = icmp eq i32 %138, 0, !dbg !52
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i13, float %122, float %115) #3, !dbg !52
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i13, float %122, float %115) #3, !dbg !52
  %.07.i15 = select i1 %.not7.i14, float %140, float %139, !dbg !52
  %141 = fneg float %122, !dbg !52
  %142 = select i1 %111, float %141, float %107, !dbg !52
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not8.i16 = icmp eq i32 %143, 0, !dbg !52
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i15, float %142, float %142) #3, !dbg !52
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i15, float %142, float %142) #3, !dbg !52
  %.08.i17 = select i1 %.not8.i16, float %145, float %144, !dbg !52
  br i1 %111, label %146, label %__nv_erff.exit22, !dbg !52

146:                                              ; preds = %__internal_fmad.exit.i3
  %147 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i17) #3, !dbg !52
  %148 = fsub float 1.000000e+00, %147, !dbg !52
  %149 = bitcast float %148 to i32, !dbg !52
  %150 = bitcast float %107 to i32, !dbg !52
  %151 = and i32 %150, -2147483648, !dbg !52
  %152 = or i32 %151, %149, !dbg !52
  %153 = bitcast i32 %152 to float, !dbg !52
  br label %__nv_erff.exit22, !dbg !52

__nv_erff.exit22:                                 ; preds = %__internal_fmad.exit.i3, %146
  %r.0.i18 = phi float [ %153, %146 ], [ %.08.i17, %__internal_fmad.exit.i3 ], !dbg !52
  %154 = insertelement <2 x float> poison, float %27, i64 0, !dbg !53
  %155 = insertelement <2 x float> %154, float %106, i64 1, !dbg !53
  %156 = fmul <2 x float> %155, splat (float 5.000000e-01), !dbg !53
  %157 = bitcast i32 %18 to float, !dbg !19
  %158 = bitcast i32 %24 to float, !dbg !24
  %159 = fmul float %157, %158, !dbg !54
  %160 = fadd float %159, 0.000000e+00, !dbg !55
  %161 = insertelement <2 x float> poison, float %r.0.i, i64 0, !dbg !56
  %162 = insertelement <2 x float> %161, float %r.0.i18, i64 1, !dbg !56
  %163 = fadd <2 x float> %162, splat (float 1.000000e+00), !dbg !56
  %164 = insertelement <2 x i32> poison, i32 %31, i64 0, !dbg !29
  %165 = insertelement <2 x i32> %164, i32 %55, i64 1, !dbg !29
  %166 = bitcast <2 x i32> %165 to <2 x float>, !dbg !29
  %167 = fmul <2 x float> %156, %163, !dbg !57
  %168 = fmul <2 x float> %167, %166, !dbg !58
  %169 = extractelement <2 x float> %168, i64 0, !dbg !59
  %170 = fadd float %160, %169, !dbg !59
  %171 = extractelement <2 x float> %168, i64 1, !dbg !60
  %172 = fadd float %170, %171, !dbg !60
  %173 = getelementptr float, ptr addrspace(1) %4, i64 %16, !dbg !61
  %174 = bitcast float %172 to i32, !dbg !62
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %174, ptr addrspace(1) %173, i1 %12) #3, !dbg !62
  ret void, !dbg !63
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py", directory: "inductor_cache/cl")
!4 = !{ptr @triton_poi_fused_add_gelu_mean_mul_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_gelu_mean_mul_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_gelu_mean_mul_3", linkageName: "triton_poi_fused_add_gelu_mean_mul_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 27, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 29, column: 45, scope: !7)
!21 = !DILocation(line: 29, column: 36, scope: !7)
!22 = !DILocation(line: 29, column: 41, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 50, scope: !7)
!25 = !DILocation(line: 30, column: 30, scope: !7)
!26 = !DILocation(line: 30, column: 35, scope: !7)
!27 = !DILocation(line: 31, column: 42, scope: !7)
!28 = !DILocation(line: 31, column: 31, scope: !7)
!29 = !DILocation(line: 31, column: 51, scope: !7)
!30 = !DILocation(line: 32, column: 33, scope: !7)
!31 = !DILocation(line: 32, column: 31, scope: !7)
!32 = !DILocation(line: 32, column: 38, scope: !7)
!33 = !DILocation(line: 33, column: 35, scope: !7)
!34 = !DILocation(line: 33, column: 31, scope: !7)
!35 = !DILocation(line: 33, column: 42, scope: !7)
!36 = !DILocation(line: 34, column: 35, scope: !7)
!37 = !DILocation(line: 34, column: 31, scope: !7)
!38 = !DILocation(line: 34, column: 42, scope: !7)
!39 = !DILocation(line: 35, column: 35, scope: !7)
!40 = !DILocation(line: 35, column: 31, scope: !7)
!41 = !DILocation(line: 35, column: 42, scope: !7)
!42 = !DILocation(line: 36, column: 42, scope: !7)
!43 = !DILocation(line: 36, column: 31, scope: !7)
!44 = !DILocation(line: 36, column: 51, scope: !7)
!45 = !DILocation(line: 43, column: 18, scope: !7)
!46 = !DILocation(line: 44, column: 26, scope: !7)
!47 = !DILocation(line: 50, column: 20, scope: !7)
!48 = !DILocation(line: 51, column: 20, scope: !7)
!49 = !DILocation(line: 52, column: 20, scope: !7)
!50 = !DILocation(line: 54, column: 20, scope: !7)
!51 = !DILocation(line: 56, column: 20, scope: !7)
!52 = !DILocation(line: 57, column: 26, scope: !7)
!53 = !DILocation(line: 41, column: 18, scope: !7)
!54 = !DILocation(line: 37, column: 18, scope: !7)
!55 = !DILocation(line: 39, column: 18, scope: !7)
!56 = !DILocation(line: 46, column: 20, scope: !7)
!57 = !DILocation(line: 47, column: 19, scope: !7)
!58 = !DILocation(line: 48, column: 20, scope: !7)
!59 = !DILocation(line: 49, column: 19, scope: !7)
!60 = !DILocation(line: 61, column: 20, scope: !7)
!61 = !DILocation(line: 62, column: 25, scope: !7)
!62 = !DILocation(line: 62, column: 37, scope: !7)
!63 = !DILocation(line: 62, column: 4, scope: !7)
