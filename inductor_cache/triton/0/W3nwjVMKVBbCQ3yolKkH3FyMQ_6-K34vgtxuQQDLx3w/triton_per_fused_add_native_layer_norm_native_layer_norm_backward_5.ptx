//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5 // -- Begin function triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5
.visible .entry triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_7,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_8,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b32 	%r<115>;
	.reg .f32 	%f<70>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd9, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_0];
	ld.param.u64 	%rd10, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_1];
$L__tmp0:
	.loc	1 23 28                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:23:33
	shl.b32 	%r58, %r1, 3;
	ld.param.u64 	%rd11, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_2];
	ld.param.u64 	%rd12, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_3];
	.loc	1 24 44                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:24:44
	mov.u32 	%r59, %tid.x;
	and.b32  	%r60, %r59, 1;
	ld.param.u64 	%rd13, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_4];
	shl.b32 	%r61, %r60, 2;
	ld.param.u64 	%rd14, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_5];
	ld.param.u64 	%rd15, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_6];
	bfe.u32 	%r62, %r59, 3, 3;
	ld.param.u64 	%rd16, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5_param_7];
	and.b32  	%r63, %r59, 7;
	.loc	1 24 23                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:24:23
	or.b32  	%r64, %r58, %r61;
	or.b32  	%r65, %r58, %r62;
	.loc	1 25 21                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:25:21
	setp.lt.s32 	%p10, %r65, 256;
	setp.lt.s32 	%p1, %r64, 256;
	.loc	1 26 34                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:26:34
	shl.b32 	%r66, %r59, 2;
	and.b32  	%r67, %r66, 28;
	.loc	1 31 19                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:31:19
	shr.s32 	%r69, %r64, 31;
	shr.u32 	%r70, %r69, 26;
	add.s32 	%r71, %r64, %r70;
	.loc	1 30 19                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:30:19
	and.b32  	%r72, %r71, -64;
	sub.s32 	%r73, %r64, %r72;
	.loc	1 33 38                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:33:38
	shl.b32 	%r74, %r59, 5;
	and.b32  	%r75, %r74, 1984;
	.loc	1 33 35                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:33:35
	add.s32 	%r76, %r73, %r75;
	.loc	1 33 48                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:33:48
	shl.b32 	%r77, %r71, 5;
	and.b32  	%r78, %r77, -2048;
	.loc	1 33 43                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:33:43
	add.s32 	%r79, %r76, %r78;
	.loc	1 33 30                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:33:30
	mul.wide.s32 	%rd17, %r79, 4;
	add.s64 	%rd1, %rd9, %rd17;
	mov.b32 	%r6, 0;
	.loc	1 33 53                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:33:53
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v4.b32 { %r11, %r13, %r15, %r17 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r13, %r6;
	@!%p1 mov.u32 %r15, %r6;
	@!%p1 mov.u32 %r17, %r6;
	// end inline asm
	shl.b32 	%r80, %r60, 7;
	bfe.u32 	%r81, %r59, 1, 5;
	or.b32  	%r82, %r80, %r81;
	shl.b32 	%r83, %r60, 6;
	mov.u32 	%r84, global_smem;
	add.s32 	%r85, %r84, %r83;
	shl.b32 	%r86, %r82, 2;
	add.s32 	%r10, %r85, %r86;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	shr.u32 	%r87, %r80, 1;
	add.s32 	%r88, %r84, %r87;
	add.s32 	%r89, %r88, %r86;
	add.s32 	%r12, %r89, 144;
	// begin inline asm
	@%p6 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	add.s32 	%r14, %r89, 288;
	// begin inline asm
	@%p6 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r89, 432;
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r90, %r59, 1;
	and.b32  	%r91, %r90, 112;
	add.s32 	%r92, %r84, %r91;
	shl.b32 	%r93, %r59, 4;
	and.b32  	%r94, %r93, 1008;
	add.s32 	%r95, %r92, %r94;
	ld.shared.v4.f32 	{%f1, %f2, %f3, %f4}, [%r95];
	.loc	1 34 38                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:34:38
	shl.b32 	%r96, %r65, 5;
	.loc	1 34 35                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:34:35
	or.b32  	%r97, %r96, %r67;
	.loc	1 34 30                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:34:30
	mul.wide.s32 	%rd18, %r97, 4;
	add.s64 	%rd2, %rd10, %rd18;
	.loc	1 34 43                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:34:43
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p10 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd2 + 0 ];
	@!%p10 mov.u32 %r18, %r6;
	@!%p10 mov.u32 %r19, %r6;
	@!%p10 mov.u32 %r20, %r6;
	@!%p10 mov.u32 %r21, %r6;
	// end inline asm
	mov.b32 	%f5, %r18;
	mov.b32 	%f6, %r19;
	mov.b32 	%f7, %r20;
	mov.b32 	%f8, %r21;
	.loc	1 35 30                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:35:30
	mul.wide.u32 	%rd19, %r67, 4;
	add.s64 	%rd3, %rd11, %rd19;
	.loc	1 35 35                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:35:35
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r26;
	mov.b32 	%f10, %r27;
	mov.b32 	%f11, %r28;
	mov.b32 	%f12, %r29;
	.loc	1 36 31                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:36:31
	add.s64 	%rd4, %rd12, %rd19;
	.loc	1 36 36                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:36:36
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:37:31
	add.s64 	%rd5, %rd13, %rd19;
	.loc	1 37 36                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:37:36
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 38 18                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:38:18
	add.f32 	%f13, %f5, %f9;
	add.f32 	%f14, %f6, %f10;
	add.f32 	%f15, %f7, %f11;
	add.f32 	%f16, %f8, %f12;
	.loc	1 39 18                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:39:18
	add.f32 	%f17, %f1, %f13;
	add.f32 	%f18, %f2, %f14;
	add.f32 	%f19, %f3, %f15;
	add.f32 	%f20, %f4, %f16;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f17, %f18;
	add.f32 	%f22, %f19, %f21;
	add.f32 	%f23, %f20, %f22;
	selp.f32 	%f24, %f23, 0f00000000, %p10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f24;
	shfl.sync.bfly.b32	%r99, %r98, 4, 31, -1;
	mov.b32 	%f25, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f26;
	shfl.sync.bfly.b32	%r101, %r100, 2, 31, -1;
	mov.b32 	%f27, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f28;
	shfl.sync.bfly.b32	%r103, %r102, 1, 31, -1;
	mov.b32 	%f29, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
$L__tmp2:
	.loc	1 47 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:47:20
	mov.b32 	%r39, %f30;
	mov.b32 	%r40, 1107296256;
	// begin inline asm
	div.full.f32 %r38, %r39, %r40;
	// end inline asm
	mov.b32 	%f31, %r38;
	.loc	1 48 19                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:48:19
	sub.f32 	%f32, %f17, %f31;
	sub.f32 	%f33, %f18, %f31;
	sub.f32 	%f34, %f19, %f31;
	sub.f32 	%f35, %f20, %f31;
	.loc	1 49 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:49:20
	mul.f32 	%f36, %f33, %f33;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f37, %f32, %f32, %f36;
	fma.rn.f32 	%f38, %f34, %f34, %f37;
	fma.rn.f32 	%f39, %f35, %f35, %f38;
	selp.f32 	%f40, %f39, 0f00000000, %p10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f40;
	shfl.sync.bfly.b32	%r105, %r104, 4, 31, -1;
	mov.b32 	%f41, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f42;
	shfl.sync.bfly.b32	%r107, %r106, 2, 31, -1;
	mov.b32 	%f43, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r108, %f44;
	shfl.sync.bfly.b32	%r109, %r108, 1, 31, -1;
	mov.b32 	%f45, %r109;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
$L__tmp4:
	.loc	1 63 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:63:20
	bar.sync 	0;
	shl.b32 	%r110, %r62, 2;
	add.s32 	%r41, %r84, %r110;
	mov.b32 	%r42, %f46;
	// begin inline asm
	@%p6 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r111, %r63, 2;
	add.s32 	%r112, %r84, %r111;
	.loc	1 55 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:55:20
	ld.shared.u32 	%r44, [%r112];
	// begin inline asm
	div.full.f32 %r43, %r44, %r40;
	// end inline asm
	mov.b32 	%f47, %r43;
	// begin inline asm
	div.full.f32 %r46, %r42, %r40;
	// end inline asm
	mov.b32 	%f48, %r46;
	.loc	1 57 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:57:20
	add.f32 	%f49, %f47, 0f3727C5AC;
	add.f32 	%f50, %f48, 0f3727C5AC;
	.loc	1 58 28                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:58:28
	rsqrt.approx.ftz.f32 	%f51, %f49;
	rsqrt.approx.ftz.f32 	%f52, %f50;
	.loc	1 37 36                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:37:36
	mov.b32 	%f53, %r37;
	mov.b32 	%f54, %r36;
	mov.b32 	%f55, %r35;
	mov.b32 	%f56, %r34;
	.loc	1 36 36                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:36:36
	mov.b32 	%f57, %r33;
	mov.b32 	%f58, %r32;
	mov.b32 	%f59, %r31;
	mov.b32 	%f60, %r30;
	.loc	1 24 23                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:24:23
	or.b32  	%r113, %r58, %r63;
	.loc	1 25 21                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:25:21
	setp.lt.s32 	%p22, %r113, 256;
	.loc	1 59 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:59:20
	mul.f32 	%f61, %f32, %f52;
	mul.f32 	%f62, %f33, %f52;
	mul.f32 	%f63, %f34, %f52;
	mul.f32 	%f64, %f35, %f52;
	.loc	1 61 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:61:20
	fma.rn.f32 	%f65, %f61, %f60, %f56;
	fma.rn.f32 	%f66, %f62, %f59, %f55;
	fma.rn.f32 	%f67, %f63, %f58, %f54;
	fma.rn.f32 	%f68, %f64, %f57, %f53;
	.loc	1 63 20                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:63:20
	mul.f32 	%f69, %f51, 0f3D000000;
	.loc	1 64 25                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:64:25
	add.s64 	%rd6, %rd14, %rd18;
	.loc	1 64 45                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:64:45
	mov.b32 	%r49, %f61;
	mov.b32 	%r50, %f62;
	mov.b32 	%r51, %f63;
	mov.b32 	%r52, %f64;
	// begin inline asm
	@%p10 st.global.v4.b32 [ %rd6 + 0 ], { %r49, %r50, %r51, %r52 };
	// end inline asm
	.loc	1 65 25                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:65:25
	add.s64 	%rd7, %rd15, %rd18;
	.loc	1 65 45                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:65:45
	mov.b32 	%r53, %f65;
	mov.b32 	%r54, %f66;
	mov.b32 	%r55, %f67;
	mov.b32 	%r56, %f68;
	// begin inline asm
	@%p10 st.global.v4.b32 [ %rd7 + 0 ], { %r53, %r54, %r55, %r56 };
	// end inline asm
	.loc	1 66 25                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:66:25
	mul.wide.s32 	%rd20, %r113, 4;
	add.s64 	%rd8, %rd16, %rd20;
	.loc	1 66 37                         // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:66:37
	and.b32  	%r114, %r59, 56;
	setp.eq.s32 	%p23, %r114, 0;
	mov.b32 	%r57, %f69;
	and.pred  	%p21, %p23, %p22;
	// begin inline asm
	@%p21 st.global.b32 [ %rd8 + 0 ], { %r57 };
	// end inline asm
	.loc	1 66 4                          // cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py:66:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 236                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 105
.b8 107
.b8 106
.b8 50
.b8 102
.b8 106
.b8 55
.b8 100
.b8 116
.b8 104
.b8 111
.b8 121
.b8 104
.b8 100
.b8 97
.b8 102
.b8 110
.b8 111
.b8 107
.b8 119
.b8 100
.b8 121
.b8 117
.b8 104
.b8 108
.b8 104
.b8 55
.b8 100
.b8 103
.b8 50
.b8 110
.b8 114
.b8 114
.b8 112
.b8 101
.b8 101
.b8 100
.b8 104
.b8 101
.b8 54
.b8 121
.b8 111
.b8 109
.b8 122
.b8 52
.b8 108
.b8 104
.b8 117
.b8 102
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 105
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x46 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa9:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 52                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
