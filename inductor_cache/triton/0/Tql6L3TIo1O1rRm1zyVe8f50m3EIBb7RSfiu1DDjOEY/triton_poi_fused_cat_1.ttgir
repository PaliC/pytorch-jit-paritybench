#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_cat_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<64xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<3> : tensor<64xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<16> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<64xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_3 : tensor<64xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_2 : tensor<64xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_2 : tensor<64xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %4, %cst_2 : tensor<64xi32, #blocked> loc(#loc9)
    %9 = arith.divsi %4, %cst_1 : tensor<64xi32, #blocked> loc(#loc10)
    %10 = arith.extsi %7 : tensor<64xi32, #blocked> to tensor<64xi64, #blocked> loc(#loc11)
    %11 = arith.cmpi slt, %10, %cst_0 : tensor<64xi64, #blocked> loc(#loc11)
    %12 = arith.addi %8, %cst_2 : tensor<64xi32, #blocked> loc(#loc12)
    %13 = arith.muli %7, %cst_2 : tensor<64xi32, #blocked> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<64xi32, #blocked> loc(#loc14)
    %15 = arith.muli %9, %cst_1 : tensor<64xi32, #blocked> loc(#loc15)
    %16 = arith.addi %14, %15 : tensor<64xi32, #blocked> loc(#loc16)
    %17 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc17)
    %18 = tt.addptr %17, %16 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc17)
    %19 = arith.andi %11, %5 : tensor<64xi1, #blocked> loc(#loc18)
    %20 = tt.load %18, %19, %cst : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc19)
    %21 = arith.cmpi sge, %10, %cst_0 : tensor<64xi64, #blocked> loc(#loc20)
    %22 = arith.muli %9, %cst_2 : tensor<64xi32, #blocked> loc(#loc21)
    %23 = arith.addi %8, %22 : tensor<64xi32, #blocked> loc(#loc22)
    %24 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc23)
    %25 = tt.addptr %24, %23 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc23)
    %26 = arith.andi %21, %5 : tensor<64xi1, #blocked> loc(#loc24)
    %27 = tt.load %25, %26, %cst evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc25)
    %28 = arith.select %11, %20, %27 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc26)
    %29 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc27)
    %30 = tt.addptr %29, %4 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc27)
    tt.store %30, %28, %5 : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc28)
    tt.return loc(#loc29)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":21:28)
#loc3 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":21:33)
#loc4 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":22:36)
#loc5 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":22:23)
#loc6 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":23:21)
#loc7 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":24:21)
#loc8 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":24:26)
#loc9 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":25:19)
#loc10 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":26:19)
#loc11 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":32:18)
#loc12 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":33:34)
#loc13 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":33:42)
#loc14 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":33:39)
#loc15 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":33:51)
#loc16 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":33:48)
#loc17 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":33:30)
#loc18 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":33:63)
#loc19 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":33:56)
#loc20 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":34:19)
#loc21 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":37:37)
#loc22 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":37:35)
#loc23 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":37:30)
#loc24 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":37:49)
#loc25 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":37:42)
#loc26 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":38:33)
#loc27 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":39:25)
#loc28 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":39:37)
#loc29 = loc("inductor_cache/rq/crq4jtbfd5pknps6zsjid6e7uijubobinfct5pgdb5m5hlvnbxa4.py":39:4)
