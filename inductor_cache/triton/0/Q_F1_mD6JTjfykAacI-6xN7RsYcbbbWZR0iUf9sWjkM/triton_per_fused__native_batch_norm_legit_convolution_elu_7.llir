; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__native_batch_norm_legit_convolution_elu_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %9 = shl i32 %8, 3, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = lshr i32 %10, 4, !dbg !12
  %12 = and i32 %11, 7, !dbg !12
  %13 = and i32 %10, 7, !dbg !12
  %14 = or disjoint i32 %9, %12, !dbg !13
  %15 = icmp slt i32 %14, 128, !dbg !14
  %16 = shl i32 %10, 2, !dbg !15
  %17 = and i32 %16, 60, !dbg !15
  %18 = srem i32 %14, 32, !dbg !16
  %19 = shl i32 %14, 6, !dbg !17
  %20 = or disjoint i32 %19, %17, !dbg !18
  %21 = sext i32 %20 to i64, !dbg !19
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !19
  %23 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %22, i1 %15, i32 0, i1 %15, i32 0, i1 %15, i32 0, i1 %15, i32 0, i1 %15) #5, !dbg !20
  %24 = extractvalue { i32, i32, i32, i32 } %23, 0, !dbg !20
  %25 = extractvalue { i32, i32, i32, i32 } %23, 1, !dbg !20
  %26 = extractvalue { i32, i32, i32, i32 } %23, 2, !dbg !20
  %27 = extractvalue { i32, i32, i32, i32 } %23, 3, !dbg !20
  %28 = bitcast i32 %24 to float, !dbg !20
  %29 = bitcast i32 %25 to float, !dbg !20
  %30 = bitcast i32 %26 to float, !dbg !20
  %31 = bitcast i32 %27 to float, !dbg !20
  %32 = sext i32 %18 to i64, !dbg !21
  %33 = getelementptr float, ptr addrspace(1) %2, i64 %32, !dbg !21
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %15) #5, !dbg !22
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %15) #5, !dbg !22
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %15) #5, !dbg !22
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %15) #5, !dbg !22
  %38 = bitcast i32 %37 to float, !dbg !22
  %39 = fadd float %28, %38, !dbg !23
  %40 = fadd float %29, %38, !dbg !23
  %41 = fadd float %30, %38, !dbg !23
  %42 = fadd float %31, %38, !dbg !23
  %43 = fadd float %39, %40, !dbg !24
  %44 = fadd float %41, %43, !dbg !24
  %45 = fadd float %42, %44, !dbg !24
  %46 = select i1 %15, float %45, float 0.000000e+00, !dbg !24
  %47 = bitcast float %46 to i32, !dbg !29
  %48 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %47, i32 8, i32 31), !dbg !29
  %49 = bitcast i32 %48 to float, !dbg !29
  %50 = fadd float %46, %49, !dbg !24
  %51 = bitcast float %50 to i32, !dbg !29
  %52 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %51, i32 4, i32 31), !dbg !29
  %53 = bitcast i32 %52 to float, !dbg !29
  %54 = fadd float %50, %53, !dbg !24
  %55 = bitcast float %54 to i32, !dbg !29
  %56 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %55, i32 2, i32 31), !dbg !29
  %57 = bitcast i32 %56 to float, !dbg !29
  %58 = fadd float %54, %57, !dbg !24
  %59 = bitcast float %58 to i32, !dbg !29
  %60 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %59, i32 1, i32 31), !dbg !29
  %61 = bitcast i32 %60 to float, !dbg !29
  %62 = fadd float %58, %61, !dbg !24
  %63 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %12, !dbg !30
  %64 = bitcast float %62 to <1 x i32>, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %63, <1 x i32> %64, i1 true) #5, !dbg !30
  tail call void @llvm.nvvm.barrier0(), !dbg !30
  %65 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %13, !dbg !30
  %66 = load float, ptr addrspace(3) %65, align 4, !dbg !30
  %67 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %66, float 6.400000e+01) #5, !dbg !30
  %68 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %62, float 6.400000e+01) #5, !dbg !30
  %69 = fsub float %39, %68, !dbg !31
  %70 = fsub float %40, %68, !dbg !31
  %71 = fsub float %41, %68, !dbg !31
  %72 = fsub float %42, %68, !dbg !31
  %73 = fmul float %69, %69, !dbg !32
  %74 = fmul float %70, %70, !dbg !32
  %75 = fmul float %71, %71, !dbg !32
  %76 = fmul float %72, %72, !dbg !32
  %77 = fadd float %73, %74, !dbg !33
  %78 = fadd float %75, %77, !dbg !33
  %79 = fadd float %76, %78, !dbg !33
  %80 = select i1 %15, float %79, float 0.000000e+00, !dbg !33
  %81 = bitcast float %80 to i32, !dbg !35
  %82 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %81, i32 8, i32 31), !dbg !35
  %83 = bitcast i32 %82 to float, !dbg !35
  %84 = fadd float %80, %83, !dbg !33
  %85 = bitcast float %84 to i32, !dbg !35
  %86 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %85, i32 4, i32 31), !dbg !35
  %87 = bitcast i32 %86 to float, !dbg !35
  %88 = fadd float %84, %87, !dbg !33
  %89 = bitcast float %88 to i32, !dbg !35
  %90 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %89, i32 2, i32 31), !dbg !35
  %91 = bitcast i32 %90 to float, !dbg !35
  %92 = fadd float %88, %91, !dbg !33
  %93 = bitcast float %92 to i32, !dbg !35
  %94 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 1, i32 31), !dbg !35
  %95 = bitcast i32 %94 to float, !dbg !35
  %96 = fadd float %92, %95, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %97 = bitcast float %96 to <1 x i32>, !dbg !36
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %63, <1 x i32> %97, i1 true) #5, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %98 = load float, ptr addrspace(3) %65, align 4, !dbg !36
  %99 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %98, float 6.400000e+01) #5, !dbg !37
  %100 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %96, float 6.400000e+01) #5, !dbg !37
  %101 = fadd float %99, 0x3EE4F8B580000000, !dbg !38
  %102 = fadd float %100, 0x3EE4F8B580000000, !dbg !38
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i = icmp eq i32 %103, 0, !dbg !36
  br i1 %.not.i, label %106, label %104, !dbg !36

104:                                              ; preds = %7
  %105 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %101), !dbg !36
  br label %__nv_rsqrtf.exit, !dbg !36

106:                                              ; preds = %7
  %107 = tail call float @llvm.nvvm.rsqrt.approx.f(float %101), !dbg !36
  br label %__nv_rsqrtf.exit, !dbg !36

__nv_rsqrtf.exit:                                 ; preds = %104, %106
  %.0.i = phi float [ %105, %104 ], [ %107, %106 ], !dbg !36
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i10 = icmp eq i32 %111, 0, !dbg !36
  br i1 %.not.i10, label %114, label %112, !dbg !36

112:                                              ; preds = %__nv_rsqrtf.exit
  %113 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %102), !dbg !36
  br label %__nv_rsqrtf.exit12, !dbg !36

114:                                              ; preds = %__nv_rsqrtf.exit
  %115 = tail call float @llvm.nvvm.rsqrt.approx.f(float %102), !dbg !36
  br label %__nv_rsqrtf.exit12, !dbg !36

__nv_rsqrtf.exit12:                               ; preds = %112, %114
  %.0.i11 = phi float [ %113, %112 ], [ %115, %114 ], !dbg !36
  %116 = fmul float %69, %.0.i11, !dbg !39
  %117 = fmul float %70, %.0.i11, !dbg !39
  %118 = fmul float %71, %.0.i11, !dbg !39
  %119 = fmul float %72, %.0.i11, !dbg !39
  %120 = fmul float %116, 0x3FF7154760000000, !dbg !40
  %121 = tail call float @llvm.nvvm.round.f(float %120) #5, !dbg !40
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i13 = icmp eq i32 %122, 0, !dbg !40
  %123 = tail call float @llvm.nvvm.fabs.ftz.f(float %116) #5, !dbg !40
  %124 = tail call float @llvm.nvvm.fabs.f(float %116) #5, !dbg !40
  %.03.i = select i1 %.not.i13, float %124, float %123, !dbg !40
  %125 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !40
  %t.0.i = select i1 %125, float 0.000000e+00, float %121, !dbg !40
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %128 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !40
  %j.0.i = select i1 %128, float 1.270000e+02, float %t.0.i, !dbg !40
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not8.i = icmp eq i32 %134, 0, !dbg !40
  br i1 %.not8.i, label %137, label %135, !dbg !40

135:                                              ; preds = %__nv_rsqrtf.exit12
  %136 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #5, !dbg !40
  br label %__nv_expm1f.exit, !dbg !40

137:                                              ; preds = %__nv_rsqrtf.exit12
  %138 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #5, !dbg !40
  br label %__nv_expm1f.exit, !dbg !40

__nv_expm1f.exit:                                 ; preds = %135, %137
  %.0.i14 = phi float [ %136, %135 ], [ %138, %137 ], !dbg !40
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %140 = fmul float %117, 0x3FF7154760000000, !dbg !40
  %141 = tail call float @llvm.nvvm.round.f(float %140) #5, !dbg !40
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i15 = icmp eq i32 %142, 0, !dbg !40
  %143 = tail call float @llvm.nvvm.fabs.ftz.f(float %117) #5, !dbg !40
  %144 = tail call float @llvm.nvvm.fabs.f(float %117) #5, !dbg !40
  %.03.i16 = select i1 %.not.i15, float %144, float %143, !dbg !40
  %145 = fcmp olt float %.03.i16, 0x3FDA3D70A0000000, !dbg !40
  %t.0.i17 = select i1 %145, float 0.000000e+00, float %141, !dbg !40
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %148 = fcmp oeq float %t.0.i17, 1.280000e+02, !dbg !40
  %j.0.i18 = select i1 %148, float 1.270000e+02, float %t.0.i17, !dbg !40
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not8.i19 = icmp eq i32 %154, 0, !dbg !40
  br i1 %.not8.i19, label %157, label %155, !dbg !40

155:                                              ; preds = %__nv_expm1f.exit
  %156 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i18) #5, !dbg !40
  br label %__nv_expm1f.exit41, !dbg !40

157:                                              ; preds = %__nv_expm1f.exit
  %158 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i18) #5, !dbg !40
  br label %__nv_expm1f.exit41, !dbg !40

__nv_expm1f.exit41:                               ; preds = %155, %157
  %.0.i20 = phi float [ %156, %155 ], [ %158, %157 ], !dbg !40
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %160 = fmul float %118, 0x3FF7154760000000, !dbg !40
  %161 = tail call float @llvm.nvvm.round.f(float %160) #5, !dbg !40
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i42 = icmp eq i32 %162, 0, !dbg !40
  %163 = tail call float @llvm.nvvm.fabs.ftz.f(float %118) #5, !dbg !40
  %164 = tail call float @llvm.nvvm.fabs.f(float %118) #5, !dbg !40
  %.03.i43 = select i1 %.not.i42, float %164, float %163, !dbg !40
  %165 = fcmp olt float %.03.i43, 0x3FDA3D70A0000000, !dbg !40
  %t.0.i44 = select i1 %165, float 0.000000e+00, float %161, !dbg !40
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %168 = fcmp oeq float %t.0.i44, 1.280000e+02, !dbg !40
  %j.0.i45 = select i1 %168, float 1.270000e+02, float %t.0.i44, !dbg !40
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not8.i46 = icmp eq i32 %174, 0, !dbg !40
  br i1 %.not8.i46, label %177, label %175, !dbg !40

175:                                              ; preds = %__nv_expm1f.exit41
  %176 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i45) #5, !dbg !40
  br label %__nv_expm1f.exit68, !dbg !40

177:                                              ; preds = %__nv_expm1f.exit41
  %178 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i45) #5, !dbg !40
  br label %__nv_expm1f.exit68, !dbg !40

__nv_expm1f.exit68:                               ; preds = %175, %177
  %.0.i47 = phi float [ %176, %175 ], [ %178, %177 ], !dbg !40
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %180 = fmul float %119, 0x3FF7154760000000, !dbg !40
  %181 = tail call float @llvm.nvvm.round.f(float %180) #5, !dbg !40
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i69 = icmp eq i32 %182, 0, !dbg !40
  %183 = tail call float @llvm.nvvm.fabs.ftz.f(float %119) #5, !dbg !40
  %184 = tail call float @llvm.nvvm.fabs.f(float %119) #5, !dbg !40
  %.03.i70 = select i1 %.not.i69, float %184, float %183, !dbg !40
  %185 = fcmp olt float %.03.i70, 0x3FDA3D70A0000000, !dbg !40
  %t.0.i71 = select i1 %185, float 0.000000e+00, float %181, !dbg !40
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %188 = fcmp oeq float %t.0.i71, 1.280000e+02, !dbg !40
  %j.0.i72 = select i1 %188, float 1.270000e+02, float %t.0.i71, !dbg !40
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not8.i73 = icmp eq i32 %194, 0, !dbg !40
  br i1 %.not8.i73, label %197, label %195, !dbg !40

195:                                              ; preds = %__nv_expm1f.exit68
  %196 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i72) #5, !dbg !40
  br label %__nv_expm1f.exit95, !dbg !40

197:                                              ; preds = %__nv_expm1f.exit68
  %198 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i72) #5, !dbg !40
  br label %__nv_expm1f.exit95, !dbg !40

__nv_expm1f.exit95:                               ; preds = %195, %197
  %.0.i74 = phi float [ %196, %195 ], [ %198, %197 ], !dbg !40
  %199 = fcmp oeq float %118, 0.000000e+00, !dbg !40
  %200 = fadd float %118, %118, !dbg !40
  %201 = fcmp olt float %j.0.i45, -2.500000e+01, !dbg !40
  %202 = fcmp ogt float %j.0.i45, 1.280000e+02, !dbg !40
  %.not9.i62 = icmp eq i32 %179, 0, !dbg !40
  %.not7.i48 = icmp eq i32 %173, 0, !dbg !40
  %.not6.i49 = icmp eq i32 %172, 0, !dbg !40
  %.not5.i50 = icmp eq i32 %171, 0, !dbg !40
  %.not4.i51 = icmp eq i32 %170, 0, !dbg !40
  %.not3.i52 = icmp eq i32 %169, 0, !dbg !40
  %.not2.i53 = icmp eq i32 %167, 0, !dbg !40
  %203 = fneg float %t.0.i44, !dbg !40
  %.not1.i54 = icmp eq i32 %166, 0, !dbg !40
  %204 = tail call float @llvm.nvvm.fma.rn.f(float %203, float 0x3FE62E4000000000, float %118) #5, !dbg !40
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %203, float 0x3FE62E4000000000, float %118) #5, !dbg !40
  %.04.i55 = select i1 %.not1.i54, float %204, float %205, !dbg !40
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %203, float 0x3EB7F7D1C0000000, float %.04.i55) #5, !dbg !40
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %203, float 0x3EB7F7D1C0000000, float %.04.i55) #5, !dbg !40
  %.05.i56 = select i1 %.not2.i53, float %206, float %207, !dbg !40
  %208 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i56, float 0x3F812ACC60000000) #5, !dbg !40
  %209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i56, float 0x3F812ACC60000000) #5, !dbg !40
  %.07.i57 = select i1 %.not3.i52, float %208, float %209, !dbg !40
  %210 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i57, float %.05.i56, float 0x3FA5557C60000000) #5, !dbg !40
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i57, float %.05.i56, float 0x3FA5557C60000000) #5, !dbg !40
  %.08.i58 = select i1 %.not4.i51, float %210, float %211, !dbg !40
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i58, float %.05.i56, float 0x3FC5553EC0000000) #5, !dbg !40
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i58, float %.05.i56, float 0x3FC5553EC0000000) #5, !dbg !40
  %.09.i59 = select i1 %.not5.i50, float %212, float %213, !dbg !40
  %214 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i59, float %.05.i56, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i59, float %.05.i56, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %.06.i60 = select i1 %.not6.i49, float %214, float %215, !dbg !40
  %216 = fmul float %.05.i56, %.06.i60, !dbg !40
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %216, float %.05.i56, float %.05.i56) #5, !dbg !40
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %216, float %.05.i56, float %.05.i56) #5, !dbg !40
  %.01.i61 = select i1 %.not7.i48, float %217, float %218, !dbg !40
  %219 = fadd float %.0.i47, -1.000000e+00, !dbg !40
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i61, float %.0.i47, float %219) #5, !dbg !40
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i61, float %.0.i47, float %219) #5, !dbg !40
  %.02.i63 = select i1 %.not9.i62, float %220, float %221, !dbg !40
  %222 = fadd float %.02.i63, %.02.i63, !dbg !40
  %u.0.i64 = select i1 %168, float %222, float %.02.i63, !dbg !40
  %u.1.i65 = select i1 %202, float 0x7FF0000000000000, float %u.0.i64, !dbg !40
  %u.2.i66 = select i1 %201, float -1.000000e+00, float %u.1.i65, !dbg !40
  %u.3.i67 = select i1 %199, float %200, float %u.2.i66, !dbg !40
  %223 = fcmp oeq float %117, 0.000000e+00, !dbg !40
  %224 = fadd float %117, %117, !dbg !40
  %225 = fcmp olt float %j.0.i18, -2.500000e+01, !dbg !40
  %226 = fcmp ogt float %j.0.i18, 1.280000e+02, !dbg !40
  %.not9.i35 = icmp eq i32 %159, 0, !dbg !40
  %.not7.i21 = icmp eq i32 %153, 0, !dbg !40
  %.not6.i22 = icmp eq i32 %152, 0, !dbg !40
  %.not5.i23 = icmp eq i32 %151, 0, !dbg !40
  %.not4.i24 = icmp eq i32 %150, 0, !dbg !40
  %.not3.i25 = icmp eq i32 %149, 0, !dbg !40
  %.not2.i26 = icmp eq i32 %147, 0, !dbg !40
  %227 = fneg float %t.0.i17, !dbg !40
  %.not1.i27 = icmp eq i32 %146, 0, !dbg !40
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %227, float 0x3FE62E4000000000, float %117) #5, !dbg !40
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %227, float 0x3FE62E4000000000, float %117) #5, !dbg !40
  %.04.i28 = select i1 %.not1.i27, float %228, float %229, !dbg !40
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %227, float 0x3EB7F7D1C0000000, float %.04.i28) #5, !dbg !40
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %227, float 0x3EB7F7D1C0000000, float %.04.i28) #5, !dbg !40
  %.05.i29 = select i1 %.not2.i26, float %230, float %231, !dbg !40
  %232 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i29, float 0x3F812ACC60000000) #5, !dbg !40
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i29, float 0x3F812ACC60000000) #5, !dbg !40
  %.07.i30 = select i1 %.not3.i25, float %232, float %233, !dbg !40
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i30, float %.05.i29, float 0x3FA5557C60000000) #5, !dbg !40
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i30, float %.05.i29, float 0x3FA5557C60000000) #5, !dbg !40
  %.08.i31 = select i1 %.not4.i24, float %234, float %235, !dbg !40
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i31, float %.05.i29, float 0x3FC5553EC0000000) #5, !dbg !40
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i31, float %.05.i29, float 0x3FC5553EC0000000) #5, !dbg !40
  %.09.i32 = select i1 %.not5.i23, float %236, float %237, !dbg !40
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i32, float %.05.i29, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i32, float %.05.i29, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %.06.i33 = select i1 %.not6.i22, float %238, float %239, !dbg !40
  %240 = fmul float %.05.i29, %.06.i33, !dbg !40
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %240, float %.05.i29, float %.05.i29) #5, !dbg !40
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %240, float %.05.i29, float %.05.i29) #5, !dbg !40
  %.01.i34 = select i1 %.not7.i21, float %241, float %242, !dbg !40
  %243 = fadd float %.0.i20, -1.000000e+00, !dbg !40
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i34, float %.0.i20, float %243) #5, !dbg !40
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i34, float %.0.i20, float %243) #5, !dbg !40
  %.02.i36 = select i1 %.not9.i35, float %244, float %245, !dbg !40
  %246 = fadd float %.02.i36, %.02.i36, !dbg !40
  %u.0.i37 = select i1 %148, float %246, float %.02.i36, !dbg !40
  %u.1.i38 = select i1 %226, float 0x7FF0000000000000, float %u.0.i37, !dbg !40
  %u.2.i39 = select i1 %225, float -1.000000e+00, float %u.1.i38, !dbg !40
  %u.3.i40 = select i1 %223, float %224, float %u.2.i39, !dbg !40
  %247 = fcmp oeq float %116, 0.000000e+00, !dbg !40
  %248 = fadd float %116, %116, !dbg !40
  %249 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !40
  %250 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !40
  %.not9.i = icmp eq i32 %139, 0, !dbg !40
  %.not7.i = icmp eq i32 %133, 0, !dbg !40
  %.not6.i = icmp eq i32 %132, 0, !dbg !40
  %.not5.i = icmp eq i32 %131, 0, !dbg !40
  %.not4.i = icmp eq i32 %130, 0, !dbg !40
  %.not3.i = icmp eq i32 %129, 0, !dbg !40
  %.not2.i = icmp eq i32 %127, 0, !dbg !40
  %251 = fneg float %t.0.i, !dbg !40
  %.not1.i = icmp eq i32 %126, 0, !dbg !40
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %251, float 0x3FE62E4000000000, float %116) #5, !dbg !40
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %251, float 0x3FE62E4000000000, float %116) #5, !dbg !40
  %.04.i = select i1 %.not1.i, float %252, float %253, !dbg !40
  %254 = tail call float @llvm.nvvm.fma.rn.f(float %251, float 0x3EB7F7D1C0000000, float %.04.i) #5, !dbg !40
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %251, float 0x3EB7F7D1C0000000, float %.04.i) #5, !dbg !40
  %.05.i = select i1 %.not2.i, float %254, float %255, !dbg !40
  %256 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #5, !dbg !40
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #5, !dbg !40
  %.07.i = select i1 %.not3.i, float %256, float %257, !dbg !40
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #5, !dbg !40
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #5, !dbg !40
  %.08.i = select i1 %.not4.i, float %258, float %259, !dbg !40
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #5, !dbg !40
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #5, !dbg !40
  %.09.i = select i1 %.not5.i, float %260, float %261, !dbg !40
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %.06.i = select i1 %.not6.i, float %262, float %263, !dbg !40
  %264 = fmul float %.05.i, %.06.i, !dbg !40
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %264, float %.05.i, float %.05.i) #5, !dbg !40
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %264, float %.05.i, float %.05.i) #5, !dbg !40
  %.01.i = select i1 %.not7.i, float %265, float %266, !dbg !40
  %267 = fadd float %.0.i14, -1.000000e+00, !dbg !40
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i14, float %267) #5, !dbg !40
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i14, float %267) #5, !dbg !40
  %.02.i = select i1 %.not9.i, float %268, float %269, !dbg !40
  %270 = fadd float %.02.i, %.02.i, !dbg !40
  %u.0.i = select i1 %128, float %270, float %.02.i, !dbg !40
  %u.1.i = select i1 %250, float 0x7FF0000000000000, float %u.0.i, !dbg !40
  %u.2.i = select i1 %249, float -1.000000e+00, float %u.1.i, !dbg !40
  %u.3.i = select i1 %247, float %248, float %u.2.i, !dbg !40
  %271 = fcmp ogt float %119, 0.000000e+00, !dbg !41
  %272 = fcmp ogt float %118, 0.000000e+00, !dbg !41
  %273 = fcmp ogt float %117, 0.000000e+00, !dbg !41
  %274 = fcmp ogt float %116, 0.000000e+00, !dbg !41
  %275 = or disjoint i32 %9, %13, !dbg !13
  %276 = icmp slt i32 %275, 128, !dbg !14
  %.not7.i75 = icmp eq i32 %193, 0, !dbg !40
  %.not6.i76 = icmp eq i32 %192, 0, !dbg !40
  %.not5.i77 = icmp eq i32 %191, 0, !dbg !40
  %.not4.i78 = icmp eq i32 %190, 0, !dbg !40
  %.not3.i79 = icmp eq i32 %189, 0, !dbg !40
  %.not2.i80 = icmp eq i32 %187, 0, !dbg !40
  %277 = fneg float %t.0.i71, !dbg !40
  %.not1.i81 = icmp eq i32 %186, 0, !dbg !40
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %277, float 0x3FE62E4000000000, float %119) #5, !dbg !40
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %277, float 0x3FE62E4000000000, float %119) #5, !dbg !40
  %.04.i82 = select i1 %.not1.i81, float %278, float %279, !dbg !40
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %277, float 0x3EB7F7D1C0000000, float %.04.i82) #5, !dbg !40
  %281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %277, float 0x3EB7F7D1C0000000, float %.04.i82) #5, !dbg !40
  %.05.i83 = select i1 %.not2.i80, float %280, float %281, !dbg !40
  %282 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i83, float 0x3F812ACC60000000) #5, !dbg !40
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i83, float 0x3F812ACC60000000) #5, !dbg !40
  %.07.i84 = select i1 %.not3.i79, float %282, float %283, !dbg !40
  %284 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i84, float %.05.i83, float 0x3FA5557C60000000) #5, !dbg !40
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i84, float %.05.i83, float 0x3FA5557C60000000) #5, !dbg !40
  %.08.i85 = select i1 %.not4.i78, float %284, float %285, !dbg !40
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i85, float %.05.i83, float 0x3FC5553EC0000000) #5, !dbg !40
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i85, float %.05.i83, float 0x3FC5553EC0000000) #5, !dbg !40
  %.09.i86 = select i1 %.not5.i77, float %286, float %287, !dbg !40
  %288 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i86, float %.05.i83, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i86, float %.05.i83, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %.06.i87 = select i1 %.not6.i76, float %288, float %289, !dbg !40
  %290 = fmul float %.05.i83, %.06.i87, !dbg !40
  %291 = tail call float @llvm.nvvm.fma.rn.f(float %290, float %.05.i83, float %.05.i83) #5, !dbg !40
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %290, float %.05.i83, float %.05.i83) #5, !dbg !40
  %.01.i88 = select i1 %.not7.i75, float %291, float %292, !dbg !40
  %293 = fadd float %.0.i74, -1.000000e+00, !dbg !40
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not9.i89 = icmp eq i32 %294, 0, !dbg !40
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i88, float %.0.i74, float %293) #5, !dbg !40
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i88, float %.0.i74, float %293) #5, !dbg !40
  %.02.i90 = select i1 %.not9.i89, float %296, float %295, !dbg !40
  %297 = fadd float %.02.i90, %.02.i90, !dbg !40
  %u.0.i91 = select i1 %188, float %297, float %.02.i90, !dbg !40
  %298 = fcmp ogt float %j.0.i72, 1.280000e+02, !dbg !40
  %u.1.i92 = select i1 %298, float 0x7FF0000000000000, float %u.0.i91, !dbg !40
  %299 = fcmp olt float %j.0.i72, -2.500000e+01, !dbg !40
  %u.2.i93 = select i1 %299, float -1.000000e+00, float %u.1.i92, !dbg !40
  %300 = fcmp oeq float %119, 0.000000e+00, !dbg !40
  %301 = fadd float %119, %119, !dbg !40
  %u.3.i94 = select i1 %300, float %301, float %u.2.i93, !dbg !40
  %302 = select i1 %274, float %116, float %u.3.i, !dbg !42
  %303 = select i1 %273, float %117, float %u.3.i40, !dbg !42
  %304 = select i1 %272, float %118, float %u.3.i67, !dbg !42
  %305 = select i1 %271, float %119, float %u.3.i94, !dbg !42
  %306 = bitcast float %39 to i32, !dbg !43
  %307 = bitcast float %40 to i32, !dbg !43
  %308 = bitcast float %41 to i32, !dbg !43
  %309 = bitcast float %42 to i32, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %306, i32 %307, i32 %308, i32 %309, ptr addrspace(1) %22, i1 %15) #5, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %310 = sext i32 %275 to i64, !dbg !45
  %311 = getelementptr float, ptr addrspace(1) %1, i64 %310, !dbg !45
  %312 = and i32 %10, 120, !dbg !46
  %313 = icmp eq i32 %312, 0, !dbg !46
  %314 = bitcast float %.0.i to i32, !dbg !46
  %315 = and i1 %313, %276, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %314, ptr addrspace(1) %311, i1 %315) #5, !dbg !46
  %316 = getelementptr float, ptr addrspace(1) %4, i64 %21, !dbg !47
  %317 = bitcast float %302 to i32, !dbg !48
  %318 = bitcast float %303 to i32, !dbg !48
  %319 = bitcast float %304 to i32, !dbg !48
  %320 = bitcast float %305 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %317, i32 %318, i32 %319, i32 %320, ptr addrspace(1) %316, i1 %15) #5, !dbg !48
  %321 = getelementptr float, ptr addrspace(1) %3, i64 %310, !dbg !49
  %322 = bitcast float %67 to i32, !dbg !50
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %322, ptr addrspace(1) %321, i1 %315) #5, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cstfuc7xoddti5sdjdtknsadujzkwuksuc3ls3akoqnxsxpam5yt.py", directory: "inductor_cache/st")
!4 = !{ptr @triton_per_fused__native_batch_norm_legit_convolution_elu_7, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__native_batch_norm_legit_convolution_elu_7, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__native_batch_norm_legit_convolution_elu_7", linkageName: "triton_per_fused__native_batch_norm_legit_convolution_elu_7", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 19, scope: !7)
!17 = !DILocation(line: 32, column: 42, scope: !7)
!18 = !DILocation(line: 32, column: 39, scope: !7)
!19 = !DILocation(line: 32, column: 34, scope: !7)
!20 = !DILocation(line: 32, column: 47, scope: !7)
!21 = !DILocation(line: 33, column: 30, scope: !7)
!22 = !DILocation(line: 33, column: 35, scope: !7)
!23 = !DILocation(line: 34, column: 18, scope: !7)
!24 = !DILocation(line: 256, column: 15, scope: !25, inlinedAt: !28)
!25 = distinct !DILexicalBlockFile(scope: !27, file: !26, discriminator: 0)
!26 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!27 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!28 = !DILocation(line: 39, column: 24, scope: !7)
!29 = !DILocation(line: 267, column: 36, scope: !27, inlinedAt: !28)
!30 = !DILocation(line: 42, column: 19, scope: !7)
!31 = !DILocation(line: 43, column: 19, scope: !7)
!32 = !DILocation(line: 44, column: 20, scope: !7)
!33 = !DILocation(line: 256, column: 15, scope: !25, inlinedAt: !34)
!34 = !DILocation(line: 47, column: 26, scope: !7)
!35 = !DILocation(line: 267, column: 36, scope: !27, inlinedAt: !34)
!36 = !DILocation(line: 52, column: 28, scope: !7)
!37 = !DILocation(line: 49, column: 20, scope: !7)
!38 = !DILocation(line: 51, column: 20, scope: !7)
!39 = !DILocation(line: 54, column: 20, scope: !7)
!40 = !DILocation(line: 59, column: 28, scope: !7)
!41 = !DILocation(line: 56, column: 20, scope: !7)
!42 = !DILocation(line: 61, column: 35, scope: !7)
!43 = !DILocation(line: 62, column: 47, scope: !7)
!44 = !DILocation(line: 63, column: 4, scope: !7)
!45 = !DILocation(line: 64, column: 28, scope: !7)
!46 = !DILocation(line: 64, column: 40, scope: !7)
!47 = !DILocation(line: 65, column: 25, scope: !7)
!48 = !DILocation(line: 65, column: 45, scope: !7)
!49 = !DILocation(line: 66, column: 25, scope: !7)
!50 = !DILocation(line: 66, column: 37, scope: !7)
!51 = !DILocation(line: 66, column: 4, scope: !7)
