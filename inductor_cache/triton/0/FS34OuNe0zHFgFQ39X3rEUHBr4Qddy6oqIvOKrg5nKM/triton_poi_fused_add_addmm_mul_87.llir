; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_addmm_mul_87(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 9, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 2, !dbg !12
  %10 = and i32 %9, 508, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %.frozen = freeze i32 %11, !dbg !14
  %12 = sdiv i32 %.frozen, 512, !dbg !14
  %13 = srem i32 %12, 18, !dbg !15
  %14 = mul i32 %12, 512, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = sdiv i32 %11, 9216, !dbg !17
  %16 = mul nsw i32 %15, 9216, !dbg !18
  %17 = add nsw i32 %16, %.decomposed, !dbg !19
  %18 = add i32 %17, 8192, !dbg !20
  %19 = sext i32 %18 to i64, !dbg !21
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !21
  %21 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !22
  %22 = extractvalue { i32, i32, i32, i32 } %21, 0, !dbg !22
  %23 = extractvalue { i32, i32, i32, i32 } %21, 1, !dbg !22
  %24 = extractvalue { i32, i32, i32, i32 } %21, 2, !dbg !22
  %25 = extractvalue { i32, i32, i32, i32 } %21, 3, !dbg !22
  %26 = add i32 %17, 8704, !dbg !23
  %27 = sext i32 %26 to i64, !dbg !24
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !24
  %29 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %28, i1 true) #1, !dbg !25
  %30 = extractvalue { i32, i32, i32, i32 } %29, 0, !dbg !25
  %31 = extractvalue { i32, i32, i32, i32 } %29, 1, !dbg !25
  %32 = extractvalue { i32, i32, i32, i32 } %29, 2, !dbg !25
  %33 = extractvalue { i32, i32, i32, i32 } %29, 3, !dbg !25
  %34 = bitcast i32 %30 to float, !dbg !25
  %35 = bitcast i32 %31 to float, !dbg !25
  %36 = bitcast i32 %32 to float, !dbg !25
  %37 = bitcast i32 %33 to float, !dbg !25
  %38 = shl nsw i32 %15, 9, !dbg !26
  %39 = add nsw i32 %38, %.decomposed, !dbg !27
  %40 = sext i32 %39 to i64, !dbg !28
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !28
  %42 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %41, i1 true) #1, !dbg !29
  %43 = extractvalue { i32, i32, i32, i32 } %42, 0, !dbg !29
  %44 = extractvalue { i32, i32, i32, i32 } %42, 1, !dbg !29
  %45 = extractvalue { i32, i32, i32, i32 } %42, 2, !dbg !29
  %46 = extractvalue { i32, i32, i32, i32 } %42, 3, !dbg !29
  %47 = bitcast i32 %43 to float, !dbg !29
  %48 = bitcast i32 %44 to float, !dbg !29
  %49 = bitcast i32 %45 to float, !dbg !29
  %50 = bitcast i32 %46 to float, !dbg !29
  %51 = sext i32 %.decomposed to i64, !dbg !30
  %52 = getelementptr float, ptr addrspace(1) %2, i64 %51, !dbg !30
  %53 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %52, i1 true) #1, !dbg !31
  %54 = extractvalue { i32, i32, i32, i32 } %53, 0, !dbg !31
  %55 = extractvalue { i32, i32, i32, i32 } %53, 1, !dbg !31
  %56 = extractvalue { i32, i32, i32, i32 } %53, 2, !dbg !31
  %57 = extractvalue { i32, i32, i32, i32 } %53, 3, !dbg !31
  %58 = bitcast i32 %54 to float, !dbg !31
  %59 = bitcast i32 %55 to float, !dbg !31
  %60 = bitcast i32 %56 to float, !dbg !31
  %61 = bitcast i32 %57 to float, !dbg !31
  %62 = sext i32 %11 to i64, !dbg !32
  %63 = getelementptr float, ptr addrspace(1) %0, i64 %62, !dbg !32
  %64 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %63, i1 true) #1, !dbg !33
  %65 = extractvalue { i32, i32, i32, i32 } %64, 0, !dbg !33
  %66 = extractvalue { i32, i32, i32, i32 } %64, 1, !dbg !33
  %67 = extractvalue { i32, i32, i32, i32 } %64, 2, !dbg !33
  %68 = extractvalue { i32, i32, i32, i32 } %64, 3, !dbg !33
  %69 = icmp eq i32 %13, 17, !dbg !34
  %70 = fadd float %47, %58, !dbg !35
  %71 = fadd float %48, %59, !dbg !35
  %72 = fadd float %49, %60, !dbg !35
  %73 = fadd float %50, %61, !dbg !35
  %74 = fadd float %70, %34, !dbg !36
  %75 = fadd float %71, %35, !dbg !36
  %76 = fadd float %72, %36, !dbg !36
  %77 = fadd float %73, %37, !dbg !36
  %78 = icmp eq i32 %13, 16, !dbg !37
  %.v = select i1 %78, i32 %22, i32 %65, !dbg !38
  %.v1 = select i1 %78, i32 %23, i32 %66, !dbg !38
  %.v2 = select i1 %78, i32 %24, i32 %67, !dbg !38
  %.v3 = select i1 %78, i32 %25, i32 %68, !dbg !38
  %79 = getelementptr float, ptr addrspace(1) %3, i64 %62, !dbg !39
  %80 = bitcast float %74 to i32, !dbg !40
  %81 = select i1 %69, i32 %80, i32 %.v, !dbg !41
  %82 = bitcast float %75 to i32, !dbg !40
  %83 = select i1 %69, i32 %82, i32 %.v1, !dbg !41
  %84 = bitcast float %76 to i32, !dbg !40
  %85 = select i1 %69, i32 %84, i32 %.v2, !dbg !41
  %86 = bitcast float %77 to i32, !dbg !40
  %87 = select i1 %69, i32 %86, i32 %.v3, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %81, i32 %83, i32 %85, i32 %87, ptr addrspace(1) %79, i1 true) #1, !dbg !40
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctw4wvfrc77wyrlqh7x3fl5xpbif3k6k3cslxp7mmey3k3nabqsg.py", directory: "inductor_cache/tw")
!4 = !{ptr @triton_poi_fused_add_addmm_mul_87, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_addmm_mul_87, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_addmm_mul_87", linkageName: "triton_poi_fused_add_addmm_mul_87", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 47, scope: !7)
!19 = !DILocation(line: 28, column: 37, scope: !7)
!20 = !DILocation(line: 28, column: 42, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 52, scope: !7)
!23 = !DILocation(line: 29, column: 42, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 52, scope: !7)
!26 = !DILocation(line: 30, column: 39, scope: !7)
!27 = !DILocation(line: 30, column: 35, scope: !7)
!28 = !DILocation(line: 30, column: 30, scope: !7)
!29 = !DILocation(line: 30, column: 44, scope: !7)
!30 = !DILocation(line: 31, column: 30, scope: !7)
!31 = !DILocation(line: 31, column: 35, scope: !7)
!32 = !DILocation(line: 32, column: 31, scope: !7)
!33 = !DILocation(line: 32, column: 36, scope: !7)
!34 = !DILocation(line: 35, column: 19, scope: !7)
!35 = !DILocation(line: 41, column: 19, scope: !7)
!36 = !DILocation(line: 42, column: 19, scope: !7)
!37 = !DILocation(line: 43, column: 20, scope: !7)
!38 = !DILocation(line: 44, column: 34, scope: !7)
!39 = !DILocation(line: 46, column: 25, scope: !7)
!40 = !DILocation(line: 46, column: 37, scope: !7)
!41 = !DILocation(line: 45, column: 34, scope: !7)
!42 = !DILocation(line: 46, column: 4, scope: !7)
