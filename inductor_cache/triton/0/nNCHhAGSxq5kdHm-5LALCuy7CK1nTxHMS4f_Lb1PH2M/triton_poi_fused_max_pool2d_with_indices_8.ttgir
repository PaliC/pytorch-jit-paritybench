#blocked = #triton_gpu.blocked<{sizePerThread = [8], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_8(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<5> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<6> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<7> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<8> : tensor<1024xi8, #blocked> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_8 = arith.constant dense<256> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<16> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<4096> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<65536> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<512> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<17408> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<295936> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<8704> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<8960> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<9216> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_18 = arith.constant dense<17664> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_19 = arith.constant dense<17920> : tensor<1024xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked1> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)
    %5 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked1> loc(#loc5)
    %6 = arith.addi %4, %2 : tensor<1024xi32, #blocked> loc(#loc5)
    %7 = arith.addi %5, %3 : tensor<1024xi32, #blocked1> loc(#loc5)
    %8 = arith.remsi %6, %cst_8 : tensor<1024xi32, #blocked> loc(#loc6)
    %9 = arith.divsi %6, %cst_8 : tensor<1024xi32, #blocked> loc(#loc7)
    %10 = arith.remsi %9, %cst_9 : tensor<1024xi32, #blocked> loc(#loc8)
    %11 = arith.divsi %6, %cst_10 : tensor<1024xi32, #blocked> loc(#loc9)
    %12 = arith.remsi %11, %cst_9 : tensor<1024xi32, #blocked> loc(#loc10)
    %13 = arith.divsi %6, %cst_11 : tensor<1024xi32, #blocked> loc(#loc11)
    %14 = arith.muli %10, %cst_12 : tensor<1024xi32, #blocked> loc(#loc12)
    %15 = arith.addi %8, %14 : tensor<1024xi32, #blocked> loc(#loc13)
    %16 = arith.muli %12, %cst_13 : tensor<1024xi32, #blocked> loc(#loc14)
    %17 = arith.addi %15, %16 : tensor<1024xi32, #blocked> loc(#loc15)
    %18 = arith.muli %13, %cst_14 : tensor<1024xi32, #blocked> loc(#loc16)
    %19 = arith.addi %17, %18 : tensor<1024xi32, #blocked> loc(#loc17)
    %20 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc18)
    %21 = tt.addptr %20, %19 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc18)
    %22 = tt.load %21 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc19)
    %23 = arith.addi %8, %cst_8 : tensor<1024xi32, #blocked> loc(#loc20)
    %24 = arith.addi %23, %14 : tensor<1024xi32, #blocked> loc(#loc21)
    %25 = arith.addi %24, %16 : tensor<1024xi32, #blocked> loc(#loc22)
    %26 = arith.addi %25, %18 : tensor<1024xi32, #blocked> loc(#loc23)
    %27 = tt.addptr %20, %26 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc24)
    %28 = tt.load %27 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc25)
    %29 = arith.addi %8, %cst_12 : tensor<1024xi32, #blocked> loc(#loc26)
    %30 = arith.addi %29, %14 : tensor<1024xi32, #blocked> loc(#loc27)
    %31 = arith.addi %30, %16 : tensor<1024xi32, #blocked> loc(#loc28)
    %32 = arith.addi %31, %18 : tensor<1024xi32, #blocked> loc(#loc29)
    %33 = tt.addptr %20, %32 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc30)
    %34 = tt.load %33 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc31)
    %35 = arith.addi %8, %cst_15 : tensor<1024xi32, #blocked> loc(#loc32)
    %36 = arith.addi %35, %14 : tensor<1024xi32, #blocked> loc(#loc33)
    %37 = arith.addi %36, %16 : tensor<1024xi32, #blocked> loc(#loc34)
    %38 = arith.addi %37, %18 : tensor<1024xi32, #blocked> loc(#loc35)
    %39 = tt.addptr %20, %38 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc36)
    %40 = tt.load %39 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc37)
    %41 = arith.addi %8, %cst_16 : tensor<1024xi32, #blocked> loc(#loc38)
    %42 = arith.addi %41, %14 : tensor<1024xi32, #blocked> loc(#loc39)
    %43 = arith.addi %42, %16 : tensor<1024xi32, #blocked> loc(#loc40)
    %44 = arith.addi %43, %18 : tensor<1024xi32, #blocked> loc(#loc41)
    %45 = tt.addptr %20, %44 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc42)
    %46 = tt.load %45 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc43)
    %47 = arith.addi %8, %cst_17 : tensor<1024xi32, #blocked> loc(#loc44)
    %48 = arith.addi %47, %14 : tensor<1024xi32, #blocked> loc(#loc45)
    %49 = arith.addi %48, %16 : tensor<1024xi32, #blocked> loc(#loc46)
    %50 = arith.addi %49, %18 : tensor<1024xi32, #blocked> loc(#loc47)
    %51 = tt.addptr %20, %50 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc48)
    %52 = tt.load %51 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc49)
    %53 = arith.addi %8, %cst_13 : tensor<1024xi32, #blocked> loc(#loc50)
    %54 = arith.addi %53, %14 : tensor<1024xi32, #blocked> loc(#loc51)
    %55 = arith.addi %54, %16 : tensor<1024xi32, #blocked> loc(#loc52)
    %56 = arith.addi %55, %18 : tensor<1024xi32, #blocked> loc(#loc53)
    %57 = tt.addptr %20, %56 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc54)
    %58 = tt.load %57 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc55)
    %59 = arith.addi %8, %cst_18 : tensor<1024xi32, #blocked> loc(#loc56)
    %60 = arith.addi %59, %14 : tensor<1024xi32, #blocked> loc(#loc57)
    %61 = arith.addi %60, %16 : tensor<1024xi32, #blocked> loc(#loc58)
    %62 = arith.addi %61, %18 : tensor<1024xi32, #blocked> loc(#loc59)
    %63 = tt.addptr %20, %62 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc60)
    %64 = tt.load %63 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc61)
    %65 = arith.addi %8, %cst_19 : tensor<1024xi32, #blocked> loc(#loc62)
    %66 = arith.addi %65, %14 : tensor<1024xi32, #blocked> loc(#loc63)
    %67 = arith.addi %66, %16 : tensor<1024xi32, #blocked> loc(#loc64)
    %68 = arith.addi %67, %18 : tensor<1024xi32, #blocked> loc(#loc65)
    %69 = tt.addptr %20, %68 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc66)
    %70 = tt.load %69 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc67)
    %71 = arith.cmpf ogt, %28, %22 : tensor<1024xf32, #blocked> loc(#loc93)
    %72 = arith.cmpf une, %28, %28 : tensor<1024xf32, #blocked> loc(#loc94)
    %73 = arith.ori %71, %72 : tensor<1024xi1, #blocked> loc(#loc95)
    %74 = arith.select %73, %28, %22 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc96)
    %75 = arith.cmpf ogt, %34, %74 : tensor<1024xf32, #blocked> loc(#loc97)
    %76 = arith.cmpf une, %34, %34 : tensor<1024xf32, #blocked> loc(#loc98)
    %77 = arith.ori %75, %76 : tensor<1024xi1, #blocked> loc(#loc99)
    %78 = arith.select %77, %34, %74 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc100)
    %79 = arith.cmpf ogt, %40, %78 : tensor<1024xf32, #blocked> loc(#loc101)
    %80 = arith.cmpf une, %40, %40 : tensor<1024xf32, #blocked> loc(#loc102)
    %81 = arith.ori %79, %80 : tensor<1024xi1, #blocked> loc(#loc103)
    %82 = arith.select %81, %40, %78 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc104)
    %83 = arith.cmpf ogt, %46, %82 : tensor<1024xf32, #blocked> loc(#loc105)
    %84 = arith.cmpf une, %46, %46 : tensor<1024xf32, #blocked> loc(#loc106)
    %85 = arith.ori %83, %84 : tensor<1024xi1, #blocked> loc(#loc107)
    %86 = arith.select %85, %46, %82 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc108)
    %87 = arith.cmpf ogt, %52, %86 : tensor<1024xf32, #blocked> loc(#loc109)
    %88 = arith.cmpf une, %52, %52 : tensor<1024xf32, #blocked> loc(#loc110)
    %89 = arith.ori %87, %88 : tensor<1024xi1, #blocked> loc(#loc111)
    %90 = arith.select %89, %52, %86 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc112)
    %91 = arith.cmpf ogt, %58, %90 : tensor<1024xf32, #blocked> loc(#loc113)
    %92 = arith.cmpf une, %58, %58 : tensor<1024xf32, #blocked> loc(#loc114)
    %93 = arith.ori %91, %92 : tensor<1024xi1, #blocked> loc(#loc115)
    %94 = arith.select %93, %58, %90 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc116)
    %95 = arith.cmpf ogt, %64, %94 : tensor<1024xf32, #blocked> loc(#loc117)
    %96 = arith.cmpf une, %64, %64 : tensor<1024xf32, #blocked> loc(#loc118)
    %97 = arith.ori %95, %96 : tensor<1024xi1, #blocked> loc(#loc119)
    %98 = arith.select %97, %64, %94 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc120)
    %99 = arith.cmpf ogt, %70, %98 : tensor<1024xf32, #blocked> loc(#loc121)
    %100 = arith.cmpf une, %70, %70 : tensor<1024xf32, #blocked> loc(#loc122)
    %101 = arith.ori %99, %100 : tensor<1024xi1, #blocked> loc(#loc123)
    %102 = arith.select %101, %70, %98 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc124)
    %103 = arith.select %71, %cst, %cst_0 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc80)
    %104 = arith.select %75, %cst_1, %103 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc81)
    %105 = arith.select %79, %cst_2, %104 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc82)
    %106 = arith.select %83, %cst_3, %105 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc83)
    %107 = arith.select %87, %cst_4, %106 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc84)
    %108 = arith.select %91, %cst_5, %107 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc85)
    %109 = arith.select %95, %cst_6, %108 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc86)
    %110 = arith.select %99, %cst_7, %109 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc87)
    %111 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc88)
    %112 = tt.addptr %111, %7 : tensor<1024x!tt.ptr<f32>, #blocked1>, tensor<1024xi32, #blocked1> loc(#loc88)
    %113 = triton_gpu.convert_layout %102 : tensor<1024xf32, #blocked> -> tensor<1024xf32, #blocked1> loc(#loc89)
    tt.store %112, %113 : tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc89)
    %114 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc90)
    %115 = tt.addptr %114, %6 : tensor<1024x!tt.ptr<i8>, #blocked>, tensor<1024xi32, #blocked> loc(#loc90)
    tt.store %115, %110 : tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc91)
    tt.return loc(#loc92)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":21:28)
#loc3 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":21:33)
#loc4 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":22:36)
#loc5 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":22:23)
#loc6 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":24:19)
#loc7 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":25:21)
#loc8 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":25:28)
#loc9 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":26:21)
#loc10 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":26:29)
#loc11 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":27:19)
#loc12 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":29:39)
#loc13 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":29:35)
#loc14 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":29:50)
#loc15 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":29:44)
#loc16 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":29:62)
#loc17 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":29:55)
#loc18 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":29:30)
#loc19 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":29:67)
#loc20 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":30:36)
#loc21 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":30:41)
#loc22 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":30:50)
#loc23 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":30:61)
#loc24 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":30:30)
#loc25 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":30:73)
#loc26 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":31:36)
#loc27 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":31:41)
#loc28 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":31:50)
#loc29 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":31:61)
#loc30 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":31:30)
#loc31 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":31:73)
#loc32 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":32:37)
#loc33 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":32:42)
#loc34 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":32:51)
#loc35 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":32:62)
#loc36 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":32:30)
#loc37 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":32:74)
#loc38 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":33:37)
#loc39 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":33:42)
#loc40 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":33:51)
#loc41 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":33:62)
#loc42 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":33:30)
#loc43 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":33:74)
#loc44 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":34:37)
#loc45 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":34:42)
#loc46 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":34:51)
#loc47 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":34:62)
#loc48 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":34:30)
#loc49 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":34:74)
#loc50 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":35:39)
#loc51 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":35:44)
#loc52 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":35:53)
#loc53 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":35:64)
#loc54 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":35:31)
#loc55 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":35:76)
#loc56 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":36:39)
#loc57 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":36:44)
#loc58 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":36:53)
#loc59 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":36:64)
#loc60 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":36:31)
#loc61 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":36:76)
#loc62 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":37:39)
#loc63 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":37:44)
#loc64 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":37:53)
#loc65 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":37:64)
#loc66 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":37:31)
#loc67 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":37:76)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc69 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":38:40)
#loc70 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc72 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc73 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":39:40)
#loc74 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":40:40)
#loc75 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":41:40)
#loc76 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":42:41)
#loc77 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":43:42)
#loc78 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":44:42)
#loc79 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":45:42)
#loc80 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":49:35)
#loc81 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":52:35)
#loc82 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":55:35)
#loc83 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":58:35)
#loc84 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":61:35)
#loc85 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":64:35)
#loc86 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":67:35)
#loc87 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":70:35)
#loc88 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":71:25)
#loc89 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":71:37)
#loc90 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":72:25)
#loc91 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":72:37)
#loc92 = loc("inductor_cache/rz/crza2lo5q7gwygss3cfhswxb43uj7mbnvmz2dz2ljc7jwhs3vxl7.py":72:4)
#loc93 = loc(callsite(#loc68 at #loc69))
#loc94 = loc(callsite(#loc70 at #loc69))
#loc95 = loc(callsite(#loc71 at #loc69))
#loc96 = loc(callsite(#loc72 at #loc69))
#loc97 = loc(callsite(#loc68 at #loc73))
#loc98 = loc(callsite(#loc70 at #loc73))
#loc99 = loc(callsite(#loc71 at #loc73))
#loc100 = loc(callsite(#loc72 at #loc73))
#loc101 = loc(callsite(#loc68 at #loc74))
#loc102 = loc(callsite(#loc70 at #loc74))
#loc103 = loc(callsite(#loc71 at #loc74))
#loc104 = loc(callsite(#loc72 at #loc74))
#loc105 = loc(callsite(#loc68 at #loc75))
#loc106 = loc(callsite(#loc70 at #loc75))
#loc107 = loc(callsite(#loc71 at #loc75))
#loc108 = loc(callsite(#loc72 at #loc75))
#loc109 = loc(callsite(#loc68 at #loc76))
#loc110 = loc(callsite(#loc70 at #loc76))
#loc111 = loc(callsite(#loc71 at #loc76))
#loc112 = loc(callsite(#loc72 at #loc76))
#loc113 = loc(callsite(#loc68 at #loc77))
#loc114 = loc(callsite(#loc70 at #loc77))
#loc115 = loc(callsite(#loc71 at #loc77))
#loc116 = loc(callsite(#loc72 at #loc77))
#loc117 = loc(callsite(#loc68 at #loc78))
#loc118 = loc(callsite(#loc70 at #loc78))
#loc119 = loc(callsite(#loc71 at #loc78))
#loc120 = loc(callsite(#loc72 at #loc78))
#loc121 = loc(callsite(#loc68 at #loc79))
#loc122 = loc(callsite(#loc70 at #loc79))
#loc123 = loc(callsite(#loc71 at #loc79))
#loc124 = loc(callsite(#loc72 at #loc79))
