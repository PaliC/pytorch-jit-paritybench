//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14_param_5,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14_param_6,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<81>;
	.reg .f32 	%f<42>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd7, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14_param_0];
	ld.param.u64 	%rd8, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14_param_1];
$L__tmp0:
	.loc	1 23 28                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:23:33
	shl.b32 	%r35, %r1, 3;
	ld.param.u64 	%rd9, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14_param_2];
	ld.param.u64 	%rd10, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14_param_3];
	.loc	1 24 44                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:24:44
	mov.u32 	%r36, %tid.x;
	shl.b32 	%r37, %r36, 1;
	ld.param.u64 	%rd11, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14_param_4];
	and.b32  	%r38, %r37, 6;
	ld.param.u64 	%rd12, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_14_param_5];
	.loc	1 24 23                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:24:23
	or.b32  	%r39, %r35, %r38;
	.loc	1 25 21                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:25:21
	setp.lt.s32 	%p1, %r39, 512;
	.loc	1 31 19                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:31:19
	shr.s32 	%r41, %r39, 31;
	shr.u32 	%r42, %r41, 25;
	add.s32 	%r43, %r39, %r42;
	.loc	1 30 19                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:30:19
	and.b32  	%r44, %r43, -128;
	sub.s32 	%r45, %r39, %r44;
	.loc	1 33 39                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:33:39
	shl.b32 	%r46, %r36, 5;
	and.b32  	%r47, %r46, 1920;
	.loc	1 33 35                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:33:35
	add.s32 	%r48, %r45, %r47;
	.loc	1 33 49                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:33:49
	shl.b32 	%r49, %r43, 4;
	and.b32  	%r50, %r49, -2048;
	.loc	1 33 44                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:33:44
	add.s32 	%r51, %r48, %r50;
	.loc	1 33 30                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:33:30
	mul.wide.s32 	%rd13, %r51, 4;
	add.s64 	%rd1, %rd8, %rd13;
	mov.b32 	%r4, 0;
	.loc	1 33 54                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:33:54
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	.loc	1 34 30                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:34:30
	mul.wide.s32 	%rd14, %r45, 4;
	add.s64 	%rd2, %rd9, %rd14;
	.loc	1 34 35                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:34:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:35:30
	add.s64 	%rd3, %rd10, %rd14;
	.loc	1 35 35                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:35:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r8, %r9 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r8;
	mov.b32 	%f2, %r9;
	.loc	1 36 31                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:36:31
	add.s64 	%rd4, %rd11, %rd14;
	.loc	1 36 36                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:36:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:37:31
	add.s64 	%rd5, %rd12, %rd14;
	.loc	1 37 36                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:37:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 40 18                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:40:18
	add.f32 	%f3, %f1, 0f3727C5AC;
	add.f32 	%f4, %f2, 0f3727C5AC;
	.loc	1 41 26                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:41:26
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 33 54                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:33:54
	mov.b32 	%f7, %r3;
	.loc	1 34 35                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:34:35
	mov.b32 	%f8, %r7;
	.loc	1 38 18                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:38:18
	sub.f32 	%f9, %f7, %f8;
	.loc	1 33 54                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:33:54
	mov.b32 	%f10, %r2;
	.loc	1 34 35                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:34:35
	mov.b32 	%f11, %r6;
	.loc	1 38 18                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:38:18
	sub.f32 	%f12, %f10, %f11;
	.loc	1 37 36                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:37:36
	mov.b32 	%f13, %r13;
	mov.b32 	%f14, %r12;
	.loc	1 36 36                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:36:36
	mov.b32 	%f15, %r11;
	mov.b32 	%f16, %r10;
	.loc	1 24 44                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:24:44
	and.b32  	%r52, %r36, 7;
	.loc	1 24 23                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:24:23
	or.b32  	%r53, %r35, %r52;
	.loc	1 25 21                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:25:21
	setp.lt.s32 	%p14, %r53, 512;
	.loc	1 24 44                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:24:44
	and.b32  	%r54, %r36, 31;
	.loc	1 43 18                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:43:18
	mov.b32 	%r16, %f5;
	mov.b32 	%r15, 1065353216;
	// begin inline asm
	div.full.f32 %r14, %r15, %r16;
	// end inline asm
	mov.b32 	%f17, %r14;
	mov.b32 	%r19, %f6;
	// begin inline asm
	div.full.f32 %r17, %r15, %r19;
	// end inline asm
	mov.b32 	%f18, %r17;
	.loc	1 46 19                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:46:19
	mul.f32 	%f19, %f12, %f17;
	mul.f32 	%f20, %f9, %f18;
	.loc	1 48 20                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:48:20
	fma.rn.f32 	%f21, %f19, %f16, %f14;
	fma.rn.f32 	%f22, %f20, %f15, %f13;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p15, %f21, 0f00000000;
	setp.lt.f32 	%p16, %f22, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f23, 0f00000000, %f21, %p15;
	selp.f32 	%f24, 0f00000000, %f22, %p16;
$L__tmp2:
	.loc	1 52 35                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:52:35
	selp.f32 	%f25, %f23, 0f00000000, %p1;
	selp.f32 	%f26, %f24, 0f00000000, %p1;
$L__tmp3:
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f25;
	shfl.sync.bfly.b32	%r56, %r55, 16, 31, -1;
	mov.b32 	%f27, %r56;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f28, %f25, %f27;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f28;
	shfl.sync.bfly.b32	%r58, %r57, 8, 31, -1;
	mov.b32 	%f29, %r58;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f30;
	shfl.sync.bfly.b32	%r60, %r59, 4, 31, -1;
	mov.b32 	%f31, %r60;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f26;
	shfl.sync.bfly.b32	%r62, %r61, 16, 31, -1;
	mov.b32 	%f33, %r62;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f34, %f26, %f33;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f34;
	shfl.sync.bfly.b32	%r64, %r63, 8, 31, -1;
	mov.b32 	%f35, %r64;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f36;
	shfl.sync.bfly.b32	%r66, %r65, 4, 31, -1;
	mov.b32 	%f37, %r66;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	3 267 36                        // standard.py:267:36
	setp.lt.u32 	%p8, %r54, 4;
	shl.b32 	%r67, %r38, 3;
	shr.u32 	%r68, %r36, 3;
	and.b32  	%r69, %r68, 4;
	or.b32  	%r70, %r67, %r69;
	mov.u32 	%r71, global_smem;
	add.s32 	%r20, %r71, %r70;
	mov.b32 	%r21, %f32;
	// begin inline asm
	@%p8 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	add.s32 	%r22, %r20, 8;
	mov.b32 	%r23, %f38;
	// begin inline asm
	@%p8 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r36, 16;
	shl.b32 	%r72, %r36, 2;
	add.s32 	%r25, %r71, %r72;
	// begin inline asm
	@%p10 ld.shared.b32 %r24, [ %r25 + 0 ];
	// end inline asm
	mov.b32 	%f39, %r24;
	shfl.sync.bfly.b32	%r73, %r24, 1, 31, -1;
	mov.b32 	%f40, %r73;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r74, %r36, 1;
	setp.eq.b32 	%p17, %r74, 1;
	not.pred 	%p18, %p17;
	and.pred  	%p11, %p10, %p18;
	mov.b32 	%r27, %f41;
	// begin inline asm
	@%p11 st.shared.b32 [ %r25 + 0 ], %r27;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r75, %r71, %r67;
	ld.shared.u32 	%r29, [%r75];
	ld.shared.u32 	%r30, [%r75+8];
$L__tmp4:
	.loc	1 55 20                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:55:20
	bar.sync 	0;
	shl.b32 	%r76, %r38, 2;
	sub.s32 	%r28, %r75, %r76;
	mov.pred 	%p12, -1;
	// begin inline asm
	@%p12 st.shared.v2.b32 [ %r28 + 0 ], { %r29, %r30 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r77, %r52, 2;
	add.s32 	%r78, %r71, %r77;
	ld.shared.u32 	%r32, [%r78];
	mov.b32 	%r33, 1098907648;
	// begin inline asm
	div.full.f32 %r34, %r32, %r33;
	// end inline asm
	.loc	1 56 4                          // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:56:4
	bar.sync 	0;
	.loc	1 57 28                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:57:28
	mul.wide.s32 	%rd15, %r53, 4;
	add.s64 	%rd6, %rd7, %rd15;
	.loc	1 57 40                         // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:57:40
	bfe.u32 	%r79, %r36, 3, 2;
	or.b32  	%r80, %r69, %r79;
	setp.eq.s32 	%p19, %r80, 0;
	and.pred  	%p13, %p19, %p14;
	// begin inline asm
	@%p13 st.global.b32 [ %rd6 + 0 ], { %r34 };
	// end inline asm
	.loc	1 57 4                          // cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py:57:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fs/cfsg5tkk2jkbyyzrialu5izt4iwcikw7o7lhn56tdzqdki6p72s3.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 235                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe4 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 115
.b8 103
.b8 53
.b8 116
.b8 107
.b8 107
.b8 50
.b8 106
.b8 107
.b8 98
.b8 121
.b8 121
.b8 122
.b8 114
.b8 105
.b8 97
.b8 108
.b8 117
.b8 53
.b8 105
.b8 122
.b8 116
.b8 52
.b8 105
.b8 119
.b8 99
.b8 105
.b8 107
.b8 119
.b8 55
.b8 111
.b8 55
.b8 108
.b8 104
.b8 110
.b8 53
.b8 54
.b8 116
.b8 100
.b8 122
.b8 113
.b8 100
.b8 107
.b8 105
.b8 54
.b8 112
.b8 55
.b8 50
.b8 115
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x45 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 49
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa8:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
