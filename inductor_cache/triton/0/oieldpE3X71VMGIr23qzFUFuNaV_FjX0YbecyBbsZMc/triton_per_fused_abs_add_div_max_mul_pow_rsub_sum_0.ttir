#loc = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":19:0)
#loc1 = loc(unknown)
#loc13 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":39:70)
#loc22 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":42:59)
#loc25 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":44:59)
#loc29 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":48:59)
#loc31 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":50:59)
#loc47 = loc(callsite(#loc1 at #loc13))
#loc54 = loc(callsite(#loc1 at #loc22))
#loc58 = loc(callsite(#loc1 at #loc25))
#loc61 = loc(callsite(#loc1 at #loc29))
#loc64 = loc(callsite(#loc1 at #loc31))
module {
  tt.func public @triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>> loc(#loc6)
    %7 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc7)
    %8 = tt.addptr %7, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc7)
    %9 = tt.load %8 : tensor<256x!tt.ptr<f32>> loc(#loc8)
    %10 = arith.subf %cst_1, %3 : tensor<256xf32> loc(#loc9)
    %11 = arith.mulf %10, %6 : tensor<256xf32> loc(#loc10)
    %12 = math.absf %11 : tensor<256xf32> loc(#loc11)
    %13 = "tt.reduce"(%12) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc13)), %arg8: f32 loc(callsite(#loc1 at #loc13))):
      %39 = arith.cmpf ogt, %arg7, %arg8 : f32 loc(#loc66)
      %40 = arith.cmpf une, %arg7, %arg7 : f32 loc(#loc67)
      %41 = arith.ori %39, %40 : i1 loc(#loc68)
      %42 = arith.select %41, %arg7, %arg8 : f32 loc(#loc69)
      tt.reduce.return %42 : f32 loc(#loc46)
    }) : (tensor<256xf32>) -> f32 loc(#loc46)
    %14 = arith.addf %13, %cst_0 : f32 loc(#loc52)
    %15 = tt.splat %14 : f32 -> tensor<1xf32> loc(#loc52)
    %16 = arith.mulf %11, %11 : tensor<256xf32> loc(#loc20)
    %17 = "tt.reduce"(%16) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc22)), %arg8: f32 loc(callsite(#loc1 at #loc22))):
      %39 = arith.addf %arg7, %arg8 : f32 loc(#loc70)
      tt.reduce.return %39 : f32 loc(#loc53)
    }) : (tensor<256xf32>) -> f32 loc(#loc53)
    %18 = arith.addf %17, %cst_0 : f32 loc(#loc56)
    %19 = "tt.reduce"(%6) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc25)), %arg8: f32 loc(callsite(#loc1 at #loc25))):
      %39 = arith.addf %arg7, %arg8 : f32 loc(#loc71)
      tt.reduce.return %39 : f32 loc(#loc57)
    }) : (tensor<256xf32>) -> f32 loc(#loc57)
    %20 = arith.addf %19, %cst_0 : f32 loc(#loc59)
    %21 = arith.mulf %3, %9 : tensor<256xf32> loc(#loc27)
    %22 = arith.mulf %21, %21 : tensor<256xf32> loc(#loc28)
    %23 = "tt.reduce"(%22) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc29)), %arg8: f32 loc(callsite(#loc1 at #loc29))):
      %39 = arith.addf %arg7, %arg8 : f32 loc(#loc72)
      tt.reduce.return %39 : f32 loc(#loc60)
    }) : (tensor<256xf32>) -> f32 loc(#loc60)
    %24 = arith.addf %23, %cst_0 : f32 loc(#loc62)
    %25 = "tt.reduce"(%9) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc31)), %arg8: f32 loc(callsite(#loc1 at #loc31))):
      %39 = arith.addf %arg7, %arg8 : f32 loc(#loc73)
      tt.reduce.return %39 : f32 loc(#loc63)
    }) : (tensor<256xf32>) -> f32 loc(#loc63)
    %26 = arith.addf %25, %cst_0 : f32 loc(#loc65)
    %27 = arith.addf %20, %cst : f32 loc(#loc33)
    %28 = arith.divf %18, %27 : f32 loc(#loc34)
    %29 = arith.addf %26, %cst : f32 loc(#loc35)
    %30 = arith.divf %24, %29 : f32 loc(#loc36)
    %31 = arith.addf %28, %30 : f32 loc(#loc37)
    %32 = tt.splat %31 : f32 -> tensor<1xf32> loc(#loc37)
    %33 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc38)
    %34 = tt.addptr %33, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc38)
    tt.store %34, %21 : tensor<256x!tt.ptr<f32>> loc(#loc39)
    gpu.barrier loc(#loc40)
    %35 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc41)
    %36 = tt.splat %35 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc41)
    tt.store %36, %32 : tensor<1x!tt.ptr<f32>> loc(#loc42)
    %37 = tt.addptr %arg4, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc43)
    %38 = tt.splat %37 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc43)
    tt.store %38, %15 : tensor<1x!tt.ptr<f32>> loc(#loc44)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":27:26)
#loc3 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":31:30)
#loc4 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":31:35)
#loc5 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":32:30)
#loc6 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":32:35)
#loc7 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":33:31)
#loc8 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":33:36)
#loc9 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":35:18)
#loc10 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":36:18)
#loc11 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":37:23)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc19 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":39:44)
#loc20 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":40:18)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc24 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":42:45)
#loc26 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":44:45)
#loc27 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":45:19)
#loc28 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":46:20)
#loc30 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":48:45)
#loc32 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":50:45)
#loc33 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":52:20)
#loc34 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":53:20)
#loc35 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":54:20)
#loc36 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":55:20)
#loc37 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":56:20)
#loc38 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":57:25)
#loc39 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":57:64)
#loc40 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":58:4)
#loc41 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":59:28)
#loc42 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":59:63)
#loc43 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":60:25)
#loc44 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":60:59)
#loc45 = loc("inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py":60:4)
#loc46 = loc(callsite(#loc12 at #loc13))
#loc48 = loc(callsite(#loc14 at #loc12))
#loc49 = loc(callsite(#loc15 at #loc12))
#loc50 = loc(callsite(#loc16 at #loc12))
#loc51 = loc(callsite(#loc17 at #loc12))
#loc52 = loc(callsite(#loc18 at #loc19))
#loc53 = loc(callsite(#loc21 at #loc22))
#loc55 = loc(callsite(#loc23 at #loc21))
#loc56 = loc(callsite(#loc18 at #loc24))
#loc57 = loc(callsite(#loc21 at #loc25))
#loc59 = loc(callsite(#loc18 at #loc26))
#loc60 = loc(callsite(#loc21 at #loc29))
#loc62 = loc(callsite(#loc18 at #loc30))
#loc63 = loc(callsite(#loc21 at #loc31))
#loc65 = loc(callsite(#loc18 at #loc32))
#loc66 = loc(callsite(#loc48 at #loc13))
#loc67 = loc(callsite(#loc49 at #loc13))
#loc68 = loc(callsite(#loc50 at #loc13))
#loc69 = loc(callsite(#loc51 at #loc13))
#loc70 = loc(callsite(#loc55 at #loc22))
#loc71 = loc(callsite(#loc55 at #loc25))
#loc72 = loc(callsite(#loc55 at #loc29))
#loc73 = loc(callsite(#loc55 at #loc31))
