//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0 // -- Begin function triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0
.visible .entry triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0_param_5,
	.param .u32 triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<42>;
	.reg .b32 	%r<121>;
	.reg .f32 	%f<132>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0_param_0];
	ld.param.u64 	%rd7, [triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0_param_1];
$L__tmp0:
	.loc	1 27 26                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:27:26
	mov.u32 	%r55, %tid.x;
	and.b32  	%r56, %r55, 31;
	ld.param.u64 	%rd8, [triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0_param_2];
	ld.param.u64 	%rd9, [triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0_param_3];
	shl.b32 	%r57, %r55, 2;
	ld.param.u64 	%rd6, [triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0_param_4];
	and.b32  	%r58, %r57, 252;
	ld.param.u64 	%rd10, [triton_per_fused_abs_add_div_max_mul_pow_rsub_sum_0_param_5];
	.loc	1 31 30                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:31:30
	mul.wide.u32 	%rd11, %r58, 4;
	add.s64 	%rd1, %rd7, %rd11;
	mov.pred 	%p1, -1;
	.loc	1 31 35                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:31:35
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r1;
	mov.b32 	%f2, %r2;
	mov.b32 	%f3, %r3;
	mov.b32 	%f4, %r4;
	.loc	1 32 30                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:32:30
	add.s64 	%rd2, %rd8, %rd11;
	.loc	1 32 35                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:32:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r5;
	mov.b32 	%f6, %r6;
	mov.b32 	%f7, %r7;
	mov.b32 	%f8, %r8;
	.loc	1 33 31                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:33:31
	add.s64 	%rd3, %rd9, %rd11;
	.loc	1 33 36                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:33:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p1 ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r9;
	mov.b32 	%f10, %r10;
	mov.b32 	%f11, %r11;
	mov.b32 	%f12, %r12;
	mov.f32 	%f13, 0f3F800000;
	.loc	1 35 18                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:35:18
	sub.f32 	%f14, %f13, %f1;
	sub.f32 	%f15, %f13, %f2;
	sub.f32 	%f16, %f13, %f3;
	sub.f32 	%f17, %f13, %f4;
	.loc	1 36 18                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:36:18
	mul.f32 	%f18, %f14, %f5;
	mul.f32 	%f19, %f15, %f6;
	mul.f32 	%f20, %f16, %f7;
	mul.f32 	%f21, %f17, %f8;
	.loc	1 37 23                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:37:23
	abs.f32 	%f22, %f18;
	abs.f32 	%f23, %f19;
	abs.f32 	%f24, %f20;
	abs.f32 	%f25, %f21;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p22, %f22, %f23;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p23, %f18, %f18;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f26, %f22, %f23, %p22;
	selp.f32 	%f27, %f22, %f26, %p23;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p24, %f27, %f24;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p25, %f27, %f27;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f28, %f27, %f24, %p25;
	selp.f32 	%f29, %f27, %f28, %p24;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p26, %f29, %f25;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p27, %f29, %f29;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f30, %f29, %f25, %p27;
	selp.f32 	%f31, %f29, %f30, %p26;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r59, %f31;
	shfl.sync.bfly.b32	%r60, %r59, 16, 31, -1;
	mov.b32 	%f32, %r60;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p28, %f31, %f32;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p29, %f31, %f31;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f33, %f31, %f32, %p29;
	selp.f32 	%f34, %f31, %f33, %p28;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r61, %f34;
	shfl.sync.bfly.b32	%r62, %r61, 8, 31, -1;
	mov.b32 	%f35, %r62;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p30, %f34, %f35;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p31, %f34, %f34;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f36, %f34, %f35, %p31;
	selp.f32 	%f37, %f34, %f36, %p30;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r63, %f37;
	shfl.sync.bfly.b32	%r64, %r63, 4, 31, -1;
	mov.b32 	%f38, %r64;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p32, %f37, %f38;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p33, %f37, %f37;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f39, %f37, %f38, %p33;
	selp.f32 	%f40, %f37, %f39, %p32;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r65, %f40;
	shfl.sync.bfly.b32	%r66, %r65, 2, 31, -1;
	mov.b32 	%f41, %r66;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p34, %f40, %f41;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p35, %f40, %f40;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f42, %f40, %f41, %p35;
	selp.f32 	%f43, %f40, %f42, %p34;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r67, %f43;
	shfl.sync.bfly.b32	%r68, %r67, 1, 31, -1;
	mov.b32 	%f44, %r68;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p36, %f43, %f44;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p37, %f43, %f43;
	.loc	2 131 29                        // triton_helpers.py:131:29
	setp.eq.s32 	%p4, %r56, 0;
	shr.u32 	%r69, %r55, 3;
	and.b32  	%r70, %r69, 4;
	mov.u32 	%r71, global_smem;
	add.s32 	%r13, %r71, %r70;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r72, %r67, %r68, %p37;
	selp.b32 	%r14, %r67, %r72, %p36;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p4 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p5, %r55, 2;
	add.s32 	%r16, %r71, %r57;
	// begin inline asm
	@%p5 ld.shared.b32 %r15, [ %r16 + 0 ];
	// end inline asm
	mov.b32 	%f45, %r15;
	shfl.sync.bfly.b32	%r73, %r15, 1, 31, -1;
	mov.b32 	%f46, %r73;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p38, %f45, %f46;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p39, %f45, %f45;
	.loc	2 131 29                        // triton_helpers.py:131:29
	and.b32  	%r74, %r55, 1;
	setp.eq.b32 	%p40, %r74, 1;
	not.pred 	%p41, %p40;
	and.pred  	%p6, %p5, %p41;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r75, %r15, %r73, %p38;
	selp.b32 	%r18, %r15, %r75, %p39;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f47, [global_smem];
$L__tmp2:
	.loc	2 73 15                         // triton_helpers.py:73:15
	add.f32 	%f48, %f47, 0f00000000;
$L__tmp3:
	.loc	1 40 18                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:40:18
	mul.f32 	%f49, %f19, %f19;
$L__tmp4:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	3 256 15                        // standard.py:256:15
	fma.rn.f32 	%f50, %f18, %f18, %f49;
	fma.rn.f32 	%f51, %f20, %f20, %f50;
	fma.rn.f32 	%f52, %f21, %f21, %f51;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f52;
	shfl.sync.bfly.b32	%r77, %r76, 16, 31, -1;
	mov.b32 	%f53, %r77;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f54;
	shfl.sync.bfly.b32	%r79, %r78, 8, 31, -1;
	mov.b32 	%f55, %r79;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f56;
	shfl.sync.bfly.b32	%r81, %r80, 4, 31, -1;
	mov.b32 	%f57, %r81;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f58;
	shfl.sync.bfly.b32	%r83, %r82, 2, 31, -1;
	mov.b32 	%f59, %r83;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f60;
	shfl.sync.bfly.b32	%r85, %r84, 1, 31, -1;
	mov.b32 	%f61, %r85;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r20, %f62;
	// begin inline asm
	@%p4 st.shared.b32 [ %r13 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 ld.shared.b32 %r21, [ %r16 + 0 ];
	// end inline asm
	mov.b32 	%f63, %r21;
	shfl.sync.bfly.b32	%r86, %r21, 1, 31, -1;
	mov.b32 	%f64, %r86;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f65;
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f66, [global_smem];
$L__tmp5:
	.loc	2 73 15                         // triton_helpers.py:73:15
	add.f32 	%f67, %f66, 0f00000000;
$L__tmp6:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f68, %f5, %f6;
	add.f32 	%f69, %f68, %f7;
	add.f32 	%f70, %f69, %f8;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r87, %f70;
	shfl.sync.bfly.b32	%r88, %r87, 16, 31, -1;
	mov.b32 	%f71, %r88;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f72;
	shfl.sync.bfly.b32	%r90, %r89, 8, 31, -1;
	mov.b32 	%f73, %r90;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f74;
	shfl.sync.bfly.b32	%r92, %r91, 4, 31, -1;
	mov.b32 	%f75, %r92;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r93, %f76;
	shfl.sync.bfly.b32	%r94, %r93, 2, 31, -1;
	mov.b32 	%f77, %r94;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r95, %f78;
	shfl.sync.bfly.b32	%r96, %r95, 1, 31, -1;
	mov.b32 	%f79, %r96;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f80, %f78, %f79;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r26, %f80;
	// begin inline asm
	@%p4 st.shared.b32 [ %r13 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 ld.shared.b32 %r27, [ %r16 + 0 ];
	// end inline asm
	mov.b32 	%f81, %r27;
	shfl.sync.bfly.b32	%r97, %r27, 1, 31, -1;
	mov.b32 	%f82, %r97;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f83, %f81, %f82;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f83;
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f84, [global_smem];
$L__tmp7:
	.loc	2 73 15                         // triton_helpers.py:73:15
	add.f32 	%f85, %f84, 0f00000000;
$L__tmp8:
	.loc	1 45 19                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:45:19
	mul.f32 	%f86, %f1, %f9;
	mul.f32 	%f87, %f2, %f10;
	mul.f32 	%f88, %f3, %f11;
	mul.f32 	%f89, %f4, %f12;
	.loc	1 46 20                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:46:20
	mul.f32 	%f90, %f87, %f87;
$L__tmp9:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	3 256 15                        // standard.py:256:15
	fma.rn.f32 	%f91, %f86, %f86, %f90;
	fma.rn.f32 	%f92, %f88, %f88, %f91;
	fma.rn.f32 	%f93, %f89, %f89, %f92;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f93;
	shfl.sync.bfly.b32	%r99, %r98, 16, 31, -1;
	mov.b32 	%f94, %r99;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f95, %f93, %f94;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f95;
	shfl.sync.bfly.b32	%r101, %r100, 8, 31, -1;
	mov.b32 	%f96, %r101;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f97, %f95, %f96;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f97;
	shfl.sync.bfly.b32	%r103, %r102, 4, 31, -1;
	mov.b32 	%f98, %r103;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f99, %f97, %f98;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f99;
	shfl.sync.bfly.b32	%r105, %r104, 2, 31, -1;
	mov.b32 	%f100, %r105;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f101, %f99, %f100;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f101;
	shfl.sync.bfly.b32	%r107, %r106, 1, 31, -1;
	mov.b32 	%f102, %r107;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f103, %f101, %f102;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f103;
	// begin inline asm
	@%p4 st.shared.b32 [ %r13 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 ld.shared.b32 %r33, [ %r16 + 0 ];
	// end inline asm
	mov.b32 	%f104, %r33;
	shfl.sync.bfly.b32	%r108, %r33, 1, 31, -1;
	mov.b32 	%f105, %r108;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f106, %f104, %f105;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f106;
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r36;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f107, [global_smem];
$L__tmp10:
	.loc	2 73 15                         // triton_helpers.py:73:15
	add.f32 	%f108, %f107, 0f00000000;
$L__tmp11:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f109, %f9, %f10;
	add.f32 	%f110, %f109, %f11;
	add.f32 	%f111, %f110, %f12;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r109, %f111;
	shfl.sync.bfly.b32	%r110, %r109, 16, 31, -1;
	mov.b32 	%f112, %r110;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f113, %f111, %f112;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r111, %f113;
	shfl.sync.bfly.b32	%r112, %r111, 8, 31, -1;
	mov.b32 	%f114, %r112;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f115, %f113, %f114;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r113, %f115;
	shfl.sync.bfly.b32	%r114, %r113, 4, 31, -1;
	mov.b32 	%f116, %r114;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f117, %f115, %f116;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f117;
	shfl.sync.bfly.b32	%r116, %r115, 2, 31, -1;
	mov.b32 	%f118, %r116;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f119, %f117, %f118;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r117, %f119;
	shfl.sync.bfly.b32	%r118, %r117, 1, 31, -1;
	mov.b32 	%f120, %r118;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f121, %f119, %f120;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f121;
	// begin inline asm
	@%p4 st.shared.b32 [ %r13 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 ld.shared.b32 %r39, [ %r16 + 0 ];
	// end inline asm
	mov.b32 	%f122, %r39;
	shfl.sync.bfly.b32	%r119, %r39, 1, 31, -1;
	mov.b32 	%f123, %r119;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f124, %f122, %f123;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f124;
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f125, [global_smem];
$L__tmp12:
	.loc	2 73 15                         // triton_helpers.py:73:15
	add.f32 	%f126, %f125, 0f00000000;
$L__tmp13:
	.loc	1 52 20                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:52:20
	add.f32 	%f127, %f85, 0f3727C5AC;
	.loc	1 53 20                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:53:20
	mov.b32 	%r44, %f67;
	mov.b32 	%r45, %f127;
	// begin inline asm
	div.full.f32 %r43, %r44, %r45;
	// end inline asm
	mov.b32 	%f128, %r43;
	.loc	1 54 20                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:54:20
	add.f32 	%f129, %f126, 0f3727C5AC;
	.loc	1 55 20                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:55:20
	mov.b32 	%r47, %f108;
	mov.b32 	%r48, %f129;
	// begin inline asm
	div.full.f32 %r46, %r47, %r48;
	// end inline asm
	mov.b32 	%f130, %r46;
	.loc	1 56 20                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:56:20
	add.f32 	%f131, %f128, %f130;
	.loc	1 57 25                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:57:25
	add.s64 	%rd4, %rd10, %rd11;
	.loc	1 57 64                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:57:64
	mov.b32 	%r49, %f86;
	mov.b32 	%r50, %f87;
	mov.b32 	%r51, %f88;
	mov.b32 	%r52, %f89;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd4 + 0 ], { %r49, %r50, %r51, %r52 };
	// end inline asm
	.loc	1 58 4                          // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:58:4
	bar.sync 	0;
	.loc	1 59 63                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:59:63
	and.b32  	%r120, %r55, 63;
	setp.eq.s32 	%p20, %r120, 0;
	mov.b32 	%r53, %f131;
	// begin inline asm
	@%p20 st.global.b32 [ %rd5 + 0 ], { %r53 };
	// end inline asm
	.loc	1 60 59                         // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:60:59
	mov.b32 	%r54, %f48;
	// begin inline asm
	@%p20 st.global.b32 [ %rd6 + 0 ], { %r54 };
	// end inline asm
	.loc	1 60 4                          // cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py:60:4
	ret;
$L__tmp14:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/dr/cdrzkxsocyqv6lqd535w53t2bxqof3tcg7e772l3apbg3mgeytdk.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 412                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x195 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 114
.b8 122
.b8 107
.b8 120
.b8 115
.b8 111
.b8 99
.b8 121
.b8 113
.b8 118
.b8 54
.b8 108
.b8 113
.b8 100
.b8 53
.b8 51
.b8 53
.b8 119
.b8 53
.b8 51
.b8 116
.b8 50
.b8 98
.b8 120
.b8 113
.b8 111
.b8 102
.b8 51
.b8 116
.b8 99
.b8 103
.b8 55
.b8 101
.b8 55
.b8 55
.b8 50
.b8 108
.b8 51
.b8 97
.b8 112
.b8 98
.b8 103
.b8 51
.b8 109
.b8 103
.b8 101
.b8 121
.b8 116
.b8 100
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x36 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 98
.b8 115
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 97
.b8 120
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x99:0x106 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xae:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 70                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xde:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x10e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp6                           // DW_AT_low_pc
.b64 $L__tmp7                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x126:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x13e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp9                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x156:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp10                          // DW_AT_low_pc
.b64 $L__tmp11                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x16e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp11                          // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x186:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp12                          // DW_AT_low_pc
.b64 $L__tmp13                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
