; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_16(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %12 = sdiv i32 %.frozen, 12, !dbg !14
  %13 = mul i32 %12, 12, !dbg !15
  %.decomposed = sub i32 %.frozen, %13, !dbg !15
  %14 = srem i32 %11, 12, !dbg !15
  %15 = srem i32 %12, 256, !dbg !16
  %16 = sdiv i32 %10, 3072, !dbg !17
  %17 = icmp slt i32 %.decomposed, 4, !dbg !18
  %18 = shl nsw i32 %.decomposed, 8, !dbg !19
  %19 = shl nsw i32 %14, 8, !dbg !19
  %20 = shl nsw i32 %16, 11, !dbg !20
  %21 = add nsw i32 %20, %15, !dbg !21
  %22 = add nsw i32 %21, %18, !dbg !22
  %23 = add nsw i32 %20, %19, !dbg !21
  %24 = add nsw i32 %23, %15, !dbg !22
  %25 = sext i32 %22 to i64, !dbg !23
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !23
  %27 = sext i32 %24 to i64, !dbg !23
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !23
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %17, i32 0, i1 %17) #1, !dbg !24
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %17, i32 0, i1 %17) #1, !dbg !24
  %31 = and i32 %.decomposed, -4, !dbg !25
  %32 = icmp eq i32 %31, 4, !dbg !25
  %33 = add nsw i32 %15, 1024, !dbg !26
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %32, i32 0, i1 %32) #1, !dbg !27
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %32, i32 0, i1 %32) #1, !dbg !27
  %36 = icmp sgt i32 %.decomposed, 7, !dbg !28
  %37 = add nsw i32 %.decomposed, -8, !dbg !29
  %38 = shl nsw i32 %37, 8, !dbg !30
  %39 = add nsw i32 %33, %20, !dbg !31
  %40 = add nsw i32 %39, %38, !dbg !32
  %41 = add nsw i32 %23, -2048, !dbg !31
  %42 = add nsw i32 %41, %33, !dbg !32
  %43 = sext i32 %40 to i64, !dbg !33
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !33
  %45 = sext i32 %42 to i64, !dbg !33
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !33
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %44, i1 %36, i32 0, i1 %36) #1, !dbg !34
  %48 = bitcast i32 %47 to float, !dbg !34
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %36, i32 0, i1 %36) #1, !dbg !34
  %50 = bitcast i32 %49 to float, !dbg !34
  %51 = shl nsw i32 %12, 2, !dbg !35
  %52 = add nsw i32 %51, %37, !dbg !36
  %53 = sext i32 %52 to i64, !dbg !37
  %54 = getelementptr float, ptr addrspace(1) %1, i64 %53, !dbg !37
  %55 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %54, i1 %36, i32 0, i1 %36, i32 0, i1 %36) #1, !dbg !38
  %56 = extractvalue { i32, i32 } %55, 0, !dbg !38
  %57 = extractvalue { i32, i32 } %55, 1, !dbg !38
  %58 = bitcast i32 %56 to float, !dbg !38
  %59 = bitcast i32 %57 to float, !dbg !38
  %60 = fsub float 0.000000e+00, %58, !dbg !39
  %61 = fsub float 0.000000e+00, %59, !dbg !39
  %62 = fmul float %60, 0x3FF7154760000000, !dbg !43
  %63 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %62) #1, !dbg !43
  %64 = fmul float %61, 0x3FF7154760000000, !dbg !43
  %65 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %64) #1, !dbg !43
  %66 = fadd float %63, 1.000000e+00, !dbg !44
  %67 = fadd float %65, 1.000000e+00, !dbg !44
  %68 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %66) #1, !dbg !45
  %69 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %67) #1, !dbg !45
  %70 = fmul float %68, %58, !dbg !46
  %71 = fmul float %69, %59, !dbg !46
  %72 = fadd float %70, %48, !dbg !47
  %73 = fadd float %71, %50, !dbg !47
  %74 = sext i32 %10 to i64, !dbg !48
  %75 = getelementptr float, ptr addrspace(1) %2, i64 %74, !dbg !48
  %76 = bitcast float %72 to i32, !dbg !49
  %77 = select i1 %36, i32 %76, i32 0, !dbg !50
  %78 = select i1 %32, i32 %34, i32 %77, !dbg !51
  %79 = select i1 %17, i32 %29, i32 %78, !dbg !52
  %80 = bitcast float %73 to i32, !dbg !49
  %81 = select i1 %36, i32 %80, i32 0, !dbg !50
  %82 = select i1 %32, i32 %35, i32 %81, !dbg !51
  %83 = select i1 %17, i32 %30, i32 %82, !dbg !52
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %79, i32 %83, ptr addrspace(1) %75, i1 true) #1, !dbg !49
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py", directory: "inductor_cache/f2")
!4 = !{ptr @triton_poi_fused_cat_16, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_16, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_16", linkageName: "triton_poi_fused_cat_16", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 33, column: 18, scope: !7)
!19 = !DILocation(line: 34, column: 40, scope: !7)
!20 = !DILocation(line: 34, column: 51, scope: !7)
!21 = !DILocation(line: 34, column: 35, scope: !7)
!22 = !DILocation(line: 34, column: 46, scope: !7)
!23 = !DILocation(line: 34, column: 30, scope: !7)
!24 = !DILocation(line: 34, column: 56, scope: !7)
!25 = !DILocation(line: 38, column: 18, scope: !7)
!26 = !DILocation(line: 39, column: 38, scope: !7)
!27 = !DILocation(line: 39, column: 71, scope: !7)
!28 = !DILocation(line: 40, column: 20, scope: !7)
!29 = !DILocation(line: 43, column: 55, scope: !7)
!30 = !DILocation(line: 43, column: 48, scope: !7)
!31 = !DILocation(line: 43, column: 43, scope: !7)
!32 = !DILocation(line: 43, column: 61, scope: !7)
!33 = !DILocation(line: 43, column: 31, scope: !7)
!34 = !DILocation(line: 43, column: 71, scope: !7)
!35 = !DILocation(line: 44, column: 33, scope: !7)
!36 = !DILocation(line: 44, column: 39, scope: !7)
!37 = !DILocation(line: 44, column: 31, scope: !7)
!38 = !DILocation(line: 44, column: 52, scope: !7)
!39 = !DILocation(line: 47, column: 30, scope: !40, inlinedAt: !42)
!40 = distinct !DILexicalBlockFile(scope: !7, file: !41, discriminator: 0)
!41 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!42 = !DILocation(line: 45, column: 23, scope: !7)
!43 = !DILocation(line: 47, column: 29, scope: !40, inlinedAt: !42)
!44 = !DILocation(line: 47, column: 20, scope: !40, inlinedAt: !42)
!45 = !DILocation(line: 47, column: 16, scope: !40, inlinedAt: !42)
!46 = !DILocation(line: 46, column: 20, scope: !7)
!47 = !DILocation(line: 47, column: 20, scope: !7)
!48 = !DILocation(line: 52, column: 25, scope: !7)
!49 = !DILocation(line: 52, column: 37, scope: !7)
!50 = !DILocation(line: 49, column: 35, scope: !7)
!51 = !DILocation(line: 50, column: 34, scope: !7)
!52 = !DILocation(line: 51, column: 33, scope: !7)
!53 = !DILocation(line: 52, column: 4, scope: !7)
