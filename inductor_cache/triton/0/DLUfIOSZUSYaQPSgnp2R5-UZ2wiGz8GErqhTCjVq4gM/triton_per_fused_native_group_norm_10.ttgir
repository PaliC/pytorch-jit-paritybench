#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":19:0)
#loc1 = loc(unknown)
#loc24 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":39:24)
#loc30 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":46:26)
#loc40 = loc(callsite(#loc1 at #loc24))
#loc43 = loc(callsite(#loc1 at #loc30))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_native_group_norm_10(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.280000e+02> : tensor<1x1xf32, #blocked> loc(#loc1)
    %c96_i32 = arith.constant 96 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c6144_i32 = arith.constant 6144 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c786432_i32 = arith.constant 786432 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<4096> : tensor<1x128xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<192> : tensor<1x128xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc3)
    %2 = tt.expand_dims %1 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc3)
    %3 = arith.remsi %0, %c96_i32 : i32 loc(#loc4)
    %4 = arith.divsi %0, %c96_i32 : i32 loc(#loc5)
    %5 = arith.remsi %4, %c64_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c6144_i32 : i32 loc(#loc7)
    %7 = arith.muli %3, %c2_i32 : i32 loc(#loc8)
    %8 = arith.muli %5, %c128_i32 : i32 loc(#loc9)
    %9 = tt.splat %8 : i32 -> tensor<1x128xi32, #blocked> loc(#loc10)
    %10 = arith.addi %2, %9 : tensor<1x128xi32, #blocked> loc(#loc10)
    %11 = arith.remsi %10, %cst_0 : tensor<1x128xi32, #blocked> loc(#loc11)
    %12 = arith.muli %11, %cst_1 : tensor<1x128xi32, #blocked> loc(#loc12)
    %13 = tt.splat %7 : i32 -> tensor<1x128xi32, #blocked> loc(#loc13)
    %14 = arith.addi %13, %12 : tensor<1x128xi32, #blocked> loc(#loc13)
    %15 = arith.muli %6, %c786432_i32 : i32 loc(#loc14)
    %16 = tt.splat %15 : i32 -> tensor<1x128xi32, #blocked> loc(#loc15)
    %17 = arith.addi %14, %16 : tensor<1x128xi32, #blocked> loc(#loc15)
    %18 = arith.divsi %10, %cst_0 : tensor<1x128xi32, #blocked> loc(#loc16)
    %19 = arith.addi %17, %18 : tensor<1x128xi32, #blocked> loc(#loc17)
    %20 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc18)
    %21 = tt.addptr %20, %19 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc18)
    %22 = tt.load %21 evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc19)
    %23 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc20)
    %24 = tt.addptr %23, %19 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc20)
    %25 = tt.load %24 evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc21)
    %26 = arith.addf %22, %25 : tensor<1x128xf32, #blocked> loc(#loc22)
    %27 = "tt.reduce"(%26) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc24)), %arg8: f32 loc(callsite(#loc1 at #loc24))):
      %41 = arith.addf %arg7, %arg8 : f32 loc(#loc44)
      tt.reduce.return %41 : f32 loc(#loc39)
    }) : (tensor<1x128xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc39)
    %28 = tt.expand_dims %27 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc26)
    %29 = arith.divf %28, %cst : tensor<1x1xf32, #blocked> loc(#loc27)
    %30 = tt.broadcast %29 : tensor<1x1xf32, #blocked> -> tensor<1x128xf32, #blocked> loc(#loc28)
    %31 = arith.subf %26, %30 : tensor<1x128xf32, #blocked> loc(#loc28)
    %32 = arith.mulf %31, %31 : tensor<1x128xf32, #blocked> loc(#loc29)
    %33 = "tt.reduce"(%32) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc30)), %arg8: f32 loc(callsite(#loc1 at #loc30))):
      %41 = arith.addf %arg7, %arg8 : f32 loc(#loc45)
      tt.reduce.return %41 : f32 loc(#loc42)
    }) : (tensor<1x128xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc42)
    %34 = tt.expand_dims %33 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc31)
    %35 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc32)
    %36 = tt.splat %35 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc33)
    tt.store %36, %29 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc33)
    %37 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc34)
    %38 = tt.splat %37 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc35)
    tt.store %38, %34 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc35)
    %39 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc36)
    %40 = tt.splat %39 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc37)
    tt.store %40, %cst : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc37)
    tt.return loc(#loc38)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":23:28)
#loc3 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":26:34)
#loc4 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":30:19)
#loc5 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":31:21)
#loc6 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":31:27)
#loc7 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":32:19)
#loc8 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":34:32)
#loc9 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":34:53)
#loc10 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":34:49)
#loc11 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":34:59)
#loc12 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":34:43)
#loc13 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":34:37)
#loc14 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":34:75)
#loc15 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":34:68)
#loc16 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":34:98)
#loc17 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":34:81)
#loc18 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":34:30)
#loc19 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":34:106)
#loc20 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":35:30)
#loc21 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":35:106)
#loc22 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":36:18)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc26 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":39:27)
#loc27 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":42:19)
#loc28 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":43:19)
#loc29 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":44:20)
#loc31 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":46:29)
#loc32 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":47:25)
#loc33 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":47:37)
#loc34 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":48:25)
#loc35 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":48:37)
#loc36 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":49:25)
#loc37 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":49:36)
#loc38 = loc("inductor_cache/lw/clwpijrbnkan7stqjkwdgmoctxhwe5sxj667uaug4em6spziegp6.py":49:4)
#loc39 = loc(callsite(#loc23 at #loc24))
#loc41 = loc(callsite(#loc25 at #loc23))
#loc42 = loc(callsite(#loc23 at #loc30))
#loc44 = loc(callsite(#loc41 at #loc24))
#loc45 = loc(callsite(#loc41 at #loc30))
