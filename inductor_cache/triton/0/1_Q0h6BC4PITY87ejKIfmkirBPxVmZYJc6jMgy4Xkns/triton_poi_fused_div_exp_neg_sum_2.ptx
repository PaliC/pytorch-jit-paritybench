//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_div_exp_neg_sum_2 // -- Begin function triton_poi_fused_div_exp_neg_sum_2
                                        // @triton_poi_fused_div_exp_neg_sum_2
.visible .entry triton_poi_fused_div_exp_neg_sum_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_exp_neg_sum_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_exp_neg_sum_2_param_1,
	.param .u32 triton_poi_fused_div_exp_neg_sum_2_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<27>;
	.reg .f32 	%f<30>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_div_exp_neg_sum_2_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_div_exp_neg_sum_2_param_1];
$L__tmp0:
	.loc	1 21 28                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:21:33
	shl.b32 	%r11, %r1, 7;
	.loc	1 22 36                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:22:36
	mov.u32 	%r12, %tid.x;
	and.b32  	%r13, %r12, 127;
	.loc	1 22 23                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:22:23
	or.b32  	%r14, %r11, %r13;
	.loc	1 23 21                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:23:21
	setp.lt.s32 	%p1, %r14, 256;
	.loc	1 25 19                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:25:19
	bfe.s32 	%r15, %r1, 24, 1;
	shr.u32 	%r16, %r15, 28;
	add.s32 	%r17, %r14, %r16;
	and.b32  	%r18, %r17, -16;
	sub.s32 	%r19, %r14, %r18;
	.loc	1 26 19                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:26:19
	shr.u32 	%r20, %r15, 26;
	add.s32 	%r21, %r14, %r20;
	.loc	1 27 30                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:27:30
	mul.wide.s32 	%rd9, %r14, 4;
	add.s64 	%rd1, %rd7, %rd9;
	.loc	1 27 35                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:27:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r2;
	.loc	1 28 38                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:28:38
	and.b32  	%r22, %r21, -64;
	.loc	1 28 35                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:28:35
	add.s32 	%r23, %r22, %r19;
	.loc	1 28 30                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:28:30
	mul.wide.s32 	%rd10, %r23, 4;
	add.s64 	%rd2, %rd7, %rd10;
	.loc	1 28 43                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:28:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r3;
	.loc	1 29 40                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:29:40
	add.s32 	%r24, %r23, 16;
	.loc	1 29 30                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:29:30
	mul.wide.s32 	%rd11, %r24, 4;
	add.s64 	%rd3, %rd7, %rd11;
	.loc	1 29 48                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:29:48
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r4;
	.loc	1 30 41                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:30:41
	add.s32 	%r25, %r23, 32;
	.loc	1 30 31                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:30:31
	mul.wide.s32 	%rd12, %r25, 4;
	add.s64 	%rd4, %rd7, %rd12;
	.loc	1 30 49                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:30:49
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r5;
	.loc	1 31 41                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:31:41
	add.s32 	%r26, %r23, 48;
	.loc	1 31 31                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:31:31
	mul.wide.s32 	%rd13, %r26, 4;
	add.s64 	%rd5, %rd7, %rd13;
	.loc	1 31 49                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:31:49
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r6;
	mov.f32 	%f16, 0f00000000;
	.loc	1 32 12                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:32:12
	sub.f32 	%f17, %f16, %f11;
	.loc	1 34 18                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:34:18
	mul.f32 	%f18, %f17, 0f41200000;
	.loc	1 35 23                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:35:23
	mul.f32 	%f2, %f18, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	1 36 12                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:36:12
	sub.f32 	%f19, %f16, %f12;
	.loc	1 37 18                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:37:18
	mul.f32 	%f20, %f19, 0f41200000;
	.loc	1 38 23                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:38:23
	mul.f32 	%f4, %f20, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	1 39 13                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:39:13
	sub.f32 	%f21, %f16, %f13;
	.loc	1 40 20                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:40:20
	mul.f32 	%f22, %f21, 0f41200000;
	.loc	1 41 24                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:41:24
	mul.f32 	%f6, %f22, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	.loc	1 42 19                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:42:19
	add.f32 	%f23, %f3, %f5;
	.loc	1 43 13                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:43:13
	sub.f32 	%f24, %f16, %f14;
	.loc	1 44 20                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:44:20
	mul.f32 	%f25, %f24, 0f41200000;
	.loc	1 45 24                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:45:24
	mul.f32 	%f8, %f25, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	1 46 20                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:46:20
	add.f32 	%f26, %f23, %f7;
	.loc	1 47 13                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:47:13
	sub.f32 	%f27, %f16, %f15;
	.loc	1 48 20                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:48:20
	mul.f32 	%f28, %f27, 0f41200000;
	.loc	1 49 24                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:49:24
	mul.f32 	%f10, %f28, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	.loc	1 50 20                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:50:20
	add.f32 	%f29, %f26, %f9;
	.loc	1 51 19                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:51:19
	mov.b32 	%r9, %f29;
	mov.b32 	%r8, %f1;
	// begin inline asm
	div.full.f32 %r10, %r8, %r9;
	// end inline asm
	.loc	1 52 25                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:52:25
	add.s64 	%rd6, %rd8, %rd9;
	.loc	1 52 37                         // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:52:37
	// begin inline asm
	@%p1 st.global.b32 [ %rd6 + 0 ], { %r10 };
	// end inline asm
	.loc	1 52 4                          // cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py:52:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/m2/cm2vwwblc5k43xikfawrr6sh5jw4x2aemqoiek5nfbqpccfblgz2.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 50
.b8 118
.b8 119
.b8 119
.b8 98
.b8 108
.b8 99
.b8 53
.b8 107
.b8 52
.b8 51
.b8 120
.b8 105
.b8 107
.b8 102
.b8 97
.b8 119
.b8 114
.b8 114
.b8 54
.b8 115
.b8 104
.b8 53
.b8 106
.b8 119
.b8 52
.b8 120
.b8 50
.b8 97
.b8 101
.b8 109
.b8 113
.b8 111
.b8 105
.b8 101
.b8 107
.b8 53
.b8 110
.b8 102
.b8 98
.b8 113
.b8 112
.b8 99
.b8 99
.b8 102
.b8 98
.b8 108
.b8 103
.b8 122
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 50
.b8 0
	}
	.section	.debug_macinfo	{	}
