#loc = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":19:0)
#loc1 = loc(unknown)
#loc17 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":34:24)
#loc24 = loc(callsite(#loc1 at #loc17))
module {
  tt.func public @triton_per_fused_mv_12(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":19:0), %arg3: i32 loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<8x8xf32> loc(#loc1)
    %cst_0 = arith.constant dense<5> : tensor<8x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<5> : tensor<1x8xi32> loc(#loc1)
    %cst_2 = arith.constant dense<128> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_2 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.expand_dims %2 {axis = 0 : i32} : tensor<8xi32> -> tensor<1x8xi32> loc(#loc8)
    %8 = arith.cmpi slt, %7, %cst_1 : tensor<1x8xi32> loc(#loc9)
    %9 = arith.muli %5, %cst_0 : tensor<8x1xi32> loc(#loc10)
    %10 = tt.broadcast %7 : tensor<1x8xi32> -> tensor<8x8xi32> loc(#loc11)
    %11 = tt.broadcast %9 : tensor<8x1xi32> -> tensor<8x8xi32> loc(#loc11)
    %12 = arith.addi %10, %11 : tensor<8x8xi32> loc(#loc11)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x8x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %13, %12 : tensor<8x8x!tt.ptr<f32>>, tensor<8x8xi32> loc(#loc12)
    %15 = tt.broadcast %8 : tensor<1x8xi1> -> tensor<8x8xi1> loc(#loc13)
    %16 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x8xi1> loc(#loc13)
    %17 = arith.andi %15, %16 : tensor<8x8xi1> loc(#loc13)
    %18 = tt.load %14, %17, %cst : tensor<8x8x!tt.ptr<f32>> loc(#loc14)
    %19 = arith.select %17, %18, %cst : tensor<8x8xi1>, tensor<8x8xf32> loc(#loc15)
    %20 = "tt.reduce"(%19) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc17)), %arg5: f32 loc(callsite(#loc1 at #loc17))):
      %24 = arith.addf %arg4, %arg5 : f32 loc(#loc26)
      tt.reduce.return %24 : f32 loc(#loc23)
    }) : (tensor<8x8xf32>) -> tensor<8xf32> loc(#loc23)
    %21 = tt.expand_dims %20 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc19)
    %22 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc20)
    %23 = tt.addptr %22, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc20)
    tt.store %23, %21, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc21)
    tt.return loc(#loc22)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":23:28)
#loc3 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":23:33)
#loc4 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":24:36)
#loc5 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":24:44)
#loc6 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":24:23)
#loc7 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":25:21)
#loc8 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":26:34)
#loc9 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":28:21)
#loc10 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":31:37)
#loc11 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":31:35)
#loc12 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":31:30)
#loc13 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":31:50)
#loc14 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":31:42)
#loc15 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":33:41)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc19 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":34:27)
#loc20 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":35:25)
#loc21 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":35:36)
#loc22 = loc("inductor_cache/e2/ce2euefcyumzufqkqdcvk2lt5n5fbgmxnurj63ybo6lyrwa755kh.py":35:4)
#loc23 = loc(callsite(#loc16 at #loc17))
#loc25 = loc(callsite(#loc18 at #loc16))
#loc26 = loc(callsite(#loc25 at #loc17))
