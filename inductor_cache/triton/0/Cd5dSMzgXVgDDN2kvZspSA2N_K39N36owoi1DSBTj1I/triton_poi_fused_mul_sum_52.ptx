//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_mul_sum_52 // -- Begin function triton_poi_fused_mul_sum_52
                                        // @triton_poi_fused_mul_sum_52
.visible .entry triton_poi_fused_mul_sum_52(
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_sum_52_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_sum_52_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_sum_52_param_2,
	.param .u32 triton_poi_fused_mul_sum_52_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<27>;
	.reg .f32 	%f<13>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_mul_sum_52_param_0];
	ld.param.u64 	%rd2, [triton_poi_fused_mul_sum_52_param_1];
$L__tmp0:
	.loc	1 21 28                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:21:33
	shl.b32 	%r11, %r1, 7;
	ld.param.u64 	%rd11, [triton_poi_fused_mul_sum_52_param_2];
	.loc	1 22 36                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:22:36
	mov.u32 	%r12, %tid.x;
	and.b32  	%r13, %r12, 127;
	.loc	1 22 23                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:22:23
	or.b32  	%r14, %r11, %r13;
	.loc	1 25 19                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:25:19
	shr.s32 	%r16, %r14, 31;
	shr.u32 	%r17, %r16, 20;
	add.s32 	%r18, %r14, %r17;
	.loc	1 24 19                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:24:19
	and.b32  	%r19, %r18, -4096;
	sub.s32 	%r20, %r14, %r19;
	.loc	1 27 41                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:27:41
	shl.b32 	%r21, %r18, 2;
	and.b32  	%r22, %r21, -16384;
	.loc	1 27 35                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:27:35
	add.s32 	%r23, %r22, %r20;
	.loc	1 27 30                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:27:30
	mul.wide.s32 	%rd12, %r23, 4;
	add.s64 	%rd1, %rd10, %rd12;
	mov.pred 	%p1, -1;
	.loc	1 27 46                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:27:46
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 28 19                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:28:19
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 30 42                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:30:42
	add.s32 	%r24, %r23, 4096;
	.loc	1 30 30                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:30:30
	mul.wide.s32 	%rd13, %r24, 4;
	add.s64 	%rd3, %rd10, %rd13;
	.loc	1 30 53                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:30:53
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 31 30                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:31:30
	add.s64 	%rd4, %rd2, 4;
	.loc	1 31 19                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:31:19
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 42                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:33:42
	add.s32 	%r25, %r23, 8192;
	.loc	1 33 30                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:33:30
	mul.wide.s32 	%rd14, %r25, 4;
	add.s64 	%rd5, %rd10, %rd14;
	.loc	1 33 53                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:33:53
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 31                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:34:31
	add.s64 	%rd6, %rd2, 8;
	.loc	1 34 20                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:34:20
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 44                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:36:44
	add.s32 	%r26, %r23, 12288;
	.loc	1 36 31                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:36:31
	mul.wide.s32 	%rd15, %r26, 4;
	add.s64 	%rd7, %rd10, %rd15;
	.loc	1 36 55                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:36:55
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 37 31                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:37:31
	add.s64 	%rd8, %rd2, 12;
	.loc	1 37 20                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:37:20
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 27 46                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:27:46
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r4;
	.loc	1 28 19                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:28:19
	mov.b32 	%f3, %r3;
	mov.b32 	%f4, %r5;
	.loc	1 39 18                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:39:18
	mul.f32 	%f5, %f2, %f4;
	.loc	1 41 18                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:41:18
	fma.rn.f32 	%f6, %f1, %f3, %f5;
	.loc	1 33 53                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:33:53
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r6;
	.loc	1 34 20                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:34:20
	mov.b32 	%f9, %r9;
	mov.b32 	%f10, %r7;
	.loc	1 43 19                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:43:19
	fma.rn.f32 	%f11, %f8, %f10, %f6;
	.loc	1 45 20                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:45:20
	fma.rn.f32 	%f12, %f7, %f9, %f11;
	.loc	1 46 25                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:46:25
	mul.wide.s32 	%rd16, %r14, 4;
	add.s64 	%rd9, %rd11, %rd16;
	.loc	1 46 37                         // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:46:37
	mov.b32 	%r10, %f12;
	// begin inline asm
	@%p1 st.global.b32 [ %rd9 + 0 ], { %r10 };
	// end inline asm
	.loc	1 46 4                          // c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py:46:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/72/c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 50
.b8 114
.b8 117
.b8 106
.b8 112
.b8 53
.b8 122
.b8 104
.b8 100
.b8 120
.b8 106
.b8 100
.b8 113
.b8 113
.b8 114
.b8 52
.b8 50
.b8 103
.b8 105
.b8 121
.b8 116
.b8 99
.b8 114
.b8 117
.b8 115
.b8 122
.b8 112
.b8 97
.b8 101
.b8 53
.b8 50
.b8 120
.b8 104
.b8 118
.b8 55
.b8 51
.b8 52
.b8 121
.b8 115
.b8 110
.b8 110
.b8 118
.b8 102
.b8 113
.b8 97
.b8 52
.b8 111
.b8 106
.b8 111
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 50
.b8 0
	}
	.section	.debug_macinfo	{	}
