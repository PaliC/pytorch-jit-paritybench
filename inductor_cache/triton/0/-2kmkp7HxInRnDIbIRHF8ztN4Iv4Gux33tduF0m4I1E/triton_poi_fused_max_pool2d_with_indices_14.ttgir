#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_14(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<5> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<6> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<7> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<8> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<0xFF800000> : tensor<512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_9 = arith.constant dense<50176> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<1792> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<7> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<256> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<2> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<0> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<14> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<512> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<7168> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_18 = arith.constant dense<1> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_19 = arith.constant dense<3584> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_20 = arith.constant dense<3840> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_21 = arith.constant dense<4096> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_22 = arith.constant dense<7424> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_23 = arith.constant dense<7680> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_9 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_10 : tensor<512xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_11 : tensor<512xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_12 : tensor<512xi32, #blocked> loc(#loc9)
    %9 = arith.remsi %8, %cst_11 : tensor<512xi32, #blocked> loc(#loc10)
    %10 = arith.remsi %4, %cst_12 : tensor<512xi32, #blocked> loc(#loc11)
    %11 = arith.muli %7, %cst_13 : tensor<512xi32, #blocked> loc(#loc12)
    %12 = arith.extsi %11 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc13)
    %13 = arith.cmpi sge, %12, %cst_14 : tensor<512xi64, #blocked> loc(#loc13)
    %14 = arith.cmpi slt, %12, %cst_15 : tensor<512xi64, #blocked> loc(#loc14)
    %15 = arith.andi %13, %14 : tensor<512xi1, #blocked> loc(#loc15)
    %16 = arith.muli %9, %cst_13 : tensor<512xi32, #blocked> loc(#loc16)
    %17 = arith.extsi %16 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc17)
    %18 = arith.cmpi sge, %17, %cst_14 : tensor<512xi64, #blocked> loc(#loc17)
    %19 = arith.cmpi slt, %17, %cst_15 : tensor<512xi64, #blocked> loc(#loc18)
    %20 = arith.andi %18, %19 : tensor<512xi1, #blocked> loc(#loc19)
    %21 = arith.andi %15, %20 : tensor<512xi1, #blocked> loc(#loc20)
    %22 = arith.muli %9, %cst_16 : tensor<512xi32, #blocked> loc(#loc21)
    %23 = arith.addi %10, %22 : tensor<512xi32, #blocked> loc(#loc22)
    %24 = arith.muli %6, %cst_17 : tensor<512xi32, #blocked> loc(#loc23)
    %25 = arith.addi %23, %24 : tensor<512xi32, #blocked> loc(#loc24)
    %26 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc25)
    %27 = tt.addptr %26, %25 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc25)
    %28 = arith.andi %21, %5 : tensor<512xi1, #blocked> loc(#loc26)
    %29 = tt.load %27, %28, %cst_8 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc27)
    %30 = arith.addi %16, %cst_18 : tensor<512xi32, #blocked> loc(#loc28)
    %31 = arith.extsi %30 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc29)
    %32 = arith.cmpi sge, %31, %cst_14 : tensor<512xi64, #blocked> loc(#loc29)
    %33 = arith.cmpi slt, %31, %cst_15 : tensor<512xi64, #blocked> loc(#loc30)
    %34 = arith.andi %32, %33 : tensor<512xi1, #blocked> loc(#loc31)
    %35 = arith.andi %15, %34 : tensor<512xi1, #blocked> loc(#loc32)
    %36 = arith.addi %10, %cst_12 : tensor<512xi32, #blocked> loc(#loc33)
    %37 = arith.addi %36, %22 : tensor<512xi32, #blocked> loc(#loc34)
    %38 = arith.addi %37, %24 : tensor<512xi32, #blocked> loc(#loc35)
    %39 = tt.addptr %26, %38 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc36)
    %40 = arith.andi %35, %5 : tensor<512xi1, #blocked> loc(#loc37)
    %41 = tt.load %39, %40, %cst_8 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc38)
    %42 = arith.cmpf ogt, %41, %29 : tensor<512xf32, #blocked> loc(#loc125)
    %43 = arith.cmpf une, %41, %41 : tensor<512xf32, #blocked> loc(#loc126)
    %44 = arith.ori %42, %43 : tensor<512xi1, #blocked> loc(#loc127)
    %45 = arith.select %44, %41, %29 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc128)
    %46 = arith.addi %16, %cst_13 : tensor<512xi32, #blocked> loc(#loc44)
    %47 = arith.extsi %46 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc45)
    %48 = arith.cmpi sge, %47, %cst_14 : tensor<512xi64, #blocked> loc(#loc45)
    %49 = arith.cmpi slt, %47, %cst_15 : tensor<512xi64, #blocked> loc(#loc46)
    %50 = arith.andi %48, %49 : tensor<512xi1, #blocked> loc(#loc47)
    %51 = arith.andi %15, %50 : tensor<512xi1, #blocked> loc(#loc48)
    %52 = arith.addi %10, %cst_16 : tensor<512xi32, #blocked> loc(#loc49)
    %53 = arith.addi %52, %22 : tensor<512xi32, #blocked> loc(#loc50)
    %54 = arith.addi %53, %24 : tensor<512xi32, #blocked> loc(#loc51)
    %55 = tt.addptr %26, %54 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc52)
    %56 = arith.andi %51, %5 : tensor<512xi1, #blocked> loc(#loc53)
    %57 = tt.load %55, %56, %cst_8 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc54)
    %58 = arith.cmpf ogt, %57, %45 : tensor<512xf32, #blocked> loc(#loc129)
    %59 = arith.cmpf une, %57, %57 : tensor<512xf32, #blocked> loc(#loc130)
    %60 = arith.ori %58, %59 : tensor<512xi1, #blocked> loc(#loc131)
    %61 = arith.select %60, %57, %45 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc132)
    %62 = arith.addi %11, %cst_18 : tensor<512xi32, #blocked> loc(#loc56)
    %63 = arith.extsi %62 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc57)
    %64 = arith.cmpi sge, %63, %cst_14 : tensor<512xi64, #blocked> loc(#loc57)
    %65 = arith.cmpi slt, %63, %cst_15 : tensor<512xi64, #blocked> loc(#loc58)
    %66 = arith.andi %64, %65 : tensor<512xi1, #blocked> loc(#loc59)
    %67 = arith.andi %66, %20 : tensor<512xi1, #blocked> loc(#loc60)
    %68 = arith.addi %10, %cst_19 : tensor<512xi32, #blocked> loc(#loc61)
    %69 = arith.addi %68, %22 : tensor<512xi32, #blocked> loc(#loc62)
    %70 = arith.addi %69, %24 : tensor<512xi32, #blocked> loc(#loc63)
    %71 = tt.addptr %26, %70 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc64)
    %72 = arith.andi %67, %5 : tensor<512xi1, #blocked> loc(#loc65)
    %73 = tt.load %71, %72, %cst_8 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc66)
    %74 = arith.cmpf ogt, %73, %61 : tensor<512xf32, #blocked> loc(#loc133)
    %75 = arith.cmpf une, %73, %73 : tensor<512xf32, #blocked> loc(#loc134)
    %76 = arith.ori %74, %75 : tensor<512xi1, #blocked> loc(#loc135)
    %77 = arith.select %76, %73, %61 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc136)
    %78 = arith.andi %66, %34 : tensor<512xi1, #blocked> loc(#loc68)
    %79 = arith.addi %10, %cst_20 : tensor<512xi32, #blocked> loc(#loc69)
    %80 = arith.addi %79, %22 : tensor<512xi32, #blocked> loc(#loc70)
    %81 = arith.addi %80, %24 : tensor<512xi32, #blocked> loc(#loc71)
    %82 = tt.addptr %26, %81 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc72)
    %83 = arith.andi %78, %5 : tensor<512xi1, #blocked> loc(#loc73)
    %84 = tt.load %82, %83, %cst_8 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc74)
    %85 = arith.cmpf ogt, %84, %77 : tensor<512xf32, #blocked> loc(#loc137)
    %86 = arith.cmpf une, %84, %84 : tensor<512xf32, #blocked> loc(#loc138)
    %87 = arith.ori %85, %86 : tensor<512xi1, #blocked> loc(#loc139)
    %88 = arith.select %87, %84, %77 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc140)
    %89 = arith.andi %66, %50 : tensor<512xi1, #blocked> loc(#loc76)
    %90 = arith.addi %10, %cst_21 : tensor<512xi32, #blocked> loc(#loc77)
    %91 = arith.addi %90, %22 : tensor<512xi32, #blocked> loc(#loc78)
    %92 = arith.addi %91, %24 : tensor<512xi32, #blocked> loc(#loc79)
    %93 = tt.addptr %26, %92 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc80)
    %94 = arith.andi %89, %5 : tensor<512xi1, #blocked> loc(#loc81)
    %95 = tt.load %93, %94, %cst_8 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc82)
    %96 = arith.cmpf ogt, %95, %88 : tensor<512xf32, #blocked> loc(#loc141)
    %97 = arith.cmpf une, %95, %95 : tensor<512xf32, #blocked> loc(#loc142)
    %98 = arith.ori %96, %97 : tensor<512xi1, #blocked> loc(#loc143)
    %99 = arith.select %98, %95, %88 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc144)
    %100 = arith.addi %11, %cst_13 : tensor<512xi32, #blocked> loc(#loc84)
    %101 = arith.extsi %100 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc85)
    %102 = arith.cmpi sge, %101, %cst_14 : tensor<512xi64, #blocked> loc(#loc85)
    %103 = arith.cmpi slt, %101, %cst_15 : tensor<512xi64, #blocked> loc(#loc86)
    %104 = arith.andi %102, %103 : tensor<512xi1, #blocked> loc(#loc87)
    %105 = arith.andi %104, %20 : tensor<512xi1, #blocked> loc(#loc88)
    %106 = arith.addi %10, %cst_17 : tensor<512xi32, #blocked> loc(#loc89)
    %107 = arith.addi %106, %22 : tensor<512xi32, #blocked> loc(#loc90)
    %108 = arith.addi %107, %24 : tensor<512xi32, #blocked> loc(#loc91)
    %109 = tt.addptr %26, %108 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc92)
    %110 = arith.andi %105, %5 : tensor<512xi1, #blocked> loc(#loc93)
    %111 = tt.load %109, %110, %cst_8 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc94)
    %112 = arith.cmpf ogt, %111, %99 : tensor<512xf32, #blocked> loc(#loc145)
    %113 = arith.cmpf une, %111, %111 : tensor<512xf32, #blocked> loc(#loc146)
    %114 = arith.ori %112, %113 : tensor<512xi1, #blocked> loc(#loc147)
    %115 = arith.select %114, %111, %99 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc148)
    %116 = arith.andi %104, %34 : tensor<512xi1, #blocked> loc(#loc96)
    %117 = arith.addi %10, %cst_22 : tensor<512xi32, #blocked> loc(#loc97)
    %118 = arith.addi %117, %22 : tensor<512xi32, #blocked> loc(#loc98)
    %119 = arith.addi %118, %24 : tensor<512xi32, #blocked> loc(#loc99)
    %120 = tt.addptr %26, %119 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc100)
    %121 = arith.andi %116, %5 : tensor<512xi1, #blocked> loc(#loc101)
    %122 = tt.load %120, %121, %cst_8 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc102)
    %123 = arith.cmpf ogt, %122, %115 : tensor<512xf32, #blocked> loc(#loc149)
    %124 = arith.cmpf une, %122, %122 : tensor<512xf32, #blocked> loc(#loc150)
    %125 = arith.ori %123, %124 : tensor<512xi1, #blocked> loc(#loc151)
    %126 = arith.select %125, %122, %115 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc152)
    %127 = arith.andi %104, %50 : tensor<512xi1, #blocked> loc(#loc104)
    %128 = arith.addi %10, %cst_23 : tensor<512xi32, #blocked> loc(#loc105)
    %129 = arith.addi %128, %22 : tensor<512xi32, #blocked> loc(#loc106)
    %130 = arith.addi %129, %24 : tensor<512xi32, #blocked> loc(#loc107)
    %131 = tt.addptr %26, %130 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc108)
    %132 = arith.andi %127, %5 : tensor<512xi1, #blocked> loc(#loc109)
    %133 = tt.load %131, %132, %cst_8 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc110)
    %134 = arith.cmpf ogt, %133, %126 : tensor<512xf32, #blocked> loc(#loc153)
    %135 = arith.cmpf une, %133, %133 : tensor<512xf32, #blocked> loc(#loc154)
    %136 = arith.ori %134, %135 : tensor<512xi1, #blocked> loc(#loc155)
    %137 = arith.select %136, %133, %126 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc156)
    %138 = arith.select %42, %cst, %cst_0 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc112)
    %139 = arith.select %58, %cst_1, %138 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc113)
    %140 = arith.select %74, %cst_2, %139 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc114)
    %141 = arith.select %85, %cst_3, %140 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc115)
    %142 = arith.select %96, %cst_4, %141 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc116)
    %143 = arith.select %112, %cst_5, %142 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc117)
    %144 = arith.select %123, %cst_6, %143 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc118)
    %145 = arith.select %134, %cst_7, %144 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc119)
    %146 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc120)
    %147 = tt.addptr %146, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc120)
    tt.store %147, %137, %5 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc121)
    %148 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<512x!tt.ptr<i8>, #blocked> loc(#loc122)
    %149 = tt.addptr %148, %4 : tensor<512x!tt.ptr<i8>, #blocked>, tensor<512xi32, #blocked> loc(#loc122)
    tt.store %149, %145, %5 : tensor<512x!tt.ptr<i8>, #blocked> loc(#loc123)
    tt.return loc(#loc124)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":21:28)
#loc3 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":21:33)
#loc4 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":22:36)
#loc5 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":22:23)
#loc6 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":23:21)
#loc7 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":24:21)
#loc8 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":24:29)
#loc9 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":25:21)
#loc10 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":25:28)
#loc11 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":26:19)
#loc12 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":29:13)
#loc13 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":31:19)
#loc14 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":33:18)
#loc15 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":34:18)
#loc16 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":35:13)
#loc17 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":36:19)
#loc18 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":37:18)
#loc19 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":38:18)
#loc20 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":39:19)
#loc21 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":40:40)
#loc22 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":40:36)
#loc23 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":40:50)
#loc24 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":40:45)
#loc25 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":40:31)
#loc26 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":40:63)
#loc27 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":40:55)
#loc28 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":41:16)
#loc29 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":42:21)
#loc30 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":43:20)
#loc31 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":44:20)
#loc32 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":45:19)
#loc33 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":46:37)
#loc34 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":46:42)
#loc35 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":46:51)
#loc36 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":46:31)
#loc37 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":46:69)
#loc38 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":46:61)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc40 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":47:42)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc44 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":48:16)
#loc45 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":49:21)
#loc46 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":50:20)
#loc47 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":51:20)
#loc48 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":52:19)
#loc49 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":53:37)
#loc50 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":53:42)
#loc51 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":53:51)
#loc52 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":53:31)
#loc53 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":53:69)
#loc54 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":53:61)
#loc55 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":54:42)
#loc56 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":55:16)
#loc57 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":56:21)
#loc58 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":57:20)
#loc59 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":58:20)
#loc60 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":59:20)
#loc61 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":60:38)
#loc62 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":60:43)
#loc63 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":60:52)
#loc64 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":60:31)
#loc65 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":60:70)
#loc66 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":60:62)
#loc67 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":61:42)
#loc68 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":62:20)
#loc69 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":63:38)
#loc70 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":63:43)
#loc71 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":63:52)
#loc72 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":63:31)
#loc73 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":63:70)
#loc74 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":63:62)
#loc75 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":64:42)
#loc76 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":65:20)
#loc77 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":66:38)
#loc78 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":66:43)
#loc79 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":66:52)
#loc80 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":66:31)
#loc81 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":66:70)
#loc82 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":66:62)
#loc83 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":67:42)
#loc84 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":68:16)
#loc85 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":69:21)
#loc86 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":70:20)
#loc87 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":71:20)
#loc88 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":72:20)
#loc89 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":73:38)
#loc90 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":73:43)
#loc91 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":73:52)
#loc92 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":73:31)
#loc93 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":73:70)
#loc94 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":73:62)
#loc95 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":74:42)
#loc96 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":75:20)
#loc97 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":76:38)
#loc98 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":76:43)
#loc99 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":76:52)
#loc100 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":76:31)
#loc101 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":76:70)
#loc102 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":76:62)
#loc103 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":77:42)
#loc104 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":78:20)
#loc105 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":79:38)
#loc106 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":79:43)
#loc107 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":79:52)
#loc108 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":79:31)
#loc109 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":79:70)
#loc110 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":79:62)
#loc111 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":80:42)
#loc112 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":84:35)
#loc113 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":87:35)
#loc114 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":90:35)
#loc115 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":93:35)
#loc116 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":96:35)
#loc117 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":99:35)
#loc118 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":102:35)
#loc119 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":105:35)
#loc120 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":106:25)
#loc121 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":106:37)
#loc122 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":107:25)
#loc123 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":107:37)
#loc124 = loc("inductor_cache/r3/cr3kez5c46na5py2epnepvnyfjt273xhywslewss3px4k3el4pru.py":107:4)
#loc125 = loc(callsite(#loc39 at #loc40))
#loc126 = loc(callsite(#loc41 at #loc40))
#loc127 = loc(callsite(#loc42 at #loc40))
#loc128 = loc(callsite(#loc43 at #loc40))
#loc129 = loc(callsite(#loc39 at #loc55))
#loc130 = loc(callsite(#loc41 at #loc55))
#loc131 = loc(callsite(#loc42 at #loc55))
#loc132 = loc(callsite(#loc43 at #loc55))
#loc133 = loc(callsite(#loc39 at #loc67))
#loc134 = loc(callsite(#loc41 at #loc67))
#loc135 = loc(callsite(#loc42 at #loc67))
#loc136 = loc(callsite(#loc43 at #loc67))
#loc137 = loc(callsite(#loc39 at #loc75))
#loc138 = loc(callsite(#loc41 at #loc75))
#loc139 = loc(callsite(#loc42 at #loc75))
#loc140 = loc(callsite(#loc43 at #loc75))
#loc141 = loc(callsite(#loc39 at #loc83))
#loc142 = loc(callsite(#loc41 at #loc83))
#loc143 = loc(callsite(#loc42 at #loc83))
#loc144 = loc(callsite(#loc43 at #loc83))
#loc145 = loc(callsite(#loc39 at #loc95))
#loc146 = loc(callsite(#loc41 at #loc95))
#loc147 = loc(callsite(#loc42 at #loc95))
#loc148 = loc(callsite(#loc43 at #loc95))
#loc149 = loc(callsite(#loc39 at #loc103))
#loc150 = loc(callsite(#loc41 at #loc103))
#loc151 = loc(callsite(#loc42 at #loc103))
#loc152 = loc(callsite(#loc43 at #loc103))
#loc153 = loc(callsite(#loc39 at #loc111))
#loc154 = loc(callsite(#loc41 at #loc111))
#loc155 = loc(callsite(#loc42 at #loc111))
#loc156 = loc(callsite(#loc43 at #loc111))
