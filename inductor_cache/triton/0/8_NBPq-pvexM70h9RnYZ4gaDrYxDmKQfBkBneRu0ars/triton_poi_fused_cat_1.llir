; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %9 = shl i32 %8, 9, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 1, !dbg !12
  %12 = and i32 %11, 510, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %14 = sdiv i32 %13, 4096, !dbg !14
  %.frozen = freeze i32 %13, !dbg !15
  %15 = sdiv i32 %.frozen, 262144, !dbg !15
  %16 = mul i32 %15, 262144, !dbg !16
  %srem.decomposed = sub i32 %.frozen, %16, !dbg !16
  %17 = shl nsw i32 %15, 18, !dbg !17
  %18 = add i32 %17, %srem.decomposed, !dbg !18
  %19 = sext i32 %18 to i64, !dbg !19
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !19
  %21 = shl nsw i32 %15, 16, !dbg !20
  %22 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !21
  %23 = insertelement <2 x i32> %22, i32 %14, i64 1, !dbg !21
  %24 = srem <2 x i32> %23, <i32 4096, i32 64>, !dbg !21
  %25 = extractelement <2 x i32> %24, i64 1, !dbg !22
  %26 = icmp slt i32 %25, 16, !dbg !23
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %20, i1 %26, i32 0, i1 %26, i32 0, i1 %26) #1, !dbg !24
  %28 = extractvalue { i32, i32 } %27, 0, !dbg !24
  %29 = extractvalue { i32, i32 } %27, 1, !dbg !24
  %30 = and i32 %25, -16, !dbg !25
  %31 = icmp eq i32 %30, 16, !dbg !25
  %32 = shl nsw i32 %25, 12, !dbg !26
  %33 = extractelement <2 x i32> %24, i64 0, !dbg !26
  %34 = add i32 %17, %33, !dbg !26
  %35 = add i32 %34, -65536, !dbg !27
  %36 = add i32 %35, %32, !dbg !28
  %37 = sext i32 %36 to i64, !dbg !29
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !29
  %39 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %38, i1 %31, i32 0, i1 %31, i32 0, i1 %31) #1, !dbg !30
  %40 = extractvalue { i32, i32 } %39, 0, !dbg !30
  %41 = extractvalue { i32, i32 } %39, 1, !dbg !30
  %42 = icmp eq i32 %30, 32, !dbg !31
  %43 = add i32 %34, -131072, !dbg !32
  %44 = add i32 %43, %32, !dbg !33
  %45 = sext i32 %44 to i64, !dbg !34
  %46 = getelementptr float, ptr addrspace(1) %2, i64 %45, !dbg !34
  %47 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %46, i1 %42, i32 0, i1 %42, i32 0, i1 %42) #1, !dbg !35
  %48 = extractvalue { i32, i32 } %47, 0, !dbg !35
  %49 = extractvalue { i32, i32 } %47, 1, !dbg !35
  %50 = icmp sgt i32 %25, 47, !dbg !22
  %51 = insertelement <2 x i32> <i32 poison, i32 -48>, i32 %21, i64 0, !dbg !36
  %52 = add nsw <2 x i32> %51, %24, !dbg !36
  %53 = extractelement <2 x i32> %52, i64 1, !dbg !37
  %54 = shl nsw i32 %53, 12, !dbg !37
  %55 = extractelement <2 x i32> %52, i64 0, !dbg !38
  %56 = add nsw i32 %55, %54, !dbg !38
  %57 = sext i32 %56 to i64, !dbg !39
  %58 = getelementptr float, ptr addrspace(1) %3, i64 %57, !dbg !39
  %59 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %58, i1 %50, i32 0, i1 %50, i32 0, i1 %50) #1, !dbg !40
  %60 = extractvalue { i32, i32 } %59, 0, !dbg !40
  %61 = extractvalue { i32, i32 } %59, 1, !dbg !40
  %62 = bitcast i32 %60 to float, !dbg !40
  %63 = bitcast i32 %61 to float, !dbg !40
  %64 = sext i32 %53 to i64, !dbg !41
  %65 = getelementptr float, ptr addrspace(1) %4, i64 %64, !dbg !41
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %50, i32 0, i1 %50) #1, !dbg !42
  %67 = bitcast i32 %66 to float, !dbg !42
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %50, i32 0, i1 %50) #1, !dbg !42
  %69 = bitcast i32 %68 to float, !dbg !42
  %70 = fadd float %62, %67, !dbg !43
  %71 = fadd float %63, %69, !dbg !43
  %72 = sext i32 %13 to i64, !dbg !44
  %73 = getelementptr float, ptr addrspace(1) %5, i64 %72, !dbg !44
  %74 = bitcast float %70 to i32, !dbg !45
  %75 = select i1 %50, i32 %74, i32 0, !dbg !46
  %76 = select i1 %42, i32 %48, i32 %75, !dbg !47
  %77 = select i1 %31, i32 %40, i32 %76, !dbg !48
  %78 = select i1 %26, i32 %28, i32 %77, !dbg !49
  %79 = bitcast float %71 to i32, !dbg !45
  %80 = select i1 %50, i32 %79, i32 0, !dbg !46
  %81 = select i1 %42, i32 %49, i32 %80, !dbg !47
  %82 = select i1 %31, i32 %41, i32 %81, !dbg !48
  %83 = select i1 %26, i32 %29, i32 %82, !dbg !49
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %78, i32 %83, ptr addrspace(1) %73, i1 true) #1, !dbg !45
  ret void, !dbg !50
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cw5qfprgtqh5cdptfzjudkxvakifcgkuapfmq4nhiiuwhimlezyj.py", directory: "inductor_cache/w5")
!4 = !{ptr @triton_poi_fused_cat_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_1, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_1", linkageName: "triton_poi_fused_cat_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 33, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 54, scope: !7)
!18 = !DILocation(line: 33, column: 47, scope: !7)
!19 = !DILocation(line: 33, column: 30, scope: !7)
!20 = !DILocation(line: 47, column: 62, scope: !7)
!21 = !DILocation(line: 25, column: 19, scope: !7)
!22 = !DILocation(line: 44, column: 20, scope: !7)
!23 = !DILocation(line: 32, column: 18, scope: !7)
!24 = !DILocation(line: 33, column: 59, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 38, column: 42, scope: !7)
!27 = !DILocation(line: 38, column: 36, scope: !7)
!28 = !DILocation(line: 38, column: 56, scope: !7)
!29 = !DILocation(line: 38, column: 31, scope: !7)
!30 = !DILocation(line: 38, column: 68, scope: !7)
!31 = !DILocation(line: 42, column: 20, scope: !7)
!32 = !DILocation(line: 43, column: 36, scope: !7)
!33 = !DILocation(line: 43, column: 56, scope: !7)
!34 = !DILocation(line: 43, column: 31, scope: !7)
!35 = !DILocation(line: 43, column: 68, scope: !7)
!36 = !DILocation(line: 47, column: 36, scope: !7)
!37 = !DILocation(line: 47, column: 42, scope: !7)
!38 = !DILocation(line: 47, column: 56, scope: !7)
!39 = !DILocation(line: 47, column: 31, scope: !7)
!40 = !DILocation(line: 47, column: 67, scope: !7)
!41 = !DILocation(line: 48, column: 31, scope: !7)
!42 = !DILocation(line: 48, column: 44, scope: !7)
!43 = !DILocation(line: 49, column: 20, scope: !7)
!44 = !DILocation(line: 55, column: 25, scope: !7)
!45 = !DILocation(line: 55, column: 37, scope: !7)
!46 = !DILocation(line: 51, column: 35, scope: !7)
!47 = !DILocation(line: 52, column: 35, scope: !7)
!48 = !DILocation(line: 53, column: 34, scope: !7)
!49 = !DILocation(line: 54, column: 33, scope: !7)
!50 = !DILocation(line: 55, column: 4, scope: !7)
