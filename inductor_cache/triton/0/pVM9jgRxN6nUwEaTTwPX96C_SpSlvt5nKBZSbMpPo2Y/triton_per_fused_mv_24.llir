; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused_mv_24(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = shl i32 %5, 3, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 4, !dbg !12
  %9 = and i32 %8, 3, !dbg !12
  %10 = or disjoint i32 %9, 4, !dbg !12
  %11 = and i32 %7, 7, !dbg !12
  %12 = or disjoint i32 %6, %9, !dbg !13
  %13 = or disjoint i32 %6, %10, !dbg !13
  %14 = or disjoint i32 %6, %11, !dbg !13
  %15 = icmp slt i32 %12, 512, !dbg !14
  %16 = icmp slt i32 %13, 512, !dbg !14
  %17 = icmp slt i32 %14, 512, !dbg !14
  %18 = shl i32 %7, 1, !dbg !15
  %19 = and i32 %18, 30, !dbg !15
  %20 = icmp samesign ult i32 %19, 18, !dbg !16
  %21 = mul i32 %12, 18, !dbg !17
  %22 = mul i32 %13, 18, !dbg !17
  %23 = add i32 %21, %19, !dbg !18
  %24 = add i32 %22, %19, !dbg !18
  %25 = sext i32 %23 to i64, !dbg !19
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !19
  %27 = sext i32 %24 to i64, !dbg !19
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !19
  %29 = and i1 %20, %15, !dbg !20
  %30 = and i1 %20, %16, !dbg !20
  %31 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %26, i1 %29, i32 0, i1 %29, i32 0, i1 %29) #3, !dbg !21
  %32 = extractvalue { i32, i32 } %31, 0, !dbg !21
  %33 = extractvalue { i32, i32 } %31, 1, !dbg !21
  %34 = bitcast i32 %32 to float, !dbg !21
  %35 = bitcast i32 %33 to float, !dbg !21
  %36 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %28, i1 %30, i32 0, i1 %30, i32 0, i1 %30) #3, !dbg !21
  %37 = extractvalue { i32, i32 } %36, 0, !dbg !21
  %38 = extractvalue { i32, i32 } %36, 1, !dbg !21
  %39 = bitcast i32 %37 to float, !dbg !21
  %40 = bitcast i32 %38 to float, !dbg !21
  %41 = fadd float %34, %35, !dbg !22
  %42 = select i1 %29, float %41, float 0.000000e+00, !dbg !22
  %43 = fadd float %39, %40, !dbg !22
  %44 = select i1 %30, float %43, float 0.000000e+00, !dbg !22
  %45 = bitcast float %42 to i32, !dbg !27
  %46 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %45, i32 8, i32 31), !dbg !27
  %47 = bitcast i32 %46 to float, !dbg !27
  %48 = fadd float %42, %47, !dbg !22
  %49 = bitcast float %48 to i32, !dbg !27
  %50 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 4, i32 31), !dbg !27
  %51 = bitcast i32 %50 to float, !dbg !27
  %52 = fadd float %48, %51, !dbg !22
  %53 = bitcast float %52 to i32, !dbg !27
  %54 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %53, i32 2, i32 31), !dbg !27
  %55 = bitcast i32 %54 to float, !dbg !27
  %56 = fadd float %52, %55, !dbg !22
  %57 = bitcast float %56 to i32, !dbg !27
  %58 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %57, i32 1, i32 31), !dbg !27
  %59 = bitcast i32 %58 to float, !dbg !27
  %60 = fadd float %56, %59, !dbg !22
  %61 = bitcast float %44 to i32, !dbg !27
  %62 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %61, i32 8, i32 31), !dbg !27
  %63 = bitcast i32 %62 to float, !dbg !27
  %64 = fadd float %44, %63, !dbg !22
  %65 = bitcast float %64 to i32, !dbg !27
  %66 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %65, i32 4, i32 31), !dbg !27
  %67 = bitcast i32 %66 to float, !dbg !27
  %68 = fadd float %64, %67, !dbg !22
  %69 = bitcast float %68 to i32, !dbg !27
  %70 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %69, i32 2, i32 31), !dbg !27
  %71 = bitcast i32 %70 to float, !dbg !27
  %72 = fadd float %68, %71, !dbg !22
  %73 = bitcast float %72 to i32, !dbg !27
  %74 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %73, i32 1, i32 31), !dbg !27
  %75 = bitcast i32 %74 to float, !dbg !27
  %76 = fadd float %72, %75, !dbg !22
  %77 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %9, !dbg !28
  %78 = bitcast float %60 to <1 x i32>, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %77, <1 x i32> %78, i1 true) #3, !dbg !28
  %79 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %10, !dbg !28
  %80 = bitcast float %76 to <1 x i32>, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %79, <1 x i32> %80, i1 true) #3, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %81 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %11, !dbg !28
  %82 = load i32, ptr addrspace(3) %81, align 4, !dbg !28
  %83 = sext i32 %14 to i64, !dbg !29
  %84 = getelementptr float, ptr addrspace(1) %1, i64 %83, !dbg !29
  %85 = and i32 %7, 56, !dbg !30
  %86 = icmp eq i32 %85, 0, !dbg !30
  %87 = and i1 %86, %17, !dbg !30
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %82, ptr addrspace(1) %84, i1 %87) #3, !dbg !30
  ret void, !dbg !31
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py", directory: "inductor_cache/vv")
!4 = !{ptr @triton_per_fused_mv_24, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_mv_24, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_mv_24", linkageName: "triton_per_fused_mv_24", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 28, column: 21, scope: !7)
!17 = !DILocation(line: 31, column: 38, scope: !7)
!18 = !DILocation(line: 31, column: 35, scope: !7)
!19 = !DILocation(line: 31, column: 30, scope: !7)
!20 = !DILocation(line: 31, column: 51, scope: !7)
!21 = !DILocation(line: 31, column: 43, scope: !7)
!22 = !DILocation(line: 256, column: 15, scope: !23, inlinedAt: !26)
!23 = distinct !DILexicalBlockFile(scope: !25, file: !24, discriminator: 0)
!24 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!25 = distinct !DILexicalBlockFile(scope: !7, file: !24, discriminator: 0)
!26 = !DILocation(line: 34, column: 24, scope: !7)
!27 = !DILocation(line: 267, column: 36, scope: !25, inlinedAt: !26)
!28 = !DILocation(line: 34, column: 27, scope: !7)
!29 = !DILocation(line: 35, column: 25, scope: !7)
!30 = !DILocation(line: 35, column: 36, scope: !7)
!31 = !DILocation(line: 35, column: 4, scope: !7)
