#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":19:0)
#loc1 = loc(unknown)
#loc18 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":45:57)
#loc45 = loc(callsite(#loc1 at #loc18))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 1.000000e+02 : f32 loc(#loc1)
    %cst_0 = arith.constant 0x4A800000 : f32 loc(#loc1)
    %cst_1 = arith.constant 1.250000e-01 : f32 loc(#loc1)
    %cst_2 = arith.constant 0x49800000 : f32 loc(#loc1)
    %cst_3 = arith.constant 6.250000e-02 : f32 loc(#loc1)
    %cst_4 = arith.constant 2.621440e+05 : f32 loc(#loc1)
    %cst_5 = arith.constant 3.125000e-02 : f32 loc(#loc1)
    %cst_6 = arith.constant 6.553600e+04 : f32 loc(#loc1)
    %cst_7 = arith.constant 1.310720e+05 : f32 loc(#loc1)
    %cst_8 = arith.constant 4.915200e+04 : f32 loc(#loc1)
    %cst_9 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc3)
    %3 = tt.load %2 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc4)
    %4 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc5)
    %5 = tt.load %4 : !tt.ptr<f32> loc(#loc6)
    %6 = tt.addptr %arg2, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc7)
    %7 = tt.load %6 : !tt.ptr<f32> loc(#loc8)
    %8 = tt.addptr %arg3, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc9)
    %9 = tt.load %8 : !tt.ptr<f32> loc(#loc10)
    %10 = tt.addptr %arg4, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc11)
    %11 = tt.load %10 : !tt.ptr<f32> loc(#loc12)
    %12 = tt.addptr %arg5, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc13)
    %13 = tt.load %12 : !tt.ptr<f32> loc(#loc14)
    %14 = tt.addptr %arg6, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc15)
    %15 = tt.load %14 : !tt.ptr<f32> loc(#loc16)
    %16 = "tt.reduce"(%3) <{axis = 0 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc18)), %arg9: f32 loc(callsite(#loc1 at #loc18))):
      %38 = arith.addf %arg8, %arg9 : f32 loc(#loc48)
      tt.reduce.return %38 : f32 loc(#loc44)
    }) : (tensor<512xf32, #blocked>) -> f32 loc(#loc44)
    %17 = arith.addf %16, %cst_9 : f32 loc(#loc47)
    %18 = arith.divf %5, %cst_8 : f32 loc(#loc22)
    %19 = arith.divf %7, %cst_7 : f32 loc(#loc23)
    %20 = arith.addf %18, %19 : f32 loc(#loc24)
    %21 = arith.divf %9, %cst_6 : f32 loc(#loc25)
    %22 = arith.mulf %21, %cst_5 : f32 loc(#loc26)
    %23 = arith.addf %22, %cst_9 : f32 loc(#loc27)
    %24 = arith.divf %11, %cst_4 : f32 loc(#loc28)
    %25 = arith.mulf %24, %cst_3 : f32 loc(#loc29)
    %26 = arith.addf %23, %25 : f32 loc(#loc30)
    %27 = arith.divf %13, %cst_2 : f32 loc(#loc31)
    %28 = arith.mulf %27, %cst_1 : f32 loc(#loc32)
    %29 = arith.addf %26, %28 : f32 loc(#loc33)
    %30 = arith.divf %15, %cst_0 : f32 loc(#loc34)
    %31 = arith.addf %29, %30 : f32 loc(#loc35)
    %32 = arith.divf %17, %cst_0 : f32 loc(#loc36)
    %33 = arith.addf %31, %32 : f32 loc(#loc37)
    %34 = arith.mulf %33, %cst : f32 loc(#loc38)
    %35 = arith.addf %20, %34 : f32 loc(#loc39)
    %36 = tt.splat %35 : f32 -> tensor<1xf32, #blocked1> loc(#loc39)
    gpu.barrier loc(#loc40)
    %37 = tt.splat %4 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc41)
    tt.store %37, %36 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc42)
    tt.return loc(#loc43)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":27:26)
#loc3 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":31:30)
#loc4 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":31:35)
#loc5 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":32:34)
#loc6 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":32:19)
#loc7 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":34:30)
#loc8 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":34:19)
#loc9 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":36:31)
#loc10 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":36:20)
#loc11 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":38:31)
#loc12 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":38:20)
#loc13 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":40:31)
#loc14 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":40:20)
#loc15 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":42:31)
#loc16 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":42:20)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc21 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":45:44)
#loc22 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":47:18)
#loc23 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":49:19)
#loc24 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":50:19)
#loc25 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":52:20)
#loc26 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":54:20)
#loc27 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":56:20)
#loc28 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":58:20)
#loc29 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":60:20)
#loc30 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":61:20)
#loc31 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":63:20)
#loc32 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":65:20)
#loc33 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":66:20)
#loc34 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":68:20)
#loc35 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":71:20)
#loc36 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":72:19)
#loc37 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":74:20)
#loc38 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":76:20)
#loc39 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":77:20)
#loc40 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":78:4)
#loc41 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":79:28)
#loc42 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":79:63)
#loc43 = loc("inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py":79:4)
#loc44 = loc(callsite(#loc17 at #loc18))
#loc46 = loc(callsite(#loc19 at #loc17))
#loc47 = loc(callsite(#loc20 at #loc21))
#loc48 = loc(callsite(#loc46 at #loc18))
