//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36 // -- Begin function triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36
.visible .entry triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36(
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_6,
	.param .u32 triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<61>;
	.reg .f32 	%f<39>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:19:0

// %bb.0:
	ld.param.u64 	%rd2, [triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_0];
	ld.param.u64 	%rd9, [triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_1];
$L__tmp0:
	.loc	1 27 26                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:27:26
	mov.u32 	%r39, %tid.x;
	and.b32  	%r40, %r39, 31;
	ld.param.u64 	%rd3, [triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_2];
	ld.param.u64 	%rd4, [triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_3];
	shl.b32 	%r41, %r39, 2;
	ld.param.u64 	%rd5, [triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_4];
	and.b32  	%r42, %r41, 508;
	ld.param.u64 	%rd6, [triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_5];
	ld.param.u64 	%rd7, [triton_per_fused_abs_add_div_mean_mse_loss_mul_sub_36_param_6];
	.loc	1 31 30                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:31:30
	mul.wide.u32 	%rd10, %r42, 4;
	add.s64 	%rd1, %rd9, %rd10;
	mov.pred 	%p1, -1;
	.loc	1 31 35                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:31:35
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r1;
	mov.b32 	%f2, %r2;
	mov.b32 	%f3, %r3;
	mov.b32 	%f4, %r4;
	.loc	1 32 19                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:32:19
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.b32 { %r18 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 19                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:34:19
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.b32 { %r21 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 36 20                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:36:20
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.b32 { %r24 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 38 20                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:38:20
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p1 ld.global.b32 { %r27 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 40 20                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:40:20
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p1 ld.global.b32 { %r30 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 42 20                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:42:20
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p1 ld.global.b32 { %r33 }, [ %rd7 + 0 ];
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5, %f1, %f2;
	add.f32 	%f6, %f5, %f3;
	add.f32 	%f7, %f6, %f4;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f7;
	shfl.sync.bfly.b32	%r44, %r43, 16, 31, -1;
	mov.b32 	%f8, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f7, %f8;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f9;
	shfl.sync.bfly.b32	%r46, %r45, 8, 31, -1;
	mov.b32 	%f10, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f9, %f10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f11;
	shfl.sync.bfly.b32	%r48, %r47, 4, 31, -1;
	mov.b32 	%f12, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f11, %f12;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f13;
	shfl.sync.bfly.b32	%r50, %r49, 2, 31, -1;
	mov.b32 	%f14, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f15;
	shfl.sync.bfly.b32	%r52, %r51, 1, 31, -1;
	mov.b32 	%f16, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p8, %r40, 0;
	shr.u32 	%r53, %r39, 3;
	and.b32  	%r54, %r53, 12;
	mov.u32 	%r55, global_smem;
	add.s32 	%r11, %r55, %r54;
	mov.b32 	%r12, %f17;
	// begin inline asm
	@%p8 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p9, %r39, 4;
	add.s32 	%r14, %r55, %r41;
	// begin inline asm
	@%p9 ld.shared.b32 %r13, [ %r14 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r13;
	shfl.sync.bfly.b32	%r56, %r13, 2, 31, -1;
	mov.b32 	%f19, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f20;
	shfl.sync.bfly.b32	%r58, %r57, 1, 31, -1;
	mov.b32 	%f21, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r59, %r39, 3;
	setp.eq.s32 	%p12, %r59, 0;
	and.pred  	%p10, %p9, %p12;
	mov.b32 	%r16, %f22;
	// begin inline asm
	@%p10 st.shared.b32 [ %r14 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f23, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f24, %f23, 0f00000000;
	mov.b32 	%r19, 1195376640;
$L__tmp3:
	.loc	1 47 18                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:47:18
	// begin inline asm
	div.full.f32 %r17, %r18, %r19;
	// end inline asm
	mov.b32 	%f25, %r17;
	mov.b32 	%r22, 1207959552;
	.loc	1 49 19                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:49:19
	// begin inline asm
	div.full.f32 %r20, %r21, %r22;
	// end inline asm
	mov.b32 	%f26, %r20;
	.loc	1 50 19                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:50:19
	add.f32 	%f27, %f25, %f26;
	mov.b32 	%r25, 1199570944;
	.loc	1 52 20                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:52:20
	// begin inline asm
	div.full.f32 %r23, %r24, %r25;
	// end inline asm
	mov.b32 	%f28, %r23;
	.loc	1 56 20                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:56:20
	fma.rn.f32 	%f29, %f28, 0f3D000000, 0f00000000;
	mov.b32 	%r28, 1216348160;
	.loc	1 58 20                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:58:20
	// begin inline asm
	div.full.f32 %r26, %r27, %r28;
	// end inline asm
	mov.b32 	%f30, %r26;
	.loc	1 61 20                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:61:20
	fma.rn.f32 	%f31, %f30, 0f3D800000, %f29;
	mov.b32 	%r31, 1233125376;
	.loc	1 63 20                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:63:20
	// begin inline asm
	div.full.f32 %r29, %r30, %r31;
	// end inline asm
	mov.b32 	%f32, %r29;
	.loc	1 66 20                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:66:20
	fma.rn.f32 	%f33, %f32, 0f3E000000, %f31;
	mov.b32 	%r34, 1249902592;
	.loc	1 68 20                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:68:20
	// begin inline asm
	div.full.f32 %r32, %r33, %r34;
	// end inline asm
	mov.b32 	%f34, %r32;
	.loc	1 71 20                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:71:20
	add.f32 	%f35, %f34, %f33;
	.loc	1 72 19                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:72:19
	mov.b32 	%r36, %f24;
	// begin inline asm
	div.full.f32 %r35, %r36, %r34;
	// end inline asm
	mov.b32 	%f36, %r35;
	.loc	1 74 20                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:74:20
	add.f32 	%f37, %f36, %f35;
	.loc	1 77 20                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:77:20
	fma.rn.f32 	%f38, %f37, 0f42C80000, %f27;
	.loc	1 78 4                          // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:78:4
	bar.sync 	0;
	.loc	1 79 63                         // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:79:63
	and.b32  	%r60, %r39, 127;
	setp.eq.s32 	%p11, %r60, 0;
	mov.b32 	%r38, %f38;
	// begin inline asm
	@%p11 st.global.b32 [ %rd2 + 0 ], { %r38 };
	// end inline asm
	.loc	1 79 4                          // ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py:79:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/e6/ce6aer4rjlwqzoyr27gbwfc6fgg6ca3bh7nsdfshskhd2i3bzi7l.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 222                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 54
.b8 97
.b8 101
.b8 114
.b8 52
.b8 114
.b8 106
.b8 108
.b8 119
.b8 113
.b8 122
.b8 111
.b8 121
.b8 114
.b8 50
.b8 55
.b8 103
.b8 98
.b8 119
.b8 102
.b8 99
.b8 54
.b8 102
.b8 103
.b8 103
.b8 54
.b8 99
.b8 97
.b8 51
.b8 98
.b8 104
.b8 55
.b8 110
.b8 115
.b8 100
.b8 102
.b8 115
.b8 104
.b8 115
.b8 107
.b8 104
.b8 100
.b8 50
.b8 105
.b8 51
.b8 98
.b8 122
.b8 105
.b8 55
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 54
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x38 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 98
.b8 115
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 115
.b8 101
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 51
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
