//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_leaky_relu_14 // -- Begin function triton_poi_fused_convolution_leaky_relu_14
                                        // @triton_poi_fused_convolution_leaky_relu_14
.visible .entry triton_poi_fused_convolution_leaky_relu_14(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_14_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_14_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_14_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_14_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_14_param_4,
	.param .u32 triton_poi_fused_convolution_leaky_relu_14_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<26>;
	.reg .f32 	%f<19>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused_convolution_leaky_relu_14_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_convolution_leaky_relu_14_param_1];
$L__tmp0:
	.loc	1 21 28                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:21:33
	shl.b32 	%r12, %r1, 8;
	ld.param.u64 	%rd11, [triton_poi_fused_convolution_leaky_relu_14_param_2];
	ld.param.u64 	%rd12, [triton_poi_fused_convolution_leaky_relu_14_param_3];
	.loc	1 22 36                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:22:36
	mov.u32 	%r13, %tid.x;
	shl.b32 	%r14, %r13, 1;
	ld.param.u64 	%rd13, [triton_poi_fused_convolution_leaky_relu_14_param_4];
	and.b32  	%r15, %r14, 254;
	.loc	1 22 23                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:22:23
	or.b32  	%r16, %r12, %r15;
	.loc	1 25 21                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:25:21
	bfe.s32 	%r17, %r1, 23, 1;
	shr.u32 	%r18, %r17, 30;
	add.s32 	%r19, %r16, %r18;
	shr.s32 	%r20, %r19, 2;
	.loc	1 25 26                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:25:26
	shr.s32 	%r21, %r19, 31;
	shr.u32 	%r22, %r21, 23;
	add.s32 	%r23, %r20, %r22;
	and.b32  	%r24, %r23, -512;
	sub.s32 	%r25, %r20, %r24;
	.loc	1 26 34                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:26:34
	cvt.s64.s32 	%rd14, %r16;
	mul.wide.s32 	%rd15, %r16, 4;
	add.s64 	%rd1, %rd9, %rd15;
	mov.pred 	%p1, -1;
	.loc	1 26 39                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:26:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 27 30                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:27:30
	mul.wide.s32 	%rd16, %r25, 4;
	add.s64 	%rd2, %rd11, %rd16;
	.loc	1 27 35                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:27:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 28 34                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:28:34
	add.s64 	%rd4, %rd10, %rd15;
	.loc	1 28 39                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:28:39
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 27 35                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:27:35
	mov.b32 	%f1, %r5;
	mov.b32 	%f2, %r4;
	.loc	1 28 39                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:28:39
	mov.b32 	%f3, %r2;
	mov.b32 	%f4, %r3;
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r6;
	.loc	1 35 18                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:35:18
	add.f32 	%f7, %f2, %f6;
	add.f32 	%f8, %f1, %f5;
	add.f32 	%f9, %f1, %f4;
	add.f32 	%f10, %f2, %f3;
	.loc	1 33 18                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:33:18
	mul.f32 	%f11, %f10, 0f3DCCCCCD;
	mul.f32 	%f12, %f9, 0f3DCCCCCD;
	.loc	1 36 19                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:36:19
	setp.gt.f32 	%p9, %f8, 0f00000000;
	setp.gt.f32 	%p10, %f7, 0f00000000;
	setp.gt.f32 	%p11, %f9, 0f00000000;
	setp.gt.f32 	%p12, %f10, 0f00000000;
	.loc	1 34 32                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:34:32
	selp.f32 	%f13, %f10, %f11, %p12;
	selp.f32 	%f14, %f9, %f12, %p11;
	.loc	1 37 19                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:37:19
	mul.f32 	%f15, %f7, 0f3DCCCCCD;
	mul.f32 	%f16, %f8, 0f3DCCCCCD;
	.loc	1 38 34                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:38:34
	selp.f32 	%f17, %f7, %f15, %p10;
	selp.f32 	%f18, %f8, %f16, %p9;
	.loc	1 39 25                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:39:25
	add.s64 	%rd5, %rd12, %rd14;
	.loc	1 39 36                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:39:36
	selp.u16 	%rs3, 1, 0, %p12;
	selp.u16 	%rs4, 1, 0, %p11;
	shl.b16 	%rs5, %rs4, 8;
	or.b16  	%rs1, %rs3, %rs5;
	// begin inline asm
	@%p1 st.global.b16 [ %rd5 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 40 39                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:40:39
	mov.b32 	%r8, %f13;
	mov.b32 	%r9, %f14;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r8, %r9 };
	// end inline asm
	.loc	1 41 25                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:41:25
	add.s64 	%rd7, %rd13, %rd14;
	.loc	1 41 37                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:41:37
	selp.u16 	%rs6, 1, 0, %p10;
	selp.u16 	%rs7, 1, 0, %p9;
	shl.b16 	%rs8, %rs7, 8;
	or.b16  	%rs2, %rs6, %rs8;
	// begin inline asm
	@%p1 st.global.b16 [ %rd7 + 0 ], { %rs2 };
	// end inline asm
	.loc	1 42 40                         // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:42:40
	mov.b32 	%r10, %f17;
	mov.b32 	%r11, %f18;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd4 + 0 ], { %r10, %r11 };
	// end inline asm
	.loc	1 42 4                          // cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py:42:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/re/cre64pcgmkqbrvcb5z2aq7em6aeruezqu6knzy6er2fwxlgr7is5.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 101
.b8 54
.b8 52
.b8 112
.b8 99
.b8 103
.b8 109
.b8 107
.b8 113
.b8 98
.b8 114
.b8 118
.b8 99
.b8 98
.b8 53
.b8 122
.b8 50
.b8 97
.b8 113
.b8 55
.b8 101
.b8 109
.b8 54
.b8 97
.b8 101
.b8 114
.b8 117
.b8 101
.b8 122
.b8 113
.b8 117
.b8 54
.b8 107
.b8 110
.b8 122
.b8 121
.b8 54
.b8 101
.b8 114
.b8 50
.b8 102
.b8 119
.b8 120
.b8 108
.b8 103
.b8 114
.b8 55
.b8 105
.b8 115
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 101
.b8 0
	}
	.section	.debug_macinfo	{	}
