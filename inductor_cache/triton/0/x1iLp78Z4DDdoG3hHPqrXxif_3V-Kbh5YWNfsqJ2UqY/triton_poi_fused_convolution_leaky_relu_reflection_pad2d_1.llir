; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_leaky_relu_reflection_pad2d_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 400, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %13 = sdiv i32 %.frozen, 5, !dbg !15
  %14 = mul i32 %13, 5, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %.frozen3 = freeze i32 %11, !dbg !15
  %15 = sdiv i32 %.frozen3, 5, !dbg !15
  %16 = mul i32 %15, 5, !dbg !16
  %.decomposed4 = sub i32 %.frozen3, %16, !dbg !16
  %17 = srem i32 %13, 5, !dbg !17
  %18 = srem i32 %15, 5, !dbg !17
  %19 = sdiv i32 %10, 25, !dbg !18
  %20 = sdiv i32 %11, 25, !dbg !18
  %21 = srem i32 %19, 4, !dbg !19
  %22 = srem i32 %20, 4, !dbg !19
  %23 = add nsw i32 %.decomposed, -1, !dbg !20
  %24 = add nsw i32 %.decomposed4, -1, !dbg !20
  %25 = tail call i32 @llvm.abs.i32(i32 %23, i1 true), !dbg !21
  %26 = tail call i32 @llvm.abs.i32(i32 %24, i1 true), !dbg !21
  %27 = add nsw i32 %25, -2, !dbg !22
  %28 = add nsw i32 %26, -2, !dbg !22
  %29 = tail call i32 @llvm.abs.i32(i32 %27, i1 true), !dbg !23
  %30 = tail call i32 @llvm.abs.i32(i32 %28, i1 true), !dbg !23
  %31 = add nsw i32 %17, -1, !dbg !24
  %32 = add nsw i32 %18, -1, !dbg !24
  %33 = tail call i32 @llvm.abs.i32(i32 %31, i1 true), !dbg !25
  %34 = tail call i32 @llvm.abs.i32(i32 %32, i1 true), !dbg !25
  %35 = add nsw i32 %33, -2, !dbg !26
  %36 = add nsw i32 %34, -2, !dbg !26
  %37 = tail call i32 @llvm.abs.i32(i32 %35, i1 true), !dbg !27
  %38 = tail call i32 @llvm.abs.i32(i32 %36, i1 true), !dbg !27
  %39 = mul nsw i32 %37, -3, !dbg !28
  %40 = mul nsw i32 %38, -3, !dbg !28
  %41 = mul nsw i32 %19, 9, !dbg !29
  %42 = mul nsw i32 %20, 9, !dbg !29
  %reass.sub = add nsw i32 %41, 8, !dbg !30
  %43 = sub nsw i32 %reass.sub, %29, !dbg !30
  %44 = add nsw i32 %43, %39, !dbg !31
  %reass.sub1 = add nsw i32 %42, 8, !dbg !30
  %45 = sub nsw i32 %reass.sub1, %30, !dbg !30
  %46 = add nsw i32 %45, %40, !dbg !31
  %47 = sext i32 %44 to i64, !dbg !32
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !32
  %49 = sext i32 %46 to i64, !dbg !32
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !32
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %12) #1, !dbg !33
  %52 = bitcast i32 %51 to float, !dbg !33
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %12) #1, !dbg !33
  %54 = bitcast i32 %53 to float, !dbg !33
  %55 = sext i32 %21 to i64, !dbg !34
  %56 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !34
  %57 = sext i32 %22 to i64, !dbg !34
  %58 = getelementptr float, ptr addrspace(1) %1, i64 %57, !dbg !34
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %12) #1, !dbg !35
  %60 = bitcast i32 %59 to float, !dbg !35
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 %12) #1, !dbg !35
  %62 = bitcast i32 %61 to float, !dbg !35
  %63 = fadd float %52, %60, !dbg !36
  %64 = fadd float %54, %62, !dbg !36
  %65 = fcmp ogt float %63, 0.000000e+00, !dbg !37
  %66 = fcmp ogt float %64, 0.000000e+00, !dbg !37
  %67 = fmul float %63, 0x3FC99999A0000000, !dbg !38
  %68 = fmul float %64, 0x3FC99999A0000000, !dbg !38
  %69 = select i1 %65, float %63, float %67, !dbg !39
  %70 = select i1 %66, float %64, float %68, !dbg !39
  %71 = sext i32 %10 to i64, !dbg !40
  %72 = getelementptr float, ptr addrspace(1) %2, i64 %71, !dbg !40
  %73 = bitcast float %69 to i32, !dbg !41
  %74 = bitcast float %70 to i32, !dbg !41
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %73, i32 %74, ptr addrspace(1) %72, i1 %12) #1, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ckql4crztf2qzchy6nm7nkp7vpkomimis5nxfle2ohcco6d7piqe.py", directory: "inductor_cache/kq")
!4 = !{ptr @triton_poi_fused_convolution_leaky_relu_reflection_pad2d_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_leaky_relu_reflection_pad2d_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_leaky_relu_reflection_pad2d_1", linkageName: "triton_poi_fused_convolution_leaky_relu_reflection_pad2d_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 26, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 27, column: 27, scope: !7)
!20 = !DILocation(line: 29, column: 78, scope: !7)
!21 = !DILocation(line: 29, column: 71, scope: !7)
!22 = !DILocation(line: 29, column: 59, scope: !7)
!23 = !DILocation(line: 29, column: 52, scope: !7)
!24 = !DILocation(line: 29, column: 130, scope: !7)
!25 = !DILocation(line: 29, column: 123, scope: !7)
!26 = !DILocation(line: 29, column: 111, scope: !7)
!27 = !DILocation(line: 29, column: 104, scope: !7)
!28 = !DILocation(line: 29, column: 92, scope: !7)
!29 = !DILocation(line: 29, column: 140, scope: !7)
!30 = !DILocation(line: 29, column: 87, scope: !7)
!31 = !DILocation(line: 29, column: 138, scope: !7)
!32 = !DILocation(line: 29, column: 30, scope: !7)
!33 = !DILocation(line: 29, column: 145, scope: !7)
!34 = !DILocation(line: 30, column: 30, scope: !7)
!35 = !DILocation(line: 30, column: 35, scope: !7)
!36 = !DILocation(line: 31, column: 18, scope: !7)
!37 = !DILocation(line: 33, column: 18, scope: !7)
!38 = !DILocation(line: 35, column: 18, scope: !7)
!39 = !DILocation(line: 36, column: 32, scope: !7)
!40 = !DILocation(line: 37, column: 25, scope: !7)
!41 = !DILocation(line: 37, column: 36, scope: !7)
!42 = !DILocation(line: 37, column: 4, scope: !7)
