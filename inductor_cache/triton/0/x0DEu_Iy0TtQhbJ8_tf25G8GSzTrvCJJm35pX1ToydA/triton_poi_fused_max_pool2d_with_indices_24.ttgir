#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [1, 4], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [4, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 4], order = [0, 1]}>
#loc = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_24(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":19:0), %arg2: i32 loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":19:0)) attributes {noinline = false} {
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %cst = arith.constant dense<221952> : tensor<1x32xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<289> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<20736> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<20448> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<20160> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<10656> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<10368> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<10080> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<576> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_8 = arith.constant dense<352800> : tensor<1x32xi32, #blocked1> loc(#loc1)
    %cst_9 = arith.constant dense<20160> : tensor<1x32xi32, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<576> : tensor<1x32xi32, #blocked1> loc(#loc1)
    %cst_11 = arith.constant dense<289> : tensor<1x32xi32, #blocked1> loc(#loc1)
    %cst_12 = arith.constant dense<289> : tensor<1x32xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<17> : tensor<1x32xi32, #blocked1> loc(#loc1)
    %cst_14 = arith.constant dense<288> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_15 = arith.constant dense<288> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<1156> : tensor<1x32xi32, #blocked1> loc(#loc1)
    %cst_17 = arith.constant dense<1156> : tensor<1x32xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %3 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x32xi32, #blocked1> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x32xi32, #blocked> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<1x32xi32, #blocked1> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<1x32xi32, #blocked> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<1x32xi32, #blocked1> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<1x32xi32, #blocked> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_16 : tensor<1x32xi32, #blocked1> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_17 : tensor<1x32xi32, #blocked> loc(#loc6)
    %12 = tt.get_program_id x : i32 loc(#loc7)
    %13 = arith.muli %12, %c32_i32 : i32 loc(#loc8)
    %14 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc9)
    %15 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc9)
    %16 = tt.expand_dims %14 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xi32, #blocked1> loc(#loc9)
    %17 = tt.expand_dims %15 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc9)
    %18 = tt.splat %13 : i32 -> tensor<32x1xi32, #blocked1> loc(#loc10)
    %19 = tt.splat %13 : i32 -> tensor<32x1xi32, #blocked> loc(#loc10)
    %20 = arith.addi %18, %16 : tensor<32x1xi32, #blocked1> loc(#loc10)
    %21 = arith.addi %19, %17 : tensor<32x1xi32, #blocked> loc(#loc10)
    %22 = arith.cmpi slt, %20, %cst_14 : tensor<32x1xi32, #blocked1> loc(#loc11)
    %23 = arith.cmpi slt, %21, %cst_15 : tensor<32x1xi32, #blocked> loc(#loc11)
    %24 = arith.remsi %8, %cst_13 : tensor<1x32xi32, #blocked1> loc(#loc12)
    %25 = arith.divsi %8, %cst_13 : tensor<1x32xi32, #blocked1> loc(#loc13)
    %26 = arith.remsi %25, %cst_13 : tensor<1x32xi32, #blocked1> loc(#loc14)
    %27 = arith.divsi %8, %cst_11 : tensor<1x32xi32, #blocked1> loc(#loc15)
    %28 = arith.divsi %9, %cst_12 : tensor<1x32xi32, #blocked> loc(#loc15)
    %29 = arith.remsi %9, %cst_12 : tensor<1x32xi32, #blocked> loc(#loc16)
    %30 = arith.muli %24, %cst_10 : tensor<1x32xi32, #blocked1> loc(#loc17)
    %31 = tt.broadcast %20 : tensor<32x1xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc18)
    %32 = tt.broadcast %30 : tensor<1x32xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc18)
    %33 = arith.addi %31, %32 : tensor<32x32xi32, #blocked1> loc(#loc18)
    %34 = arith.muli %26, %cst_9 : tensor<1x32xi32, #blocked1> loc(#loc19)
    %35 = tt.broadcast %34 : tensor<1x32xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc20)
    %36 = arith.addi %33, %35 : tensor<32x32xi32, #blocked1> loc(#loc20)
    %37 = arith.muli %27, %cst_8 : tensor<1x32xi32, #blocked1> loc(#loc21)
    %38 = tt.broadcast %37 : tensor<1x32xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc22)
    %39 = arith.addi %36, %38 : tensor<32x32xi32, #blocked1> loc(#loc22)
    %40 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc23)
    %41 = tt.addptr %40, %39 : tensor<32x32x!tt.ptr<f32>, #blocked1>, tensor<32x32xi32, #blocked1> loc(#loc23)
    %42 = tt.broadcast %22 : tensor<32x1xi1, #blocked1> -> tensor<32x32xi1, #blocked1> loc(#loc24)
    %43 = tt.broadcast %23 : tensor<32x1xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc24)
    %44 = tt.broadcast %10 : tensor<1x32xi1, #blocked1> -> tensor<32x32xi1, #blocked1> loc(#loc24)
    %45 = tt.broadcast %11 : tensor<1x32xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc24)
    %46 = arith.andi %42, %44 : tensor<32x32xi1, #blocked1> loc(#loc24)
    %47 = arith.andi %43, %45 : tensor<32x32xi1, #blocked> loc(#loc24)
    %48 = tt.load %41, %46 evictionPolicy = evict_last : tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc25)
    %49 = arith.addi %20, %cst_14 : tensor<32x1xi32, #blocked1> loc(#loc26)
    %50 = tt.broadcast %49 : tensor<32x1xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc27)
    %51 = arith.addi %50, %32 : tensor<32x32xi32, #blocked1> loc(#loc27)
    %52 = arith.addi %51, %35 : tensor<32x32xi32, #blocked1> loc(#loc28)
    %53 = arith.addi %52, %38 : tensor<32x32xi32, #blocked1> loc(#loc29)
    %54 = tt.addptr %40, %53 : tensor<32x32x!tt.ptr<f32>, #blocked1>, tensor<32x32xi32, #blocked1> loc(#loc30)
    %55 = tt.load %54, %46 evictionPolicy = evict_last : tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc31)
    %56 = arith.addi %20, %cst_7 : tensor<32x1xi32, #blocked1> loc(#loc32)
    %57 = tt.broadcast %56 : tensor<32x1xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc33)
    %58 = arith.addi %57, %32 : tensor<32x32xi32, #blocked1> loc(#loc33)
    %59 = arith.addi %58, %35 : tensor<32x32xi32, #blocked1> loc(#loc34)
    %60 = arith.addi %59, %38 : tensor<32x32xi32, #blocked1> loc(#loc35)
    %61 = tt.addptr %40, %60 : tensor<32x32x!tt.ptr<f32>, #blocked1>, tensor<32x32xi32, #blocked1> loc(#loc36)
    %62 = tt.load %61, %46 evictionPolicy = evict_last : tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc37)
    %63 = arith.addi %20, %cst_6 : tensor<32x1xi32, #blocked1> loc(#loc38)
    %64 = tt.broadcast %63 : tensor<32x1xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc39)
    %65 = arith.addi %64, %32 : tensor<32x32xi32, #blocked1> loc(#loc39)
    %66 = arith.addi %65, %35 : tensor<32x32xi32, #blocked1> loc(#loc40)
    %67 = arith.addi %66, %38 : tensor<32x32xi32, #blocked1> loc(#loc41)
    %68 = tt.addptr %40, %67 : tensor<32x32x!tt.ptr<f32>, #blocked1>, tensor<32x32xi32, #blocked1> loc(#loc42)
    %69 = tt.load %68, %46 evictionPolicy = evict_last : tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc43)
    %70 = arith.addi %20, %cst_5 : tensor<32x1xi32, #blocked1> loc(#loc44)
    %71 = tt.broadcast %70 : tensor<32x1xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc45)
    %72 = arith.addi %71, %32 : tensor<32x32xi32, #blocked1> loc(#loc45)
    %73 = arith.addi %72, %35 : tensor<32x32xi32, #blocked1> loc(#loc46)
    %74 = arith.addi %73, %38 : tensor<32x32xi32, #blocked1> loc(#loc47)
    %75 = tt.addptr %40, %74 : tensor<32x32x!tt.ptr<f32>, #blocked1>, tensor<32x32xi32, #blocked1> loc(#loc48)
    %76 = tt.load %75, %46 evictionPolicy = evict_last : tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc49)
    %77 = arith.addi %20, %cst_4 : tensor<32x1xi32, #blocked1> loc(#loc50)
    %78 = tt.broadcast %77 : tensor<32x1xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc51)
    %79 = arith.addi %78, %32 : tensor<32x32xi32, #blocked1> loc(#loc51)
    %80 = arith.addi %79, %35 : tensor<32x32xi32, #blocked1> loc(#loc52)
    %81 = arith.addi %80, %38 : tensor<32x32xi32, #blocked1> loc(#loc53)
    %82 = tt.addptr %40, %81 : tensor<32x32x!tt.ptr<f32>, #blocked1>, tensor<32x32xi32, #blocked1> loc(#loc54)
    %83 = tt.load %82, %46 evictionPolicy = evict_last : tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc55)
    %84 = arith.addi %20, %cst_3 : tensor<32x1xi32, #blocked1> loc(#loc56)
    %85 = tt.broadcast %84 : tensor<32x1xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc57)
    %86 = arith.addi %85, %32 : tensor<32x32xi32, #blocked1> loc(#loc57)
    %87 = arith.addi %86, %35 : tensor<32x32xi32, #blocked1> loc(#loc58)
    %88 = arith.addi %87, %38 : tensor<32x32xi32, #blocked1> loc(#loc59)
    %89 = tt.addptr %40, %88 : tensor<32x32x!tt.ptr<f32>, #blocked1>, tensor<32x32xi32, #blocked1> loc(#loc60)
    %90 = tt.load %89, %46 evictionPolicy = evict_last : tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc61)
    %91 = arith.addi %20, %cst_2 : tensor<32x1xi32, #blocked1> loc(#loc62)
    %92 = tt.broadcast %91 : tensor<32x1xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc63)
    %93 = arith.addi %92, %32 : tensor<32x32xi32, #blocked1> loc(#loc63)
    %94 = arith.addi %93, %35 : tensor<32x32xi32, #blocked1> loc(#loc64)
    %95 = arith.addi %94, %38 : tensor<32x32xi32, #blocked1> loc(#loc65)
    %96 = tt.addptr %40, %95 : tensor<32x32x!tt.ptr<f32>, #blocked1>, tensor<32x32xi32, #blocked1> loc(#loc66)
    %97 = tt.load %96, %46 evictionPolicy = evict_last : tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc67)
    %98 = arith.addi %20, %cst_1 : tensor<32x1xi32, #blocked1> loc(#loc68)
    %99 = tt.broadcast %98 : tensor<32x1xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc69)
    %100 = arith.addi %99, %32 : tensor<32x32xi32, #blocked1> loc(#loc69)
    %101 = arith.addi %100, %35 : tensor<32x32xi32, #blocked1> loc(#loc70)
    %102 = arith.addi %101, %38 : tensor<32x32xi32, #blocked1> loc(#loc71)
    %103 = tt.addptr %40, %102 : tensor<32x32x!tt.ptr<f32>, #blocked1>, tensor<32x32xi32, #blocked1> loc(#loc72)
    %104 = tt.load %103, %46 evictionPolicy = evict_last : tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc73)
    %105 = arith.cmpf ogt, %55, %48 : tensor<32x32xf32, #blocked1> loc(#loc93)
    %106 = arith.cmpf une, %55, %55 : tensor<32x32xf32, #blocked1> loc(#loc94)
    %107 = arith.ori %105, %106 : tensor<32x32xi1, #blocked1> loc(#loc95)
    %108 = arith.select %107, %55, %48 : tensor<32x32xi1, #blocked1>, tensor<32x32xf32, #blocked1> loc(#loc96)
    %109 = arith.cmpf ogt, %62, %108 : tensor<32x32xf32, #blocked1> loc(#loc97)
    %110 = arith.cmpf une, %62, %62 : tensor<32x32xf32, #blocked1> loc(#loc98)
    %111 = arith.ori %109, %110 : tensor<32x32xi1, #blocked1> loc(#loc99)
    %112 = arith.select %111, %62, %108 : tensor<32x32xi1, #blocked1>, tensor<32x32xf32, #blocked1> loc(#loc100)
    %113 = arith.cmpf ogt, %69, %112 : tensor<32x32xf32, #blocked1> loc(#loc101)
    %114 = arith.cmpf une, %69, %69 : tensor<32x32xf32, #blocked1> loc(#loc102)
    %115 = arith.ori %113, %114 : tensor<32x32xi1, #blocked1> loc(#loc103)
    %116 = arith.select %115, %69, %112 : tensor<32x32xi1, #blocked1>, tensor<32x32xf32, #blocked1> loc(#loc104)
    %117 = arith.cmpf ogt, %76, %116 : tensor<32x32xf32, #blocked1> loc(#loc105)
    %118 = arith.cmpf une, %76, %76 : tensor<32x32xf32, #blocked1> loc(#loc106)
    %119 = arith.ori %117, %118 : tensor<32x32xi1, #blocked1> loc(#loc107)
    %120 = arith.select %119, %76, %116 : tensor<32x32xi1, #blocked1>, tensor<32x32xf32, #blocked1> loc(#loc108)
    %121 = arith.cmpf ogt, %83, %120 : tensor<32x32xf32, #blocked1> loc(#loc109)
    %122 = arith.cmpf une, %83, %83 : tensor<32x32xf32, #blocked1> loc(#loc110)
    %123 = arith.ori %121, %122 : tensor<32x32xi1, #blocked1> loc(#loc111)
    %124 = arith.select %123, %83, %120 : tensor<32x32xi1, #blocked1>, tensor<32x32xf32, #blocked1> loc(#loc112)
    %125 = arith.cmpf ogt, %90, %124 : tensor<32x32xf32, #blocked1> loc(#loc113)
    %126 = arith.cmpf une, %90, %90 : tensor<32x32xf32, #blocked1> loc(#loc114)
    %127 = arith.ori %125, %126 : tensor<32x32xi1, #blocked1> loc(#loc115)
    %128 = arith.select %127, %90, %124 : tensor<32x32xi1, #blocked1>, tensor<32x32xf32, #blocked1> loc(#loc116)
    %129 = arith.cmpf ogt, %97, %128 : tensor<32x32xf32, #blocked1> loc(#loc117)
    %130 = arith.cmpf une, %97, %97 : tensor<32x32xf32, #blocked1> loc(#loc118)
    %131 = arith.ori %129, %130 : tensor<32x32xi1, #blocked1> loc(#loc119)
    %132 = arith.select %131, %97, %128 : tensor<32x32xi1, #blocked1>, tensor<32x32xf32, #blocked1> loc(#loc120)
    %133 = arith.cmpf ogt, %104, %132 : tensor<32x32xf32, #blocked1> loc(#loc121)
    %134 = arith.cmpf une, %104, %104 : tensor<32x32xf32, #blocked1> loc(#loc122)
    %135 = arith.ori %133, %134 : tensor<32x32xi1, #blocked1> loc(#loc123)
    %136 = arith.select %135, %104, %132 : tensor<32x32xi1, #blocked1>, tensor<32x32xf32, #blocked1> loc(#loc124)
    %137 = arith.muli %21, %cst_0 : tensor<32x1xi32, #blocked> loc(#loc86)
    %138 = tt.broadcast %29 : tensor<1x32xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc87)
    %139 = tt.broadcast %137 : tensor<32x1xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc87)
    %140 = arith.addi %138, %139 : tensor<32x32xi32, #blocked> loc(#loc87)
    %141 = arith.muli %28, %cst : tensor<1x32xi32, #blocked> loc(#loc88)
    %142 = tt.broadcast %141 : tensor<1x32xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc89)
    %143 = arith.addi %140, %142 : tensor<32x32xi32, #blocked> loc(#loc89)
    %144 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x32x!tt.ptr<f32>, #blocked> loc(#loc90)
    %145 = tt.addptr %144, %143 : tensor<32x32x!tt.ptr<f32>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc90)
    %146 = triton_gpu.convert_layout %136 : tensor<32x32xf32, #blocked1> -> tensor<32x32xf32, #blocked> loc(#loc91)
    tt.store %145, %146, %47 : tensor<32x32x!tt.ptr<f32>, #blocked> loc(#loc91)
    tt.return loc(#loc92)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":22:28)
#loc3 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":22:33)
#loc4 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":23:44)
#loc5 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":23:23)
#loc6 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":24:21)
#loc7 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":25:28)
#loc8 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":25:33)
#loc9 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":26:44)
#loc10 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":26:23)
#loc11 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":27:21)
#loc12 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":29:19)
#loc13 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":30:21)
#loc14 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":30:27)
#loc15 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":31:19)
#loc16 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":32:19)
#loc17 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":33:39)
#loc18 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":33:35)
#loc19 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":33:50)
#loc20 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":33:44)
#loc21 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":33:62)
#loc22 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":33:55)
#loc23 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":33:30)
#loc24 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":33:75)
#loc25 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":33:67)
#loc26 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":34:36)
#loc27 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":34:41)
#loc28 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":34:50)
#loc29 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":34:61)
#loc30 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":34:30)
#loc31 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":34:73)
#loc32 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":35:36)
#loc33 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":35:41)
#loc34 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":35:50)
#loc35 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":35:61)
#loc36 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":35:30)
#loc37 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":35:73)
#loc38 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":36:38)
#loc39 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":36:43)
#loc40 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":36:52)
#loc41 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":36:63)
#loc42 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":36:30)
#loc43 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":36:75)
#loc44 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":37:38)
#loc45 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":37:43)
#loc46 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":37:52)
#loc47 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":37:63)
#loc48 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":37:30)
#loc49 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":37:75)
#loc50 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":38:38)
#loc51 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":38:43)
#loc52 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":38:52)
#loc53 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":38:63)
#loc54 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":38:30)
#loc55 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":38:75)
#loc56 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":39:39)
#loc57 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":39:44)
#loc58 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":39:53)
#loc59 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":39:64)
#loc60 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":39:31)
#loc61 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":39:76)
#loc62 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":40:39)
#loc63 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":40:44)
#loc64 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":40:53)
#loc65 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":40:64)
#loc66 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":40:31)
#loc67 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":40:76)
#loc68 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":41:39)
#loc69 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":41:44)
#loc70 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":41:53)
#loc71 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":41:64)
#loc72 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":41:31)
#loc73 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":41:76)
#loc74 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc75 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":42:40)
#loc76 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc77 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc78 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc79 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":43:40)
#loc80 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":44:40)
#loc81 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":45:40)
#loc82 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":46:41)
#loc83 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":47:42)
#loc84 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":48:42)
#loc85 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":49:42)
#loc86 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":50:34)
#loc87 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":50:30)
#loc88 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":50:46)
#loc89 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":50:39)
#loc90 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":50:25)
#loc91 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":50:58)
#loc92 = loc("inductor_cache/4s/c4sfpfu72clamsxua7jgw2mqb33ubf3tkwfk3z3757pfy2tmcm2v.py":50:4)
#loc93 = loc(callsite(#loc74 at #loc75))
#loc94 = loc(callsite(#loc76 at #loc75))
#loc95 = loc(callsite(#loc77 at #loc75))
#loc96 = loc(callsite(#loc78 at #loc75))
#loc97 = loc(callsite(#loc74 at #loc79))
#loc98 = loc(callsite(#loc76 at #loc79))
#loc99 = loc(callsite(#loc77 at #loc79))
#loc100 = loc(callsite(#loc78 at #loc79))
#loc101 = loc(callsite(#loc74 at #loc80))
#loc102 = loc(callsite(#loc76 at #loc80))
#loc103 = loc(callsite(#loc77 at #loc80))
#loc104 = loc(callsite(#loc78 at #loc80))
#loc105 = loc(callsite(#loc74 at #loc81))
#loc106 = loc(callsite(#loc76 at #loc81))
#loc107 = loc(callsite(#loc77 at #loc81))
#loc108 = loc(callsite(#loc78 at #loc81))
#loc109 = loc(callsite(#loc74 at #loc82))
#loc110 = loc(callsite(#loc76 at #loc82))
#loc111 = loc(callsite(#loc77 at #loc82))
#loc112 = loc(callsite(#loc78 at #loc82))
#loc113 = loc(callsite(#loc74 at #loc83))
#loc114 = loc(callsite(#loc76 at #loc83))
#loc115 = loc(callsite(#loc77 at #loc83))
#loc116 = loc(callsite(#loc78 at #loc83))
#loc117 = loc(callsite(#loc74 at #loc84))
#loc118 = loc(callsite(#loc76 at #loc84))
#loc119 = loc(callsite(#loc77 at #loc84))
#loc120 = loc(callsite(#loc78 at #loc84))
#loc121 = loc(callsite(#loc74 at #loc85))
#loc122 = loc(callsite(#loc76 at #loc85))
#loc123 = loc(callsite(#loc77 at #loc85))
#loc124 = loc(callsite(#loc78 at #loc85))
