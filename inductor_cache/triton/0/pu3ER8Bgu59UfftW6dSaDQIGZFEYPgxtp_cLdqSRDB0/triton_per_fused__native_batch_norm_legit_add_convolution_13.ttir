#loc = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":19:0)
#loc1 = loc(unknown)
#loc15 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":39:57)
#loc22 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":46:59)
#loc37 = loc(callsite(#loc1 at #loc15))
#loc41 = loc(callsite(#loc1 at #loc22))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_add_convolution_13(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_0 = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc3)
    %2 = arith.remsi %0, %c256_i32 : i32 loc(#loc4)
    %3 = arith.muli %0, %c256_i32 : i32 loc(#loc5)
    %4 = tt.splat %3 : i32 -> tensor<256xi32> loc(#loc6)
    %5 = arith.addi %1, %4 : tensor<256xi32> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc7)
    %7 = tt.addptr %6, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc7)
    %8 = tt.load %7 : tensor<256x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %arg2, %2 : !tt.ptr<f32>, i32 loc(#loc9)
    %10 = tt.splat %9 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc9)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<1x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.addptr %12, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc11)
    %14 = tt.load %13 : tensor<256x!tt.ptr<f32>> loc(#loc12)
    %15 = tt.broadcast %11 : tensor<1xf32> -> tensor<256xf32> loc(#loc13)
    %16 = arith.addf %8, %15 : tensor<256xf32> loc(#loc13)
    %17 = "tt.reduce"(%16) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc15)), %arg8: f32 loc(callsite(#loc1 at #loc15))):
      %37 = arith.addf %arg7, %arg8 : f32 loc(#loc43)
      tt.reduce.return %37 : f32 loc(#loc36)
    }) : (tensor<256xf32>) -> f32 loc(#loc36)
    %18 = arith.addf %17, %cst_1 : f32 loc(#loc39)
    %19 = arith.divf %18, %cst_0 : f32 loc(#loc19)
    %20 = tt.splat %19 : f32 -> tensor<1xf32> loc(#loc19)
    %21 = tt.splat %19 : f32 -> tensor<256xf32> loc(#loc20)
    %22 = arith.subf %16, %21 : tensor<256xf32> loc(#loc20)
    %23 = arith.mulf %22, %22 : tensor<256xf32> loc(#loc21)
    %24 = "tt.reduce"(%23) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc22)), %arg8: f32 loc(callsite(#loc1 at #loc22))):
      %37 = arith.addf %arg7, %arg8 : f32 loc(#loc44)
      tt.reduce.return %37 : f32 loc(#loc40)
    }) : (tensor<256xf32>) -> f32 loc(#loc40)
    %25 = arith.addf %24, %cst_1 : f32 loc(#loc42)
    %26 = arith.divf %25, %cst_0 : f32 loc(#loc24)
    %27 = arith.addf %26, %cst : f32 loc(#loc25)
    %28 = tt.extern_elementwise %27 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc26)
    %29 = tt.splat %28 : f32 -> tensor<1xf32> loc(#loc26)
    %30 = tt.splat %28 : f32 -> tensor<256xf32> loc(#loc27)
    %31 = arith.mulf %22, %30 : tensor<256xf32> loc(#loc27)
    %32 = arith.addf %14, %31 : tensor<256xf32> loc(#loc28)
    tt.store %7, %16 : tensor<256x!tt.ptr<f32>> loc(#loc29)
    tt.store %13, %32 : tensor<256x!tt.ptr<f32>> loc(#loc30)
    %33 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc31)
    %34 = tt.splat %33 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc31)
    tt.store %34, %29 : tensor<1x!tt.ptr<f32>> loc(#loc32)
    %35 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc33)
    %36 = tt.splat %35 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc33)
    tt.store %36, %20 : tensor<1x!tt.ptr<f32>> loc(#loc34)
    tt.return loc(#loc35)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":24:28)
#loc3 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":27:26)
#loc4 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":32:19)
#loc5 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":33:43)
#loc6 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":33:39)
#loc7 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":33:34)
#loc8 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":33:48)
#loc9 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":34:30)
#loc10 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":34:35)
#loc11 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":35:35)
#loc12 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":35:49)
#loc13 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":36:18)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc18 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":39:44)
#loc19 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":42:19)
#loc20 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":43:19)
#loc21 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":44:20)
#loc23 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":46:45)
#loc24 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":49:20)
#loc25 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":51:20)
#loc26 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":52:28)
#loc27 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":53:20)
#loc28 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":54:20)
#loc29 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":55:48)
#loc30 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":56:49)
#loc31 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":57:25)
#loc32 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":57:37)
#loc33 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":58:25)
#loc34 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":58:37)
#loc35 = loc("inductor_cache/xy/cxyah6zjvm3n3g6lgzux7l47iaoo6szjbc4lqxsrzo6hsvyn23s3.py":58:4)
#loc36 = loc(callsite(#loc14 at #loc15))
#loc38 = loc(callsite(#loc16 at #loc14))
#loc39 = loc(callsite(#loc17 at #loc18))
#loc40 = loc(callsite(#loc14 at #loc22))
#loc42 = loc(callsite(#loc17 at #loc23))
#loc43 = loc(callsite(#loc38 at #loc15))
#loc44 = loc(callsite(#loc38 at #loc22))
