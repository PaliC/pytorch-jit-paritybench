//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_log10_mse_loss_mul_reciprocal_0 // -- Begin function triton_per_fused_log10_mse_loss_mul_reciprocal_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_log10_mse_loss_mul_reciprocal_0
.visible .entry triton_per_fused_log10_mse_loss_mul_reciprocal_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_log10_mse_loss_mul_reciprocal_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_log10_mse_loss_mul_reciprocal_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_log10_mse_loss_mul_reciprocal_0_param_2,
	.param .u32 triton_per_fused_log10_mse_loss_mul_reciprocal_0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<46>;
	.reg .f32 	%f<69>;
	.reg .b64 	%rd<8>;
	.loc	1 19 0                          // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_per_fused_log10_mse_loss_mul_reciprocal_0_param_0];
$L__tmp0:
	.loc	1 27 26                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:27:26
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd4, [triton_per_fused_log10_mse_loss_mul_reciprocal_0_param_1];
	and.b32  	%r22, %r1, 31;
	ld.param.u64 	%rd5, [triton_per_fused_log10_mse_loss_mul_reciprocal_0_param_2];
	shl.b32 	%r23, %r1, 2;
	and.b32  	%r24, %r23, 252;
	.loc	1 31 30                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:31:30
	mul.wide.u32 	%rd6, %r24, 4;
	add.s64 	%rd2, %rd4, %rd6;
	mov.pred 	%p1, -1;
	.loc	1 31 35                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:31:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 32 30                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:32:30
	add.s64 	%rd3, %rd5, %rd6;
	.loc	1 32 35                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:32:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 31 35                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:31:35
	mov.b32 	%f5, %r3;
	mov.b32 	%f6, %r2;
	.loc	1 32 35                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:32:35
	mov.b32 	%f7, %r7;
	mov.b32 	%f8, %r6;
	.loc	1 33 18                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:33:18
	sub.f32 	%f9, %f6, %f8;
	sub.f32 	%f10, %f5, %f7;
	.loc	1 34 18                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:34:18
	mul.f32 	%f11, %f10, %f10;
	.loc	1 31 35                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:31:35
	mov.b32 	%f12, %r4;
	mov.b32 	%f13, %r5;
	.loc	1 32 35                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:32:35
	mov.b32 	%f14, %r8;
	mov.b32 	%f15, %r9;
	.loc	1 33 18                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:33:18
	sub.f32 	%f16, %f13, %f15;
	sub.f32 	%f17, %f12, %f14;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f18, %f9, %f9, %f11;
	fma.rn.f32 	%f19, %f17, %f17, %f18;
	fma.rn.f32 	%f20, %f16, %f16, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r25, %f20;
	shfl.sync.bfly.b32	%r26, %r25, 16, 31, -1;
	mov.b32 	%f21, %r26;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r27, %f22;
	shfl.sync.bfly.b32	%r28, %r27, 8, 31, -1;
	mov.b32 	%f23, %r28;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r29, %f24;
	shfl.sync.bfly.b32	%r30, %r29, 4, 31, -1;
	mov.b32 	%f25, %r30;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r31, %f26;
	shfl.sync.bfly.b32	%r32, %r31, 2, 31, -1;
	mov.b32 	%f27, %r32;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f28;
	shfl.sync.bfly.b32	%r34, %r33, 1, 31, -1;
	mov.b32 	%f29, %r34;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p3, %r22, 0;
	shr.u32 	%r35, %r1, 3;
	and.b32  	%r36, %r35, 4;
	mov.u32 	%r37, global_smem;
	add.s32 	%r10, %r37, %r36;
	mov.b32 	%r11, %f30;
	// begin inline asm
	@%p3 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p4, %r1, 2;
	add.s32 	%r13, %r37, %r23;
	// begin inline asm
	@%p4 ld.shared.b32 %r12, [ %r13 + 0 ];
	// end inline asm
	mov.b32 	%f31, %r12;
	shfl.sync.bfly.b32	%r38, %r12, 1, 31, -1;
	mov.b32 	%f32, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r39, %r1, 1;
	setp.eq.b32 	%p6, %r39, 1;
	not.pred 	%p7, %p6;
	and.pred  	%p5, %p4, %p7;
	mov.b32 	%r15, %f33;
	// begin inline asm
	@%p5 st.shared.b32 [ %r13 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f34, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f35, %f34, 0f00000000;
$L__tmp3:
	.loc	1 38 18                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:38:18
	mov.b32 	%r17, %f35;
	mov.b32 	%r18, 1132462080;
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%r20, 1065353216;
	.loc	1 40 19                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:40:19
	// begin inline asm
	div.full.f32 %r19, %r20, %r16;
	// end inline asm
	mov.b32 	%f36, %r19;
	.loc	1 43 28                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:43:28
	setp.lt.f32 	%p8, %f36, 0f00800000;
	mul.f32 	%f37, %f36, 0f4B000000;
	selp.f32 	%f1, %f37, %f36, %p8;
	selp.f32 	%f38, 0fC1B80000, 0f00000000, %p8;
	mov.b32 	%r40, %f1;
	add.s32 	%r41, %r40, -1059760811;
	and.b32  	%r42, %r41, -8388608;
	sub.s32 	%r43, %r40, %r42;
	mov.b32 	%f39, %r43;
	cvt.rn.f32.s32 	%f40, %r42;
	mov.f32 	%f41, 0f34000000;
	fma.rn.ftz.f32 	%f42, %f40, %f41, %f38;
	add.f32 	%f43, %f39, 0fBF800000;
	mov.f32 	%f44, 0f3E1039F6;
	mov.f32 	%f45, 0fBE055027;
	fma.rn.ftz.f32 	%f46, %f45, %f43, %f44;
	mov.f32 	%f47, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f48, %f46, %f43, %f47;
	mov.f32 	%f49, 0f3E0F2955;
	fma.rn.ftz.f32 	%f50, %f48, %f43, %f49;
	mov.f32 	%f51, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f52, %f50, %f43, %f51;
	mov.f32 	%f53, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f54, %f52, %f43, %f53;
	mov.f32 	%f55, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f56, %f54, %f43, %f55;
	mov.f32 	%f57, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f58, %f56, %f43, %f57;
	mov.f32 	%f59, 0fBF000000;
	fma.rn.ftz.f32 	%f60, %f58, %f43, %f59;
	mul.f32 	%f61, %f43, %f60;
	fma.rn.ftz.f32 	%f62, %f61, %f43, %f43;
	mov.f32 	%f63, 0f3F317218;
	fma.rn.ftz.f32 	%f68, %f42, %f63, %f62;
	setp.lt.u32 	%p9, %r40, 2139095040;
	@%p9 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 28                          // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:0:28
	mov.f32 	%f64, 0f7F800000;
	fma.rn.ftz.f32 	%f68, %f1, %f64, %f64;
$L__BB0_2:                              // %__nv_log10f.exit
	.loc	1 43 28                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:43:28
	setp.eq.f32 	%p11, %f1, 0f00000000;
	mul.f32 	%f65, %f68, 0f3EDE5BD9;
	.loc	1 45 20                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:45:20
	mul.f32 	%f66, %f65, 0f41200000;
	.loc	1 43 28                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:43:28
	selp.f32 	%f67, 0fFF800000, %f66, %p11;
	.loc	1 46 4                          // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:46:4
	bar.sync 	0;
	.loc	1 47 63                         // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:47:63
	and.b32  	%r45, %r1, 63;
	setp.eq.s32 	%p10, %r45, 0;
	mov.b32 	%r44, %f67;
	// begin inline asm
	@%p10 st.global.b32 [ %rd7 + 0 ], { %r44 };
	// end inline asm
	.loc	1 47 4                          // ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py:47:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/k4/ck4x6i2ls37powxbfj3xaaocwftowg3wgyzuief5ijjzornkp7yw.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 217                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 52
.b8 120
.b8 54
.b8 105
.b8 50
.b8 108
.b8 115
.b8 51
.b8 55
.b8 112
.b8 111
.b8 119
.b8 120
.b8 98
.b8 102
.b8 106
.b8 51
.b8 120
.b8 97
.b8 97
.b8 111
.b8 99
.b8 119
.b8 102
.b8 116
.b8 111
.b8 119
.b8 103
.b8 51
.b8 119
.b8 103
.b8 121
.b8 122
.b8 117
.b8 105
.b8 101
.b8 102
.b8 53
.b8 105
.b8 106
.b8 106
.b8 122
.b8 111
.b8 114
.b8 110
.b8 107
.b8 112
.b8 55
.b8 121
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x33 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 108
.b8 111
.b8 103
.b8 49
.b8 48
.b8 95
.b8 109
.b8 115
.b8 101
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 101
.b8 99
.b8 105
.b8 112
.b8 114
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x96:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xab:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
