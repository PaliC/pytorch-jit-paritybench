; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_avg_pool2d_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 2304, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %12 = sdiv i32 %.frozen, 12, !dbg !15
  %13 = mul i32 %12, 12, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = srem i32 %10, 12, !dbg !16
  %15 = srem i32 %12, 12, !dbg !17
  %16 = sdiv i32 %9, 144, !dbg !18
  %17 = mul nsw i32 %.decomposed, 5, !dbg !19
  %18 = mul nsw i32 %14, 5, !dbg !19
  %19 = mul nsw i32 %15, 320, !dbg !20
  %20 = shl i32 %16, 12, !dbg !21
  %21 = add i32 %19, %20, !dbg !22
  %22 = add i32 %21, %17, !dbg !23
  %23 = add i32 %21, %18, !dbg !23
  %24 = sext i32 %22 to i64, !dbg !24
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !24
  %26 = sext i32 %23 to i64, !dbg !24
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !24
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %11) #1, !dbg !25
  %29 = bitcast i32 %28 to float, !dbg !25
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %11) #1, !dbg !25
  %31 = bitcast i32 %30 to float, !dbg !25
  %32 = or disjoint i32 %21, 1, !dbg !26
  %33 = add i32 %32, %17, !dbg !27
  %34 = add i32 %32, %18, !dbg !27
  %35 = sext i32 %33 to i64, !dbg !28
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !28
  %37 = sext i32 %34 to i64, !dbg !28
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !28
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %11) #1, !dbg !29
  %40 = bitcast i32 %39 to float, !dbg !29
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %11) #1, !dbg !29
  %42 = bitcast i32 %41 to float, !dbg !29
  %43 = or disjoint i32 %21, 2, !dbg !30
  %44 = add i32 %43, %17, !dbg !31
  %45 = add i32 %43, %18, !dbg !31
  %46 = sext i32 %44 to i64, !dbg !32
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !32
  %48 = sext i32 %45 to i64, !dbg !32
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !32
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 %11) #1, !dbg !33
  %51 = bitcast i32 %50 to float, !dbg !33
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %11) #1, !dbg !33
  %53 = bitcast i32 %52 to float, !dbg !33
  %54 = or disjoint i32 %21, 3, !dbg !34
  %55 = add i32 %54, %17, !dbg !35
  %56 = add i32 %54, %18, !dbg !35
  %57 = sext i32 %55 to i64, !dbg !36
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !36
  %59 = sext i32 %56 to i64, !dbg !36
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !36
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 %11) #1, !dbg !37
  %62 = bitcast i32 %61 to float, !dbg !37
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 %11) #1, !dbg !37
  %64 = bitcast i32 %63 to float, !dbg !37
  %65 = or disjoint i32 %21, 4, !dbg !38
  %66 = add i32 %65, %17, !dbg !39
  %67 = add i32 %65, %18, !dbg !39
  %68 = sext i32 %66 to i64, !dbg !40
  %69 = getelementptr float, ptr addrspace(1) %0, i64 %68, !dbg !40
  %70 = sext i32 %67 to i64, !dbg !40
  %71 = getelementptr float, ptr addrspace(1) %0, i64 %70, !dbg !40
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %69, i1 %11) #1, !dbg !41
  %73 = bitcast i32 %72 to float, !dbg !41
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %71, i1 %11) #1, !dbg !41
  %75 = bitcast i32 %74 to float, !dbg !41
  %76 = add i32 %21, 64, !dbg !42
  %77 = add i32 %76, %17, !dbg !43
  %78 = add i32 %76, %18, !dbg !43
  %79 = sext i32 %77 to i64, !dbg !44
  %80 = getelementptr float, ptr addrspace(1) %0, i64 %79, !dbg !44
  %81 = sext i32 %78 to i64, !dbg !44
  %82 = getelementptr float, ptr addrspace(1) %0, i64 %81, !dbg !44
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 %11) #1, !dbg !45
  %84 = bitcast i32 %83 to float, !dbg !45
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %82, i1 %11) #1, !dbg !45
  %86 = bitcast i32 %85 to float, !dbg !45
  %87 = add i32 %21, 65, !dbg !46
  %88 = add i32 %87, %17, !dbg !47
  %89 = add i32 %87, %18, !dbg !47
  %90 = sext i32 %88 to i64, !dbg !48
  %91 = getelementptr float, ptr addrspace(1) %0, i64 %90, !dbg !48
  %92 = sext i32 %89 to i64, !dbg !48
  %93 = getelementptr float, ptr addrspace(1) %0, i64 %92, !dbg !48
  %94 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %91, i1 %11) #1, !dbg !49
  %95 = bitcast i32 %94 to float, !dbg !49
  %96 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %93, i1 %11) #1, !dbg !49
  %97 = bitcast i32 %96 to float, !dbg !49
  %98 = add i32 %21, 66, !dbg !50
  %99 = add i32 %98, %17, !dbg !51
  %100 = add i32 %98, %18, !dbg !51
  %101 = sext i32 %99 to i64, !dbg !52
  %102 = getelementptr float, ptr addrspace(1) %0, i64 %101, !dbg !52
  %103 = sext i32 %100 to i64, !dbg !52
  %104 = getelementptr float, ptr addrspace(1) %0, i64 %103, !dbg !52
  %105 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %102, i1 %11) #1, !dbg !53
  %106 = bitcast i32 %105 to float, !dbg !53
  %107 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %104, i1 %11) #1, !dbg !53
  %108 = bitcast i32 %107 to float, !dbg !53
  %109 = add i32 %21, 67, !dbg !54
  %110 = add i32 %109, %17, !dbg !55
  %111 = add i32 %109, %18, !dbg !55
  %112 = sext i32 %110 to i64, !dbg !56
  %113 = getelementptr float, ptr addrspace(1) %0, i64 %112, !dbg !56
  %114 = sext i32 %111 to i64, !dbg !56
  %115 = getelementptr float, ptr addrspace(1) %0, i64 %114, !dbg !56
  %116 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %113, i1 %11) #1, !dbg !57
  %117 = bitcast i32 %116 to float, !dbg !57
  %118 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %115, i1 %11) #1, !dbg !57
  %119 = bitcast i32 %118 to float, !dbg !57
  %120 = add i32 %21, 68, !dbg !58
  %121 = add i32 %120, %17, !dbg !59
  %122 = add i32 %120, %18, !dbg !59
  %123 = sext i32 %121 to i64, !dbg !60
  %124 = getelementptr float, ptr addrspace(1) %0, i64 %123, !dbg !60
  %125 = sext i32 %122 to i64, !dbg !60
  %126 = getelementptr float, ptr addrspace(1) %0, i64 %125, !dbg !60
  %127 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %124, i1 %11) #1, !dbg !61
  %128 = bitcast i32 %127 to float, !dbg !61
  %129 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %126, i1 %11) #1, !dbg !61
  %130 = bitcast i32 %129 to float, !dbg !61
  %131 = add i32 %21, 128, !dbg !62
  %132 = add i32 %131, %17, !dbg !63
  %133 = add i32 %131, %18, !dbg !63
  %134 = sext i32 %132 to i64, !dbg !64
  %135 = getelementptr float, ptr addrspace(1) %0, i64 %134, !dbg !64
  %136 = sext i32 %133 to i64, !dbg !64
  %137 = getelementptr float, ptr addrspace(1) %0, i64 %136, !dbg !64
  %138 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %135, i1 %11) #1, !dbg !65
  %139 = bitcast i32 %138 to float, !dbg !65
  %140 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %137, i1 %11) #1, !dbg !65
  %141 = bitcast i32 %140 to float, !dbg !65
  %142 = add i32 %21, 129, !dbg !66
  %143 = add i32 %142, %17, !dbg !67
  %144 = add i32 %142, %18, !dbg !67
  %145 = sext i32 %143 to i64, !dbg !68
  %146 = getelementptr float, ptr addrspace(1) %0, i64 %145, !dbg !68
  %147 = sext i32 %144 to i64, !dbg !68
  %148 = getelementptr float, ptr addrspace(1) %0, i64 %147, !dbg !68
  %149 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %146, i1 %11) #1, !dbg !69
  %150 = bitcast i32 %149 to float, !dbg !69
  %151 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %148, i1 %11) #1, !dbg !69
  %152 = bitcast i32 %151 to float, !dbg !69
  %153 = add i32 %21, 130, !dbg !70
  %154 = add i32 %153, %17, !dbg !71
  %155 = add i32 %153, %18, !dbg !71
  %156 = sext i32 %154 to i64, !dbg !72
  %157 = getelementptr float, ptr addrspace(1) %0, i64 %156, !dbg !72
  %158 = sext i32 %155 to i64, !dbg !72
  %159 = getelementptr float, ptr addrspace(1) %0, i64 %158, !dbg !72
  %160 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %157, i1 %11) #1, !dbg !73
  %161 = bitcast i32 %160 to float, !dbg !73
  %162 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %159, i1 %11) #1, !dbg !73
  %163 = bitcast i32 %162 to float, !dbg !73
  %164 = add i32 %21, 131, !dbg !74
  %165 = add i32 %164, %17, !dbg !75
  %166 = add i32 %164, %18, !dbg !75
  %167 = sext i32 %165 to i64, !dbg !76
  %168 = getelementptr float, ptr addrspace(1) %0, i64 %167, !dbg !76
  %169 = sext i32 %166 to i64, !dbg !76
  %170 = getelementptr float, ptr addrspace(1) %0, i64 %169, !dbg !76
  %171 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %168, i1 %11) #1, !dbg !77
  %172 = bitcast i32 %171 to float, !dbg !77
  %173 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %170, i1 %11) #1, !dbg !77
  %174 = bitcast i32 %173 to float, !dbg !77
  %175 = add i32 %21, 132, !dbg !78
  %176 = add i32 %175, %17, !dbg !79
  %177 = add i32 %175, %18, !dbg !79
  %178 = sext i32 %176 to i64, !dbg !80
  %179 = getelementptr float, ptr addrspace(1) %0, i64 %178, !dbg !80
  %180 = sext i32 %177 to i64, !dbg !80
  %181 = getelementptr float, ptr addrspace(1) %0, i64 %180, !dbg !80
  %182 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %179, i1 %11) #1, !dbg !81
  %183 = bitcast i32 %182 to float, !dbg !81
  %184 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %181, i1 %11) #1, !dbg !81
  %185 = bitcast i32 %184 to float, !dbg !81
  %186 = add i32 %21, 192, !dbg !82
  %187 = add i32 %186, %17, !dbg !83
  %188 = add i32 %186, %18, !dbg !83
  %189 = sext i32 %187 to i64, !dbg !84
  %190 = getelementptr float, ptr addrspace(1) %0, i64 %189, !dbg !84
  %191 = sext i32 %188 to i64, !dbg !84
  %192 = getelementptr float, ptr addrspace(1) %0, i64 %191, !dbg !84
  %193 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %190, i1 %11) #1, !dbg !85
  %194 = bitcast i32 %193 to float, !dbg !85
  %195 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %192, i1 %11) #1, !dbg !85
  %196 = bitcast i32 %195 to float, !dbg !85
  %197 = add i32 %21, 193, !dbg !86
  %198 = add i32 %197, %17, !dbg !87
  %199 = add i32 %197, %18, !dbg !87
  %200 = sext i32 %198 to i64, !dbg !88
  %201 = getelementptr float, ptr addrspace(1) %0, i64 %200, !dbg !88
  %202 = sext i32 %199 to i64, !dbg !88
  %203 = getelementptr float, ptr addrspace(1) %0, i64 %202, !dbg !88
  %204 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %201, i1 %11) #1, !dbg !89
  %205 = bitcast i32 %204 to float, !dbg !89
  %206 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %203, i1 %11) #1, !dbg !89
  %207 = bitcast i32 %206 to float, !dbg !89
  %208 = add i32 %21, 194, !dbg !90
  %209 = add i32 %208, %17, !dbg !91
  %210 = add i32 %208, %18, !dbg !91
  %211 = sext i32 %209 to i64, !dbg !92
  %212 = getelementptr float, ptr addrspace(1) %0, i64 %211, !dbg !92
  %213 = sext i32 %210 to i64, !dbg !92
  %214 = getelementptr float, ptr addrspace(1) %0, i64 %213, !dbg !92
  %215 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %212, i1 %11) #1, !dbg !93
  %216 = bitcast i32 %215 to float, !dbg !93
  %217 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %214, i1 %11) #1, !dbg !93
  %218 = bitcast i32 %217 to float, !dbg !93
  %219 = add i32 %21, 195, !dbg !94
  %220 = add i32 %219, %17, !dbg !95
  %221 = add i32 %219, %18, !dbg !95
  %222 = sext i32 %220 to i64, !dbg !96
  %223 = getelementptr float, ptr addrspace(1) %0, i64 %222, !dbg !96
  %224 = sext i32 %221 to i64, !dbg !96
  %225 = getelementptr float, ptr addrspace(1) %0, i64 %224, !dbg !96
  %226 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %223, i1 %11) #1, !dbg !97
  %227 = bitcast i32 %226 to float, !dbg !97
  %228 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %225, i1 %11) #1, !dbg !97
  %229 = bitcast i32 %228 to float, !dbg !97
  %230 = add i32 %21, 196, !dbg !98
  %231 = add i32 %230, %17, !dbg !99
  %232 = add i32 %230, %18, !dbg !99
  %233 = sext i32 %231 to i64, !dbg !100
  %234 = getelementptr float, ptr addrspace(1) %0, i64 %233, !dbg !100
  %235 = sext i32 %232 to i64, !dbg !100
  %236 = getelementptr float, ptr addrspace(1) %0, i64 %235, !dbg !100
  %237 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %234, i1 %11) #1, !dbg !101
  %238 = bitcast i32 %237 to float, !dbg !101
  %239 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %236, i1 %11) #1, !dbg !101
  %240 = bitcast i32 %239 to float, !dbg !101
  %241 = add i32 %21, 256, !dbg !102
  %242 = add i32 %241, %17, !dbg !103
  %243 = add i32 %241, %18, !dbg !103
  %244 = sext i32 %242 to i64, !dbg !104
  %245 = getelementptr float, ptr addrspace(1) %0, i64 %244, !dbg !104
  %246 = sext i32 %243 to i64, !dbg !104
  %247 = getelementptr float, ptr addrspace(1) %0, i64 %246, !dbg !104
  %248 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %245, i1 %11) #1, !dbg !105
  %249 = bitcast i32 %248 to float, !dbg !105
  %250 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %247, i1 %11) #1, !dbg !105
  %251 = bitcast i32 %250 to float, !dbg !105
  %252 = add i32 %21, 257, !dbg !106
  %253 = add i32 %252, %17, !dbg !107
  %254 = add i32 %252, %18, !dbg !107
  %255 = sext i32 %253 to i64, !dbg !108
  %256 = getelementptr float, ptr addrspace(1) %0, i64 %255, !dbg !108
  %257 = sext i32 %254 to i64, !dbg !108
  %258 = getelementptr float, ptr addrspace(1) %0, i64 %257, !dbg !108
  %259 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %256, i1 %11) #1, !dbg !109
  %260 = bitcast i32 %259 to float, !dbg !109
  %261 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %258, i1 %11) #1, !dbg !109
  %262 = bitcast i32 %261 to float, !dbg !109
  %263 = add i32 %21, 258, !dbg !110
  %264 = add i32 %263, %17, !dbg !111
  %265 = add i32 %263, %18, !dbg !111
  %266 = sext i32 %264 to i64, !dbg !112
  %267 = getelementptr float, ptr addrspace(1) %0, i64 %266, !dbg !112
  %268 = sext i32 %265 to i64, !dbg !112
  %269 = getelementptr float, ptr addrspace(1) %0, i64 %268, !dbg !112
  %270 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %267, i1 %11) #1, !dbg !113
  %271 = bitcast i32 %270 to float, !dbg !113
  %272 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %269, i1 %11) #1, !dbg !113
  %273 = bitcast i32 %272 to float, !dbg !113
  %274 = add i32 %21, 259, !dbg !114
  %275 = add i32 %274, %17, !dbg !115
  %276 = add i32 %274, %18, !dbg !115
  %277 = sext i32 %275 to i64, !dbg !116
  %278 = getelementptr float, ptr addrspace(1) %0, i64 %277, !dbg !116
  %279 = sext i32 %276 to i64, !dbg !116
  %280 = getelementptr float, ptr addrspace(1) %0, i64 %279, !dbg !116
  %281 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %278, i1 %11) #1, !dbg !117
  %282 = bitcast i32 %281 to float, !dbg !117
  %283 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %280, i1 %11) #1, !dbg !117
  %284 = bitcast i32 %283 to float, !dbg !117
  %285 = add i32 %21, 260, !dbg !118
  %286 = add i32 %285, %17, !dbg !119
  %287 = add i32 %285, %18, !dbg !119
  %288 = sext i32 %286 to i64, !dbg !120
  %289 = getelementptr float, ptr addrspace(1) %0, i64 %288, !dbg !120
  %290 = sext i32 %287 to i64, !dbg !120
  %291 = getelementptr float, ptr addrspace(1) %0, i64 %290, !dbg !120
  %292 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %289, i1 %11) #1, !dbg !121
  %293 = bitcast i32 %292 to float, !dbg !121
  %294 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %291, i1 %11) #1, !dbg !121
  %295 = bitcast i32 %294 to float, !dbg !121
  %296 = fadd float %29, %40, !dbg !122
  %297 = fadd float %31, %42, !dbg !122
  %298 = fadd float %296, %51, !dbg !123
  %299 = fadd float %297, %53, !dbg !123
  %300 = fadd float %298, %62, !dbg !124
  %301 = fadd float %299, %64, !dbg !124
  %302 = fadd float %300, %73, !dbg !125
  %303 = fadd float %301, %75, !dbg !125
  %304 = fadd float %302, %84, !dbg !126
  %305 = fadd float %303, %86, !dbg !126
  %306 = fadd float %304, %95, !dbg !127
  %307 = fadd float %305, %97, !dbg !127
  %308 = fadd float %306, %106, !dbg !128
  %309 = fadd float %307, %108, !dbg !128
  %310 = fadd float %308, %117, !dbg !129
  %311 = fadd float %309, %119, !dbg !129
  %312 = fadd float %310, %128, !dbg !130
  %313 = fadd float %311, %130, !dbg !130
  %314 = fadd float %312, %139, !dbg !131
  %315 = fadd float %313, %141, !dbg !131
  %316 = fadd float %314, %150, !dbg !132
  %317 = fadd float %315, %152, !dbg !132
  %318 = fadd float %316, %161, !dbg !133
  %319 = fadd float %317, %163, !dbg !133
  %320 = fadd float %318, %172, !dbg !134
  %321 = fadd float %319, %174, !dbg !134
  %322 = fadd float %320, %183, !dbg !135
  %323 = fadd float %321, %185, !dbg !135
  %324 = fadd float %322, %194, !dbg !136
  %325 = fadd float %323, %196, !dbg !136
  %326 = fadd float %324, %205, !dbg !137
  %327 = fadd float %325, %207, !dbg !137
  %328 = fadd float %326, %216, !dbg !138
  %329 = fadd float %327, %218, !dbg !138
  %330 = fadd float %328, %227, !dbg !139
  %331 = fadd float %329, %229, !dbg !139
  %332 = fadd float %330, %238, !dbg !140
  %333 = fadd float %331, %240, !dbg !140
  %334 = fadd float %332, %249, !dbg !141
  %335 = fadd float %333, %251, !dbg !141
  %336 = fadd float %334, %260, !dbg !142
  %337 = fadd float %335, %262, !dbg !142
  %338 = fadd float %336, %271, !dbg !143
  %339 = fadd float %337, %273, !dbg !143
  %340 = fadd float %338, %282, !dbg !144
  %341 = fadd float %339, %284, !dbg !144
  %342 = fadd float %340, %293, !dbg !145
  %343 = fadd float %341, %295, !dbg !145
  %344 = fmul float %342, 0x3FA47AE140000000, !dbg !146
  %345 = fmul float %343, 0x3FA47AE140000000, !dbg !146
  %346 = sext i32 %9 to i64, !dbg !147
  %347 = getelementptr float, ptr addrspace(1) %1, i64 %346, !dbg !147
  %348 = bitcast float %344 to i32, !dbg !148
  %349 = bitcast float %345 to i32, !dbg !148
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %348, i32 %349, ptr addrspace(1) %347, i1 %11) #1, !dbg !148
  ret void, !dbg !149
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cxbycfyspblniavxa4j2z2y3nlk7745b3likxqzffugzerfmmzbf.py", directory: "inductor_cache/xb")
!4 = !{ptr @triton_poi_fused_avg_pool2d_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_0", linkageName: "triton_poi_fused_avg_pool2d_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 27, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 32, scope: !7)
!20 = !DILocation(line: 28, column: 41, scope: !7)
!21 = !DILocation(line: 28, column: 51, scope: !7)
!22 = !DILocation(line: 28, column: 37, scope: !7)
!23 = !DILocation(line: 28, column: 46, scope: !7)
!24 = !DILocation(line: 28, column: 30, scope: !7)
!25 = !DILocation(line: 28, column: 56, scope: !7)
!26 = !DILocation(line: 29, column: 41, scope: !7)
!27 = !DILocation(line: 29, column: 50, scope: !7)
!28 = !DILocation(line: 29, column: 30, scope: !7)
!29 = !DILocation(line: 29, column: 60, scope: !7)
!30 = !DILocation(line: 30, column: 41, scope: !7)
!31 = !DILocation(line: 30, column: 50, scope: !7)
!32 = !DILocation(line: 30, column: 30, scope: !7)
!33 = !DILocation(line: 30, column: 60, scope: !7)
!34 = !DILocation(line: 31, column: 41, scope: !7)
!35 = !DILocation(line: 31, column: 50, scope: !7)
!36 = !DILocation(line: 31, column: 30, scope: !7)
!37 = !DILocation(line: 31, column: 60, scope: !7)
!38 = !DILocation(line: 32, column: 41, scope: !7)
!39 = !DILocation(line: 32, column: 50, scope: !7)
!40 = !DILocation(line: 32, column: 30, scope: !7)
!41 = !DILocation(line: 32, column: 60, scope: !7)
!42 = !DILocation(line: 33, column: 42, scope: !7)
!43 = !DILocation(line: 33, column: 51, scope: !7)
!44 = !DILocation(line: 33, column: 30, scope: !7)
!45 = !DILocation(line: 33, column: 61, scope: !7)
!46 = !DILocation(line: 34, column: 43, scope: !7)
!47 = !DILocation(line: 34, column: 52, scope: !7)
!48 = !DILocation(line: 34, column: 31, scope: !7)
!49 = !DILocation(line: 34, column: 62, scope: !7)
!50 = !DILocation(line: 35, column: 43, scope: !7)
!51 = !DILocation(line: 35, column: 52, scope: !7)
!52 = !DILocation(line: 35, column: 31, scope: !7)
!53 = !DILocation(line: 35, column: 62, scope: !7)
!54 = !DILocation(line: 36, column: 43, scope: !7)
!55 = !DILocation(line: 36, column: 52, scope: !7)
!56 = !DILocation(line: 36, column: 31, scope: !7)
!57 = !DILocation(line: 36, column: 62, scope: !7)
!58 = !DILocation(line: 37, column: 43, scope: !7)
!59 = !DILocation(line: 37, column: 52, scope: !7)
!60 = !DILocation(line: 37, column: 31, scope: !7)
!61 = !DILocation(line: 37, column: 62, scope: !7)
!62 = !DILocation(line: 38, column: 44, scope: !7)
!63 = !DILocation(line: 38, column: 53, scope: !7)
!64 = !DILocation(line: 38, column: 31, scope: !7)
!65 = !DILocation(line: 38, column: 63, scope: !7)
!66 = !DILocation(line: 39, column: 44, scope: !7)
!67 = !DILocation(line: 39, column: 53, scope: !7)
!68 = !DILocation(line: 39, column: 31, scope: !7)
!69 = !DILocation(line: 39, column: 63, scope: !7)
!70 = !DILocation(line: 40, column: 44, scope: !7)
!71 = !DILocation(line: 40, column: 53, scope: !7)
!72 = !DILocation(line: 40, column: 31, scope: !7)
!73 = !DILocation(line: 40, column: 63, scope: !7)
!74 = !DILocation(line: 41, column: 44, scope: !7)
!75 = !DILocation(line: 41, column: 53, scope: !7)
!76 = !DILocation(line: 41, column: 31, scope: !7)
!77 = !DILocation(line: 41, column: 63, scope: !7)
!78 = !DILocation(line: 42, column: 44, scope: !7)
!79 = !DILocation(line: 42, column: 53, scope: !7)
!80 = !DILocation(line: 42, column: 31, scope: !7)
!81 = !DILocation(line: 42, column: 63, scope: !7)
!82 = !DILocation(line: 43, column: 44, scope: !7)
!83 = !DILocation(line: 43, column: 53, scope: !7)
!84 = !DILocation(line: 43, column: 31, scope: !7)
!85 = !DILocation(line: 43, column: 63, scope: !7)
!86 = !DILocation(line: 44, column: 44, scope: !7)
!87 = !DILocation(line: 44, column: 53, scope: !7)
!88 = !DILocation(line: 44, column: 31, scope: !7)
!89 = !DILocation(line: 44, column: 63, scope: !7)
!90 = !DILocation(line: 45, column: 44, scope: !7)
!91 = !DILocation(line: 45, column: 53, scope: !7)
!92 = !DILocation(line: 45, column: 31, scope: !7)
!93 = !DILocation(line: 45, column: 63, scope: !7)
!94 = !DILocation(line: 46, column: 44, scope: !7)
!95 = !DILocation(line: 46, column: 53, scope: !7)
!96 = !DILocation(line: 46, column: 31, scope: !7)
!97 = !DILocation(line: 46, column: 63, scope: !7)
!98 = !DILocation(line: 47, column: 44, scope: !7)
!99 = !DILocation(line: 47, column: 53, scope: !7)
!100 = !DILocation(line: 47, column: 31, scope: !7)
!101 = !DILocation(line: 47, column: 63, scope: !7)
!102 = !DILocation(line: 48, column: 44, scope: !7)
!103 = !DILocation(line: 48, column: 53, scope: !7)
!104 = !DILocation(line: 48, column: 31, scope: !7)
!105 = !DILocation(line: 48, column: 63, scope: !7)
!106 = !DILocation(line: 49, column: 44, scope: !7)
!107 = !DILocation(line: 49, column: 53, scope: !7)
!108 = !DILocation(line: 49, column: 31, scope: !7)
!109 = !DILocation(line: 49, column: 63, scope: !7)
!110 = !DILocation(line: 50, column: 44, scope: !7)
!111 = !DILocation(line: 50, column: 53, scope: !7)
!112 = !DILocation(line: 50, column: 31, scope: !7)
!113 = !DILocation(line: 50, column: 63, scope: !7)
!114 = !DILocation(line: 51, column: 44, scope: !7)
!115 = !DILocation(line: 51, column: 53, scope: !7)
!116 = !DILocation(line: 51, column: 31, scope: !7)
!117 = !DILocation(line: 51, column: 63, scope: !7)
!118 = !DILocation(line: 52, column: 44, scope: !7)
!119 = !DILocation(line: 52, column: 53, scope: !7)
!120 = !DILocation(line: 52, column: 31, scope: !7)
!121 = !DILocation(line: 52, column: 63, scope: !7)
!122 = !DILocation(line: 53, column: 18, scope: !7)
!123 = !DILocation(line: 54, column: 18, scope: !7)
!124 = !DILocation(line: 55, column: 18, scope: !7)
!125 = !DILocation(line: 56, column: 18, scope: !7)
!126 = !DILocation(line: 57, column: 19, scope: !7)
!127 = !DILocation(line: 58, column: 20, scope: !7)
!128 = !DILocation(line: 59, column: 20, scope: !7)
!129 = !DILocation(line: 60, column: 20, scope: !7)
!130 = !DILocation(line: 61, column: 20, scope: !7)
!131 = !DILocation(line: 62, column: 20, scope: !7)
!132 = !DILocation(line: 63, column: 20, scope: !7)
!133 = !DILocation(line: 64, column: 20, scope: !7)
!134 = !DILocation(line: 65, column: 20, scope: !7)
!135 = !DILocation(line: 66, column: 20, scope: !7)
!136 = !DILocation(line: 67, column: 20, scope: !7)
!137 = !DILocation(line: 68, column: 20, scope: !7)
!138 = !DILocation(line: 69, column: 20, scope: !7)
!139 = !DILocation(line: 70, column: 20, scope: !7)
!140 = !DILocation(line: 71, column: 20, scope: !7)
!141 = !DILocation(line: 72, column: 20, scope: !7)
!142 = !DILocation(line: 73, column: 20, scope: !7)
!143 = !DILocation(line: 74, column: 20, scope: !7)
!144 = !DILocation(line: 75, column: 20, scope: !7)
!145 = !DILocation(line: 76, column: 20, scope: !7)
!146 = !DILocation(line: 78, column: 20, scope: !7)
!147 = !DILocation(line: 79, column: 25, scope: !7)
!148 = !DILocation(line: 79, column: 37, scope: !7)
!149 = !DILocation(line: 79, column: 4, scope: !7)
