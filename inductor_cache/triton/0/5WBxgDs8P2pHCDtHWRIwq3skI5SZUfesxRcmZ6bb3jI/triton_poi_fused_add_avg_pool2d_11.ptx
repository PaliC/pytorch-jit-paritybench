//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_avg_pool2d_11 // -- Begin function triton_poi_fused_add_avg_pool2d_11
                                        // @triton_poi_fused_add_avg_pool2d_11
.visible .entry triton_poi_fused_add_avg_pool2d_11(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_avg_pool2d_11_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_avg_pool2d_11_param_1,
	.param .u32 triton_poi_fused_add_avg_pool2d_11_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<65>;
	.reg .b32 	%r<108>;
	.reg .f32 	%f<43>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:19:0

// %bb.0:
	ld.param.u64 	%rd18, [triton_poi_fused_add_avg_pool2d_11_param_0];
	ld.param.u64 	%rd19, [triton_poi_fused_add_avg_pool2d_11_param_1];
$L__tmp0:
	.loc	1 21 28                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:21:33
	shl.b32 	%r48, %r1, 8;
	.loc	1 22 36                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:22:36
	mov.u32 	%r49, %tid.x;
	shl.b32 	%r50, %r49, 1;
	and.b32  	%r51, %r50, 254;
	.loc	1 22 23                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:22:23
	or.b32  	%r52, %r48, %r51;
	or.b32  	%r53, %r52, 1;
	.loc	1 23 21                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:23:21
	setp.lt.s32 	%p1, %r52, 6144;
	.loc	1 25 19                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:25:19
	bfe.s32 	%r54, %r1, 23, 1;
	shr.u32 	%r55, %r54, 28;
	.loc	1 24 21                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:24:21
	add.s32 	%r56, %r52, %r55;
	shr.s32 	%r57, %r56, 4;
	.loc	1 25 19                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:25:19
	and.b32  	%r58, %r56, -16;
	sub.s32 	%r59, %r52, %r58;
	shr.u32 	%r60, %r57, 28;
	add.s32 	%r61, %r57, %r60;
	and.b32  	%r62, %r61, -16;
	sub.s32 	%r63, %r57, %r62;
	add.s32 	%r64, %r53, %r55;
	and.b32  	%r65, %r64, -16;
	sub.s32 	%r66, %r53, %r65;
	.loc	1 27 35                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:27:35
	mul.wide.s32 	%rd20, %r52, 4;
	add.s64 	%rd1, %rd18, %rd20;
	.loc	1 27 40                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:27:40
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 30 19                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:30:19
	setp.gt.s32 	%p36, %r63, 0;
	.loc	1 35 19                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:35:19
	setp.gt.s32 	%p37, %r59, 0;
	setp.gt.s32 	%p38, %r66, 0;
	.loc	1 38 19                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:38:19
	and.pred  	%p39, %p37, %p36;
	and.pred  	%p40, %p38, %p36;
	.loc	1 39 39                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:39:39
	add.s32 	%r67, %r52, -17;
	add.s32 	%r68, %r52, -16;
	.loc	1 39 31                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:39:31
	mul.wide.s32 	%rd21, %r67, 4;
	add.s64 	%rd2, %rd19, %rd21;
	mul.wide.s32 	%rd22, %r68, 4;
	add.s64 	%rd3, %rd19, %rd22;
	.loc	1 39 52                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:39:52
	and.pred  	%p2, %p1, %p39;
	and.pred  	%p4, %p1, %p40;
	mov.b32 	%r5, 0;
	.loc	1 39 44                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:39:44
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p2 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p2 mov.u32 %r4, %r5;
	// end inline asm
	mov.b32 	%f3, %r4;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p4 ld.global.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p4 mov.u32 %r6, %r5;
	// end inline asm
	mov.b32 	%f4, %r6;
	.loc	1 41 21                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:41:21
	setp.gt.s32 	%p41, %r59, -1;
	.loc	1 44 19                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:44:19
	and.pred  	%p42, %p41, %p36;
	.loc	1 45 52                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:45:52
	and.pred  	%p6, %p1, %p42;
	.loc	1 45 44                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:45:44
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p6 ld.global.v2.b32 { %r8, %r9 }, [ %rd3 + 0 ];
	@!%p6 mov.u32 %r8, %r5;
	@!%p6 mov.u32 %r9, %r5;
	// end inline asm
	mov.b32 	%f5, %r8;
	mov.b32 	%f6, %r9;
	.loc	1 46 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:46:20
	add.f32 	%f7, %f3, %f5;
	add.f32 	%f8, %f4, %f6;
	.loc	1 50 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:50:20
	setp.lt.u32 	%p43, %r59, 16;
	add.s32 	%r69, %r66, 1;
	setp.lt.u32 	%p44, %r69, 16;
	.loc	1 51 19                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:51:19
	and.pred  	%p45, %p43, %p36;
	and.pred  	%p46, %p44, %p36;
	.loc	1 52 39                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:52:39
	add.s32 	%r70, %r52, -15;
	add.s32 	%r71, %r52, -14;
	.loc	1 52 31                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:52:31
	mul.wide.s32 	%rd23, %r70, 4;
	add.s64 	%rd5, %rd19, %rd23;
	mul.wide.s32 	%rd24, %r71, 4;
	add.s64 	%rd6, %rd19, %rd24;
	.loc	1 52 52                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:52:52
	and.pred  	%p9, %p1, %p45;
	and.pred  	%p11, %p1, %p46;
	.loc	1 52 44                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:52:44
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p9 ld.global.b32 { %r12 }, [ %rd5 + 0 ];
	@!%p9 mov.u32 %r12, %r5;
	// end inline asm
	mov.b32 	%f9, %r12;
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p11 ld.global.b32 { %r14 }, [ %rd6 + 0 ];
	@!%p11 mov.u32 %r14, %r5;
	// end inline asm
	mov.b32 	%f10, %r14;
	.loc	1 53 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:53:20
	add.f32 	%f11, %f7, %f9;
	add.f32 	%f12, %f8, %f10;
	.loc	1 55 21                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:55:21
	setp.gt.s32 	%p47, %r63, -1;
	.loc	1 58 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:58:20
	and.pred  	%p48, %p37, %p47;
	and.pred  	%p49, %p38, %p47;
	.loc	1 59 38                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:59:38
	add.s32 	%r72, %r52, -1;
	.loc	1 59 31                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:59:31
	mul.wide.s32 	%rd25, %r72, 4;
	add.s64 	%rd7, %rd19, %rd25;
	add.s64 	%rd9, %rd19, %rd20;
	add.s64 	%rd10, %rd9, 4;
	.loc	1 59 51                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:59:51
	and.pred  	%p13, %p1, %p48;
	and.pred  	%p15, %p1, %p49;
	.loc	1 59 43                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:59:43
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p13 ld.global.b32 { %r16 }, [ %rd7 + 0 ];
	@!%p13 mov.u32 %r16, %r5;
	// end inline asm
	mov.b32 	%f13, %r16;
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p15 ld.global.b32 { %r18 }, [ %rd9 + 0 ];
	@!%p15 mov.u32 %r18, %r5;
	// end inline asm
	mov.b32 	%f14, %r18;
	.loc	1 60 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:60:20
	add.f32 	%f15, %f11, %f13;
	add.f32 	%f16, %f12, %f14;
	.loc	1 61 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:61:20
	or.b32  	%r73, %r63, %r59;
	setp.gt.s32 	%p50, %r73, -1;
	.loc	1 62 44                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:62:44
	and.pred  	%p17, %p1, %p50;
	.loc	1 62 36                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:62:36
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p17 ld.global.v2.b32 { %r20, %r21 }, [ %rd9 + 0 ];
	@!%p17 mov.u32 %r20, %r5;
	@!%p17 mov.u32 %r21, %r5;
	// end inline asm
	mov.b32 	%f17, %r20;
	mov.b32 	%f18, %r21;
	.loc	1 63 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:63:20
	add.f32 	%f19, %f15, %f17;
	add.f32 	%f20, %f16, %f18;
	.loc	1 64 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:64:20
	and.pred  	%p51, %p43, %p47;
	and.pred  	%p52, %p44, %p47;
	.loc	1 65 35                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:65:35
	add.s32 	%r74, %r52, 2;
	.loc	1 65 31                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:65:31
	mul.wide.s32 	%rd26, %r74, 4;
	add.s64 	%rd11, %rd19, %rd26;
	.loc	1 65 48                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:65:48
	and.pred  	%p20, %p1, %p51;
	and.pred  	%p22, %p1, %p52;
	.loc	1 65 40                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:65:40
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p20 ld.global.b32 { %r24 }, [ %rd10 + 0 ];
	@!%p20 mov.u32 %r24, %r5;
	// end inline asm
	mov.b32 	%f21, %r24;
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p22 ld.global.b32 { %r26 }, [ %rd11 + 0 ];
	@!%p22 mov.u32 %r26, %r5;
	// end inline asm
	mov.b32 	%f22, %r26;
	.loc	1 66 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:66:20
	add.f32 	%f23, %f19, %f21;
	add.f32 	%f24, %f20, %f22;
	.loc	1 70 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:70:20
	add.s32 	%r75, %r63, 1;
	setp.lt.u32 	%p53, %r75, 16;
	.loc	1 71 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:71:20
	and.pred  	%p54, %p37, %p53;
	and.pred  	%p55, %p38, %p53;
	.loc	1 72 36                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:72:36
	add.s32 	%r76, %r52, 15;
	add.s32 	%r77, %r52, 16;
	.loc	1 72 31                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:72:31
	mul.wide.s32 	%rd27, %r76, 4;
	add.s64 	%rd12, %rd19, %rd27;
	mul.wide.s32 	%rd28, %r77, 4;
	add.s64 	%rd13, %rd19, %rd28;
	.loc	1 72 49                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:72:49
	and.pred  	%p24, %p1, %p54;
	and.pred  	%p26, %p1, %p55;
	.loc	1 72 41                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:72:41
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p24 ld.global.b32 { %r28 }, [ %rd12 + 0 ];
	@!%p24 mov.u32 %r28, %r5;
	// end inline asm
	mov.b32 	%f25, %r28;
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p26 ld.global.b32 { %r30 }, [ %rd13 + 0 ];
	@!%p26 mov.u32 %r30, %r5;
	// end inline asm
	mov.b32 	%f26, %r30;
	.loc	1 73 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:73:20
	add.f32 	%f27, %f23, %f25;
	add.f32 	%f28, %f24, %f26;
	.loc	1 74 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:74:20
	and.pred  	%p56, %p41, %p53;
	.loc	1 75 49                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:75:49
	and.pred  	%p28, %p1, %p56;
	.loc	1 75 41                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:75:41
	// begin inline asm
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p28 ld.global.v2.b32 { %r32, %r33 }, [ %rd13 + 0 ];
	@!%p28 mov.u32 %r32, %r5;
	@!%p28 mov.u32 %r33, %r5;
	// end inline asm
	mov.b32 	%f29, %r32;
	mov.b32 	%f30, %r33;
	.loc	1 76 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:76:20
	add.f32 	%f31, %f27, %f29;
	add.f32 	%f32, %f28, %f30;
	.loc	1 77 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:77:20
	or.b32  	%r78, %r75, %r59;
	setp.lt.u32 	%p57, %r78, 16;
	or.b32  	%r79, %r75, %r69;
	setp.lt.u32 	%p58, %r79, 16;
	.loc	1 78 36                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:78:36
	add.s32 	%r80, %r52, 17;
	add.s32 	%r81, %r52, 18;
	.loc	1 78 31                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:78:31
	mul.wide.s32 	%rd29, %r80, 4;
	add.s64 	%rd15, %rd19, %rd29;
	mul.wide.s32 	%rd30, %r81, 4;
	add.s64 	%rd16, %rd19, %rd30;
	.loc	1 78 49                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:78:49
	and.pred  	%p31, %p1, %p57;
	and.pred  	%p33, %p1, %p58;
	.loc	1 78 41                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:78:41
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p31 ld.global.b32 { %r36 }, [ %rd15 + 0 ];
	@!%p31 mov.u32 %r36, %r5;
	// end inline asm
	mov.b32 	%f33, %r36;
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p33 ld.global.b32 { %r38 }, [ %rd16 + 0 ];
	@!%p33 mov.u32 %r38, %r5;
	// end inline asm
	mov.b32 	%f34, %r38;
	.loc	1 79 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:79:20
	add.f32 	%f35, %f31, %f33;
	add.f32 	%f36, %f32, %f34;
	.loc	1 80 70                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:70
	add.s32 	%r82, %r59, 2;
	add.s32 	%r83, %r66, 2;
	.loc	1 80 66                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:66
	setp.gt.s32 	%p59, %r59, 14;
	setp.gt.s32 	%p60, %r66, 14;
	.loc	1 80 57                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:57
	selp.b32 	%r84, 17, 0, %p59;
	selp.b32 	%r85, 17, 0, %p60;
	.loc	1 80 101                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:101
	setp.lt.s32 	%p61, %r59, 15;
	setp.lt.s32 	%p62, %r66, 15;
	.loc	1 80 89                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:89
	selp.b32 	%r86, %r82, 0, %p61;
	selp.b32 	%r87, %r83, 0, %p62;
	.loc	1 80 77                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:77
	add.s32 	%r88, %r84, %r86;
	add.s32 	%r89, %r85, %r87;
	.loc	1 80 129                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:129
	add.s32 	%r90, %r63, 2;
	.loc	1 80 125                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:125
	setp.gt.s32 	%p63, %r63, 14;
	.loc	1 80 116                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:116
	selp.b32 	%r91, 17, 0, %p63;
	.loc	1 80 160                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:160
	setp.lt.s32 	%p64, %r63, 15;
	.loc	1 80 148                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:148
	selp.b32 	%r92, %r90, 0, %p64;
	.loc	1 80 136                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:136
	add.s32 	%r93, %r91, %r92;
	sub.s32 	%r94, %r93, %r63;
	sub.s32 	%r95, %r63, %r93;
	.loc	1 80 48                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:48
	add.s32 	%r96, %r59, %r63;
	.loc	1 80 169                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:169
	sub.s32 	%r97, %r88, %r96;
	add.s32 	%r98, %r97, %r93;
	.loc	1 80 240                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:240
	add.s32 	%r99, %r98, 1;
	.loc	1 80 311                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:311
	mad.lo.s32 	%r100, %r94, %r88, %r99;
	.loc	1 80 372                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:372
	mad.lo.s32 	%r101, %r95, %r59, %r100;
	.loc	1 80 169                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:169
	add.s32 	%r102, %r66, %r63;
	sub.s32 	%r103, %r89, %r102;
	add.s32 	%r104, %r103, %r93;
	.loc	1 80 240                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:240
	add.s32 	%r105, %r104, 1;
	.loc	1 80 311                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:311
	mad.lo.s32 	%r106, %r94, %r89, %r105;
	.loc	1 80 372                        // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:80:372
	mad.lo.s32 	%r107, %r95, %r66, %r106;
	.loc	1 81 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:81:20
	cvt.rn.f32.s32 	%f37, %r101;
	cvt.rn.f32.s32 	%f38, %r107;
	mov.b32 	%r42, %f37;
	mov.b32 	%r41, %f35;
	// begin inline asm
	div.full.f32 %r40, %r41, %r42;
	// end inline asm
	mov.b32 	%f39, %r40;
	mov.b32 	%r45, %f38;
	mov.b32 	%r44, %f36;
	// begin inline asm
	div.full.f32 %r43, %r44, %r45;
	// end inline asm
	mov.b32 	%f40, %r43;
	.loc	1 82 20                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:82:20
	add.f32 	%f41, %f39, %f1;
	add.f32 	%f42, %f40, %f2;
	.loc	1 83 40                         // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:83:40
	mov.b32 	%r46, %f41;
	mov.b32 	%r47, %f42;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r46, %r47 };
	// end inline asm
	.loc	1 83 4                          // cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py:83:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/br/cbrgbxrwzab3je4ebmyjpodhibphbgwedpk77budt3bgrhxcvc7p.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 114
.b8 103
.b8 98
.b8 120
.b8 114
.b8 119
.b8 122
.b8 97
.b8 98
.b8 51
.b8 106
.b8 101
.b8 52
.b8 101
.b8 98
.b8 109
.b8 121
.b8 106
.b8 112
.b8 111
.b8 100
.b8 104
.b8 105
.b8 98
.b8 112
.b8 104
.b8 98
.b8 103
.b8 119
.b8 101
.b8 100
.b8 112
.b8 107
.b8 55
.b8 55
.b8 98
.b8 117
.b8 100
.b8 116
.b8 51
.b8 98
.b8 103
.b8 114
.b8 104
.b8 120
.b8 99
.b8 118
.b8 99
.b8 55
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 114
.b8 0
	}
	.section	.debug_macinfo	{	}
