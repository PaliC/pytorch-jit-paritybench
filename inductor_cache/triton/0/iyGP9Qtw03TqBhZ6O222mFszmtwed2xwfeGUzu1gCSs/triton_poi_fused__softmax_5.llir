; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__softmax_5(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 2, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 28, !dbg !12
  %8 = and i32 %6, 3, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 3, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 %10) #1, !dbg !16
  %14 = bitcast i32 %13 to float, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #1, !dbg !17
  %16 = bitcast i32 %15 to float, !dbg !17
  %17 = getelementptr i8, ptr addrspace(1) %0, i64 4, !dbg !18
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 true) #1, !dbg !19
  %19 = bitcast i32 %18 to float, !dbg !19
  %20 = getelementptr i8, ptr addrspace(1) %0, i64 8, !dbg !20
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !21
  %22 = bitcast i32 %21 to float, !dbg !21
  %23 = fcmp ogt float %16, %19, !dbg !22
  %24 = fcmp uno float %16, 0.000000e+00, !dbg !26
  %25 = or i1 %24, %23, !dbg !27
  %26 = select i1 %25, float %16, float %19, !dbg !28
  %27 = fcmp ogt float %26, %22, !dbg !29
  %28 = fcmp uno float %26, 0.000000e+00, !dbg !31
  %29 = or i1 %27, %28, !dbg !32
  %30 = select i1 %29, float %26, float %22, !dbg !33
  %31 = fsub float %14, %30, !dbg !34
  %32 = fmul float %31, 0x3FF7154760000000, !dbg !35
  %33 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %32) #1, !dbg !35
  %34 = fsub float %16, %30, !dbg !36
  %35 = fmul float %34, 0x3FF7154760000000, !dbg !37
  %36 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %35) #1, !dbg !37
  %37 = fsub float %19, %30, !dbg !38
  %38 = fmul float %37, 0x3FF7154760000000, !dbg !39
  %39 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %38) #1, !dbg !39
  %40 = fadd float %36, %39, !dbg !40
  %41 = fsub float %22, %30, !dbg !41
  %42 = fmul float %41, 0x3FF7154760000000, !dbg !42
  %43 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %42) #1, !dbg !42
  %44 = fadd float %40, %43, !dbg !43
  %45 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %33, float %44) #1, !dbg !44
  %46 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !45
  %47 = icmp eq i32 %7, 0, !dbg !46
  %48 = bitcast float %45 to i32, !dbg !46
  %49 = and i1 %47, %10, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %48, ptr addrspace(1) %46, i1 %49) #1, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "crrdzm4hwgytywounzray53b3lsxqlqofl4yhri4axnioi6abwt3.py", directory: "inductor_cache/rr")
!4 = !{ptr @triton_poi_fused__softmax_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax_5, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax_5", linkageName: "triton_poi_fused__softmax_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 19, scope: !7)
!20 = !DILocation(line: 30, column: 30, scope: !7)
!21 = !DILocation(line: 30, column: 19, scope: !7)
!22 = !DILocation(line: 118, column: 15, scope: !23, inlinedAt: !25)
!23 = distinct !DILexicalBlockFile(scope: !7, file: !24, discriminator: 0)
!24 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!25 = !DILocation(line: 32, column: 40, scope: !7)
!26 = !DILocation(line: 120, column: 21, scope: !23, inlinedAt: !25)
!27 = !DILocation(line: 120, column: 16, scope: !23, inlinedAt: !25)
!28 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !25)
!29 = !DILocation(line: 118, column: 15, scope: !23, inlinedAt: !30)
!30 = !DILocation(line: 33, column: 40, scope: !7)
!31 = !DILocation(line: 120, column: 21, scope: !23, inlinedAt: !30)
!32 = !DILocation(line: 120, column: 16, scope: !23, inlinedAt: !30)
!33 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !30)
!34 = !DILocation(line: 34, column: 18, scope: !7)
!35 = !DILocation(line: 35, column: 24, scope: !7)
!36 = !DILocation(line: 36, column: 19, scope: !7)
!37 = !DILocation(line: 37, column: 24, scope: !7)
!38 = !DILocation(line: 38, column: 19, scope: !7)
!39 = !DILocation(line: 39, column: 24, scope: !7)
!40 = !DILocation(line: 40, column: 20, scope: !7)
!41 = !DILocation(line: 41, column: 19, scope: !7)
!42 = !DILocation(line: 42, column: 24, scope: !7)
!43 = !DILocation(line: 43, column: 20, scope: !7)
!44 = !DILocation(line: 44, column: 20, scope: !7)
!45 = !DILocation(line: 45, column: 25, scope: !7)
!46 = !DILocation(line: 45, column: 37, scope: !7)
!47 = !DILocation(line: 45, column: 4, scope: !7)
