//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mul_relu_sigmoid_5 // -- Begin function triton_poi_fused_add_mul_relu_sigmoid_5
                                        // @triton_poi_fused_add_mul_relu_sigmoid_5
.visible .entry triton_poi_fused_add_mul_relu_sigmoid_5(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_relu_sigmoid_5_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_relu_sigmoid_5_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_relu_sigmoid_5_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_relu_sigmoid_5_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_relu_sigmoid_5_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_relu_sigmoid_5_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_relu_sigmoid_5_param_6,
	.param .u32 triton_poi_fused_add_mul_relu_sigmoid_5_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<34>;
	.reg .f32 	%f<18>;
	.reg .b64 	%rd<20>;
	.loc	1 19 0                          // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused_add_mul_relu_sigmoid_5_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_add_mul_relu_sigmoid_5_param_1];
$L__tmp0:
	.loc	1 21 28                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:21:33
	shl.b32 	%r13, %r1, 7;
	ld.param.u64 	%rd11, [triton_poi_fused_add_mul_relu_sigmoid_5_param_2];
	ld.param.u64 	%rd12, [triton_poi_fused_add_mul_relu_sigmoid_5_param_3];
	.loc	1 22 36                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:22:36
	mov.u32 	%r14, %tid.x;
	and.b32  	%r15, %r14, 127;
	ld.param.u64 	%rd13, [triton_poi_fused_add_mul_relu_sigmoid_5_param_4];
	.loc	1 22 23                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:22:23
	or.b32  	%r16, %r13, %r15;
	ld.param.u64 	%rd14, [triton_poi_fused_add_mul_relu_sigmoid_5_param_5];
	.loc	1 23 21                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:23:21
	setp.lt.s32 	%p1, %r16, 1024;
	ld.param.u64 	%rd15, [triton_poi_fused_add_mul_relu_sigmoid_5_param_6];
	.loc	1 25 19                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:25:19
	bfe.s32 	%r17, %r1, 24, 1;
	shr.u32 	%r18, %r17, 28;
	add.s32 	%r19, %r16, %r18;
	shr.s32 	%r20, %r19, 4;
	.loc	1 27 19                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:27:19
	shr.u32 	%r21, %r17, 26;
	add.s32 	%r22, %r16, %r21;
	and.b32  	%r23, %r22, -64;
	sub.s32 	%r24, %r16, %r23;
	.loc	1 28 27                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:28:27
	shr.u32 	%r25, %r20, 30;
	add.s32 	%r26, %r20, %r25;
	and.b32  	%r27, %r26, -4;
	sub.s32 	%r28, %r20, %r27;
	.loc	1 29 30                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:29:30
	mul.wide.s32 	%rd16, %r16, 4;
	add.s64 	%rd1, %rd10, %rd16;
	.loc	1 29 35                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:29:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r2;
	.loc	1 30 30                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:30:30
	mul.wide.s32 	%rd17, %r20, 4;
	add.s64 	%rd2, %rd11, %rd17;
	.loc	1 30 35                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:30:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r3;
	.loc	1 31 45                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:31:45
	shr.u32 	%r29, %r17, 24;
	add.s32 	%r30, %r16, %r29;
	shr.s32 	%r31, %r30, 8;
	.loc	1 31 39                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:31:39
	shl.b32 	%r32, %r31, 6;
	.loc	1 31 35                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:31:35
	add.s32 	%r33, %r32, %r24;
	.loc	1 31 30                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:31:30
	mul.wide.s32 	%rd18, %r33, 4;
	add.s64 	%rd3, %rd12, %rd18;
	.loc	1 31 50                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:31:50
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 32 30                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:32:30
	mul.wide.s32 	%rd19, %r28, 4;
	add.s64 	%rd4, %rd13, %rd19;
	.loc	1 32 35                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:32:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 34                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:33:34
	add.s64 	%rd5, %rd9, %rd16;
	.loc	1 33 39                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:33:39
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 30                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:34:30
	add.s64 	%rd6, %rd14, %rd19;
	.loc	1 34 35                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:34:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	mov.f32 	%f5, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f6, %f5, %f4;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f6, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f7, %f1, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r10, %f7;
	mov.b32 	%r9, 1065353216;
	// begin inline asm
	div.full.f32 %r8, %r9, %r10;
	// end inline asm
	mov.b32 	%f8, %r8;
$L__tmp2:
	.loc	1 31 50                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:31:50
	mov.b32 	%f9, %r6;
	mov.b32 	%f10, %r4;
	.loc	1 32 35                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:32:35
	mov.b32 	%f11, %r7;
	mov.b32 	%f12, %r5;
	.loc	1 37 18                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:37:18
	add.f32 	%f13, %f10, %f12;
	add.f32 	%f14, %f9, %f11;
	.loc	1 39 19                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:39:19
	add.f32 	%f15, %f13, %f14;
	.loc	1 40 19                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:40:19
	fma.rn.f32 	%f16, %f8, %f3, %f15;
$L__tmp3:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p9, %f16, 0f00000000;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f17, 0f00000000, %f16, %p9;
$L__tmp4:
	.loc	1 43 40                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:43:40
	mov.b32 	%r11, %f16;
	// begin inline asm
	@%p1 st.global.b32 [ %rd5 + 0 ], { %r11 };
	// end inline asm
	.loc	1 44 25                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:44:25
	add.s64 	%rd8, %rd15, %rd16;
	.loc	1 44 37                         // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:44:37
	mov.b32 	%r12, %f17;
	// begin inline asm
	@%p1 st.global.b32 [ %rd8 + 0 ], { %r12 };
	// end inline asm
	.loc	1 44 4                          // c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py:44:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/63/c63skfbxvqsn3rqeunjjbeo5clb6m2xnxxoqaubqazzsveei3dx5.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 208                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 51
.b8 115
.b8 107
.b8 102
.b8 98
.b8 120
.b8 118
.b8 113
.b8 115
.b8 110
.b8 51
.b8 114
.b8 113
.b8 101
.b8 117
.b8 110
.b8 106
.b8 106
.b8 98
.b8 101
.b8 111
.b8 53
.b8 99
.b8 108
.b8 98
.b8 54
.b8 109
.b8 50
.b8 120
.b8 110
.b8 120
.b8 120
.b8 111
.b8 113
.b8 97
.b8 117
.b8 98
.b8 113
.b8 97
.b8 122
.b8 122
.b8 115
.b8 118
.b8 101
.b8 101
.b8 105
.b8 51
.b8 100
.b8 120
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8d:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 35                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
