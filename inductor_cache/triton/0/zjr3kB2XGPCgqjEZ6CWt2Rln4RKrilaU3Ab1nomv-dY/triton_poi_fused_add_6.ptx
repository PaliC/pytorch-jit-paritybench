//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_6  // -- Begin function triton_poi_fused_add_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_add_6
.visible .entry triton_poi_fused_add_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_6_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_6_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_6_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_6_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_6_param_6,
	.param .u32 triton_poi_fused_add_6_param_7,
	.param .u32 triton_poi_fused_add_6_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<81>;
	.reg .f32 	%f<28>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd8, [triton_poi_fused_add_6_param_0];
	ld.param.u64 	%rd2, [triton_poi_fused_add_6_param_1];
$L__tmp0:
	.loc	1 22 28                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:22:33
	shl.b32 	%r24, %r1, 6;
	ld.param.u64 	%rd3, [triton_poi_fused_add_6_param_2];
	ld.param.u64 	%rd4, [triton_poi_fused_add_6_param_3];
	.loc	1 23 44                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:23:44
	mov.u32 	%r25, %tid.x;
	ld.param.u64 	%rd5, [triton_poi_fused_add_6_param_4];
	bfe.u32 	%r26, %r25, 1, 4;
	ld.param.u64 	%rd9, [triton_poi_fused_add_6_param_5];
	and.b32  	%r27, %r25, 32;
	ld.param.u64 	%rd10, [triton_poi_fused_add_6_param_6];
	shr.u32 	%r28, %r27, 1;
	and.b32  	%r29, %r25, 64;
	shr.u32 	%r30, %r29, 1;
	and.b32  	%r31, %r25, 1;
	shl.b32 	%r32, %r31, 1;
	shl.b32 	%r33, %r25, 1;
	and.b32  	%r34, %r33, 62;
	or.b32  	%r35, %r28, %r26;
	or.b32  	%r36, %r35, %r30;
	.loc	1 23 23                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:23:23
	or.b32  	%r37, %r36, %r24;
	or.b32  	%r38, %r24, %r34;
	.loc	1 24 21                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:24:21
	setp.lt.s32 	%p12, %r37, 64;
	setp.lt.s32 	%p13, %r38, 64;
	.loc	1 25 28                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:25:33
	shl.b32 	%r39, %r2, 2;
	.loc	1 26 44                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:26:44
	or.b32  	%r40, %r27, %r29;
	shr.u32 	%r41, %r40, 5;
	.loc	1 26 23                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:26:23
	or.b32  	%r42, %r39, %r32;
	or.b32  	%r43, %r41, %r39;
	.loc	1 27 21                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:27:21
	setp.lt.s32 	%p14, %r42, 16;
	setp.lt.s32 	%p15, %r43, 16;
	.loc	1 31 19                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:31:19
	shr.s32 	%r45, %r38, 31;
	shr.u32 	%r46, %r45, 28;
	add.s32 	%r47, %r38, %r46;
	.loc	1 30 19                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:30:19
	and.b32  	%r48, %r47, -16;
	sub.s32 	%r49, %r38, %r48;
	.loc	1 32 38                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:32:38
	shl.b32 	%r50, %r37, 4;
	.loc	1 32 35                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:32:35
	add.s32 	%r51, %r42, %r50;
	.loc	1 32 30                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:32:30
	mul.wide.s32 	%rd11, %r51, 4;
	add.s64 	%rd1, %rd8, %rd11;
	.loc	1 32 51                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:32:51
	and.pred  	%p1, %p12, %p14;
	and.pred  	%p6, %p13, %p15;
	.loc	1 32 43                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:32:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	mov.pred 	%p2, -1;
	.loc	1 33 19                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:33:19
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p2 ld.global.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 35 19                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:35:19
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p2 ld.global.b32 { %r6 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r6;
	.loc	1 37 20                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:37:20
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p2 ld.global.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 39 20                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:39:20
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p2 ld.global.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 41 39                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:41:39
	shl.b32 	%r52, %r43, 4;
	.loc	1 41 36                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:41:36
	add.s32 	%r53, %r52, %r49;
	.loc	1 41 48                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:41:48
	shl.b32 	%r54, %r47, 4;
	and.b32  	%r55, %r54, -256;
	.loc	1 41 44                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:41:44
	add.s32 	%r56, %r53, %r55;
	.loc	1 41 31                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:41:31
	mul.wide.s32 	%rd12, %r56, 4;
	add.s64 	%rd6, %rd9, %rd12;
	.loc	1 41 53                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:41:53
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p6 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 44 18                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:44:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 45 26                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:45:26
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 32 43                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:32:43
	mov.b32 	%f4, %r4;
	.loc	1 33 19                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:33:19
	mov.b32 	%f5, %r5;
	.loc	1 42 18                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:42:18
	sub.f32 	%f6, %f4, %f5;
	.loc	1 32 43                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:32:43
	mov.b32 	%f7, %r3;
	.loc	1 42 18                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:42:18
	sub.f32 	%f8, %f7, %f5;
	.loc	1 41 53                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:41:53
	mov.b32 	%f9, %r10;
	mov.b32 	%f10, %r9;
	.loc	1 39 20                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:39:20
	mov.b32 	%f11, %r8;
	.loc	1 37 20                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:37:20
	mov.b32 	%f12, %r7;
	.loc	1 47 19                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:47:19
	mov.b32 	%r13, %f3;
	mov.b32 	%r12, 1065353216;
	// begin inline asm
	div.full.f32 %r11, %r12, %r13;
	// end inline asm
	mov.b32 	%f13, %r11;
	.loc	1 50 19                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:50:19
	mul.f32 	%f14, %f8, %f13;
	mul.f32 	%f15, %f6, %f13;
	.loc	1 52 20                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:52:20
	fma.rn.f32 	%f16, %f14, %f12, %f11;
	fma.rn.f32 	%f17, %f15, %f12, %f11;
	shl.b32 	%r57, %r31, 7;
	or.b32  	%r58, %r57, %r26;
	or.b32  	%r59, %r58, %r28;
	or.b32  	%r60, %r59, %r30;
	shl.b32 	%r61, %r31, 4;
	mov.u32 	%r62, global_smem;
	add.s32 	%r63, %r62, %r61;
	shl.b32 	%r64, %r60, 2;
	add.s32 	%r14, %r63, %r64;
	mov.b32 	%r15, %f16;
	// begin inline asm
	@%p2 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	shr.u32 	%r65, %r57, 3;
	add.s32 	%r66, %r62, %r65;
	add.s32 	%r67, %r66, %r64;
	add.s32 	%r16, %r67, 264;
	mov.b32 	%r17, %f17;
	// begin inline asm
	@%p2 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r68, %r25, 2;
	and.b32  	%r69, %r68, 24;
	add.s32 	%r70, %r62, %r69;
	shl.b32 	%r71, %r25, 3;
	and.b32  	%r72, %r71, 1016;
	add.s32 	%r73, %r70, %r72;
	ld.shared.v2.f32 	{%f18, %f19}, [%r73];
	.loc	1 53 20                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:53:20
	sub.f32 	%f20, %f10, %f5;
	sub.f32 	%f21, %f9, %f5;
	.loc	1 54 20                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:54:20
	mul.f32 	%f22, %f20, %f13;
	mul.f32 	%f23, %f21, %f13;
	.loc	1 56 20                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:56:20
	fma.rn.f32 	%f24, %f22, %f12, %f11;
	fma.rn.f32 	%f25, %f23, %f12, %f11;
	.loc	1 57 20                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:57:20
	add.f32 	%f26, %f24, %f18;
	add.f32 	%f27, %f25, %f19;
	.loc	1 58 25                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:58:25
	add.s64 	%rd7, %rd10, %rd11;
	.loc	1 58 45                         // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:58:45
	bar.sync 	0;
	and.b32  	%r74, %r71, 248;
	or.b32  	%r75, %r41, %r74;
	add.s32 	%r76, %r62, %r74;
	shl.b32 	%r77, %r75, 2;
	add.s32 	%r18, %r76, %r77;
	mov.b32 	%r19, %f26;
	// begin inline asm
	@%p2 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r18, 20;
	mov.b32 	%r21, %f27;
	// begin inline asm
	@%p2 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r78, %r33, 252;
	add.s32 	%r79, %r62, %r78;
	add.s32 	%r80, %r79, %r72;
	ld.shared.u32 	%r22, [%r80];
	ld.shared.u32 	%r23, [%r80+4];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd7 + 0 ], { %r22, %r23 };
	// end inline asm
	.loc	1 58 4                          // cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py:58:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/dt/cdtli7kggothntk2ytjn77zsyeyfz2rwbazvudzvsofqezaum7et.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 116
.b8 108
.b8 105
.b8 55
.b8 107
.b8 103
.b8 103
.b8 111
.b8 116
.b8 104
.b8 110
.b8 116
.b8 107
.b8 50
.b8 121
.b8 116
.b8 106
.b8 110
.b8 55
.b8 55
.b8 122
.b8 115
.b8 121
.b8 101
.b8 121
.b8 102
.b8 122
.b8 50
.b8 114
.b8 119
.b8 98
.b8 97
.b8 122
.b8 118
.b8 117
.b8 100
.b8 122
.b8 118
.b8 115
.b8 111
.b8 102
.b8 113
.b8 101
.b8 122
.b8 97
.b8 117
.b8 109
.b8 55
.b8 101
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 116
.b8 0
	}
	.section	.debug_macinfo	{	}
