; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %12 = sdiv i32 %.frozen, 4, !dbg !14
  %13 = mul i32 %12, 4, !dbg !15
  %.decomposed = sub i32 %.frozen, %13, !dbg !15
  %14 = srem i32 %11, 4, !dbg !15
  %15 = srem i32 %12, 4, !dbg !16
  %16 = shl nsw i32 %.decomposed, 1, !dbg !17
  %17 = shl nsw i32 %14, 1, !dbg !17
  %18 = shl i32 %12, 4, !dbg !18
  %19 = add i32 %16, %18, !dbg !19
  %20 = add i32 %18, %17, !dbg !19
  %21 = sext i32 %19 to i64, !dbg !20
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !20
  %23 = sext i32 %20 to i64, !dbg !20
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !20
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 true) #1, !dbg !21
  %26 = bitcast i32 %25 to float, !dbg !21
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #1, !dbg !21
  %28 = bitcast i32 %27 to float, !dbg !21
  %29 = or disjoint i32 %19, 1, !dbg !22
  %30 = or disjoint i32 %20, 1, !dbg !22
  %31 = sext i32 %29 to i64, !dbg !23
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !23
  %33 = sext i32 %30 to i64, !dbg !23
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !23
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 true) #1, !dbg !24
  %36 = bitcast i32 %35 to float, !dbg !24
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #1, !dbg !24
  %38 = bitcast i32 %37 to float, !dbg !24
  %39 = add i32 %19, 8, !dbg !25
  %40 = add i32 %20, 8, !dbg !25
  %41 = sext i32 %39 to i64, !dbg !26
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !26
  %43 = sext i32 %40 to i64, !dbg !26
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !26
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #1, !dbg !27
  %46 = bitcast i32 %45 to float, !dbg !27
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #1, !dbg !27
  %48 = bitcast i32 %47 to float, !dbg !27
  %49 = add i32 %19, 9, !dbg !28
  %50 = add i32 %20, 9, !dbg !28
  %51 = sext i32 %49 to i64, !dbg !29
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !29
  %53 = sext i32 %50 to i64, !dbg !29
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !29
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 true) #1, !dbg !30
  %56 = bitcast i32 %55 to float, !dbg !30
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 true) #1, !dbg !30
  %58 = bitcast i32 %57 to float, !dbg !30
  %59 = fcmp ogt float %36, %26, !dbg !31
  %60 = fcmp ogt float %38, %28, !dbg !31
  %61 = fcmp uno float %36, 0.000000e+00, !dbg !35
  %62 = fcmp uno float %38, 0.000000e+00, !dbg !35
  %63 = or i1 %59, %61, !dbg !36
  %64 = or i1 %60, %62, !dbg !36
  %65 = select i1 %63, float %36, float %26, !dbg !37
  %66 = select i1 %64, float %38, float %28, !dbg !37
  %67 = fcmp olt float %65, %46, !dbg !38
  %68 = fcmp olt float %66, %48, !dbg !38
  %69 = fcmp uno float %46, 0.000000e+00, !dbg !40
  %70 = fcmp uno float %48, 0.000000e+00, !dbg !40
  %71 = or i1 %69, %67, !dbg !41
  %72 = or i1 %70, %68, !dbg !41
  %73 = select i1 %71, float %46, float %65, !dbg !42
  %74 = select i1 %72, float %48, float %66, !dbg !42
  %75 = fcmp olt float %73, %56, !dbg !43
  %76 = fcmp olt float %74, %58, !dbg !43
  %77 = fcmp uno float %56, 0.000000e+00, !dbg !45
  %78 = fcmp uno float %58, 0.000000e+00, !dbg !45
  %79 = or i1 %77, %75, !dbg !46
  %80 = or i1 %78, %76, !dbg !46
  %81 = zext i1 %59 to i32, !dbg !47
  %82 = select i1 %67, i32 2, i32 %81, !dbg !48
  %83 = select i1 %75, i32 3, i32 %82, !dbg !49
  %84 = zext i1 %60 to i32, !dbg !47
  %85 = select i1 %68, i32 2, i32 %84, !dbg !48
  %86 = select i1 %76, i32 3, i32 %85, !dbg !49
  %87 = lshr i32 %83, 1, !dbg !50
  %88 = lshr i32 %86, 1, !dbg !50
  %89 = and i32 %83, 1, !dbg !51
  %90 = shl nsw i32 %15, 1, !dbg !52
  %91 = or disjoint i32 %87, %90, !dbg !53
  %92 = or disjoint i32 %88, %90, !dbg !53
  %93 = or disjoint i32 %89, %16, !dbg !54
  %94 = or i32 %86, %17, !dbg !54
  %95 = sext i32 %91 to i64, !dbg !55
  %96 = sext i32 %92 to i64, !dbg !55
  %97 = shl nsw i64 %95, 3, !dbg !55
  %98 = shl nsw i64 %96, 3, !dbg !55
  %99 = sext i32 %93 to i64, !dbg !56
  %100 = sext i32 %94 to i64, !dbg !56
  %101 = add nsw i64 %97, %99, !dbg !56
  %102 = add nsw i64 %98, %100, !dbg !56
  %103 = sext i32 %10 to i64, !dbg !57
  %104 = getelementptr float, ptr addrspace(1) %1, i64 %103, !dbg !57
  %105 = bitcast float %73 to i32, !dbg !58
  %106 = select i1 %79, i32 %55, i32 %105, !dbg !59
  %107 = bitcast float %74 to i32, !dbg !58
  %108 = select i1 %80, i32 %57, i32 %107, !dbg !59
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %106, i32 %108, ptr addrspace(1) %104, i1 true) #1, !dbg !58
  %109 = getelementptr i64, ptr addrspace(1) %2, i64 %103, !dbg !60
  tail call void asm sideeffect "@$3 st.global.v2.b64 [ $2 + 0 ], { $0, $1 };", "l,l,l,b"(i64 %101, i64 %102, ptr addrspace(1) %109, i1 true) #1, !dbg !61
  ret void, !dbg !62
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chrp4jud5ajpfa3wi6kzf3y2ek3zvgstiu6d6xgddk3lecou2cjy.py", directory: "inductor_cache/hr")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_7, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_7, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_7", linkageName: "triton_poi_fused_max_pool2d_with_indices_7", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 26, scope: !7)
!17 = !DILocation(line: 28, column: 32, scope: !7)
!18 = !DILocation(line: 28, column: 40, scope: !7)
!19 = !DILocation(line: 28, column: 37, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 45, scope: !7)
!22 = !DILocation(line: 29, column: 41, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 49, scope: !7)
!25 = !DILocation(line: 30, column: 41, scope: !7)
!26 = !DILocation(line: 30, column: 30, scope: !7)
!27 = !DILocation(line: 30, column: 49, scope: !7)
!28 = !DILocation(line: 31, column: 41, scope: !7)
!29 = !DILocation(line: 31, column: 30, scope: !7)
!30 = !DILocation(line: 31, column: 49, scope: !7)
!31 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !7, file: !33, discriminator: 0)
!33 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!34 = !DILocation(line: 32, column: 40, scope: !7)
!35 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !34)
!36 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !34)
!37 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !34)
!38 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !39)
!39 = !DILocation(line: 33, column: 40, scope: !7)
!40 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !39)
!41 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !39)
!42 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !39)
!43 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !44)
!44 = !DILocation(line: 34, column: 40, scope: !7)
!45 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !44)
!46 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !44)
!47 = !DILocation(line: 46, column: 30, scope: !7)
!48 = !DILocation(line: 41, column: 35, scope: !7)
!49 = !DILocation(line: 44, column: 35, scope: !7)
!50 = !DILocation(line: 46, column: 87, scope: !7)
!51 = !DILocation(line: 48, column: 20, scope: !7)
!52 = !DILocation(line: 49, column: 14, scope: !7)
!53 = !DILocation(line: 50, column: 20, scope: !7)
!54 = !DILocation(line: 52, column: 20, scope: !7)
!55 = !DILocation(line: 54, column: 20, scope: !7)
!56 = !DILocation(line: 55, column: 20, scope: !7)
!57 = !DILocation(line: 56, column: 25, scope: !7)
!58 = !DILocation(line: 56, column: 36, scope: !7)
!59 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !44)
!60 = !DILocation(line: 57, column: 25, scope: !7)
!61 = !DILocation(line: 57, column: 37, scope: !7)
!62 = !DILocation(line: 57, column: 4, scope: !7)
