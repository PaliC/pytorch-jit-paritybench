; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 5, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 4, !dbg !12
  %9 = and i32 %8, 7, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 8, !dbg !13
  %12 = or disjoint i32 %10, 16, !dbg !13
  %13 = or disjoint i32 %10, 24, !dbg !13
  %14 = icmp slt i32 %10, 24, !dbg !14
  %15 = icmp slt i32 %11, 24, !dbg !14
  %16 = icmp slt i32 %12, 24, !dbg !14
  %17 = icmp slt i32 %6, 0, !dbg !14
  %18 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !15
  %19 = shl i32 %18, 4, !dbg !16
  %20 = and i32 %7, 15, !dbg !17
  %21 = or disjoint i32 %19, %20, !dbg !18
  %22 = icmp slt i32 %21, 9, !dbg !19
  %.frozen = freeze i32 %10, !dbg !20
  %23 = sdiv i32 %.frozen, 3, !dbg !20
  %24 = mul i32 %23, 3, !dbg !21
  %.decomposed = sub i32 %.frozen, %24, !dbg !21
  %.frozen1 = freeze i32 %11, !dbg !20
  %25 = sdiv i32 %.frozen1, 3, !dbg !20
  %26 = mul i32 %25, 3, !dbg !21
  %.decomposed2 = sub i32 %.frozen1, %26, !dbg !21
  %.frozen3 = freeze i32 %12, !dbg !20
  %27 = sdiv i32 %.frozen3, 3, !dbg !20
  %28 = mul i32 %27, 3, !dbg !21
  %.decomposed4 = sub i32 %.frozen3, %28, !dbg !21
  %.frozen5 = freeze i32 %13, !dbg !20
  %29 = sdiv i32 %.frozen5, 3, !dbg !20
  %30 = mul i32 %29, 3, !dbg !21
  %.decomposed6 = sub i32 %.frozen5, %30, !dbg !21
  %31 = mul i32 %10, 9, !dbg !22
  %32 = mul i32 %11, 9, !dbg !22
  %33 = mul i32 %12, 9, !dbg !22
  %34 = mul i32 %13, 9, !dbg !22
  %35 = add i32 %21, %31, !dbg !23
  %36 = add i32 %21, %32, !dbg !23
  %37 = add i32 %21, %33, !dbg !23
  %38 = add i32 %21, %34, !dbg !23
  %39 = sext i32 %35 to i64, !dbg !24
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !24
  %41 = sext i32 %36 to i64, !dbg !24
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !24
  %43 = sext i32 %37 to i64, !dbg !24
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !24
  %45 = sext i32 %38 to i64, !dbg !24
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !24
  %47 = and i1 %14, %22, !dbg !25
  %48 = and i1 %15, %22, !dbg !25
  %49 = and i1 %16, %22, !dbg !25
  %50 = and i1 %17, %22, !dbg !25
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %47) #1, !dbg !26
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %48) #1, !dbg !26
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %49) #1, !dbg !26
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %50) #1, !dbg !26
  %55 = mul i32 %21, 3, !dbg !27
  %56 = add i32 %55, %.decomposed, !dbg !28
  %57 = mul i32 %23, 27, !dbg !29
  %58 = mul i32 %25, 27, !dbg !29
  %59 = mul i32 %27, 27, !dbg !29
  %60 = mul i32 %29, 27, !dbg !29
  %61 = add i32 %56, %57, !dbg !30
  %62 = add i32 %58, %.decomposed2, !dbg !28
  %63 = add i32 %62, %55, !dbg !30
  %64 = add i32 %59, %.decomposed4, !dbg !28
  %65 = add i32 %64, %55, !dbg !30
  %66 = add i32 %60, %.decomposed6, !dbg !28
  %67 = add i32 %66, %55, !dbg !30
  %68 = sext i32 %61 to i64, !dbg !31
  %69 = getelementptr float, ptr addrspace(1) %1, i64 %68, !dbg !31
  %70 = sext i32 %63 to i64, !dbg !31
  %71 = getelementptr float, ptr addrspace(1) %1, i64 %70, !dbg !31
  %72 = sext i32 %65 to i64, !dbg !31
  %73 = getelementptr float, ptr addrspace(1) %1, i64 %72, !dbg !31
  %74 = sext i32 %67 to i64, !dbg !31
  %75 = getelementptr float, ptr addrspace(1) %1, i64 %74, !dbg !31
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %51, ptr addrspace(1) %69, i1 %47) #1, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %52, ptr addrspace(1) %71, i1 %48) #1, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %53, ptr addrspace(1) %73, i1 %49) #1, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %54, ptr addrspace(1) %75, i1 %50) #1, !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cs4ldyhblxgwadizz3jjaknyygoops7xwlhwdi3omnuhxbt3qaym.py", directory: "inductor_cache/s4")
!4 = !{ptr @triton_poi_fused_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_0", linkageName: "triton_poi_fused_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 31, column: 19, scope: !7)
!21 = !DILocation(line: 30, column: 19, scope: !7)
!22 = !DILocation(line: 32, column: 37, scope: !7)
!23 = !DILocation(line: 32, column: 35, scope: !7)
!24 = !DILocation(line: 32, column: 30, scope: !7)
!25 = !DILocation(line: 32, column: 50, scope: !7)
!26 = !DILocation(line: 32, column: 42, scope: !7)
!27 = !DILocation(line: 33, column: 32, scope: !7)
!28 = !DILocation(line: 33, column: 30, scope: !7)
!29 = !DILocation(line: 33, column: 40, scope: !7)
!30 = !DILocation(line: 33, column: 37, scope: !7)
!31 = !DILocation(line: 33, column: 25, scope: !7)
!32 = !DILocation(line: 33, column: 51, scope: !7)
!33 = !DILocation(line: 33, column: 4, scope: !7)
