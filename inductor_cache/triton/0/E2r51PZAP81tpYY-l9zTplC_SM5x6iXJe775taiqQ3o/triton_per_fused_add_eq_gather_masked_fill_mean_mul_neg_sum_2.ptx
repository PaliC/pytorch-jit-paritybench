//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_eq_gather_masked_fill_mean_mul_neg_sum_2 // -- Begin function triton_per_fused_add_eq_gather_masked_fill_mean_mul_neg_sum_2
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 105, 99, 47, 99, 105, 99, 53, 55, 119, 99, 110, 99, 120, 98, 107, 100, 115, 117, 122, 108, 115, 97, 53, 110, 104, 97, 116, 100, 100, 101, 102, 120, 54, 116, 51, 110, 117, 117, 98, 51, 116, 103, 107, 98, 110, 115, 51, 99, 105, 119, 122, 122, 109, 116, 51, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 56, 32, 60, 32, 52};
                                        // @triton_per_fused_add_eq_gather_masked_fill_mean_mul_neg_sum_2
.visible .entry triton_per_fused_add_eq_gather_masked_fill_mean_mul_neg_sum_2(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_eq_gather_masked_fill_mean_mul_neg_sum_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_eq_gather_masked_fill_mean_mul_neg_sum_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_eq_gather_masked_fill_mean_mul_neg_sum_2_param_2,
	.param .u32 triton_per_fused_add_eq_gather_masked_fill_mean_mul_neg_sum_2_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<37>;
	.reg .f32 	%f<33>;
	.reg .b64 	%rd<35>;
	.loc	1 19 0                          // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_per_fused_add_eq_gather_masked_fill_mean_mul_neg_sum_2_param_2];
$L__tmp0:
	.loc	1 26 34                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:26:34
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd13, [triton_per_fused_add_eq_gather_masked_fill_mean_mul_neg_sum_2_param_1];
	and.b32  	%r10, %r1, 15;
	.loc	1 32 33                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:32:33
	and.b32  	%r11, %r1, 12;
	.loc	1 31 30                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:31:30
	mul.wide.u32 	%rd14, %r10, 8;
	add.s64 	%rd6, %rd13, %rd14;
	mov.pred 	%p6, -1;
	.loc	1 31 35                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:31:35
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p6 ld.global.b64 { %rd5 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p6 ld.global.b64 { %rd7 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 32 31                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:32:31
	mul.wide.u32 	%rd15, %r11, 4;
	add.s64 	%rd9, %rd4, %rd15;
	.loc	1 32 38                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:32:38
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r6 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 33 31                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:33:31
	add.s64 	%rd10, %rd9, 4;
	.loc	1 33 42                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:33:42
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r7 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 34 31                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:34:31
	add.s64 	%rd11, %rd9, 8;
	.loc	1 34 42                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:34:42
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r8 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:35:31
	add.s64 	%rd12, %rd9, 12;
	.loc	1 35 42                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:35:42
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r9 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 37 19                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:37:19
	setp.eq.s64 	%p7, %rd7, -100;
	.loc	1 39 32                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:39:32
	selp.b64 	%rd16, 0, %rd7, %p7;
	.loc	1 43 32                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:43:32
	shr.u64 	%rd17, %rd16, 61;
	and.b64  	%rd18, %rd17, 4;
	add.s64 	%rd19, %rd18, %rd16;
	.loc	1 44 36                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:44:36
	setp.lt.u64 	%p8, %rd19, 4;
	.loc	1 44 47                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:44:47
	@%p8 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 47                          // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:0:47
	ld.param.u64 	%rd21, [triton_per_fused_add_eq_gather_masked_fill_mean_mul_neg_sum_2_param_0];
	cvt.u64.u32 	%rd2, %r11;
	.loc	1 37 19                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:37:19
	setp.eq.s64 	%p11, %rd5, -100;
	.loc	1 39 32                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:39:32
	selp.b64 	%rd22, 0, %rd5, %p11;
	.loc	1 35 42                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:35:42
	mov.b32 	%f1, %r9;
	.loc	1 34 42                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:34:42
	mov.b32 	%f2, %r8;
	.loc	1 33 42                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:33:42
	mov.b32 	%f3, %r7;
	.loc	1 32 38                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:32:38
	mov.b32 	%f4, %r6;
	.loc	1 44 47                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:44:47
	bar.sync 	0;
	.loc	1 45 31                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:45:31
	shl.b64 	%rd23, %rd22, 2;
	add.s64 	%rd24, %rd4, %rd23;
	shr.u64 	%rd25, %rd22, 59;
	and.b64  	%rd26, %rd25, 16;
	add.s64 	%rd27, %rd24, %rd26;
	shl.b64 	%rd28, %rd2, 2;
	add.s64 	%rd20, %rd27, %rd28;
	.loc	1 45 45                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:45:45
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r12 }, [ %rd20 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r12;
	mov.f32 	%f6, 0f00000000;
	.loc	1 46 13                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:46:13
	sub.f32 	%f7, %f6, %f5;
	.loc	1 48 34                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:48:34
	selp.f32 	%f8, 0f00000000, %f7, %p11;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r20, %f8;
	shfl.sync.bfly.b32	%r21, %r20, 8, 31, -1;
	mov.b32 	%f9, %r21;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r22, %f10;
	shfl.sync.bfly.b32	%r23, %r22, 4, 31, -1;
	mov.b32 	%f11, %r23;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f12;
	shfl.sync.bfly.b32	%r25, %r24, 2, 31, -1;
	mov.b32 	%f13, %r25;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r26, %f14;
	shfl.sync.bfly.b32	%r27, %r26, 1, 31, -1;
	mov.b32 	%f15, %r27;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
$L__tmp2:
	.loc	1 51 20                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:51:20
	add.f32 	%f17, %f4, %f3;
	.loc	1 52 20                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:52:20
	add.f32 	%f18, %f17, %f2;
	.loc	1 53 20                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:53:20
	add.f32 	%f19, %f18, %f1;
	.loc	1 54 13                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:54:13
	sub.f32 	%f20, %f6, %f19;
	.loc	1 55 34                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:55:34
	selp.f32 	%f21, 0f00000000, %f20, %p11;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f21;
	shfl.sync.bfly.b32	%r29, %r28, 8, 31, -1;
	mov.b32 	%f22, %r29;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f23;
	shfl.sync.bfly.b32	%r31, %r30, 4, 31, -1;
	mov.b32 	%f24, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f25;
	shfl.sync.bfly.b32	%r33, %r32, 2, 31, -1;
	mov.b32 	%f26, %r33;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f27;
	shfl.sync.bfly.b32	%r35, %r34, 1, 31, -1;
	mov.b32 	%f28, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
$L__tmp4:
	.loc	1 59 20                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:59:20
	mov.b32 	%r14, %f16;
	mov.b32 	%r15, 1098907648;
	// begin inline asm
	div.full.f32 %r13, %r14, %r15;
	// end inline asm
	mov.b32 	%f30, %r13;
	.loc	1 62 20                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:62:20
	mov.b32 	%r17, %f29;
	// begin inline asm
	div.full.f32 %r16, %r17, %r15;
	// end inline asm
	mov.b32 	%f31, %r16;
	.loc	1 64 20                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:64:20
	fma.rn.f32 	%f32, %f31, 0f00000000, %f30;
	.loc	1 65 4                          // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:65:4
	bar.sync 	0;
	.loc	1 66 71                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:66:71
	and.b32  	%r36, %r1, 63;
	setp.eq.s32 	%p10, %r36, 0;
	mov.b32 	%r19, %f32;
	// begin inline asm
	@%p10 st.global.b32 [ %rd21 + 0 ], { %r19 };
	// end inline asm
	.loc	1 66 4                          // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:66:4
	ret;
$L__BB0_1:
	.loc	1 44 47                         // cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py:44:47
	mov.u64 	%rd29, assertMessage_0;
	cvta.global.u64 	%rd30, %rd29;
	mov.u64 	%rd31, assertFile_0;
	cvta.global.u64 	%rd32, %rd31;
	mov.u64 	%rd33, assertFunc_0;
	cvta.global.u64 	%rd34, %rd33;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1], %rd32;
	.param .b32 param2;
	st.param.b32 	[param2], 44;
	.param .b64 param3;
	st.param.b64 	[param3], %rd34;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ic/cic57wcncxbkdsuzlsa5nhatddefx6t3nuub3tgkbns3ciwzzmt3.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 230                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 99
.b8 53
.b8 55
.b8 119
.b8 99
.b8 110
.b8 99
.b8 120
.b8 98
.b8 107
.b8 100
.b8 115
.b8 117
.b8 122
.b8 108
.b8 115
.b8 97
.b8 53
.b8 110
.b8 104
.b8 97
.b8 116
.b8 100
.b8 100
.b8 101
.b8 102
.b8 120
.b8 54
.b8 116
.b8 51
.b8 110
.b8 117
.b8 117
.b8 98
.b8 51
.b8 116
.b8 103
.b8 107
.b8 98
.b8 110
.b8 115
.b8 51
.b8 99
.b8 105
.b8 119
.b8 122
.b8 122
.b8 109
.b8 116
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 99
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x40 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 113
.b8 95
.b8 103
.b8 97
.b8 116
.b8 104
.b8 101
.b8 114
.b8 95
.b8 109
.b8 97
.b8 115
.b8 107
.b8 101
.b8 100
.b8 95
.b8 102
.b8 105
.b8 108
.b8 108
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 101
.b8 103
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa3:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 57                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
