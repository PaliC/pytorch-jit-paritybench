//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_18 // -- Begin function triton_poi_fused_clone_18
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_clone_18
.visible .entry triton_poi_fused_clone_18(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_18_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_18_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_18_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_18_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_18_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_18_param_5,
	.param .u32 triton_poi_fused_clone_18_param_6,
	.param .u32 triton_poi_fused_clone_18_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<85>;
	.reg .f32 	%f<15>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused_clone_18_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_clone_18_param_1];
$L__tmp0:
	.loc	1 22 28                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:22:33
	shl.b32 	%r19, %r1, 4;
	ld.param.u64 	%rd11, [triton_poi_fused_clone_18_param_2];
	ld.param.u64 	%rd12, [triton_poi_fused_clone_18_param_3];
	.loc	1 23 44                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:23:44
	mov.u32 	%r20, %tid.x;
	shl.b32 	%r21, %r20, 1;
	ld.param.u64 	%rd13, [triton_poi_fused_clone_18_param_4];
	and.b32  	%r22, %r21, 14;
	ld.param.u64 	%rd14, [triton_poi_fused_clone_18_param_5];
	bfe.u32 	%r23, %r20, 3, 4;
	.loc	1 23 23                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:23:23
	or.b32  	%r24, %r19, %r22;
	or.b32  	%r25, %r19, %r23;
	.loc	1 24 21                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:24:21
	setp.lt.s32 	%p6, %r25, 16;
	.loc	1 25 28                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:25:33
	shl.b32 	%r26, %r2, 4;
	.loc	1 26 23                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:26:23
	or.b32  	%r27, %r26, %r23;
	or.b32  	%r28, %r26, %r22;
	.loc	1 27 21                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:27:21
	setp.lt.s32 	%p11, %r28, 16;
	.loc	1 29 19                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:29:19
	shr.s32 	%r30, %r27, 31;
	shr.u32 	%r31, %r30, 30;
	add.s32 	%r32, %r27, %r31;
	.loc	1 28 19                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:28:19
	and.b32  	%r33, %r32, 1073741820;
	sub.s32 	%r34, %r27, %r33;
	.loc	1 29 19                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:29:19
	shr.s32 	%r36, %r28, 31;
	shr.u32 	%r37, %r36, 30;
	add.s32 	%r38, %r28, %r37;
	.loc	1 28 19                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:28:19
	and.b32  	%r39, %r38, -4;
	sub.s32 	%r40, %r28, %r39;
	.loc	1 31 19                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:31:19
	shr.s32 	%r42, %r24, 31;
	shr.u32 	%r43, %r42, 30;
	add.s32 	%r44, %r24, %r43;
	.loc	1 30 19                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:30:19
	and.b32  	%r45, %r44, -4;
	sub.s32 	%r46, %r24, %r45;
	.loc	1 31 19                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:31:19
	shr.s32 	%r48, %r25, 31;
	shr.u32 	%r49, %r48, 30;
	add.s32 	%r50, %r25, %r49;
	.loc	1 30 19                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:30:19
	and.b32  	%r51, %r50, -4;
	sub.s32 	%r52, %r25, %r51;
	.loc	1 34 37                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:34:37
	shl.b32 	%r53, %r34, 2;
	.loc	1 34 45                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:34:45
	shl.b32 	%r54, %r44, 2;
	and.b32  	%r55, %r54, -16;
	.loc	1 34 53                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:34:53
	shl.b32 	%r56, %r32, 4;
	and.b32  	%r57, %r56, -64;
	.loc	1 34 35                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:34:35
	add.s32 	%r58, %r55, %r46;
	.loc	1 34 42                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:34:42
	add.s32 	%r59, %r58, %r53;
	.loc	1 34 50                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:34:50
	add.s32 	%r60, %r59, %r57;
	.loc	1 34 30                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:34:30
	mul.wide.s32 	%rd15, %r60, 4;
	add.s64 	%rd1, %rd9, %rd15;
	.loc	1 34 66                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:34:66
	max.s32 	%r61, %r24, %r27;
	setp.lt.s32 	%p1, %r61, 16;
	and.pred  	%p4, %p6, %p11;
	.loc	1 34 58                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:34:58
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	shl.b32 	%r62, %r20, 5;
	and.b32  	%r63, %r62, 224;
	or.b32  	%r64, %r63, %r23;
	shr.u32 	%r65, %r63, 2;
	mov.u32 	%r66, global_smem;
	add.s32 	%r67, %r66, %r65;
	shl.b32 	%r68, %r64, 2;
	add.s32 	%r5, %r67, %r68;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	or.b32  	%r69, %r63, 16;
	shr.u32 	%r70, %r69, 2;
	add.s32 	%r71, %r66, %r70;
	add.s32 	%r72, %r71, %r68;
	add.s32 	%r7, %r72, 64;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r73, %r20, 1;
	and.b32  	%r74, %r73, 60;
	add.s32 	%r75, %r66, %r74;
	shl.b32 	%r76, %r20, 3;
	and.b32  	%r77, %r76, 1016;
	add.s32 	%r78, %r75, %r77;
	ld.shared.f32 	%f1, [%r78];
	ld.shared.f32 	%f2, [%r78+4];
	.loc	1 35 35                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:35:35
	add.s32 	%r79, %r40, %r51;
	.loc	1 35 45                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:35:45
	shl.b32 	%r80, %r38, 2;
	and.b32  	%r81, %r80, -16;
	.loc	1 35 42                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:35:42
	add.s32 	%r82, %r79, %r81;
	.loc	1 35 30                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:35:30
	mul.wide.s32 	%rd16, %r82, 4;
	add.s64 	%rd2, %rd10, %rd16;
	.loc	1 35 50                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:35:50
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r9;
	mov.b32 	%f4, %r10;
	.loc	1 36 30                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:36:30
	add.s64 	%rd3, %rd11, %rd16;
	.loc	1 36 50                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:36:50
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r11;
	mov.b32 	%f6, %r12;
	.loc	1 37 30                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:37:30
	mul.wide.s32 	%rd17, %r52, 4;
	add.s64 	%rd4, %rd12, %rd17;
	.loc	1 37 35                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:37:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r13 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r14 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r14;
	.loc	1 38 30                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:38:30
	add.s64 	%rd6, %rd13, %rd17;
	.loc	1 38 35                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:38:35
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r15 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r16 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r16;
	.loc	1 39 18                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:39:18
	sub.f32 	%f9, %f1, %f3;
	sub.f32 	%f10, %f2, %f4;
	.loc	1 40 18                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:40:18
	mul.f32 	%f11, %f9, %f5;
	mul.f32 	%f12, %f10, %f6;
	.loc	1 42 18                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:42:18
	fma.rn.f32 	%f13, %f11, %f7, %f8;
	fma.rn.f32 	%f14, %f12, %f7, %f8;
	.loc	1 43 33                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:43:33
	shl.b32 	%r83, %r25, 4;
	.loc	1 43 30                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:43:30
	add.s32 	%r84, %r28, %r83;
	.loc	1 43 25                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:43:25
	mul.wide.s32 	%rd18, %r84, 4;
	add.s64 	%rd8, %rd14, %rd18;
	.loc	1 43 44                         // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:43:44
	mov.b32 	%r17, %f13;
	mov.b32 	%r18, %f14;
	// begin inline asm
	@%p4 st.global.v2.b32 [ %rd8 + 0 ], { %r17, %r18 };
	// end inline asm
	.loc	1 43 4                          // c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py:43:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/4a/c4ampnubwwoal6gcjldlbfhe7se3ncl57u2yzocbtdashlekjpiw.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 97
.b8 109
.b8 112
.b8 110
.b8 117
.b8 98
.b8 119
.b8 119
.b8 111
.b8 97
.b8 108
.b8 54
.b8 103
.b8 99
.b8 106
.b8 108
.b8 100
.b8 108
.b8 98
.b8 102
.b8 104
.b8 101
.b8 55
.b8 115
.b8 101
.b8 51
.b8 110
.b8 99
.b8 108
.b8 53
.b8 55
.b8 117
.b8 50
.b8 121
.b8 122
.b8 111
.b8 99
.b8 98
.b8 116
.b8 100
.b8 97
.b8 115
.b8 104
.b8 108
.b8 101
.b8 107
.b8 106
.b8 112
.b8 105
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 52
.b8 97
.b8 0
	}
	.section	.debug_macinfo	{	}
