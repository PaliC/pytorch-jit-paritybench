; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__native_batch_norm_legit_convolution_elu_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %9 = shl i32 %8, 5, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = lshr i32 %10, 4, !dbg !12
  %12 = and i32 %11, 15, !dbg !12
  %13 = or disjoint i32 %12, 16, !dbg !12
  %14 = and i32 %10, 31, !dbg !12
  %15 = or disjoint i32 %9, %12, !dbg !13
  %16 = or disjoint i32 %9, %13, !dbg !13
  %17 = icmp slt i32 %15, 128, !dbg !14
  %18 = icmp slt i32 %16, 128, !dbg !14
  %19 = shl i32 %10, 2, !dbg !15
  %20 = and i32 %19, 60, !dbg !15
  %21 = srem i32 %15, 32, !dbg !16
  %22 = srem i32 %16, 32, !dbg !16
  %23 = shl i32 %15, 6, !dbg !17
  %24 = shl i32 %16, 6, !dbg !17
  %25 = or disjoint i32 %23, %20, !dbg !18
  %26 = or disjoint i32 %24, %20, !dbg !18
  %27 = sext i32 %25 to i64, !dbg !19
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !19
  %29 = sext i32 %26 to i64, !dbg !19
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !19
  %31 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %28, i1 %17, i32 0, i1 %17, i32 0, i1 %17, i32 0, i1 %17, i32 0, i1 %17) #5, !dbg !20
  %32 = extractvalue { i32, i32, i32, i32 } %31, 0, !dbg !20
  %33 = extractvalue { i32, i32, i32, i32 } %31, 1, !dbg !20
  %34 = extractvalue { i32, i32, i32, i32 } %31, 2, !dbg !20
  %35 = extractvalue { i32, i32, i32, i32 } %31, 3, !dbg !20
  %36 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %30, i1 %18, i32 0, i1 %18, i32 0, i1 %18, i32 0, i1 %18, i32 0, i1 %18) #5, !dbg !20
  %37 = extractvalue { i32, i32, i32, i32 } %36, 0, !dbg !20
  %38 = extractvalue { i32, i32, i32, i32 } %36, 1, !dbg !20
  %39 = extractvalue { i32, i32, i32, i32 } %36, 2, !dbg !20
  %40 = extractvalue { i32, i32, i32, i32 } %36, 3, !dbg !20
  %41 = sext i32 %21 to i64, !dbg !21
  %42 = getelementptr float, ptr addrspace(1) %2, i64 %41, !dbg !21
  %43 = sext i32 %22 to i64, !dbg !21
  %44 = getelementptr float, ptr addrspace(1) %2, i64 %43, !dbg !21
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %17) #5, !dbg !22
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %17) #5, !dbg !22
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %17) #5, !dbg !22
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %17) #5, !dbg !22
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %18) #5, !dbg !22
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %18) #5, !dbg !22
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %18) #5, !dbg !22
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %18) #5, !dbg !22
  %53 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %12, !dbg !23
  %54 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %13, !dbg !23
  %55 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %14, !dbg !23
  %56 = insertelement <8 x i32> poison, i32 %40, i64 0, !dbg !20
  %57 = insertelement <8 x i32> %56, i32 %32, i64 1, !dbg !20
  %58 = insertelement <8 x i32> %57, i32 %33, i64 2, !dbg !20
  %59 = insertelement <8 x i32> %58, i32 %34, i64 3, !dbg !20
  %60 = insertelement <8 x i32> %59, i32 %35, i64 4, !dbg !20
  %61 = insertelement <8 x i32> %60, i32 %37, i64 5, !dbg !20
  %62 = insertelement <8 x i32> %61, i32 %38, i64 6, !dbg !20
  %63 = insertelement <8 x i32> %62, i32 %39, i64 7, !dbg !20
  %64 = bitcast <8 x i32> %63 to <8 x float>, !dbg !20
  %65 = insertelement <2 x i32> poison, i32 %52, i64 0, !dbg !22
  %66 = insertelement <2 x i32> %65, i32 %48, i64 1, !dbg !22
  %67 = bitcast <2 x i32> %66 to <2 x float>, !dbg !22
  %68 = shufflevector <2 x float> %67, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0>, !dbg !22
  %69 = fadd <8 x float> %68, %64, !dbg !24
  %70 = extractelement <8 x float> %69, i64 1, !dbg !25
  %71 = extractelement <8 x float> %69, i64 2, !dbg !25
  %72 = fadd float %70, %71, !dbg !25
  %73 = extractelement <8 x float> %69, i64 3, !dbg !25
  %74 = fadd float %73, %72, !dbg !25
  %75 = extractelement <8 x float> %69, i64 4, !dbg !25
  %76 = fadd float %75, %74, !dbg !25
  %77 = select i1 %17, float %76, float 0.000000e+00, !dbg !25
  %78 = extractelement <8 x float> %69, i64 5, !dbg !25
  %79 = extractelement <8 x float> %69, i64 6, !dbg !25
  %80 = fadd float %78, %79, !dbg !25
  %81 = extractelement <8 x float> %69, i64 7, !dbg !25
  %82 = fadd float %81, %80, !dbg !25
  %83 = extractelement <8 x float> %69, i64 0, !dbg !25
  %84 = fadd float %83, %82, !dbg !25
  %85 = select i1 %18, float %84, float 0.000000e+00, !dbg !25
  %86 = bitcast float %77 to i32, !dbg !30
  %87 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %86, i32 8, i32 31), !dbg !30
  %88 = bitcast i32 %87 to float, !dbg !30
  %89 = fadd float %77, %88, !dbg !25
  %90 = bitcast float %89 to i32, !dbg !30
  %91 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %90, i32 4, i32 31), !dbg !30
  %92 = bitcast i32 %91 to float, !dbg !30
  %93 = fadd float %89, %92, !dbg !25
  %94 = bitcast float %93 to i32, !dbg !30
  %95 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %94, i32 2, i32 31), !dbg !30
  %96 = bitcast i32 %95 to float, !dbg !30
  %97 = fadd float %93, %96, !dbg !25
  %98 = bitcast float %97 to i32, !dbg !30
  %99 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %98, i32 1, i32 31), !dbg !30
  %100 = bitcast i32 %99 to float, !dbg !30
  %101 = fadd float %97, %100, !dbg !25
  %102 = bitcast float %85 to i32, !dbg !30
  %103 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %102, i32 8, i32 31), !dbg !30
  %104 = bitcast i32 %103 to float, !dbg !30
  %105 = fadd float %85, %104, !dbg !25
  %106 = bitcast float %105 to i32, !dbg !30
  %107 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %106, i32 4, i32 31), !dbg !30
  %108 = bitcast i32 %107 to float, !dbg !30
  %109 = fadd float %105, %108, !dbg !25
  %110 = bitcast float %109 to i32, !dbg !30
  %111 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %110, i32 2, i32 31), !dbg !30
  %112 = bitcast i32 %111 to float, !dbg !30
  %113 = fadd float %109, %112, !dbg !25
  %114 = bitcast float %113 to i32, !dbg !30
  %115 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %114, i32 1, i32 31), !dbg !30
  %116 = bitcast i32 %115 to float, !dbg !30
  %117 = fadd float %113, %116, !dbg !25
  %118 = bitcast float %101 to <1 x i32>, !dbg !23
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %53, <1 x i32> %118, i1 true) #5, !dbg !23
  %119 = bitcast float %117 to <1 x i32>, !dbg !23
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %54, <1 x i32> %119, i1 true) #5, !dbg !23
  tail call void @llvm.nvvm.barrier0(), !dbg !23
  %120 = load float, ptr addrspace(3) %55, align 4, !dbg !23
  %121 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %120, float 6.400000e+01) #5, !dbg !23
  %122 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %101, float 6.400000e+01) #5, !dbg !23
  %123 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %117, float 6.400000e+01) #5, !dbg !23
  %124 = insertelement <8 x float> poison, float %123, i64 0, !dbg !31
  %125 = insertelement <8 x float> %124, float %122, i64 1, !dbg !31
  %126 = shufflevector <8 x float> %125, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0>, !dbg !31
  %127 = fsub <8 x float> %69, %126, !dbg !31
  %128 = fmul <8 x float> %127, %127, !dbg !32
  %129 = fmul <8 x float> %127, %127, !dbg !32
  %130 = fmul <8 x float> %127, %127, !dbg !32
  %131 = fmul <8 x float> %127, %127, !dbg !32
  %132 = fmul <8 x float> %127, %127, !dbg !32
  %133 = fmul <8 x float> %127, %127, !dbg !32
  %134 = fmul <8 x float> %127, %127, !dbg !32
  %135 = fmul <8 x float> %127, %127, !dbg !32
  %shift = shufflevector <8 x float> %129, <8 x float> poison, <8 x i32> <i32 poison, i32 2, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !33
  %136 = fadd <8 x float> %128, %shift, !dbg !33
  %shift217 = shufflevector <8 x float> %130, <8 x float> poison, <8 x i32> <i32 poison, i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !33
  %137 = fadd <8 x float> %shift217, %136, !dbg !33
  %shift218 = shufflevector <8 x float> %131, <8 x float> poison, <8 x i32> <i32 poison, i32 4, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !33
  %138 = fadd <8 x float> %shift218, %137, !dbg !33
  %139 = extractelement <8 x float> %138, i64 1, !dbg !33
  %140 = select i1 %17, float %139, float 0.000000e+00, !dbg !33
  %shift219 = shufflevector <8 x float> %133, <8 x float> poison, <8 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 6, i32 poison, i32 poison>, !dbg !33
  %141 = fadd <8 x float> %132, %shift219, !dbg !33
  %shift220 = shufflevector <8 x float> %134, <8 x float> poison, <8 x i32> <i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 7, i32 poison, i32 poison>, !dbg !33
  %142 = fadd <8 x float> %shift220, %141, !dbg !33
  %shift221 = shufflevector <8 x float> %142, <8 x float> poison, <8 x i32> <i32 5, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !33
  %143 = fadd <8 x float> %135, %shift221, !dbg !33
  %144 = extractelement <8 x float> %143, i64 0, !dbg !33
  %145 = select i1 %18, float %144, float 0.000000e+00, !dbg !33
  %146 = bitcast float %140 to i32, !dbg !35
  %147 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %146, i32 8, i32 31), !dbg !35
  %148 = bitcast i32 %147 to float, !dbg !35
  %149 = fadd float %140, %148, !dbg !33
  %150 = bitcast float %149 to i32, !dbg !35
  %151 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %150, i32 4, i32 31), !dbg !35
  %152 = bitcast i32 %151 to float, !dbg !35
  %153 = fadd float %149, %152, !dbg !33
  %154 = bitcast float %153 to i32, !dbg !35
  %155 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %154, i32 2, i32 31), !dbg !35
  %156 = bitcast i32 %155 to float, !dbg !35
  %157 = fadd float %153, %156, !dbg !33
  %158 = bitcast float %157 to i32, !dbg !35
  %159 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %158, i32 1, i32 31), !dbg !35
  %160 = bitcast i32 %159 to float, !dbg !35
  %161 = fadd float %157, %160, !dbg !33
  %162 = bitcast float %145 to i32, !dbg !35
  %163 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %162, i32 8, i32 31), !dbg !35
  %164 = bitcast i32 %163 to float, !dbg !35
  %165 = fadd float %145, %164, !dbg !33
  %166 = bitcast float %165 to i32, !dbg !35
  %167 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %166, i32 4, i32 31), !dbg !35
  %168 = bitcast i32 %167 to float, !dbg !35
  %169 = fadd float %165, %168, !dbg !33
  %170 = bitcast float %169 to i32, !dbg !35
  %171 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %170, i32 2, i32 31), !dbg !35
  %172 = bitcast i32 %171 to float, !dbg !35
  %173 = fadd float %169, %172, !dbg !33
  %174 = bitcast float %173 to i32, !dbg !35
  %175 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %174, i32 1, i32 31), !dbg !35
  %176 = bitcast i32 %175 to float, !dbg !35
  %177 = fadd float %173, %176, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %178 = bitcast float %161 to <1 x i32>, !dbg !36
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %53, <1 x i32> %178, i1 true) #5, !dbg !36
  %179 = bitcast float %177 to <1 x i32>, !dbg !36
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %54, <1 x i32> %179, i1 true) #5, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %180 = load float, ptr addrspace(3) %55, align 4, !dbg !36
  %181 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %180, float 6.400000e+01) #5, !dbg !37
  %182 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %161, float 6.400000e+01) #5, !dbg !37
  %183 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %177, float 6.400000e+01) #5, !dbg !37
  %184 = fadd float %181, 0x3EE4F8B580000000, !dbg !38
  %185 = fadd float %182, 0x3EE4F8B580000000, !dbg !38
  %186 = fadd float %183, 0x3EE4F8B580000000, !dbg !38
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i = icmp eq i32 %187, 0, !dbg !36
  br i1 %.not.i, label %190, label %188, !dbg !36

188:                                              ; preds = %7
  %189 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %184), !dbg !36
  br label %__nv_rsqrtf.exit, !dbg !36

190:                                              ; preds = %7
  %191 = tail call float @llvm.nvvm.rsqrt.approx.f(float %184), !dbg !36
  br label %__nv_rsqrtf.exit, !dbg !36

__nv_rsqrtf.exit:                                 ; preds = %188, %190
  %.0.i = phi float [ %189, %188 ], [ %191, %190 ], !dbg !36
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i11 = icmp eq i32 %195, 0, !dbg !36
  br i1 %.not.i11, label %198, label %196, !dbg !36

196:                                              ; preds = %__nv_rsqrtf.exit
  %197 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %185), !dbg !36
  br label %__nv_rsqrtf.exit13, !dbg !36

198:                                              ; preds = %__nv_rsqrtf.exit
  %199 = tail call float @llvm.nvvm.rsqrt.approx.f(float %185), !dbg !36
  br label %__nv_rsqrtf.exit13, !dbg !36

__nv_rsqrtf.exit13:                               ; preds = %196, %198
  %.0.i12 = phi float [ %197, %196 ], [ %199, %198 ], !dbg !36
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i23 = icmp eq i32 %203, 0, !dbg !36
  br i1 %.not.i23, label %206, label %204, !dbg !36

204:                                              ; preds = %__nv_rsqrtf.exit13
  %205 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %186), !dbg !36
  br label %__nv_rsqrtf.exit25, !dbg !36

206:                                              ; preds = %__nv_rsqrtf.exit13
  %207 = tail call float @llvm.nvvm.rsqrt.approx.f(float %186), !dbg !36
  br label %__nv_rsqrtf.exit25, !dbg !36

__nv_rsqrtf.exit25:                               ; preds = %204, %206
  %.0.i24 = phi float [ %205, %204 ], [ %207, %206 ], !dbg !36
  %208 = insertelement <8 x float> poison, float %.0.i24, i64 0, !dbg !39
  %209 = insertelement <8 x float> %208, float %.0.i12, i64 1, !dbg !39
  %210 = shufflevector <8 x float> %209, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0>, !dbg !39
  %211 = fmul <8 x float> %127, %210, !dbg !39
  %212 = extractelement <8 x float> %211, i64 1, !dbg !40
  %213 = fmul float %212, 0x3FF7154760000000, !dbg !40
  %214 = tail call float @llvm.nvvm.round.f(float %213) #5, !dbg !40
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i26 = icmp eq i32 %215, 0, !dbg !40
  %216 = tail call float @llvm.nvvm.fabs.ftz.f(float %212) #5, !dbg !40
  %217 = tail call float @llvm.nvvm.fabs.f(float %212) #5, !dbg !40
  %.03.i = select i1 %.not.i26, float %217, float %216, !dbg !40
  %218 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !40
  %t.0.i = select i1 %218, float 0.000000e+00, float %214, !dbg !40
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %221 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !40
  %j.0.i = select i1 %221, float 1.270000e+02, float %t.0.i, !dbg !40
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not8.i = icmp eq i32 %227, 0, !dbg !40
  br i1 %.not8.i, label %230, label %228, !dbg !40

228:                                              ; preds = %__nv_rsqrtf.exit25
  %229 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #5, !dbg !40
  br label %__nv_expm1f.exit, !dbg !40

230:                                              ; preds = %__nv_rsqrtf.exit25
  %231 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #5, !dbg !40
  br label %__nv_expm1f.exit, !dbg !40

__nv_expm1f.exit:                                 ; preds = %228, %230
  %.0.i27 = phi float [ %229, %228 ], [ %231, %230 ], !dbg !40
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %233 = extractelement <8 x float> %211, i64 2, !dbg !40
  %234 = fmul float %233, 0x3FF7154760000000, !dbg !40
  %235 = tail call float @llvm.nvvm.round.f(float %234) #5, !dbg !40
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i28 = icmp eq i32 %236, 0, !dbg !40
  %237 = tail call float @llvm.nvvm.fabs.ftz.f(float %233) #5, !dbg !40
  %238 = tail call float @llvm.nvvm.fabs.f(float %233) #5, !dbg !40
  %.03.i29 = select i1 %.not.i28, float %238, float %237, !dbg !40
  %239 = fcmp olt float %.03.i29, 0x3FDA3D70A0000000, !dbg !40
  %t.0.i30 = select i1 %239, float 0.000000e+00, float %235, !dbg !40
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %242 = fcmp oeq float %t.0.i30, 1.280000e+02, !dbg !40
  %j.0.i31 = select i1 %242, float 1.270000e+02, float %t.0.i30, !dbg !40
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not8.i32 = icmp eq i32 %248, 0, !dbg !40
  br i1 %.not8.i32, label %251, label %249, !dbg !40

249:                                              ; preds = %__nv_expm1f.exit
  %250 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i31) #5, !dbg !40
  br label %__nv_expm1f.exit54, !dbg !40

251:                                              ; preds = %__nv_expm1f.exit
  %252 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i31) #5, !dbg !40
  br label %__nv_expm1f.exit54, !dbg !40

__nv_expm1f.exit54:                               ; preds = %249, %251
  %.0.i33 = phi float [ %250, %249 ], [ %252, %251 ], !dbg !40
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %254 = extractelement <8 x float> %211, i64 3, !dbg !40
  %255 = fmul float %254, 0x3FF7154760000000, !dbg !40
  %256 = tail call float @llvm.nvvm.round.f(float %255) #5, !dbg !40
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i55 = icmp eq i32 %257, 0, !dbg !40
  %258 = tail call float @llvm.nvvm.fabs.ftz.f(float %254) #5, !dbg !40
  %259 = tail call float @llvm.nvvm.fabs.f(float %254) #5, !dbg !40
  %.03.i56 = select i1 %.not.i55, float %259, float %258, !dbg !40
  %260 = fcmp olt float %.03.i56, 0x3FDA3D70A0000000, !dbg !40
  %t.0.i57 = select i1 %260, float 0.000000e+00, float %256, !dbg !40
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %263 = fcmp oeq float %t.0.i57, 1.280000e+02, !dbg !40
  %j.0.i58 = select i1 %263, float 1.270000e+02, float %t.0.i57, !dbg !40
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not8.i59 = icmp eq i32 %269, 0, !dbg !40
  br i1 %.not8.i59, label %272, label %270, !dbg !40

270:                                              ; preds = %__nv_expm1f.exit54
  %271 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i58) #5, !dbg !40
  br label %__nv_expm1f.exit81, !dbg !40

272:                                              ; preds = %__nv_expm1f.exit54
  %273 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i58) #5, !dbg !40
  br label %__nv_expm1f.exit81, !dbg !40

__nv_expm1f.exit81:                               ; preds = %270, %272
  %.0.i60 = phi float [ %271, %270 ], [ %273, %272 ], !dbg !40
  %274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %275 = extractelement <8 x float> %211, i64 4, !dbg !40
  %276 = fmul float %275, 0x3FF7154760000000, !dbg !40
  %277 = tail call float @llvm.nvvm.round.f(float %276) #5, !dbg !40
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i82 = icmp eq i32 %278, 0, !dbg !40
  %279 = tail call float @llvm.nvvm.fabs.ftz.f(float %275) #5, !dbg !40
  %280 = tail call float @llvm.nvvm.fabs.f(float %275) #5, !dbg !40
  %.03.i83 = select i1 %.not.i82, float %280, float %279, !dbg !40
  %281 = fcmp olt float %.03.i83, 0x3FDA3D70A0000000, !dbg !40
  %t.0.i84 = select i1 %281, float 0.000000e+00, float %277, !dbg !40
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %284 = fcmp oeq float %t.0.i84, 1.280000e+02, !dbg !40
  %j.0.i85 = select i1 %284, float 1.270000e+02, float %t.0.i84, !dbg !40
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not8.i86 = icmp eq i32 %290, 0, !dbg !40
  br i1 %.not8.i86, label %293, label %291, !dbg !40

291:                                              ; preds = %__nv_expm1f.exit81
  %292 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i85) #5, !dbg !40
  br label %__nv_expm1f.exit108, !dbg !40

293:                                              ; preds = %__nv_expm1f.exit81
  %294 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i85) #5, !dbg !40
  br label %__nv_expm1f.exit108, !dbg !40

__nv_expm1f.exit108:                              ; preds = %291, %293
  %.0.i87 = phi float [ %292, %291 ], [ %294, %293 ], !dbg !40
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %296 = extractelement <8 x float> %211, i64 5, !dbg !40
  %297 = fmul float %296, 0x3FF7154760000000, !dbg !40
  %298 = tail call float @llvm.nvvm.round.f(float %297) #5, !dbg !40
  %299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i109 = icmp eq i32 %299, 0, !dbg !40
  %300 = tail call float @llvm.nvvm.fabs.ftz.f(float %296) #5, !dbg !40
  %301 = tail call float @llvm.nvvm.fabs.f(float %296) #5, !dbg !40
  %.03.i110 = select i1 %.not.i109, float %301, float %300, !dbg !40
  %302 = fcmp olt float %.03.i110, 0x3FDA3D70A0000000, !dbg !40
  %t.0.i111 = select i1 %302, float 0.000000e+00, float %298, !dbg !40
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %305 = fcmp oeq float %t.0.i111, 1.280000e+02, !dbg !40
  %j.0.i112 = select i1 %305, float 1.270000e+02, float %t.0.i111, !dbg !40
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not8.i113 = icmp eq i32 %311, 0, !dbg !40
  br i1 %.not8.i113, label %314, label %312, !dbg !40

312:                                              ; preds = %__nv_expm1f.exit108
  %313 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i112) #5, !dbg !40
  br label %__nv_expm1f.exit135, !dbg !40

314:                                              ; preds = %__nv_expm1f.exit108
  %315 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i112) #5, !dbg !40
  br label %__nv_expm1f.exit135, !dbg !40

__nv_expm1f.exit135:                              ; preds = %312, %314
  %.0.i114 = phi float [ %313, %312 ], [ %315, %314 ], !dbg !40
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %317 = extractelement <8 x float> %211, i64 6, !dbg !40
  %318 = fmul float %317, 0x3FF7154760000000, !dbg !40
  %319 = tail call float @llvm.nvvm.round.f(float %318) #5, !dbg !40
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i136 = icmp eq i32 %320, 0, !dbg !40
  %321 = tail call float @llvm.nvvm.fabs.ftz.f(float %317) #5, !dbg !40
  %322 = tail call float @llvm.nvvm.fabs.f(float %317) #5, !dbg !40
  %.03.i137 = select i1 %.not.i136, float %322, float %321, !dbg !40
  %323 = fcmp olt float %.03.i137, 0x3FDA3D70A0000000, !dbg !40
  %t.0.i138 = select i1 %323, float 0.000000e+00, float %319, !dbg !40
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %326 = fcmp oeq float %t.0.i138, 1.280000e+02, !dbg !40
  %j.0.i139 = select i1 %326, float 1.270000e+02, float %t.0.i138, !dbg !40
  %327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not8.i140 = icmp eq i32 %332, 0, !dbg !40
  br i1 %.not8.i140, label %335, label %333, !dbg !40

333:                                              ; preds = %__nv_expm1f.exit135
  %334 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i139) #5, !dbg !40
  br label %__nv_expm1f.exit162, !dbg !40

335:                                              ; preds = %__nv_expm1f.exit135
  %336 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i139) #5, !dbg !40
  br label %__nv_expm1f.exit162, !dbg !40

__nv_expm1f.exit162:                              ; preds = %333, %335
  %.0.i141 = phi float [ %334, %333 ], [ %336, %335 ], !dbg !40
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %338 = extractelement <8 x float> %211, i64 7, !dbg !40
  %339 = fmul float %338, 0x3FF7154760000000, !dbg !40
  %340 = tail call float @llvm.nvvm.round.f(float %339) #5, !dbg !40
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i163 = icmp eq i32 %341, 0, !dbg !40
  %342 = tail call float @llvm.nvvm.fabs.ftz.f(float %338) #5, !dbg !40
  %343 = tail call float @llvm.nvvm.fabs.f(float %338) #5, !dbg !40
  %.03.i164 = select i1 %.not.i163, float %343, float %342, !dbg !40
  %344 = fcmp olt float %.03.i164, 0x3FDA3D70A0000000, !dbg !40
  %t.0.i165 = select i1 %344, float 0.000000e+00, float %340, !dbg !40
  %345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %347 = fcmp oeq float %t.0.i165, 1.280000e+02, !dbg !40
  %j.0.i166 = select i1 %347, float 1.270000e+02, float %t.0.i165, !dbg !40
  %348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not8.i167 = icmp eq i32 %353, 0, !dbg !40
  br i1 %.not8.i167, label %356, label %354, !dbg !40

354:                                              ; preds = %__nv_expm1f.exit162
  %355 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i166) #5, !dbg !40
  br label %__nv_expm1f.exit189, !dbg !40

356:                                              ; preds = %__nv_expm1f.exit162
  %357 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i166) #5, !dbg !40
  br label %__nv_expm1f.exit189, !dbg !40

__nv_expm1f.exit189:                              ; preds = %354, %356
  %.0.i168 = phi float [ %355, %354 ], [ %357, %356 ], !dbg !40
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %359 = extractelement <8 x float> %211, i64 0, !dbg !40
  %360 = fmul float %359, 0x3FF7154760000000, !dbg !40
  %361 = tail call float @llvm.nvvm.round.f(float %360) #5, !dbg !40
  %362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i190 = icmp eq i32 %362, 0, !dbg !40
  %363 = tail call float @llvm.nvvm.fabs.ftz.f(float %359) #5, !dbg !40
  %364 = tail call float @llvm.nvvm.fabs.f(float %359) #5, !dbg !40
  %.03.i191 = select i1 %.not.i190, float %364, float %363, !dbg !40
  %365 = fcmp olt float %.03.i191, 0x3FDA3D70A0000000, !dbg !40
  %t.0.i192 = select i1 %365, float 0.000000e+00, float %361, !dbg !40
  %366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %368 = fcmp oeq float %t.0.i192, 1.280000e+02, !dbg !40
  %j.0.i193 = select i1 %368, float 1.270000e+02, float %t.0.i192, !dbg !40
  %369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not8.i194 = icmp eq i32 %374, 0, !dbg !40
  br i1 %.not8.i194, label %377, label %375, !dbg !40

375:                                              ; preds = %__nv_expm1f.exit189
  %376 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i193) #5, !dbg !40
  br label %__nv_expm1f.exit216, !dbg !40

377:                                              ; preds = %__nv_expm1f.exit189
  %378 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i193) #5, !dbg !40
  br label %__nv_expm1f.exit216, !dbg !40

__nv_expm1f.exit216:                              ; preds = %375, %377
  %.0.i195 = phi float [ %376, %375 ], [ %378, %377 ], !dbg !40
  %379 = fcmp oeq <8 x float> %211, zeroinitializer, !dbg !40
  %380 = fadd float %338, %338, !dbg !40
  %381 = fcmp olt float %j.0.i166, -2.500000e+01, !dbg !40
  %382 = fcmp ogt float %j.0.i166, 1.280000e+02, !dbg !40
  %.not9.i183 = icmp eq i32 %358, 0, !dbg !40
  %.not7.i169 = icmp eq i32 %352, 0, !dbg !40
  %.not6.i170 = icmp eq i32 %351, 0, !dbg !40
  %.not5.i171 = icmp eq i32 %350, 0, !dbg !40
  %.not4.i172 = icmp eq i32 %349, 0, !dbg !40
  %.not3.i173 = icmp eq i32 %348, 0, !dbg !40
  %.not2.i174 = icmp eq i32 %346, 0, !dbg !40
  %383 = fneg float %t.0.i165, !dbg !40
  %.not1.i175 = icmp eq i32 %345, 0, !dbg !40
  %384 = tail call float @llvm.nvvm.fma.rn.f(float %383, float 0x3FE62E4000000000, float %338) #5, !dbg !40
  %385 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %383, float 0x3FE62E4000000000, float %338) #5, !dbg !40
  %.04.i176 = select i1 %.not1.i175, float %384, float %385, !dbg !40
  %386 = tail call float @llvm.nvvm.fma.rn.f(float %383, float 0x3EB7F7D1C0000000, float %.04.i176) #5, !dbg !40
  %387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %383, float 0x3EB7F7D1C0000000, float %.04.i176) #5, !dbg !40
  %.05.i177 = select i1 %.not2.i174, float %386, float %387, !dbg !40
  %388 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i177, float 0x3F812ACC60000000) #5, !dbg !40
  %389 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i177, float 0x3F812ACC60000000) #5, !dbg !40
  %.07.i178 = select i1 %.not3.i173, float %388, float %389, !dbg !40
  %390 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i178, float %.05.i177, float 0x3FA5557C60000000) #5, !dbg !40
  %391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i178, float %.05.i177, float 0x3FA5557C60000000) #5, !dbg !40
  %.08.i179 = select i1 %.not4.i172, float %390, float %391, !dbg !40
  %392 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i179, float %.05.i177, float 0x3FC5553EC0000000) #5, !dbg !40
  %393 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i179, float %.05.i177, float 0x3FC5553EC0000000) #5, !dbg !40
  %.09.i180 = select i1 %.not5.i171, float %392, float %393, !dbg !40
  %394 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i180, float %.05.i177, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %395 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i180, float %.05.i177, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %.06.i181 = select i1 %.not6.i170, float %394, float %395, !dbg !40
  %396 = fmul float %.05.i177, %.06.i181, !dbg !40
  %397 = tail call float @llvm.nvvm.fma.rn.f(float %396, float %.05.i177, float %.05.i177) #5, !dbg !40
  %398 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %396, float %.05.i177, float %.05.i177) #5, !dbg !40
  %.01.i182 = select i1 %.not7.i169, float %397, float %398, !dbg !40
  %399 = fadd float %.0.i168, -1.000000e+00, !dbg !40
  %400 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i182, float %.0.i168, float %399) #5, !dbg !40
  %401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i182, float %.0.i168, float %399) #5, !dbg !40
  %.02.i184 = select i1 %.not9.i183, float %400, float %401, !dbg !40
  %402 = fadd float %.02.i184, %.02.i184, !dbg !40
  %u.0.i185 = select i1 %347, float %402, float %.02.i184, !dbg !40
  %u.1.i186 = select i1 %382, float 0x7FF0000000000000, float %u.0.i185, !dbg !40
  %u.2.i187 = select i1 %381, float -1.000000e+00, float %u.1.i186, !dbg !40
  %403 = extractelement <8 x i1> %379, i64 7, !dbg !40
  %u.3.i188 = select i1 %403, float %380, float %u.2.i187, !dbg !40
  %404 = fadd float %317, %317, !dbg !40
  %405 = fcmp olt float %j.0.i139, -2.500000e+01, !dbg !40
  %406 = fcmp ogt float %j.0.i139, 1.280000e+02, !dbg !40
  %.not9.i156 = icmp eq i32 %337, 0, !dbg !40
  %.not7.i142 = icmp eq i32 %331, 0, !dbg !40
  %.not6.i143 = icmp eq i32 %330, 0, !dbg !40
  %.not5.i144 = icmp eq i32 %329, 0, !dbg !40
  %.not4.i145 = icmp eq i32 %328, 0, !dbg !40
  %.not3.i146 = icmp eq i32 %327, 0, !dbg !40
  %.not2.i147 = icmp eq i32 %325, 0, !dbg !40
  %407 = fneg float %t.0.i138, !dbg !40
  %.not1.i148 = icmp eq i32 %324, 0, !dbg !40
  %408 = tail call float @llvm.nvvm.fma.rn.f(float %407, float 0x3FE62E4000000000, float %317) #5, !dbg !40
  %409 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %407, float 0x3FE62E4000000000, float %317) #5, !dbg !40
  %.04.i149 = select i1 %.not1.i148, float %408, float %409, !dbg !40
  %410 = tail call float @llvm.nvvm.fma.rn.f(float %407, float 0x3EB7F7D1C0000000, float %.04.i149) #5, !dbg !40
  %411 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %407, float 0x3EB7F7D1C0000000, float %.04.i149) #5, !dbg !40
  %.05.i150 = select i1 %.not2.i147, float %410, float %411, !dbg !40
  %412 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i150, float 0x3F812ACC60000000) #5, !dbg !40
  %413 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i150, float 0x3F812ACC60000000) #5, !dbg !40
  %.07.i151 = select i1 %.not3.i146, float %412, float %413, !dbg !40
  %414 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i151, float %.05.i150, float 0x3FA5557C60000000) #5, !dbg !40
  %415 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i151, float %.05.i150, float 0x3FA5557C60000000) #5, !dbg !40
  %.08.i152 = select i1 %.not4.i145, float %414, float %415, !dbg !40
  %416 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i152, float %.05.i150, float 0x3FC5553EC0000000) #5, !dbg !40
  %417 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i152, float %.05.i150, float 0x3FC5553EC0000000) #5, !dbg !40
  %.09.i153 = select i1 %.not5.i144, float %416, float %417, !dbg !40
  %418 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i153, float %.05.i150, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %419 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i153, float %.05.i150, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %.06.i154 = select i1 %.not6.i143, float %418, float %419, !dbg !40
  %420 = fmul float %.05.i150, %.06.i154, !dbg !40
  %421 = tail call float @llvm.nvvm.fma.rn.f(float %420, float %.05.i150, float %.05.i150) #5, !dbg !40
  %422 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %420, float %.05.i150, float %.05.i150) #5, !dbg !40
  %.01.i155 = select i1 %.not7.i142, float %421, float %422, !dbg !40
  %423 = fadd float %.0.i141, -1.000000e+00, !dbg !40
  %424 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i155, float %.0.i141, float %423) #5, !dbg !40
  %425 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i155, float %.0.i141, float %423) #5, !dbg !40
  %.02.i157 = select i1 %.not9.i156, float %424, float %425, !dbg !40
  %426 = fadd float %.02.i157, %.02.i157, !dbg !40
  %u.0.i158 = select i1 %326, float %426, float %.02.i157, !dbg !40
  %u.1.i159 = select i1 %406, float 0x7FF0000000000000, float %u.0.i158, !dbg !40
  %u.2.i160 = select i1 %405, float -1.000000e+00, float %u.1.i159, !dbg !40
  %427 = extractelement <8 x i1> %379, i64 6, !dbg !40
  %u.3.i161 = select i1 %427, float %404, float %u.2.i160, !dbg !40
  %428 = fadd float %296, %296, !dbg !40
  %429 = fcmp olt float %j.0.i112, -2.500000e+01, !dbg !40
  %430 = fcmp ogt float %j.0.i112, 1.280000e+02, !dbg !40
  %.not9.i129 = icmp eq i32 %316, 0, !dbg !40
  %.not7.i115 = icmp eq i32 %310, 0, !dbg !40
  %.not6.i116 = icmp eq i32 %309, 0, !dbg !40
  %.not5.i117 = icmp eq i32 %308, 0, !dbg !40
  %.not4.i118 = icmp eq i32 %307, 0, !dbg !40
  %.not3.i119 = icmp eq i32 %306, 0, !dbg !40
  %.not2.i120 = icmp eq i32 %304, 0, !dbg !40
  %431 = fneg float %t.0.i111, !dbg !40
  %.not1.i121 = icmp eq i32 %303, 0, !dbg !40
  %432 = tail call float @llvm.nvvm.fma.rn.f(float %431, float 0x3FE62E4000000000, float %296) #5, !dbg !40
  %433 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %431, float 0x3FE62E4000000000, float %296) #5, !dbg !40
  %.04.i122 = select i1 %.not1.i121, float %432, float %433, !dbg !40
  %434 = tail call float @llvm.nvvm.fma.rn.f(float %431, float 0x3EB7F7D1C0000000, float %.04.i122) #5, !dbg !40
  %435 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %431, float 0x3EB7F7D1C0000000, float %.04.i122) #5, !dbg !40
  %.05.i123 = select i1 %.not2.i120, float %434, float %435, !dbg !40
  %436 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i123, float 0x3F812ACC60000000) #5, !dbg !40
  %437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i123, float 0x3F812ACC60000000) #5, !dbg !40
  %.07.i124 = select i1 %.not3.i119, float %436, float %437, !dbg !40
  %438 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i124, float %.05.i123, float 0x3FA5557C60000000) #5, !dbg !40
  %439 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i124, float %.05.i123, float 0x3FA5557C60000000) #5, !dbg !40
  %.08.i125 = select i1 %.not4.i118, float %438, float %439, !dbg !40
  %440 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i125, float %.05.i123, float 0x3FC5553EC0000000) #5, !dbg !40
  %441 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i125, float %.05.i123, float 0x3FC5553EC0000000) #5, !dbg !40
  %.09.i126 = select i1 %.not5.i117, float %440, float %441, !dbg !40
  %442 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i126, float %.05.i123, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i126, float %.05.i123, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %.06.i127 = select i1 %.not6.i116, float %442, float %443, !dbg !40
  %444 = fmul float %.05.i123, %.06.i127, !dbg !40
  %445 = tail call float @llvm.nvvm.fma.rn.f(float %444, float %.05.i123, float %.05.i123) #5, !dbg !40
  %446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %444, float %.05.i123, float %.05.i123) #5, !dbg !40
  %.01.i128 = select i1 %.not7.i115, float %445, float %446, !dbg !40
  %447 = fadd float %.0.i114, -1.000000e+00, !dbg !40
  %448 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i128, float %.0.i114, float %447) #5, !dbg !40
  %449 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i128, float %.0.i114, float %447) #5, !dbg !40
  %.02.i130 = select i1 %.not9.i129, float %448, float %449, !dbg !40
  %450 = fadd float %.02.i130, %.02.i130, !dbg !40
  %u.0.i131 = select i1 %305, float %450, float %.02.i130, !dbg !40
  %u.1.i132 = select i1 %430, float 0x7FF0000000000000, float %u.0.i131, !dbg !40
  %u.2.i133 = select i1 %429, float -1.000000e+00, float %u.1.i132, !dbg !40
  %451 = extractelement <8 x i1> %379, i64 5, !dbg !40
  %u.3.i134 = select i1 %451, float %428, float %u.2.i133, !dbg !40
  %452 = fadd float %275, %275, !dbg !40
  %453 = fcmp olt float %j.0.i85, -2.500000e+01, !dbg !40
  %454 = fcmp ogt float %j.0.i85, 1.280000e+02, !dbg !40
  %.not9.i102 = icmp eq i32 %295, 0, !dbg !40
  %.not7.i88 = icmp eq i32 %289, 0, !dbg !40
  %.not6.i89 = icmp eq i32 %288, 0, !dbg !40
  %.not5.i90 = icmp eq i32 %287, 0, !dbg !40
  %.not4.i91 = icmp eq i32 %286, 0, !dbg !40
  %.not3.i92 = icmp eq i32 %285, 0, !dbg !40
  %.not2.i93 = icmp eq i32 %283, 0, !dbg !40
  %455 = fneg float %t.0.i84, !dbg !40
  %.not1.i94 = icmp eq i32 %282, 0, !dbg !40
  %456 = tail call float @llvm.nvvm.fma.rn.f(float %455, float 0x3FE62E4000000000, float %275) #5, !dbg !40
  %457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %455, float 0x3FE62E4000000000, float %275) #5, !dbg !40
  %.04.i95 = select i1 %.not1.i94, float %456, float %457, !dbg !40
  %458 = tail call float @llvm.nvvm.fma.rn.f(float %455, float 0x3EB7F7D1C0000000, float %.04.i95) #5, !dbg !40
  %459 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %455, float 0x3EB7F7D1C0000000, float %.04.i95) #5, !dbg !40
  %.05.i96 = select i1 %.not2.i93, float %458, float %459, !dbg !40
  %460 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i96, float 0x3F812ACC60000000) #5, !dbg !40
  %461 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i96, float 0x3F812ACC60000000) #5, !dbg !40
  %.07.i97 = select i1 %.not3.i92, float %460, float %461, !dbg !40
  %462 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i97, float %.05.i96, float 0x3FA5557C60000000) #5, !dbg !40
  %463 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i97, float %.05.i96, float 0x3FA5557C60000000) #5, !dbg !40
  %.08.i98 = select i1 %.not4.i91, float %462, float %463, !dbg !40
  %464 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i98, float %.05.i96, float 0x3FC5553EC0000000) #5, !dbg !40
  %465 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i98, float %.05.i96, float 0x3FC5553EC0000000) #5, !dbg !40
  %.09.i99 = select i1 %.not5.i90, float %464, float %465, !dbg !40
  %466 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i99, float %.05.i96, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i99, float %.05.i96, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %.06.i100 = select i1 %.not6.i89, float %466, float %467, !dbg !40
  %468 = fmul float %.05.i96, %.06.i100, !dbg !40
  %469 = tail call float @llvm.nvvm.fma.rn.f(float %468, float %.05.i96, float %.05.i96) #5, !dbg !40
  %470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %468, float %.05.i96, float %.05.i96) #5, !dbg !40
  %.01.i101 = select i1 %.not7.i88, float %469, float %470, !dbg !40
  %471 = fadd float %.0.i87, -1.000000e+00, !dbg !40
  %472 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i101, float %.0.i87, float %471) #5, !dbg !40
  %473 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i101, float %.0.i87, float %471) #5, !dbg !40
  %.02.i103 = select i1 %.not9.i102, float %472, float %473, !dbg !40
  %474 = fadd float %.02.i103, %.02.i103, !dbg !40
  %u.0.i104 = select i1 %284, float %474, float %.02.i103, !dbg !40
  %u.1.i105 = select i1 %454, float 0x7FF0000000000000, float %u.0.i104, !dbg !40
  %u.2.i106 = select i1 %453, float -1.000000e+00, float %u.1.i105, !dbg !40
  %475 = extractelement <8 x i1> %379, i64 4, !dbg !40
  %u.3.i107 = select i1 %475, float %452, float %u.2.i106, !dbg !40
  %476 = fadd float %254, %254, !dbg !40
  %477 = fcmp olt float %j.0.i58, -2.500000e+01, !dbg !40
  %478 = fcmp ogt float %j.0.i58, 1.280000e+02, !dbg !40
  %.not9.i75 = icmp eq i32 %274, 0, !dbg !40
  %.not7.i61 = icmp eq i32 %268, 0, !dbg !40
  %.not6.i62 = icmp eq i32 %267, 0, !dbg !40
  %.not5.i63 = icmp eq i32 %266, 0, !dbg !40
  %.not4.i64 = icmp eq i32 %265, 0, !dbg !40
  %.not3.i65 = icmp eq i32 %264, 0, !dbg !40
  %.not2.i66 = icmp eq i32 %262, 0, !dbg !40
  %479 = fneg float %t.0.i57, !dbg !40
  %.not1.i67 = icmp eq i32 %261, 0, !dbg !40
  %480 = tail call float @llvm.nvvm.fma.rn.f(float %479, float 0x3FE62E4000000000, float %254) #5, !dbg !40
  %481 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %479, float 0x3FE62E4000000000, float %254) #5, !dbg !40
  %.04.i68 = select i1 %.not1.i67, float %480, float %481, !dbg !40
  %482 = tail call float @llvm.nvvm.fma.rn.f(float %479, float 0x3EB7F7D1C0000000, float %.04.i68) #5, !dbg !40
  %483 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %479, float 0x3EB7F7D1C0000000, float %.04.i68) #5, !dbg !40
  %.05.i69 = select i1 %.not2.i66, float %482, float %483, !dbg !40
  %484 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i69, float 0x3F812ACC60000000) #5, !dbg !40
  %485 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i69, float 0x3F812ACC60000000) #5, !dbg !40
  %.07.i70 = select i1 %.not3.i65, float %484, float %485, !dbg !40
  %486 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i70, float %.05.i69, float 0x3FA5557C60000000) #5, !dbg !40
  %487 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i70, float %.05.i69, float 0x3FA5557C60000000) #5, !dbg !40
  %.08.i71 = select i1 %.not4.i64, float %486, float %487, !dbg !40
  %488 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i71, float %.05.i69, float 0x3FC5553EC0000000) #5, !dbg !40
  %489 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i71, float %.05.i69, float 0x3FC5553EC0000000) #5, !dbg !40
  %.09.i72 = select i1 %.not5.i63, float %488, float %489, !dbg !40
  %490 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %.05.i69, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %491 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %.05.i69, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %.06.i73 = select i1 %.not6.i62, float %490, float %491, !dbg !40
  %492 = fmul float %.05.i69, %.06.i73, !dbg !40
  %493 = tail call float @llvm.nvvm.fma.rn.f(float %492, float %.05.i69, float %.05.i69) #5, !dbg !40
  %494 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %492, float %.05.i69, float %.05.i69) #5, !dbg !40
  %.01.i74 = select i1 %.not7.i61, float %493, float %494, !dbg !40
  %495 = fadd float %.0.i60, -1.000000e+00, !dbg !40
  %496 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i74, float %.0.i60, float %495) #5, !dbg !40
  %497 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i74, float %.0.i60, float %495) #5, !dbg !40
  %.02.i76 = select i1 %.not9.i75, float %496, float %497, !dbg !40
  %498 = fadd float %.02.i76, %.02.i76, !dbg !40
  %u.0.i77 = select i1 %263, float %498, float %.02.i76, !dbg !40
  %u.1.i78 = select i1 %478, float 0x7FF0000000000000, float %u.0.i77, !dbg !40
  %u.2.i79 = select i1 %477, float -1.000000e+00, float %u.1.i78, !dbg !40
  %499 = extractelement <8 x i1> %379, i64 3, !dbg !40
  %u.3.i80 = select i1 %499, float %476, float %u.2.i79, !dbg !40
  %500 = fadd float %233, %233, !dbg !40
  %501 = fcmp olt float %j.0.i31, -2.500000e+01, !dbg !40
  %502 = fcmp ogt float %j.0.i31, 1.280000e+02, !dbg !40
  %.not9.i48 = icmp eq i32 %253, 0, !dbg !40
  %.not7.i34 = icmp eq i32 %247, 0, !dbg !40
  %.not6.i35 = icmp eq i32 %246, 0, !dbg !40
  %.not5.i36 = icmp eq i32 %245, 0, !dbg !40
  %.not4.i37 = icmp eq i32 %244, 0, !dbg !40
  %.not3.i38 = icmp eq i32 %243, 0, !dbg !40
  %.not2.i39 = icmp eq i32 %241, 0, !dbg !40
  %503 = fneg float %t.0.i30, !dbg !40
  %.not1.i40 = icmp eq i32 %240, 0, !dbg !40
  %504 = tail call float @llvm.nvvm.fma.rn.f(float %503, float 0x3FE62E4000000000, float %233) #5, !dbg !40
  %505 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %503, float 0x3FE62E4000000000, float %233) #5, !dbg !40
  %.04.i41 = select i1 %.not1.i40, float %504, float %505, !dbg !40
  %506 = tail call float @llvm.nvvm.fma.rn.f(float %503, float 0x3EB7F7D1C0000000, float %.04.i41) #5, !dbg !40
  %507 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %503, float 0x3EB7F7D1C0000000, float %.04.i41) #5, !dbg !40
  %.05.i42 = select i1 %.not2.i39, float %506, float %507, !dbg !40
  %508 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i42, float 0x3F812ACC60000000) #5, !dbg !40
  %509 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i42, float 0x3F812ACC60000000) #5, !dbg !40
  %.07.i43 = select i1 %.not3.i38, float %508, float %509, !dbg !40
  %510 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i43, float %.05.i42, float 0x3FA5557C60000000) #5, !dbg !40
  %511 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i43, float %.05.i42, float 0x3FA5557C60000000) #5, !dbg !40
  %.08.i44 = select i1 %.not4.i37, float %510, float %511, !dbg !40
  %512 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i44, float %.05.i42, float 0x3FC5553EC0000000) #5, !dbg !40
  %513 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i44, float %.05.i42, float 0x3FC5553EC0000000) #5, !dbg !40
  %.09.i45 = select i1 %.not5.i36, float %512, float %513, !dbg !40
  %514 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i45, float %.05.i42, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %515 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i45, float %.05.i42, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %.06.i46 = select i1 %.not6.i35, float %514, float %515, !dbg !40
  %516 = fmul float %.05.i42, %.06.i46, !dbg !40
  %517 = tail call float @llvm.nvvm.fma.rn.f(float %516, float %.05.i42, float %.05.i42) #5, !dbg !40
  %518 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %516, float %.05.i42, float %.05.i42) #5, !dbg !40
  %.01.i47 = select i1 %.not7.i34, float %517, float %518, !dbg !40
  %519 = fadd float %.0.i33, -1.000000e+00, !dbg !40
  %520 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i47, float %.0.i33, float %519) #5, !dbg !40
  %521 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i47, float %.0.i33, float %519) #5, !dbg !40
  %.02.i49 = select i1 %.not9.i48, float %520, float %521, !dbg !40
  %522 = fadd float %.02.i49, %.02.i49, !dbg !40
  %u.0.i50 = select i1 %242, float %522, float %.02.i49, !dbg !40
  %u.1.i51 = select i1 %502, float 0x7FF0000000000000, float %u.0.i50, !dbg !40
  %u.2.i52 = select i1 %501, float -1.000000e+00, float %u.1.i51, !dbg !40
  %523 = extractelement <8 x i1> %379, i64 2, !dbg !40
  %u.3.i53 = select i1 %523, float %500, float %u.2.i52, !dbg !40
  %524 = fadd float %212, %212, !dbg !40
  %525 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !40
  %526 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !40
  %.not9.i = icmp eq i32 %232, 0, !dbg !40
  %.not7.i = icmp eq i32 %226, 0, !dbg !40
  %.not6.i = icmp eq i32 %225, 0, !dbg !40
  %.not5.i = icmp eq i32 %224, 0, !dbg !40
  %.not4.i = icmp eq i32 %223, 0, !dbg !40
  %.not3.i = icmp eq i32 %222, 0, !dbg !40
  %.not2.i = icmp eq i32 %220, 0, !dbg !40
  %527 = fneg float %t.0.i, !dbg !40
  %.not1.i = icmp eq i32 %219, 0, !dbg !40
  %528 = tail call float @llvm.nvvm.fma.rn.f(float %527, float 0x3FE62E4000000000, float %212) #5, !dbg !40
  %529 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %527, float 0x3FE62E4000000000, float %212) #5, !dbg !40
  %.04.i = select i1 %.not1.i, float %528, float %529, !dbg !40
  %530 = tail call float @llvm.nvvm.fma.rn.f(float %527, float 0x3EB7F7D1C0000000, float %.04.i) #5, !dbg !40
  %531 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %527, float 0x3EB7F7D1C0000000, float %.04.i) #5, !dbg !40
  %.05.i = select i1 %.not2.i, float %530, float %531, !dbg !40
  %532 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #5, !dbg !40
  %533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #5, !dbg !40
  %.07.i = select i1 %.not3.i, float %532, float %533, !dbg !40
  %534 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #5, !dbg !40
  %535 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #5, !dbg !40
  %.08.i = select i1 %.not4.i, float %534, float %535, !dbg !40
  %536 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #5, !dbg !40
  %537 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #5, !dbg !40
  %.09.i = select i1 %.not5.i, float %536, float %537, !dbg !40
  %538 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %539 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %.06.i = select i1 %.not6.i, float %538, float %539, !dbg !40
  %540 = fmul float %.05.i, %.06.i, !dbg !40
  %541 = tail call float @llvm.nvvm.fma.rn.f(float %540, float %.05.i, float %.05.i) #5, !dbg !40
  %542 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %540, float %.05.i, float %.05.i) #5, !dbg !40
  %.01.i = select i1 %.not7.i, float %541, float %542, !dbg !40
  %543 = fadd float %.0.i27, -1.000000e+00, !dbg !40
  %544 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i27, float %543) #5, !dbg !40
  %545 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i27, float %543) #5, !dbg !40
  %.02.i = select i1 %.not9.i, float %544, float %545, !dbg !40
  %546 = fadd float %.02.i, %.02.i, !dbg !40
  %u.0.i = select i1 %221, float %546, float %.02.i, !dbg !40
  %u.1.i = select i1 %526, float 0x7FF0000000000000, float %u.0.i, !dbg !40
  %u.2.i = select i1 %525, float -1.000000e+00, float %u.1.i, !dbg !40
  %547 = extractelement <8 x i1> %379, i64 1, !dbg !40
  %u.3.i = select i1 %547, float %524, float %u.2.i, !dbg !40
  %548 = fcmp ogt float %359, 0.000000e+00, !dbg !41
  %549 = fcmp ogt float %338, 0.000000e+00, !dbg !41
  %550 = fcmp ogt float %317, 0.000000e+00, !dbg !41
  %551 = fcmp ogt float %296, 0.000000e+00, !dbg !41
  %552 = fcmp ogt float %275, 0.000000e+00, !dbg !41
  %553 = fcmp ogt float %254, 0.000000e+00, !dbg !41
  %554 = fcmp ogt float %233, 0.000000e+00, !dbg !41
  %555 = fcmp ogt float %212, 0.000000e+00, !dbg !41
  %556 = or disjoint i32 %9, %14, !dbg !13
  %557 = icmp slt i32 %556, 128, !dbg !14
  %.not7.i196 = icmp eq i32 %373, 0, !dbg !40
  %.not6.i197 = icmp eq i32 %372, 0, !dbg !40
  %.not5.i198 = icmp eq i32 %371, 0, !dbg !40
  %.not4.i199 = icmp eq i32 %370, 0, !dbg !40
  %.not3.i200 = icmp eq i32 %369, 0, !dbg !40
  %.not2.i201 = icmp eq i32 %367, 0, !dbg !40
  %558 = fneg float %t.0.i192, !dbg !40
  %.not1.i202 = icmp eq i32 %366, 0, !dbg !40
  %559 = tail call float @llvm.nvvm.fma.rn.f(float %558, float 0x3FE62E4000000000, float %359) #5, !dbg !40
  %560 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %558, float 0x3FE62E4000000000, float %359) #5, !dbg !40
  %.04.i203 = select i1 %.not1.i202, float %559, float %560, !dbg !40
  %561 = tail call float @llvm.nvvm.fma.rn.f(float %558, float 0x3EB7F7D1C0000000, float %.04.i203) #5, !dbg !40
  %562 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %558, float 0x3EB7F7D1C0000000, float %.04.i203) #5, !dbg !40
  %.05.i204 = select i1 %.not2.i201, float %561, float %562, !dbg !40
  %563 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i204, float 0x3F812ACC60000000) #5, !dbg !40
  %564 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i204, float 0x3F812ACC60000000) #5, !dbg !40
  %.07.i205 = select i1 %.not3.i200, float %563, float %564, !dbg !40
  %565 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i205, float %.05.i204, float 0x3FA5557C60000000) #5, !dbg !40
  %566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i205, float %.05.i204, float 0x3FA5557C60000000) #5, !dbg !40
  %.08.i206 = select i1 %.not4.i199, float %565, float %566, !dbg !40
  %567 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i206, float %.05.i204, float 0x3FC5553EC0000000) #5, !dbg !40
  %568 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i206, float %.05.i204, float 0x3FC5553EC0000000) #5, !dbg !40
  %.09.i207 = select i1 %.not5.i198, float %567, float %568, !dbg !40
  %569 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i207, float %.05.i204, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %570 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i207, float %.05.i204, float 0x3FDFFFFFC0000000) #5, !dbg !40
  %.06.i208 = select i1 %.not6.i197, float %569, float %570, !dbg !40
  %571 = fmul float %.05.i204, %.06.i208, !dbg !40
  %572 = tail call float @llvm.nvvm.fma.rn.f(float %571, float %.05.i204, float %.05.i204) #5, !dbg !40
  %573 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %571, float %.05.i204, float %.05.i204) #5, !dbg !40
  %.01.i209 = select i1 %.not7.i196, float %572, float %573, !dbg !40
  %574 = fadd float %.0.i195, -1.000000e+00, !dbg !40
  %575 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not9.i210 = icmp eq i32 %575, 0, !dbg !40
  %576 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i209, float %.0.i195, float %574) #5, !dbg !40
  %577 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i209, float %.0.i195, float %574) #5, !dbg !40
  %.02.i211 = select i1 %.not9.i210, float %577, float %576, !dbg !40
  %578 = fadd float %.02.i211, %.02.i211, !dbg !40
  %u.0.i212 = select i1 %368, float %578, float %.02.i211, !dbg !40
  %579 = fcmp ogt float %j.0.i193, 1.280000e+02, !dbg !40
  %u.1.i213 = select i1 %579, float 0x7FF0000000000000, float %u.0.i212, !dbg !40
  %580 = fcmp olt float %j.0.i193, -2.500000e+01, !dbg !40
  %u.2.i214 = select i1 %580, float -1.000000e+00, float %u.1.i213, !dbg !40
  %581 = fadd float %359, %359, !dbg !40
  %582 = extractelement <8 x i1> %379, i64 0, !dbg !40
  %u.3.i215 = select i1 %582, float %581, float %u.2.i214, !dbg !40
  %583 = select i1 %555, float %212, float %u.3.i, !dbg !42
  %584 = select i1 %554, float %233, float %u.3.i53, !dbg !42
  %585 = select i1 %553, float %254, float %u.3.i80, !dbg !42
  %586 = select i1 %552, float %275, float %u.3.i107, !dbg !42
  %587 = select i1 %551, float %296, float %u.3.i134, !dbg !42
  %588 = select i1 %550, float %317, float %u.3.i161, !dbg !42
  %589 = select i1 %549, float %338, float %u.3.i188, !dbg !42
  %590 = select i1 %548, float %359, float %u.3.i215, !dbg !42
  %591 = bitcast float %70 to i32, !dbg !43
  %592 = bitcast float %71 to i32, !dbg !43
  %593 = bitcast float %73 to i32, !dbg !43
  %594 = bitcast float %75 to i32, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %591, i32 %592, i32 %593, i32 %594, ptr addrspace(1) %28, i1 %17) #5, !dbg !43
  %595 = bitcast float %78 to i32, !dbg !43
  %596 = bitcast float %79 to i32, !dbg !43
  %597 = bitcast float %81 to i32, !dbg !43
  %598 = bitcast float %83 to i32, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %595, i32 %596, i32 %597, i32 %598, ptr addrspace(1) %30, i1 %18) #5, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %599 = sext i32 %556 to i64, !dbg !45
  %600 = getelementptr float, ptr addrspace(1) %1, i64 %599, !dbg !45
  %601 = and i32 %10, 224, !dbg !46
  %602 = icmp eq i32 %601, 0, !dbg !46
  %603 = bitcast float %.0.i to i32, !dbg !46
  %604 = and i1 %602, %557, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %603, ptr addrspace(1) %600, i1 %604) #5, !dbg !46
  %605 = getelementptr float, ptr addrspace(1) %4, i64 %27, !dbg !47
  %606 = getelementptr float, ptr addrspace(1) %4, i64 %29, !dbg !47
  %607 = bitcast float %583 to i32, !dbg !48
  %608 = bitcast float %584 to i32, !dbg !48
  %609 = bitcast float %585 to i32, !dbg !48
  %610 = bitcast float %586 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %607, i32 %608, i32 %609, i32 %610, ptr addrspace(1) %605, i1 %17) #5, !dbg !48
  %611 = bitcast float %587 to i32, !dbg !48
  %612 = bitcast float %588 to i32, !dbg !48
  %613 = bitcast float %589 to i32, !dbg !48
  %614 = bitcast float %590 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %611, i32 %612, i32 %613, i32 %614, ptr addrspace(1) %606, i1 %18) #5, !dbg !48
  %615 = getelementptr float, ptr addrspace(1) %3, i64 %599, !dbg !49
  %616 = bitcast float %121 to i32, !dbg !50
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %616, ptr addrspace(1) %615, i1 %604) #5, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cstfuc7xoddti5sdjdtknsadujzkwuksuc3ls3akoqnxsxpam5yt.py", directory: "inductor_cache/st")
!4 = !{ptr @triton_per_fused__native_batch_norm_legit_convolution_elu_7, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__native_batch_norm_legit_convolution_elu_7, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__native_batch_norm_legit_convolution_elu_7", linkageName: "triton_per_fused__native_batch_norm_legit_convolution_elu_7", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 19, scope: !7)
!17 = !DILocation(line: 32, column: 42, scope: !7)
!18 = !DILocation(line: 32, column: 39, scope: !7)
!19 = !DILocation(line: 32, column: 34, scope: !7)
!20 = !DILocation(line: 32, column: 47, scope: !7)
!21 = !DILocation(line: 33, column: 30, scope: !7)
!22 = !DILocation(line: 33, column: 35, scope: !7)
!23 = !DILocation(line: 42, column: 19, scope: !7)
!24 = !DILocation(line: 34, column: 18, scope: !7)
!25 = !DILocation(line: 256, column: 15, scope: !26, inlinedAt: !29)
!26 = distinct !DILexicalBlockFile(scope: !28, file: !27, discriminator: 0)
!27 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!28 = distinct !DILexicalBlockFile(scope: !7, file: !27, discriminator: 0)
!29 = !DILocation(line: 39, column: 24, scope: !7)
!30 = !DILocation(line: 267, column: 36, scope: !28, inlinedAt: !29)
!31 = !DILocation(line: 43, column: 19, scope: !7)
!32 = !DILocation(line: 44, column: 20, scope: !7)
!33 = !DILocation(line: 256, column: 15, scope: !26, inlinedAt: !34)
!34 = !DILocation(line: 47, column: 26, scope: !7)
!35 = !DILocation(line: 267, column: 36, scope: !28, inlinedAt: !34)
!36 = !DILocation(line: 52, column: 28, scope: !7)
!37 = !DILocation(line: 49, column: 20, scope: !7)
!38 = !DILocation(line: 51, column: 20, scope: !7)
!39 = !DILocation(line: 54, column: 20, scope: !7)
!40 = !DILocation(line: 59, column: 28, scope: !7)
!41 = !DILocation(line: 56, column: 20, scope: !7)
!42 = !DILocation(line: 61, column: 35, scope: !7)
!43 = !DILocation(line: 62, column: 47, scope: !7)
!44 = !DILocation(line: 63, column: 4, scope: !7)
!45 = !DILocation(line: 64, column: 28, scope: !7)
!46 = !DILocation(line: 64, column: 40, scope: !7)
!47 = !DILocation(line: 65, column: 25, scope: !7)
!48 = !DILocation(line: 65, column: 45, scope: !7)
!49 = !DILocation(line: 66, column: 25, scope: !7)
!50 = !DILocation(line: 66, column: 37, scope: !7)
!51 = !DILocation(line: 66, column: 4, scope: !7)
