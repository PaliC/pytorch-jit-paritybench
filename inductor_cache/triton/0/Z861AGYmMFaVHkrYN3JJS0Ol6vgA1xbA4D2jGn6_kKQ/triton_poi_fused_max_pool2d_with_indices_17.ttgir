#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [1, 0]}>
#loc = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_17(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1> : tensor<1x512xi8, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1x512xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<1x512xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<1x512xi8, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c17_i32 = arith.constant 17 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<256> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<256> : tensor<1x512xi32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<16384> : tensor<1x512xi32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x512xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x512xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<1x512xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<1x512xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<1x512xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<1x512xi32, #blocked1> loc(#loc5)
    %10 = tt.get_program_id x : i32 loc(#loc6)
    %11 = arith.cmpi slt, %10, %c64_i32 : i32 loc(#loc7)
    %12 = arith.remsi %10, %c8_i32 : i32 loc(#loc8)
    %13 = arith.divsi %10, %c8_i32 : i32 loc(#loc9)
    %14 = arith.remsi %9, %cst_4 : tensor<1x512xi32, #blocked1> loc(#loc10)
    %15 = arith.divsi %9, %cst_4 : tensor<1x512xi32, #blocked1> loc(#loc11)
    %16 = arith.muli %12, %c2_i32 : i32 loc(#loc12)
    %17 = arith.muli %13, %c32_i32 : i32 loc(#loc13)
    %18 = arith.addi %16, %17 : i32 loc(#loc14)
    %19 = arith.muli %8, %cst_3 : tensor<1x512xi32, #blocked> loc(#loc15)
    %20 = tt.splat %18 : i32 -> tensor<1x512xi32, #blocked> loc(#loc16)
    %21 = arith.addi %20, %19 : tensor<1x512xi32, #blocked> loc(#loc16)
    %22 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc17)
    %23 = tt.addptr %22, %21 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc17)
    %24 = tt.splat %11 : i1 -> tensor<1x512xi1, #blocked> loc(#loc18)
    %25 = tt.load %23, %24 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc18)
    %26 = arith.addi %16, %c1_i32 : i32 loc(#loc19)
    %27 = arith.addi %26, %17 : i32 loc(#loc20)
    %28 = tt.splat %27 : i32 -> tensor<1x512xi32, #blocked> loc(#loc21)
    %29 = arith.addi %28, %19 : tensor<1x512xi32, #blocked> loc(#loc21)
    %30 = tt.addptr %22, %29 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc22)
    %31 = tt.load %30, %24 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc23)
    %32 = arith.addi %16, %c16_i32 : i32 loc(#loc24)
    %33 = arith.addi %32, %17 : i32 loc(#loc25)
    %34 = tt.splat %33 : i32 -> tensor<1x512xi32, #blocked> loc(#loc26)
    %35 = arith.addi %34, %19 : tensor<1x512xi32, #blocked> loc(#loc26)
    %36 = tt.addptr %22, %35 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc27)
    %37 = tt.load %36, %24 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc28)
    %38 = arith.addi %16, %c17_i32 : i32 loc(#loc29)
    %39 = arith.addi %38, %17 : i32 loc(#loc30)
    %40 = tt.splat %39 : i32 -> tensor<1x512xi32, #blocked> loc(#loc31)
    %41 = arith.addi %40, %19 : tensor<1x512xi32, #blocked> loc(#loc31)
    %42 = tt.addptr %22, %41 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc32)
    %43 = tt.load %42, %24 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc33)
    %44 = arith.cmpf ogt, %31, %25 : tensor<1x512xf32, #blocked> loc(#loc53)
    %45 = arith.cmpf une, %31, %31 : tensor<1x512xf32, #blocked> loc(#loc54)
    %46 = arith.ori %44, %45 : tensor<1x512xi1, #blocked> loc(#loc55)
    %47 = arith.select %46, %31, %25 : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc56)
    %48 = arith.cmpf ogt, %37, %47 : tensor<1x512xf32, #blocked> loc(#loc57)
    %49 = arith.cmpf une, %37, %37 : tensor<1x512xf32, #blocked> loc(#loc58)
    %50 = arith.ori %48, %49 : tensor<1x512xi1, #blocked> loc(#loc59)
    %51 = arith.select %50, %37, %47 : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc60)
    %52 = arith.cmpf ogt, %43, %51 : tensor<1x512xf32, #blocked> loc(#loc61)
    %53 = arith.cmpf une, %43, %43 : tensor<1x512xf32, #blocked> loc(#loc62)
    %54 = arith.ori %52, %53 : tensor<1x512xi1, #blocked> loc(#loc63)
    %55 = arith.select %54, %43, %51 : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc64)
    %56 = arith.select %44, %cst, %cst_0 : tensor<1x512xi1, #blocked>, tensor<1x512xi8, #blocked> loc(#loc41)
    %57 = arith.select %48, %cst_1, %56 : tensor<1x512xi1, #blocked>, tensor<1x512xi8, #blocked> loc(#loc42)
    %58 = arith.select %52, %cst_2, %57 : tensor<1x512xi1, #blocked>, tensor<1x512xi8, #blocked> loc(#loc43)
    %59 = arith.muli %10, %c256_i32 : i32 loc(#loc44)
    %60 = tt.splat %59 : i32 -> tensor<1x512xi32, #blocked1> loc(#loc45)
    %61 = arith.addi %14, %60 : tensor<1x512xi32, #blocked1> loc(#loc45)
    %62 = arith.muli %15, %cst_5 : tensor<1x512xi32, #blocked1> loc(#loc46)
    %63 = arith.addi %61, %62 : tensor<1x512xi32, #blocked1> loc(#loc47)
    %64 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked1> loc(#loc48)
    %65 = tt.addptr %64, %63 : tensor<1x512x!tt.ptr<f32>, #blocked1>, tensor<1x512xi32, #blocked1> loc(#loc48)
    %66 = triton_gpu.convert_layout %55 : tensor<1x512xf32, #blocked> -> tensor<1x512xf32, #blocked1> loc(#loc49)
    %67 = tt.splat %11 : i1 -> tensor<1x512xi1, #blocked1> loc(#loc49)
    tt.store %65, %66, %67 : tensor<1x512x!tt.ptr<f32>, #blocked1> loc(#loc49)
    %68 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<1x512x!tt.ptr<i8>, #blocked1> loc(#loc50)
    %69 = tt.addptr %68, %63 : tensor<1x512x!tt.ptr<i8>, #blocked1>, tensor<1x512xi32, #blocked1> loc(#loc50)
    %70 = triton_gpu.convert_layout %58 : tensor<1x512xi8, #blocked> -> tensor<1x512xi8, #blocked1> loc(#loc51)
    tt.store %69, %70, %67 : tensor<1x512x!tt.ptr<i8>, #blocked1> loc(#loc51)
    tt.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":22:28)
#loc3 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":22:33)
#loc4 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":23:44)
#loc5 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":23:23)
#loc6 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":25:28)
#loc7 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":27:21)
#loc8 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":28:19)
#loc9 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":29:19)
#loc10 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":32:19)
#loc11 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":33:19)
#loc12 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":34:32)
#loc13 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":34:40)
#loc14 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":34:37)
#loc15 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":34:49)
#loc16 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":34:45)
#loc17 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":34:30)
#loc18 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":34:54)
#loc19 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":35:34)
#loc20 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":35:41)
#loc21 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":35:49)
#loc22 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":35:30)
#loc23 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":35:58)
#loc24 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":36:35)
#loc25 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":36:42)
#loc26 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":36:50)
#loc27 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":36:30)
#loc28 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":36:59)
#loc29 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":37:35)
#loc30 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":37:42)
#loc31 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":37:50)
#loc32 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":37:30)
#loc33 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":37:59)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc35 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":38:40)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc39 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":39:40)
#loc40 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":40:40)
#loc41 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":44:33)
#loc42 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":47:35)
#loc43 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":50:35)
#loc44 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":51:34)
#loc45 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":51:30)
#loc46 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":51:45)
#loc47 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":51:39)
#loc48 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":51:25)
#loc49 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":51:56)
#loc50 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":52:25)
#loc51 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":52:57)
#loc52 = loc("inductor_cache/e4/ce43nudj7rtquv6yarc7d4fdkybxxs3no7fhoigkazgu3s4xr6px.py":52:4)
#loc53 = loc(callsite(#loc34 at #loc35))
#loc54 = loc(callsite(#loc36 at #loc35))
#loc55 = loc(callsite(#loc37 at #loc35))
#loc56 = loc(callsite(#loc38 at #loc35))
#loc57 = loc(callsite(#loc34 at #loc39))
#loc58 = loc(callsite(#loc36 at #loc39))
#loc59 = loc(callsite(#loc37 at #loc39))
#loc60 = loc(callsite(#loc38 at #loc39))
#loc61 = loc(callsite(#loc34 at #loc40))
#loc62 = loc(callsite(#loc36 at #loc40))
#loc63 = loc(callsite(#loc37 at #loc40))
#loc64 = loc(callsite(#loc38 at #loc40))
