; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_11(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = icmp slt i32 %12, 256, !dbg !14
  %15 = sdiv i32 %12, 4, !dbg !15
  %16 = srem i32 %13, 4, !dbg !16
  %17 = sdiv i32 %12, 16, !dbg !17
  %18 = srem i32 %17, 4, !dbg !18
  %19 = sdiv i32 %12, 64, !dbg !19
  %20 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !16
  %21 = insertelement <2 x i32> %20, i32 %15, i64 1, !dbg !16
  %22 = srem <2 x i32> %21, splat (i32 4), !dbg !16
  %23 = icmp slt <2 x i32> %22, splat (i32 2), !dbg !20
  %24 = extractelement <2 x i1> %23, i64 0, !dbg !21
  %25 = extractelement <2 x i1> %23, i64 1, !dbg !22
  %26 = and i1 %24, %25, !dbg !23
  %27 = extractelement <2 x i32> %22, i64 0, !dbg !24
  %28 = shl nsw i32 %27, 2, !dbg !25
  %29 = shl nsw i32 %16, 2, !dbg !25
  %30 = add nsw i32 %18, %28, !dbg !26
  %31 = add nsw i32 %18, %29, !dbg !26
  %32 = extractelement <2 x i32> %22, i64 1, !dbg !27
  %33 = shl nsw i32 %32, 3, !dbg !28
  %34 = shl nsw i32 %19, 4, !dbg !29
  %35 = add nsw i32 %33, %34, !dbg !30
  %36 = add nsw i32 %35, %30, !dbg !31
  %37 = add nsw i32 %35, %31, !dbg !31
  %38 = sext i32 %36 to i64, !dbg !32
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !32
  %40 = sext i32 %37 to i64, !dbg !32
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !32
  %42 = and i1 %14, %26, !dbg !33
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %42, i32 0, i1 %42) #1, !dbg !34
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %42, i32 0, i1 %42) #1, !dbg !34
  %45 = icmp sgt i32 %27, 1, !dbg !24
  %46 = and i1 %45, %25, !dbg !35
  %47 = add nsw i32 %18, -8, !dbg !36
  %48 = add nsw i32 %47, %28, !dbg !37
  %49 = add nsw i32 %47, %29, !dbg !37
  %50 = add nsw i32 %35, %48, !dbg !38
  %51 = add nsw i32 %35, %49, !dbg !38
  %52 = sext i32 %50 to i64, !dbg !39
  %53 = getelementptr float, ptr addrspace(1) %1, i64 %52, !dbg !39
  %54 = sext i32 %51 to i64, !dbg !39
  %55 = getelementptr float, ptr addrspace(1) %1, i64 %54, !dbg !39
  %56 = and i1 %14, %46, !dbg !40
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %53, i1 %56, i32 0, i1 %56) #1, !dbg !41
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %56, i32 0, i1 %56) #1, !dbg !41
  %.v = select i1 %24, i32 %43, i32 %57, !dbg !42
  %.v1 = select i1 %24, i32 %44, i32 %58, !dbg !42
  %59 = icmp sgt i32 %32, 1, !dbg !27
  %60 = and i1 %24, %59, !dbg !43
  %61 = add nsw i32 %33, -16, !dbg !44
  %62 = add nsw i32 %61, %34, !dbg !45
  %63 = add nsw i32 %62, %30, !dbg !46
  %64 = add nsw i32 %62, %31, !dbg !46
  %65 = sext i32 %63 to i64, !dbg !47
  %66 = getelementptr float, ptr addrspace(1) %2, i64 %65, !dbg !47
  %67 = sext i32 %64 to i64, !dbg !47
  %68 = getelementptr float, ptr addrspace(1) %2, i64 %67, !dbg !47
  %69 = and i1 %14, %60, !dbg !48
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %66, i1 %69, i32 0, i1 %69) #1, !dbg !49
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %68, i1 %69, i32 0, i1 %69) #1, !dbg !49
  %72 = and i1 %45, %59, !dbg !50
  %73 = add nsw i32 %62, %48, !dbg !51
  %74 = add nsw i32 %62, %49, !dbg !51
  %75 = sext i32 %73 to i64, !dbg !52
  %76 = getelementptr float, ptr addrspace(1) %3, i64 %75, !dbg !52
  %77 = sext i32 %74 to i64, !dbg !52
  %78 = getelementptr float, ptr addrspace(1) %3, i64 %77, !dbg !52
  %79 = and i1 %14, %72, !dbg !53
  %80 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %76, i1 %79, i32 0, i1 %79) #1, !dbg !54
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %78, i1 %79, i32 0, i1 %79) #1, !dbg !54
  %.v2 = select i1 %24, i32 %70, i32 %80, !dbg !21
  %.v3 = select i1 %24, i32 %71, i32 %81, !dbg !21
  %.v4 = select i1 %25, i32 %.v, i32 %.v2, !dbg !22
  %.v5 = select i1 %25, i32 %.v1, i32 %.v3, !dbg !22
  %82 = sext i32 %12 to i64, !dbg !55
  %83 = getelementptr float, ptr addrspace(1) %4, i64 %82, !dbg !55
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.v4, i32 %.v5, ptr addrspace(1) %83, i1 %14) #1, !dbg !56
  ret void, !dbg !57
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnvq3vuh2gw6soyd5wxfztvlnxchktemh57u5hr67ozxn2tshavv.py", directory: "inductor_cache/nv")
!4 = !{ptr @triton_poi_fused_cat_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_11, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_11", linkageName: "triton_poi_fused_cat_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 21, scope: !7)
!18 = !DILocation(line: 26, column: 27, scope: !7)
!19 = !DILocation(line: 27, column: 19, scope: !7)
!20 = !DILocation(line: 38, column: 18, scope: !7)
!21 = !DILocation(line: 64, column: 35, scope: !7)
!22 = !DILocation(line: 0, scope: !7)
!23 = !DILocation(line: 39, column: 19, scope: !7)
!24 = !DILocation(line: 41, column: 20, scope: !7)
!25 = !DILocation(line: 40, column: 39, scope: !7)
!26 = !DILocation(line: 40, column: 36, scope: !7)
!27 = !DILocation(line: 49, column: 20, scope: !7)
!28 = !DILocation(line: 40, column: 48, scope: !7)
!29 = !DILocation(line: 40, column: 57, scope: !7)
!30 = !DILocation(line: 40, column: 45, scope: !7)
!31 = !DILocation(line: 40, column: 54, scope: !7)
!32 = !DILocation(line: 40, column: 31, scope: !7)
!33 = !DILocation(line: 40, column: 70, scope: !7)
!34 = !DILocation(line: 40, column: 62, scope: !7)
!35 = !DILocation(line: 44, column: 20, scope: !7)
!36 = !DILocation(line: 45, column: 39, scope: !7)
!37 = !DILocation(line: 45, column: 36, scope: !7)
!38 = !DILocation(line: 45, column: 61, scope: !7)
!39 = !DILocation(line: 45, column: 31, scope: !7)
!40 = !DILocation(line: 45, column: 77, scope: !7)
!41 = !DILocation(line: 45, column: 69, scope: !7)
!42 = !DILocation(line: 46, column: 34, scope: !7)
!43 = !DILocation(line: 57, column: 20, scope: !7)
!44 = !DILocation(line: 58, column: 48, scope: !7)
!45 = !DILocation(line: 58, column: 45, scope: !7)
!46 = !DILocation(line: 58, column: 61, scope: !7)
!47 = !DILocation(line: 58, column: 31, scope: !7)
!48 = !DILocation(line: 58, column: 77, scope: !7)
!49 = !DILocation(line: 58, column: 69, scope: !7)
!50 = !DILocation(line: 62, column: 20, scope: !7)
!51 = !DILocation(line: 63, column: 68, scope: !7)
!52 = !DILocation(line: 63, column: 31, scope: !7)
!53 = !DILocation(line: 63, column: 84, scope: !7)
!54 = !DILocation(line: 63, column: 76, scope: !7)
!55 = !DILocation(line: 68, column: 25, scope: !7)
!56 = !DILocation(line: 68, column: 37, scope: !7)
!57 = !DILocation(line: 68, column: 4, scope: !7)
