; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__to_copy_add_div_ge_gt_le_lt_mul_pow_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %12, i1 %10) #1, !dbg !16
  %14 = extractvalue { i32, i32 } %13, 0, !dbg !16
  %15 = extractvalue { i32, i32 } %13, 1, !dbg !16
  %16 = bitcast i32 %14 to float, !dbg !16
  %17 = bitcast i32 %15 to float, !dbg !16
  %18 = fcmp ogt float %16, 2.000000e+00, !dbg !17
  %19 = fcmp ogt float %17, 2.000000e+00, !dbg !17
  %20 = uitofp i1 %18 to float, !dbg !18
  %21 = uitofp i1 %19 to float, !dbg !18
  %22 = fmul float %16, %16, !dbg !19
  %23 = fmul float %17, %17, !dbg !19
  %24 = fmul float %22, 2.500000e-01, !dbg !20
  %25 = fmul float %23, 2.500000e-01, !dbg !20
  %26 = fsub float %16, %24, !dbg !21
  %27 = fsub float %17, %25, !dbg !21
  %28 = fcmp oge float %16, 0.000000e+00, !dbg !22
  %29 = fcmp oge float %17, 0.000000e+00, !dbg !22
  %30 = fadd float %24, %16, !dbg !23
  %31 = fadd float %25, %17, !dbg !23
  %32 = fcmp olt float %16, 0.000000e+00, !dbg !24
  %33 = fcmp olt float %17, 0.000000e+00, !dbg !24
  %34 = insertelement <2 x i1> poison, i1 %32, i64 0, !dbg !25
  %35 = insertelement <2 x i1> %34, i1 %28, i64 1, !dbg !25
  %36 = uitofp <2 x i1> %35 to <2 x float>, !dbg !25
  %37 = insertelement <2 x float> poison, float %30, i64 0, !dbg !26
  %38 = insertelement <2 x float> %37, float %26, i64 1, !dbg !26
  %39 = fmul <2 x float> %38, %36, !dbg !26
  %40 = insertelement <2 x float> <float poison, float 2.000000e+00>, float %16, i64 0, !dbg !27
  %41 = insertelement <2 x float> <float -2.000000e+00, float poison>, float %16, i64 1, !dbg !27
  %42 = fcmp oge <2 x float> %40, %41, !dbg !27
  %43 = uitofp <2 x i1> %42 to <2 x float>, !dbg !28
  %44 = fmul <2 x float> %39, %43, !dbg !29
  %45 = extractelement <2 x float> %44, i64 1, !dbg !30
  %46 = fadd float %45, %20, !dbg !30
  %47 = insertelement <2 x i1> poison, i1 %33, i64 0, !dbg !25
  %48 = insertelement <2 x i1> %47, i1 %29, i64 1, !dbg !25
  %49 = uitofp <2 x i1> %48 to <2 x float>, !dbg !25
  %50 = insertelement <2 x float> poison, float %31, i64 0, !dbg !26
  %51 = insertelement <2 x float> %50, float %27, i64 1, !dbg !26
  %52 = fmul <2 x float> %51, %49, !dbg !26
  %53 = insertelement <2 x float> <float poison, float 2.000000e+00>, float %17, i64 0, !dbg !27
  %54 = insertelement <2 x float> <float -2.000000e+00, float poison>, float %17, i64 1, !dbg !27
  %55 = fcmp oge <2 x float> %53, %54, !dbg !27
  %56 = uitofp <2 x i1> %55 to <2 x float>, !dbg !28
  %57 = fmul <2 x float> %52, %56, !dbg !29
  %58 = extractelement <2 x float> %57, i64 1, !dbg !30
  %59 = fadd float %58, %21, !dbg !30
  %60 = extractelement <2 x float> %44, i64 0, !dbg !31
  %61 = fadd float %60, %46, !dbg !31
  %62 = extractelement <2 x float> %57, i64 0, !dbg !31
  %63 = fadd float %62, %59, !dbg !31
  %64 = fcmp olt float %16, -2.000000e+00, !dbg !32
  %65 = fcmp olt float %17, -2.000000e+00, !dbg !32
  %66 = uitofp i1 %64 to float, !dbg !33
  %67 = uitofp i1 %65 to float, !dbg !33
  %68 = fsub float %61, %66, !dbg !34
  %69 = fsub float %63, %67, !dbg !34
  %70 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !35
  %71 = bitcast float %68 to i32, !dbg !36
  %72 = bitcast float %69 to i32, !dbg !36
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %71, i32 %72, ptr addrspace(1) %70, i1 %10) #1, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c366jrmja6clxshibe4lcsecga7koz53t4br6d65a37nysfytyfd.py", directory: "inductor_cache/36")
!4 = !{ptr @triton_poi_fused__to_copy_add_div_ge_gt_le_lt_mul_pow_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__to_copy_add_div_ge_gt_le_lt_mul_pow_sub_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_add_div_ge_gt_le_lt_mul_pow_sub_0", linkageName: "triton_poi_fused__to_copy_add_div_ge_gt_le_lt_mul_pow_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 27, column: 18, scope: !7)
!18 = !DILocation(line: 28, column: 19, scope: !7)
!19 = !DILocation(line: 29, column: 18, scope: !7)
!20 = !DILocation(line: 31, column: 18, scope: !7)
!21 = !DILocation(line: 32, column: 18, scope: !7)
!22 = !DILocation(line: 34, column: 19, scope: !7)
!23 = !DILocation(line: 41, column: 19, scope: !7)
!24 = !DILocation(line: 42, column: 19, scope: !7)
!25 = !DILocation(line: 43, column: 21, scope: !7)
!26 = !DILocation(line: 44, column: 20, scope: !7)
!27 = !DILocation(line: 46, column: 20, scope: !7)
!28 = !DILocation(line: 47, column: 21, scope: !7)
!29 = !DILocation(line: 48, column: 20, scope: !7)
!30 = !DILocation(line: 40, column: 19, scope: !7)
!31 = !DILocation(line: 49, column: 20, scope: !7)
!32 = !DILocation(line: 50, column: 19, scope: !7)
!33 = !DILocation(line: 51, column: 21, scope: !7)
!34 = !DILocation(line: 52, column: 20, scope: !7)
!35 = !DILocation(line: 53, column: 25, scope: !7)
!36 = !DILocation(line: 53, column: 37, scope: !7)
!37 = !DILocation(line: 53, column: 4, scope: !7)
