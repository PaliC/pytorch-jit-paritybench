#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_cat_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<3072> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<48> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<24> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<6> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<-24> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_0 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_1 : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_1 : tensor<256xi32, #blocked> loc(#loc8)
    %8 = arith.extsi %6 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_2 : tensor<256xi64, #blocked> loc(#loc9)
    %10 = arith.muli %7, %cst_3 : tensor<256xi32, #blocked> loc(#loc10)
    %11 = arith.divsi %6, %cst_4 : tensor<256xi32, #blocked> loc(#loc11)
    %12 = arith.remsi %11, %cst_3 : tensor<256xi32, #blocked> loc(#loc12)
    %13 = arith.addi %10, %12 : tensor<256xi32, #blocked> loc(#loc13)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc14)
    %15 = tt.addptr %14, %13 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc14)
    %16 = arith.andi %9, %5 : tensor<256xi1, #blocked> loc(#loc15)
    %17 = tt.load %15, %16, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc16)
    %18 = arith.remsi %6, %cst_4 : tensor<256xi32, #blocked> loc(#loc17)
    %19 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc18)
    %20 = tt.addptr %19, %18 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc18)
    %21 = tt.load %20, %16, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc19)
    %22 = arith.mulf %17, %21 : tensor<256xf32, #blocked> loc(#loc20)
    %23 = math.sin %22 : tensor<256xf32, #blocked> loc(#loc21)
    %24 = arith.cmpi sge, %8, %cst_2 : tensor<256xi64, #blocked> loc(#loc22)
    %25 = arith.addi %6, %cst_5 : tensor<256xi32, #blocked> loc(#loc23)
    %26 = arith.divsi %25, %cst_4 : tensor<256xi32, #blocked> loc(#loc24)
    %27 = arith.remsi %26, %cst_3 : tensor<256xi32, #blocked> loc(#loc25)
    %28 = arith.addi %10, %27 : tensor<256xi32, #blocked> loc(#loc26)
    %29 = tt.addptr %14, %28 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc27)
    %30 = arith.andi %24, %5 : tensor<256xi1, #blocked> loc(#loc28)
    %31 = tt.load %29, %30, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc29)
    %32 = arith.remsi %25, %cst_4 : tensor<256xi32, #blocked> loc(#loc30)
    %33 = tt.addptr %19, %32 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc31)
    %34 = tt.load %33, %30, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc32)
    %35 = arith.mulf %31, %34 : tensor<256xf32, #blocked> loc(#loc33)
    %36 = math.cos %35 : tensor<256xf32, #blocked> loc(#loc34)
    %37 = arith.select %24, %36, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc35)
    %38 = arith.select %9, %23, %37 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc41)
    %39 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc38)
    %40 = tt.addptr %39, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc38)
    tt.store %40, %38, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc39)
    tt.return loc(#loc40)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":21:28)
#loc3 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":21:33)
#loc4 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":22:36)
#loc5 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":22:23)
#loc6 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":23:21)
#loc7 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":24:19)
#loc8 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":25:19)
#loc9 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":31:18)
#loc10 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":32:32)
#loc11 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":32:48)
#loc12 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":32:53)
#loc13 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":32:39)
#loc14 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":32:30)
#loc15 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":32:66)
#loc16 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":32:59)
#loc17 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":33:38)
#loc18 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":33:31)
#loc19 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":33:43)
#loc20 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":34:18)
#loc21 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":35:23)
#loc22 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":38:20)
#loc23 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":41:50)
#loc24 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":41:57)
#loc25 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":41:62)
#loc26 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":41:40)
#loc27 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":41:31)
#loc28 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":41:76)
#loc29 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":41:68)
#loc30 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":42:47)
#loc31 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":42:32)
#loc32 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":42:52)
#loc33 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":43:20)
#loc34 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":44:24)
#loc35 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":46:35)
#loc36 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":47:34)
#loc37 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":37:33)
#loc38 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":48:25)
#loc39 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":48:37)
#loc40 = loc("inductor_cache/jp/cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py":48:4)
#loc41 = loc(fused[#loc36, #loc37])
