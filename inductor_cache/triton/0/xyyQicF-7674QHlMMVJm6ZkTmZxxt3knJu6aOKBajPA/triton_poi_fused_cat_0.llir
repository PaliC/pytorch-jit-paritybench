; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i109 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 3072, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %13 = sdiv i32 %.frozen, 48, !dbg !15
  %14 = mul i32 %13, 48, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = srem i32 %11, 48, !dbg !16
  %16 = icmp slt i32 %.decomposed, 24, !dbg !17
  %17 = shl nsw i32 %13, 2, !dbg !18
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !19
  %18 = sdiv i8 %.lhs.trunc, 6, !dbg !19
  %.lhs.trunc164 = trunc nsw i32 %15 to i8, !dbg !19
  %.lhs.trunc164.frozen = freeze i8 %.lhs.trunc164, !dbg !19
  %19 = sdiv i8 %.lhs.trunc164.frozen, 6, !dbg !19
  %20 = srem i8 %18, 4, !dbg !20
  %.sext167 = sext i8 %20 to i32, !dbg !20
  %21 = srem i8 %19, 4, !dbg !20
  %.sext169 = sext i8 %21 to i32, !dbg !20
  %22 = add nsw i32 %17, %.sext167, !dbg !21
  %23 = add nsw i32 %17, %.sext169, !dbg !21
  %24 = sext i32 %22 to i64, !dbg !22
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !22
  %26 = sext i32 %23 to i64, !dbg !22
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !22
  %28 = and i1 %12, %16, !dbg !23
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %28, i32 0, i1 %28) #4, !dbg !24
  %30 = bitcast i32 %29 to float, !dbg !24
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %28, i32 0, i1 %28) #4, !dbg !24
  %32 = bitcast i32 %31 to float, !dbg !24
  %33 = mul i8 %18, 6, !dbg !25
  %.decomposed210 = sub i8 %.lhs.trunc, %33, !dbg !25
  %34 = mul i8 %19, 6, !dbg !25
  %.decomposed211 = sub i8 %.lhs.trunc164.frozen, %34, !dbg !25
  %35 = sext i8 %.decomposed210 to i64, !dbg !26
  %36 = getelementptr float, ptr addrspace(1) %1, i64 %35, !dbg !26
  %37 = sext i8 %.decomposed211 to i64, !dbg !26
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !26
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %28, i32 0, i1 %28) #4, !dbg !27
  %40 = bitcast i32 %39 to float, !dbg !27
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %28, i32 0, i1 %28) #4, !dbg !27
  %42 = bitcast i32 %41 to float, !dbg !27
  %43 = fmul float %30, %40, !dbg !28
  %44 = fmul float %32, %42, !dbg !28
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !29
  %45 = fmul float %43, 0x3FE45F3060000000, !dbg !29
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i = icmp eq i32 %46, 0, !dbg !29
  %47 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %45) #4, !dbg !29
  %48 = tail call i32 @llvm.nvvm.f2i.rn(float %45) #4, !dbg !29
  %.01.i = select i1 %.not.i, i32 %48, i32 %47, !dbg !29
  %49 = sitofp i32 %.01.i to float, !dbg !29
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not15.i = icmp eq i32 %50, 0, !dbg !29
  %51 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %49, float 0xBFF921FB40000000, float %43) #4, !dbg !29
  %52 = tail call float @llvm.nvvm.fma.rn.f(float %49, float 0xBFF921FB40000000, float %43) #4, !dbg !29
  %.02.i = select i1 %.not15.i, float %52, float %51, !dbg !29
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not16.i = icmp eq i32 %53, 0, !dbg !29
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %49, float 0xBE74442D00000000, float %.02.i) #4, !dbg !29
  %55 = tail call float @llvm.nvvm.fma.rn.f(float %49, float 0xBE74442D00000000, float %.02.i) #4, !dbg !29
  %.03.i = select i1 %.not16.i, float %55, float %54, !dbg !29
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not17.i = icmp eq i32 %56, 0, !dbg !29
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %49, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !29
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %49, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !29
  %.04.i = select i1 %.not17.i, float %58, float %57, !dbg !29
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not18.i = icmp eq i32 %59, 0, !dbg !29
  %60 = tail call float @llvm.nvvm.fabs.ftz.f(float %43) #4, !dbg !29
  %61 = tail call float @llvm.nvvm.fabs.f(float %43) #4, !dbg !29
  %.06.i = select i1 %.not18.i, float %61, float %60, !dbg !29
  %62 = fcmp ult float %.06.i, 1.056150e+05, !dbg !29
  br i1 %62, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !29

__nv_isinff.exit.i.i.i:                           ; preds = %4
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not19.i = icmp eq i32 %63, 0, !dbg !29
  %.07.i = select i1 %.not19.i, float %61, float %60, !dbg !29
  %64 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !29
  br i1 %64, label %__nv_fmul_rn.exit.i.i.i, label %68, !dbg !29

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not27.i = icmp eq i32 %65, 0, !dbg !29
  %66 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %43, float 0.000000e+00) #4, !dbg !29
  %67 = tail call float @llvm.nvvm.mul.rn.f(float %43, float 0.000000e+00) #4, !dbg !29
  %.08.i = select i1 %.not27.i, float %67, float %66, !dbg !29
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !29

68:                                               ; preds = %__nv_isinff.exit.i.i.i
  %69 = bitcast float %43 to i32, !dbg !29
  %70 = lshr i32 %69, 23, !dbg !29
  %71 = and i32 %70, 224, !dbg !29
  %72 = add nsw i32 %71, -128, !dbg !29
  %73 = shl i32 %69, 8, !dbg !29
  %74 = or i32 %73, -2147483648, !dbg !29
  %75 = lshr exact i32 %72, 5, !dbg !29
  br label %76, !dbg !29

76:                                               ; preds = %68, %76
  %indvars.iv = phi i64 [ 0, %68 ], [ %indvars.iv.next, %76 ]
  %hi.i.i.i.0.i174 = phi i32 [ 0, %68 ], [ %81, %76 ]
  %77 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !29
  %78 = load i32, ptr addrspace(1) %77, align 4, !dbg !29
  %79 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %78, i32 %74, i32 %hi.i.i.i.0.i174) #5, !dbg !29, !srcloc !30
  %80 = extractvalue { i32, i32 } %79, 0, !dbg !29
  %81 = extractvalue { i32, i32 } %79, 1, !dbg !29
  %82 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !29
  store i32 %80, ptr %82, align 4, !dbg !29
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !29
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !29
  br i1 %exitcond.not, label %83, label %76, !dbg !29, !llvm.loop !31

83:                                               ; preds = %76
  %84 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !29
  store i32 %81, ptr %84, align 4, !dbg !29
  %85 = and i32 %70, 31, !dbg !29
  %86 = sub nsw i32 6, %75, !dbg !29
  %87 = sext i32 %86 to i64, !dbg !29
  %88 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %87, !dbg !29
  %89 = load i32, ptr %88, align 4, !dbg !29
  %90 = sub nsw i32 5, %75, !dbg !29
  %91 = sext i32 %90 to i64, !dbg !29
  %92 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %91, !dbg !29
  %93 = load i32, ptr %92, align 4, !dbg !29
  %.not20.i = icmp eq i32 %85, 0, !dbg !29
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %94, !dbg !29

94:                                               ; preds = %83
  %95 = sub nsw i32 4, %75, !dbg !29
  %96 = sub nuw nsw i32 32, %85, !dbg !29
  %97 = shl i32 %89, %85, !dbg !29
  %98 = lshr i32 %93, %96, !dbg !29
  %99 = add i32 %98, %97, !dbg !29
  %100 = shl i32 %93, %85, !dbg !29
  %101 = sext i32 %95 to i64, !dbg !29
  %102 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %101, !dbg !29
  %103 = load i32, ptr %102, align 4, !dbg !29
  %104 = lshr i32 %103, %96, !dbg !29
  %105 = add i32 %104, %100, !dbg !29
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !29

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %94, %83
  %hi.i.i.i.1.i = phi i32 [ %99, %94 ], [ %89, %83 ], !dbg !29
  %lo.i.i.i.0.i = phi i32 [ %105, %94 ], [ %93, %83 ], !dbg !29
  %106 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !29
  %107 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !29
  %108 = shl i32 %lo.i.i.i.0.i, 2, !dbg !29
  %109 = lshr i32 %107, 31, !dbg !29
  %110 = add nuw nsw i32 %109, %106, !dbg !29
  %111 = sub nsw i32 0, %110, !dbg !29
  %.not2123.i = icmp slt i32 %69, 0, !dbg !29
  %spec.select.i = select i1 %.not2123.i, i32 %111, i32 %110, !dbg !29
  %112 = xor i32 %107, %69, !dbg !29
  %.lobit.i = ashr i32 %107, 31, !dbg !29
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %107, !dbg !29
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %108, !dbg !29
  %113 = zext i32 %hi.i.i.i.2.i to i64, !dbg !29
  %114 = shl nuw i64 %113, 32, !dbg !29
  %115 = zext i32 %lo.i.i.i.1.i to i64, !dbg !29
  %116 = or disjoint i64 %114, %115, !dbg !29
  %117 = sitofp i64 %116 to double, !dbg !29
  %118 = fmul double %117, 0x3BF921FB54442D19, !dbg !29
  %119 = fptrunc double %118 to float, !dbg !29
  %120 = fneg float %119, !dbg !29
  %.not2526.i = icmp slt i32 %112, 0, !dbg !29
  %r.i.i.i.0.i = select i1 %.not2526.i, float %120, float %119, !dbg !29
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !29

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %4
  %i.i.1.i = phi i32 [ %.01.i, %4 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !29
  %t.i.i.1.i = phi float [ %.04.i, %4 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !29
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not28.i = icmp eq i32 %121, 0, !dbg !29
  %122 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !29
  %123 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !29
  %.011.i = select i1 %.not28.i, float %123, float %122, !dbg !29
  %124 = and i32 %i.i.1.i, 1, !dbg !29
  %.not29.i = icmp eq i32 %124, 0, !dbg !29
  %125 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !29
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not30.i = icmp eq i32 %126, 0, !dbg !29
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %125, float 0.000000e+00) #4, !dbg !29
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %125, float 0.000000e+00) #4, !dbg !29
  %.012.i = select i1 %.not30.i, float %128, float %127, !dbg !29
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !29

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not31.i = icmp eq i32 %129, 0, !dbg !29
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !29
  %131 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !29
  %.013.i = select i1 %.not31.i, float %131, float %130, !dbg !29
  br label %__internal_fmad.exit2.i.i.i, !dbg !29

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %132 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !29
  %133 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !29
  %134 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !29
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not32.i = icmp eq i32 %135, 0, !dbg !29
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %134, float %.011.i, float %133) #4, !dbg !29
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %134, float %.011.i, float %133) #4, !dbg !29
  %.010.i = select i1 %.not32.i, float %137, float %136, !dbg !29
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not33.i = icmp eq i32 %138, 0, !dbg !29
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %132) #4, !dbg !29
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %132) #4, !dbg !29
  %.09.i = select i1 %.not33.i, float %140, float %139, !dbg !29
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not34.i = icmp eq i32 %141, 0, !dbg !29
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %125) #4, !dbg !29
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %125) #4, !dbg !29
  %.05.i = select i1 %.not34.i, float %143, float %142, !dbg !29
  %144 = and i32 %i.i.1.i, 2, !dbg !29
  %.not35.i = icmp eq i32 %144, 0, !dbg !29
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !29

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not36.i = icmp eq i32 %145, 0, !dbg !29
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !29
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !29
  %.0.i = select i1 %.not36.i, float %147, float %146, !dbg !29
  br label %__nv_sinf.exit, !dbg !29

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !29
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !29
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !29
  %148 = fmul float %44, 0x3FE45F3060000000, !dbg !29
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i2 = icmp eq i32 %149, 0, !dbg !29
  %150 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %148) #4, !dbg !29
  %151 = tail call i32 @llvm.nvvm.f2i.rn(float %148) #4, !dbg !29
  %.01.i3 = select i1 %.not.i2, i32 %151, i32 %150, !dbg !29
  %152 = sitofp i32 %.01.i3 to float, !dbg !29
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not15.i4 = icmp eq i32 %153, 0, !dbg !29
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %152, float 0xBFF921FB40000000, float %44) #4, !dbg !29
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %152, float 0xBFF921FB40000000, float %44) #4, !dbg !29
  %.02.i5 = select i1 %.not15.i4, float %155, float %154, !dbg !29
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not16.i6 = icmp eq i32 %156, 0, !dbg !29
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %152, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !29
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %152, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !29
  %.03.i7 = select i1 %.not16.i6, float %158, float %157, !dbg !29
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not17.i8 = icmp eq i32 %159, 0, !dbg !29
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %152, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !29
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %152, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !29
  %.04.i9 = select i1 %.not17.i8, float %161, float %160, !dbg !29
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not18.i10 = icmp eq i32 %162, 0, !dbg !29
  %163 = tail call float @llvm.nvvm.fabs.ftz.f(float %44) #4, !dbg !29
  %164 = tail call float @llvm.nvvm.fabs.f(float %44) #4, !dbg !29
  %.06.i11 = select i1 %.not18.i10, float %164, float %163, !dbg !29
  %165 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !29
  br i1 %165, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !29

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not19.i13 = icmp eq i32 %166, 0, !dbg !29
  %.07.i14 = select i1 %.not19.i13, float %164, float %163, !dbg !29
  %167 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !29
  br i1 %167, label %__nv_fmul_rn.exit.i.i.i52, label %171, !dbg !29

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not27.i53 = icmp eq i32 %168, 0, !dbg !29
  %169 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %44, float 0.000000e+00) #4, !dbg !29
  %170 = tail call float @llvm.nvvm.mul.rn.f(float %44, float 0.000000e+00) #4, !dbg !29
  %.08.i54 = select i1 %.not27.i53, float %170, float %169, !dbg !29
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !29

171:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %172 = bitcast float %44 to i32, !dbg !29
  %173 = lshr i32 %172, 23, !dbg !29
  %174 = and i32 %173, 224, !dbg !29
  %175 = add nsw i32 %174, -128, !dbg !29
  %176 = shl i32 %172, 8, !dbg !29
  %177 = or i32 %176, -2147483648, !dbg !29
  %178 = lshr exact i32 %175, 5, !dbg !29
  br label %179, !dbg !29

179:                                              ; preds = %171, %179
  %indvars.iv189 = phi i64 [ 0, %171 ], [ %indvars.iv.next190, %179 ]
  %hi.i.i.i.0.i15176 = phi i32 [ 0, %171 ], [ %184, %179 ]
  %180 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv189, !dbg !29
  %181 = load i32, ptr addrspace(1) %180, align 4, !dbg !29
  %182 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %181, i32 %177, i32 %hi.i.i.i.0.i15176) #5, !dbg !29, !srcloc !30
  %183 = extractvalue { i32, i32 } %182, 0, !dbg !29
  %184 = extractvalue { i32, i32 } %182, 1, !dbg !29
  %185 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv189, !dbg !29
  store i32 %183, ptr %185, align 4, !dbg !29
  %indvars.iv.next190 = add nuw nsw i64 %indvars.iv189, 1, !dbg !29
  %exitcond191.not = icmp eq i64 %indvars.iv.next190, 6, !dbg !29
  br i1 %exitcond191.not, label %186, label %179, !dbg !29, !llvm.loop !33

186:                                              ; preds = %179
  %187 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !29
  store i32 %184, ptr %187, align 4, !dbg !29
  %188 = and i32 %173, 31, !dbg !29
  %189 = sub nsw i32 6, %178, !dbg !29
  %190 = sext i32 %189 to i64, !dbg !29
  %191 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %190, !dbg !29
  %192 = load i32, ptr %191, align 4, !dbg !29
  %193 = sub nsw i32 5, %178, !dbg !29
  %194 = sext i32 %193 to i64, !dbg !29
  %195 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %194, !dbg !29
  %196 = load i32, ptr %195, align 4, !dbg !29
  %.not20.i17 = icmp eq i32 %188, 0, !dbg !29
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %197, !dbg !29

197:                                              ; preds = %186
  %198 = sub nsw i32 4, %178, !dbg !29
  %199 = sub nuw nsw i32 32, %188, !dbg !29
  %200 = shl i32 %192, %188, !dbg !29
  %201 = lshr i32 %196, %199, !dbg !29
  %202 = add i32 %201, %200, !dbg !29
  %203 = shl i32 %196, %188, !dbg !29
  %204 = sext i32 %198 to i64, !dbg !29
  %205 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %204, !dbg !29
  %206 = load i32, ptr %205, align 4, !dbg !29
  %207 = lshr i32 %206, %199, !dbg !29
  %208 = add i32 %207, %203, !dbg !29
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !29

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %197, %186
  %hi.i.i.i.1.i19 = phi i32 [ %202, %197 ], [ %192, %186 ], !dbg !29
  %lo.i.i.i.0.i20 = phi i32 [ %208, %197 ], [ %196, %186 ], !dbg !29
  %209 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !29
  %210 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !29
  %211 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !29
  %212 = lshr i32 %210, 31, !dbg !29
  %213 = add nuw nsw i32 %212, %209, !dbg !29
  %214 = sub nsw i32 0, %213, !dbg !29
  %.not2123.i21 = icmp slt i32 %172, 0, !dbg !29
  %spec.select.i22 = select i1 %.not2123.i21, i32 %214, i32 %213, !dbg !29
  %215 = xor i32 %210, %172, !dbg !29
  %.lobit.i23 = ashr i32 %210, 31, !dbg !29
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %210, !dbg !29
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %211, !dbg !29
  %216 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !29
  %217 = shl nuw i64 %216, 32, !dbg !29
  %218 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !29
  %219 = or disjoint i64 %217, %218, !dbg !29
  %220 = sitofp i64 %219 to double, !dbg !29
  %221 = fmul double %220, 0x3BF921FB54442D19, !dbg !29
  %222 = fptrunc double %221 to float, !dbg !29
  %223 = fneg float %222, !dbg !29
  %.not2526.i27 = icmp slt i32 %215, 0, !dbg !29
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %223, float %222, !dbg !29
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !29

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !29
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !29
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not28.i32 = icmp eq i32 %224, 0, !dbg !29
  %225 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !29
  %226 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !29
  %.011.i33 = select i1 %.not28.i32, float %226, float %225, !dbg !29
  %227 = and i32 %i.i.1.i30, 1, !dbg !29
  %.not29.i34 = icmp eq i32 %227, 0, !dbg !29
  %228 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !29
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not30.i35 = icmp eq i32 %229, 0, !dbg !29
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %228, float 0.000000e+00) #4, !dbg !29
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %228, float 0.000000e+00) #4, !dbg !29
  %.012.i36 = select i1 %.not30.i35, float %231, float %230, !dbg !29
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !29

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not31.i38 = icmp eq i32 %232, 0, !dbg !29
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !29
  %234 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !29
  %.013.i39 = select i1 %.not31.i38, float %234, float %233, !dbg !29
  br label %__internal_fmad.exit2.i.i.i40, !dbg !29

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %235 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !29
  %236 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !29
  %237 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !29
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not32.i41 = icmp eq i32 %238, 0, !dbg !29
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %237, float %.011.i33, float %236) #4, !dbg !29
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %237, float %.011.i33, float %236) #4, !dbg !29
  %.010.i42 = select i1 %.not32.i41, float %240, float %239, !dbg !29
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not33.i43 = icmp eq i32 %241, 0, !dbg !29
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %235) #4, !dbg !29
  %243 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %235) #4, !dbg !29
  %.09.i44 = select i1 %.not33.i43, float %243, float %242, !dbg !29
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not34.i45 = icmp eq i32 %244, 0, !dbg !29
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %228) #4, !dbg !29
  %246 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %228) #4, !dbg !29
  %.05.i46 = select i1 %.not34.i45, float %246, float %245, !dbg !29
  %247 = and i32 %i.i.1.i30, 2, !dbg !29
  %.not35.i47 = icmp eq i32 %247, 0, !dbg !29
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !29

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not36.i49 = icmp eq i32 %248, 0, !dbg !29
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !29
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !29
  %.0.i50 = select i1 %.not36.i49, float %250, float %249, !dbg !29
  br label %__nv_sinf.exit55, !dbg !29

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !29
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !29
  %251 = icmp sgt i32 %.decomposed, 23, !dbg !34
  %252 = add nsw i32 %.decomposed, -24, !dbg !35
  %253 = add nsw i32 %15, -24, !dbg !35
  %254 = sdiv i32 %252, 6, !dbg !36
  %.frozen213 = freeze i32 %253, !dbg !36
  %255 = sdiv i32 %.frozen213, 6, !dbg !36
  %256 = srem i32 %254, 4, !dbg !37
  %257 = srem i32 %255, 4, !dbg !37
  %258 = add nsw i32 %256, %17, !dbg !38
  %259 = add nsw i32 %17, %257, !dbg !38
  %260 = sext i32 %258 to i64, !dbg !39
  %261 = getelementptr float, ptr addrspace(1) %0, i64 %260, !dbg !39
  %262 = sext i32 %259 to i64, !dbg !39
  %263 = getelementptr float, ptr addrspace(1) %0, i64 %262, !dbg !39
  %264 = and i1 %12, %251, !dbg !40
  %265 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %261, i1 %264, i32 0, i1 %264) #4, !dbg !41
  %266 = bitcast i32 %265 to float, !dbg !41
  %267 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %263, i1 %264, i32 0, i1 %264) #4, !dbg !41
  %268 = bitcast i32 %267 to float, !dbg !41
  %269 = mul i32 %254, 6, !dbg !42
  %.decomposed212 = sub i32 %252, %269, !dbg !42
  %270 = mul i32 %255, 6, !dbg !42
  %.decomposed214 = sub i32 %.frozen213, %270, !dbg !42
  %271 = sext i32 %.decomposed212 to i64, !dbg !43
  %272 = getelementptr float, ptr addrspace(1) %1, i64 %271, !dbg !43
  %273 = sext i32 %.decomposed214 to i64, !dbg !43
  %274 = getelementptr float, ptr addrspace(1) %1, i64 %273, !dbg !43
  %275 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %272, i1 %264, i32 0, i1 %264) #4, !dbg !44
  %276 = bitcast i32 %275 to float, !dbg !44
  %277 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %274, i1 %264, i32 0, i1 %264) #4, !dbg !44
  %278 = bitcast i32 %277 to float, !dbg !44
  %279 = fmul float %266, %276, !dbg !45
  %280 = fmul float %268, %278, !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !46
  %281 = fmul float %279, 0x3FE45F3060000000, !dbg !46
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not.i57 = icmp eq i32 %282, 0, !dbg !46
  %283 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %281) #4, !dbg !46
  %284 = tail call i32 @llvm.nvvm.f2i.rn(float %281) #4, !dbg !46
  %.01.i58 = select i1 %.not.i57, i32 %284, i32 %283, !dbg !46
  %285 = sitofp i32 %.01.i58 to float, !dbg !46
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not15.i59 = icmp eq i32 %286, 0, !dbg !46
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %285, float 0xBFF921FB40000000, float %279) #4, !dbg !46
  %288 = tail call float @llvm.nvvm.fma.rn.f(float %285, float 0xBFF921FB40000000, float %279) #4, !dbg !46
  %.02.i60 = select i1 %.not15.i59, float %288, float %287, !dbg !46
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not16.i61 = icmp eq i32 %289, 0, !dbg !46
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %285, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !46
  %291 = tail call float @llvm.nvvm.fma.rn.f(float %285, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !46
  %.03.i62 = select i1 %.not16.i61, float %291, float %290, !dbg !46
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not17.i63 = icmp eq i32 %292, 0, !dbg !46
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %285, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !46
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %285, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !46
  %.04.i64 = select i1 %.not17.i63, float %294, float %293, !dbg !46
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not18.i65 = icmp eq i32 %295, 0, !dbg !46
  %296 = tail call float @llvm.nvvm.fabs.ftz.f(float %279) #4, !dbg !46
  %297 = tail call float @llvm.nvvm.fabs.f(float %279) #4, !dbg !46
  %.06.i66 = select i1 %.not18.i65, float %297, float %296, !dbg !46
  %298 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !46
  br i1 %298, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !46

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_sinf.exit55
  %299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not19.i68 = icmp eq i32 %299, 0, !dbg !46
  %.07.i69 = select i1 %.not19.i68, float %297, float %296, !dbg !46
  %300 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !46
  br i1 %300, label %__nv_fmul_rn.exit.i.i.i106, label %304, !dbg !46

__nv_fmul_rn.exit.i.i.i106:                       ; preds = %__nv_isinff.exit.i.i.i67
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not27.i107 = icmp eq i32 %301, 0, !dbg !46
  %302 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %279, float 0.000000e+00) #4, !dbg !46
  %303 = tail call float @llvm.nvvm.mul.rn.f(float %279, float 0.000000e+00) #4, !dbg !46
  %.08.i108 = select i1 %.not27.i107, float %303, float %302, !dbg !46
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !46

304:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %305 = bitcast float %279 to i32, !dbg !46
  %306 = lshr i32 %305, 23, !dbg !46
  %307 = and i32 %306, 224, !dbg !46
  %308 = add nsw i32 %307, -128, !dbg !46
  %309 = shl i32 %305, 8, !dbg !46
  %310 = or i32 %309, -2147483648, !dbg !46
  %311 = lshr exact i32 %308, 5, !dbg !46
  br label %312, !dbg !46

312:                                              ; preds = %304, %312
  %indvars.iv192 = phi i64 [ 0, %304 ], [ %indvars.iv.next193, %312 ]
  %hi.i.i.i.0.i70178 = phi i32 [ 0, %304 ], [ %317, %312 ]
  %313 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv192, !dbg !46
  %314 = load i32, ptr addrspace(1) %313, align 4, !dbg !46
  %315 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %314, i32 %310, i32 %hi.i.i.i.0.i70178) #5, !dbg !46, !srcloc !30
  %316 = extractvalue { i32, i32 } %315, 0, !dbg !46
  %317 = extractvalue { i32, i32 } %315, 1, !dbg !46
  %318 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv192, !dbg !46
  store i32 %316, ptr %318, align 4, !dbg !46
  %indvars.iv.next193 = add nuw nsw i64 %indvars.iv192, 1, !dbg !46
  %exitcond194.not = icmp eq i64 %indvars.iv.next193, 6, !dbg !46
  br i1 %exitcond194.not, label %319, label %312, !dbg !46, !llvm.loop !47

319:                                              ; preds = %312
  %320 = getelementptr inbounds i8, ptr %result.i.i.i.i56, i64 24, !dbg !46
  store i32 %317, ptr %320, align 4, !dbg !46
  %321 = and i32 %306, 31, !dbg !46
  %322 = sub nsw i32 6, %311, !dbg !46
  %323 = sext i32 %322 to i64, !dbg !46
  %324 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %323, !dbg !46
  %325 = load i32, ptr %324, align 4, !dbg !46
  %326 = sub nsw i32 5, %311, !dbg !46
  %327 = sext i32 %326 to i64, !dbg !46
  %328 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %327, !dbg !46
  %329 = load i32, ptr %328, align 4, !dbg !46
  %.not20.i72 = icmp eq i32 %321, 0, !dbg !46
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %330, !dbg !46

330:                                              ; preds = %319
  %331 = sub nsw i32 4, %311, !dbg !46
  %332 = sub nuw nsw i32 32, %321, !dbg !46
  %333 = shl i32 %325, %321, !dbg !46
  %334 = lshr i32 %329, %332, !dbg !46
  %335 = add i32 %334, %333, !dbg !46
  %336 = shl i32 %329, %321, !dbg !46
  %337 = sext i32 %331 to i64, !dbg !46
  %338 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %337, !dbg !46
  %339 = load i32, ptr %338, align 4, !dbg !46
  %340 = lshr i32 %339, %332, !dbg !46
  %341 = add i32 %340, %336, !dbg !46
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !46

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %330, %319
  %hi.i.i.i.1.i74 = phi i32 [ %335, %330 ], [ %325, %319 ], !dbg !46
  %lo.i.i.i.0.i75 = phi i32 [ %341, %330 ], [ %329, %319 ], !dbg !46
  %342 = lshr i32 %hi.i.i.i.1.i74, 30, !dbg !46
  %343 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i74, i32 %lo.i.i.i.0.i75, i32 2), !dbg !46
  %344 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !46
  %345 = lshr i32 %343, 31, !dbg !46
  %346 = add nuw nsw i32 %345, %342, !dbg !46
  %347 = sub nsw i32 0, %346, !dbg !46
  %.not2123.i76 = icmp slt i32 %305, 0, !dbg !46
  %spec.select.i77 = select i1 %.not2123.i76, i32 %347, i32 %346, !dbg !46
  %348 = xor i32 %343, %305, !dbg !46
  %.lobit.i78 = ashr i32 %343, 31, !dbg !46
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %343, !dbg !46
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %344, !dbg !46
  %349 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !46
  %350 = shl nuw i64 %349, 32, !dbg !46
  %351 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !46
  %352 = or disjoint i64 %350, %351, !dbg !46
  %353 = sitofp i64 %352 to double, !dbg !46
  %354 = fmul double %353, 0x3BF921FB54442D19, !dbg !46
  %355 = fptrunc double %354 to float, !dbg !46
  %356 = fneg float %355, !dbg !46
  %.not2526.i82 = icmp slt i32 %348, 0, !dbg !46
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %356, float %355, !dbg !46
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !46

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i106, %__nv_sinf.exit55
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i106 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !46
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_sinf.exit55 ], [ %.08.i108, %__nv_fmul_rn.exit.i.i.i106 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !46
  %357 = add i32 %i.i.1.i85, 1, !dbg !46
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not28.i87 = icmp eq i32 %358, 0, !dbg !46
  %359 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !46
  %360 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !46
  %.011.i88 = select i1 %.not28.i87, float %360, float %359, !dbg !46
  %361 = and i32 %i.i.1.i85, 1, !dbg !46
  %.not29.not.i = icmp eq i32 %361, 0, !dbg !46
  %362 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i86, !dbg !46
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not30.i89 = icmp eq i32 %363, 0, !dbg !46
  %364 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %362, float 0.000000e+00) #4, !dbg !46
  %365 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %362, float 0.000000e+00) #4, !dbg !46
  %.012.i90 = select i1 %.not30.i89, float %365, float %364, !dbg !46
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i103, label %__internal_fmad.exit2.i.i.i91, !dbg !46

__internal_fmad.exit1.i.i.i103:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not31.i104 = icmp eq i32 %366, 0, !dbg !46
  %367 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !46
  %368 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !46
  %.013.i105 = select i1 %.not31.i104, float %368, float %367, !dbg !46
  br label %__internal_fmad.exit2.i.i.i91, !dbg !46

__internal_fmad.exit2.i.i.i91:                    ; preds = %__internal_fmad.exit1.i.i.i103, %__internal_trig_reduction_kernel.exit.i.i84
  %369 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i103 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !46
  %370 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i103 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !46
  %371 = phi float [ %.013.i105, %__internal_fmad.exit1.i.i.i103 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !46
  %372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not32.i92 = icmp eq i32 %372, 0, !dbg !46
  %373 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %371, float %.011.i88, float %370) #4, !dbg !46
  %374 = tail call float @llvm.nvvm.fma.rn.f(float %371, float %.011.i88, float %370) #4, !dbg !46
  %.010.i93 = select i1 %.not32.i92, float %374, float %373, !dbg !46
  %375 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not33.i94 = icmp eq i32 %375, 0, !dbg !46
  %376 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i93, float %.011.i88, float %369) #4, !dbg !46
  %377 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i93, float %.011.i88, float %369) #4, !dbg !46
  %.09.i95 = select i1 %.not33.i94, float %377, float %376, !dbg !46
  %378 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not34.i96 = icmp eq i32 %378, 0, !dbg !46
  %379 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i95, float %.012.i90, float %362) #4, !dbg !46
  %380 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i95, float %.012.i90, float %362) #4, !dbg !46
  %.05.i97 = select i1 %.not34.i96, float %380, float %379, !dbg !46
  %381 = and i32 %357, 2, !dbg !46
  %.not35.i98 = icmp eq i32 %381, 0, !dbg !46
  br i1 %.not35.i98, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i99, !dbg !46

__internal_fmad.exit5.i.i.i99:                    ; preds = %__internal_fmad.exit2.i.i.i91
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not36.i100 = icmp eq i32 %382, 0, !dbg !46
  %383 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !46
  %384 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !46
  %.0.i101 = select i1 %.not36.i100, float %384, float %383, !dbg !46
  br label %__nv_cosf.exit, !dbg !46

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i91, %__internal_fmad.exit5.i.i.i99
  %z.i.i.0.i102 = phi float [ %.0.i101, %__internal_fmad.exit5.i.i.i99 ], [ %.05.i97, %__internal_fmad.exit2.i.i.i91 ], !dbg !46
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !46
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !46
  %385 = fmul float %280, 0x3FE45F3060000000, !dbg !46
  %386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not.i110 = icmp eq i32 %386, 0, !dbg !46
  %387 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %385) #4, !dbg !46
  %388 = tail call i32 @llvm.nvvm.f2i.rn(float %385) #4, !dbg !46
  %.01.i111 = select i1 %.not.i110, i32 %388, i32 %387, !dbg !46
  %389 = sitofp i32 %.01.i111 to float, !dbg !46
  %390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not15.i112 = icmp eq i32 %390, 0, !dbg !46
  %391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %389, float 0xBFF921FB40000000, float %280) #4, !dbg !46
  %392 = tail call float @llvm.nvvm.fma.rn.f(float %389, float 0xBFF921FB40000000, float %280) #4, !dbg !46
  %.02.i113 = select i1 %.not15.i112, float %392, float %391, !dbg !46
  %393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not16.i114 = icmp eq i32 %393, 0, !dbg !46
  %394 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %389, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !46
  %395 = tail call float @llvm.nvvm.fma.rn.f(float %389, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !46
  %.03.i115 = select i1 %.not16.i114, float %395, float %394, !dbg !46
  %396 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not17.i116 = icmp eq i32 %396, 0, !dbg !46
  %397 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %389, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !46
  %398 = tail call float @llvm.nvvm.fma.rn.f(float %389, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !46
  %.04.i117 = select i1 %.not17.i116, float %398, float %397, !dbg !46
  %399 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not18.i118 = icmp eq i32 %399, 0, !dbg !46
  %400 = tail call float @llvm.nvvm.fabs.ftz.f(float %280) #4, !dbg !46
  %401 = tail call float @llvm.nvvm.fabs.f(float %280) #4, !dbg !46
  %.06.i119 = select i1 %.not18.i118, float %401, float %400, !dbg !46
  %402 = fcmp ult float %.06.i119, 1.056150e+05, !dbg !46
  br i1 %402, label %__internal_trig_reduction_kernel.exit.i.i137, label %__nv_isinff.exit.i.i.i120, !dbg !46

__nv_isinff.exit.i.i.i120:                        ; preds = %__nv_cosf.exit
  %403 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not19.i121 = icmp eq i32 %403, 0, !dbg !46
  %.07.i122 = select i1 %.not19.i121, float %401, float %400, !dbg !46
  %404 = fcmp oeq float %.07.i122, 0x7FF0000000000000, !dbg !46
  br i1 %404, label %__nv_fmul_rn.exit.i.i.i160, label %408, !dbg !46

__nv_fmul_rn.exit.i.i.i160:                       ; preds = %__nv_isinff.exit.i.i.i120
  %405 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not27.i161 = icmp eq i32 %405, 0, !dbg !46
  %406 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %280, float 0.000000e+00) #4, !dbg !46
  %407 = tail call float @llvm.nvvm.mul.rn.f(float %280, float 0.000000e+00) #4, !dbg !46
  %.08.i162 = select i1 %.not27.i161, float %407, float %406, !dbg !46
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !46

408:                                              ; preds = %__nv_isinff.exit.i.i.i120
  %409 = bitcast float %280 to i32, !dbg !46
  %410 = lshr i32 %409, 23, !dbg !46
  %411 = and i32 %410, 224, !dbg !46
  %412 = add nsw i32 %411, -128, !dbg !46
  %413 = shl i32 %409, 8, !dbg !46
  %414 = or i32 %413, -2147483648, !dbg !46
  %415 = lshr exact i32 %412, 5, !dbg !46
  br label %416, !dbg !46

416:                                              ; preds = %408, %416
  %indvars.iv195 = phi i64 [ 0, %408 ], [ %indvars.iv.next196, %416 ]
  %hi.i.i.i.0.i123180 = phi i32 [ 0, %408 ], [ %421, %416 ]
  %417 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv195, !dbg !46
  %418 = load i32, ptr addrspace(1) %417, align 4, !dbg !46
  %419 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %418, i32 %414, i32 %hi.i.i.i.0.i123180) #5, !dbg !46, !srcloc !30
  %420 = extractvalue { i32, i32 } %419, 0, !dbg !46
  %421 = extractvalue { i32, i32 } %419, 1, !dbg !46
  %422 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %indvars.iv195, !dbg !46
  store i32 %420, ptr %422, align 4, !dbg !46
  %indvars.iv.next196 = add nuw nsw i64 %indvars.iv195, 1, !dbg !46
  %exitcond197.not = icmp eq i64 %indvars.iv.next196, 6, !dbg !46
  br i1 %exitcond197.not, label %423, label %416, !dbg !46, !llvm.loop !48

423:                                              ; preds = %416
  %424 = getelementptr inbounds i8, ptr %result.i.i.i.i109, i64 24, !dbg !46
  store i32 %421, ptr %424, align 4, !dbg !46
  %425 = and i32 %410, 31, !dbg !46
  %426 = sub nsw i32 6, %415, !dbg !46
  %427 = sext i32 %426 to i64, !dbg !46
  %428 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %427, !dbg !46
  %429 = load i32, ptr %428, align 4, !dbg !46
  %430 = sub nsw i32 5, %415, !dbg !46
  %431 = sext i32 %430 to i64, !dbg !46
  %432 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %431, !dbg !46
  %433 = load i32, ptr %432, align 4, !dbg !46
  %.not20.i125 = icmp eq i32 %425, 0, !dbg !46
  br i1 %.not20.i125, label %__internal_trig_reduction_slowpath.exit.i.i.i126, label %434, !dbg !46

434:                                              ; preds = %423
  %435 = sub nsw i32 4, %415, !dbg !46
  %436 = sub nuw nsw i32 32, %425, !dbg !46
  %437 = shl i32 %429, %425, !dbg !46
  %438 = lshr i32 %433, %436, !dbg !46
  %439 = add i32 %438, %437, !dbg !46
  %440 = shl i32 %433, %425, !dbg !46
  %441 = sext i32 %435 to i64, !dbg !46
  %442 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %441, !dbg !46
  %443 = load i32, ptr %442, align 4, !dbg !46
  %444 = lshr i32 %443, %436, !dbg !46
  %445 = add i32 %444, %440, !dbg !46
  br label %__internal_trig_reduction_slowpath.exit.i.i.i126, !dbg !46

__internal_trig_reduction_slowpath.exit.i.i.i126: ; preds = %434, %423
  %hi.i.i.i.1.i127 = phi i32 [ %439, %434 ], [ %429, %423 ], !dbg !46
  %lo.i.i.i.0.i128 = phi i32 [ %445, %434 ], [ %433, %423 ], !dbg !46
  %446 = lshr i32 %hi.i.i.i.1.i127, 30, !dbg !46
  %447 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i127, i32 %lo.i.i.i.0.i128, i32 2), !dbg !46
  %448 = shl i32 %lo.i.i.i.0.i128, 2, !dbg !46
  %449 = lshr i32 %447, 31, !dbg !46
  %450 = add nuw nsw i32 %449, %446, !dbg !46
  %451 = sub nsw i32 0, %450, !dbg !46
  %.not2123.i129 = icmp slt i32 %409, 0, !dbg !46
  %spec.select.i130 = select i1 %.not2123.i129, i32 %451, i32 %450, !dbg !46
  %452 = xor i32 %447, %409, !dbg !46
  %.lobit.i131 = ashr i32 %447, 31, !dbg !46
  %hi.i.i.i.2.i132 = xor i32 %.lobit.i131, %447, !dbg !46
  %lo.i.i.i.1.i134 = xor i32 %.lobit.i131, %448, !dbg !46
  %453 = zext i32 %hi.i.i.i.2.i132 to i64, !dbg !46
  %454 = shl nuw i64 %453, 32, !dbg !46
  %455 = zext i32 %lo.i.i.i.1.i134 to i64, !dbg !46
  %456 = or disjoint i64 %454, %455, !dbg !46
  %457 = sitofp i64 %456 to double, !dbg !46
  %458 = fmul double %457, 0x3BF921FB54442D19, !dbg !46
  %459 = fptrunc double %458 to float, !dbg !46
  %460 = fneg float %459, !dbg !46
  %.not2526.i135 = icmp slt i32 %452, 0, !dbg !46
  %r.i.i.i.0.i136 = select i1 %.not2526.i135, float %460, float %459, !dbg !46
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !46

__internal_trig_reduction_kernel.exit.i.i137:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i126, %__nv_fmul_rn.exit.i.i.i160, %__nv_cosf.exit
  %i.i.1.i138 = phi i32 [ %.01.i111, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i160 ], [ %spec.select.i130, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !46
  %t.i.i.1.i139 = phi float [ %.04.i117, %__nv_cosf.exit ], [ %.08.i162, %__nv_fmul_rn.exit.i.i.i160 ], [ %r.i.i.i.0.i136, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !46
  %461 = add i32 %i.i.1.i138, 1, !dbg !46
  %462 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not28.i140 = icmp eq i32 %462, 0, !dbg !46
  %463 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !46
  %464 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !46
  %.011.i141 = select i1 %.not28.i140, float %464, float %463, !dbg !46
  %465 = and i32 %i.i.1.i138, 1, !dbg !46
  %.not29.not.i142 = icmp eq i32 %465, 0, !dbg !46
  %466 = select i1 %.not29.not.i142, float 1.000000e+00, float %t.i.i.1.i139, !dbg !46
  %467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not30.i143 = icmp eq i32 %467, 0, !dbg !46
  %468 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i141, float %466, float 0.000000e+00) #4, !dbg !46
  %469 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i141, float %466, float 0.000000e+00) #4, !dbg !46
  %.012.i144 = select i1 %.not30.i143, float %469, float %468, !dbg !46
  br i1 %.not29.not.i142, label %__internal_fmad.exit1.i.i.i157, label %__internal_fmad.exit2.i.i.i145, !dbg !46

__internal_fmad.exit1.i.i.i157:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i137
  %470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not31.i158 = icmp eq i32 %470, 0, !dbg !46
  %471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !46
  %472 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !46
  %.013.i159 = select i1 %.not31.i158, float %472, float %471, !dbg !46
  br label %__internal_fmad.exit2.i.i.i145, !dbg !46

__internal_fmad.exit2.i.i.i145:                   ; preds = %__internal_fmad.exit1.i.i.i157, %__internal_trig_reduction_kernel.exit.i.i137
  %473 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i157 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !46
  %474 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i157 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !46
  %475 = phi float [ %.013.i159, %__internal_fmad.exit1.i.i.i157 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !46
  %476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not32.i146 = icmp eq i32 %476, 0, !dbg !46
  %477 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %475, float %.011.i141, float %474) #4, !dbg !46
  %478 = tail call float @llvm.nvvm.fma.rn.f(float %475, float %.011.i141, float %474) #4, !dbg !46
  %.010.i147 = select i1 %.not32.i146, float %478, float %477, !dbg !46
  %479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not33.i148 = icmp eq i32 %479, 0, !dbg !46
  %480 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i147, float %.011.i141, float %473) #4, !dbg !46
  %481 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i147, float %.011.i141, float %473) #4, !dbg !46
  %.09.i149 = select i1 %.not33.i148, float %481, float %480, !dbg !46
  %482 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not34.i150 = icmp eq i32 %482, 0, !dbg !46
  %483 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i149, float %.012.i144, float %466) #4, !dbg !46
  %484 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i149, float %.012.i144, float %466) #4, !dbg !46
  %.05.i151 = select i1 %.not34.i150, float %484, float %483, !dbg !46
  %485 = and i32 %461, 2, !dbg !46
  %.not35.i152 = icmp eq i32 %485, 0, !dbg !46
  br i1 %.not35.i152, label %__nv_cosf.exit163, label %__internal_fmad.exit5.i.i.i153, !dbg !46

__internal_fmad.exit5.i.i.i153:                   ; preds = %__internal_fmad.exit2.i.i.i145
  %486 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !46
  %.not36.i154 = icmp eq i32 %486, 0, !dbg !46
  %487 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !46
  %488 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !46
  %.0.i155 = select i1 %.not36.i154, float %488, float %487, !dbg !46
  br label %__nv_cosf.exit163, !dbg !46

__nv_cosf.exit163:                                ; preds = %__internal_fmad.exit2.i.i.i145, %__internal_fmad.exit5.i.i.i153
  %z.i.i.0.i156 = phi float [ %.0.i155, %__internal_fmad.exit5.i.i.i153 ], [ %.05.i151, %__internal_fmad.exit2.i.i.i145 ], !dbg !46
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !46
  %489 = select i1 %16, float %z.i.i.0.i, float %z.i.i.0.i102, !dbg !49
  %490 = select i1 %16, float %z.i.i.0.i51, float %z.i.i.0.i156, !dbg !49
  %491 = sext i32 %10 to i64, !dbg !50
  %492 = getelementptr float, ptr addrspace(1) %2, i64 %491, !dbg !50
  %493 = bitcast float %489 to i32, !dbg !51
  %494 = bitcast float %490 to i32, !dbg !51
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %493, i32 %494, ptr addrspace(1) %492, i1 %12) #4, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjp5dqdkugbc4fuqditrgorkzppa7eh2wxg2szmpm4krjspcd7ym.py", directory: "inductor_cache/jp")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 32, scope: !7)
!19 = !DILocation(line: 32, column: 48, scope: !7)
!20 = !DILocation(line: 32, column: 53, scope: !7)
!21 = !DILocation(line: 32, column: 39, scope: !7)
!22 = !DILocation(line: 32, column: 30, scope: !7)
!23 = !DILocation(line: 32, column: 66, scope: !7)
!24 = !DILocation(line: 32, column: 59, scope: !7)
!25 = !DILocation(line: 33, column: 38, scope: !7)
!26 = !DILocation(line: 33, column: 31, scope: !7)
!27 = !DILocation(line: 33, column: 43, scope: !7)
!28 = !DILocation(line: 34, column: 18, scope: !7)
!29 = !DILocation(line: 35, column: 23, scope: !7)
!30 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!31 = distinct !{!31, !32}
!32 = !{!"llvm.loop.unroll.count", i32 1}
!33 = distinct !{!33, !32}
!34 = !DILocation(line: 38, column: 20, scope: !7)
!35 = !DILocation(line: 41, column: 50, scope: !7)
!36 = !DILocation(line: 41, column: 57, scope: !7)
!37 = !DILocation(line: 41, column: 62, scope: !7)
!38 = !DILocation(line: 41, column: 40, scope: !7)
!39 = !DILocation(line: 41, column: 31, scope: !7)
!40 = !DILocation(line: 41, column: 76, scope: !7)
!41 = !DILocation(line: 41, column: 68, scope: !7)
!42 = !DILocation(line: 42, column: 47, scope: !7)
!43 = !DILocation(line: 42, column: 32, scope: !7)
!44 = !DILocation(line: 42, column: 52, scope: !7)
!45 = !DILocation(line: 43, column: 20, scope: !7)
!46 = !DILocation(line: 44, column: 24, scope: !7)
!47 = distinct !{!47, !32}
!48 = distinct !{!48, !32}
!49 = !DILocation(line: 0, scope: !7)
!50 = !DILocation(line: 48, column: 25, scope: !7)
!51 = !DILocation(line: 48, column: 37, scope: !7)
!52 = !DILocation(line: 48, column: 4, scope: !7)
