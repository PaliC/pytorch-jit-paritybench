; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_abs_add_mean_mul_relu_sub_40(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %8 = and i32 %7, 3, !dbg !10
  %9 = zext nneg i32 %8 to i64, !dbg !11
  %10 = getelementptr float, ptr addrspace(1) %1, i64 %9, !dbg !11
  %11 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %10, i1 true) #3, !dbg !12
  %12 = bitcast i32 %11 to float, !dbg !12
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #3, !dbg !13
  %14 = bitcast i32 %13 to float, !dbg !13
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #3, !dbg !14
  %16 = bitcast i32 %15 to float, !dbg !14
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #3, !dbg !15
  %18 = bitcast i32 %17 to float, !dbg !15
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %4, i1 true) #3, !dbg !16
  %20 = bitcast i32 %19 to float, !dbg !16
  %21 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %11, i32 2, i32 31), !dbg !17
  %22 = bitcast i32 %21 to float, !dbg !17
  %23 = fadd float %12, %22, !dbg !21
  %24 = bitcast float %23 to i32, !dbg !17
  %25 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %24, i32 1, i32 31), !dbg !17
  %26 = bitcast i32 %25 to float, !dbg !17
  %27 = fadd float %23, %26, !dbg !21
  %28 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %14, float 0x4130000000000000) #3, !dbg !23
  %29 = fmul float %28, 3.125000e-02, !dbg !24
  %30 = fadd float %29, 0.000000e+00, !dbg !25
  %31 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %16, float 5.242880e+05) #3, !dbg !26
  %32 = fmul float %31, 6.250000e-02, !dbg !27
  %33 = fadd float %30, %32, !dbg !28
  %34 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %18, float 2.621440e+05) #3, !dbg !29
  %35 = fmul float %34, 1.250000e-01, !dbg !30
  %36 = fadd float %33, %35, !dbg !31
  %37 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %20, float 1.310720e+05) #3, !dbg !32
  %38 = fmul float %37, 2.500000e-01, !dbg !33
  %39 = fadd float %36, %38, !dbg !34
  %40 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %27, float 3.276800e+04) #3, !dbg !35
  %41 = fadd float %40, %39, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %42 = and i32 %7, 63, !dbg !38
  %43 = icmp eq i32 %42, 0, !dbg !38
  %44 = bitcast float %41 to i32, !dbg !38
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %44, ptr addrspace(1) %0, i1 %43) #3, !dbg !38
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py", directory: "inductor_cache/2v")
!4 = !{ptr @triton_per_fused_abs_add_mean_mul_relu_sub_40, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_abs_add_mean_mul_relu_sub_40, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_abs_add_mean_mul_relu_sub_40", linkageName: "triton_per_fused_abs_add_mean_mul_relu_sub_40", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 30, column: 30, scope: !7)
!12 = !DILocation(line: 30, column: 35, scope: !7)
!13 = !DILocation(line: 31, column: 19, scope: !7)
!14 = !DILocation(line: 33, column: 20, scope: !7)
!15 = !DILocation(line: 35, column: 20, scope: !7)
!16 = !DILocation(line: 37, column: 20, scope: !7)
!17 = !DILocation(line: 267, column: 36, scope: !18, inlinedAt: !20)
!18 = distinct !DILexicalBlockFile(scope: !7, file: !19, discriminator: 0)
!19 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!20 = !DILocation(line: 40, column: 24, scope: !7)
!21 = !DILocation(line: 256, column: 15, scope: !22, inlinedAt: !20)
!22 = distinct !DILexicalBlockFile(scope: !18, file: !19, discriminator: 0)
!23 = !DILocation(line: 42, column: 18, scope: !7)
!24 = !DILocation(line: 44, column: 18, scope: !7)
!25 = !DILocation(line: 46, column: 19, scope: !7)
!26 = !DILocation(line: 48, column: 20, scope: !7)
!27 = !DILocation(line: 50, column: 20, scope: !7)
!28 = !DILocation(line: 51, column: 20, scope: !7)
!29 = !DILocation(line: 53, column: 20, scope: !7)
!30 = !DILocation(line: 55, column: 20, scope: !7)
!31 = !DILocation(line: 56, column: 20, scope: !7)
!32 = !DILocation(line: 58, column: 20, scope: !7)
!33 = !DILocation(line: 60, column: 20, scope: !7)
!34 = !DILocation(line: 61, column: 20, scope: !7)
!35 = !DILocation(line: 63, column: 19, scope: !7)
!36 = !DILocation(line: 66, column: 20, scope: !7)
!37 = !DILocation(line: 67, column: 4, scope: !7)
!38 = !DILocation(line: 68, column: 71, scope: !7)
!39 = !DILocation(line: 68, column: 4, scope: !7)
