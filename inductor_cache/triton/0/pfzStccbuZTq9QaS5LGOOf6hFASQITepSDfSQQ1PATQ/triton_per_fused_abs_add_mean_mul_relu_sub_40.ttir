#loc = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":19:0)
#loc1 = loc(unknown)
#loc15 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":40:24)
#loc37 = loc(callsite(#loc1 at #loc15))
module {
  tt.func public @triton_per_fused_abs_add_mean_mul_relu_sub_40(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":19:0), %arg5: i32 loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 2.500000e-01 : f32 loc(#loc1)
    %cst_0 = arith.constant 1.310720e+05 : f32 loc(#loc1)
    %cst_1 = arith.constant 1.250000e-01 : f32 loc(#loc1)
    %cst_2 = arith.constant 2.621440e+05 : f32 loc(#loc1)
    %cst_3 = arith.constant 6.250000e-02 : f32 loc(#loc1)
    %cst_4 = arith.constant 5.242880e+05 : f32 loc(#loc1)
    %cst_5 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_6 = arith.constant 3.125000e-02 : f32 loc(#loc1)
    %cst_7 = arith.constant 0x49800000 : f32 loc(#loc1)
    %cst_8 = arith.constant dense<3.276800e+04> : tensor<1x1xf32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<4xi32> -> tensor<1x4xi32> loc(#loc3)
    %2 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>> loc(#loc4)
    %3 = tt.addptr %2, %1 : tensor<1x4x!tt.ptr<f32>>, tensor<1x4xi32> loc(#loc4)
    %4 = tt.load %3 : tensor<1x4x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc6)
    %6 = tt.load %5 : !tt.ptr<f32> loc(#loc7)
    %7 = tt.addptr %arg2, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc8)
    %8 = tt.load %7 : !tt.ptr<f32> loc(#loc9)
    %9 = tt.addptr %arg3, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc10)
    %10 = tt.load %9 : !tt.ptr<f32> loc(#loc11)
    %11 = tt.addptr %arg4, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc12)
    %12 = tt.load %11 : !tt.ptr<f32> loc(#loc13)
    %13 = "tt.reduce"(%4) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc15)), %arg7: f32 loc(callsite(#loc1 at #loc15))):
      %31 = arith.addf %arg6, %arg7 : f32 loc(#loc39)
      tt.reduce.return %31 : f32 loc(#loc36)
    }) : (tensor<1x4xf32>) -> tensor<1xf32> loc(#loc36)
    %14 = tt.expand_dims %13 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc17)
    %15 = arith.divf %6, %cst_7 : f32 loc(#loc18)
    %16 = arith.mulf %15, %cst_6 : f32 loc(#loc19)
    %17 = arith.addf %16, %cst_5 : f32 loc(#loc20)
    %18 = arith.divf %8, %cst_4 : f32 loc(#loc21)
    %19 = arith.mulf %18, %cst_3 : f32 loc(#loc22)
    %20 = arith.addf %17, %19 : f32 loc(#loc23)
    %21 = arith.divf %10, %cst_2 : f32 loc(#loc24)
    %22 = arith.mulf %21, %cst_1 : f32 loc(#loc25)
    %23 = arith.addf %20, %22 : f32 loc(#loc26)
    %24 = arith.divf %12, %cst_0 : f32 loc(#loc27)
    %25 = arith.mulf %24, %cst : f32 loc(#loc28)
    %26 = arith.addf %23, %25 : f32 loc(#loc29)
    %27 = tt.splat %26 : f32 -> tensor<1x1xf32> loc(#loc29)
    %28 = arith.divf %14, %cst_8 : tensor<1x1xf32> loc(#loc30)
    %29 = arith.addf %27, %28 : tensor<1x1xf32> loc(#loc31)
    gpu.barrier loc(#loc32)
    %30 = tt.splat %5 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc33)
    tt.store %30, %29 : tensor<1x1x!tt.ptr<f32>> loc(#loc34)
    tt.return loc(#loc35)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":26:26)
#loc3 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":26:34)
#loc4 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":30:30)
#loc5 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":30:35)
#loc6 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":31:34)
#loc7 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":31:19)
#loc8 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":33:31)
#loc9 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":33:20)
#loc10 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":35:31)
#loc11 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":35:20)
#loc12 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":37:31)
#loc13 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":37:20)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc17 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":40:27)
#loc18 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":42:18)
#loc19 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":44:18)
#loc20 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":46:19)
#loc21 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":48:20)
#loc22 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":50:20)
#loc23 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":51:20)
#loc24 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":53:20)
#loc25 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":55:20)
#loc26 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":56:20)
#loc27 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":58:20)
#loc28 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":60:20)
#loc29 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":61:20)
#loc30 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":63:19)
#loc31 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":66:20)
#loc32 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":67:4)
#loc33 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":68:28)
#loc34 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":68:71)
#loc35 = loc("inductor_cache/2v/c2vocbiwb52gvt4oxxnc7xscnmbdmhirrlbvgjpghbvp4ns2f7lw.py":68:4)
#loc36 = loc(callsite(#loc14 at #loc15))
#loc38 = loc(callsite(#loc16 at #loc14))
#loc39 = loc(callsite(#loc38 at #loc15))
