//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_add_mean_10 // -- Begin function triton_red_fused_add_mean_10
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_add_mean_10
.visible .entry triton_red_fused_add_mean_10(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mean_10_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mean_10_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mean_10_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mean_10_param_3,
	.param .u32 triton_red_fused_add_mean_10_param_4,
	.param .u32 triton_red_fused_add_mean_10_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<93>;
	.reg .f32 	%f<55>;
	.reg .b64 	%rd<15>;
	.loc	1 19 0                          // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_red_fused_add_mean_10_param_3];
	ld.param.u64 	%rd5, [triton_red_fused_add_mean_10_param_2];
	ld.param.u64 	%rd4, [triton_red_fused_add_mean_10_param_1];
	ld.param.u64 	%rd3, [triton_red_fused_add_mean_10_param_0];
$L__tmp0:
	.loc	1 22 28                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:22:28
	// begin inline asm
	mov.u32 %r7, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:22:33
	shl.b32 	%r1, %r7, 6;
	.loc	1 23 44                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:23:44
	mov.u32 	%r8, %tid.x;
	shl.b32 	%r9, %r8, 2;
	and.b32  	%r3, %r9, 60;
	.loc	1 23 23                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:23:23
	or.b32  	%r10, %r1, %r3;
	.loc	1 27 19                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:27:19
	bfe.s32 	%r11, %r7, 25, 1;
	shr.u32 	%r12, %r11, 25;
	add.s32 	%r13, %r10, %r12;
	shr.s32 	%r14, %r13, 7;
	.loc	1 30 36                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:30:36
	mad.lo.s32 	%r15, %r14, 16256, %r10;
	shl.b32 	%r16, %r8, 3;
	and.b32  	%r17, %r16, 896;
	add.s32 	%r92, %r15, %r17;
	mov.f32 	%f51, 0f00000000;
	mov.u64 	%rd14, -8;
	mov.pred 	%p1, -1;
	mov.f32 	%f52, %f51;
	mov.f32 	%f53, %f51;
	mov.f32 	%f54, %f51;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 34 34                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:34:34
	mul.wide.s32 	%rd11, %r92, 4;
	add.s64 	%rd8, %rd3, %rd11;
	mov.b32 	%r22, 0;
	.loc	1 34 59                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:34:59
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd8 + 0 ];
	@!%p1 mov.u32 %r18, %r22;
	@!%p1 mov.u32 %r19, %r22;
	@!%p1 mov.u32 %r20, %r22;
	@!%p1 mov.u32 %r21, %r22;
	// end inline asm
	.loc	1 35 34                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:35:34
	add.s64 	%rd9, %rd4, %rd11;
	.loc	1 35 59                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:35:59
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd9 + 0 ];
	@!%p1 mov.u32 %r26, %r22;
	@!%p1 mov.u32 %r27, %r22;
	@!%p1 mov.u32 %r28, %r22;
	@!%p1 mov.u32 %r29, %r22;
	// end inline asm
	.loc	1 36 34                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:36:34
	add.s64 	%rd10, %rd5, %rd11;
	.loc	1 36 59                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:36:59
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd10 + 0 ];
	@!%p1 mov.u32 %r34, %r22;
	@!%p1 mov.u32 %r35, %r22;
	@!%p1 mov.u32 %r36, %r22;
	@!%p1 mov.u32 %r37, %r22;
	// end inline asm
	.loc	1 34 59                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:34:59
	mov.b32 	%f13, %r18;
	mov.b32 	%f14, %r19;
	mov.b32 	%f15, %r20;
	mov.b32 	%f16, %r21;
	.loc	1 35 59                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:35:59
	mov.b32 	%f17, %r26;
	mov.b32 	%f18, %r27;
	mov.b32 	%f19, %r28;
	mov.b32 	%f20, %r29;
	.loc	1 36 59                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:36:59
	mov.b32 	%f21, %r37;
	mov.b32 	%f22, %r36;
	mov.b32 	%f23, %r35;
	mov.b32 	%f24, %r34;
	.loc	1 37 22                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:37:22
	add.f32 	%f25, %f16, %f20;
	add.f32 	%f26, %f15, %f19;
	add.f32 	%f27, %f14, %f18;
	add.f32 	%f28, %f13, %f17;
	.loc	1 38 22                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:38:22
	add.f32 	%f29, %f28, %f24;
	add.f32 	%f30, %f27, %f23;
	add.f32 	%f31, %f26, %f22;
	add.f32 	%f32, %f25, %f21;
	.loc	1 40 23                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:40:23
	add.f32 	%f54, %f54, %f32;
	add.f32 	%f53, %f53, %f31;
	add.f32 	%f52, %f52, %f30;
	add.f32 	%f51, %f51, %f29;
	.loc	1 30 36                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:30:36
	add.s64 	%rd14, %rd14, 8;
	add.s32 	%r92, %r92, 1024;
	setp.lt.u64 	%p16, %rd14, 120;
	@%p16 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 23 44                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:23:44
	and.b32  	%r64, %r8, 63;
	.loc	1 23 23                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:23:23
	or.b32  	%r65, %r1, %r64;
	.loc	1 23 44                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:23:44
	and.b32  	%r66, %r8, 16;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f51;
	shfl.sync.bfly.b32	%r68, %r67, 16, 31, -1;
	mov.b32 	%f33, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f51, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f52;
	shfl.sync.bfly.b32	%r70, %r69, 16, 31, -1;
	mov.b32 	%f35, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f52, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f53;
	shfl.sync.bfly.b32	%r72, %r71, 16, 31, -1;
	mov.b32 	%f37, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f53, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f54;
	shfl.sync.bfly.b32	%r74, %r73, 16, 31, -1;
	mov.b32 	%f39, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f54, %f39;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p17, %r66, 0;
	shr.u32 	%r75, %r8, 3;
	and.b32  	%r76, %r75, 12;
	shl.b32 	%r77, %r3, 4;
	or.b32  	%r78, %r77, %r76;
	mov.u32 	%r79, global_smem;
	add.s32 	%r42, %r79, %r78;
	mov.b32 	%r43, %f34;
	// begin inline asm
	@%p17 st.shared.b32 [ %r42 + 0 ], %r43;
	// end inline asm
	add.s32 	%r44, %r42, 16;
	mov.b32 	%r45, %f36;
	// begin inline asm
	@%p17 st.shared.b32 [ %r44 + 0 ], %r45;
	// end inline asm
	add.s32 	%r46, %r42, 32;
	mov.b32 	%r47, %f38;
	// begin inline asm
	@%p17 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r48, %r42, 48;
	mov.b32 	%r49, %f40;
	// begin inline asm
	@%p17 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p21, %r8, 256;
	add.s32 	%r51, %r79, %r9;
	// begin inline asm
	@%p21 ld.shared.b32 %r50, [ %r51 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r50;
	shfl.sync.bfly.b32	%r81, %r50, 2, 31, -1;
	mov.b32 	%f42, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f43;
	shfl.sync.bfly.b32	%r83, %r82, 1, 31, -1;
	mov.b32 	%f44, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r84, %r8, 3;
	setp.eq.s32 	%p27, %r84, 0;
	and.pred  	%p22, %p21, %p27;
	mov.b32 	%r53, %f45;
	// begin inline asm
	@%p22 st.shared.b32 [ %r51 + 0 ], %r53;
	// end inline asm
	add.s32 	%r55, %r51, 512;
	// begin inline asm
	@%p21 ld.shared.b32 %r54, [ %r55 + 0 ];
	// end inline asm
	mov.b32 	%f46, %r54;
	shfl.sync.bfly.b32	%r85, %r54, 2, 31, -1;
	mov.b32 	%f47, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f48;
	shfl.sync.bfly.b32	%r87, %r86, 1, 31, -1;
	mov.b32 	%f49, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f50;
	// begin inline asm
	@%p22 st.shared.b32 [ %r55 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r88, %r79, %r77;
	ld.shared.u32 	%r59, [%r88];
	ld.shared.u32 	%r60, [%r88+16];
	ld.shared.u32 	%r61, [%r88+32];
	ld.shared.u32 	%r62, [%r88+48];
$L__tmp2:
	.loc	1 42 28                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:42:28
	bar.sync 	0;
	mad.lo.s32 	%r58, %r3, -12, %r88;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r58 + 0 ], { %r59, %r60, %r61, %r62 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r89, %r64, 2;
	add.s32 	%r90, %r79, %r89;
	ld.shared.u32 	%r63, [%r90];
	.loc	1 43 25                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:43:25
	mul.wide.s32 	%rd13, %r65, 4;
	add.s64 	%rd12, %rd6, %rd13;
	.loc	1 43 36                         // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:43:36
	and.b32  	%r91, %r8, 64;
	setp.eq.s32 	%p26, %r91, 0;
	// begin inline asm
	@%p26 st.global.b32 [ %rd12 + 0 ], { %r63 };
	// end inline asm
	.loc	1 43 4                          // cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py:43:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/b7/cb7jma3alaeotyt3a3g66btyqt356jeoe2t7oqgyven4dqjex3mp.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 173                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 55
.b8 106
.b8 109
.b8 97
.b8 51
.b8 97
.b8 108
.b8 97
.b8 101
.b8 111
.b8 116
.b8 121
.b8 116
.b8 51
.b8 97
.b8 51
.b8 103
.b8 54
.b8 54
.b8 98
.b8 116
.b8 121
.b8 113
.b8 116
.b8 51
.b8 53
.b8 54
.b8 106
.b8 101
.b8 111
.b8 101
.b8 50
.b8 116
.b8 55
.b8 111
.b8 113
.b8 103
.b8 121
.b8 118
.b8 101
.b8 110
.b8 52
.b8 100
.b8 113
.b8 106
.b8 101
.b8 120
.b8 51
.b8 109
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 55
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 49
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x82:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x97:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
