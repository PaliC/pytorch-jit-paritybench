; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused__log_softmax_clamp_div_mean_mul_neg_sum_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = and i32 %5, 31, !dbg !10
  %7 = lshr i32 %5, 5, !dbg !10
  %8 = shl i32 %5, 2, !dbg !11
  %9 = and i32 %8, 60, !dbg !11
  %10 = zext nneg i32 %9 to i64, !dbg !12
  %11 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !12
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #3, !dbg !13
  %13 = bitcast i32 %12 to float, !dbg !13
  %14 = and i32 %8, 252, !dbg !14
  %15 = zext nneg i32 %14 to i64, !dbg !15
  %16 = getelementptr float, ptr addrspace(1) %2, i64 %15, !dbg !15
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 true) #3, !dbg !16
  %18 = bitcast i32 %17 to float, !dbg !16
  %19 = or disjoint i32 %9, 1, !dbg !17
  %20 = zext nneg i32 %19 to i64, !dbg !18
  %21 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !18
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 true) #3, !dbg !19
  %23 = bitcast i32 %22 to float, !dbg !19
  %24 = or disjoint i32 %14, 1, !dbg !20
  %25 = zext nneg i32 %24 to i64, !dbg !21
  %26 = getelementptr float, ptr addrspace(1) %2, i64 %25, !dbg !21
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #3, !dbg !22
  %28 = bitcast i32 %27 to float, !dbg !22
  %29 = or disjoint i32 %9, 2, !dbg !23
  %30 = zext nneg i32 %29 to i64, !dbg !24
  %31 = getelementptr float, ptr addrspace(1) %1, i64 %30, !dbg !24
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #3, !dbg !25
  %33 = bitcast i32 %32 to float, !dbg !25
  %34 = or disjoint i32 %14, 2, !dbg !26
  %35 = zext nneg i32 %34 to i64, !dbg !27
  %36 = getelementptr float, ptr addrspace(1) %2, i64 %35, !dbg !27
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 true) #3, !dbg !28
  %38 = bitcast i32 %37 to float, !dbg !28
  %39 = or disjoint i32 %9, 3, !dbg !29
  %40 = zext nneg i32 %39 to i64, !dbg !30
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !30
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 true) #3, !dbg !31
  %43 = bitcast i32 %42 to float, !dbg !31
  %44 = or disjoint i32 %14, 3, !dbg !32
  %45 = zext nneg i32 %44 to i64, !dbg !33
  %46 = getelementptr float, ptr addrspace(1) %2, i64 %45, !dbg !33
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #3, !dbg !34
  %48 = bitcast i32 %47 to float, !dbg !34
  %49 = fmul float %13, %18, !dbg !35
  %50 = fmul float %23, %28, !dbg !36
  %51 = fadd float %49, %50, !dbg !37
  %52 = fmul float %33, %38, !dbg !38
  %53 = fadd float %51, %52, !dbg !39
  %54 = fmul float %43, %48, !dbg !40
  %55 = fadd float %53, %54, !dbg !41
  %56 = fadd float %18, %28, !dbg !42
  %57 = fadd float %56, %38, !dbg !43
  %58 = fadd float %57, %48, !dbg !44
  %59 = fcmp ogt float %58, 1.000000e+00, !dbg !45
  %60 = fcmp uno float %58, 0.000000e+00, !dbg !49
  %61 = or i1 %59, %60, !dbg !50
  %62 = select i1 %61, float %58, float 1.000000e+00, !dbg !51
  %63 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %55, float %62) #3, !dbg !52
  %64 = bitcast float %63 to i32, !dbg !53
  %65 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %64, i32 16, i32 31), !dbg !53
  %66 = bitcast i32 %65 to float, !dbg !53
  %67 = fadd float %63, %66, !dbg !57
  %68 = bitcast float %67 to i32, !dbg !53
  %69 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %68, i32 8, i32 31), !dbg !53
  %70 = bitcast i32 %69 to float, !dbg !53
  %71 = fadd float %67, %70, !dbg !57
  %72 = bitcast float %71 to i32, !dbg !53
  %73 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %72, i32 4, i32 31), !dbg !53
  %74 = bitcast i32 %73 to float, !dbg !53
  %75 = fadd float %71, %74, !dbg !57
  %76 = bitcast float %75 to i32, !dbg !53
  %77 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %76, i32 2, i32 31), !dbg !53
  %78 = bitcast i32 %77 to float, !dbg !53
  %79 = fadd float %75, %78, !dbg !57
  %80 = bitcast float %79 to i32, !dbg !53
  %81 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %80, i32 1, i32 31), !dbg !53
  %82 = bitcast i32 %81 to float, !dbg !53
  %83 = fadd float %79, %82, !dbg !57
  %84 = icmp eq i32 %6, 0, !dbg !53
  %85 = and i32 %7, 1, !dbg !53
  %86 = getelementptr float, ptr addrspace(3) @global_smem, i32 %85, !dbg !53
  %87 = bitcast float %83 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %86, <1 x i32> %87, i1 %84) #3, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %88 = icmp slt i32 %5, 2, !dbg !53
  %89 = getelementptr float, ptr addrspace(3) @global_smem, i32 %5, !dbg !53
  %90 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %89, i1 %88) #3, !dbg !53
  %91 = bitcast i32 %90 to float, !dbg !53
  %92 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %90, i32 1, i32 31), !dbg !53
  %93 = bitcast i32 %92 to float, !dbg !53
  %94 = fadd float %91, %93, !dbg !57
  %95 = and i32 %5, 1, !dbg !53
  %96 = icmp eq i32 %95, 0, !dbg !53
  %97 = and i1 %88, %96, !dbg !53
  %98 = bitcast float %94 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %89, <1 x i32> %98, i1 %97) #3, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %99 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !53
  %100 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %99, float 6.400000e+01) #3, !dbg !59
  %101 = fsub float 0.000000e+00, %100, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %urem = and i32 %5, 63, !dbg !62
  %102 = icmp eq i32 %urem, 0, !dbg !62
  %103 = bitcast float %101 to i32, !dbg !62
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %103, ptr addrspace(1) %0, i1 %102) #3, !dbg !62
  ret void, !dbg !63
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ckis6pt2wct2kmbgjf37wr2a4ndpfih23kgukxyjs52s2xpwha5l.py", directory: "inductor_cache/ki")
!4 = !{ptr @triton_per_fused__log_softmax_clamp_div_mean_mul_neg_sum_2, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__log_softmax_clamp_div_mean_mul_neg_sum_2, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__log_softmax_clamp_div_mean_mul_neg_sum_2", linkageName: "triton_per_fused__log_softmax_clamp_div_mean_mul_neg_sum_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 31, column: 32, scope: !7)
!12 = !DILocation(line: 31, column: 30, scope: !7)
!13 = !DILocation(line: 31, column: 37, scope: !7)
!14 = !DILocation(line: 32, column: 32, scope: !7)
!15 = !DILocation(line: 32, column: 30, scope: !7)
!16 = !DILocation(line: 32, column: 37, scope: !7)
!17 = !DILocation(line: 33, column: 34, scope: !7)
!18 = !DILocation(line: 33, column: 30, scope: !7)
!19 = !DILocation(line: 33, column: 41, scope: !7)
!20 = !DILocation(line: 34, column: 34, scope: !7)
!21 = !DILocation(line: 34, column: 30, scope: !7)
!22 = !DILocation(line: 34, column: 41, scope: !7)
!23 = !DILocation(line: 35, column: 34, scope: !7)
!24 = !DILocation(line: 35, column: 30, scope: !7)
!25 = !DILocation(line: 35, column: 41, scope: !7)
!26 = !DILocation(line: 36, column: 34, scope: !7)
!27 = !DILocation(line: 36, column: 30, scope: !7)
!28 = !DILocation(line: 36, column: 41, scope: !7)
!29 = !DILocation(line: 37, column: 35, scope: !7)
!30 = !DILocation(line: 37, column: 31, scope: !7)
!31 = !DILocation(line: 37, column: 42, scope: !7)
!32 = !DILocation(line: 38, column: 35, scope: !7)
!33 = !DILocation(line: 38, column: 31, scope: !7)
!34 = !DILocation(line: 38, column: 42, scope: !7)
!35 = !DILocation(line: 39, column: 18, scope: !7)
!36 = !DILocation(line: 40, column: 18, scope: !7)
!37 = !DILocation(line: 41, column: 18, scope: !7)
!38 = !DILocation(line: 42, column: 18, scope: !7)
!39 = !DILocation(line: 43, column: 19, scope: !7)
!40 = !DILocation(line: 44, column: 20, scope: !7)
!41 = !DILocation(line: 45, column: 20, scope: !7)
!42 = !DILocation(line: 46, column: 19, scope: !7)
!43 = !DILocation(line: 47, column: 20, scope: !7)
!44 = !DILocation(line: 48, column: 20, scope: !7)
!45 = !DILocation(line: 118, column: 15, scope: !46, inlinedAt: !48)
!46 = distinct !DILexicalBlockFile(scope: !7, file: !47, discriminator: 0)
!47 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!48 = !DILocation(line: 50, column: 42, scope: !7)
!49 = !DILocation(line: 120, column: 21, scope: !46, inlinedAt: !48)
!50 = !DILocation(line: 120, column: 16, scope: !46, inlinedAt: !48)
!51 = !DILocation(line: 121, column: 29, scope: !46, inlinedAt: !48)
!52 = !DILocation(line: 51, column: 20, scope: !7)
!53 = !DILocation(line: 267, column: 36, scope: !54, inlinedAt: !56)
!54 = distinct !DILexicalBlockFile(scope: !7, file: !55, discriminator: 0)
!55 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!56 = !DILocation(line: 53, column: 26, scope: !7)
!57 = !DILocation(line: 256, column: 15, scope: !58, inlinedAt: !56)
!58 = distinct !DILexicalBlockFile(scope: !54, file: !55, discriminator: 0)
!59 = !DILocation(line: 55, column: 20, scope: !7)
!60 = !DILocation(line: 56, column: 13, scope: !7)
!61 = !DILocation(line: 57, column: 4, scope: !7)
!62 = !DILocation(line: 58, column: 71, scope: !7)
!63 = !DILocation(line: 58, column: 4, scope: !7)
