#loc = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<8192> : tensor<1024xi32> loc(#loc1)
    %cst_0 = arith.constant dense<-126> : tensor<1024xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1024xf32> loc(#loc1)
    %cst_2 = arith.constant dense<516096> : tensor<1024xi32> loc(#loc1)
    %cst_3 = arith.constant dense<126> : tensor<1024xi64> loc(#loc1)
    %cst_4 = arith.constant dense<524288> : tensor<1024xi32> loc(#loc1)
    %cst_5 = arith.constant dense<128> : tensor<1024xi32> loc(#loc1)
    %cst_6 = arith.constant dense<4096> : tensor<1024xi32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<1024xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<1024xi32> loc(#loc5)
    %5 = arith.divsi %4, %cst_6 : tensor<1024xi32> loc(#loc6)
    %6 = arith.remsi %5, %cst_5 : tensor<1024xi32> loc(#loc7)
    %7 = arith.remsi %4, %cst_6 : tensor<1024xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_4 : tensor<1024xi32> loc(#loc9)
    %9 = arith.extsi %6 : tensor<1024xi32> to tensor<1024xi64> loc(#loc10)
    %10 = arith.cmpi slt, %9, %cst_3 : tensor<1024xi64> loc(#loc10)
    %11 = arith.muli %6, %cst_6 : tensor<1024xi32> loc(#loc11)
    %12 = arith.addi %7, %11 : tensor<1024xi32> loc(#loc12)
    %13 = arith.muli %8, %cst_2 : tensor<1024xi32> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<1024xi32> loc(#loc14)
    %15 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc15)
    %16 = tt.addptr %15, %14 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc15)
    %17 = tt.load %16, %10, %cst_1 : tensor<1024x!tt.ptr<f32>> loc(#loc16)
    %18 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc17)
    %19 = tt.addptr %18, %6 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc17)
    %20 = tt.load %19, %10, %cst_1 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc18)
    %21 = arith.addf %17, %20 : tensor<1024xf32> loc(#loc19)
    %22 = arith.cmpf ogt, %cst_1, %21 : tensor<1024xf32> loc(#loc36)
    %23 = arith.select %22, %cst_1, %21 : tensor<1024xi1>, tensor<1024xf32> loc(#loc37)
    %24 = arith.cmpi sge, %9, %cst_3 : tensor<1024xi64> loc(#loc23)
    %25 = arith.addi %6, %cst_0 : tensor<1024xi32> loc(#loc24)
    %26 = arith.muli %25, %cst_6 : tensor<1024xi32> loc(#loc25)
    %27 = arith.addi %7, %26 : tensor<1024xi32> loc(#loc26)
    %28 = arith.muli %8, %cst : tensor<1024xi32> loc(#loc27)
    %29 = arith.addi %27, %28 : tensor<1024xi32> loc(#loc28)
    %30 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc29)
    %31 = tt.addptr %30, %29 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc29)
    %32 = tt.load %31, %24, %cst_1 : tensor<1024x!tt.ptr<f32>> loc(#loc30)
    %33 = arith.select %10, %23, %32 : tensor<1024xi1>, tensor<1024xf32> loc(#loc38)
    %34 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc33)
    %35 = tt.addptr %34, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc33)
    tt.store %35, %33 : tensor<1024x!tt.ptr<f32>> loc(#loc34)
    tt.return loc(#loc35)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":21:28)
#loc3 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":21:33)
#loc4 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":22:36)
#loc5 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":22:23)
#loc6 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":24:21)
#loc7 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":24:29)
#loc8 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":25:19)
#loc9 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":26:19)
#loc10 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":32:18)
#loc11 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":33:41)
#loc12 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":33:35)
#loc13 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":33:54)
#loc14 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":33:47)
#loc15 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":33:30)
#loc16 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":33:59)
#loc17 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":34:30)
#loc18 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":34:35)
#loc19 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":35:18)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc21 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":37:40)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc23 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":40:20)
#loc24 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":43:51)
#loc25 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":43:42)
#loc26 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":43:36)
#loc27 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":43:62)
#loc28 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":43:57)
#loc29 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":43:31)
#loc30 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":43:67)
#loc31 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":44:34)
#loc32 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":39:33)
#loc33 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":45:25)
#loc34 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":45:37)
#loc35 = loc("inductor_cache/lf/clfgkeqszlpn3weds2zqqx2kadhyosuhcvd7xpiqqdzmwp7so73q.py":45:4)
#loc36 = loc(callsite(#loc20 at #loc21))
#loc37 = loc(callsite(#loc22 at #loc21))
#loc38 = loc(fused[#loc31, #loc32])
