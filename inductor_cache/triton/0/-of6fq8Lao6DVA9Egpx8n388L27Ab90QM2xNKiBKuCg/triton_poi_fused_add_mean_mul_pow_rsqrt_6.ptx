//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mean_mul_pow_rsqrt_6 // -- Begin function triton_poi_fused_add_mean_mul_pow_rsqrt_6
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_mean_mul_pow_rsqrt_6
.visible .entry triton_poi_fused_add_mean_mul_pow_rsqrt_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_pow_rsqrt_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_pow_rsqrt_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_pow_rsqrt_6_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_pow_rsqrt_6_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_pow_rsqrt_6_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_pow_rsqrt_6_param_5,
	.param .u32 triton_poi_fused_add_mean_mul_pow_rsqrt_6_param_6
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<52>;
	.reg .f32 	%f<37>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd13, [triton_poi_fused_add_mean_mul_pow_rsqrt_6_param_0];
	ld.param.u64 	%rd14, [triton_poi_fused_add_mean_mul_pow_rsqrt_6_param_1];
$L__tmp0:
	.loc	1 21 28                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:21:33
	shl.b32 	%r28, %r1, 6;
	ld.param.u64 	%rd15, [triton_poi_fused_add_mean_mul_pow_rsqrt_6_param_2];
	ld.param.u64 	%rd16, [triton_poi_fused_add_mean_mul_pow_rsqrt_6_param_3];
	.loc	1 22 36                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:22:36
	mov.u32 	%r29, %tid.x;
	shl.b32 	%r30, %r29, 1;
	ld.param.u64 	%rd17, [triton_poi_fused_add_mean_mul_pow_rsqrt_6_param_4];
	and.b32  	%r31, %r30, 62;
	ld.param.u64 	%rd18, [triton_poi_fused_add_mean_mul_pow_rsqrt_6_param_5];
	.loc	1 22 23                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:22:23
	or.b32  	%r32, %r28, %r31;
	.loc	1 23 21                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:23:21
	setp.lt.s32 	%p1, %r32, 64;
	.loc	1 27 21                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:27:21
	shr.s32 	%r34, %r32, 31;
	shr.u32 	%r35, %r34, 30;
	add.s32 	%r36, %r32, %r35;
	shr.s32 	%r37, %r36, 2;
	.loc	1 25 19                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:25:19
	and.b32  	%r38, %r36, -4;
	sub.s32 	%r39, %r32, %r38;
	.loc	1 26 19                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:26:19
	shr.u32 	%r40, %r34, 28;
	add.s32 	%r41, %r32, %r40;
	.loc	1 27 26                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:27:26
	shr.u32 	%r42, %r37, 30;
	add.s32 	%r43, %r37, %r42;
	and.b32  	%r44, %r43, -4;
	sub.s32 	%r45, %r37, %r44;
	.loc	1 28 19                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:28:19
	and.b32  	%r46, %r41, -16;
	sub.s32 	%r47, %r32, %r46;
	.loc	1 29 30                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:29:30
	mul.wide.s32 	%rd19, %r32, 4;
	add.s64 	%rd1, %rd13, %rd19;
	.loc	1 29 35                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:29:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 30 35                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:30:35
	add.s32 	%r48, %r46, %r39;
	.loc	1 30 30                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:30:30
	mul.wide.s32 	%rd20, %r48, 4;
	add.s64 	%rd2, %rd13, %rd20;
	.loc	1 30 43                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:30:43
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r4;
	mov.b32 	%f2, %r5;
	.loc	1 31 39                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:31:39
	add.s32 	%r49, %r48, 4;
	.loc	1 31 30                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:31:30
	mul.wide.s32 	%rd21, %r49, 4;
	add.s64 	%rd3, %rd13, %rd21;
	.loc	1 31 47                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:31:47
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r6;
	mov.b32 	%f4, %r7;
	.loc	1 32 39                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:32:39
	add.s32 	%r50, %r48, 8;
	.loc	1 32 30                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:32:30
	mul.wide.s32 	%rd22, %r50, 4;
	add.s64 	%rd4, %rd13, %rd22;
	.loc	1 32 47                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:32:47
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r8;
	mov.b32 	%f6, %r9;
	.loc	1 33 40                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:33:40
	add.s32 	%r51, %r48, 12;
	.loc	1 33 30                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:33:30
	mul.wide.s32 	%rd23, %r51, 4;
	add.s64 	%rd5, %rd13, %rd23;
	.loc	1 33 48                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:33:48
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r10;
	mov.b32 	%f8, %r11;
	.loc	1 34 31                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:34:31
	mul.wide.s32 	%rd24, %r45, 4;
	add.s64 	%rd6, %rd14, %rd24;
	.loc	1 34 36                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:34:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 35 31                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:35:31
	add.s64 	%rd8, %rd15, %rd24;
	.loc	1 35 36                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:35:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 36 31                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:36:31
	mul.wide.s32 	%rd25, %r47, 4;
	add.s64 	%rd10, %rd16, %rd25;
	.loc	1 36 36                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:36:36
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r16, %r17 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 38 18                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:38:18
	mul.f32 	%f9, %f3, %f3;
	mul.f32 	%f10, %f4, %f4;
	.loc	1 39 18                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:39:18
	fma.rn.f32 	%f11, %f1, %f1, %f9;
	fma.rn.f32 	%f12, %f2, %f2, %f10;
	.loc	1 41 18                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:41:18
	fma.rn.f32 	%f13, %f5, %f5, %f11;
	fma.rn.f32 	%f14, %f6, %f6, %f12;
	.loc	1 43 19                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:43:19
	fma.rn.f32 	%f15, %f7, %f7, %f13;
	fma.rn.f32 	%f16, %f8, %f8, %f14;
	.loc	1 45 20                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:45:20
	mov.b32 	%r19, %f15;
	mov.b32 	%r20, 1082130432;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f17, %r18;
	mov.b32 	%r22, %f16;
	// begin inline asm
	div.full.f32 %r21, %r22, %r20;
	// end inline asm
	mov.b32 	%f18, %r21;
	.loc	1 47 20                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:47:20
	add.f32 	%f19, %f17, 0f38D1B717;
	add.f32 	%f20, %f18, 0f38D1B717;
	.loc	1 48 28                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:48:28
	rsqrt.approx.ftz.f32 	%f21, %f19;
	rsqrt.approx.ftz.f32 	%f22, %f20;
	.loc	1 36 36                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:36:36
	mov.b32 	%f23, %r17;
	mov.b32 	%f24, %r16;
	.loc	1 35 36                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:35:36
	mov.b32 	%f25, %r15;
	mov.b32 	%f26, %r14;
	.loc	1 34 36                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:34:36
	mov.b32 	%f27, %r13;
	mov.b32 	%f28, %r12;
	.loc	1 29 35                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:29:35
	mov.b32 	%f29, %r3;
	mov.b32 	%f30, %r2;
	.loc	1 49 19                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:49:19
	mul.f32 	%f31, %f21, %f30;
	mul.f32 	%f32, %f22, %f29;
	.loc	1 51 20                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:51:20
	fma.rn.f32 	%f33, %f31, %f28, %f26;
	fma.rn.f32 	%f34, %f32, %f27, %f25;
	.loc	1 52 20                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:52:20
	mul.f32 	%f35, %f33, %f24;
	mul.f32 	%f36, %f34, %f23;
	.loc	1 53 25                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:53:25
	add.s64 	%rd11, %rd17, %rd19;
	.loc	1 53 37                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:53:37
	mov.b32 	%r24, %f33;
	mov.b32 	%r25, %f34;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd11 + 0 ], { %r24, %r25 };
	// end inline asm
	.loc	1 54 25                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:54:25
	add.s64 	%rd12, %rd18, %rd19;
	.loc	1 54 37                         // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:54:37
	mov.b32 	%r26, %f35;
	mov.b32 	%r27, %f36;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd12 + 0 ], { %r26, %r27 };
	// end inline asm
	.loc	1 54 4                          // c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py:54:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/3b/c3bae6m46l2n3sxkzrqhcjuqnazapmggaw5xgdr746x7eguedeop.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 98
.b8 97
.b8 101
.b8 54
.b8 109
.b8 52
.b8 54
.b8 108
.b8 50
.b8 110
.b8 51
.b8 115
.b8 120
.b8 107
.b8 122
.b8 114
.b8 113
.b8 104
.b8 99
.b8 106
.b8 117
.b8 113
.b8 110
.b8 97
.b8 122
.b8 97
.b8 112
.b8 109
.b8 103
.b8 103
.b8 97
.b8 119
.b8 53
.b8 120
.b8 103
.b8 100
.b8 114
.b8 55
.b8 52
.b8 54
.b8 120
.b8 55
.b8 101
.b8 103
.b8 117
.b8 101
.b8 100
.b8 101
.b8 111
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 98
.b8 0
	}
	.section	.debug_macinfo	{	}
