; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__softmax_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 80, !dbg !14
  %11 = mul i32 %9, 5, !dbg !15
  %12 = sext i32 %11 to i64, !dbg !16
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !16
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %13, i1 %10) #1, !dbg !17
  %15 = bitcast i32 %14 to float, !dbg !17
  %16 = add i32 %11, 1, !dbg !18
  %17 = sext i32 %16 to i64, !dbg !19
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 %10) #1, !dbg !20
  %20 = bitcast i32 %19 to float, !dbg !20
  %21 = add i32 %11, 2, !dbg !21
  %22 = sext i32 %21 to i64, !dbg !22
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !22
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %10) #1, !dbg !23
  %25 = bitcast i32 %24 to float, !dbg !23
  %26 = add i32 %11, 3, !dbg !24
  %27 = sext i32 %26 to i64, !dbg !25
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !25
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %10) #1, !dbg !26
  %30 = bitcast i32 %29 to float, !dbg !26
  %31 = add i32 %11, 4, !dbg !27
  %32 = sext i32 %31 to i64, !dbg !28
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !28
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %10) #1, !dbg !29
  %35 = bitcast i32 %34 to float, !dbg !29
  %36 = fcmp ogt float %15, %20, !dbg !30
  %37 = fcmp uno float %15, 0.000000e+00, !dbg !34
  %38 = or i1 %37, %36, !dbg !35
  %39 = select i1 %38, float %15, float %20, !dbg !36
  %40 = fcmp ogt float %39, %25, !dbg !37
  %41 = fcmp uno float %39, 0.000000e+00, !dbg !39
  %42 = or i1 %40, %41, !dbg !40
  %43 = select i1 %42, float %39, float %25, !dbg !41
  %44 = fcmp ogt float %43, %30, !dbg !42
  %45 = fcmp uno float %43, 0.000000e+00, !dbg !44
  %46 = or i1 %44, %45, !dbg !45
  %47 = select i1 %46, float %43, float %30, !dbg !46
  %48 = fcmp ogt float %47, %35, !dbg !47
  %49 = fcmp uno float %47, 0.000000e+00, !dbg !49
  %50 = or i1 %48, %49, !dbg !50
  %51 = select i1 %50, float %47, float %35, !dbg !51
  %52 = fsub float %15, %51, !dbg !52
  %53 = fmul float %52, 0x3FF7154760000000, !dbg !53
  %54 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %53) #1, !dbg !53
  %55 = fsub float %20, %51, !dbg !54
  %56 = fmul float %55, 0x3FF7154760000000, !dbg !55
  %57 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %56) #1, !dbg !55
  %58 = fadd float %54, %57, !dbg !56
  %59 = fsub float %25, %51, !dbg !57
  %60 = fmul float %59, 0x3FF7154760000000, !dbg !58
  %61 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %60) #1, !dbg !58
  %62 = fadd float %58, %61, !dbg !59
  %63 = fsub float %30, %51, !dbg !60
  %64 = fmul float %63, 0x3FF7154760000000, !dbg !61
  %65 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %64) #1, !dbg !61
  %66 = fadd float %62, %65, !dbg !62
  %67 = fsub float %35, %51, !dbg !63
  %68 = fmul float %67, 0x3FF7154760000000, !dbg !64
  %69 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %68) #1, !dbg !64
  %70 = fadd float %66, %69, !dbg !65
  %71 = sext i32 %9 to i64, !dbg !66
  %72 = getelementptr float, ptr addrspace(1) %1, i64 %71, !dbg !66
  %73 = bitcast float %51 to i32, !dbg !67
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %73, ptr addrspace(1) %72, i1 %10) #1, !dbg !67
  %74 = getelementptr float, ptr addrspace(1) %2, i64 %71, !dbg !68
  %75 = bitcast float %70 to i32, !dbg !69
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %75, ptr addrspace(1) %74, i1 %10) #1, !dbg !69
  ret void, !dbg !70
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbbdgtbtryp3ltlq7u4x2uzl7u2tz45sxqwjov6azn3t26iiz37p.py", directory: "inductor_cache/bb")
!4 = !{ptr @triton_poi_fused__softmax_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax_5", linkageName: "triton_poi_fused__softmax_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 26, column: 34, scope: !7)
!19 = !DILocation(line: 26, column: 30, scope: !7)
!20 = !DILocation(line: 26, column: 41, scope: !7)
!21 = !DILocation(line: 27, column: 34, scope: !7)
!22 = !DILocation(line: 27, column: 30, scope: !7)
!23 = !DILocation(line: 27, column: 41, scope: !7)
!24 = !DILocation(line: 28, column: 34, scope: !7)
!25 = !DILocation(line: 28, column: 30, scope: !7)
!26 = !DILocation(line: 28, column: 41, scope: !7)
!27 = !DILocation(line: 29, column: 35, scope: !7)
!28 = !DILocation(line: 29, column: 31, scope: !7)
!29 = !DILocation(line: 29, column: 42, scope: !7)
!30 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !33)
!31 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!32 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!33 = !DILocation(line: 33, column: 40, scope: !7)
!34 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !33)
!35 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !33)
!36 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !33)
!37 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !38)
!38 = !DILocation(line: 35, column: 40, scope: !7)
!39 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !38)
!40 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !38)
!41 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !38)
!42 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !43)
!43 = !DILocation(line: 37, column: 41, scope: !7)
!44 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !43)
!45 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !43)
!46 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !43)
!47 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !48)
!48 = !DILocation(line: 39, column: 42, scope: !7)
!49 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !48)
!50 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !48)
!51 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !48)
!52 = !DILocation(line: 40, column: 19, scope: !7)
!53 = !DILocation(line: 42, column: 24, scope: !7)
!54 = !DILocation(line: 43, column: 19, scope: !7)
!55 = !DILocation(line: 45, column: 24, scope: !7)
!56 = !DILocation(line: 46, column: 20, scope: !7)
!57 = !DILocation(line: 47, column: 19, scope: !7)
!58 = !DILocation(line: 49, column: 24, scope: !7)
!59 = !DILocation(line: 50, column: 20, scope: !7)
!60 = !DILocation(line: 51, column: 20, scope: !7)
!61 = !DILocation(line: 53, column: 24, scope: !7)
!62 = !DILocation(line: 54, column: 20, scope: !7)
!63 = !DILocation(line: 55, column: 20, scope: !7)
!64 = !DILocation(line: 57, column: 24, scope: !7)
!65 = !DILocation(line: 58, column: 20, scope: !7)
!66 = !DILocation(line: 59, column: 25, scope: !7)
!67 = !DILocation(line: 59, column: 37, scope: !7)
!68 = !DILocation(line: 60, column: 25, scope: !7)
!69 = !DILocation(line: 60, column: 37, scope: !7)
!70 = !DILocation(line: 60, column: 4, scope: !7)
