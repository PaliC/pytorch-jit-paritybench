//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_8,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_9,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_10,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_11
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<27>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<60>;
	.reg .f32 	%f<37>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd16, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_0];
	ld.param.u64 	%rd17, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_1];
$L__tmp0:
	.loc	1 23 28                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:23:33
	shl.b32 	%r34, %r1, 3;
	ld.param.u64 	%rd18, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_2];
	ld.param.u64 	%rd19, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_3];
	.loc	1 24 44                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:24:44
	mov.u32 	%r35, %tid.x;
	ld.param.u64 	%rd20, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_4];
	bfe.u32 	%r36, %r35, 3, 3;
	ld.param.u64 	%rd21, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_5];
	.loc	1 24 23                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:24:23
	or.b32  	%r37, %r34, %r36;
	ld.param.u64 	%rd22, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_6];
	.loc	1 25 21                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:25:21
	setp.lt.s32 	%p1, %r37, 16;
	ld.param.u64 	%rd23, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_7];
	.loc	1 26 34                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:26:34
	shl.b32 	%r38, %r35, 1;
	ld.param.u64 	%rd24, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_8];
	and.b32  	%r39, %r38, 14;
	ld.param.u64 	%rd25, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_mul_relu_threshold_backward_1_param_9];
	.loc	1 31 19                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:31:19
	bfe.s32 	%r40, %r1, 28, 1;
	shr.u32 	%r41, %r40, 30;
	add.s32 	%r42, %r37, %r41;
	and.b32  	%r43, %r42, -4;
	sub.s32 	%r44, %r37, %r43;
	.loc	1 32 38                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:32:38
	shl.b32 	%r45, %r37, 4;
	.loc	1 32 35                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:32:35
	or.b32  	%r46, %r45, %r39;
	.loc	1 32 30                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:32:30
	cvt.s64.s32 	%rd26, %r46;
	mul.wide.s32 	%rd27, %r46, 4;
	add.s64 	%rd1, %rd17, %rd27;
	mov.b32 	%r4, 0;
	.loc	1 32 43                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:32:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	.loc	1 33 30                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:33:30
	mul.wide.s32 	%rd28, %r44, 4;
	add.s64 	%rd2, %rd18, %rd28;
	.loc	1 33 35                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:33:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:34:30
	add.s64 	%rd4, %rd19, %rd28;
	.loc	1 34 35                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:34:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r9;
	.loc	1 35 31                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:35:31
	add.s64 	%rd6, %rd20, %rd28;
	.loc	1 35 36                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:35:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:36:31
	add.s64 	%rd8, %rd21, %rd28;
	.loc	1 36 36                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:36:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:37:31
	mul.wide.s32 	%rd29, %r37, 4;
	add.s64 	%rd10, %rd22, %rd29;
	.loc	1 37 36                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:37:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:38:31
	add.s64 	%rd12, %rd23, %rd27;
	.loc	1 38 44                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:38:44
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v2.b32 { %r16, %r17 }, [ %rd12 + 0 ];
	@!%p1 mov.u32 %r16, %r4;
	@!%p1 mov.u32 %r17, %r4;
	// end inline asm
	.loc	1 41 18                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:41:18
	add.f32 	%f4, %f3, 0f3727C5AC;
	.loc	1 42 26                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:42:26
	sqrt.approx.ftz.f32 	%f5, %f4;
	.loc	1 32 43                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:32:43
	mov.b32 	%f6, %r3;
	.loc	1 33 35                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:33:35
	mov.b32 	%f7, %r7;
	.loc	1 39 18                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:39:18
	sub.f32 	%f8, %f6, %f7;
	.loc	1 32 43                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:32:43
	mov.b32 	%f9, %r2;
	.loc	1 39 18                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:39:18
	sub.f32 	%f10, %f9, %f7;
	.loc	1 38 44                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:38:44
	mov.b32 	%f11, %r17;
	mov.b32 	%f12, %r16;
	.loc	1 37 36                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:37:36
	mov.b32 	%f13, %r15;
	.loc	1 36 36                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:36:36
	mov.b32 	%f14, %r13;
	.loc	1 35 36                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:35:36
	mov.b32 	%f15, %r11;
	.loc	1 24 44                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:24:44
	and.b32  	%r47, %r35, 7;
	.loc	1 24 23                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:24:23
	or.b32  	%r48, %r34, %r47;
	.loc	1 25 21                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:25:21
	setp.lt.s32 	%p21, %r48, 16;
	.loc	1 44 18                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:44:18
	mov.b32 	%r22, %f5;
	mov.b32 	%r21, 1065353216;
	// begin inline asm
	div.full.f32 %r20, %r21, %r22;
	// end inline asm
	mov.b32 	%f16, %r20;
	.loc	1 47 19                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:47:19
	mul.f32 	%f17, %f10, %f16;
	mul.f32 	%f18, %f8, %f16;
	.loc	1 49 20                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:49:20
	fma.rn.f32 	%f19, %f17, %f15, %f14;
	fma.rn.f32 	%f20, %f18, %f15, %f14;
	mov.f32 	%f21, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f22, %f21, %f13;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f22, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f23, %f1, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r25, %f23;
	// begin inline asm
	div.full.f32 %r23, %r21, %r25;
	// end inline asm
	mov.b32 	%f24, %r23;
$L__tmp2:
	.loc	1 52 20                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:52:20
	fma.rn.f32 	%f25, %f24, %f19, %f12;
	fma.rn.f32 	%f26, %f24, %f20, %f11;
$L__tmp3:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p22, %f25, 0f00000000;
	setp.lt.f32 	%p23, %f26, 0f00000000;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f27, 0f00000000, %f25, %p22;
	selp.f32 	%f28, 0f00000000, %f26, %p23;
$L__tmp4:
	.loc	1 56 21                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:56:21
	setp.le.f32 	%p24, %f27, 0f00000000;
	setp.le.f32 	%p25, %f28, 0f00000000;
$L__tmp5:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f19, %f20;
	selp.f32 	%f30, %f29, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f30;
	shfl.sync.bfly.b32	%r50, %r49, 4, 31, -1;
	mov.b32 	%f31, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f32;
	shfl.sync.bfly.b32	%r52, %r51, 2, 31, -1;
	mov.b32 	%f33, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f34;
	shfl.sync.bfly.b32	%r54, %r53, 1, 31, -1;
	mov.b32 	%f35, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
$L__tmp6:
	.loc	1 61 20                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:61:20
	shl.b32 	%r55, %r36, 2;
	mov.u32 	%r56, global_smem;
	add.s32 	%r26, %r56, %r55;
	mov.b32 	%r27, %f36;
	mov.pred 	%p17, -1;
	// begin inline asm
	@%p17 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r57, %r47, 2;
	add.s32 	%r58, %r56, %r57;
	ld.shared.u32 	%r29, [%r58];
	mov.b32 	%r30, 1098907648;
	// begin inline asm
	div.full.f32 %r33, %r29, %r30;
	// end inline asm
	.loc	1 62 25                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:62:25
	add.s64 	%rd13, %rd24, %rd27;
	.loc	1 62 45                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:62:45
	mov.b32 	%r31, %f27;
	mov.b32 	%r32, %f28;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd13 + 0 ], { %r31, %r32 };
	// end inline asm
	.loc	1 63 25                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:63:25
	add.s64 	%rd14, %rd25, %rd26;
	.loc	1 63 45                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:63:45
	selp.u16 	%rs2, 1, 0, %p24;
	selp.u16 	%rs3, 1, 0, %p25;
	shl.b16 	%rs4, %rs3, 8;
	or.b16  	%rs1, %rs2, %rs4;
	// begin inline asm
	@%p1 st.global.b16 [ %rd14 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 64 4                          // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:64:4
	bar.sync 	0;
	.loc	1 65 28                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:65:28
	mul.wide.s32 	%rd30, %r48, 4;
	add.s64 	%rd15, %rd16, %rd30;
	.loc	1 65 40                         // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:65:40
	and.b32  	%r59, %r35, 56;
	setp.eq.s32 	%p26, %r59, 0;
	and.pred  	%p20, %p26, %p21;
	// begin inline asm
	@%p20 st.global.b32 [ %rd15 + 0 ], { %r33 };
	// end inline asm
	.loc	1 65 4                          // cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py:65:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/gq/cgq5zvcvmyklbkxqrz7u4ii26xkwo52tlk7e32h3uqtj7hjgzcto.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 285                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x116 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 113
.b8 53
.b8 122
.b8 118
.b8 99
.b8 118
.b8 109
.b8 121
.b8 107
.b8 108
.b8 98
.b8 107
.b8 120
.b8 113
.b8 114
.b8 122
.b8 55
.b8 117
.b8 52
.b8 105
.b8 105
.b8 50
.b8 54
.b8 120
.b8 107
.b8 119
.b8 111
.b8 53
.b8 50
.b8 116
.b8 108
.b8 107
.b8 55
.b8 101
.b8 51
.b8 50
.b8 104
.b8 51
.b8 117
.b8 113
.b8 116
.b8 106
.b8 55
.b8 104
.b8 106
.b8 103
.b8 122
.b8 99
.b8 116
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 113
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x5f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc2:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xd7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xef:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x107:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 59                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
