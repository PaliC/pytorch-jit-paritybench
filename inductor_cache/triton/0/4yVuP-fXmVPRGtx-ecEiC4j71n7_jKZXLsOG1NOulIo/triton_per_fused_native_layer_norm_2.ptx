//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_native_layer_norm_2 // -- Begin function triton_per_fused_native_layer_norm_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_native_layer_norm_2
.visible .entry triton_per_fused_native_layer_norm_2(
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_2_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_2_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_2_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_2_param_5,
	.param .u32 triton_per_fused_native_layer_norm_2_param_6,
	.param .u32 triton_per_fused_native_layer_norm_2_param_7
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<104>;
	.reg .b32 	%r<336>;
	.reg .f32 	%f<176>;
	.reg .b64 	%rd<59>;
	.loc	1 19 0                          // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd43, [triton_per_fused_native_layer_norm_2_param_0];
	ld.param.u64 	%rd44, [triton_per_fused_native_layer_norm_2_param_1];
$L__tmp0:
	.loc	1 23 28                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:23:33
	shl.b32 	%r204, %r1, 7;
	ld.param.u64 	%rd45, [triton_per_fused_native_layer_norm_2_param_2];
	ld.param.u64 	%rd46, [triton_per_fused_native_layer_norm_2_param_3];
	.loc	1 24 44                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:24:44
	mov.u32 	%r205, %tid.x;
	shl.b32 	%r206, %r205, 2;
	ld.param.u64 	%rd47, [triton_per_fused_native_layer_norm_2_param_4];
	and.b32  	%r207, %r206, 124;
	ld.param.u64 	%rd48, [triton_per_fused_native_layer_norm_2_param_5];
	and.b32  	%r208, %r205, 127;
	.loc	1 24 23                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:24:23
	or.b32  	%r209, %r204, %r207;
	.loc	1 25 21                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:25:21
	setp.lt.s32 	%p1, %r209, 256;
	.loc	1 26 34                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:26:34
	bfe.u32 	%r210, %r205, 5, 3;
	.loc	1 31 19                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:31:19
	shr.s32 	%r212, %r209, 31;
	shr.u32 	%r213, %r212, 26;
	add.s32 	%r214, %r209, %r213;
	.loc	1 30 19                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:30:19
	and.b32  	%r215, %r214, -64;
	sub.s32 	%r216, %r209, %r215;
	.loc	1 26 34                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:26:34
	shl.b32 	%r217, %r210, 6;
	.loc	1 33 48                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:33:48
	shl.b32 	%r218, %r214, 5;
	and.b32  	%r219, %r218, -2048;
	.loc	1 33 35                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:33:35
	add.s32 	%r220, %r219, %r216;
	.loc	1 33 43                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:33:43
	add.s32 	%r221, %r220, %r217;
	add.s32 	%r222, %r221, 512;
	add.s32 	%r223, %r221, 1024;
	add.s32 	%r224, %r221, 1536;
	.loc	1 33 30                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:33:30
	mul.wide.s32 	%rd49, %r221, 4;
	add.s64 	%rd1, %rd44, %rd49;
	mul.wide.s32 	%rd50, %r222, 4;
	add.s64 	%rd2, %rd44, %rd50;
	mul.wide.s32 	%rd51, %r223, 4;
	add.s64 	%rd3, %rd44, %rd51;
	mul.wide.s32 	%rd52, %r224, 4;
	add.s64 	%rd4, %rd44, %rd52;
	mov.b32 	%r6, 0;
	.loc	1 33 53                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:33:53
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r20, %r6;
	@!%p1 mov.u32 %r21, %r6;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r26, %r6;
	@!%p1 mov.u32 %r27, %r6;
	@!%p1 mov.u32 %r28, %r6;
	@!%p1 mov.u32 %r29, %r6;
	// end inline asm
	mov.b32 	%f13, %r26;
	mov.b32 	%f14, %r27;
	mov.b32 	%f15, %r28;
	mov.b32 	%f16, %r29;
	.loc	1 34 31                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:34:31
	mul.wide.u32 	%rd53, %r210, 4;
	add.s64 	%rd5, %rd45, %rd53;
	add.s64 	%rd9, %rd5, 32;
	add.s64 	%rd13, %rd5, 64;
	add.s64 	%rd17, %rd5, 96;
	mov.pred 	%p21, -1;
	.loc	1 34 36                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:34:36
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r34 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r35 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r36 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r37, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r37 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r38 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r39 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r40 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r41, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r41 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r42 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r43, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r43 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r44 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r45, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r45 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r46 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r47, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r47 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r48 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r49, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r49 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:35:31
	add.s64 	%rd21, %rd46, %rd53;
	add.s64 	%rd25, %rd21, 32;
	add.s64 	%rd29, %rd21, 64;
	add.s64 	%rd33, %rd21, 96;
	.loc	1 35 36                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:35:36
	// begin inline asm
	mov.u32 %r50, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r50 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r51, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r51 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r52, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r52 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r53, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r53 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r54, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r54 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r55, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r55 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r56, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r56 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r57, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r57 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r58, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r58 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r59, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r59 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r60, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r60 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r61, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r61 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r62, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r62 }, [ %rd33 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r63, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r63 }, [ %rd33 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r64, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r64 }, [ %rd33 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r65, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r65 }, [ %rd33 + 0 ];
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f1, %f5;
	add.f32 	%f18, %f2, %f6;
	add.f32 	%f19, %f3, %f7;
	add.f32 	%f20, %f4, %f8;
	add.f32 	%f21, %f17, %f9;
	add.f32 	%f22, %f18, %f10;
	add.f32 	%f23, %f19, %f11;
	add.f32 	%f24, %f20, %f12;
	add.f32 	%f25, %f21, %f13;
	add.f32 	%f26, %f22, %f14;
	add.f32 	%f27, %f23, %f15;
	add.f32 	%f28, %f24, %f16;
	.loc	2 267 36                        // standard.py:267:36
	shl.b32 	%r225, %r210, 2;
	shl.b32 	%r226, %r207, 5;
	or.b32  	%r227, %r226, %r225;
	mov.u32 	%r228, global_smem;
	add.s32 	%r66, %r228, %r227;
	mov.b32 	%r229, %f25;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r67, %r229, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p21 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	add.s32 	%r68, %r66, 32;
	mov.b32 	%r230, %f26;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r69, %r230, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p21 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	add.s32 	%r70, %r66, 64;
	mov.b32 	%r231, %f27;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r71, %r231, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p21 st.shared.b32 [ %r70 + 0 ], %r71;
	// end inline asm
	add.s32 	%r72, %r66, 96;
	mov.b32 	%r232, %f28;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r73, %r232, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p21 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p57, %r205, 1024;
	add.s32 	%r75, %r228, %r206;
	// begin inline asm
	@%p57 ld.shared.b32 %r74, [ %r75 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r74;
	shfl.sync.bfly.b32	%r233, %r74, 4, 31, -1;
	mov.b32 	%f30, %r233;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r234, %f31;
	shfl.sync.bfly.b32	%r235, %r234, 2, 31, -1;
	mov.b32 	%f32, %r235;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r236, %f33;
	shfl.sync.bfly.b32	%r237, %r236, 1, 31, -1;
	mov.b32 	%f34, %r237;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r238, %r205, 7;
	setp.eq.s32 	%p101, %r238, 0;
	and.pred  	%p58, %p57, %p101;
	mov.b32 	%r77, %f35;
	// begin inline asm
	@%p58 st.shared.b32 [ %r75 + 0 ], %r77;
	// end inline asm
	add.s32 	%r79, %r75, 1024;
	// begin inline asm
	@%p57 ld.shared.b32 %r78, [ %r79 + 0 ];
	// end inline asm
	mov.b32 	%f36, %r78;
	shfl.sync.bfly.b32	%r239, %r78, 4, 31, -1;
	mov.b32 	%f37, %r239;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r240, %f38;
	shfl.sync.bfly.b32	%r241, %r240, 2, 31, -1;
	mov.b32 	%f39, %r241;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r242, %f40;
	shfl.sync.bfly.b32	%r243, %r242, 1, 31, -1;
	mov.b32 	%f41, %r243;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f42;
	// begin inline asm
	@%p58 st.shared.b32 [ %r79 + 0 ], %r81;
	// end inline asm
	add.s32 	%r83, %r75, 2048;
	// begin inline asm
	@%p57 ld.shared.b32 %r82, [ %r83 + 0 ];
	// end inline asm
	mov.b32 	%f43, %r82;
	shfl.sync.bfly.b32	%r244, %r82, 4, 31, -1;
	mov.b32 	%f44, %r244;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r245, %f45;
	shfl.sync.bfly.b32	%r246, %r245, 2, 31, -1;
	mov.b32 	%f46, %r246;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r247, %f47;
	shfl.sync.bfly.b32	%r248, %r247, 1, 31, -1;
	mov.b32 	%f48, %r248;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f49;
	// begin inline asm
	@%p58 st.shared.b32 [ %r83 + 0 ], %r85;
	// end inline asm
	add.s32 	%r87, %r75, 3072;
	// begin inline asm
	@%p57 ld.shared.b32 %r86, [ %r87 + 0 ];
	// end inline asm
	mov.b32 	%f50, %r86;
	shfl.sync.bfly.b32	%r249, %r86, 4, 31, -1;
	mov.b32 	%f51, %r249;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r250, %f52;
	shfl.sync.bfly.b32	%r251, %r250, 2, 31, -1;
	mov.b32 	%f53, %r251;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r252, %f54;
	shfl.sync.bfly.b32	%r253, %r252, 1, 31, -1;
	mov.b32 	%f55, %r253;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f56;
	// begin inline asm
	@%p58 st.shared.b32 [ %r87 + 0 ], %r89;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r254, %r228, %r226;
$L__tmp2:
	.loc	1 43 19                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:43:19
	ld.shared.u32 	%r91, [%r254];
	ld.shared.u32 	%r92, [%r254+32];
	ld.shared.u32 	%r93, [%r254+64];
	ld.shared.u32 	%r94, [%r254+96];
	bar.sync 	0;
	mad.lo.s32 	%r134, %r207, -28, %r254;
	// begin inline asm
	@%p21 st.shared.v4.b32 [ %r134 + 0 ], { %r91, %r92, %r93, %r94 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r255, %r208, 2;
	add.s32 	%r256, %r228, %r255;
	ld.shared.u32 	%r96, [%r256];
	mov.b32 	%r97, 1107296256;
	// begin inline asm
	div.full.f32 %r203, %r96, %r97;
	// end inline asm
	// begin inline asm
	div.full.f32 %r98, %r91, %r97;
	// end inline asm
	mov.b32 	%f57, %r98;
	// begin inline asm
	div.full.f32 %r101, %r92, %r97;
	// end inline asm
	mov.b32 	%f58, %r101;
	// begin inline asm
	div.full.f32 %r104, %r93, %r97;
	// end inline asm
	mov.b32 	%f59, %r104;
	// begin inline asm
	div.full.f32 %r107, %r94, %r97;
	// end inline asm
	mov.b32 	%f60, %r107;
	.loc	1 44 19                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:44:19
	sub.f32 	%f61, %f1, %f57;
	sub.f32 	%f62, %f2, %f58;
	sub.f32 	%f63, %f3, %f59;
	sub.f32 	%f64, %f4, %f60;
	sub.f32 	%f65, %f5, %f57;
	sub.f32 	%f66, %f6, %f58;
	sub.f32 	%f67, %f7, %f59;
	sub.f32 	%f68, %f8, %f60;
	sub.f32 	%f69, %f9, %f57;
	sub.f32 	%f70, %f10, %f58;
	sub.f32 	%f71, %f11, %f59;
	sub.f32 	%f72, %f12, %f60;
	sub.f32 	%f73, %f13, %f57;
	sub.f32 	%f74, %f14, %f58;
	sub.f32 	%f75, %f15, %f59;
	sub.f32 	%f76, %f16, %f60;
	.loc	1 45 20                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:45:20
	mul.f32 	%f77, %f65, %f65;
	mul.f32 	%f78, %f66, %f66;
	mul.f32 	%f79, %f67, %f67;
	mul.f32 	%f80, %f68, %f68;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f81, %f61, %f61, %f77;
	fma.rn.f32 	%f82, %f62, %f62, %f78;
	fma.rn.f32 	%f83, %f63, %f63, %f79;
	fma.rn.f32 	%f84, %f64, %f64, %f80;
	fma.rn.f32 	%f85, %f69, %f69, %f81;
	fma.rn.f32 	%f86, %f70, %f70, %f82;
	fma.rn.f32 	%f87, %f71, %f71, %f83;
	fma.rn.f32 	%f88, %f72, %f72, %f84;
	fma.rn.f32 	%f89, %f73, %f73, %f85;
	fma.rn.f32 	%f90, %f74, %f74, %f86;
	fma.rn.f32 	%f91, %f75, %f75, %f87;
	fma.rn.f32 	%f92, %f76, %f76, %f88;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r257, %f89;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r111, %r257, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p21 st.shared.b32 [ %r66 + 0 ], %r111;
	// end inline asm
	mov.b32 	%r258, %f90;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r113, %r258, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p21 st.shared.b32 [ %r68 + 0 ], %r113;
	// end inline asm
	mov.b32 	%r259, %f91;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r115, %r259, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p21 st.shared.b32 [ %r70 + 0 ], %r115;
	// end inline asm
	mov.b32 	%r260, %f92;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r117, %r260, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p21 st.shared.b32 [ %r72 + 0 ], %r117;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p57 ld.shared.b32 %r118, [ %r75 + 0 ];
	// end inline asm
	mov.b32 	%f93, %r118;
	shfl.sync.bfly.b32	%r261, %r118, 4, 31, -1;
	mov.b32 	%f94, %r261;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f95, %f93, %f94;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r262, %f95;
	shfl.sync.bfly.b32	%r263, %r262, 2, 31, -1;
	mov.b32 	%f96, %r263;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f97, %f95, %f96;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r264, %f97;
	shfl.sync.bfly.b32	%r265, %r264, 1, 31, -1;
	mov.b32 	%f98, %r265;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f99, %f97, %f98;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r121, %f99;
	// begin inline asm
	@%p58 st.shared.b32 [ %r75 + 0 ], %r121;
	// end inline asm
	// begin inline asm
	@%p57 ld.shared.b32 %r122, [ %r79 + 0 ];
	// end inline asm
	mov.b32 	%f100, %r122;
	shfl.sync.bfly.b32	%r266, %r122, 4, 31, -1;
	mov.b32 	%f101, %r266;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f102, %f100, %f101;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r267, %f102;
	shfl.sync.bfly.b32	%r268, %r267, 2, 31, -1;
	mov.b32 	%f103, %r268;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f104, %f102, %f103;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r269, %f104;
	shfl.sync.bfly.b32	%r270, %r269, 1, 31, -1;
	mov.b32 	%f105, %r270;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f106, %f104, %f105;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r125, %f106;
	// begin inline asm
	@%p58 st.shared.b32 [ %r79 + 0 ], %r125;
	// end inline asm
	// begin inline asm
	@%p57 ld.shared.b32 %r126, [ %r83 + 0 ];
	// end inline asm
	mov.b32 	%f107, %r126;
	shfl.sync.bfly.b32	%r271, %r126, 4, 31, -1;
	mov.b32 	%f108, %r271;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f109, %f107, %f108;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r272, %f109;
	shfl.sync.bfly.b32	%r273, %r272, 2, 31, -1;
	mov.b32 	%f110, %r273;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f111, %f109, %f110;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r274, %f111;
	shfl.sync.bfly.b32	%r275, %r274, 1, 31, -1;
	mov.b32 	%f112, %r275;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f113, %f111, %f112;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r129, %f113;
	// begin inline asm
	@%p58 st.shared.b32 [ %r83 + 0 ], %r129;
	// end inline asm
	// begin inline asm
	@%p57 ld.shared.b32 %r130, [ %r87 + 0 ];
	// end inline asm
	mov.b32 	%f114, %r130;
	shfl.sync.bfly.b32	%r276, %r130, 4, 31, -1;
	mov.b32 	%f115, %r276;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f116, %f114, %f115;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r277, %f116;
	shfl.sync.bfly.b32	%r278, %r277, 2, 31, -1;
	mov.b32 	%f117, %r278;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f118, %f116, %f117;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r279, %f118;
	shfl.sync.bfly.b32	%r280, %r279, 1, 31, -1;
	mov.b32 	%f119, %r280;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f120, %f118, %f119;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r133, %f120;
	// begin inline asm
	@%p58 st.shared.b32 [ %r87 + 0 ], %r133;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 53 28                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:53:28
	ld.shared.u32 	%r135, [%r254];
	ld.shared.u32 	%r136, [%r254+32];
	ld.shared.u32 	%r137, [%r254+64];
	ld.shared.u32 	%r138, [%r254+96];
	bar.sync 	0;
	// begin inline asm
	@%p21 st.shared.v4.b32 [ %r134 + 0 ], { %r135, %r136, %r137, %r138 };
	// end inline asm
	bar.sync 	0;
	.loc	1 50 20                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:50:20
	ld.shared.u32 	%r140, [%r256];
	// begin inline asm
	div.full.f32 %r139, %r140, %r97;
	// end inline asm
	mov.b32 	%f121, %r139;
	// begin inline asm
	div.full.f32 %r142, %r135, %r97;
	// end inline asm
	mov.b32 	%f122, %r142;
	// begin inline asm
	div.full.f32 %r145, %r136, %r97;
	// end inline asm
	mov.b32 	%f123, %r145;
	// begin inline asm
	div.full.f32 %r148, %r137, %r97;
	// end inline asm
	mov.b32 	%f124, %r148;
	// begin inline asm
	div.full.f32 %r151, %r138, %r97;
	// end inline asm
	mov.b32 	%f125, %r151;
	.loc	1 52 20                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:52:20
	add.f32 	%f126, %f121, 0f3727C5AC;
	add.f32 	%f127, %f122, 0f3727C5AC;
	add.f32 	%f128, %f123, 0f3727C5AC;
	add.f32 	%f129, %f124, 0f3727C5AC;
	add.f32 	%f130, %f125, 0f3727C5AC;
	.loc	1 53 28                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:53:28
	rsqrt.approx.ftz.f32 	%f131, %f126;
	rsqrt.approx.ftz.f32 	%f132, %f127;
	rsqrt.approx.ftz.f32 	%f133, %f128;
	rsqrt.approx.ftz.f32 	%f134, %f129;
	rsqrt.approx.ftz.f32 	%f135, %f130;
	.loc	1 35 36                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:35:36
	mov.b32 	%f136, %r65;
	mov.b32 	%f137, %r61;
	mov.b32 	%f138, %r57;
	mov.b32 	%f139, %r53;
	.loc	1 34 36                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:34:36
	mov.b32 	%f140, %r49;
	mov.b32 	%f141, %r45;
	mov.b32 	%f142, %r41;
	mov.b32 	%f143, %r37;
	.loc	1 24 44                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:24:44
	bfe.u32 	%r281, %r205, 3, 5;
	.loc	1 24 23                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:24:23
	or.b32  	%r282, %r281, %r204;
	or.b32  	%r283, %r282, 96;
	.loc	1 25 21                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:25:21
	setp.lt.s32 	%p99, %r283, 256;
	.loc	1 24 23                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:24:23
	or.b32  	%r284, %r282, 64;
	.loc	1 25 21                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:25:21
	setp.lt.s32 	%p98, %r284, 256;
	.loc	1 24 23                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:24:23
	or.b32  	%r285, %r282, 32;
	.loc	1 25 21                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:25:21
	setp.lt.s32 	%p97, %r285, 256;
	setp.lt.s32 	%p96, %r282, 256;
	.loc	1 24 23                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:24:23
	or.b32  	%r286, %r204, %r208;
	.loc	1 25 21                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:25:21
	setp.lt.s32 	%p102, %r286, 256;
	.loc	1 24 44                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:24:44
	and.b32  	%r287, %r206, 28;
	.loc	1 55 20                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:55:20
	mul.f32 	%f144, %f61, %f132;
	mul.f32 	%f145, %f62, %f133;
	mul.f32 	%f146, %f63, %f134;
	mul.f32 	%f147, %f64, %f135;
	mul.f32 	%f148, %f65, %f132;
	mul.f32 	%f149, %f66, %f133;
	mul.f32 	%f150, %f67, %f134;
	mul.f32 	%f151, %f68, %f135;
	mul.f32 	%f152, %f69, %f132;
	mul.f32 	%f153, %f70, %f133;
	mul.f32 	%f154, %f71, %f134;
	mul.f32 	%f155, %f72, %f135;
	mul.f32 	%f156, %f73, %f132;
	mul.f32 	%f157, %f74, %f133;
	mul.f32 	%f158, %f75, %f134;
	mul.f32 	%f159, %f76, %f135;
	.loc	1 57 20                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:57:20
	fma.rn.f32 	%f160, %f144, %f143, %f139;
	fma.rn.f32 	%f161, %f145, %f143, %f139;
	fma.rn.f32 	%f162, %f146, %f143, %f139;
	fma.rn.f32 	%f163, %f147, %f143, %f139;
	fma.rn.f32 	%f164, %f148, %f142, %f138;
	fma.rn.f32 	%f165, %f149, %f142, %f138;
	fma.rn.f32 	%f166, %f150, %f142, %f138;
	fma.rn.f32 	%f167, %f151, %f142, %f138;
	fma.rn.f32 	%f168, %f152, %f141, %f137;
	fma.rn.f32 	%f169, %f153, %f141, %f137;
	fma.rn.f32 	%f170, %f154, %f141, %f137;
	fma.rn.f32 	%f171, %f155, %f141, %f137;
	fma.rn.f32 	%f172, %f156, %f140, %f136;
	fma.rn.f32 	%f173, %f157, %f140, %f136;
	fma.rn.f32 	%f174, %f158, %f140, %f136;
	fma.rn.f32 	%f175, %f159, %f140, %f136;
	.loc	1 58 4                          // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:58:4
	bar.sync 	0;
	.loc	1 59 28                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:59:28
	mul.wide.s32 	%rd54, %r286, 4;
	add.s64 	%rd37, %rd43, %rd54;
	.loc	1 59 40                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:59:40
	and.b32  	%r288, %r205, 128;
	setp.eq.s32 	%p103, %r288, 0;
	mov.b32 	%r154, %f131;
	and.pred  	%p79, %p103, %p102;
	// begin inline asm
	@%p79 st.global.b32 [ %rd37 + 0 ], { %r154 };
	// end inline asm
	.loc	1 60 33                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:60:33
	shl.b32 	%r289, %r282, 5;
	shl.b32 	%r290, %r285, 5;
	shl.b32 	%r291, %r284, 5;
	shl.b32 	%r292, %r283, 5;
	.loc	1 60 30                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:60:30
	or.b32  	%r293, %r289, %r287;
	or.b32  	%r294, %r290, %r287;
	or.b32  	%r295, %r291, %r287;
	or.b32  	%r296, %r292, %r287;
	.loc	1 60 25                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:60:25
	mul.wide.s32 	%rd55, %r293, 4;
	add.s64 	%rd38, %rd48, %rd55;
	mul.wide.s32 	%rd56, %r294, 4;
	add.s64 	%rd39, %rd48, %rd56;
	mul.wide.s32 	%rd57, %r295, 4;
	add.s64 	%rd40, %rd48, %rd57;
	mul.wide.s32 	%rd58, %r296, 4;
	add.s64 	%rd41, %rd48, %rd58;
	.loc	1 60 45                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:60:45
	shl.b32 	%r297, %r205, 7;
	and.b32  	%r298, %r297, 3968;
	or.b32  	%r299, %r298, %r210;
	and.b32  	%r300, %r206, 1020;
	shr.u32 	%r301, %r298, 1;
	add.s32 	%r302, %r228, %r301;
	shl.b32 	%r303, %r299, 2;
	add.s32 	%r155, %r302, %r303;
	mov.b32 	%r156, %f160;
	// begin inline asm
	@%p21 st.shared.b32 [ %r155 + 0 ], %r156;
	// end inline asm
	or.b32  	%r304, %r298, 32;
	shr.u32 	%r305, %r304, 1;
	add.s32 	%r306, %r228, %r305;
	add.s32 	%r307, %r306, %r303;
	add.s32 	%r157, %r307, 128;
	mov.b32 	%r158, %f161;
	// begin inline asm
	@%p21 st.shared.b32 [ %r157 + 0 ], %r158;
	// end inline asm
	or.b32  	%r308, %r298, 64;
	shr.u32 	%r309, %r308, 1;
	add.s32 	%r310, %r228, %r309;
	add.s32 	%r311, %r310, %r303;
	add.s32 	%r159, %r311, 256;
	mov.b32 	%r160, %f162;
	// begin inline asm
	@%p21 st.shared.b32 [ %r159 + 0 ], %r160;
	// end inline asm
	or.b32  	%r312, %r298, 96;
	shr.u32 	%r313, %r312, 1;
	add.s32 	%r314, %r228, %r313;
	add.s32 	%r315, %r314, %r303;
	add.s32 	%r161, %r315, 384;
	mov.b32 	%r162, %f163;
	// begin inline asm
	@%p21 st.shared.b32 [ %r161 + 0 ], %r162;
	// end inline asm
	add.s32 	%r163, %r155, 32;
	mov.b32 	%r164, %f164;
	// begin inline asm
	@%p21 st.shared.b32 [ %r163 + 0 ], %r164;
	// end inline asm
	add.s32 	%r165, %r307, 160;
	mov.b32 	%r166, %f165;
	// begin inline asm
	@%p21 st.shared.b32 [ %r165 + 0 ], %r166;
	// end inline asm
	add.s32 	%r167, %r311, 288;
	mov.b32 	%r168, %f166;
	// begin inline asm
	@%p21 st.shared.b32 [ %r167 + 0 ], %r168;
	// end inline asm
	add.s32 	%r169, %r315, 416;
	mov.b32 	%r170, %f167;
	// begin inline asm
	@%p21 st.shared.b32 [ %r169 + 0 ], %r170;
	// end inline asm
	add.s32 	%r171, %r155, 64;
	mov.b32 	%r172, %f168;
	// begin inline asm
	@%p21 st.shared.b32 [ %r171 + 0 ], %r172;
	// end inline asm
	add.s32 	%r173, %r307, 192;
	mov.b32 	%r174, %f169;
	// begin inline asm
	@%p21 st.shared.b32 [ %r173 + 0 ], %r174;
	// end inline asm
	add.s32 	%r175, %r311, 320;
	mov.b32 	%r176, %f170;
	// begin inline asm
	@%p21 st.shared.b32 [ %r175 + 0 ], %r176;
	// end inline asm
	add.s32 	%r177, %r315, 448;
	mov.b32 	%r178, %f171;
	// begin inline asm
	@%p21 st.shared.b32 [ %r177 + 0 ], %r178;
	// end inline asm
	add.s32 	%r179, %r155, 96;
	mov.b32 	%r180, %f172;
	// begin inline asm
	@%p21 st.shared.b32 [ %r179 + 0 ], %r180;
	// end inline asm
	add.s32 	%r181, %r307, 224;
	mov.b32 	%r182, %f173;
	// begin inline asm
	@%p21 st.shared.b32 [ %r181 + 0 ], %r182;
	// end inline asm
	add.s32 	%r183, %r311, 352;
	mov.b32 	%r184, %f174;
	// begin inline asm
	@%p21 st.shared.b32 [ %r183 + 0 ], %r184;
	// end inline asm
	add.s32 	%r185, %r315, 480;
	mov.b32 	%r186, %f175;
	// begin inline asm
	@%p21 st.shared.b32 [ %r185 + 0 ], %r186;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r316, %r205, 1;
	and.b32  	%r317, %r316, 496;
	add.s32 	%r318, %r228, %r317;
	shl.b32 	%r319, %r300, 2;
	add.s32 	%r320, %r318, %r319;
	or.b32  	%r321, %r300, 1024;
	shr.u32 	%r322, %r321, 1;
	and.b32  	%r323, %r322, 1008;
	add.s32 	%r324, %r228, %r323;
	add.s32 	%r325, %r324, %r319;
	ld.shared.v4.u32 	{%r191, %r192, %r193, %r194}, [%r325+4096];
	or.b32  	%r326, %r300, 2048;
	shr.u32 	%r327, %r326, 1;
	and.b32  	%r328, %r327, 1520;
	add.s32 	%r329, %r228, %r328;
	add.s32 	%r330, %r329, %r319;
	ld.shared.v4.u32 	{%r195, %r196, %r197, %r198}, [%r330+8192];
	or.b32  	%r331, %r300, 3072;
	shr.u32 	%r332, %r331, 1;
	and.b32  	%r333, %r332, 2032;
	add.s32 	%r334, %r228, %r333;
	add.s32 	%r335, %r334, %r319;
	ld.shared.v4.u32 	{%r199, %r200, %r201, %r202}, [%r335+12288];
	ld.shared.v4.u32 	{%r187, %r188, %r189, %r190}, [%r320];
	// begin inline asm
	@%p96 st.global.v4.b32 [ %rd38 + 0 ], { %r187, %r188, %r189, %r190 };
	// end inline asm
	// begin inline asm
	@%p97 st.global.v4.b32 [ %rd39 + 0 ], { %r191, %r192, %r193, %r194 };
	// end inline asm
	// begin inline asm
	@%p98 st.global.v4.b32 [ %rd40 + 0 ], { %r195, %r196, %r197, %r198 };
	// end inline asm
	// begin inline asm
	@%p99 st.global.v4.b32 [ %rd41 + 0 ], { %r199, %r200, %r201, %r202 };
	// end inline asm
	.loc	1 61 25                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:61:25
	add.s64 	%rd42, %rd47, %rd54;
	.loc	1 61 37                         // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:61:37
	// begin inline asm
	@%p79 st.global.b32 [ %rd42 + 0 ], { %r203 };
	// end inline asm
	.loc	1 61 4                          // cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py:61:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vs/cvsc36iptsv2cfg5djtaknliti74ddda4nwuwx446wlek6af2hpp.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 205                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 115
.b8 99
.b8 51
.b8 54
.b8 105
.b8 112
.b8 116
.b8 115
.b8 118
.b8 50
.b8 99
.b8 102
.b8 103
.b8 53
.b8 100
.b8 106
.b8 116
.b8 97
.b8 107
.b8 110
.b8 108
.b8 105
.b8 116
.b8 105
.b8 55
.b8 52
.b8 100
.b8 100
.b8 100
.b8 97
.b8 52
.b8 110
.b8 119
.b8 117
.b8 119
.b8 120
.b8 52
.b8 52
.b8 54
.b8 119
.b8 108
.b8 101
.b8 107
.b8 54
.b8 97
.b8 102
.b8 50
.b8 104
.b8 112
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x27 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8a:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9f:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
