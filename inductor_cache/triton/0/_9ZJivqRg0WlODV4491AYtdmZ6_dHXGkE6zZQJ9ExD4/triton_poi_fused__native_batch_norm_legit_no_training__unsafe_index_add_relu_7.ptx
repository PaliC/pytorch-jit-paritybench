//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_9,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_10
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<111>;
	.reg .b32 	%r<291>;
	.reg .f32 	%f<132>;
	.reg .b64 	%rd<154>;
	.loc	1 19 0                          // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd85, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_0];
	ld.param.u64 	%rd86, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_1];
$L__tmp0:
	.loc	1 22 28                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:22:33
	shl.b32 	%r146, %r1, 8;
	ld.param.u64 	%rd87, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_2];
	ld.param.u64 	%rd88, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_3];
	.loc	1 23 44                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:23:44
	mov.u32 	%r147, %tid.x;
	shr.u32 	%r148, %r147, 2;
	ld.param.u64 	%rd89, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_4];
	bfe.u32 	%r149, %r147, 2, 4;
	ld.param.u64 	%rd90, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_5];
	ld.param.u64 	%rd91, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_6];
	ld.param.u64 	%rd92, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_7];
	ld.param.u64 	%rd93, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_8];
	and.b32  	%r150, %r147, 192;
	shr.u32 	%r151, %r150, 2;
	or.b32  	%r152, %r151, %r149;
	shl.b32 	%r153, %r147, 2;
	and.b32  	%r154, %r153, 12;
	and.b32  	%r155, %r153, 252;
	and.b32  	%r156, %r147, 255;
	.loc	1 23 23                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:23:23
	or.b32  	%r157, %r146, %r152;
	or.b32  	%r158, %r157, 64;
	or.b32  	%r159, %r157, 128;
	or.b32  	%r160, %r157, 192;
	or.b32  	%r161, %r146, %r155;
	or.b32  	%r162, %r146, %r156;
	.loc	1 24 21                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:24:21
	setp.lt.s32 	%p89, %r157, 512;
	setp.lt.s32 	%p90, %r158, 512;
	setp.lt.s32 	%p91, %r159, 512;
	setp.lt.s32 	%p92, %r160, 512;
	setp.lt.s32 	%p93, %r161, 512;
	setp.lt.s32 	%p33, %r162, 512;
	.loc	1 25 28                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:25:33
	shl.b32 	%r163, %r2, 4;
	.loc	1 26 44                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:26:44
	bfe.u32 	%r164, %r147, 6, 2;
	.loc	1 26 23                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:26:23
	or.b32  	%r165, %r163, %r164;
	or.b32  	%r166, %r165, 4;
	or.b32  	%r167, %r165, 8;
	or.b32  	%r168, %r165, 12;
	or.b32  	%r169, %r163, %r154;
	.loc	1 27 21                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:27:21
	setp.lt.s32 	%p1, %r165, 16;
	setp.lt.s32 	%p5, %r166, 16;
	setp.lt.s32 	%p9, %r167, 16;
	setp.lt.s32 	%p13, %r168, 16;
	setp.lt.s32 	%p94, %r169, 16;
	.loc	1 28 19                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:28:19
	shr.s32 	%r171, %r165, 31;
	shr.u32 	%r172, %r171, 30;
	add.s32 	%r173, %r165, %r172;
	shr.s32 	%r174, %r173, 2;
	bfe.s32 	%r175, %r2, 27, 1;
	shr.u32 	%r176, %r175, 30;
	add.s32 	%r177, %r166, %r176;
	shr.s32 	%r178, %r177, 2;
	add.s32 	%r179, %r167, %r176;
	shr.s32 	%r180, %r179, 2;
	add.s32 	%r181, %r168, %r176;
	shr.s32 	%r182, %r181, 2;
	.loc	1 29 19                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:29:19
	and.b32  	%r183, %r173, -4;
	sub.s32 	%r184, %r165, %r183;
	.loc	1 31 19                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:31:19
	shr.s32 	%r186, %r161, 31;
	shr.u32 	%r187, %r186, 25;
	add.s32 	%r188, %r161, %r187;
	.loc	1 30 19                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:30:19
	and.b32  	%r189, %r188, -128;
	sub.s32 	%r190, %r161, %r189;
	bfe.s32 	%r191, %r1, 23, 1;
	shr.u32 	%r192, %r191, 25;
	add.s32 	%r193, %r162, %r192;
	and.b32  	%r194, %r193, -128;
	sub.s32 	%r195, %r162, %r194;
	.loc	1 34 30                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:34:30
	mul.wide.s32 	%rd94, %r174, 8;
	add.s64 	%rd2, %rd85, %rd94;
	mul.wide.s32 	%rd95, %r178, 8;
	add.s64 	%rd10, %rd85, %rd95;
	mul.wide.s32 	%rd96, %r180, 8;
	add.s64 	%rd18, %rd85, %rd96;
	mul.wide.s32 	%rd97, %r182, 8;
	add.s64 	%rd26, %rd85, %rd97;
	.loc	1 34 35                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:34:35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd9, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd9 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd11 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd23 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p13 ld.global.L1::evict_last.b64 { %rd25 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd27, 0x0;
	@%p13 ld.global.L1::evict_last.b64 { %rd27 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	@%p13 ld.global.L1::evict_last.b64 { %rd29 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd31, 0x0;
	@%p13 ld.global.L1::evict_last.b64 { %rd31 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:35:30
	mul.wide.s32 	%rd98, %r184, 8;
	add.s64 	%rd34, %rd85, %rd98;
	.loc	1 35 35                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:35:35
	// begin inline asm
	mov.u64 %rd33, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd33 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd35, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd35 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd37, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd37 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd39, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd39 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd41, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd41 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd43, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd43 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd45, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd45 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd47, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd47 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd49, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd49 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd51, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd51 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd53, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd53 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd55, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd55 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd57, 0x0;
	@%p13 ld.global.L1::evict_last.b64 { %rd57 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd59, 0x0;
	@%p13 ld.global.L1::evict_last.b64 { %rd59 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd61, 0x0;
	@%p13 ld.global.L1::evict_last.b64 { %rd61 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd63, 0x0;
	@%p13 ld.global.L1::evict_last.b64 { %rd63 }, [ %rd34 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:36:31
	mul.wide.s32 	%rd99, %r195, 4;
	add.s64 	%rd65, %rd87, %rd99;
	.loc	1 36 36                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:36:36
	// begin inline asm
	mov.u32 %r72, 0x0;
	@%p33 ld.global.L1::evict_last.b32 { %r72 }, [ %rd65 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:37:31
	add.s64 	%rd66, %rd88, %rd99;
	.loc	1 37 36                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:37:36
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p33 ld.global.L1::evict_last.b32 { %r4 }, [ %rd66 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r4;
	.loc	1 38 31                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:38:31
	add.s64 	%rd67, %rd89, %rd99;
	.loc	1 38 36                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:38:36
	// begin inline asm
	mov.u32 %r79, 0x0;
	@%p33 ld.global.L1::evict_last.b32 { %r79 }, [ %rd67 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:39:31
	add.s64 	%rd68, %rd90, %rd99;
	.loc	1 39 36                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:39:36
	// begin inline asm
	mov.u32 %r81, 0x0;
	@%p33 ld.global.L1::evict_last.b32 { %r81 }, [ %rd68 + 0 ];
	// end inline asm
	.loc	1 40 39                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:40:39
	shl.b32 	%r196, %r157, 4;
	shl.b32 	%r197, %r158, 4;
	shl.b32 	%r198, %r159, 4;
	shl.b32 	%r199, %r160, 4;
	.loc	1 40 36                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:40:36
	add.s32 	%r200, %r169, %r196;
	add.s32 	%r201, %r169, %r197;
	add.s32 	%r202, %r169, %r198;
	add.s32 	%r203, %r169, %r199;
	.loc	1 40 31                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:40:31
	mul.wide.s32 	%rd100, %r200, 4;
	add.s64 	%rd69, %rd91, %rd100;
	mul.wide.s32 	%rd101, %r201, 4;
	add.s64 	%rd70, %rd91, %rd101;
	mul.wide.s32 	%rd102, %r202, 4;
	add.s64 	%rd71, %rd91, %rd102;
	mul.wide.s32 	%rd103, %r203, 4;
	add.s64 	%rd72, %rd91, %rd103;
	.loc	1 40 52                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:40:52
	and.pred  	%p37, %p89, %p94;
	and.pred  	%p38, %p90, %p94;
	and.pred  	%p39, %p91, %p94;
	and.pred  	%p40, %p92, %p94;
	and.pred  	%p57, %p93, %p1;
	and.pred  	%p58, %p5, %p93;
	and.pred  	%p59, %p9, %p93;
	and.pred  	%p60, %p13, %p93;
	.loc	1 40 44                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:40:44
	// begin inline asm
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	@%p37 ld.global.L1::evict_last.v4.b32 { %r24, %r26, %r28, %r30 }, [ %rd69 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r38, 0x0;
	@%p38 ld.global.L1::evict_last.v4.b32 { %r32, %r34, %r36, %r38 }, [ %rd70 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r40, 0x0;
	mov.u32 %r42, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r46, 0x0;
	@%p39 ld.global.L1::evict_last.v4.b32 { %r40, %r42, %r44, %r46 }, [ %rd71 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r48, 0x0;
	mov.u32 %r50, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r54, 0x0;
	@%p40 ld.global.L1::evict_last.v4.b32 { %r48, %r50, %r52, %r54 }, [ %rd72 + 0 ];
	// end inline asm
	shl.b32 	%r204, %r147, 10;
	and.b32  	%r205, %r204, 3072;
	or.b32  	%r206, %r152, %r205;
	and.b32  	%r207, %r153, 1020;
	shr.u32 	%r208, %r205, 4;
	mov.u32 	%r209, global_smem;
	add.s32 	%r210, %r209, %r208;
	shl.b32 	%r211, %r206, 2;
	add.s32 	%r23, %r210, %r211;
	mov.pred 	%p41, -1;
	// begin inline asm
	@%p41 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r212, %r205, 256;
	shr.u32 	%r213, %r212, 4;
	add.s32 	%r214, %r209, %r213;
	add.s32 	%r215, %r214, %r211;
	add.s32 	%r25, %r215, 1024;
	// begin inline asm
	@%p41 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	or.b32  	%r216, %r205, 512;
	shr.u32 	%r217, %r216, 4;
	add.s32 	%r218, %r209, %r217;
	add.s32 	%r219, %r218, %r211;
	add.s32 	%r27, %r219, 2048;
	// begin inline asm
	@%p41 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	or.b32  	%r220, %r205, 768;
	shr.u32 	%r221, %r220, 4;
	add.s32 	%r222, %r209, %r221;
	add.s32 	%r223, %r222, %r211;
	add.s32 	%r29, %r223, 3072;
	// begin inline asm
	@%p41 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r23, 256;
	// begin inline asm
	@%p41 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r215, 1280;
	// begin inline asm
	@%p41 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r219, 2304;
	// begin inline asm
	@%p41 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r223, 3328;
	// begin inline asm
	@%p41 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r23, 512;
	// begin inline asm
	@%p41 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r215, 1536;
	// begin inline asm
	@%p41 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r219, 2560;
	// begin inline asm
	@%p41 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r223, 3584;
	// begin inline asm
	@%p41 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r23, 768;
	// begin inline asm
	@%p41 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r215, 1792;
	// begin inline asm
	@%p41 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	add.s32 	%r51, %r219, 2816;
	// begin inline asm
	@%p41 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	add.s32 	%r53, %r223, 3840;
	// begin inline asm
	@%p41 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r224, %r148, 48;
	add.s32 	%r225, %r209, %r224;
	shl.b32 	%r226, %r207, 2;
	add.s32 	%r227, %r225, %r226;
	ld.shared.v4.f32 	{%f2, %f3, %f4, %f5}, [%r227];
	or.b32  	%r228, %r207, 1024;
	shr.u32 	%r229, %r228, 4;
	and.b32  	%r230, %r229, 112;
	add.s32 	%r231, %r209, %r230;
	add.s32 	%r232, %r231, %r226;
	ld.shared.v4.f32 	{%f6, %f7, %f8, %f9}, [%r232+4096];
	or.b32  	%r233, %r207, 2048;
	shr.u32 	%r234, %r233, 4;
	and.b32  	%r235, %r234, 176;
	add.s32 	%r236, %r209, %r235;
	add.s32 	%r237, %r236, %r226;
	ld.shared.v4.f32 	{%f10, %f11, %f12, %f13}, [%r237+8192];
	or.b32  	%r238, %r207, 3072;
	shr.u32 	%r239, %r238, 4;
	and.b32  	%r240, %r239, 240;
	add.s32 	%r241, %r209, %r240;
	add.s32 	%r242, %r241, %r226;
	ld.shared.v4.f32 	{%f14, %f15, %f16, %f17}, [%r242+12288];
	.loc	1 44 32                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:44:32
	shr.u64 	%rd104, %rd7, 61;
	and.b64  	%rd105, %rd104, 4;
	add.s64 	%rd106, %rd105, %rd7;
	shr.u64 	%rd107, %rd15, 61;
	and.b64  	%rd108, %rd107, 4;
	add.s64 	%rd109, %rd108, %rd15;
	shr.u64 	%rd110, %rd23, 61;
	and.b64  	%rd111, %rd110, 4;
	add.s64 	%rd112, %rd111, %rd23;
	shr.u64 	%rd113, %rd31, 61;
	and.b64  	%rd114, %rd113, 4;
	add.s64 	%rd115, %rd114, %rd31;
	.loc	1 47 32                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:47:32
	shr.u64 	%rd116, %rd39, 61;
	and.b64  	%rd117, %rd116, 4;
	add.s64 	%rd118, %rd117, %rd39;
	shr.u64 	%rd119, %rd47, 61;
	and.b64  	%rd120, %rd119, 4;
	add.s64 	%rd121, %rd120, %rd47;
	shr.u64 	%rd122, %rd55, 61;
	and.b64  	%rd123, %rd122, 4;
	add.s64 	%rd124, %rd123, %rd55;
	shr.u64 	%rd125, %rd63, 61;
	and.b64  	%rd126, %rd125, 4;
	add.s64 	%rd127, %rd126, %rd63;
	.loc	1 48 62                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:48:62
	shl.b32 	%r243, %r188, 4;
	and.b32  	%r244, %r243, -2048;
	.loc	1 48 30                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:48:30
	shl.b64 	%rd128, %rd118, 9;
	add.s64 	%rd129, %rd86, %rd128;
	mul.wide.s32 	%rd130, %r190, 4;
	add.s64 	%rd131, %rd129, %rd130;
	shl.b64 	%rd132, %rd106, 11;
	add.s64 	%rd133, %rd131, %rd132;
	mul.wide.s32 	%rd134, %r244, 4;
	add.s64 	%rd73, %rd133, %rd134;
	shl.b64 	%rd135, %rd121, 9;
	add.s64 	%rd136, %rd86, %rd135;
	add.s64 	%rd137, %rd136, %rd130;
	shl.b64 	%rd138, %rd109, 11;
	add.s64 	%rd139, %rd137, %rd138;
	add.s64 	%rd74, %rd139, %rd134;
	shl.b64 	%rd140, %rd124, 9;
	add.s64 	%rd141, %rd86, %rd140;
	add.s64 	%rd142, %rd141, %rd130;
	shl.b64 	%rd143, %rd112, 11;
	add.s64 	%rd144, %rd142, %rd143;
	add.s64 	%rd75, %rd144, %rd134;
	shl.b64 	%rd145, %rd127, 9;
	add.s64 	%rd146, %rd86, %rd145;
	add.s64 	%rd147, %rd146, %rd130;
	shl.b64 	%rd148, %rd115, 11;
	add.s64 	%rd149, %rd147, %rd148;
	add.s64 	%rd76, %rd149, %rd134;
	.loc	1 48 67                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:48:67
	// begin inline asm
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	@%p57 ld.global.v4.b32 { %r55, %r56, %r57, %r58 }, [ %rd73 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	mov.u32 %r62, 0x0;
	@%p58 ld.global.v4.b32 { %r59, %r60, %r61, %r62 }, [ %rd74 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	mov.u32 %r66, 0x0;
	@%p59 ld.global.v4.b32 { %r63, %r64, %r65, %r66 }, [ %rd75 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r67, 0x0;
	mov.u32 %r68, 0x0;
	mov.u32 %r69, 0x0;
	mov.u32 %r70, 0x0;
	@%p60 ld.global.v4.b32 { %r67, %r68, %r69, %r70 }, [ %rd76 + 0 ];
	// end inline asm
	.loc	1 49 19                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:49:19
	bar.sync 	0;
	shl.b32 	%r245, %r156, 2;
	add.s32 	%r71, %r209, %r245;
	// begin inline asm
	@%p41 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r246, %r155, 2;
	add.s32 	%r247, %r209, %r246;
	ld.shared.v4.f32 	{%f18, %f19, %f20, %f21}, [%r247];
	.loc	1 51 20                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:51:20
	add.f32 	%f22, %f1, 0f3727C5AC;
	.loc	1 52 27                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:52:27
	sqrt.approx.ftz.f32 	%f23, %f22;
	.loc	1 54 20                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:54:20
	mov.b32 	%r75, %f23;
	mov.b32 	%r74, 1065353216;
	// begin inline asm
	div.full.f32 %r77, %r74, %r75;
	// end inline asm
	.loc	1 57 20                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:57:20
	bar.sync 	0;
	// begin inline asm
	@%p41 st.shared.b32 [ %r71 + 0 ], %r77;
	// end inline asm
	bar.sync 	0;
	.loc	1 48 67                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:48:67
	mov.b32 	%f24, %r70;
	mov.b32 	%f25, %r69;
	mov.b32 	%f26, %r68;
	mov.b32 	%f27, %r67;
	mov.b32 	%f28, %r66;
	mov.b32 	%f29, %r65;
	mov.b32 	%f30, %r64;
	mov.b32 	%f31, %r63;
	mov.b32 	%f32, %r62;
	mov.b32 	%f33, %r61;
	mov.b32 	%f34, %r60;
	mov.b32 	%f35, %r59;
	mov.b32 	%f36, %r58;
	mov.b32 	%f37, %r57;
	mov.b32 	%f38, %r56;
	mov.b32 	%f39, %r55;
	.loc	1 49 19                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:49:19
	sub.f32 	%f40, %f39, %f18;
	sub.f32 	%f41, %f38, %f19;
	sub.f32 	%f42, %f37, %f20;
	sub.f32 	%f43, %f36, %f21;
	sub.f32 	%f44, %f35, %f18;
	sub.f32 	%f45, %f34, %f19;
	sub.f32 	%f46, %f33, %f20;
	sub.f32 	%f47, %f32, %f21;
	sub.f32 	%f48, %f31, %f18;
	sub.f32 	%f49, %f30, %f19;
	sub.f32 	%f50, %f29, %f20;
	sub.f32 	%f51, %f28, %f21;
	sub.f32 	%f52, %f27, %f18;
	sub.f32 	%f53, %f26, %f19;
	sub.f32 	%f54, %f25, %f20;
	sub.f32 	%f55, %f24, %f21;
	.loc	1 57 20                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:57:20
	ld.shared.v4.f32 	{%f56, %f57, %f58, %f59}, [%r247];
	mul.f32 	%f60, %f55, %f59;
	mul.f32 	%f61, %f54, %f58;
	mul.f32 	%f62, %f53, %f57;
	mul.f32 	%f63, %f52, %f56;
	mul.f32 	%f64, %f51, %f59;
	mul.f32 	%f65, %f50, %f58;
	mul.f32 	%f66, %f49, %f57;
	mul.f32 	%f67, %f48, %f56;
	mul.f32 	%f68, %f47, %f59;
	mul.f32 	%f69, %f46, %f58;
	mul.f32 	%f70, %f45, %f57;
	mul.f32 	%f71, %f44, %f56;
	mul.f32 	%f72, %f43, %f59;
	mul.f32 	%f73, %f42, %f58;
	mul.f32 	%f74, %f41, %f57;
	mul.f32 	%f75, %f40, %f56;
	.loc	1 58 20                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:58:20
	bar.sync 	0;
	// begin inline asm
	@%p41 st.shared.b32 [ %r71 + 0 ], %r79;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.f32 	{%f76, %f77, %f78, %f79}, [%r247];
	.loc	1 59 20                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:59:20
	bar.sync 	0;
	// begin inline asm
	@%p41 st.shared.b32 [ %r71 + 0 ], %r81;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.f32 	{%f80, %f81, %f82, %f83}, [%r247];
	fma.rn.f32 	%f84, %f75, %f76, %f80;
	fma.rn.f32 	%f85, %f74, %f77, %f81;
	fma.rn.f32 	%f86, %f73, %f78, %f82;
	fma.rn.f32 	%f87, %f72, %f79, %f83;
	fma.rn.f32 	%f88, %f71, %f76, %f80;
	fma.rn.f32 	%f89, %f70, %f77, %f81;
	fma.rn.f32 	%f90, %f69, %f78, %f82;
	fma.rn.f32 	%f91, %f68, %f79, %f83;
	fma.rn.f32 	%f92, %f67, %f76, %f80;
	fma.rn.f32 	%f93, %f66, %f77, %f81;
	fma.rn.f32 	%f94, %f65, %f78, %f82;
	fma.rn.f32 	%f95, %f64, %f79, %f83;
	fma.rn.f32 	%f96, %f63, %f76, %f80;
	fma.rn.f32 	%f97, %f62, %f77, %f81;
	fma.rn.f32 	%f98, %f61, %f78, %f82;
	fma.rn.f32 	%f99, %f60, %f79, %f83;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p95, %f99, 0f00000000;
	setp.lt.f32 	%p96, %f98, 0f00000000;
	setp.lt.f32 	%p97, %f97, 0f00000000;
	setp.lt.f32 	%p98, %f96, 0f00000000;
	setp.lt.f32 	%p99, %f95, 0f00000000;
	setp.lt.f32 	%p100, %f94, 0f00000000;
	setp.lt.f32 	%p101, %f93, 0f00000000;
	setp.lt.f32 	%p102, %f92, 0f00000000;
	setp.lt.f32 	%p103, %f91, 0f00000000;
	setp.lt.f32 	%p104, %f90, 0f00000000;
	setp.lt.f32 	%p105, %f89, 0f00000000;
	setp.lt.f32 	%p106, %f88, 0f00000000;
	setp.lt.f32 	%p107, %f87, 0f00000000;
	setp.lt.f32 	%p108, %f86, 0f00000000;
	setp.lt.f32 	%p109, %f85, 0f00000000;
	setp.lt.f32 	%p110, %f84, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f100, 0f00000000, %f84, %p110;
	selp.f32 	%f101, 0f00000000, %f85, %p109;
	selp.f32 	%f102, 0f00000000, %f86, %p108;
	selp.f32 	%f103, 0f00000000, %f87, %p107;
	selp.f32 	%f104, 0f00000000, %f88, %p106;
	selp.f32 	%f105, 0f00000000, %f89, %p105;
	selp.f32 	%f106, 0f00000000, %f90, %p104;
	selp.f32 	%f107, 0f00000000, %f91, %p103;
	selp.f32 	%f108, 0f00000000, %f92, %p102;
	selp.f32 	%f109, 0f00000000, %f93, %p101;
	selp.f32 	%f110, 0f00000000, %f94, %p100;
	selp.f32 	%f111, 0f00000000, %f95, %p99;
	selp.f32 	%f112, 0f00000000, %f96, %p98;
	selp.f32 	%f113, 0f00000000, %f97, %p97;
	selp.f32 	%f114, 0f00000000, %f98, %p96;
	selp.f32 	%f115, 0f00000000, %f99, %p95;
$L__tmp2:
	.loc	1 62 20                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:62:20
	add.f32 	%f116, %f2, %f100;
	add.f32 	%f117, %f3, %f101;
	add.f32 	%f118, %f4, %f102;
	add.f32 	%f119, %f5, %f103;
	add.f32 	%f120, %f6, %f104;
	add.f32 	%f121, %f7, %f105;
	add.f32 	%f122, %f8, %f106;
	add.f32 	%f123, %f9, %f107;
	add.f32 	%f124, %f10, %f108;
	add.f32 	%f125, %f11, %f109;
	add.f32 	%f126, %f12, %f110;
	add.f32 	%f127, %f13, %f111;
	add.f32 	%f128, %f14, %f112;
	add.f32 	%f129, %f15, %f113;
	add.f32 	%f130, %f16, %f114;
	add.f32 	%f131, %f17, %f115;
	.loc	1 63 25                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:63:25
	add.s64 	%rd77, %rd92, %rd100;
	add.s64 	%rd78, %rd92, %rd101;
	add.s64 	%rd79, %rd92, %rd102;
	add.s64 	%rd80, %rd92, %rd103;
	.loc	1 63 45                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:63:45
	bar.sync 	0;
	shl.b32 	%r248, %r147, 6;
	and.b32  	%r249, %r248, 4032;
	or.b32  	%r250, %r164, %r249;
	shr.u32 	%r251, %r249, 2;
	add.s32 	%r252, %r209, %r251;
	shl.b32 	%r253, %r250, 2;
	add.s32 	%r82, %r252, %r253;
	mov.b32 	%r83, %f100;
	// begin inline asm
	@%p41 st.shared.b32 [ %r82 + 0 ], %r83;
	// end inline asm
	or.b32  	%r254, %r249, 16;
	shr.u32 	%r255, %r254, 2;
	add.s32 	%r256, %r209, %r255;
	add.s32 	%r257, %r256, %r253;
	add.s32 	%r84, %r257, 64;
	mov.b32 	%r85, %f101;
	// begin inline asm
	@%p41 st.shared.b32 [ %r84 + 0 ], %r85;
	// end inline asm
	or.b32  	%r258, %r249, 32;
	shr.u32 	%r259, %r258, 2;
	add.s32 	%r260, %r209, %r259;
	add.s32 	%r261, %r260, %r253;
	add.s32 	%r86, %r261, 128;
	mov.b32 	%r87, %f102;
	// begin inline asm
	@%p41 st.shared.b32 [ %r86 + 0 ], %r87;
	// end inline asm
	or.b32  	%r262, %r249, 48;
	shr.u32 	%r263, %r262, 2;
	add.s32 	%r264, %r209, %r263;
	add.s32 	%r265, %r264, %r253;
	add.s32 	%r88, %r265, 192;
	mov.b32 	%r89, %f103;
	// begin inline asm
	@%p41 st.shared.b32 [ %r88 + 0 ], %r89;
	// end inline asm
	add.s32 	%r90, %r82, 16;
	mov.b32 	%r91, %f104;
	// begin inline asm
	@%p41 st.shared.b32 [ %r90 + 0 ], %r91;
	// end inline asm
	add.s32 	%r92, %r257, 80;
	mov.b32 	%r93, %f105;
	// begin inline asm
	@%p41 st.shared.b32 [ %r92 + 0 ], %r93;
	// end inline asm
	add.s32 	%r94, %r261, 144;
	mov.b32 	%r95, %f106;
	// begin inline asm
	@%p41 st.shared.b32 [ %r94 + 0 ], %r95;
	// end inline asm
	add.s32 	%r96, %r265, 208;
	mov.b32 	%r97, %f107;
	// begin inline asm
	@%p41 st.shared.b32 [ %r96 + 0 ], %r97;
	// end inline asm
	add.s32 	%r98, %r82, 32;
	mov.b32 	%r99, %f108;
	// begin inline asm
	@%p41 st.shared.b32 [ %r98 + 0 ], %r99;
	// end inline asm
	add.s32 	%r100, %r257, 96;
	mov.b32 	%r101, %f109;
	// begin inline asm
	@%p41 st.shared.b32 [ %r100 + 0 ], %r101;
	// end inline asm
	add.s32 	%r102, %r261, 160;
	mov.b32 	%r103, %f110;
	// begin inline asm
	@%p41 st.shared.b32 [ %r102 + 0 ], %r103;
	// end inline asm
	add.s32 	%r104, %r265, 224;
	mov.b32 	%r105, %f111;
	// begin inline asm
	@%p41 st.shared.b32 [ %r104 + 0 ], %r105;
	// end inline asm
	add.s32 	%r106, %r82, 48;
	mov.b32 	%r107, %f112;
	// begin inline asm
	@%p41 st.shared.b32 [ %r106 + 0 ], %r107;
	// end inline asm
	add.s32 	%r108, %r257, 112;
	mov.b32 	%r109, %f113;
	// begin inline asm
	@%p41 st.shared.b32 [ %r108 + 0 ], %r109;
	// end inline asm
	add.s32 	%r110, %r261, 176;
	mov.b32 	%r111, %f114;
	// begin inline asm
	@%p41 st.shared.b32 [ %r110 + 0 ], %r111;
	// end inline asm
	add.s32 	%r112, %r265, 240;
	mov.b32 	%r113, %f115;
	// begin inline asm
	@%p41 st.shared.b32 [ %r112 + 0 ], %r113;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r266, %r147, 252;
	add.s32 	%r267, %r209, %r266;
	add.s32 	%r268, %r267, %r226;
	ld.shared.u32 	%r114, [%r268];
	ld.shared.u32 	%r115, [%r268+4];
	ld.shared.u32 	%r116, [%r268+8];
	ld.shared.u32 	%r117, [%r268+12];
	shr.u32 	%r269, %r228, 2;
	and.b32  	%r270, %r269, 508;
	add.s32 	%r271, %r209, %r270;
	add.s32 	%r272, %r271, %r226;
	ld.shared.u32 	%r118, [%r272+4096];
	ld.shared.u32 	%r119, [%r272+4100];
	ld.shared.u32 	%r120, [%r272+4104];
	ld.shared.u32 	%r121, [%r272+4108];
	shr.u32 	%r273, %r233, 2;
	and.b32  	%r274, %r273, 764;
	add.s32 	%r275, %r209, %r274;
	add.s32 	%r276, %r275, %r226;
	ld.shared.u32 	%r122, [%r276+8192];
	ld.shared.u32 	%r123, [%r276+8196];
	ld.shared.u32 	%r124, [%r276+8200];
	ld.shared.u32 	%r125, [%r276+8204];
	shr.u32 	%r277, %r238, 2;
	and.b32  	%r278, %r277, 1020;
	add.s32 	%r279, %r209, %r278;
	add.s32 	%r280, %r279, %r226;
	ld.shared.u32 	%r126, [%r280+12288];
	ld.shared.u32 	%r127, [%r280+12292];
	ld.shared.u32 	%r128, [%r280+12296];
	ld.shared.u32 	%r129, [%r280+12300];
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd77 + 0 ], { %r114, %r115, %r116, %r117 };
	// end inline asm
	// begin inline asm
	@%p38 st.global.v4.b32 [ %rd78 + 0 ], { %r118, %r119, %r120, %r121 };
	// end inline asm
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd79 + 0 ], { %r122, %r123, %r124, %r125 };
	// end inline asm
	// begin inline asm
	@%p40 st.global.v4.b32 [ %rd80 + 0 ], { %r126, %r127, %r128, %r129 };
	// end inline asm
	.loc	1 64 34                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:34
	shl.b32 	%r281, %r165, 7;
	shl.b32 	%r282, %r166, 7;
	shl.b32 	%r283, %r167, 7;
	shl.b32 	%r284, %r168, 7;
	.loc	1 64 30                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:30
	add.s32 	%r285, %r281, %r190;
	.loc	1 64 39                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:39
	add.s32 	%r286, %r285, %r244;
	.loc	1 64 30                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:30
	add.s32 	%r287, %r244, %r190;
	.loc	1 64 39                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:39
	add.s32 	%r288, %r287, %r282;
	add.s32 	%r289, %r287, %r283;
	add.s32 	%r290, %r287, %r284;
	.loc	1 64 25                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:25
	mul.wide.s32 	%rd150, %r286, 4;
	add.s64 	%rd81, %rd93, %rd150;
	mul.wide.s32 	%rd151, %r288, 4;
	add.s64 	%rd82, %rd93, %rd151;
	mul.wide.s32 	%rd152, %r289, 4;
	add.s64 	%rd83, %rd93, %rd152;
	mul.wide.s32 	%rd153, %r290, 4;
	add.s64 	%rd84, %rd93, %rd153;
	.loc	1 64 56                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:56
	mov.b32 	%r130, %f116;
	mov.b32 	%r131, %f117;
	mov.b32 	%r132, %f118;
	mov.b32 	%r133, %f119;
	// begin inline asm
	@%p57 st.global.v4.b32 [ %rd81 + 0 ], { %r130, %r131, %r132, %r133 };
	// end inline asm
	mov.b32 	%r134, %f120;
	mov.b32 	%r135, %f121;
	mov.b32 	%r136, %f122;
	mov.b32 	%r137, %f123;
	// begin inline asm
	@%p58 st.global.v4.b32 [ %rd82 + 0 ], { %r134, %r135, %r136, %r137 };
	// end inline asm
	mov.b32 	%r138, %f124;
	mov.b32 	%r139, %f125;
	mov.b32 	%r140, %f126;
	mov.b32 	%r141, %f127;
	// begin inline asm
	@%p59 st.global.v4.b32 [ %rd83 + 0 ], { %r138, %r139, %r140, %r141 };
	// end inline asm
	mov.b32 	%r142, %f128;
	mov.b32 	%r143, %f129;
	mov.b32 	%r144, %f130;
	mov.b32 	%r145, %f131;
	// begin inline asm
	@%p60 st.global.v4.b32 [ %rd84 + 0 ], { %r142, %r143, %r144, %r145 };
	// end inline asm
	.loc	1 64 4                          // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bm/cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 223                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 109
.b8 54
.b8 53
.b8 112
.b8 52
.b8 100
.b8 121
.b8 99
.b8 50
.b8 108
.b8 119
.b8 97
.b8 115
.b8 100
.b8 108
.b8 102
.b8 99
.b8 105
.b8 108
.b8 121
.b8 50
.b8 55
.b8 97
.b8 118
.b8 112
.b8 105
.b8 118
.b8 116
.b8 106
.b8 53
.b8 111
.b8 112
.b8 110
.b8 106
.b8 113
.b8 104
.b8 110
.b8 115
.b8 112
.b8 102
.b8 53
.b8 97
.b8 50
.b8 112
.b8 112
.b8 115
.b8 100
.b8 107
.b8 112
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x51 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb4:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 61                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
