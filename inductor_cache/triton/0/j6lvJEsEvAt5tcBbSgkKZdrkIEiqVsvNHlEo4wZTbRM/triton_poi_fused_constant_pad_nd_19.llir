; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_constant_pad_nd_19(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %5, 1, !dbg !13
  %11 = or disjoint i32 %5, 2, !dbg !13
  %12 = or disjoint i32 %5, 3, !dbg !13
  %13 = ashr exact i32 %9, 2, !dbg !14
  %14 = srem i32 %13, 3, !dbg !15
  %15 = srem i32 %10, 4, !dbg !16
  %16 = srem i32 %11, 4, !dbg !16
  %17 = srem i32 %12, 4, !dbg !16
  %18 = sdiv i32 %9, 12, !dbg !17
  %19 = icmp sgt i32 %14, 0, !dbg !18
  %20 = icmp eq i32 %15, 1, !dbg !19
  %21 = and i1 %20, %19, !dbg !19
  %22 = icmp eq i32 %16, 2, !dbg !19
  %23 = and i1 %22, %19, !dbg !19
  %24 = shl nsw i32 %14, 1, !dbg !20
  %25 = shl nsw i32 %18, 2, !dbg !21
  %26 = add nsw i32 %25, -3, !dbg !22
  %27 = add nsw i32 %26, %24, !dbg !23
  %28 = add nsw i32 %26, %15, !dbg !22
  %29 = add nsw i32 %28, %24, !dbg !23
  %30 = add nsw i32 %26, %16, !dbg !22
  %31 = add nsw i32 %30, %24, !dbg !23
  %32 = add nsw i32 %26, %17, !dbg !22
  %33 = add nsw i32 %32, %24, !dbg !23
  %34 = sext i32 %27 to i64, !dbg !24
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !24
  %36 = sext i32 %29 to i64, !dbg !24
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !24
  %38 = sext i32 %31 to i64, !dbg !24
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !24
  %40 = sext i32 %33 to i64, !dbg !24
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !24
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 false, i32 0, i1 false) #1, !dbg !25
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %21, i32 0, i1 %21) #1, !dbg !25
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %23, i32 0, i1 %23) #1, !dbg !25
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 false, i32 0, i1 false) #1, !dbg !25
  %46 = sext i32 %9 to i64, !dbg !26
  %47 = getelementptr float, ptr addrspace(1) %1, i64 %46, !dbg !26
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %42, i32 %43, i32 %44, i32 %45, ptr addrspace(1) %47, i1 true) #1, !dbg !27
  ret void, !dbg !28
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cwyldlyayw3rveufyitsaer35ayfq2lpo2lo4utydcso2t3d4ous.py", directory: "inductor_cache/wy")
!4 = !{ptr @triton_poi_fused_constant_pad_nd_19, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_constant_pad_nd_19, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_constant_pad_nd_19", linkageName: "triton_poi_fused_constant_pad_nd_19", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 26, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 30, column: 19, scope: !7)
!19 = !DILocation(line: 36, column: 18, scope: !7)
!20 = !DILocation(line: 37, column: 44, scope: !7)
!21 = !DILocation(line: 37, column: 51, scope: !7)
!22 = !DILocation(line: 37, column: 42, scope: !7)
!23 = !DILocation(line: 37, column: 49, scope: !7)
!24 = !DILocation(line: 37, column: 30, scope: !7)
!25 = !DILocation(line: 37, column: 56, scope: !7)
!26 = !DILocation(line: 38, column: 25, scope: !7)
!27 = !DILocation(line: 38, column: 36, scope: !7)
!28 = !DILocation(line: 38, column: 4, scope: !7)
