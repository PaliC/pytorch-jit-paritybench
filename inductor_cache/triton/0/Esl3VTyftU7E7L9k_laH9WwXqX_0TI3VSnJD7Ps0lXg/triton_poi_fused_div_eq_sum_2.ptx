//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_div_eq_sum_2 // -- Begin function triton_poi_fused_div_eq_sum_2
                                        // @triton_poi_fused_div_eq_sum_2
.visible .entry triton_poi_fused_div_eq_sum_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_eq_sum_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_eq_sum_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_eq_sum_2_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<14>;
	.reg .b32 	%r<13>;
	.reg .f32 	%f<9>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:19:0

// %bb.0:
	ld.param.u64 	%rd1, [triton_poi_fused_div_eq_sum_2_param_0];
	mov.pred 	%p1, -1;
$L__tmp0:
	.loc	1 24 19                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:24:19
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd6, [triton_poi_fused_div_eq_sum_2_param_1];
	mov.b32 	%f1, %r1;
	ld.param.u64 	%rd13, [triton_poi_fused_div_eq_sum_2_param_2];
	.loc	1 26 30                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:26:30
	add.s64 	%rd2, %rd1, 4;
	.loc	1 26 19                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:26:19
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r2;
	.loc	1 28 30                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:28:30
	add.s64 	%rd3, %rd1, 8;
	.loc	1 28 19                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:28:19
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r3;
	.loc	1 30 30                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:30:30
	add.s64 	%rd4, %rd1, 12;
	.loc	1 30 19                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:30:19
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r4;
	.loc	1 32 20                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:32:20
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p1 ld.global.b64 { %rd5 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 34 31                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:34:31
	add.s64 	%rd8, %rd6, 8;
	.loc	1 34 20                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:34:20
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p1 ld.global.b64 { %rd7 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 36 31                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:36:31
	add.s64 	%rd10, %rd6, 16;
	.loc	1 36 20                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:36:20
	// begin inline asm
	mov.u64 %rd9, 0x0;
	@%p1 ld.global.b64 { %rd9 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 38 31                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:38:31
	add.s64 	%rd12, %rd6, 24;
	.loc	1 38 20                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:38:20
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p1 ld.global.b64 { %rd11 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 40 18                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:40:18
	add.f32 	%f5, %f1, %f2;
	.loc	1 41 18                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:41:18
	add.f32 	%f6, %f5, %f3;
	.loc	1 42 19                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:42:19
	add.f32 	%f7, %f6, %f4;
	.loc	1 49 21                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:49:21
	setp.ne.s64 	%p10, %rd9, -100;
	selp.u16 	%rs1, 1, 0, %p10;
	shl.b16 	%rs2, %rs1, 2;
	setp.ne.s64 	%p11, %rd11, -100;
	selp.u16 	%rs3, -1, 0, %p11;
	shl.b16 	%rs4, %rs3, 3;
	or.b16  	%rs5, %rs4, %rs2;
	setp.ne.s64 	%p12, %rd5, -100;
	selp.u16 	%rs6, -1, 0, %p12;
	shl.b16 	%rs7, %rs6, 1;
	setp.ne.s64 	%p13, %rd7, -100;
	selp.u16 	%rs8, 1, 0, %p13;
	or.b16  	%rs9, %rs8, %rs7;
	and.b16  	%rs10, %rs9, 3;
	or.b16  	%rs11, %rs10, %rs5;
	.loc	1 63 20                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:63:20
	and.b16  	%rs12, %rs11, 15;
	cvt.u32.u16 	%r9, %rs12;
	popc.b32 	%r10, %r9;
	cvt.u16.u32 	%rs13, %r10;
	.loc	1 64 21                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:64:21
	cvt.rn.f32.u16 	%f8, %rs13;
	.loc	1 65 20                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:65:20
	mov.b32 	%r7, %f8;
	mov.b32 	%r6, %f7;
	// begin inline asm
	div.full.f32 %r8, %r6, %r7;
	// end inline asm
	.loc	1 66 65                         // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:66:65
	mov.u32 	%r11, %tid.x;
	and.b32  	%r12, %r11, 31;
	setp.eq.s32 	%p9, %r12, 0;
	// begin inline asm
	@%p9 st.global.b32 [ %rd13 + 0 ], { %r8 };
	// end inline asm
	.loc	1 66 4                          // czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py:66:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/zr/czrpihhyt3rvwsxciv4yhz4eif2g2omtq65f4hiet7cspubtrloa.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 114
.b8 112
.b8 105
.b8 104
.b8 104
.b8 121
.b8 116
.b8 51
.b8 114
.b8 118
.b8 119
.b8 115
.b8 120
.b8 99
.b8 105
.b8 118
.b8 52
.b8 121
.b8 104
.b8 122
.b8 52
.b8 101
.b8 105
.b8 102
.b8 50
.b8 103
.b8 50
.b8 111
.b8 109
.b8 116
.b8 113
.b8 54
.b8 53
.b8 102
.b8 52
.b8 104
.b8 105
.b8 101
.b8 116
.b8 55
.b8 99
.b8 115
.b8 112
.b8 117
.b8 98
.b8 116
.b8 114
.b8 108
.b8 111
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 114
.b8 0
	}
	.section	.debug_macinfo	{	}
