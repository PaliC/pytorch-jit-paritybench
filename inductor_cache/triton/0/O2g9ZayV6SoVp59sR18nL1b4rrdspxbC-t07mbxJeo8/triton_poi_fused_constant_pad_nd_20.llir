; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_constant_pad_nd_20(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = or disjoint i32 %9, 2, !dbg !13
  %12 = or disjoint i32 %9, 3, !dbg !13
  %13 = insertelement <4 x i32> poison, i32 %12, i64 0, !dbg !14
  %14 = insertelement <4 x i32> %13, i32 %11, i64 1, !dbg !14
  %15 = insertelement <4 x i32> %14, i32 %10, i64 2, !dbg !14
  %16 = insertelement <4 x i32> %15, i32 %9, i64 3, !dbg !14
  %.frozen = freeze <4 x i32> %16, !dbg !14
  %17 = sdiv <4 x i32> %.frozen, splat (i32 3), !dbg !14
  %18 = srem <4 x i32> %17, splat (i32 4), !dbg !15
  %19 = mul <4 x i32> %17, splat (i32 3), !dbg !16
  %.decomposed = sub <4 x i32> %.frozen, %19, !dbg !16
  %20 = sdiv i32 %9, 12, !dbg !17
  %21 = icmp sgt <4 x i32> %.decomposed, zeroinitializer, !dbg !18
  %22 = add nsw <4 x i32> %18, splat (i32 -1), !dbg !19
  %23 = icmp ult <4 x i32> %22, splat (i32 2), !dbg !19
  %24 = and <4 x i1> %21, %23, !dbg !20
  %25 = extractelement <4 x i1> %24, i64 3, !dbg !20
  %26 = and <4 x i1> %21, %23, !dbg !20
  %27 = extractelement <4 x i1> %26, i64 2, !dbg !20
  %28 = and <4 x i1> %21, %23, !dbg !20
  %29 = extractelement <4 x i1> %28, i64 1, !dbg !20
  %30 = and <4 x i1> %21, %23, !dbg !20
  %31 = extractelement <4 x i1> %30, i64 0, !dbg !20
  %32 = extractelement <4 x i32> %18, i64 3, !dbg !21
  %33 = shl nsw i32 %32, 1, !dbg !21
  %34 = extractelement <4 x i32> %18, i64 2, !dbg !21
  %35 = shl nsw i32 %34, 1, !dbg !21
  %36 = extractelement <4 x i32> %18, i64 1, !dbg !21
  %37 = shl nsw i32 %36, 1, !dbg !21
  %38 = extractelement <4 x i32> %18, i64 0, !dbg !21
  %39 = shl nsw i32 %38, 1, !dbg !21
  %40 = shl nsw i32 %20, 2, !dbg !22
  %41 = add nsw i32 %40, -3, !dbg !23
  %42 = extractelement <4 x i32> %.decomposed, i64 3, !dbg !24
  %43 = add nsw i32 %41, %42, !dbg !24
  %44 = add nsw i32 %43, %33, !dbg !25
  %45 = extractelement <4 x i32> %.decomposed, i64 2, !dbg !24
  %46 = add nsw i32 %41, %45, !dbg !24
  %47 = add nsw i32 %46, %35, !dbg !25
  %48 = extractelement <4 x i32> %.decomposed, i64 1, !dbg !24
  %49 = add nsw i32 %41, %48, !dbg !24
  %50 = add nsw i32 %49, %37, !dbg !25
  %51 = extractelement <4 x i32> %.decomposed, i64 0, !dbg !24
  %52 = add nsw i32 %41, %51, !dbg !24
  %53 = add nsw i32 %52, %39, !dbg !25
  %54 = sext i32 %44 to i64, !dbg !26
  %55 = getelementptr float, ptr addrspace(1) %0, i64 %54, !dbg !26
  %56 = sext i32 %47 to i64, !dbg !26
  %57 = getelementptr float, ptr addrspace(1) %0, i64 %56, !dbg !26
  %58 = sext i32 %50 to i64, !dbg !26
  %59 = getelementptr float, ptr addrspace(1) %0, i64 %58, !dbg !26
  %60 = sext i32 %53 to i64, !dbg !26
  %61 = getelementptr float, ptr addrspace(1) %0, i64 %60, !dbg !26
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %25, i32 0, i1 %25) #1, !dbg !27
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %57, i1 %27, i32 0, i1 %27) #1, !dbg !27
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %59, i1 %29, i32 0, i1 %29) #1, !dbg !27
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %61, i1 %31, i32 0, i1 %31) #1, !dbg !27
  %66 = sext i32 %9 to i64, !dbg !28
  %67 = getelementptr float, ptr addrspace(1) %1, i64 %66, !dbg !28
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %62, i32 %63, i32 %64, i32 %65, ptr addrspace(1) %67, i1 true) #1, !dbg !29
  ret void, !dbg !30
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c47rtubxezjcgg3dy3fssd3jd7kk5mr7bnjbog4gtz7ezgwhkuhc.py", directory: "inductor_cache/47")
!4 = !{ptr @triton_poi_fused_constant_pad_nd_20, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_constant_pad_nd_20, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_constant_pad_nd_20", linkageName: "triton_poi_fused_constant_pad_nd_20", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 26, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 34, column: 19, scope: !7)
!19 = !DILocation(line: 35, column: 18, scope: !7)
!20 = !DILocation(line: 36, column: 18, scope: !7)
!21 = !DILocation(line: 37, column: 44, scope: !7)
!22 = !DILocation(line: 37, column: 51, scope: !7)
!23 = !DILocation(line: 37, column: 37, scope: !7)
!24 = !DILocation(line: 37, column: 42, scope: !7)
!25 = !DILocation(line: 37, column: 49, scope: !7)
!26 = !DILocation(line: 37, column: 30, scope: !7)
!27 = !DILocation(line: 37, column: 56, scope: !7)
!28 = !DILocation(line: 38, column: 25, scope: !7)
!29 = !DILocation(line: 38, column: 36, scope: !7)
!30 = !DILocation(line: 38, column: 4, scope: !7)
