//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_mean_10 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_mean_10
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_mean_10
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_mean_10(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_6,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_7,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<27>;
	.reg .b32 	%r<64>;
	.reg .f32 	%f<32>;
	.reg .b64 	%rd<30>;
	.loc	1 19 0                          // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd20, [triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_0];
	ld.param.u64 	%rd21, [triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_1];
$L__tmp0:
	.loc	1 23 28                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:23:33
	shl.b32 	%r39, %r1, 5;
	ld.param.u64 	%rd22, [triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_2];
	ld.param.u64 	%rd23, [triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_3];
	.loc	1 24 44                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:24:44
	mov.u32 	%r40, %tid.x;
	ld.param.u64 	%rd24, [triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_4];
	bfe.u32 	%r41, %r40, 2, 5;
	ld.param.u64 	%rd25, [triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_5];
	.loc	1 24 23                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:24:23
	or.b32  	%r42, %r39, %r41;
	ld.param.u64 	%rd26, [triton_per_fused__native_batch_norm_legit_no_training_mean_10_param_6];
	.loc	1 25 21                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:25:21
	setp.lt.s32 	%p1, %r42, 160;
	.loc	1 26 34                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:26:34
	shl.b32 	%r43, %r40, 2;
	and.b32  	%r44, %r43, 12;
	.loc	1 31 19                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:31:19
	mul.hi.s32 	%r45, %r42, 1717986919;
	shr.u32 	%r46, %r45, 31;
	shr.s32 	%r47, %r45, 4;
	add.s32 	%r48, %r47, %r46;
	mul.lo.s32 	%r49, %r48, 40;
	sub.s32 	%r50, %r42, %r49;
	.loc	1 32 38                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:32:38
	shl.b32 	%r51, %r42, 4;
	.loc	1 32 35                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:32:35
	or.b32  	%r52, %r51, %r44;
	.loc	1 32 30                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:32:30
	mul.wide.s32 	%rd27, %r52, 4;
	add.s64 	%rd1, %rd21, %rd27;
	mov.b32 	%r6, 0;
	.loc	1 32 43                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:32:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 33 30                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:33:30
	mul.wide.s32 	%rd28, %r50, 4;
	add.s64 	%rd2, %rd22, %rd28;
	.loc	1 33 35                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:33:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:34:30
	add.s64 	%rd6, %rd23, %rd28;
	.loc	1 34 35                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:34:35
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r17;
	.loc	1 35 31                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:35:31
	add.s64 	%rd10, %rd24, %rd28;
	.loc	1 35 36                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:35:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 36 31                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:36:31
	add.s64 	%rd14, %rd25, %rd28;
	.loc	1 36 36                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:36:36
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 39 18                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:39:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 40 26                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:40:26
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 32 43                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:32:43
	mov.b32 	%f4, %r5;
	.loc	1 33 35                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:33:35
	mov.b32 	%f5, %r13;
	.loc	1 37 18                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:37:18
	sub.f32 	%f6, %f4, %f5;
	.loc	1 32 43                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:32:43
	mov.b32 	%f7, %r4;
	.loc	1 37 18                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:37:18
	sub.f32 	%f8, %f7, %f5;
	.loc	1 32 43                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:32:43
	mov.b32 	%f9, %r3;
	.loc	1 37 18                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:37:18
	sub.f32 	%f10, %f9, %f5;
	.loc	1 32 43                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:32:43
	mov.b32 	%f11, %r2;
	.loc	1 37 18                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:37:18
	sub.f32 	%f12, %f11, %f5;
	.loc	1 36 36                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:36:36
	mov.b32 	%f13, %r25;
	.loc	1 35 36                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:35:36
	mov.b32 	%f14, %r21;
	.loc	1 24 44                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:24:44
	and.b32  	%r53, %r40, 31;
	.loc	1 24 23                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:24:23
	or.b32  	%r54, %r39, %r53;
	.loc	1 25 21                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:25:21
	setp.lt.s32 	%p25, %r54, 160;
	.loc	1 42 18                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:42:18
	mov.b32 	%r28, %f3;
	mov.b32 	%r27, 1065353216;
	// begin inline asm
	div.full.f32 %r26, %r27, %r28;
	// end inline asm
	mov.b32 	%f15, %r26;
	.loc	1 45 19                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:45:19
	mul.f32 	%f16, %f12, %f15;
	mul.f32 	%f17, %f10, %f15;
	mul.f32 	%f18, %f8, %f15;
	mul.f32 	%f19, %f6, %f15;
	.loc	1 47 20                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:47:20
	fma.rn.f32 	%f20, %f16, %f14, %f13;
	fma.rn.f32 	%f21, %f17, %f14, %f13;
	fma.rn.f32 	%f22, %f18, %f14, %f13;
	fma.rn.f32 	%f23, %f19, %f14, %f13;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f20, %f21;
	add.f32 	%f25, %f22, %f24;
	add.f32 	%f26, %f23, %f25;
	selp.f32 	%f27, %f26, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f27;
	shfl.sync.bfly.b32	%r56, %r55, 2, 31, -1;
	mov.b32 	%f28, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f29;
	shfl.sync.bfly.b32	%r58, %r57, 1, 31, -1;
	mov.b32 	%f30, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
$L__tmp2:
	.loc	1 52 20                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:52:20
	shl.b32 	%r59, %r41, 2;
	mov.u32 	%r60, global_smem;
	add.s32 	%r29, %r60, %r59;
	mov.b32 	%r30, %f31;
	mov.pred 	%p22, -1;
	// begin inline asm
	@%p22 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r61, %r53, 2;
	add.s32 	%r62, %r60, %r61;
	ld.shared.u32 	%r32, [%r62];
	mov.b32 	%r33, 1098907648;
	// begin inline asm
	div.full.f32 %r38, %r32, %r33;
	// end inline asm
	.loc	1 53 25                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:53:25
	add.s64 	%rd18, %rd26, %rd27;
	.loc	1 53 45                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:53:45
	mov.b32 	%r34, %f20;
	mov.b32 	%r35, %f21;
	mov.b32 	%r36, %f22;
	mov.b32 	%r37, %f23;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd18 + 0 ], { %r34, %r35, %r36, %r37 };
	// end inline asm
	.loc	1 54 4                          // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:54:4
	bar.sync 	0;
	.loc	1 55 28                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:55:28
	mul.wide.s32 	%rd29, %r54, 4;
	add.s64 	%rd19, %rd20, %rd29;
	.loc	1 55 40                         // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:55:40
	and.b32  	%r63, %r40, 96;
	setp.eq.s32 	%p26, %r63, 0;
	and.pred  	%p24, %p26, %p25;
	// begin inline asm
	@%p24 st.global.b32 [ %rd19 + 0 ], { %r38 };
	// end inline asm
	.loc	1 55 4                          // ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py:55:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/co/ccogasx3ysqxoh52fdo5zg6cra2icmsrjst2qhvr4jbspgn36orv.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 206                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 111
.b8 103
.b8 97
.b8 115
.b8 120
.b8 51
.b8 121
.b8 115
.b8 113
.b8 120
.b8 111
.b8 104
.b8 53
.b8 50
.b8 102
.b8 100
.b8 111
.b8 53
.b8 122
.b8 103
.b8 54
.b8 99
.b8 114
.b8 97
.b8 50
.b8 105
.b8 99
.b8 109
.b8 115
.b8 114
.b8 106
.b8 115
.b8 116
.b8 50
.b8 113
.b8 104
.b8 118
.b8 114
.b8 52
.b8 106
.b8 98
.b8 115
.b8 112
.b8 103
.b8 110
.b8 51
.b8 54
.b8 111
.b8 114
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 111
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x40 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 49
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa3:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
