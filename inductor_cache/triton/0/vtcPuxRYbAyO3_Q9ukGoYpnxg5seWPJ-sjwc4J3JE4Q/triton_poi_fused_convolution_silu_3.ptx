//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_silu_3 // -- Begin function triton_poi_fused_convolution_silu_3
                                        // @triton_poi_fused_convolution_silu_3
.visible .entry triton_poi_fused_convolution_silu_3(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_silu_3_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_silu_3_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_silu_3_param_2,
	.param .u32 triton_poi_fused_convolution_silu_3_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<44>;
	.reg .f32 	%f<38>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_convolution_silu_3_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_convolution_silu_3_param_1];
$L__tmp0:
	.loc	1 21 28                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:21:33
	shl.b32 	%r30, %r1, 9;
	ld.param.u64 	%rd10, [triton_poi_fused_convolution_silu_3_param_2];
	.loc	1 22 36                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:22:36
	mov.u32 	%r31, %tid.x;
	shl.b32 	%r32, %r31, 2;
	and.b32  	%r33, %r32, 508;
	.loc	1 22 23                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:22:23
	or.b32  	%r34, %r30, %r33;
	.loc	1 25 21                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:25:21
	bfe.s32 	%r35, %r1, 22, 1;
	shr.u32 	%r36, %r35, 26;
	add.s32 	%r37, %r34, %r36;
	shr.s32 	%r38, %r37, 6;
	.loc	1 25 27                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:25:27
	shr.s32 	%r39, %r37, 31;
	shr.u32 	%r40, %r39, 24;
	add.s32 	%r41, %r38, %r40;
	and.b32  	%r42, %r41, -256;
	sub.s32 	%r43, %r38, %r42;
	.loc	1 26 34                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:26:34
	mul.wide.s32 	%rd11, %r34, 4;
	add.s64 	%rd1, %rd8, %rd11;
	mov.pred 	%p1, -1;
	.loc	1 26 39                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:26:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r2;
	mov.b32 	%f10, %r3;
	mov.b32 	%f11, %r4;
	mov.b32 	%f12, %r5;
	.loc	1 27 30                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:27:30
	mul.wide.s32 	%rd12, %r43, 4;
	add.s64 	%rd2, %rd9, %rd12;
	.loc	1 27 35                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:27:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r7;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r9;
	.loc	1 28 18                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:28:18
	add.f32 	%f17, %f9, %f13;
	add.f32 	%f18, %f10, %f14;
	add.f32 	%f19, %f11, %f15;
	add.f32 	%f20, %f12, %f16;
	mov.f32 	%f21, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f22, %f21, %f17;
	sub.f32 	%f23, %f21, %f18;
	sub.f32 	%f24, %f21, %f19;
	sub.f32 	%f25, %f21, %f20;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f22, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f23, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f24, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f25, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f26, %f1, 0f3F800000;
	add.f32 	%f27, %f3, 0f3F800000;
	add.f32 	%f28, %f5, 0f3F800000;
	add.f32 	%f29, %f7, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r12, %f26;
	mov.b32 	%r11, 1065353216;
	// begin inline asm
	div.full.f32 %r10, %r11, %r12;
	// end inline asm
	mov.b32 	%f30, %r10;
	mov.b32 	%r15, %f27;
	// begin inline asm
	div.full.f32 %r13, %r11, %r15;
	// end inline asm
	mov.b32 	%f31, %r13;
	mov.b32 	%r18, %f28;
	// begin inline asm
	div.full.f32 %r16, %r11, %r18;
	// end inline asm
	mov.b32 	%f32, %r16;
	mov.b32 	%r21, %f29;
	// begin inline asm
	div.full.f32 %r19, %r11, %r21;
	// end inline asm
	mov.b32 	%f33, %r19;
$L__tmp2:
	.loc	1 30 18                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:30:18
	mul.f32 	%f34, %f17, %f30;
	mul.f32 	%f35, %f18, %f31;
	mul.f32 	%f36, %f19, %f32;
	mul.f32 	%f37, %f20, %f33;
	.loc	1 31 39                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:31:39
	mov.b32 	%r22, %f17;
	mov.b32 	%r23, %f18;
	mov.b32 	%r24, %f19;
	mov.b32 	%r25, %f20;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r22, %r23, %r24, %r25 };
	// end inline asm
	.loc	1 32 25                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:32:25
	add.s64 	%rd7, %rd10, %rd11;
	.loc	1 32 36                         // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:32:36
	mov.b32 	%r26, %f34;
	mov.b32 	%r27, %f35;
	mov.b32 	%r28, %f36;
	mov.b32 	%r29, %f37;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd7 + 0 ], { %r26, %r27, %r28, %r29 };
	// end inline asm
	.loc	1 32 4                          // clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py:32:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/lg/clgcnpvehcc4uf2niefv5quyvoyfydqbhm6cpvg2uufdbgi3l7ei.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 180                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xad DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 103
.b8 99
.b8 110
.b8 112
.b8 118
.b8 101
.b8 104
.b8 99
.b8 99
.b8 52
.b8 117
.b8 102
.b8 50
.b8 110
.b8 105
.b8 101
.b8 102
.b8 118
.b8 53
.b8 113
.b8 117
.b8 121
.b8 118
.b8 111
.b8 121
.b8 102
.b8 121
.b8 100
.b8 113
.b8 98
.b8 104
.b8 109
.b8 54
.b8 99
.b8 112
.b8 118
.b8 103
.b8 50
.b8 117
.b8 117
.b8 102
.b8 100
.b8 98
.b8 103
.b8 105
.b8 51
.b8 108
.b8 55
.b8 101
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 108
.b8 103
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 115
.b8 105
.b8 108
.b8 117
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 29                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
