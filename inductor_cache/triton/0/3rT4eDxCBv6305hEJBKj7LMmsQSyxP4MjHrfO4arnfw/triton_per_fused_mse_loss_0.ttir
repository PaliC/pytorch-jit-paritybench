#loc = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":19:0)
#loc1 = loc(unknown)
#loc10 = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":36:57)
#loc20 = loc(callsite(#loc1 at #loc10))
module {
  tt.func public @triton_per_fused_mse_loss_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>> loc(#loc6)
    %7 = arith.subf %3, %6 : tensor<256xf32> loc(#loc7)
    %8 = arith.mulf %7, %7 : tensor<256xf32> loc(#loc8)
    %9 = "tt.reduce"(%8) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc10)), %arg5: f32 loc(callsite(#loc1 at #loc10))):
      %15 = arith.addf %arg4, %arg5 : f32 loc(#loc23)
      tt.reduce.return %15 : f32 loc(#loc19)
    }) : (tensor<256xf32>) -> f32 loc(#loc19)
    %10 = arith.addf %9, %cst_0 : f32 loc(#loc22)
    %11 = arith.divf %10, %cst : f32 loc(#loc14)
    %12 = tt.splat %11 : f32 -> tensor<1xf32> loc(#loc14)
    gpu.barrier loc(#loc15)
    %13 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc16)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc16)
    tt.store %14, %12 : tensor<1x!tt.ptr<f32>> loc(#loc17)
    tt.return loc(#loc18)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":27:26)
#loc3 = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":31:30)
#loc4 = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":31:35)
#loc5 = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":32:30)
#loc6 = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":32:35)
#loc7 = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":33:18)
#loc8 = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":34:18)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc13 = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":36:44)
#loc14 = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":38:18)
#loc15 = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":39:4)
#loc16 = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":40:28)
#loc17 = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":40:62)
#loc18 = loc("inductor_cache/uc/cucrlux6juzljow5f6qzt5lo5vml6vfdmssktdmfwyjjlpu57uoy.py":40:4)
#loc19 = loc(callsite(#loc9 at #loc10))
#loc21 = loc(callsite(#loc11 at #loc9))
#loc22 = loc(callsite(#loc12 at #loc13))
#loc23 = loc(callsite(#loc21 at #loc10))
