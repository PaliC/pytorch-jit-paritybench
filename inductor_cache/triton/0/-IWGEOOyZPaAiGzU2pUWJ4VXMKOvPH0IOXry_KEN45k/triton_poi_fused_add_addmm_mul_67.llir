; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_addmm_mul_67(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) nocapture readnone %3, ptr addrspace(1) nocapture readnone %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %10 = shl i32 %9, 8, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 1, !dbg !12
  %13 = and i32 %12, 254, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = icmp slt i32 %14, 2048, !dbg !14
  %16 = srem i32 %14, 512, !dbg !15
  %17 = sext i32 %14 to i64, !dbg !16
  %18 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !16
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %18, i1 %15) #1, !dbg !17
  %20 = extractvalue { i32, i32 } %19, 0, !dbg !17
  %21 = extractvalue { i32, i32 } %19, 1, !dbg !17
  %22 = bitcast i32 %20 to float, !dbg !17
  %23 = bitcast i32 %21 to float, !dbg !17
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !18
  %25 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %24, i1 %15) #1, !dbg !19
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !19
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !19
  %28 = bitcast i32 %26 to float, !dbg !19
  %29 = bitcast i32 %27 to float, !dbg !19
  %30 = sext i32 %16 to i64, !dbg !20
  %31 = getelementptr float, ptr addrspace(1) %5, i64 %30, !dbg !20
  %32 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %31, i1 %15) #1, !dbg !21
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !21
  %34 = extractvalue { i32, i32 } %32, 1, !dbg !21
  %35 = bitcast i32 %33 to float, !dbg !21
  %36 = bitcast i32 %34 to float, !dbg !21
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !22
  %38 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %37, i1 %15) #1, !dbg !23
  %39 = extractvalue { i32, i32 } %38, 0, !dbg !23
  %40 = extractvalue { i32, i32 } %38, 1, !dbg !23
  %41 = bitcast i32 %39 to float, !dbg !23
  %42 = bitcast i32 %40 to float, !dbg !23
  %43 = getelementptr float, ptr addrspace(1) %6, i64 %30, !dbg !24
  %44 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %43, i1 %15) #1, !dbg !25
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !25
  %46 = extractvalue { i32, i32 } %44, 1, !dbg !25
  %47 = bitcast i32 %45 to float, !dbg !25
  %48 = bitcast i32 %46 to float, !dbg !25
  %49 = fadd float %28, %35, !dbg !26
  %50 = fadd float %29, %36, !dbg !26
  %51 = fadd float %49, %22, !dbg !27
  %52 = fadd float %50, %23, !dbg !27
  %53 = fadd float %41, %47, !dbg !28
  %54 = fadd float %42, %48, !dbg !28
  %55 = fadd float %53, %22, !dbg !29
  %56 = fadd float %54, %23, !dbg !29
  %57 = bitcast float %51 to i32, !dbg !30
  %58 = bitcast float %52 to i32, !dbg !30
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %57, i32 %58, ptr addrspace(1) %24, i1 %15) #1, !dbg !30
  %59 = bitcast float %55 to i32, !dbg !31
  %60 = bitcast float %56 to i32, !dbg !31
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %59, i32 %60, ptr addrspace(1) %37, i1 %15) #1, !dbg !31
  ret void, !dbg !32
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2zkqp6qgjsigkwl4f7fizazbnrprojw62524hvgr274pw22zkls.py", directory: "inductor_cache/2z")
!4 = !{ptr @triton_poi_fused_add_addmm_mul_67, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_addmm_mul_67, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_addmm_mul_67", linkageName: "triton_poi_fused_add_addmm_mul_67", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 29, column: 35, scope: !7)
!19 = !DILocation(line: 29, column: 40, scope: !7)
!20 = !DILocation(line: 30, column: 31, scope: !7)
!21 = !DILocation(line: 30, column: 36, scope: !7)
!22 = !DILocation(line: 31, column: 35, scope: !7)
!23 = !DILocation(line: 31, column: 40, scope: !7)
!24 = !DILocation(line: 32, column: 31, scope: !7)
!25 = !DILocation(line: 32, column: 36, scope: !7)
!26 = !DILocation(line: 45, column: 20, scope: !7)
!27 = !DILocation(line: 46, column: 20, scope: !7)
!28 = !DILocation(line: 57, column: 20, scope: !7)
!29 = !DILocation(line: 58, column: 20, scope: !7)
!30 = !DILocation(line: 59, column: 40, scope: !7)
!31 = !DILocation(line: 60, column: 40, scope: !7)
!32 = !DILocation(line: 60, column: 4, scope: !7)
