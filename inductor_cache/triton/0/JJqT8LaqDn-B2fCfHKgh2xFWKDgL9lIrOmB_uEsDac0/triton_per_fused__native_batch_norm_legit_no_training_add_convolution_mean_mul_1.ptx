//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_8,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_9,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_10,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_11,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_12
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<68>;
	.reg .f32 	%f<43>;
	.reg .b64 	%rd<36>;
	.loc	1 19 0                          // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd21, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_0];
	ld.param.u64 	%rd22, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_1];
$L__tmp0:
	.loc	1 23 28                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:23:33
	shl.b32 	%r42, %r1, 3;
	ld.param.u64 	%rd23, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_2];
	ld.param.u64 	%rd24, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_3];
	.loc	1 24 44                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:24:44
	mov.u32 	%r43, %tid.x;
	ld.param.u64 	%rd25, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_4];
	bfe.u32 	%r44, %r43, 3, 3;
	ld.param.u64 	%rd26, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_5];
	.loc	1 24 23                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:24:23
	or.b32  	%r45, %r42, %r44;
	ld.param.u64 	%rd27, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_6];
	.loc	1 25 21                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:25:21
	setp.lt.s32 	%p1, %r45, 16;
	ld.param.u64 	%rd28, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_7];
	.loc	1 26 34                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:26:34
	shl.b32 	%r46, %r43, 1;
	ld.param.u64 	%rd29, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_8];
	and.b32  	%r47, %r46, 14;
	ld.param.u64 	%rd30, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_9];
	.loc	1 31 19                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:31:19
	bfe.s32 	%r48, %r1, 28, 1;
	shr.u32 	%r49, %r48, 30;
	add.s32 	%r50, %r45, %r49;
	and.b32  	%r51, %r50, -4;
	sub.s32 	%r52, %r45, %r51;
	ld.param.u64 	%rd31, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_1_param_10];
	.loc	1 32 42                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:32:42
	shl.b32 	%r53, %r45, 4;
	.loc	1 32 39                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:32:39
	or.b32  	%r54, %r53, %r47;
	.loc	1 32 34                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:32:34
	mul.wide.s32 	%rd32, %r54, 4;
	add.s64 	%rd1, %rd21, %rd32;
	mov.b32 	%r4, 0;
	.loc	1 32 47                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	.loc	1 33 30                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:33:30
	mul.wide.s32 	%rd33, %r52, 4;
	add.s64 	%rd2, %rd24, %rd33;
	.loc	1 33 35                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:33:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 34                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:34:34
	add.s64 	%rd4, %rd22, %rd32;
	.loc	1 34 47                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:34:47
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r8, %r4;
	@!%p1 mov.u32 %r9, %r4;
	// end inline asm
	.loc	1 35 30                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:35:30
	add.s64 	%rd5, %rd25, %rd33;
	.loc	1 35 35                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:35:35
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 36 30                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:36:30
	add.s64 	%rd7, %rd26, %rd33;
	.loc	1 36 35                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:36:35
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 37 30                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:37:30
	add.s64 	%rd9, %rd27, %rd33;
	.loc	1 37 35                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:37:35
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r17;
	.loc	1 38 31                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:38:31
	add.s64 	%rd11, %rd28, %rd33;
	.loc	1 38 36                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:38:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:39:31
	add.s64 	%rd13, %rd29, %rd33;
	.loc	1 39 36                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:39:36
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 40 31                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:40:31
	mul.wide.s32 	%rd34, %r45, 4;
	add.s64 	%rd15, %rd30, %rd34;
	.loc	1 40 36                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:40:36
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 45 19                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:45:19
	add.f32 	%f4, %f3, 0f3727C5AC;
	.loc	1 46 27                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:46:27
	sqrt.approx.ftz.f32 	%f5, %f4;
	.loc	1 34 47                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:34:47
	mov.b32 	%f6, %r9;
	.loc	1 35 35                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:35:35
	mov.b32 	%f7, %r13;
	.loc	1 42 18                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:42:18
	add.f32 	%f8, %f6, %f7;
	.loc	1 36 35                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:36:35
	mov.b32 	%f9, %r15;
	.loc	1 43 18                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:43:18
	sub.f32 	%f10, %f8, %f9;
	.loc	1 34 47                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:34:47
	mov.b32 	%f11, %r8;
	.loc	1 42 18                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:42:18
	add.f32 	%f12, %f11, %f7;
	.loc	1 43 18                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:43:18
	sub.f32 	%f13, %f12, %f9;
	.loc	1 32 47                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:32:47
	mov.b32 	%f14, %r3;
	.loc	1 33 35                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:33:35
	mov.b32 	%f15, %r7;
	.loc	1 41 18                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:41:18
	add.f32 	%f16, %f14, %f15;
	.loc	1 32 47                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:32:47
	mov.b32 	%f17, %r2;
	.loc	1 41 18                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:41:18
	add.f32 	%f18, %f17, %f15;
	.loc	1 40 36                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:40:36
	mov.b32 	%f19, %r23;
	.loc	1 39 36                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:39:36
	mov.b32 	%f20, %r21;
	.loc	1 38 36                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:38:36
	mov.b32 	%f21, %r19;
	.loc	1 24 44                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:24:44
	and.b32  	%r55, %r43, 7;
	.loc	1 24 23                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:24:23
	or.b32  	%r56, %r42, %r55;
	.loc	1 25 21                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:25:21
	setp.lt.s32 	%p26, %r56, 16;
	.loc	1 48 20                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:48:20
	mov.b32 	%r26, %f5;
	mov.b32 	%r25, 1065353216;
	// begin inline asm
	div.full.f32 %r24, %r25, %r26;
	// end inline asm
	mov.b32 	%f22, %r24;
	.loc	1 51 19                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:51:19
	mul.f32 	%f23, %f13, %f22;
	mul.f32 	%f24, %f10, %f22;
	.loc	1 53 20                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:53:20
	fma.rn.f32 	%f25, %f23, %f21, %f20;
	fma.rn.f32 	%f26, %f24, %f21, %f20;
	.loc	1 54 19                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:54:19
	add.f32 	%f27, %f18, %f25;
	add.f32 	%f28, %f16, %f26;
	mov.f32 	%f29, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f30, %f29, %f19;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f30, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f31, %f1, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r29, %f31;
	// begin inline asm
	div.full.f32 %r27, %r25, %r29;
	// end inline asm
	mov.b32 	%f32, %r27;
$L__tmp2:
	.loc	1 56 20                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:56:20
	mul.f32 	%f33, %f32, %f27;
	mul.f32 	%f34, %f32, %f28;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f27, %f28;
	selp.f32 	%f36, %f35, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f36;
	shfl.sync.bfly.b32	%r58, %r57, 4, 31, -1;
	mov.b32 	%f37, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f38;
	shfl.sync.bfly.b32	%r60, %r59, 2, 31, -1;
	mov.b32 	%f39, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f40;
	shfl.sync.bfly.b32	%r62, %r61, 1, 31, -1;
	mov.b32 	%f41, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
$L__tmp4:
	.loc	1 61 20                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:61:20
	shl.b32 	%r63, %r44, 2;
	mov.u32 	%r64, global_smem;
	add.s32 	%r30, %r64, %r63;
	mov.b32 	%r31, %f42;
	mov.pred 	%p21, -1;
	// begin inline asm
	@%p21 st.shared.b32 [ %r30 + 0 ], %r31;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r65, %r55, 2;
	add.s32 	%r66, %r64, %r65;
	ld.shared.u32 	%r33, [%r66];
	mov.b32 	%r34, 1098907648;
	// begin inline asm
	div.full.f32 %r41, %r33, %r34;
	// end inline asm
	.loc	1 62 47                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:62:47
	mov.b32 	%r35, %f18;
	mov.b32 	%r36, %f16;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r35, %r36 };
	// end inline asm
	.loc	1 63 47                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:63:47
	mov.b32 	%r37, %f12;
	mov.b32 	%r38, %f8;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd4 + 0 ], { %r37, %r38 };
	// end inline asm
	.loc	1 64 25                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:64:25
	add.s64 	%rd19, %rd31, %rd32;
	.loc	1 64 45                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:64:45
	mov.b32 	%r39, %f33;
	mov.b32 	%r40, %f34;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd19 + 0 ], { %r39, %r40 };
	// end inline asm
	.loc	1 65 4                          // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:65:4
	bar.sync 	0;
	.loc	1 66 28                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:66:28
	mul.wide.s32 	%rd35, %r56, 4;
	add.s64 	%rd20, %rd23, %rd35;
	.loc	1 66 40                         // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:66:40
	and.b32  	%r67, %r43, 56;
	setp.eq.s32 	%p27, %r67, 0;
	and.pred  	%p25, %p27, %p26;
	// begin inline asm
	@%p25 st.global.b32 [ %rd20 + 0 ], { %r41 };
	// end inline asm
	.loc	1 66 4                          // cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py:66:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ti/cti7fas4ux56g7wz2kk2nmthgctykqdtifpnqjt4drqh3puugenk.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 249                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 105
.b8 55
.b8 102
.b8 97
.b8 115
.b8 52
.b8 117
.b8 120
.b8 53
.b8 54
.b8 103
.b8 55
.b8 119
.b8 122
.b8 50
.b8 107
.b8 107
.b8 50
.b8 110
.b8 109
.b8 116
.b8 104
.b8 103
.b8 99
.b8 116
.b8 121
.b8 107
.b8 113
.b8 100
.b8 116
.b8 105
.b8 102
.b8 112
.b8 110
.b8 113
.b8 106
.b8 116
.b8 52
.b8 100
.b8 114
.b8 113
.b8 104
.b8 51
.b8 112
.b8 117
.b8 117
.b8 103
.b8 101
.b8 110
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 105
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x53 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb6:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xcb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 59                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
