; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_convolution_tanh_19(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 2, !dbg !12
  %10 = and i32 %9, 12, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 16, !dbg !14
  %13 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !15
  %14 = shl i32 %13, 8, !dbg !16
  %15 = lshr i32 %8, 2, !dbg !17
  %16 = and i32 %15, 63, !dbg !17
  %17 = or disjoint i32 %16, 64, !dbg !17
  %18 = or disjoint i32 %16, 128, !dbg !17
  %19 = or disjoint i32 %16, 192, !dbg !17
  %20 = or disjoint i32 %14, %16, !dbg !18
  %21 = or disjoint i32 %14, %17, !dbg !18
  %22 = or disjoint i32 %14, %18, !dbg !18
  %23 = or disjoint i32 %14, %19, !dbg !18
  %24 = shl i32 %20, 2, !dbg !19
  %25 = shl i32 %21, 2, !dbg !19
  %26 = shl i32 %22, 2, !dbg !19
  %27 = shl i32 %23, 2, !dbg !19
  %28 = shl i32 %11, 12, !dbg !20
  %29 = add i32 %24, %28, !dbg !21
  %30 = add i32 %25, %28, !dbg !21
  %31 = add i32 %26, %28, !dbg !21
  %32 = add i32 %27, %28, !dbg !21
  %33 = sext i32 %29 to i64, !dbg !22
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !22
  %35 = sext i32 %30 to i64, !dbg !22
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !22
  %37 = sext i32 %31 to i64, !dbg !22
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !22
  %39 = sext i32 %32 to i64, !dbg !22
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !22
  %41 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %34, i1 %12) #4, !dbg !23
  %42 = extractvalue { i32, i32, i32, i32 } %41, 0, !dbg !23
  %43 = extractvalue { i32, i32, i32, i32 } %41, 1, !dbg !23
  %44 = extractvalue { i32, i32, i32, i32 } %41, 2, !dbg !23
  %45 = extractvalue { i32, i32, i32, i32 } %41, 3, !dbg !23
  %46 = bitcast i32 %42 to float, !dbg !23
  %47 = bitcast i32 %43 to float, !dbg !23
  %48 = bitcast i32 %44 to float, !dbg !23
  %49 = bitcast i32 %45 to float, !dbg !23
  %50 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %36, i1 %12) #4, !dbg !23
  %51 = extractvalue { i32, i32, i32, i32 } %50, 0, !dbg !23
  %52 = extractvalue { i32, i32, i32, i32 } %50, 1, !dbg !23
  %53 = extractvalue { i32, i32, i32, i32 } %50, 2, !dbg !23
  %54 = extractvalue { i32, i32, i32, i32 } %50, 3, !dbg !23
  %55 = bitcast i32 %51 to float, !dbg !23
  %56 = bitcast i32 %52 to float, !dbg !23
  %57 = bitcast i32 %53 to float, !dbg !23
  %58 = bitcast i32 %54 to float, !dbg !23
  %59 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %38, i1 %12) #4, !dbg !23
  %60 = extractvalue { i32, i32, i32, i32 } %59, 0, !dbg !23
  %61 = extractvalue { i32, i32, i32, i32 } %59, 1, !dbg !23
  %62 = extractvalue { i32, i32, i32, i32 } %59, 2, !dbg !23
  %63 = extractvalue { i32, i32, i32, i32 } %59, 3, !dbg !23
  %64 = bitcast i32 %60 to float, !dbg !23
  %65 = bitcast i32 %61 to float, !dbg !23
  %66 = bitcast i32 %62 to float, !dbg !23
  %67 = bitcast i32 %63 to float, !dbg !23
  %68 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %40, i1 %12) #4, !dbg !23
  %69 = extractvalue { i32, i32, i32, i32 } %68, 0, !dbg !23
  %70 = extractvalue { i32, i32, i32, i32 } %68, 1, !dbg !23
  %71 = extractvalue { i32, i32, i32, i32 } %68, 2, !dbg !23
  %72 = extractvalue { i32, i32, i32, i32 } %68, 3, !dbg !23
  %73 = bitcast i32 %69 to float, !dbg !23
  %74 = bitcast i32 %70 to float, !dbg !23
  %75 = bitcast i32 %71 to float, !dbg !23
  %76 = bitcast i32 %72 to float, !dbg !23
  %77 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1, i1 %12) #4, !dbg !24
  %78 = extractvalue { i32, i32, i32, i32 } %77, 0, !dbg !24
  %79 = extractvalue { i32, i32, i32, i32 } %77, 1, !dbg !24
  %80 = extractvalue { i32, i32, i32, i32 } %77, 2, !dbg !24
  %81 = extractvalue { i32, i32, i32, i32 } %77, 3, !dbg !24
  %82 = bitcast i32 %78 to float, !dbg !24
  %83 = bitcast i32 %79 to float, !dbg !24
  %84 = bitcast i32 %80 to float, !dbg !24
  %85 = bitcast i32 %81 to float, !dbg !24
  %86 = fadd float %46, %82, !dbg !25
  %87 = fadd float %47, %83, !dbg !25
  %88 = fadd float %48, %84, !dbg !25
  %89 = fadd float %49, %85, !dbg !25
  %90 = fadd float %55, %82, !dbg !25
  %91 = fadd float %56, %83, !dbg !25
  %92 = fadd float %57, %84, !dbg !25
  %93 = fadd float %58, %85, !dbg !25
  %94 = fadd float %64, %82, !dbg !25
  %95 = fadd float %65, %83, !dbg !25
  %96 = fadd float %66, %84, !dbg !25
  %97 = fadd float %67, %85, !dbg !25
  %98 = fadd float %73, %82, !dbg !25
  %99 = fadd float %74, %83, !dbg !25
  %100 = fadd float %75, %84, !dbg !25
  %101 = fadd float %76, %85, !dbg !25
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i = icmp eq i32 %102, 0, !dbg !26
  %103 = tail call float @llvm.nvvm.fabs.ftz.f(float %86) #4, !dbg !26
  %104 = tail call float @llvm.nvvm.fabs.f(float %86) #4, !dbg !26
  %.01.i = select i1 %.not.i, float %104, float %103, !dbg !26
  %105 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !26
  br i1 %105, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !26

__internal_fmad.exit1.i:                          ; preds = %5
  %106 = fmul float %.01.i, 0x4007154760000000, !dbg !26
  %107 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %106) #4, !dbg !26
  %108 = fadd float %107, 1.000000e+00, !dbg !26
  %109 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %108) #5, !dbg !26, !srcloc !27
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i = icmp eq i32 %110, 0, !dbg !26
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %109, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %109, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i = select i1 %.not6.i, float %112, float %111, !dbg !26
  %113 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !26
  %s.0.i = select i1 %113, float 1.000000e+00, float %.03.i, !dbg !26
  %114 = bitcast float %s.0.i to i32, !dbg !26
  %115 = bitcast float %86 to i32, !dbg !26
  %116 = and i32 %115, -2147483648, !dbg !26
  %117 = or i32 %116, %114, !dbg !26
  %118 = bitcast i32 %117 to float, !dbg !26
  br label %__nv_tanhf.exit, !dbg !26

__internal_fmad.exit3.i:                          ; preds = %5
  %119 = fmul float %86, %86, !dbg !26
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i = icmp eq i32 %120, 0, !dbg !26
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %119, float 0xBFAAC795C0000000) #4, !dbg !26
  %122 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %119, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i = select i1 %.not1.i, float %122, float %121, !dbg !26
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i = icmp eq i32 %123, 0, !dbg !26
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %119, float 0x3FC10B2820000000) #4, !dbg !26
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %119, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i = select i1 %.not2.i, float %125, float %124, !dbg !26
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i = icmp eq i32 %126, 0, !dbg !26
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %119, float 0xBFD5553DA0000000) #4, !dbg !26
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %119, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i = select i1 %.not3.i, float %128, float %127, !dbg !26
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i = icmp eq i32 %129, 0, !dbg !26
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %119, float 0.000000e+00) #4, !dbg !26
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %119, float 0.000000e+00) #4, !dbg !26
  %.04.i = select i1 %.not4.i, float %131, float %130, !dbg !26
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i = icmp eq i32 %132, 0, !dbg !26
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %86, float %86) #4, !dbg !26
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %86, float %86) #4, !dbg !26
  %.02.i = select i1 %.not5.i, float %134, float %133, !dbg !26
  br label %__nv_tanhf.exit, !dbg !26

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %118, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !26
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i3 = icmp eq i32 %135, 0, !dbg !26
  %136 = tail call float @llvm.nvvm.fabs.ftz.f(float %87) #4, !dbg !26
  %137 = tail call float @llvm.nvvm.fabs.f(float %87) #4, !dbg !26
  %.01.i4 = select i1 %.not.i3, float %137, float %136, !dbg !26
  %138 = fcmp ult float %.01.i4, 0x3FE3333340000000, !dbg !26
  br i1 %138, label %__internal_fmad.exit3.i10, label %__internal_fmad.exit1.i5, !dbg !26

__internal_fmad.exit1.i5:                         ; preds = %__nv_tanhf.exit
  %139 = fmul float %.01.i4, 0x4007154760000000, !dbg !26
  %140 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %139) #4, !dbg !26
  %141 = fadd float %140, 1.000000e+00, !dbg !26
  %142 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %141) #5, !dbg !26, !srcloc !27
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i6 = icmp eq i32 %143, 0, !dbg !26
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %142, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %142, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i7 = select i1 %.not6.i6, float %145, float %144, !dbg !26
  %146 = fcmp oge float %.01.i4, 0x4022059680000000, !dbg !26
  %s.0.i8 = select i1 %146, float 1.000000e+00, float %.03.i7, !dbg !26
  %147 = bitcast float %s.0.i8 to i32, !dbg !26
  %148 = bitcast float %87 to i32, !dbg !26
  %149 = and i32 %148, -2147483648, !dbg !26
  %150 = or i32 %149, %147, !dbg !26
  %151 = bitcast i32 %150 to float, !dbg !26
  br label %__nv_tanhf.exit21, !dbg !26

__internal_fmad.exit3.i10:                        ; preds = %__nv_tanhf.exit
  %152 = fmul float %87, %87, !dbg !26
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i11 = icmp eq i32 %153, 0, !dbg !26
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %152, float 0xBFAAC795C0000000) #4, !dbg !26
  %155 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %152, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i12 = select i1 %.not1.i11, float %155, float %154, !dbg !26
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i13 = icmp eq i32 %156, 0, !dbg !26
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i12, float %152, float 0x3FC10B2820000000) #4, !dbg !26
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i12, float %152, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i14 = select i1 %.not2.i13, float %158, float %157, !dbg !26
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i15 = icmp eq i32 %159, 0, !dbg !26
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %152, float 0xBFD5553DA0000000) #4, !dbg !26
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %152, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i16 = select i1 %.not3.i15, float %161, float %160, !dbg !26
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i17 = icmp eq i32 %162, 0, !dbg !26
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i16, float %152, float 0.000000e+00) #4, !dbg !26
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i16, float %152, float 0.000000e+00) #4, !dbg !26
  %.04.i18 = select i1 %.not4.i17, float %164, float %163, !dbg !26
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i19 = icmp eq i32 %165, 0, !dbg !26
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i18, float %87, float %87) #4, !dbg !26
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i18, float %87, float %87) #4, !dbg !26
  %.02.i20 = select i1 %.not5.i19, float %167, float %166, !dbg !26
  br label %__nv_tanhf.exit21, !dbg !26

__nv_tanhf.exit21:                                ; preds = %__internal_fmad.exit1.i5, %__internal_fmad.exit3.i10
  %s.1.i9 = phi float [ %151, %__internal_fmad.exit1.i5 ], [ %.02.i20, %__internal_fmad.exit3.i10 ], !dbg !26
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i22 = icmp eq i32 %168, 0, !dbg !26
  %169 = tail call float @llvm.nvvm.fabs.ftz.f(float %88) #4, !dbg !26
  %170 = tail call float @llvm.nvvm.fabs.f(float %88) #4, !dbg !26
  %.01.i23 = select i1 %.not.i22, float %170, float %169, !dbg !26
  %171 = fcmp ult float %.01.i23, 0x3FE3333340000000, !dbg !26
  br i1 %171, label %__internal_fmad.exit3.i29, label %__internal_fmad.exit1.i24, !dbg !26

__internal_fmad.exit1.i24:                        ; preds = %__nv_tanhf.exit21
  %172 = fmul float %.01.i23, 0x4007154760000000, !dbg !26
  %173 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %172) #4, !dbg !26
  %174 = fadd float %173, 1.000000e+00, !dbg !26
  %175 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %174) #5, !dbg !26, !srcloc !27
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i25 = icmp eq i32 %176, 0, !dbg !26
  %177 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %175, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %178 = tail call float @llvm.nvvm.fma.rn.f(float %175, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i26 = select i1 %.not6.i25, float %178, float %177, !dbg !26
  %179 = fcmp oge float %.01.i23, 0x4022059680000000, !dbg !26
  %s.0.i27 = select i1 %179, float 1.000000e+00, float %.03.i26, !dbg !26
  %180 = bitcast float %s.0.i27 to i32, !dbg !26
  %181 = bitcast float %88 to i32, !dbg !26
  %182 = and i32 %181, -2147483648, !dbg !26
  %183 = or i32 %182, %180, !dbg !26
  %184 = bitcast i32 %183 to float, !dbg !26
  br label %__nv_tanhf.exit40, !dbg !26

__internal_fmad.exit3.i29:                        ; preds = %__nv_tanhf.exit21
  %185 = fmul float %88, %88, !dbg !26
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i30 = icmp eq i32 %186, 0, !dbg !26
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %185, float 0xBFAAC795C0000000) #4, !dbg !26
  %188 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %185, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i31 = select i1 %.not1.i30, float %188, float %187, !dbg !26
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i32 = icmp eq i32 %189, 0, !dbg !26
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i31, float %185, float 0x3FC10B2820000000) #4, !dbg !26
  %191 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i31, float %185, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i33 = select i1 %.not2.i32, float %191, float %190, !dbg !26
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i34 = icmp eq i32 %192, 0, !dbg !26
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i33, float %185, float 0xBFD5553DA0000000) #4, !dbg !26
  %194 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i33, float %185, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i35 = select i1 %.not3.i34, float %194, float %193, !dbg !26
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i36 = icmp eq i32 %195, 0, !dbg !26
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i35, float %185, float 0.000000e+00) #4, !dbg !26
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i35, float %185, float 0.000000e+00) #4, !dbg !26
  %.04.i37 = select i1 %.not4.i36, float %197, float %196, !dbg !26
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i38 = icmp eq i32 %198, 0, !dbg !26
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i37, float %88, float %88) #4, !dbg !26
  %200 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i37, float %88, float %88) #4, !dbg !26
  %.02.i39 = select i1 %.not5.i38, float %200, float %199, !dbg !26
  br label %__nv_tanhf.exit40, !dbg !26

__nv_tanhf.exit40:                                ; preds = %__internal_fmad.exit1.i24, %__internal_fmad.exit3.i29
  %s.1.i28 = phi float [ %184, %__internal_fmad.exit1.i24 ], [ %.02.i39, %__internal_fmad.exit3.i29 ], !dbg !26
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i41 = icmp eq i32 %201, 0, !dbg !26
  %202 = tail call float @llvm.nvvm.fabs.ftz.f(float %89) #4, !dbg !26
  %203 = tail call float @llvm.nvvm.fabs.f(float %89) #4, !dbg !26
  %.01.i42 = select i1 %.not.i41, float %203, float %202, !dbg !26
  %204 = fcmp ult float %.01.i42, 0x3FE3333340000000, !dbg !26
  br i1 %204, label %__internal_fmad.exit3.i48, label %__internal_fmad.exit1.i43, !dbg !26

__internal_fmad.exit1.i43:                        ; preds = %__nv_tanhf.exit40
  %205 = fmul float %.01.i42, 0x4007154760000000, !dbg !26
  %206 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %205) #4, !dbg !26
  %207 = fadd float %206, 1.000000e+00, !dbg !26
  %208 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %207) #5, !dbg !26, !srcloc !27
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i44 = icmp eq i32 %209, 0, !dbg !26
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %208, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %208, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i45 = select i1 %.not6.i44, float %211, float %210, !dbg !26
  %212 = fcmp oge float %.01.i42, 0x4022059680000000, !dbg !26
  %s.0.i46 = select i1 %212, float 1.000000e+00, float %.03.i45, !dbg !26
  %213 = bitcast float %s.0.i46 to i32, !dbg !26
  %214 = bitcast float %89 to i32, !dbg !26
  %215 = and i32 %214, -2147483648, !dbg !26
  %216 = or i32 %215, %213, !dbg !26
  %217 = bitcast i32 %216 to float, !dbg !26
  br label %__nv_tanhf.exit59, !dbg !26

__internal_fmad.exit3.i48:                        ; preds = %__nv_tanhf.exit40
  %218 = fmul float %89, %89, !dbg !26
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i49 = icmp eq i32 %219, 0, !dbg !26
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %218, float 0xBFAAC795C0000000) #4, !dbg !26
  %221 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %218, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i50 = select i1 %.not1.i49, float %221, float %220, !dbg !26
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i51 = icmp eq i32 %222, 0, !dbg !26
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i50, float %218, float 0x3FC10B2820000000) #4, !dbg !26
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i50, float %218, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i52 = select i1 %.not2.i51, float %224, float %223, !dbg !26
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i53 = icmp eq i32 %225, 0, !dbg !26
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i52, float %218, float 0xBFD5553DA0000000) #4, !dbg !26
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i52, float %218, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i54 = select i1 %.not3.i53, float %227, float %226, !dbg !26
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i55 = icmp eq i32 %228, 0, !dbg !26
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i54, float %218, float 0.000000e+00) #4, !dbg !26
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i54, float %218, float 0.000000e+00) #4, !dbg !26
  %.04.i56 = select i1 %.not4.i55, float %230, float %229, !dbg !26
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i57 = icmp eq i32 %231, 0, !dbg !26
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i56, float %89, float %89) #4, !dbg !26
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i56, float %89, float %89) #4, !dbg !26
  %.02.i58 = select i1 %.not5.i57, float %233, float %232, !dbg !26
  br label %__nv_tanhf.exit59, !dbg !26

__nv_tanhf.exit59:                                ; preds = %__internal_fmad.exit1.i43, %__internal_fmad.exit3.i48
  %s.1.i47 = phi float [ %217, %__internal_fmad.exit1.i43 ], [ %.02.i58, %__internal_fmad.exit3.i48 ], !dbg !26
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i60 = icmp eq i32 %234, 0, !dbg !26
  %235 = tail call float @llvm.nvvm.fabs.ftz.f(float %90) #4, !dbg !26
  %236 = tail call float @llvm.nvvm.fabs.f(float %90) #4, !dbg !26
  %.01.i61 = select i1 %.not.i60, float %236, float %235, !dbg !26
  %237 = fcmp ult float %.01.i61, 0x3FE3333340000000, !dbg !26
  br i1 %237, label %__internal_fmad.exit3.i67, label %__internal_fmad.exit1.i62, !dbg !26

__internal_fmad.exit1.i62:                        ; preds = %__nv_tanhf.exit59
  %238 = fmul float %.01.i61, 0x4007154760000000, !dbg !26
  %239 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %238) #4, !dbg !26
  %240 = fadd float %239, 1.000000e+00, !dbg !26
  %241 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %240) #5, !dbg !26, !srcloc !27
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i63 = icmp eq i32 %242, 0, !dbg !26
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %241, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %241, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i64 = select i1 %.not6.i63, float %244, float %243, !dbg !26
  %245 = fcmp oge float %.01.i61, 0x4022059680000000, !dbg !26
  %s.0.i65 = select i1 %245, float 1.000000e+00, float %.03.i64, !dbg !26
  %246 = bitcast float %s.0.i65 to i32, !dbg !26
  %247 = bitcast float %90 to i32, !dbg !26
  %248 = and i32 %247, -2147483648, !dbg !26
  %249 = or i32 %248, %246, !dbg !26
  %250 = bitcast i32 %249 to float, !dbg !26
  br label %__nv_tanhf.exit78, !dbg !26

__internal_fmad.exit3.i67:                        ; preds = %__nv_tanhf.exit59
  %251 = fmul float %90, %90, !dbg !26
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i68 = icmp eq i32 %252, 0, !dbg !26
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %251, float 0xBFAAC795C0000000) #4, !dbg !26
  %254 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %251, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i69 = select i1 %.not1.i68, float %254, float %253, !dbg !26
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i70 = icmp eq i32 %255, 0, !dbg !26
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i69, float %251, float 0x3FC10B2820000000) #4, !dbg !26
  %257 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i69, float %251, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i71 = select i1 %.not2.i70, float %257, float %256, !dbg !26
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i72 = icmp eq i32 %258, 0, !dbg !26
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i71, float %251, float 0xBFD5553DA0000000) #4, !dbg !26
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i71, float %251, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i73 = select i1 %.not3.i72, float %260, float %259, !dbg !26
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i74 = icmp eq i32 %261, 0, !dbg !26
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i73, float %251, float 0.000000e+00) #4, !dbg !26
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i73, float %251, float 0.000000e+00) #4, !dbg !26
  %.04.i75 = select i1 %.not4.i74, float %263, float %262, !dbg !26
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i76 = icmp eq i32 %264, 0, !dbg !26
  %265 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i75, float %90, float %90) #4, !dbg !26
  %266 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i75, float %90, float %90) #4, !dbg !26
  %.02.i77 = select i1 %.not5.i76, float %266, float %265, !dbg !26
  br label %__nv_tanhf.exit78, !dbg !26

__nv_tanhf.exit78:                                ; preds = %__internal_fmad.exit1.i62, %__internal_fmad.exit3.i67
  %s.1.i66 = phi float [ %250, %__internal_fmad.exit1.i62 ], [ %.02.i77, %__internal_fmad.exit3.i67 ], !dbg !26
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i79 = icmp eq i32 %267, 0, !dbg !26
  %268 = tail call float @llvm.nvvm.fabs.ftz.f(float %91) #4, !dbg !26
  %269 = tail call float @llvm.nvvm.fabs.f(float %91) #4, !dbg !26
  %.01.i80 = select i1 %.not.i79, float %269, float %268, !dbg !26
  %270 = fcmp ult float %.01.i80, 0x3FE3333340000000, !dbg !26
  br i1 %270, label %__internal_fmad.exit3.i86, label %__internal_fmad.exit1.i81, !dbg !26

__internal_fmad.exit1.i81:                        ; preds = %__nv_tanhf.exit78
  %271 = fmul float %.01.i80, 0x4007154760000000, !dbg !26
  %272 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %271) #4, !dbg !26
  %273 = fadd float %272, 1.000000e+00, !dbg !26
  %274 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %273) #5, !dbg !26, !srcloc !27
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i82 = icmp eq i32 %275, 0, !dbg !26
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %274, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %277 = tail call float @llvm.nvvm.fma.rn.f(float %274, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i83 = select i1 %.not6.i82, float %277, float %276, !dbg !26
  %278 = fcmp oge float %.01.i80, 0x4022059680000000, !dbg !26
  %s.0.i84 = select i1 %278, float 1.000000e+00, float %.03.i83, !dbg !26
  %279 = bitcast float %s.0.i84 to i32, !dbg !26
  %280 = bitcast float %91 to i32, !dbg !26
  %281 = and i32 %280, -2147483648, !dbg !26
  %282 = or i32 %281, %279, !dbg !26
  %283 = bitcast i32 %282 to float, !dbg !26
  br label %__nv_tanhf.exit97, !dbg !26

__internal_fmad.exit3.i86:                        ; preds = %__nv_tanhf.exit78
  %284 = fmul float %91, %91, !dbg !26
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i87 = icmp eq i32 %285, 0, !dbg !26
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %284, float 0xBFAAC795C0000000) #4, !dbg !26
  %287 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %284, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i88 = select i1 %.not1.i87, float %287, float %286, !dbg !26
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i89 = icmp eq i32 %288, 0, !dbg !26
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i88, float %284, float 0x3FC10B2820000000) #4, !dbg !26
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i88, float %284, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i90 = select i1 %.not2.i89, float %290, float %289, !dbg !26
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i91 = icmp eq i32 %291, 0, !dbg !26
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i90, float %284, float 0xBFD5553DA0000000) #4, !dbg !26
  %293 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i90, float %284, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i92 = select i1 %.not3.i91, float %293, float %292, !dbg !26
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i93 = icmp eq i32 %294, 0, !dbg !26
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i92, float %284, float 0.000000e+00) #4, !dbg !26
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i92, float %284, float 0.000000e+00) #4, !dbg !26
  %.04.i94 = select i1 %.not4.i93, float %296, float %295, !dbg !26
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i95 = icmp eq i32 %297, 0, !dbg !26
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i94, float %91, float %91) #4, !dbg !26
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i94, float %91, float %91) #4, !dbg !26
  %.02.i96 = select i1 %.not5.i95, float %299, float %298, !dbg !26
  br label %__nv_tanhf.exit97, !dbg !26

__nv_tanhf.exit97:                                ; preds = %__internal_fmad.exit1.i81, %__internal_fmad.exit3.i86
  %s.1.i85 = phi float [ %283, %__internal_fmad.exit1.i81 ], [ %.02.i96, %__internal_fmad.exit3.i86 ], !dbg !26
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i98 = icmp eq i32 %300, 0, !dbg !26
  %301 = tail call float @llvm.nvvm.fabs.ftz.f(float %92) #4, !dbg !26
  %302 = tail call float @llvm.nvvm.fabs.f(float %92) #4, !dbg !26
  %.01.i99 = select i1 %.not.i98, float %302, float %301, !dbg !26
  %303 = fcmp ult float %.01.i99, 0x3FE3333340000000, !dbg !26
  br i1 %303, label %__internal_fmad.exit3.i105, label %__internal_fmad.exit1.i100, !dbg !26

__internal_fmad.exit1.i100:                       ; preds = %__nv_tanhf.exit97
  %304 = fmul float %.01.i99, 0x4007154760000000, !dbg !26
  %305 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %304) #4, !dbg !26
  %306 = fadd float %305, 1.000000e+00, !dbg !26
  %307 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %306) #5, !dbg !26, !srcloc !27
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i101 = icmp eq i32 %308, 0, !dbg !26
  %309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %307, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %310 = tail call float @llvm.nvvm.fma.rn.f(float %307, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i102 = select i1 %.not6.i101, float %310, float %309, !dbg !26
  %311 = fcmp oge float %.01.i99, 0x4022059680000000, !dbg !26
  %s.0.i103 = select i1 %311, float 1.000000e+00, float %.03.i102, !dbg !26
  %312 = bitcast float %s.0.i103 to i32, !dbg !26
  %313 = bitcast float %92 to i32, !dbg !26
  %314 = and i32 %313, -2147483648, !dbg !26
  %315 = or i32 %314, %312, !dbg !26
  %316 = bitcast i32 %315 to float, !dbg !26
  br label %__nv_tanhf.exit116, !dbg !26

__internal_fmad.exit3.i105:                       ; preds = %__nv_tanhf.exit97
  %317 = fmul float %92, %92, !dbg !26
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i106 = icmp eq i32 %318, 0, !dbg !26
  %319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %317, float 0xBFAAC795C0000000) #4, !dbg !26
  %320 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %317, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i107 = select i1 %.not1.i106, float %320, float %319, !dbg !26
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i108 = icmp eq i32 %321, 0, !dbg !26
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i107, float %317, float 0x3FC10B2820000000) #4, !dbg !26
  %323 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i107, float %317, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i109 = select i1 %.not2.i108, float %323, float %322, !dbg !26
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i110 = icmp eq i32 %324, 0, !dbg !26
  %325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i109, float %317, float 0xBFD5553DA0000000) #4, !dbg !26
  %326 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i109, float %317, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i111 = select i1 %.not3.i110, float %326, float %325, !dbg !26
  %327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i112 = icmp eq i32 %327, 0, !dbg !26
  %328 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i111, float %317, float 0.000000e+00) #4, !dbg !26
  %329 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i111, float %317, float 0.000000e+00) #4, !dbg !26
  %.04.i113 = select i1 %.not4.i112, float %329, float %328, !dbg !26
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i114 = icmp eq i32 %330, 0, !dbg !26
  %331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i113, float %92, float %92) #4, !dbg !26
  %332 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i113, float %92, float %92) #4, !dbg !26
  %.02.i115 = select i1 %.not5.i114, float %332, float %331, !dbg !26
  br label %__nv_tanhf.exit116, !dbg !26

__nv_tanhf.exit116:                               ; preds = %__internal_fmad.exit1.i100, %__internal_fmad.exit3.i105
  %s.1.i104 = phi float [ %316, %__internal_fmad.exit1.i100 ], [ %.02.i115, %__internal_fmad.exit3.i105 ], !dbg !26
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i117 = icmp eq i32 %333, 0, !dbg !26
  %334 = tail call float @llvm.nvvm.fabs.ftz.f(float %93) #4, !dbg !26
  %335 = tail call float @llvm.nvvm.fabs.f(float %93) #4, !dbg !26
  %.01.i118 = select i1 %.not.i117, float %335, float %334, !dbg !26
  %336 = fcmp ult float %.01.i118, 0x3FE3333340000000, !dbg !26
  br i1 %336, label %__internal_fmad.exit3.i124, label %__internal_fmad.exit1.i119, !dbg !26

__internal_fmad.exit1.i119:                       ; preds = %__nv_tanhf.exit116
  %337 = fmul float %.01.i118, 0x4007154760000000, !dbg !26
  %338 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %337) #4, !dbg !26
  %339 = fadd float %338, 1.000000e+00, !dbg !26
  %340 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %339) #5, !dbg !26, !srcloc !27
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i120 = icmp eq i32 %341, 0, !dbg !26
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %340, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %340, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i121 = select i1 %.not6.i120, float %343, float %342, !dbg !26
  %344 = fcmp oge float %.01.i118, 0x4022059680000000, !dbg !26
  %s.0.i122 = select i1 %344, float 1.000000e+00, float %.03.i121, !dbg !26
  %345 = bitcast float %s.0.i122 to i32, !dbg !26
  %346 = bitcast float %93 to i32, !dbg !26
  %347 = and i32 %346, -2147483648, !dbg !26
  %348 = or i32 %347, %345, !dbg !26
  %349 = bitcast i32 %348 to float, !dbg !26
  br label %__nv_tanhf.exit135, !dbg !26

__internal_fmad.exit3.i124:                       ; preds = %__nv_tanhf.exit116
  %350 = fmul float %93, %93, !dbg !26
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i125 = icmp eq i32 %351, 0, !dbg !26
  %352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %350, float 0xBFAAC795C0000000) #4, !dbg !26
  %353 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %350, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i126 = select i1 %.not1.i125, float %353, float %352, !dbg !26
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i127 = icmp eq i32 %354, 0, !dbg !26
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i126, float %350, float 0x3FC10B2820000000) #4, !dbg !26
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i126, float %350, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i128 = select i1 %.not2.i127, float %356, float %355, !dbg !26
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i129 = icmp eq i32 %357, 0, !dbg !26
  %358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i128, float %350, float 0xBFD5553DA0000000) #4, !dbg !26
  %359 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i128, float %350, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i130 = select i1 %.not3.i129, float %359, float %358, !dbg !26
  %360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i131 = icmp eq i32 %360, 0, !dbg !26
  %361 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i130, float %350, float 0.000000e+00) #4, !dbg !26
  %362 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i130, float %350, float 0.000000e+00) #4, !dbg !26
  %.04.i132 = select i1 %.not4.i131, float %362, float %361, !dbg !26
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i133 = icmp eq i32 %363, 0, !dbg !26
  %364 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i132, float %93, float %93) #4, !dbg !26
  %365 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i132, float %93, float %93) #4, !dbg !26
  %.02.i134 = select i1 %.not5.i133, float %365, float %364, !dbg !26
  br label %__nv_tanhf.exit135, !dbg !26

__nv_tanhf.exit135:                               ; preds = %__internal_fmad.exit1.i119, %__internal_fmad.exit3.i124
  %s.1.i123 = phi float [ %349, %__internal_fmad.exit1.i119 ], [ %.02.i134, %__internal_fmad.exit3.i124 ], !dbg !26
  %366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i136 = icmp eq i32 %366, 0, !dbg !26
  %367 = tail call float @llvm.nvvm.fabs.ftz.f(float %94) #4, !dbg !26
  %368 = tail call float @llvm.nvvm.fabs.f(float %94) #4, !dbg !26
  %.01.i137 = select i1 %.not.i136, float %368, float %367, !dbg !26
  %369 = fcmp ult float %.01.i137, 0x3FE3333340000000, !dbg !26
  br i1 %369, label %__internal_fmad.exit3.i143, label %__internal_fmad.exit1.i138, !dbg !26

__internal_fmad.exit1.i138:                       ; preds = %__nv_tanhf.exit135
  %370 = fmul float %.01.i137, 0x4007154760000000, !dbg !26
  %371 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %370) #4, !dbg !26
  %372 = fadd float %371, 1.000000e+00, !dbg !26
  %373 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %372) #5, !dbg !26, !srcloc !27
  %374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i139 = icmp eq i32 %374, 0, !dbg !26
  %375 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %373, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %376 = tail call float @llvm.nvvm.fma.rn.f(float %373, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i140 = select i1 %.not6.i139, float %376, float %375, !dbg !26
  %377 = fcmp oge float %.01.i137, 0x4022059680000000, !dbg !26
  %s.0.i141 = select i1 %377, float 1.000000e+00, float %.03.i140, !dbg !26
  %378 = bitcast float %s.0.i141 to i32, !dbg !26
  %379 = bitcast float %94 to i32, !dbg !26
  %380 = and i32 %379, -2147483648, !dbg !26
  %381 = or i32 %380, %378, !dbg !26
  %382 = bitcast i32 %381 to float, !dbg !26
  br label %__nv_tanhf.exit154, !dbg !26

__internal_fmad.exit3.i143:                       ; preds = %__nv_tanhf.exit135
  %383 = fmul float %94, %94, !dbg !26
  %384 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i144 = icmp eq i32 %384, 0, !dbg !26
  %385 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %383, float 0xBFAAC795C0000000) #4, !dbg !26
  %386 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %383, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i145 = select i1 %.not1.i144, float %386, float %385, !dbg !26
  %387 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i146 = icmp eq i32 %387, 0, !dbg !26
  %388 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i145, float %383, float 0x3FC10B2820000000) #4, !dbg !26
  %389 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i145, float %383, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i147 = select i1 %.not2.i146, float %389, float %388, !dbg !26
  %390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i148 = icmp eq i32 %390, 0, !dbg !26
  %391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i147, float %383, float 0xBFD5553DA0000000) #4, !dbg !26
  %392 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i147, float %383, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i149 = select i1 %.not3.i148, float %392, float %391, !dbg !26
  %393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i150 = icmp eq i32 %393, 0, !dbg !26
  %394 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i149, float %383, float 0.000000e+00) #4, !dbg !26
  %395 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i149, float %383, float 0.000000e+00) #4, !dbg !26
  %.04.i151 = select i1 %.not4.i150, float %395, float %394, !dbg !26
  %396 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i152 = icmp eq i32 %396, 0, !dbg !26
  %397 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i151, float %94, float %94) #4, !dbg !26
  %398 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i151, float %94, float %94) #4, !dbg !26
  %.02.i153 = select i1 %.not5.i152, float %398, float %397, !dbg !26
  br label %__nv_tanhf.exit154, !dbg !26

__nv_tanhf.exit154:                               ; preds = %__internal_fmad.exit1.i138, %__internal_fmad.exit3.i143
  %s.1.i142 = phi float [ %382, %__internal_fmad.exit1.i138 ], [ %.02.i153, %__internal_fmad.exit3.i143 ], !dbg !26
  %399 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i155 = icmp eq i32 %399, 0, !dbg !26
  %400 = tail call float @llvm.nvvm.fabs.ftz.f(float %95) #4, !dbg !26
  %401 = tail call float @llvm.nvvm.fabs.f(float %95) #4, !dbg !26
  %.01.i156 = select i1 %.not.i155, float %401, float %400, !dbg !26
  %402 = fcmp ult float %.01.i156, 0x3FE3333340000000, !dbg !26
  br i1 %402, label %__internal_fmad.exit3.i162, label %__internal_fmad.exit1.i157, !dbg !26

__internal_fmad.exit1.i157:                       ; preds = %__nv_tanhf.exit154
  %403 = fmul float %.01.i156, 0x4007154760000000, !dbg !26
  %404 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %403) #4, !dbg !26
  %405 = fadd float %404, 1.000000e+00, !dbg !26
  %406 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %405) #5, !dbg !26, !srcloc !27
  %407 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i158 = icmp eq i32 %407, 0, !dbg !26
  %408 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %406, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %409 = tail call float @llvm.nvvm.fma.rn.f(float %406, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i159 = select i1 %.not6.i158, float %409, float %408, !dbg !26
  %410 = fcmp oge float %.01.i156, 0x4022059680000000, !dbg !26
  %s.0.i160 = select i1 %410, float 1.000000e+00, float %.03.i159, !dbg !26
  %411 = bitcast float %s.0.i160 to i32, !dbg !26
  %412 = bitcast float %95 to i32, !dbg !26
  %413 = and i32 %412, -2147483648, !dbg !26
  %414 = or i32 %413, %411, !dbg !26
  %415 = bitcast i32 %414 to float, !dbg !26
  br label %__nv_tanhf.exit173, !dbg !26

__internal_fmad.exit3.i162:                       ; preds = %__nv_tanhf.exit154
  %416 = fmul float %95, %95, !dbg !26
  %417 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i163 = icmp eq i32 %417, 0, !dbg !26
  %418 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %416, float 0xBFAAC795C0000000) #4, !dbg !26
  %419 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %416, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i164 = select i1 %.not1.i163, float %419, float %418, !dbg !26
  %420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i165 = icmp eq i32 %420, 0, !dbg !26
  %421 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i164, float %416, float 0x3FC10B2820000000) #4, !dbg !26
  %422 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i164, float %416, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i166 = select i1 %.not2.i165, float %422, float %421, !dbg !26
  %423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i167 = icmp eq i32 %423, 0, !dbg !26
  %424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i166, float %416, float 0xBFD5553DA0000000) #4, !dbg !26
  %425 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i166, float %416, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i168 = select i1 %.not3.i167, float %425, float %424, !dbg !26
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i169 = icmp eq i32 %426, 0, !dbg !26
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i168, float %416, float 0.000000e+00) #4, !dbg !26
  %428 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i168, float %416, float 0.000000e+00) #4, !dbg !26
  %.04.i170 = select i1 %.not4.i169, float %428, float %427, !dbg !26
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i171 = icmp eq i32 %429, 0, !dbg !26
  %430 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i170, float %95, float %95) #4, !dbg !26
  %431 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i170, float %95, float %95) #4, !dbg !26
  %.02.i172 = select i1 %.not5.i171, float %431, float %430, !dbg !26
  br label %__nv_tanhf.exit173, !dbg !26

__nv_tanhf.exit173:                               ; preds = %__internal_fmad.exit1.i157, %__internal_fmad.exit3.i162
  %s.1.i161 = phi float [ %415, %__internal_fmad.exit1.i157 ], [ %.02.i172, %__internal_fmad.exit3.i162 ], !dbg !26
  %432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i174 = icmp eq i32 %432, 0, !dbg !26
  %433 = tail call float @llvm.nvvm.fabs.ftz.f(float %96) #4, !dbg !26
  %434 = tail call float @llvm.nvvm.fabs.f(float %96) #4, !dbg !26
  %.01.i175 = select i1 %.not.i174, float %434, float %433, !dbg !26
  %435 = fcmp ult float %.01.i175, 0x3FE3333340000000, !dbg !26
  br i1 %435, label %__internal_fmad.exit3.i181, label %__internal_fmad.exit1.i176, !dbg !26

__internal_fmad.exit1.i176:                       ; preds = %__nv_tanhf.exit173
  %436 = fmul float %.01.i175, 0x4007154760000000, !dbg !26
  %437 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %436) #4, !dbg !26
  %438 = fadd float %437, 1.000000e+00, !dbg !26
  %439 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %438) #5, !dbg !26, !srcloc !27
  %440 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i177 = icmp eq i32 %440, 0, !dbg !26
  %441 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %439, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %442 = tail call float @llvm.nvvm.fma.rn.f(float %439, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i178 = select i1 %.not6.i177, float %442, float %441, !dbg !26
  %443 = fcmp oge float %.01.i175, 0x4022059680000000, !dbg !26
  %s.0.i179 = select i1 %443, float 1.000000e+00, float %.03.i178, !dbg !26
  %444 = bitcast float %s.0.i179 to i32, !dbg !26
  %445 = bitcast float %96 to i32, !dbg !26
  %446 = and i32 %445, -2147483648, !dbg !26
  %447 = or i32 %446, %444, !dbg !26
  %448 = bitcast i32 %447 to float, !dbg !26
  br label %__nv_tanhf.exit192, !dbg !26

__internal_fmad.exit3.i181:                       ; preds = %__nv_tanhf.exit173
  %449 = fmul float %96, %96, !dbg !26
  %450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i182 = icmp eq i32 %450, 0, !dbg !26
  %451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %449, float 0xBFAAC795C0000000) #4, !dbg !26
  %452 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %449, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i183 = select i1 %.not1.i182, float %452, float %451, !dbg !26
  %453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i184 = icmp eq i32 %453, 0, !dbg !26
  %454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i183, float %449, float 0x3FC10B2820000000) #4, !dbg !26
  %455 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i183, float %449, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i185 = select i1 %.not2.i184, float %455, float %454, !dbg !26
  %456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i186 = icmp eq i32 %456, 0, !dbg !26
  %457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i185, float %449, float 0xBFD5553DA0000000) #4, !dbg !26
  %458 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i185, float %449, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i187 = select i1 %.not3.i186, float %458, float %457, !dbg !26
  %459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i188 = icmp eq i32 %459, 0, !dbg !26
  %460 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i187, float %449, float 0.000000e+00) #4, !dbg !26
  %461 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i187, float %449, float 0.000000e+00) #4, !dbg !26
  %.04.i189 = select i1 %.not4.i188, float %461, float %460, !dbg !26
  %462 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i190 = icmp eq i32 %462, 0, !dbg !26
  %463 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i189, float %96, float %96) #4, !dbg !26
  %464 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i189, float %96, float %96) #4, !dbg !26
  %.02.i191 = select i1 %.not5.i190, float %464, float %463, !dbg !26
  br label %__nv_tanhf.exit192, !dbg !26

__nv_tanhf.exit192:                               ; preds = %__internal_fmad.exit1.i176, %__internal_fmad.exit3.i181
  %s.1.i180 = phi float [ %448, %__internal_fmad.exit1.i176 ], [ %.02.i191, %__internal_fmad.exit3.i181 ], !dbg !26
  %465 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i193 = icmp eq i32 %465, 0, !dbg !26
  %466 = tail call float @llvm.nvvm.fabs.ftz.f(float %97) #4, !dbg !26
  %467 = tail call float @llvm.nvvm.fabs.f(float %97) #4, !dbg !26
  %.01.i194 = select i1 %.not.i193, float %467, float %466, !dbg !26
  %468 = fcmp ult float %.01.i194, 0x3FE3333340000000, !dbg !26
  br i1 %468, label %__internal_fmad.exit3.i200, label %__internal_fmad.exit1.i195, !dbg !26

__internal_fmad.exit1.i195:                       ; preds = %__nv_tanhf.exit192
  %469 = fmul float %.01.i194, 0x4007154760000000, !dbg !26
  %470 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %469) #4, !dbg !26
  %471 = fadd float %470, 1.000000e+00, !dbg !26
  %472 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %471) #5, !dbg !26, !srcloc !27
  %473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i196 = icmp eq i32 %473, 0, !dbg !26
  %474 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %472, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %475 = tail call float @llvm.nvvm.fma.rn.f(float %472, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i197 = select i1 %.not6.i196, float %475, float %474, !dbg !26
  %476 = fcmp oge float %.01.i194, 0x4022059680000000, !dbg !26
  %s.0.i198 = select i1 %476, float 1.000000e+00, float %.03.i197, !dbg !26
  %477 = bitcast float %s.0.i198 to i32, !dbg !26
  %478 = bitcast float %97 to i32, !dbg !26
  %479 = and i32 %478, -2147483648, !dbg !26
  %480 = or i32 %479, %477, !dbg !26
  %481 = bitcast i32 %480 to float, !dbg !26
  br label %__nv_tanhf.exit211, !dbg !26

__internal_fmad.exit3.i200:                       ; preds = %__nv_tanhf.exit192
  %482 = fmul float %97, %97, !dbg !26
  %483 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i201 = icmp eq i32 %483, 0, !dbg !26
  %484 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %482, float 0xBFAAC795C0000000) #4, !dbg !26
  %485 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %482, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i202 = select i1 %.not1.i201, float %485, float %484, !dbg !26
  %486 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i203 = icmp eq i32 %486, 0, !dbg !26
  %487 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i202, float %482, float 0x3FC10B2820000000) #4, !dbg !26
  %488 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i202, float %482, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i204 = select i1 %.not2.i203, float %488, float %487, !dbg !26
  %489 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i205 = icmp eq i32 %489, 0, !dbg !26
  %490 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i204, float %482, float 0xBFD5553DA0000000) #4, !dbg !26
  %491 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i204, float %482, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i206 = select i1 %.not3.i205, float %491, float %490, !dbg !26
  %492 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i207 = icmp eq i32 %492, 0, !dbg !26
  %493 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i206, float %482, float 0.000000e+00) #4, !dbg !26
  %494 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i206, float %482, float 0.000000e+00) #4, !dbg !26
  %.04.i208 = select i1 %.not4.i207, float %494, float %493, !dbg !26
  %495 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i209 = icmp eq i32 %495, 0, !dbg !26
  %496 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i208, float %97, float %97) #4, !dbg !26
  %497 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i208, float %97, float %97) #4, !dbg !26
  %.02.i210 = select i1 %.not5.i209, float %497, float %496, !dbg !26
  br label %__nv_tanhf.exit211, !dbg !26

__nv_tanhf.exit211:                               ; preds = %__internal_fmad.exit1.i195, %__internal_fmad.exit3.i200
  %s.1.i199 = phi float [ %481, %__internal_fmad.exit1.i195 ], [ %.02.i210, %__internal_fmad.exit3.i200 ], !dbg !26
  %498 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i212 = icmp eq i32 %498, 0, !dbg !26
  %499 = tail call float @llvm.nvvm.fabs.ftz.f(float %98) #4, !dbg !26
  %500 = tail call float @llvm.nvvm.fabs.f(float %98) #4, !dbg !26
  %.01.i213 = select i1 %.not.i212, float %500, float %499, !dbg !26
  %501 = fcmp ult float %.01.i213, 0x3FE3333340000000, !dbg !26
  br i1 %501, label %__internal_fmad.exit3.i219, label %__internal_fmad.exit1.i214, !dbg !26

__internal_fmad.exit1.i214:                       ; preds = %__nv_tanhf.exit211
  %502 = fmul float %.01.i213, 0x4007154760000000, !dbg !26
  %503 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %502) #4, !dbg !26
  %504 = fadd float %503, 1.000000e+00, !dbg !26
  %505 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %504) #5, !dbg !26, !srcloc !27
  %506 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i215 = icmp eq i32 %506, 0, !dbg !26
  %507 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %505, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %508 = tail call float @llvm.nvvm.fma.rn.f(float %505, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i216 = select i1 %.not6.i215, float %508, float %507, !dbg !26
  %509 = fcmp oge float %.01.i213, 0x4022059680000000, !dbg !26
  %s.0.i217 = select i1 %509, float 1.000000e+00, float %.03.i216, !dbg !26
  %510 = bitcast float %s.0.i217 to i32, !dbg !26
  %511 = bitcast float %98 to i32, !dbg !26
  %512 = and i32 %511, -2147483648, !dbg !26
  %513 = or i32 %512, %510, !dbg !26
  %514 = bitcast i32 %513 to float, !dbg !26
  br label %__nv_tanhf.exit230, !dbg !26

__internal_fmad.exit3.i219:                       ; preds = %__nv_tanhf.exit211
  %515 = fmul float %98, %98, !dbg !26
  %516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i220 = icmp eq i32 %516, 0, !dbg !26
  %517 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %515, float 0xBFAAC795C0000000) #4, !dbg !26
  %518 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %515, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i221 = select i1 %.not1.i220, float %518, float %517, !dbg !26
  %519 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i222 = icmp eq i32 %519, 0, !dbg !26
  %520 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i221, float %515, float 0x3FC10B2820000000) #4, !dbg !26
  %521 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i221, float %515, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i223 = select i1 %.not2.i222, float %521, float %520, !dbg !26
  %522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i224 = icmp eq i32 %522, 0, !dbg !26
  %523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i223, float %515, float 0xBFD5553DA0000000) #4, !dbg !26
  %524 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i223, float %515, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i225 = select i1 %.not3.i224, float %524, float %523, !dbg !26
  %525 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i226 = icmp eq i32 %525, 0, !dbg !26
  %526 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i225, float %515, float 0.000000e+00) #4, !dbg !26
  %527 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i225, float %515, float 0.000000e+00) #4, !dbg !26
  %.04.i227 = select i1 %.not4.i226, float %527, float %526, !dbg !26
  %528 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i228 = icmp eq i32 %528, 0, !dbg !26
  %529 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i227, float %98, float %98) #4, !dbg !26
  %530 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i227, float %98, float %98) #4, !dbg !26
  %.02.i229 = select i1 %.not5.i228, float %530, float %529, !dbg !26
  br label %__nv_tanhf.exit230, !dbg !26

__nv_tanhf.exit230:                               ; preds = %__internal_fmad.exit1.i214, %__internal_fmad.exit3.i219
  %s.1.i218 = phi float [ %514, %__internal_fmad.exit1.i214 ], [ %.02.i229, %__internal_fmad.exit3.i219 ], !dbg !26
  %531 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i231 = icmp eq i32 %531, 0, !dbg !26
  %532 = tail call float @llvm.nvvm.fabs.ftz.f(float %99) #4, !dbg !26
  %533 = tail call float @llvm.nvvm.fabs.f(float %99) #4, !dbg !26
  %.01.i232 = select i1 %.not.i231, float %533, float %532, !dbg !26
  %534 = fcmp ult float %.01.i232, 0x3FE3333340000000, !dbg !26
  br i1 %534, label %__internal_fmad.exit3.i238, label %__internal_fmad.exit1.i233, !dbg !26

__internal_fmad.exit1.i233:                       ; preds = %__nv_tanhf.exit230
  %535 = fmul float %.01.i232, 0x4007154760000000, !dbg !26
  %536 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %535) #4, !dbg !26
  %537 = fadd float %536, 1.000000e+00, !dbg !26
  %538 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %537) #5, !dbg !26, !srcloc !27
  %539 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i234 = icmp eq i32 %539, 0, !dbg !26
  %540 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %538, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %541 = tail call float @llvm.nvvm.fma.rn.f(float %538, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i235 = select i1 %.not6.i234, float %541, float %540, !dbg !26
  %542 = fcmp oge float %.01.i232, 0x4022059680000000, !dbg !26
  %s.0.i236 = select i1 %542, float 1.000000e+00, float %.03.i235, !dbg !26
  %543 = bitcast float %s.0.i236 to i32, !dbg !26
  %544 = bitcast float %99 to i32, !dbg !26
  %545 = and i32 %544, -2147483648, !dbg !26
  %546 = or i32 %545, %543, !dbg !26
  %547 = bitcast i32 %546 to float, !dbg !26
  br label %__nv_tanhf.exit249, !dbg !26

__internal_fmad.exit3.i238:                       ; preds = %__nv_tanhf.exit230
  %548 = fmul float %99, %99, !dbg !26
  %549 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i239 = icmp eq i32 %549, 0, !dbg !26
  %550 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %548, float 0xBFAAC795C0000000) #4, !dbg !26
  %551 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %548, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i240 = select i1 %.not1.i239, float %551, float %550, !dbg !26
  %552 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i241 = icmp eq i32 %552, 0, !dbg !26
  %553 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i240, float %548, float 0x3FC10B2820000000) #4, !dbg !26
  %554 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i240, float %548, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i242 = select i1 %.not2.i241, float %554, float %553, !dbg !26
  %555 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i243 = icmp eq i32 %555, 0, !dbg !26
  %556 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i242, float %548, float 0xBFD5553DA0000000) #4, !dbg !26
  %557 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i242, float %548, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i244 = select i1 %.not3.i243, float %557, float %556, !dbg !26
  %558 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i245 = icmp eq i32 %558, 0, !dbg !26
  %559 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i244, float %548, float 0.000000e+00) #4, !dbg !26
  %560 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i244, float %548, float 0.000000e+00) #4, !dbg !26
  %.04.i246 = select i1 %.not4.i245, float %560, float %559, !dbg !26
  %561 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i247 = icmp eq i32 %561, 0, !dbg !26
  %562 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i246, float %99, float %99) #4, !dbg !26
  %563 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i246, float %99, float %99) #4, !dbg !26
  %.02.i248 = select i1 %.not5.i247, float %563, float %562, !dbg !26
  br label %__nv_tanhf.exit249, !dbg !26

__nv_tanhf.exit249:                               ; preds = %__internal_fmad.exit1.i233, %__internal_fmad.exit3.i238
  %s.1.i237 = phi float [ %547, %__internal_fmad.exit1.i233 ], [ %.02.i248, %__internal_fmad.exit3.i238 ], !dbg !26
  %564 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i250 = icmp eq i32 %564, 0, !dbg !26
  %565 = tail call float @llvm.nvvm.fabs.ftz.f(float %100) #4, !dbg !26
  %566 = tail call float @llvm.nvvm.fabs.f(float %100) #4, !dbg !26
  %.01.i251 = select i1 %.not.i250, float %566, float %565, !dbg !26
  %567 = fcmp ult float %.01.i251, 0x3FE3333340000000, !dbg !26
  br i1 %567, label %__internal_fmad.exit3.i257, label %__internal_fmad.exit1.i252, !dbg !26

__internal_fmad.exit1.i252:                       ; preds = %__nv_tanhf.exit249
  %568 = fmul float %.01.i251, 0x4007154760000000, !dbg !26
  %569 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %568) #4, !dbg !26
  %570 = fadd float %569, 1.000000e+00, !dbg !26
  %571 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %570) #5, !dbg !26, !srcloc !27
  %572 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i253 = icmp eq i32 %572, 0, !dbg !26
  %573 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %571, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %574 = tail call float @llvm.nvvm.fma.rn.f(float %571, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i254 = select i1 %.not6.i253, float %574, float %573, !dbg !26
  %575 = fcmp oge float %.01.i251, 0x4022059680000000, !dbg !26
  %s.0.i255 = select i1 %575, float 1.000000e+00, float %.03.i254, !dbg !26
  %576 = bitcast float %s.0.i255 to i32, !dbg !26
  %577 = bitcast float %100 to i32, !dbg !26
  %578 = and i32 %577, -2147483648, !dbg !26
  %579 = or i32 %578, %576, !dbg !26
  %580 = bitcast i32 %579 to float, !dbg !26
  br label %__nv_tanhf.exit268, !dbg !26

__internal_fmad.exit3.i257:                       ; preds = %__nv_tanhf.exit249
  %581 = fmul float %100, %100, !dbg !26
  %582 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i258 = icmp eq i32 %582, 0, !dbg !26
  %583 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %581, float 0xBFAAC795C0000000) #4, !dbg !26
  %584 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %581, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i259 = select i1 %.not1.i258, float %584, float %583, !dbg !26
  %585 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i260 = icmp eq i32 %585, 0, !dbg !26
  %586 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i259, float %581, float 0x3FC10B2820000000) #4, !dbg !26
  %587 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i259, float %581, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i261 = select i1 %.not2.i260, float %587, float %586, !dbg !26
  %588 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i262 = icmp eq i32 %588, 0, !dbg !26
  %589 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i261, float %581, float 0xBFD5553DA0000000) #4, !dbg !26
  %590 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i261, float %581, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i263 = select i1 %.not3.i262, float %590, float %589, !dbg !26
  %591 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i264 = icmp eq i32 %591, 0, !dbg !26
  %592 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i263, float %581, float 0.000000e+00) #4, !dbg !26
  %593 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i263, float %581, float 0.000000e+00) #4, !dbg !26
  %.04.i265 = select i1 %.not4.i264, float %593, float %592, !dbg !26
  %594 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i266 = icmp eq i32 %594, 0, !dbg !26
  %595 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i265, float %100, float %100) #4, !dbg !26
  %596 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i265, float %100, float %100) #4, !dbg !26
  %.02.i267 = select i1 %.not5.i266, float %596, float %595, !dbg !26
  br label %__nv_tanhf.exit268, !dbg !26

__nv_tanhf.exit268:                               ; preds = %__internal_fmad.exit1.i252, %__internal_fmad.exit3.i257
  %s.1.i256 = phi float [ %580, %__internal_fmad.exit1.i252 ], [ %.02.i267, %__internal_fmad.exit3.i257 ], !dbg !26
  %597 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i269 = icmp eq i32 %597, 0, !dbg !26
  %598 = tail call float @llvm.nvvm.fabs.ftz.f(float %101) #4, !dbg !26
  %599 = tail call float @llvm.nvvm.fabs.f(float %101) #4, !dbg !26
  %.01.i270 = select i1 %.not.i269, float %599, float %598, !dbg !26
  %600 = fcmp ult float %.01.i270, 0x3FE3333340000000, !dbg !26
  br i1 %600, label %__internal_fmad.exit3.i276, label %__internal_fmad.exit1.i271, !dbg !26

__internal_fmad.exit1.i271:                       ; preds = %__nv_tanhf.exit268
  %601 = fmul float %.01.i270, 0x4007154760000000, !dbg !26
  %602 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %601) #4, !dbg !26
  %603 = fadd float %602, 1.000000e+00, !dbg !26
  %604 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %603) #5, !dbg !26, !srcloc !27
  %605 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i272 = icmp eq i32 %605, 0, !dbg !26
  %606 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %604, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %607 = tail call float @llvm.nvvm.fma.rn.f(float %604, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i273 = select i1 %.not6.i272, float %607, float %606, !dbg !26
  %608 = fcmp oge float %.01.i270, 0x4022059680000000, !dbg !26
  %s.0.i274 = select i1 %608, float 1.000000e+00, float %.03.i273, !dbg !26
  %609 = bitcast float %s.0.i274 to i32, !dbg !26
  %610 = bitcast float %101 to i32, !dbg !26
  %611 = and i32 %610, -2147483648, !dbg !26
  %612 = or i32 %611, %609, !dbg !26
  %613 = bitcast i32 %612 to float, !dbg !26
  br label %__nv_tanhf.exit287, !dbg !26

__internal_fmad.exit3.i276:                       ; preds = %__nv_tanhf.exit268
  %614 = fmul float %101, %101, !dbg !26
  %615 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i277 = icmp eq i32 %615, 0, !dbg !26
  %616 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %614, float 0xBFAAC795C0000000) #4, !dbg !26
  %617 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %614, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i278 = select i1 %.not1.i277, float %617, float %616, !dbg !26
  %618 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i279 = icmp eq i32 %618, 0, !dbg !26
  %619 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i278, float %614, float 0x3FC10B2820000000) #4, !dbg !26
  %620 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i278, float %614, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i280 = select i1 %.not2.i279, float %620, float %619, !dbg !26
  %621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i281 = icmp eq i32 %621, 0, !dbg !26
  %622 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i280, float %614, float 0xBFD5553DA0000000) #4, !dbg !26
  %623 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i280, float %614, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i282 = select i1 %.not3.i281, float %623, float %622, !dbg !26
  %624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i283 = icmp eq i32 %624, 0, !dbg !26
  %625 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i282, float %614, float 0.000000e+00) #4, !dbg !26
  %626 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i282, float %614, float 0.000000e+00) #4, !dbg !26
  %.04.i284 = select i1 %.not4.i283, float %626, float %625, !dbg !26
  %627 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i285 = icmp eq i32 %627, 0, !dbg !26
  %628 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i284, float %101, float %101) #4, !dbg !26
  %629 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i284, float %101, float %101) #4, !dbg !26
  %.02.i286 = select i1 %.not5.i285, float %629, float %628, !dbg !26
  br label %__nv_tanhf.exit287, !dbg !26

__nv_tanhf.exit287:                               ; preds = %__internal_fmad.exit1.i271, %__internal_fmad.exit3.i276
  %s.1.i275 = phi float [ %613, %__internal_fmad.exit1.i271 ], [ %.02.i286, %__internal_fmad.exit3.i276 ], !dbg !26
  %630 = and i32 %9, 252, !dbg !17
  %631 = or disjoint i32 %14, %630, !dbg !18
  %.lobit1 = lshr i32 %8, 6, !dbg !12
  %632 = and i32 %.lobit1, 3, !dbg !12
  %633 = or disjoint i32 %632, %7, !dbg !13
  %634 = or disjoint i32 %633, 12, !dbg !13
  %635 = icmp slt i32 %634, 16, !dbg !14
  %636 = or disjoint i32 %633, 8, !dbg !13
  %637 = icmp slt i32 %636, 16, !dbg !14
  %638 = or disjoint i32 %633, 4, !dbg !13
  %639 = icmp slt i32 %638, 16, !dbg !14
  %640 = icmp slt i32 %633, 16, !dbg !14
  %641 = shl i32 %633, 12, !dbg !28
  %642 = shl i32 %638, 12, !dbg !28
  %643 = shl i32 %636, 12, !dbg !28
  %644 = shl i32 %634, 12, !dbg !28
  %645 = add i32 %631, %641, !dbg !29
  %646 = add i32 %631, %642, !dbg !29
  %647 = add i32 %631, %643, !dbg !29
  %648 = add i32 %631, %644, !dbg !29
  %649 = sext i32 %645 to i64, !dbg !30
  %650 = getelementptr float, ptr addrspace(1) %2, i64 %649, !dbg !30
  %651 = sext i32 %646 to i64, !dbg !30
  %652 = getelementptr float, ptr addrspace(1) %2, i64 %651, !dbg !30
  %653 = sext i32 %647 to i64, !dbg !30
  %654 = getelementptr float, ptr addrspace(1) %2, i64 %653, !dbg !30
  %655 = sext i32 %648 to i64, !dbg !30
  %656 = getelementptr float, ptr addrspace(1) %2, i64 %655, !dbg !30
  %657 = shl i32 %8, 10, !dbg !31
  %658 = and i32 %657, 3072, !dbg !31
  %659 = or disjoint i32 %658, %16, !dbg !31
  %660 = and i32 %9, 1020, !dbg !31
  %661 = lshr exact i32 %658, 6, !dbg !31
  %662 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %661, !dbg !31
  %663 = getelementptr float, ptr addrspace(3) %662, i32 %659, !dbg !31
  %664 = bitcast float %s.1.i to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %663, <1 x i32> %664, i1 true) #4, !dbg !31
  %665 = or disjoint i32 %659, 256, !dbg !31
  %666 = lshr i32 %665, 8, !dbg !31
  %667 = getelementptr float, ptr addrspace(3) @global_smem, i32 %666, !dbg !31
  %668 = getelementptr float, ptr addrspace(3) %667, i32 %665, !dbg !31
  %669 = bitcast float %s.1.i9 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %668, <1 x i32> %669, i1 true) #4, !dbg !31
  %670 = or disjoint i32 %659, 512, !dbg !31
  %671 = lshr i32 %670, 8, !dbg !31
  %672 = getelementptr float, ptr addrspace(3) @global_smem, i32 %671, !dbg !31
  %673 = getelementptr float, ptr addrspace(3) %672, i32 %670, !dbg !31
  %674 = bitcast float %s.1.i28 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %673, <1 x i32> %674, i1 true) #4, !dbg !31
  %675 = or disjoint i32 %659, 768, !dbg !31
  %676 = lshr i32 %675, 8, !dbg !31
  %677 = getelementptr float, ptr addrspace(3) @global_smem, i32 %676, !dbg !31
  %678 = getelementptr float, ptr addrspace(3) %677, i32 %675, !dbg !31
  %679 = bitcast float %s.1.i47 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %678, <1 x i32> %679, i1 true) #4, !dbg !31
  %680 = or disjoint i32 %659, 64, !dbg !31
  %681 = getelementptr float, ptr addrspace(3) %662, i32 %680, !dbg !31
  %682 = bitcast float %s.1.i66 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %681, <1 x i32> %682, i1 true) #4, !dbg !31
  %683 = or disjoint i32 %659, 320, !dbg !31
  %684 = lshr i32 %683, 8, !dbg !31
  %685 = getelementptr float, ptr addrspace(3) @global_smem, i32 %684, !dbg !31
  %686 = getelementptr float, ptr addrspace(3) %685, i32 %683, !dbg !31
  %687 = bitcast float %s.1.i85 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %686, <1 x i32> %687, i1 true) #4, !dbg !31
  %688 = or disjoint i32 %659, 576, !dbg !31
  %689 = lshr i32 %688, 8, !dbg !31
  %690 = getelementptr float, ptr addrspace(3) @global_smem, i32 %689, !dbg !31
  %691 = getelementptr float, ptr addrspace(3) %690, i32 %688, !dbg !31
  %692 = bitcast float %s.1.i104 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %691, <1 x i32> %692, i1 true) #4, !dbg !31
  %693 = or disjoint i32 %659, 832, !dbg !31
  %694 = lshr i32 %693, 8, !dbg !31
  %695 = getelementptr float, ptr addrspace(3) @global_smem, i32 %694, !dbg !31
  %696 = getelementptr float, ptr addrspace(3) %695, i32 %693, !dbg !31
  %697 = bitcast float %s.1.i123 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %696, <1 x i32> %697, i1 true) #4, !dbg !31
  %698 = or disjoint i32 %659, 128, !dbg !31
  %699 = getelementptr float, ptr addrspace(3) %662, i32 %698, !dbg !31
  %700 = bitcast float %s.1.i142 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %699, <1 x i32> %700, i1 true) #4, !dbg !31
  %701 = or disjoint i32 %659, 384, !dbg !31
  %702 = lshr i32 %701, 8, !dbg !31
  %703 = getelementptr float, ptr addrspace(3) @global_smem, i32 %702, !dbg !31
  %704 = getelementptr float, ptr addrspace(3) %703, i32 %701, !dbg !31
  %705 = bitcast float %s.1.i161 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %704, <1 x i32> %705, i1 true) #4, !dbg !31
  %706 = or disjoint i32 %659, 640, !dbg !31
  %707 = lshr i32 %706, 8, !dbg !31
  %708 = getelementptr float, ptr addrspace(3) @global_smem, i32 %707, !dbg !31
  %709 = getelementptr float, ptr addrspace(3) %708, i32 %706, !dbg !31
  %710 = bitcast float %s.1.i180 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %709, <1 x i32> %710, i1 true) #4, !dbg !31
  %711 = or disjoint i32 %659, 896, !dbg !31
  %712 = lshr i32 %711, 8, !dbg !31
  %713 = getelementptr float, ptr addrspace(3) @global_smem, i32 %712, !dbg !31
  %714 = getelementptr float, ptr addrspace(3) %713, i32 %711, !dbg !31
  %715 = bitcast float %s.1.i199 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %714, <1 x i32> %715, i1 true) #4, !dbg !31
  %716 = or disjoint i32 %659, 192, !dbg !31
  %717 = getelementptr float, ptr addrspace(3) %662, i32 %716, !dbg !31
  %718 = bitcast float %s.1.i218 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %717, <1 x i32> %718, i1 true) #4, !dbg !31
  %719 = or disjoint i32 %659, 448, !dbg !31
  %720 = lshr i32 %719, 8, !dbg !31
  %721 = getelementptr float, ptr addrspace(3) @global_smem, i32 %720, !dbg !31
  %722 = getelementptr float, ptr addrspace(3) %721, i32 %719, !dbg !31
  %723 = bitcast float %s.1.i237 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %722, <1 x i32> %723, i1 true) #4, !dbg !31
  %724 = or disjoint i32 %659, 704, !dbg !31
  %725 = lshr i32 %724, 8, !dbg !31
  %726 = getelementptr float, ptr addrspace(3) @global_smem, i32 %725, !dbg !31
  %727 = getelementptr float, ptr addrspace(3) %726, i32 %724, !dbg !31
  %728 = bitcast float %s.1.i256 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %727, <1 x i32> %728, i1 true) #4, !dbg !31
  %729 = or disjoint i32 %659, 960, !dbg !31
  %730 = lshr i32 %729, 8, !dbg !31
  %731 = getelementptr float, ptr addrspace(3) @global_smem, i32 %730, !dbg !31
  %732 = getelementptr float, ptr addrspace(3) %731, i32 %729, !dbg !31
  %733 = bitcast float %s.1.i275 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %732, <1 x i32> %733, i1 true) #4, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %734 = lshr i32 %660, 8, !dbg !31
  %735 = or disjoint i32 %734, %660, !dbg !31
  %736 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %735, !dbg !31
  %737 = load i32, ptr addrspace(3) %736, align 4, !dbg !31
  %738 = or disjoint i32 %660, 1, !dbg !31
  %739 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %734, !dbg !31
  %740 = getelementptr inbounds float, ptr addrspace(3) %739, i32 %738, !dbg !31
  %741 = load i32, ptr addrspace(3) %740, align 4, !dbg !31
  %742 = or disjoint i32 %660, 2, !dbg !31
  %743 = getelementptr inbounds float, ptr addrspace(3) %739, i32 %742, !dbg !31
  %744 = load i32, ptr addrspace(3) %743, align 4, !dbg !31
  %745 = or disjoint i32 %660, 3, !dbg !31
  %746 = getelementptr inbounds float, ptr addrspace(3) %739, i32 %745, !dbg !31
  %747 = load i32, ptr addrspace(3) %746, align 4, !dbg !31
  %748 = or disjoint i32 %660, 1024, !dbg !31
  %749 = lshr i32 %748, 8, !dbg !31
  %750 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %749, !dbg !31
  %751 = getelementptr inbounds float, ptr addrspace(3) %750, i32 %748, !dbg !31
  %752 = load i32, ptr addrspace(3) %751, align 4, !dbg !31
  %753 = or disjoint i32 %660, 1025, !dbg !31
  %754 = lshr i32 %753, 8, !dbg !31
  %755 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %754, !dbg !31
  %756 = getelementptr inbounds float, ptr addrspace(3) %755, i32 %753, !dbg !31
  %757 = load i32, ptr addrspace(3) %756, align 4, !dbg !31
  %758 = or disjoint i32 %660, 1026, !dbg !31
  %759 = lshr i32 %758, 8, !dbg !31
  %760 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %759, !dbg !31
  %761 = getelementptr inbounds float, ptr addrspace(3) %760, i32 %758, !dbg !31
  %762 = load i32, ptr addrspace(3) %761, align 4, !dbg !31
  %763 = or disjoint i32 %660, 1027, !dbg !31
  %764 = lshr i32 %763, 8, !dbg !31
  %765 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %764, !dbg !31
  %766 = getelementptr inbounds float, ptr addrspace(3) %765, i32 %763, !dbg !31
  %767 = load i32, ptr addrspace(3) %766, align 4, !dbg !31
  %768 = or disjoint i32 %660, 2048, !dbg !31
  %769 = lshr i32 %768, 8, !dbg !31
  %770 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %769, !dbg !31
  %771 = getelementptr inbounds float, ptr addrspace(3) %770, i32 %768, !dbg !31
  %772 = load i32, ptr addrspace(3) %771, align 4, !dbg !31
  %773 = or disjoint i32 %660, 2049, !dbg !31
  %774 = lshr i32 %773, 8, !dbg !31
  %775 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %774, !dbg !31
  %776 = getelementptr inbounds float, ptr addrspace(3) %775, i32 %773, !dbg !31
  %777 = load i32, ptr addrspace(3) %776, align 4, !dbg !31
  %778 = or disjoint i32 %660, 2050, !dbg !31
  %779 = lshr i32 %778, 8, !dbg !31
  %780 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %779, !dbg !31
  %781 = getelementptr inbounds float, ptr addrspace(3) %780, i32 %778, !dbg !31
  %782 = load i32, ptr addrspace(3) %781, align 4, !dbg !31
  %783 = or disjoint i32 %660, 2051, !dbg !31
  %784 = lshr i32 %783, 8, !dbg !31
  %785 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %784, !dbg !31
  %786 = getelementptr inbounds float, ptr addrspace(3) %785, i32 %783, !dbg !31
  %787 = load i32, ptr addrspace(3) %786, align 4, !dbg !31
  %788 = or disjoint i32 %660, 3072, !dbg !31
  %789 = lshr i32 %788, 8, !dbg !31
  %790 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %789, !dbg !31
  %791 = getelementptr inbounds float, ptr addrspace(3) %790, i32 %788, !dbg !31
  %792 = load i32, ptr addrspace(3) %791, align 4, !dbg !31
  %793 = or disjoint i32 %660, 3073, !dbg !31
  %794 = lshr i32 %793, 8, !dbg !31
  %795 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %794, !dbg !31
  %796 = getelementptr inbounds float, ptr addrspace(3) %795, i32 %793, !dbg !31
  %797 = load i32, ptr addrspace(3) %796, align 4, !dbg !31
  %798 = or disjoint i32 %660, 3074, !dbg !31
  %799 = lshr i32 %798, 8, !dbg !31
  %800 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %799, !dbg !31
  %801 = getelementptr inbounds float, ptr addrspace(3) %800, i32 %798, !dbg !31
  %802 = load i32, ptr addrspace(3) %801, align 4, !dbg !31
  %803 = or disjoint i32 %660, 3075, !dbg !31
  %804 = lshr i32 %803, 8, !dbg !31
  %805 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %804, !dbg !31
  %806 = getelementptr inbounds float, ptr addrspace(3) %805, i32 %803, !dbg !31
  %807 = load i32, ptr addrspace(3) %806, align 4, !dbg !31
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %737, i32 %741, i32 %744, i32 %747, ptr addrspace(1) %650, i1 %640) #4, !dbg !31
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %752, i32 %757, i32 %762, i32 %767, ptr addrspace(1) %652, i1 %639) #4, !dbg !31
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %772, i32 %777, i32 %782, i32 %787, ptr addrspace(1) %654, i1 %637) #4, !dbg !31
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %792, i32 %797, i32 %802, i32 %807, ptr addrspace(1) %656, i1 %635) #4, !dbg !31
  ret void, !dbg !32
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ccz4uljlxfrhzf5d7xrydaiqb2hczln5eggdlkv362ps3jrmbrry.py", directory: "inductor_cache/cz")
!4 = !{ptr @triton_poi_fused_convolution_tanh_19, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_tanh_19, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_tanh_19", linkageName: "triton_poi_fused_convolution_tanh_19", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 32, column: 37, scope: !7)
!20 = !DILocation(line: 32, column: 48, scope: !7)
!21 = !DILocation(line: 32, column: 42, scope: !7)
!22 = !DILocation(line: 32, column: 30, scope: !7)
!23 = !DILocation(line: 32, column: 53, scope: !7)
!24 = !DILocation(line: 33, column: 35, scope: !7)
!25 = !DILocation(line: 34, column: 18, scope: !7)
!26 = !DILocation(line: 35, column: 26, scope: !7)
!27 = !{i32 21046}
!28 = !DILocation(line: 36, column: 35, scope: !7)
!29 = !DILocation(line: 36, column: 30, scope: !7)
!30 = !DILocation(line: 36, column: 25, scope: !7)
!31 = !DILocation(line: 36, column: 46, scope: !7)
!32 = !DILocation(line: 36, column: 4, scope: !7)
