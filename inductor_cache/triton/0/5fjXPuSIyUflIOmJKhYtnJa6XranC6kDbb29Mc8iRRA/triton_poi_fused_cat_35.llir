; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_35(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 2048, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 256, !dbg !15
  %12 = srem i32 %11, 2, !dbg !16
  %13 = mul i32 %11, 256, !dbg !17
  %.decomposed = sub i32 %.frozen, %13, !dbg !17
  %.frozen2 = freeze i32 %9, !dbg !18
  %14 = sdiv i32 %.frozen2, 512, !dbg !18
  %15 = icmp slt i32 %12, 1, !dbg !19
  %16 = shl nsw i32 %12, 8, !dbg !20
  %17 = mul i32 %14, 512, !dbg !21
  %srem.decomposed = sub i32 %.frozen2, %17, !dbg !21
  %18 = shl i32 %14, 10, !dbg !22
  %19 = add i32 %18, %srem.decomposed, !dbg !23
  %20 = sext i32 %19 to i64, !dbg !24
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !24
  %22 = and i1 %10, %15, !dbg !25
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %21, i1 %22, i32 0, i1 %22) #1, !dbg !26
  %24 = sext i32 %12 to i64, !dbg !27
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !27
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %22, i32 0, i1 %22) #1, !dbg !28
  %27 = add i32 %18, %.decomposed, !dbg !29
  %28 = add i32 %27, 256, !dbg !30
  %29 = add i32 %28, %16, !dbg !31
  %30 = sext i32 %29 to i64, !dbg !32
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !32
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %22, i32 0, i1 %22) #1, !dbg !33
  %33 = getelementptr i8, ptr addrspace(1) %25, i64 4, !dbg !34
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %22, i32 0, i1 %22) #1, !dbg !35
  %35 = insertelement <2 x i32> poison, i32 %23, i64 0, !dbg !26
  %36 = insertelement <2 x i32> %35, i32 %32, i64 1, !dbg !26
  %37 = bitcast <2 x i32> %36 to <2 x float>, !dbg !26
  %38 = insertelement <2 x i32> poison, i32 %26, i64 0, !dbg !28
  %39 = insertelement <2 x i32> %38, i32 %34, i64 1, !dbg !28
  %40 = bitcast <2 x i32> %39 to <2 x float>, !dbg !28
  %41 = fadd <2 x float> %37, %40, !dbg !36
  %42 = extractelement <2 x float> %41, i64 0, !dbg !37
  %43 = extractelement <2 x float> %41, i64 1, !dbg !37
  %44 = fcmp ogt float %42, %43, !dbg !41
  %45 = fcmp uno float %42, 0.000000e+00, !dbg !42
  %46 = or i1 %45, %44, !dbg !43
  %47 = select i1 %46, float %42, float %43, !dbg !37
  %48 = or disjoint i32 %18, 512, !dbg !44
  %49 = add nsw i32 %48, %.decomposed, !dbg !45
  %50 = add i32 %49, %16, !dbg !46
  %51 = sext i32 %50 to i64, !dbg !47
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !47
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %22, i32 0, i1 %22) #1, !dbg !48
  %54 = bitcast i32 %53 to float, !dbg !48
  %55 = getelementptr i8, ptr addrspace(1) %25, i64 8, !dbg !49
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %22, i32 0, i1 %22) #1, !dbg !50
  %57 = bitcast i32 %56 to float, !dbg !50
  %58 = fadd float %54, %57, !dbg !51
  %59 = fcmp ogt float %47, %58, !dbg !52
  %60 = fcmp uno float %47, 0.000000e+00, !dbg !54
  %61 = or i1 %59, %60, !dbg !55
  %62 = select i1 %61, float %47, float %58, !dbg !56
  %63 = icmp sgt i32 %12, 0, !dbg !57
  %64 = add nsw i32 %48, %srem.decomposed, !dbg !58
  %65 = sext i32 %64 to i64, !dbg !59
  %66 = getelementptr float, ptr addrspace(1) %0, i64 %65, !dbg !59
  %67 = and i1 %10, %63, !dbg !60
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %66, i1 %67, i32 0, i1 %67) #1, !dbg !61
  %69 = bitcast i32 %68 to float, !dbg !61
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %67, i32 0, i1 %67) #1, !dbg !62
  %71 = bitcast i32 %70 to float, !dbg !62
  %72 = fadd float %69, %71, !dbg !63
  %73 = select i1 %15, float %62, float %72, !dbg !64
  %74 = sext i32 %9 to i64, !dbg !65
  %75 = getelementptr float, ptr addrspace(1) %2, i64 %74, !dbg !65
  %76 = bitcast float %73 to i32, !dbg !66
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %76, ptr addrspace(1) %75, i1 %10) #1, !dbg !66
  ret void, !dbg !67
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmhys26ef6sjzh4iqu4yeewzsbnqcpgi7ajmljsv37onfw2jiavv.py", directory: "inductor_cache/mh")
!4 = !{ptr @triton_poi_fused_cat_35, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_35, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_35", linkageName: "triton_poi_fused_cat_35", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 28, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 40, scope: !7)
!21 = !DILocation(line: 33, column: 35, scope: !7)
!22 = !DILocation(line: 33, column: 51, scope: !7)
!23 = !DILocation(line: 33, column: 46, scope: !7)
!24 = !DILocation(line: 33, column: 30, scope: !7)
!25 = !DILocation(line: 33, column: 63, scope: !7)
!26 = !DILocation(line: 33, column: 56, scope: !7)
!27 = !DILocation(line: 34, column: 30, scope: !7)
!28 = !DILocation(line: 34, column: 35, scope: !7)
!29 = !DILocation(line: 36, column: 36, scope: !7)
!30 = !DILocation(line: 36, column: 41, scope: !7)
!31 = !DILocation(line: 36, column: 52, scope: !7)
!32 = !DILocation(line: 36, column: 30, scope: !7)
!33 = !DILocation(line: 36, column: 62, scope: !7)
!34 = !DILocation(line: 37, column: 30, scope: !7)
!35 = !DILocation(line: 37, column: 41, scope: !7)
!36 = !DILocation(line: 35, column: 18, scope: !7)
!37 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !7, file: !39, discriminator: 0)
!39 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!40 = !DILocation(line: 39, column: 41, scope: !7)
!41 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !40)
!42 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !40)
!43 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !40)
!44 = !DILocation(line: 40, column: 37, scope: !7)
!45 = !DILocation(line: 40, column: 42, scope: !7)
!46 = !DILocation(line: 40, column: 53, scope: !7)
!47 = !DILocation(line: 40, column: 31, scope: !7)
!48 = !DILocation(line: 40, column: 63, scope: !7)
!49 = !DILocation(line: 41, column: 31, scope: !7)
!50 = !DILocation(line: 41, column: 42, scope: !7)
!51 = !DILocation(line: 42, column: 20, scope: !7)
!52 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !53)
!53 = !DILocation(line: 43, column: 42, scope: !7)
!54 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !53)
!55 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !53)
!56 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !53)
!57 = !DILocation(line: 46, column: 20, scope: !7)
!58 = !DILocation(line: 49, column: 60, scope: !7)
!59 = !DILocation(line: 49, column: 31, scope: !7)
!60 = !DILocation(line: 49, column: 78, scope: !7)
!61 = !DILocation(line: 49, column: 70, scope: !7)
!62 = !DILocation(line: 50, column: 49, scope: !7)
!63 = !DILocation(line: 51, column: 20, scope: !7)
!64 = !DILocation(line: 0, scope: !7)
!65 = !DILocation(line: 55, column: 25, scope: !7)
!66 = !DILocation(line: 55, column: 37, scope: !7)
!67 = !DILocation(line: 55, column: 4, scope: !7)
