//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_convolution_elu_3 // -- Begin function triton_per_fused__native_batch_norm_legit_convolution_elu_3
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_convolution_elu_3
.visible .entry triton_per_fused__native_batch_norm_legit_convolution_elu_3(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_elu_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_elu_3_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_elu_3_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_elu_3_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_elu_3_param_4,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_elu_3_param_5,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_elu_3_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<41>;
	.reg .b32 	%r<84>;
	.reg .f32 	%f<170>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd10, [triton_per_fused__native_batch_norm_legit_convolution_elu_3_param_0];
	ld.param.u64 	%rd11, [triton_per_fused__native_batch_norm_legit_convolution_elu_3_param_1];
$L__tmp0:
	.loc	1 24 28                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd12, [triton_per_fused__native_batch_norm_legit_convolution_elu_3_param_2];
	.loc	1 27 26                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:27:26
	mov.u32 	%r38, %tid.x;
	and.b32  	%r39, %r38, 31;
	ld.param.u64 	%rd13, [triton_per_fused__native_batch_norm_legit_convolution_elu_3_param_3];
	ld.param.u64 	%rd14, [triton_per_fused__native_batch_norm_legit_convolution_elu_3_param_4];
	shl.b32 	%r40, %r38, 2;
	and.b32  	%r41, %r40, 1020;
	.loc	1 32 19                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:32:19
	shr.s32 	%r42, %r1, 31;
	shr.u32 	%r43, %r42, 25;
	add.s32 	%r44, %r1, %r43;
	and.b32  	%r45, %r44, -128;
	sub.s32 	%r46, %r1, %r45;
	.loc	1 33 44                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:33:44
	shl.b32 	%r47, %r1, 10;
	.loc	1 33 39                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:33:39
	or.b32  	%r48, %r47, %r41;
	.loc	1 33 34                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:33:34
	mul.wide.s32 	%rd15, %r48, 4;
	add.s64 	%rd1, %rd10, %rd15;
	mov.pred 	%p1, -1;
	.loc	1 33 49                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:33:49
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 34 30                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:34:30
	mul.wide.s32 	%rd16, %r46, 4;
	add.s64 	%rd2, %rd12, %rd16;
	.loc	1 34 35                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:34:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r9;
	.loc	1 35 18                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:35:18
	add.f32 	%f6, %f1, %f5;
	add.f32 	%f7, %f2, %f5;
	add.f32 	%f8, %f3, %f5;
	add.f32 	%f9, %f4, %f5;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f6, %f7;
	add.f32 	%f11, %f8, %f10;
	add.f32 	%f12, %f9, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f12;
	shfl.sync.bfly.b32	%r50, %r49, 16, 31, -1;
	mov.b32 	%f13, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f14;
	shfl.sync.bfly.b32	%r52, %r51, 8, 31, -1;
	mov.b32 	%f15, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f16;
	shfl.sync.bfly.b32	%r54, %r53, 4, 31, -1;
	mov.b32 	%f17, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f18;
	shfl.sync.bfly.b32	%r56, %r55, 2, 31, -1;
	mov.b32 	%f19, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f20;
	shfl.sync.bfly.b32	%r58, %r57, 1, 31, -1;
	mov.b32 	%f21, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p6, %r39, 0;
	shr.u32 	%r59, %r38, 3;
	and.b32  	%r60, %r59, 28;
	mov.u32 	%r61, global_smem;
	add.s32 	%r10, %r61, %r60;
	mov.b32 	%r11, %f22;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p7, %r38, 8;
	add.s32 	%r13, %r61, %r40;
	// begin inline asm
	@%p7 ld.shared.b32 %r12, [ %r13 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r12;
	shfl.sync.bfly.b32	%r62, %r12, 4, 31, -1;
	mov.b32 	%f24, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f25;
	shfl.sync.bfly.b32	%r64, %r63, 2, 31, -1;
	mov.b32 	%f26, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f27;
	shfl.sync.bfly.b32	%r66, %r65, 1, 31, -1;
	mov.b32 	%f28, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r67, %r38, 7;
	setp.eq.s32 	%p16, %r67, 0;
	and.pred  	%p8, %p7, %p16;
	mov.b32 	%r15, %f29;
	// begin inline asm
	@%p8 st.shared.b32 [ %r13 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f30, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f31, %f30, 0f00000000;
$L__tmp3:
	.loc	1 41 19                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:41:19
	mov.b32 	%r17, %f31;
	mov.b32 	%r18, 1149239296;
	// begin inline asm
	div.full.f32 %r37, %r17, %r18;
	// end inline asm
	mov.b32 	%f32, %r37;
	.loc	1 42 19                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:42:19
	sub.f32 	%f33, %f6, %f32;
	sub.f32 	%f34, %f7, %f32;
	sub.f32 	%f35, %f8, %f32;
	sub.f32 	%f36, %f9, %f32;
	.loc	1 43 20                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:43:20
	mul.f32 	%f37, %f34, %f34;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f38, %f33, %f33, %f37;
	fma.rn.f32 	%f39, %f35, %f35, %f38;
	fma.rn.f32 	%f40, %f36, %f36, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f40;
	shfl.sync.bfly.b32	%r69, %r68, 16, 31, -1;
	mov.b32 	%f41, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f42;
	shfl.sync.bfly.b32	%r71, %r70, 8, 31, -1;
	mov.b32 	%f43, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f44;
	shfl.sync.bfly.b32	%r73, %r72, 4, 31, -1;
	mov.b32 	%f45, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f46;
	shfl.sync.bfly.b32	%r75, %r74, 2, 31, -1;
	mov.b32 	%f47, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f48;
	shfl.sync.bfly.b32	%r77, %r76, 1, 31, -1;
	mov.b32 	%f49, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r20, %f50;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p7 ld.shared.b32 %r21, [ %r13 + 0 ];
	// end inline asm
	mov.b32 	%f51, %r21;
	shfl.sync.bfly.b32	%r78, %r21, 4, 31, -1;
	mov.b32 	%f52, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f53;
	shfl.sync.bfly.b32	%r80, %r79, 2, 31, -1;
	mov.b32 	%f54, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f55;
	shfl.sync.bfly.b32	%r82, %r81, 1, 31, -1;
	mov.b32 	%f56, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f57;
	// begin inline asm
	@%p8 st.shared.b32 [ %r13 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f58, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f59, %f58, 0f00000000;
$L__tmp6:
	.loc	1 47 20                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:47:20
	mov.b32 	%r26, %f59;
	// begin inline asm
	div.full.f32 %r25, %r26, %r18;
	// end inline asm
	mov.b32 	%f60, %r25;
	.loc	1 49 20                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:49:20
	add.f32 	%f61, %f60, 0f3727C5AC;
	.loc	1 50 28                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:50:28
	rsqrt.approx.ftz.f32 	%f62, %f61;
	.loc	1 52 20                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:52:20
	mul.f32 	%f63, %f33, %f62;
	mul.f32 	%f64, %f34, %f62;
	mul.f32 	%f65, %f35, %f62;
	mul.f32 	%f66, %f36, %f62;
	.loc	1 57 28                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:57:28
	mul.f32 	%f67, %f63, 0f3FB8AA3B;
	cvt.rni.f32.f32 	%f68, %f67;
	abs.ftz.f32 	%f69, %f63;
	setp.lt.f32 	%p17, %f69, 0f3ED1EB85;
	selp.f32 	%f70, 0f00000000, %f68, %p17;
	setp.eq.f32 	%p18, %f70, 0f43000000;
	selp.f32 	%f71, 0f42FE0000, %f70, %p18;
	ex2.approx.ftz.f32 	%f72, %f71;
	mul.f32 	%f73, %f64, 0f3FB8AA3B;
	cvt.rni.f32.f32 	%f74, %f73;
	abs.ftz.f32 	%f75, %f64;
	setp.lt.f32 	%p19, %f75, 0f3ED1EB85;
	selp.f32 	%f76, 0f00000000, %f74, %p19;
	setp.eq.f32 	%p20, %f76, 0f43000000;
	selp.f32 	%f77, 0f42FE0000, %f76, %p20;
	ex2.approx.ftz.f32 	%f78, %f77;
	mul.f32 	%f79, %f65, 0f3FB8AA3B;
	cvt.rni.f32.f32 	%f80, %f79;
	abs.ftz.f32 	%f81, %f65;
	setp.lt.f32 	%p21, %f81, 0f3ED1EB85;
	selp.f32 	%f82, 0f00000000, %f80, %p21;
	setp.eq.f32 	%p22, %f82, 0f43000000;
	selp.f32 	%f83, 0f42FE0000, %f82, %p22;
	ex2.approx.ftz.f32 	%f84, %f83;
	mul.f32 	%f85, %f66, 0f3FB8AA3B;
	cvt.rni.f32.f32 	%f86, %f85;
	abs.ftz.f32 	%f87, %f66;
	setp.lt.f32 	%p23, %f87, 0f3ED1EB85;
	selp.f32 	%f88, 0f00000000, %f86, %p23;
	setp.eq.f32 	%p24, %f88, 0f43000000;
	selp.f32 	%f89, 0f42FE0000, %f88, %p24;
	ex2.approx.ftz.f32 	%f90, %f89;
	setp.eq.f32 	%p25, %f65, 0f00000000;
	add.f32 	%f91, %f65, %f65;
	setp.lt.f32 	%p26, %f83, 0fC1C80000;
	setp.gt.f32 	%p27, %f83, 0f43000000;
	neg.f32 	%f92, %f82;
	mov.f32 	%f93, 0f3F317200;
	fma.rn.ftz.f32 	%f94, %f92, %f93, %f65;
	mov.f32 	%f95, 0f35BFBE8E;
	fma.rn.ftz.f32 	%f96, %f92, %f95, %f94;
	mov.f32 	%f97, 0f3C095663;
	mov.f32 	%f98, 0f3AB5EBE6;
	fma.rn.ftz.f32 	%f99, %f98, %f96, %f97;
	mov.f32 	%f100, 0f3D2AABE3;
	fma.rn.ftz.f32 	%f101, %f99, %f96, %f100;
	mov.f32 	%f102, 0f3E2AA9F6;
	fma.rn.ftz.f32 	%f103, %f101, %f96, %f102;
	mov.f32 	%f104, 0f3EFFFFFE;
	fma.rn.ftz.f32 	%f105, %f103, %f96, %f104;
	mul.f32 	%f106, %f96, %f105;
	fma.rn.ftz.f32 	%f107, %f106, %f96, %f96;
	add.f32 	%f108, %f84, 0fBF800000;
	fma.rn.ftz.f32 	%f109, %f107, %f84, %f108;
	add.f32 	%f110, %f109, %f109;
	selp.f32 	%f111, %f110, %f109, %p22;
	selp.f32 	%f112, 0f7F800000, %f111, %p27;
	selp.f32 	%f113, 0fBF800000, %f112, %p26;
	selp.f32 	%f114, %f91, %f113, %p25;
	setp.eq.f32 	%p28, %f64, 0f00000000;
	add.f32 	%f115, %f64, %f64;
	setp.lt.f32 	%p29, %f77, 0fC1C80000;
	setp.gt.f32 	%p30, %f77, 0f43000000;
	neg.f32 	%f116, %f76;
	fma.rn.ftz.f32 	%f117, %f116, %f93, %f64;
	fma.rn.ftz.f32 	%f118, %f116, %f95, %f117;
	fma.rn.ftz.f32 	%f119, %f98, %f118, %f97;
	fma.rn.ftz.f32 	%f120, %f119, %f118, %f100;
	fma.rn.ftz.f32 	%f121, %f120, %f118, %f102;
	fma.rn.ftz.f32 	%f122, %f121, %f118, %f104;
	mul.f32 	%f123, %f118, %f122;
	fma.rn.ftz.f32 	%f124, %f123, %f118, %f118;
	add.f32 	%f125, %f78, 0fBF800000;
	fma.rn.ftz.f32 	%f126, %f124, %f78, %f125;
	add.f32 	%f127, %f126, %f126;
	selp.f32 	%f128, %f127, %f126, %p20;
	selp.f32 	%f129, 0f7F800000, %f128, %p30;
	selp.f32 	%f130, 0fBF800000, %f129, %p29;
	selp.f32 	%f131, %f115, %f130, %p28;
	setp.eq.f32 	%p31, %f63, 0f00000000;
	add.f32 	%f132, %f63, %f63;
	setp.lt.f32 	%p32, %f71, 0fC1C80000;
	setp.gt.f32 	%p33, %f71, 0f43000000;
	neg.f32 	%f133, %f70;
	fma.rn.ftz.f32 	%f134, %f133, %f93, %f63;
	fma.rn.ftz.f32 	%f135, %f133, %f95, %f134;
	fma.rn.ftz.f32 	%f136, %f98, %f135, %f97;
	fma.rn.ftz.f32 	%f137, %f136, %f135, %f100;
	fma.rn.ftz.f32 	%f138, %f137, %f135, %f102;
	fma.rn.ftz.f32 	%f139, %f138, %f135, %f104;
	mul.f32 	%f140, %f135, %f139;
	fma.rn.ftz.f32 	%f141, %f140, %f135, %f135;
	add.f32 	%f142, %f72, 0fBF800000;
	fma.rn.ftz.f32 	%f143, %f141, %f72, %f142;
	add.f32 	%f144, %f143, %f143;
	selp.f32 	%f145, %f144, %f143, %p18;
	selp.f32 	%f146, 0f7F800000, %f145, %p33;
	selp.f32 	%f147, 0fBF800000, %f146, %p32;
	selp.f32 	%f148, %f132, %f147, %p31;
	.loc	1 54 20                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:54:20
	setp.gt.f32 	%p34, %f66, 0f00000000;
	setp.gt.f32 	%p35, %f65, 0f00000000;
	setp.gt.f32 	%p36, %f64, 0f00000000;
	setp.gt.f32 	%p37, %f63, 0f00000000;
	.loc	1 57 28                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:57:28
	neg.f32 	%f149, %f88;
	fma.rn.ftz.f32 	%f150, %f149, %f93, %f66;
	fma.rn.ftz.f32 	%f151, %f149, %f95, %f150;
	fma.rn.ftz.f32 	%f152, %f98, %f151, %f97;
	fma.rn.ftz.f32 	%f153, %f152, %f151, %f100;
	fma.rn.ftz.f32 	%f154, %f153, %f151, %f102;
	fma.rn.ftz.f32 	%f155, %f154, %f151, %f104;
	mul.f32 	%f156, %f151, %f155;
	fma.rn.ftz.f32 	%f157, %f156, %f151, %f151;
	add.f32 	%f158, %f90, 0fBF800000;
	fma.rn.ftz.f32 	%f159, %f157, %f90, %f158;
	add.f32 	%f160, %f159, %f159;
	selp.f32 	%f161, %f160, %f159, %p24;
	setp.gt.f32 	%p38, %f89, 0f43000000;
	selp.f32 	%f162, 0f7F800000, %f161, %p38;
	setp.lt.f32 	%p39, %f89, 0fC1C80000;
	selp.f32 	%f163, 0fBF800000, %f162, %p39;
	setp.eq.f32 	%p40, %f66, 0f00000000;
	add.f32 	%f164, %f66, %f66;
	selp.f32 	%f165, %f164, %f163, %p40;
	.loc	1 59 35                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:59:35
	selp.f32 	%f166, %f63, %f148, %p37;
	selp.f32 	%f167, %f64, %f131, %p36;
	selp.f32 	%f168, %f65, %f114, %p35;
	selp.f32 	%f169, %f66, %f165, %p34;
	.loc	1 60 49                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:60:49
	mov.b32 	%r28, %f6;
	mov.b32 	%r29, %f7;
	mov.b32 	%r30, %f8;
	mov.b32 	%r31, %f9;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r28, %r29, %r30, %r31 };
	// end inline asm
	.loc	1 61 4                          // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:61:4
	bar.sync 	0;
	.loc	1 62 28                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:62:28
	mul.wide.s32 	%rd17, %r1, 4;
	add.s64 	%rd7, %rd11, %rd17;
	.loc	1 62 40                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:62:40
	and.b32  	%r83, %r38, 255;
	setp.eq.s32 	%p13, %r83, 0;
	mov.b32 	%r32, %f62;
	// begin inline asm
	@%p13 st.global.b32 [ %rd7 + 0 ], { %r32 };
	// end inline asm
	.loc	1 63 25                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:63:25
	add.s64 	%rd8, %rd14, %rd15;
	.loc	1 63 47                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:63:47
	mov.b32 	%r33, %f166;
	mov.b32 	%r34, %f167;
	mov.b32 	%r35, %f168;
	mov.b32 	%r36, %f169;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd8 + 0 ], { %r33, %r34, %r35, %r36 };
	// end inline asm
	.loc	1 64 25                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:64:25
	add.s64 	%rd9, %rd13, %rd17;
	.loc	1 64 37                         // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:64:37
	// begin inline asm
	@%p13 st.global.b32 [ %rd9 + 0 ], { %r37 };
	// end inline asm
	.loc	1 64 4                          // ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py:64:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/tl/ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 276                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x10d DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 108
.b8 119
.b8 108
.b8 102
.b8 112
.b8 55
.b8 103
.b8 120
.b8 121
.b8 51
.b8 105
.b8 113
.b8 98
.b8 108
.b8 55
.b8 110
.b8 53
.b8 109
.b8 120
.b8 99
.b8 99
.b8 119
.b8 102
.b8 116
.b8 122
.b8 119
.b8 115
.b8 109
.b8 54
.b8 112
.b8 114
.b8 108
.b8 52
.b8 117
.b8 110
.b8 121
.b8 113
.b8 112
.b8 100
.b8 116
.b8 121
.b8 99
.b8 104
.b8 102
.b8 55
.b8 118
.b8 104
.b8 121
.b8 122
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 101
.b8 108
.b8 117
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xce:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xfe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
