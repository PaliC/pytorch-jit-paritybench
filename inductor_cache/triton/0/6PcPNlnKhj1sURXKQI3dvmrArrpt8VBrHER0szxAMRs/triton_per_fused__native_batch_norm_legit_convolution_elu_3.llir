; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__native_batch_norm_legit_convolution_elu_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %10 = and i32 %9, 31, !dbg !11
  %11 = lshr i32 %9, 5, !dbg !11
  %12 = shl i32 %9, 2, !dbg !11
  %13 = and i32 %12, 1020, !dbg !11
  %14 = srem i32 %8, 128, !dbg !12
  %15 = shl i32 %8, 10, !dbg !13
  %16 = or disjoint i32 %15, %13, !dbg !14
  %17 = sext i32 %16 to i64, !dbg !15
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !15
  %19 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %18, i1 true) #5, !dbg !16
  %20 = extractvalue { i32, i32, i32, i32 } %19, 0, !dbg !16
  %21 = extractvalue { i32, i32, i32, i32 } %19, 1, !dbg !16
  %22 = extractvalue { i32, i32, i32, i32 } %19, 2, !dbg !16
  %23 = extractvalue { i32, i32, i32, i32 } %19, 3, !dbg !16
  %24 = bitcast i32 %20 to float, !dbg !16
  %25 = bitcast i32 %21 to float, !dbg !16
  %26 = bitcast i32 %22 to float, !dbg !16
  %27 = bitcast i32 %23 to float, !dbg !16
  %28 = sext i32 %14 to i64, !dbg !17
  %29 = getelementptr float, ptr addrspace(1) %2, i64 %28, !dbg !17
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #5, !dbg !18
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #5, !dbg !18
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #5, !dbg !18
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #5, !dbg !18
  %34 = bitcast i32 %33 to float, !dbg !18
  %35 = fadd float %24, %34, !dbg !19
  %36 = fadd float %25, %34, !dbg !19
  %37 = fadd float %26, %34, !dbg !19
  %38 = fadd float %27, %34, !dbg !19
  %39 = fadd float %35, %36, !dbg !20
  %40 = fadd float %37, %39, !dbg !20
  %41 = fadd float %38, %40, !dbg !20
  %42 = bitcast float %41 to i32, !dbg !25
  %43 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %42, i32 16, i32 31), !dbg !25
  %44 = bitcast i32 %43 to float, !dbg !25
  %45 = fadd float %41, %44, !dbg !20
  %46 = bitcast float %45 to i32, !dbg !25
  %47 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %46, i32 8, i32 31), !dbg !25
  %48 = bitcast i32 %47 to float, !dbg !25
  %49 = fadd float %45, %48, !dbg !20
  %50 = bitcast float %49 to i32, !dbg !25
  %51 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %50, i32 4, i32 31), !dbg !25
  %52 = bitcast i32 %51 to float, !dbg !25
  %53 = fadd float %49, %52, !dbg !20
  %54 = bitcast float %53 to i32, !dbg !25
  %55 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %54, i32 2, i32 31), !dbg !25
  %56 = bitcast i32 %55 to float, !dbg !25
  %57 = fadd float %53, %56, !dbg !20
  %58 = bitcast float %57 to i32, !dbg !25
  %59 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %58, i32 1, i32 31), !dbg !25
  %60 = bitcast i32 %59 to float, !dbg !25
  %61 = fadd float %57, %60, !dbg !20
  %62 = icmp eq i32 %10, 0, !dbg !25
  %63 = and i32 %11, 7, !dbg !25
  %64 = zext nneg i32 %63 to i64, !dbg !25
  %65 = getelementptr float, ptr addrspace(3) @global_smem, i64 %64, !dbg !25
  %66 = bitcast float %61 to <1 x i32>, !dbg !25
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %65, <1 x i32> %66, i1 %62) #5, !dbg !25
  tail call void @llvm.nvvm.barrier0(), !dbg !25
  %67 = icmp slt i32 %9, 8, !dbg !25
  %68 = sext i32 %9 to i64, !dbg !25
  %69 = getelementptr float, ptr addrspace(3) @global_smem, i64 %68, !dbg !25
  %70 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %69, i1 %67) #5, !dbg !25
  %71 = bitcast i32 %70 to float, !dbg !25
  %72 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %70, i32 4, i32 31), !dbg !25
  %73 = bitcast i32 %72 to float, !dbg !25
  %74 = fadd float %71, %73, !dbg !20
  %75 = bitcast float %74 to i32, !dbg !25
  %76 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %75, i32 2, i32 31), !dbg !25
  %77 = bitcast i32 %76 to float, !dbg !25
  %78 = fadd float %74, %77, !dbg !20
  %79 = bitcast float %78 to i32, !dbg !25
  %80 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %79, i32 1, i32 31), !dbg !25
  %81 = bitcast i32 %80 to float, !dbg !25
  %82 = fadd float %78, %81, !dbg !20
  %83 = and i32 %9, 7, !dbg !25
  %84 = icmp eq i32 %83, 0, !dbg !25
  %85 = and i1 %67, %84, !dbg !25
  %86 = bitcast float %82 to <1 x i32>, !dbg !25
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %69, <1 x i32> %86, i1 %85) #5, !dbg !25
  tail call void @llvm.nvvm.barrier0(), !dbg !25
  %87 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !25
  %88 = fadd float %87, 0.000000e+00, !dbg !26
  %89 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %88, float 1.024000e+03) #5, !dbg !30
  %90 = fsub float %35, %89, !dbg !31
  %91 = fsub float %36, %89, !dbg !31
  %92 = fsub float %37, %89, !dbg !31
  %93 = fsub float %38, %89, !dbg !31
  %94 = fmul float %90, %90, !dbg !32
  %95 = fmul float %91, %91, !dbg !32
  %96 = fmul float %92, %92, !dbg !32
  %97 = fmul float %93, %93, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %98 = fadd float %94, %95, !dbg !35
  %99 = fadd float %96, %98, !dbg !35
  %100 = fadd float %97, %99, !dbg !35
  %101 = bitcast float %100 to i32, !dbg !33
  %102 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %101, i32 16, i32 31), !dbg !33
  %103 = bitcast i32 %102 to float, !dbg !33
  %104 = fadd float %100, %103, !dbg !35
  %105 = bitcast float %104 to i32, !dbg !33
  %106 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %105, i32 8, i32 31), !dbg !33
  %107 = bitcast i32 %106 to float, !dbg !33
  %108 = fadd float %104, %107, !dbg !35
  %109 = bitcast float %108 to i32, !dbg !33
  %110 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %109, i32 4, i32 31), !dbg !33
  %111 = bitcast i32 %110 to float, !dbg !33
  %112 = fadd float %108, %111, !dbg !35
  %113 = bitcast float %112 to i32, !dbg !33
  %114 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %113, i32 2, i32 31), !dbg !33
  %115 = bitcast i32 %114 to float, !dbg !33
  %116 = fadd float %112, %115, !dbg !35
  %117 = bitcast float %116 to i32, !dbg !33
  %118 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %117, i32 1, i32 31), !dbg !33
  %119 = bitcast i32 %118 to float, !dbg !33
  %120 = fadd float %116, %119, !dbg !35
  %121 = bitcast float %120 to <1 x i32>, !dbg !33
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %65, <1 x i32> %121, i1 %62) #5, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %122 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %69, i1 %67) #5, !dbg !33
  %123 = bitcast i32 %122 to float, !dbg !33
  %124 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %122, i32 4, i32 31), !dbg !33
  %125 = bitcast i32 %124 to float, !dbg !33
  %126 = fadd float %123, %125, !dbg !35
  %127 = bitcast float %126 to i32, !dbg !33
  %128 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %127, i32 2, i32 31), !dbg !33
  %129 = bitcast i32 %128 to float, !dbg !33
  %130 = fadd float %126, %129, !dbg !35
  %131 = bitcast float %130 to i32, !dbg !33
  %132 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %131, i32 1, i32 31), !dbg !33
  %133 = bitcast i32 %132 to float, !dbg !33
  %134 = fadd float %130, %133, !dbg !35
  %135 = bitcast float %134 to <1 x i32>, !dbg !33
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %69, <1 x i32> %135, i1 %85) #5, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %136 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !33
  %137 = fadd float %136, 0.000000e+00, !dbg !36
  %138 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %137, float 1.024000e+03) #5, !dbg !38
  %139 = fadd float %138, 0x3EE4F8B580000000, !dbg !39
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i = icmp eq i32 %140, 0, !dbg !40
  br i1 %.not.i, label %143, label %141, !dbg !40

141:                                              ; preds = %7
  %142 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %139), !dbg !40
  br label %__nv_rsqrtf.exit, !dbg !40

143:                                              ; preds = %7
  %144 = tail call float @llvm.nvvm.rsqrt.approx.f(float %139), !dbg !40
  br label %__nv_rsqrtf.exit, !dbg !40

__nv_rsqrtf.exit:                                 ; preds = %141, %143
  %.0.i = phi float [ %142, %141 ], [ %144, %143 ], !dbg !40
  %145 = fmul float %90, %.0.i, !dbg !41
  %146 = fmul float %91, %.0.i, !dbg !41
  %147 = fmul float %92, %.0.i, !dbg !41
  %148 = fmul float %93, %.0.i, !dbg !41
  %149 = fmul float %145, 0x3FF7154760000000, !dbg !42
  %150 = tail call float @llvm.nvvm.round.f(float %149) #5, !dbg !42
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not.i1 = icmp eq i32 %151, 0, !dbg !42
  %152 = tail call float @llvm.nvvm.fabs.ftz.f(float %145) #5, !dbg !42
  %153 = tail call float @llvm.nvvm.fabs.f(float %145) #5, !dbg !42
  %.03.i = select i1 %.not.i1, float %153, float %152, !dbg !42
  %154 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !42
  %t.0.i = select i1 %154, float 0.000000e+00, float %150, !dbg !42
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %157 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !42
  %j.0.i = select i1 %157, float 1.270000e+02, float %t.0.i, !dbg !42
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not8.i = icmp eq i32 %163, 0, !dbg !42
  br i1 %.not8.i, label %166, label %164, !dbg !42

164:                                              ; preds = %__nv_rsqrtf.exit
  %165 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #5, !dbg !42
  br label %__nv_expm1f.exit, !dbg !42

166:                                              ; preds = %__nv_rsqrtf.exit
  %167 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #5, !dbg !42
  br label %__nv_expm1f.exit, !dbg !42

__nv_expm1f.exit:                                 ; preds = %164, %166
  %.0.i2 = phi float [ %165, %164 ], [ %167, %166 ], !dbg !42
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %169 = fmul float %146, 0x3FF7154760000000, !dbg !42
  %170 = tail call float @llvm.nvvm.round.f(float %169) #5, !dbg !42
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not.i3 = icmp eq i32 %171, 0, !dbg !42
  %172 = tail call float @llvm.nvvm.fabs.ftz.f(float %146) #5, !dbg !42
  %173 = tail call float @llvm.nvvm.fabs.f(float %146) #5, !dbg !42
  %.03.i4 = select i1 %.not.i3, float %173, float %172, !dbg !42
  %174 = fcmp olt float %.03.i4, 0x3FDA3D70A0000000, !dbg !42
  %t.0.i5 = select i1 %174, float 0.000000e+00, float %170, !dbg !42
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %177 = fcmp oeq float %t.0.i5, 1.280000e+02, !dbg !42
  %j.0.i6 = select i1 %177, float 1.270000e+02, float %t.0.i5, !dbg !42
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not8.i7 = icmp eq i32 %183, 0, !dbg !42
  br i1 %.not8.i7, label %186, label %184, !dbg !42

184:                                              ; preds = %__nv_expm1f.exit
  %185 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i6) #5, !dbg !42
  br label %__nv_expm1f.exit29, !dbg !42

186:                                              ; preds = %__nv_expm1f.exit
  %187 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i6) #5, !dbg !42
  br label %__nv_expm1f.exit29, !dbg !42

__nv_expm1f.exit29:                               ; preds = %184, %186
  %.0.i8 = phi float [ %185, %184 ], [ %187, %186 ], !dbg !42
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %189 = fmul float %147, 0x3FF7154760000000, !dbg !42
  %190 = tail call float @llvm.nvvm.round.f(float %189) #5, !dbg !42
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not.i30 = icmp eq i32 %191, 0, !dbg !42
  %192 = tail call float @llvm.nvvm.fabs.ftz.f(float %147) #5, !dbg !42
  %193 = tail call float @llvm.nvvm.fabs.f(float %147) #5, !dbg !42
  %.03.i31 = select i1 %.not.i30, float %193, float %192, !dbg !42
  %194 = fcmp olt float %.03.i31, 0x3FDA3D70A0000000, !dbg !42
  %t.0.i32 = select i1 %194, float 0.000000e+00, float %190, !dbg !42
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %197 = fcmp oeq float %t.0.i32, 1.280000e+02, !dbg !42
  %j.0.i33 = select i1 %197, float 1.270000e+02, float %t.0.i32, !dbg !42
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not8.i34 = icmp eq i32 %203, 0, !dbg !42
  br i1 %.not8.i34, label %206, label %204, !dbg !42

204:                                              ; preds = %__nv_expm1f.exit29
  %205 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i33) #5, !dbg !42
  br label %__nv_expm1f.exit56, !dbg !42

206:                                              ; preds = %__nv_expm1f.exit29
  %207 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i33) #5, !dbg !42
  br label %__nv_expm1f.exit56, !dbg !42

__nv_expm1f.exit56:                               ; preds = %204, %206
  %.0.i35 = phi float [ %205, %204 ], [ %207, %206 ], !dbg !42
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %209 = fmul float %148, 0x3FF7154760000000, !dbg !42
  %210 = tail call float @llvm.nvvm.round.f(float %209) #5, !dbg !42
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not.i57 = icmp eq i32 %211, 0, !dbg !42
  %212 = tail call float @llvm.nvvm.fabs.ftz.f(float %148) #5, !dbg !42
  %213 = tail call float @llvm.nvvm.fabs.f(float %148) #5, !dbg !42
  %.03.i58 = select i1 %.not.i57, float %213, float %212, !dbg !42
  %214 = fcmp olt float %.03.i58, 0x3FDA3D70A0000000, !dbg !42
  %t.0.i59 = select i1 %214, float 0.000000e+00, float %210, !dbg !42
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %217 = fcmp oeq float %t.0.i59, 1.280000e+02, !dbg !42
  %j.0.i60 = select i1 %217, float 1.270000e+02, float %t.0.i59, !dbg !42
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not8.i61 = icmp eq i32 %223, 0, !dbg !42
  br i1 %.not8.i61, label %226, label %224, !dbg !42

224:                                              ; preds = %__nv_expm1f.exit56
  %225 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i60) #5, !dbg !42
  br label %__nv_expm1f.exit83, !dbg !42

226:                                              ; preds = %__nv_expm1f.exit56
  %227 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i60) #5, !dbg !42
  br label %__nv_expm1f.exit83, !dbg !42

__nv_expm1f.exit83:                               ; preds = %224, %226
  %.0.i62 = phi float [ %225, %224 ], [ %227, %226 ], !dbg !42
  %228 = fcmp oeq float %147, 0.000000e+00, !dbg !42
  %229 = fadd float %147, %147, !dbg !42
  %230 = fcmp olt float %j.0.i33, -2.500000e+01, !dbg !42
  %231 = fcmp ogt float %j.0.i33, 1.280000e+02, !dbg !42
  %.not9.i50 = icmp eq i32 %208, 0, !dbg !42
  %.not7.i36 = icmp eq i32 %202, 0, !dbg !42
  %.not6.i37 = icmp eq i32 %201, 0, !dbg !42
  %.not5.i38 = icmp eq i32 %200, 0, !dbg !42
  %.not4.i39 = icmp eq i32 %199, 0, !dbg !42
  %.not3.i40 = icmp eq i32 %198, 0, !dbg !42
  %.not2.i41 = icmp eq i32 %196, 0, !dbg !42
  %232 = fneg float %t.0.i32, !dbg !42
  %.not1.i42 = icmp eq i32 %195, 0, !dbg !42
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %232, float 0x3FE62E4000000000, float %147) #5, !dbg !42
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %232, float 0x3FE62E4000000000, float %147) #5, !dbg !42
  %.04.i43 = select i1 %.not1.i42, float %233, float %234, !dbg !42
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %232, float 0x3EB7F7D1C0000000, float %.04.i43) #5, !dbg !42
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %232, float 0x3EB7F7D1C0000000, float %.04.i43) #5, !dbg !42
  %.05.i44 = select i1 %.not2.i41, float %235, float %236, !dbg !42
  %237 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i44, float 0x3F812ACC60000000) #5, !dbg !42
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i44, float 0x3F812ACC60000000) #5, !dbg !42
  %.07.i45 = select i1 %.not3.i40, float %237, float %238, !dbg !42
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i45, float %.05.i44, float 0x3FA5557C60000000) #5, !dbg !42
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i45, float %.05.i44, float 0x3FA5557C60000000) #5, !dbg !42
  %.08.i46 = select i1 %.not4.i39, float %239, float %240, !dbg !42
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i46, float %.05.i44, float 0x3FC5553EC0000000) #5, !dbg !42
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i46, float %.05.i44, float 0x3FC5553EC0000000) #5, !dbg !42
  %.09.i47 = select i1 %.not5.i38, float %241, float %242, !dbg !42
  %243 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i47, float %.05.i44, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i47, float %.05.i44, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %.06.i48 = select i1 %.not6.i37, float %243, float %244, !dbg !42
  %245 = fmul float %.05.i44, %.06.i48, !dbg !42
  %246 = tail call float @llvm.nvvm.fma.rn.f(float %245, float %.05.i44, float %.05.i44) #5, !dbg !42
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %245, float %.05.i44, float %.05.i44) #5, !dbg !42
  %.01.i49 = select i1 %.not7.i36, float %246, float %247, !dbg !42
  %248 = fadd float %.0.i35, -1.000000e+00, !dbg !42
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i49, float %.0.i35, float %248) #5, !dbg !42
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i49, float %.0.i35, float %248) #5, !dbg !42
  %.02.i51 = select i1 %.not9.i50, float %249, float %250, !dbg !42
  %251 = fadd float %.02.i51, %.02.i51, !dbg !42
  %u.0.i52 = select i1 %197, float %251, float %.02.i51, !dbg !42
  %u.1.i53 = select i1 %231, float 0x7FF0000000000000, float %u.0.i52, !dbg !42
  %u.2.i54 = select i1 %230, float -1.000000e+00, float %u.1.i53, !dbg !42
  %u.3.i55 = select i1 %228, float %229, float %u.2.i54, !dbg !42
  %252 = fcmp oeq float %146, 0.000000e+00, !dbg !42
  %253 = fadd float %146, %146, !dbg !42
  %254 = fcmp olt float %j.0.i6, -2.500000e+01, !dbg !42
  %255 = fcmp ogt float %j.0.i6, 1.280000e+02, !dbg !42
  %.not9.i23 = icmp eq i32 %188, 0, !dbg !42
  %.not7.i9 = icmp eq i32 %182, 0, !dbg !42
  %.not6.i10 = icmp eq i32 %181, 0, !dbg !42
  %.not5.i11 = icmp eq i32 %180, 0, !dbg !42
  %.not4.i12 = icmp eq i32 %179, 0, !dbg !42
  %.not3.i13 = icmp eq i32 %178, 0, !dbg !42
  %.not2.i14 = icmp eq i32 %176, 0, !dbg !42
  %256 = fneg float %t.0.i5, !dbg !42
  %.not1.i15 = icmp eq i32 %175, 0, !dbg !42
  %257 = tail call float @llvm.nvvm.fma.rn.f(float %256, float 0x3FE62E4000000000, float %146) #5, !dbg !42
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %256, float 0x3FE62E4000000000, float %146) #5, !dbg !42
  %.04.i16 = select i1 %.not1.i15, float %257, float %258, !dbg !42
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %256, float 0x3EB7F7D1C0000000, float %.04.i16) #5, !dbg !42
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %256, float 0x3EB7F7D1C0000000, float %.04.i16) #5, !dbg !42
  %.05.i17 = select i1 %.not2.i14, float %259, float %260, !dbg !42
  %261 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i17, float 0x3F812ACC60000000) #5, !dbg !42
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i17, float 0x3F812ACC60000000) #5, !dbg !42
  %.07.i18 = select i1 %.not3.i13, float %261, float %262, !dbg !42
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i18, float %.05.i17, float 0x3FA5557C60000000) #5, !dbg !42
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i18, float %.05.i17, float 0x3FA5557C60000000) #5, !dbg !42
  %.08.i19 = select i1 %.not4.i12, float %263, float %264, !dbg !42
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i19, float %.05.i17, float 0x3FC5553EC0000000) #5, !dbg !42
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i19, float %.05.i17, float 0x3FC5553EC0000000) #5, !dbg !42
  %.09.i20 = select i1 %.not5.i11, float %265, float %266, !dbg !42
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i20, float %.05.i17, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i20, float %.05.i17, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %.06.i21 = select i1 %.not6.i10, float %267, float %268, !dbg !42
  %269 = fmul float %.05.i17, %.06.i21, !dbg !42
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %269, float %.05.i17, float %.05.i17) #5, !dbg !42
  %271 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %269, float %.05.i17, float %.05.i17) #5, !dbg !42
  %.01.i22 = select i1 %.not7.i9, float %270, float %271, !dbg !42
  %272 = fadd float %.0.i8, -1.000000e+00, !dbg !42
  %273 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i22, float %.0.i8, float %272) #5, !dbg !42
  %274 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i22, float %.0.i8, float %272) #5, !dbg !42
  %.02.i24 = select i1 %.not9.i23, float %273, float %274, !dbg !42
  %275 = fadd float %.02.i24, %.02.i24, !dbg !42
  %u.0.i25 = select i1 %177, float %275, float %.02.i24, !dbg !42
  %u.1.i26 = select i1 %255, float 0x7FF0000000000000, float %u.0.i25, !dbg !42
  %u.2.i27 = select i1 %254, float -1.000000e+00, float %u.1.i26, !dbg !42
  %u.3.i28 = select i1 %252, float %253, float %u.2.i27, !dbg !42
  %276 = fcmp oeq float %145, 0.000000e+00, !dbg !42
  %277 = fadd float %145, %145, !dbg !42
  %278 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !42
  %279 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !42
  %.not9.i = icmp eq i32 %168, 0, !dbg !42
  %.not7.i = icmp eq i32 %162, 0, !dbg !42
  %.not6.i = icmp eq i32 %161, 0, !dbg !42
  %.not5.i = icmp eq i32 %160, 0, !dbg !42
  %.not4.i = icmp eq i32 %159, 0, !dbg !42
  %.not3.i = icmp eq i32 %158, 0, !dbg !42
  %.not2.i = icmp eq i32 %156, 0, !dbg !42
  %280 = fneg float %t.0.i, !dbg !42
  %.not1.i = icmp eq i32 %155, 0, !dbg !42
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %280, float 0x3FE62E4000000000, float %145) #5, !dbg !42
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %280, float 0x3FE62E4000000000, float %145) #5, !dbg !42
  %.04.i = select i1 %.not1.i, float %281, float %282, !dbg !42
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %280, float 0x3EB7F7D1C0000000, float %.04.i) #5, !dbg !42
  %284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %280, float 0x3EB7F7D1C0000000, float %.04.i) #5, !dbg !42
  %.05.i = select i1 %.not2.i, float %283, float %284, !dbg !42
  %285 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #5, !dbg !42
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #5, !dbg !42
  %.07.i = select i1 %.not3.i, float %285, float %286, !dbg !42
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #5, !dbg !42
  %288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #5, !dbg !42
  %.08.i = select i1 %.not4.i, float %287, float %288, !dbg !42
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #5, !dbg !42
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #5, !dbg !42
  %.09.i = select i1 %.not5.i, float %289, float %290, !dbg !42
  %291 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %.06.i = select i1 %.not6.i, float %291, float %292, !dbg !42
  %293 = fmul float %.05.i, %.06.i, !dbg !42
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %293, float %.05.i, float %.05.i) #5, !dbg !42
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %293, float %.05.i, float %.05.i) #5, !dbg !42
  %.01.i = select i1 %.not7.i, float %294, float %295, !dbg !42
  %296 = fadd float %.0.i2, -1.000000e+00, !dbg !42
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i2, float %296) #5, !dbg !42
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i2, float %296) #5, !dbg !42
  %.02.i = select i1 %.not9.i, float %297, float %298, !dbg !42
  %299 = fadd float %.02.i, %.02.i, !dbg !42
  %u.0.i = select i1 %157, float %299, float %.02.i, !dbg !42
  %u.1.i = select i1 %279, float 0x7FF0000000000000, float %u.0.i, !dbg !42
  %u.2.i = select i1 %278, float -1.000000e+00, float %u.1.i, !dbg !42
  %u.3.i = select i1 %276, float %277, float %u.2.i, !dbg !42
  %300 = fcmp ogt float %148, 0.000000e+00, !dbg !43
  %301 = fcmp ogt float %147, 0.000000e+00, !dbg !43
  %302 = fcmp ogt float %146, 0.000000e+00, !dbg !43
  %303 = fcmp ogt float %145, 0.000000e+00, !dbg !43
  %.not7.i63 = icmp eq i32 %222, 0, !dbg !42
  %.not6.i64 = icmp eq i32 %221, 0, !dbg !42
  %.not5.i65 = icmp eq i32 %220, 0, !dbg !42
  %.not4.i66 = icmp eq i32 %219, 0, !dbg !42
  %.not3.i67 = icmp eq i32 %218, 0, !dbg !42
  %.not2.i68 = icmp eq i32 %216, 0, !dbg !42
  %304 = fneg float %t.0.i59, !dbg !42
  %.not1.i69 = icmp eq i32 %215, 0, !dbg !42
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %304, float 0x3FE62E4000000000, float %148) #5, !dbg !42
  %306 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %304, float 0x3FE62E4000000000, float %148) #5, !dbg !42
  %.04.i70 = select i1 %.not1.i69, float %305, float %306, !dbg !42
  %307 = tail call float @llvm.nvvm.fma.rn.f(float %304, float 0x3EB7F7D1C0000000, float %.04.i70) #5, !dbg !42
  %308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %304, float 0x3EB7F7D1C0000000, float %.04.i70) #5, !dbg !42
  %.05.i71 = select i1 %.not2.i68, float %307, float %308, !dbg !42
  %309 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i71, float 0x3F812ACC60000000) #5, !dbg !42
  %310 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i71, float 0x3F812ACC60000000) #5, !dbg !42
  %.07.i72 = select i1 %.not3.i67, float %309, float %310, !dbg !42
  %311 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i72, float %.05.i71, float 0x3FA5557C60000000) #5, !dbg !42
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i72, float %.05.i71, float 0x3FA5557C60000000) #5, !dbg !42
  %.08.i73 = select i1 %.not4.i66, float %311, float %312, !dbg !42
  %313 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i73, float %.05.i71, float 0x3FC5553EC0000000) #5, !dbg !42
  %314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i73, float %.05.i71, float 0x3FC5553EC0000000) #5, !dbg !42
  %.09.i74 = select i1 %.not5.i65, float %313, float %314, !dbg !42
  %315 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i74, float %.05.i71, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %316 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i74, float %.05.i71, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %.06.i75 = select i1 %.not6.i64, float %315, float %316, !dbg !42
  %317 = fmul float %.05.i71, %.06.i75, !dbg !42
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %317, float %.05.i71, float %.05.i71) #5, !dbg !42
  %319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %317, float %.05.i71, float %.05.i71) #5, !dbg !42
  %.01.i76 = select i1 %.not7.i63, float %318, float %319, !dbg !42
  %320 = fadd float %.0.i62, -1.000000e+00, !dbg !42
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not9.i77 = icmp eq i32 %321, 0, !dbg !42
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %.0.i62, float %320) #5, !dbg !42
  %323 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %.0.i62, float %320) #5, !dbg !42
  %.02.i78 = select i1 %.not9.i77, float %323, float %322, !dbg !42
  %324 = fadd float %.02.i78, %.02.i78, !dbg !42
  %u.0.i79 = select i1 %217, float %324, float %.02.i78, !dbg !42
  %325 = fcmp ogt float %j.0.i60, 1.280000e+02, !dbg !42
  %u.1.i80 = select i1 %325, float 0x7FF0000000000000, float %u.0.i79, !dbg !42
  %326 = fcmp olt float %j.0.i60, -2.500000e+01, !dbg !42
  %u.2.i81 = select i1 %326, float -1.000000e+00, float %u.1.i80, !dbg !42
  %327 = fcmp oeq float %148, 0.000000e+00, !dbg !42
  %328 = fadd float %148, %148, !dbg !42
  %u.3.i82 = select i1 %327, float %328, float %u.2.i81, !dbg !42
  %329 = select i1 %303, float %145, float %u.3.i, !dbg !44
  %330 = select i1 %302, float %146, float %u.3.i28, !dbg !44
  %331 = select i1 %301, float %147, float %u.3.i55, !dbg !44
  %332 = select i1 %300, float %148, float %u.3.i82, !dbg !44
  %333 = bitcast float %35 to i32, !dbg !45
  %334 = bitcast float %36 to i32, !dbg !45
  %335 = bitcast float %37 to i32, !dbg !45
  %336 = bitcast float %38 to i32, !dbg !45
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %333, i32 %334, i32 %335, i32 %336, ptr addrspace(1) %18, i1 true) #5, !dbg !45
  tail call void @llvm.nvvm.barrier0(), !dbg !46
  %337 = sext i32 %8 to i64, !dbg !47
  %338 = getelementptr float, ptr addrspace(1) %1, i64 %337, !dbg !47
  %urem = and i32 %9, 255, !dbg !48
  %339 = icmp eq i32 %urem, 0, !dbg !48
  %340 = bitcast float %.0.i to i32, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %340, ptr addrspace(1) %338, i1 %339) #5, !dbg !48
  %341 = getelementptr float, ptr addrspace(1) %4, i64 %17, !dbg !49
  %342 = bitcast float %329 to i32, !dbg !50
  %343 = bitcast float %330 to i32, !dbg !50
  %344 = bitcast float %331 to i32, !dbg !50
  %345 = bitcast float %332 to i32, !dbg !50
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %342, i32 %343, i32 %344, i32 %345, ptr addrspace(1) %341, i1 true) #5, !dbg !50
  %346 = getelementptr float, ptr addrspace(1) %3, i64 %337, !dbg !51
  %347 = bitcast float %89 to i32, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %347, ptr addrspace(1) %346, i1 %339) #5, !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctlwlfp7gxy3iqbl7n5mxccwftzwsm6prl4unyqpdtychf7vhyzb.py", directory: "inductor_cache/tl")
!4 = !{ptr @triton_per_fused__native_batch_norm_legit_convolution_elu_3, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__native_batch_norm_legit_convolution_elu_3, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__native_batch_norm_legit_convolution_elu_3", linkageName: "triton_per_fused__native_batch_norm_legit_convolution_elu_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 28, scope: !7)
!11 = !DILocation(line: 27, column: 26, scope: !7)
!12 = !DILocation(line: 32, column: 19, scope: !7)
!13 = !DILocation(line: 33, column: 44, scope: !7)
!14 = !DILocation(line: 33, column: 39, scope: !7)
!15 = !DILocation(line: 33, column: 34, scope: !7)
!16 = !DILocation(line: 33, column: 49, scope: !7)
!17 = !DILocation(line: 34, column: 30, scope: !7)
!18 = !DILocation(line: 34, column: 35, scope: !7)
!19 = !DILocation(line: 35, column: 18, scope: !7)
!20 = !DILocation(line: 256, column: 15, scope: !21, inlinedAt: !24)
!21 = distinct !DILexicalBlockFile(scope: !23, file: !22, discriminator: 0)
!22 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!23 = distinct !DILexicalBlockFile(scope: !7, file: !22, discriminator: 0)
!24 = !DILocation(line: 38, column: 57, scope: !7)
!25 = !DILocation(line: 267, column: 36, scope: !23, inlinedAt: !24)
!26 = !DILocation(line: 73, column: 15, scope: !27, inlinedAt: !29)
!27 = distinct !DILexicalBlockFile(scope: !7, file: !28, discriminator: 0)
!28 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!29 = !DILocation(line: 38, column: 44, scope: !7)
!30 = !DILocation(line: 41, column: 19, scope: !7)
!31 = !DILocation(line: 42, column: 19, scope: !7)
!32 = !DILocation(line: 43, column: 20, scope: !7)
!33 = !DILocation(line: 267, column: 36, scope: !23, inlinedAt: !34)
!34 = !DILocation(line: 45, column: 59, scope: !7)
!35 = !DILocation(line: 256, column: 15, scope: !21, inlinedAt: !34)
!36 = !DILocation(line: 73, column: 15, scope: !27, inlinedAt: !37)
!37 = !DILocation(line: 45, column: 45, scope: !7)
!38 = !DILocation(line: 47, column: 20, scope: !7)
!39 = !DILocation(line: 49, column: 20, scope: !7)
!40 = !DILocation(line: 50, column: 28, scope: !7)
!41 = !DILocation(line: 52, column: 20, scope: !7)
!42 = !DILocation(line: 57, column: 28, scope: !7)
!43 = !DILocation(line: 54, column: 20, scope: !7)
!44 = !DILocation(line: 59, column: 35, scope: !7)
!45 = !DILocation(line: 60, column: 49, scope: !7)
!46 = !DILocation(line: 61, column: 4, scope: !7)
!47 = !DILocation(line: 62, column: 28, scope: !7)
!48 = !DILocation(line: 62, column: 40, scope: !7)
!49 = !DILocation(line: 63, column: 25, scope: !7)
!50 = !DILocation(line: 63, column: 47, scope: !7)
!51 = !DILocation(line: 64, column: 25, scope: !7)
!52 = !DILocation(line: 64, column: 37, scope: !7)
!53 = !DILocation(line: 64, column: 4, scope: !7)
