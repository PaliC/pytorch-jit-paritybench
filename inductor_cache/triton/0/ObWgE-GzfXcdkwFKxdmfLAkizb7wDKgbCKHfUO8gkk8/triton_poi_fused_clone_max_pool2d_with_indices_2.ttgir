#blocked = #triton_gpu.blocked<{sizePerThread = [8], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_clone_max_pool2d_with_indices_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":19:0), %arg1: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<1024xi8, #blocked> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<32> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1024> : tensor<1024xi32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<128> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<128> : tensor<1024xi32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<131072> : tensor<1024xi32, #blocked1> loc(#loc1)
    %cst_8 = arith.constant dense<2> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<2> : tensor<1024xi32, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<262144> : tensor<1024xi32, #blocked1> loc(#loc1)
    %cst_11 = arith.constant dense<1> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<64> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<65> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<2048> : tensor<1024xi32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked1> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)
    %5 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked1> loc(#loc5)
    %6 = arith.addi %4, %2 : tensor<1024xi32, #blocked> loc(#loc5)
    %7 = arith.addi %5, %3 : tensor<1024xi32, #blocked1> loc(#loc5)
    %8 = arith.remsi %6, %cst_3 : tensor<1024xi32, #blocked> loc(#loc6)
    %9 = arith.divsi %6, %cst_3 : tensor<1024xi32, #blocked> loc(#loc7)
    %10 = arith.divsi %7, %cst_4 : tensor<1024xi32, #blocked1> loc(#loc8)
    %11 = arith.remsi %10, %cst_6 : tensor<1024xi32, #blocked1> loc(#loc9)
    %12 = arith.divsi %7, %cst_7 : tensor<1024xi32, #blocked1> loc(#loc10)
    %13 = arith.remsi %12, %cst_9 : tensor<1024xi32, #blocked1> loc(#loc11)
    %14 = arith.divsi %7, %cst_10 : tensor<1024xi32, #blocked1> loc(#loc12)
    %15 = arith.remsi %7, %cst_4 : tensor<1024xi32, #blocked1> loc(#loc13)
    %16 = arith.muli %8, %cst_8 : tensor<1024xi32, #blocked> loc(#loc14)
    %17 = arith.muli %9, %cst_5 : tensor<1024xi32, #blocked> loc(#loc15)
    %18 = arith.addi %16, %17 : tensor<1024xi32, #blocked> loc(#loc16)
    %19 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc17)
    %20 = tt.addptr %19, %18 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc17)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc18)
    %22 = arith.addi %16, %cst_11 : tensor<1024xi32, #blocked> loc(#loc19)
    %23 = arith.addi %22, %17 : tensor<1024xi32, #blocked> loc(#loc20)
    %24 = tt.addptr %19, %23 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc21)
    %25 = tt.load %24 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc22)
    %26 = arith.addi %16, %cst_12 : tensor<1024xi32, #blocked> loc(#loc23)
    %27 = arith.addi %26, %17 : tensor<1024xi32, #blocked> loc(#loc24)
    %28 = tt.addptr %19, %27 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc25)
    %29 = tt.load %28 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc26)
    %30 = arith.addi %16, %cst_13 : tensor<1024xi32, #blocked> loc(#loc27)
    %31 = arith.addi %30, %17 : tensor<1024xi32, #blocked> loc(#loc28)
    %32 = tt.addptr %19, %31 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc29)
    %33 = tt.load %32 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc30)
    %34 = arith.cmpf ogt, %25, %21 : tensor<1024xf32, #blocked> loc(#loc31)
    %35 = arith.select %34, %cst, %cst_0 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc32)
    %36 = arith.cmpf une, %25, %25 : tensor<1024xf32, #blocked> loc(#loc54)
    %37 = arith.ori %34, %36 : tensor<1024xi1, #blocked> loc(#loc55)
    %38 = arith.select %37, %25, %21 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc56)
    %39 = arith.cmpf ogt, %29, %38 : tensor<1024xf32, #blocked> loc(#loc37)
    %40 = arith.select %39, %cst_1, %35 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc38)
    %41 = arith.cmpf une, %29, %29 : tensor<1024xf32, #blocked> loc(#loc57)
    %42 = arith.ori %39, %41 : tensor<1024xi1, #blocked> loc(#loc58)
    %43 = arith.select %42, %29, %38 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc59)
    %44 = arith.cmpf ogt, %33, %43 : tensor<1024xf32, #blocked> loc(#loc40)
    %45 = arith.select %44, %cst_2, %40 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc41)
    %46 = arith.cmpf une, %33, %33 : tensor<1024xf32, #blocked> loc(#loc60)
    %47 = arith.ori %44, %46 : tensor<1024xi1, #blocked> loc(#loc61)
    %48 = arith.select %47, %33, %43 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc62)
    %49 = tt.splat %arg1 : !tt.ptr<i8> -> tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc43)
    %50 = tt.addptr %49, %6 : tensor<1024x!tt.ptr<i8>, #blocked>, tensor<1024xi32, #blocked> loc(#loc43)
    tt.store %50, %45 : tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc44)
    %51 = arith.muli %13, %cst_4 : tensor<1024xi32, #blocked1> loc(#loc45)
    %52 = arith.addi %15, %51 : tensor<1024xi32, #blocked1> loc(#loc46)
    %53 = arith.muli %11, %cst_14 : tensor<1024xi32, #blocked1> loc(#loc47)
    %54 = arith.addi %52, %53 : tensor<1024xi32, #blocked1> loc(#loc48)
    %55 = arith.muli %14, %cst_10 : tensor<1024xi32, #blocked1> loc(#loc49)
    %56 = arith.addi %54, %55 : tensor<1024xi32, #blocked1> loc(#loc50)
    %57 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc51)
    %58 = tt.addptr %57, %56 : tensor<1024x!tt.ptr<f32>, #blocked1>, tensor<1024xi32, #blocked1> loc(#loc51)
    %59 = triton_gpu.convert_layout %48 : tensor<1024xf32, #blocked> -> tensor<1024xf32, #blocked1> loc(#loc52)
    tt.store %58, %59 : tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc52)
    tt.return loc(#loc53)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":21:28)
#loc3 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":21:33)
#loc4 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":22:36)
#loc5 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":22:23)
#loc6 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":24:19)
#loc7 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":25:19)
#loc8 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":27:21)
#loc9 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":27:29)
#loc10 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":28:21)
#loc11 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":28:31)
#loc12 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":29:19)
#loc13 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":30:19)
#loc14 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":31:32)
#loc15 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":31:41)
#loc16 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":31:37)
#loc17 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":31:30)
#loc18 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":31:46)
#loc19 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":32:34)
#loc20 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":32:41)
#loc21 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":32:30)
#loc22 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":32:50)
#loc23 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":33:35)
#loc24 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":33:42)
#loc25 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":33:30)
#loc26 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":33:51)
#loc27 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":34:36)
#loc28 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":34:43)
#loc29 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":34:31)
#loc30 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":34:52)
#loc31 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":35:18)
#loc32 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":38:32)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc34 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":39:40)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc37 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":40:18)
#loc38 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":42:33)
#loc39 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":43:41)
#loc40 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":44:20)
#loc41 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":46:35)
#loc42 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":47:42)
#loc43 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":48:25)
#loc44 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":48:37)
#loc45 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":49:35)
#loc46 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":49:30)
#loc47 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":49:45)
#loc48 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":49:40)
#loc49 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":49:57)
#loc50 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":49:50)
#loc51 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":49:25)
#loc52 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":49:69)
#loc53 = loc("inductor_cache/sf/csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py":49:4)
#loc54 = loc(callsite(#loc33 at #loc34))
#loc55 = loc(callsite(#loc35 at #loc34))
#loc56 = loc(callsite(#loc36 at #loc34))
#loc57 = loc(callsite(#loc33 at #loc39))
#loc58 = loc(callsite(#loc35 at #loc39))
#loc59 = loc(callsite(#loc36 at #loc39))
#loc60 = loc(callsite(#loc33 at #loc42))
#loc61 = loc(callsite(#loc35 at #loc42))
#loc62 = loc(callsite(#loc36 at #loc42))
