; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_cumsum_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = icmp slt i32 %5, 16, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 3, !dbg !12
  %9 = shl i32 %5, 2, !dbg !13
  %10 = or disjoint i32 %9, %8, !dbg !14
  %11 = sext i32 %10 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %12, i1 %6, i32 0, i1 %6) #2, !dbg !16
  %14 = bitcast i32 %13 to float, !dbg !16
  %15 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %13, i32 1, i32 0), !dbg !17
  %16 = bitcast i32 %15 to float, !dbg !17
  %.not = icmp eq i32 %8, 0, !dbg !17
  %17 = fadd float %14, %16, !dbg !18
  %18 = select i1 %.not, float %14, float %17, !dbg !17
  %19 = bitcast float %18 to i32, !dbg !17
  %20 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %19, i32 2, i32 0), !dbg !17
  %21 = bitcast i32 %20 to float, !dbg !17
  %22 = icmp samesign ugt i32 %8, 1, !dbg !17
  %23 = fadd float %18, %21, !dbg !18
  %24 = select i1 %22, float %23, float %18, !dbg !17
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !20
  %26 = and i32 %7, 60, !dbg !21
  %27 = icmp eq i32 %26, 0, !dbg !21
  %28 = bitcast float %24 to i32, !dbg !21
  %29 = and i1 %27, %6, !dbg !21
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %28, ptr addrspace(1) %25, i1 %29) #2, !dbg !21
  ret void, !dbg !22
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.up.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ce3uzcejywe7g3wr2tneqam2gso66qphwtgpqveot3ayctvo3e3v.py", directory: "inductor_cache/e3")
!4 = !{ptr @triton_per_fused_cumsum_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_cumsum_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_cumsum_1", linkageName: "triton_per_fused_cumsum_1", scope: !3, file: !3, line: 24, type: !8, scopeLine: 24, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 28, column: 28, scope: !7)
!11 = !DILocation(line: 30, column: 21, scope: !7)
!12 = !DILocation(line: 31, column: 34, scope: !7)
!13 = !DILocation(line: 36, column: 37, scope: !7)
!14 = !DILocation(line: 36, column: 35, scope: !7)
!15 = !DILocation(line: 36, column: 30, scope: !7)
!16 = !DILocation(line: 36, column: 42, scope: !7)
!17 = !DILocation(line: 39, column: 44, scope: !7)
!18 = !DILocation(line: 13, column: 20, scope: !19, inlinedAt: !17)
!19 = distinct !DILexicalBlockFile(scope: !7, file: !3, discriminator: 0)
!20 = !DILocation(line: 40, column: 25, scope: !7)
!21 = !DILocation(line: 40, column: 43, scope: !7)
!22 = !DILocation(line: 40, column: 4, scope: !7)
