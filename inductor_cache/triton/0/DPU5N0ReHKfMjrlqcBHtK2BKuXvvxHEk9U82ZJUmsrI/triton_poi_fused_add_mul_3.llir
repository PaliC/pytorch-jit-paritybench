; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_mul_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 256, !dbg !14
  %13 = srem i32 %11, 4, !dbg !15
  %14 = sdiv i32 %11, 64, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #1, !dbg !17
  %16 = bitcast i32 %15 to float, !dbg !17
  %17 = sext i32 %11 to i64, !dbg !18
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !18
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %18, i1 %12) #1, !dbg !19
  %20 = extractvalue { i32, i32 } %19, 0, !dbg !19
  %21 = extractvalue { i32, i32 } %19, 1, !dbg !19
  %22 = bitcast i32 %20 to float, !dbg !19
  %23 = bitcast i32 %21 to float, !dbg !19
  %24 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !20
  %25 = shufflevector <2 x i32> %24, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !20
  %26 = sdiv <2 x i32> %25, <i32 16, i32 4>, !dbg !20
  %27 = srem <2 x i32> %26, splat (i32 4), !dbg !21
  %28 = shl nsw <2 x i32> %27, <i32 2, i32 4>, !dbg !22
  %29 = shl nsw i32 %14, 6, !dbg !23
  %30 = add i32 %29, %13, !dbg !24
  %31 = extractelement <2 x i32> %28, i64 0, !dbg !25
  %32 = add i32 %30, %31, !dbg !25
  %33 = extractelement <2 x i32> %28, i64 1, !dbg !26
  %34 = add i32 %32, %33, !dbg !26
  %35 = sext i32 %34 to i64, !dbg !27
  %36 = getelementptr float, ptr addrspace(1) %2, i64 %35, !dbg !27
  %37 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %36, i1 %12) #1, !dbg !28
  %38 = extractvalue { i32, i32 } %37, 0, !dbg !28
  %39 = extractvalue { i32, i32 } %37, 1, !dbg !28
  %40 = bitcast i32 %38 to float, !dbg !28
  %41 = bitcast i32 %39 to float, !dbg !28
  %42 = fmul float %16, %22, !dbg !29
  %43 = fmul float %16, %23, !dbg !29
  %44 = fadd float %42, %40, !dbg !30
  %45 = fadd float %43, %41, !dbg !30
  %46 = getelementptr float, ptr addrspace(1) %3, i64 %17, !dbg !31
  %47 = bitcast float %44 to i32, !dbg !32
  %48 = bitcast float %45 to i32, !dbg !32
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %47, i32 %48, ptr addrspace(1) %46, i1 %12) #1, !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjooquqz7fhl4cpc7r72p4xn5k5e2nqunvc544mticg2upajahwd.py", directory: "inductor_cache/jo")
!4 = !{ptr @triton_poi_fused_add_mul_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_3", linkageName: "triton_poi_fused_add_mul_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 28, column: 19, scope: !7)
!17 = !DILocation(line: 29, column: 19, scope: !7)
!18 = !DILocation(line: 31, column: 30, scope: !7)
!19 = !DILocation(line: 31, column: 35, scope: !7)
!20 = !DILocation(line: 27, column: 21, scope: !7)
!21 = !DILocation(line: 27, column: 27, scope: !7)
!22 = !DILocation(line: 32, column: 37, scope: !7)
!23 = !DILocation(line: 32, column: 53, scope: !7)
!24 = !DILocation(line: 32, column: 35, scope: !7)
!25 = !DILocation(line: 32, column: 42, scope: !7)
!26 = !DILocation(line: 32, column: 50, scope: !7)
!27 = !DILocation(line: 32, column: 30, scope: !7)
!28 = !DILocation(line: 32, column: 58, scope: !7)
!29 = !DILocation(line: 33, column: 18, scope: !7)
!30 = !DILocation(line: 34, column: 18, scope: !7)
!31 = !DILocation(line: 35, column: 25, scope: !7)
!32 = !DILocation(line: 35, column: 36, scope: !7)
!33 = !DILocation(line: 35, column: 4, scope: !7)
