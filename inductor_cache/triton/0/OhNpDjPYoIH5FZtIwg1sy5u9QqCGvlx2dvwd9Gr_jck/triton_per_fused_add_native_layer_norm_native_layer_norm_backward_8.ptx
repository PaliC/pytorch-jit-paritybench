//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8 // -- Begin function triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8
.visible .entry triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_6,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_7,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_8
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<73>;
	.reg .f32 	%f<57>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd9, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_0];
	ld.param.u64 	%rd10, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_1];
$L__tmp0:
	.loc	1 23 28                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:25:21
	setp.lt.s32 	%p1, %r1, 16;
	ld.param.u64 	%rd11, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_2];
	ld.param.u64 	%rd12, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_3];
	.loc	1 26 34                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:26:34
	mov.u32 	%r39, %tid.x;
	and.b32  	%r40, %r39, 31;
	ld.param.u64 	%rd13, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_4];
	ld.param.u64 	%rd14, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_5];
	shl.b32 	%r41, %r39, 1;
	ld.param.u64 	%rd15, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_6];
	and.b32  	%r42, %r41, 126;
	.loc	1 31 39                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:31:39
	shl.b32 	%r43, %r1, 7;
	.loc	1 31 35                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:31:35
	or.b32  	%r44, %r43, %r42;
	.loc	1 31 30                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:31:30
	mul.wide.s32 	%rd16, %r44, 4;
	add.s64 	%rd1, %rd10, %rd16;
	mov.b32 	%r4, 0;
	.loc	1 31 44                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:31:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	.loc	1 32 34                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:32:34
	add.s64 	%rd2, %rd9, %rd16;
	.loc	1 32 48                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:32:48
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r6, %r4;
	@!%p1 mov.u32 %r7, %r4;
	// end inline asm
	.loc	1 33 30                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:33:30
	mul.wide.u32 	%rd17, %r42, 4;
	add.s64 	%rd3, %rd11, %rd17;
	mov.pred 	%p7, -1;
	.loc	1 33 35                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:33:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p7 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 31                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:34:31
	add.s64 	%rd4, %rd12, %rd17;
	.loc	1 34 36                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:34:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p7 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 35 31                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:35:31
	add.s64 	%rd5, %rd13, %rd17;
	.loc	1 35 36                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:35:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p7 ld.global.L1::evict_last.v2.b32 { %r14, %r15 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 31 44                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:31:44
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 32 48                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:32:48
	mov.b32 	%f3, %r7;
	mov.b32 	%f4, %r6;
	.loc	1 33 35                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:33:35
	mov.b32 	%f5, %r11;
	mov.b32 	%f6, %r10;
	.loc	1 36 18                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:36:18
	add.f32 	%f7, %f4, %f6;
	add.f32 	%f8, %f3, %f5;
	.loc	1 37 18                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:37:18
	add.f32 	%f9, %f8, %f2;
	add.f32 	%f10, %f7, %f1;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f10, %f9;
	selp.f32 	%f12, %f11, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f12;
	shfl.sync.bfly.b32	%r46, %r45, 16, 31, -1;
	mov.b32 	%f13, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f14;
	shfl.sync.bfly.b32	%r48, %r47, 8, 31, -1;
	mov.b32 	%f15, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f16;
	shfl.sync.bfly.b32	%r50, %r49, 4, 31, -1;
	mov.b32 	%f17, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f18;
	shfl.sync.bfly.b32	%r52, %r51, 2, 31, -1;
	mov.b32 	%f19, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f20;
	shfl.sync.bfly.b32	%r54, %r53, 1, 31, -1;
	mov.b32 	%f21, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p10, %r40, 0;
	shr.u32 	%r55, %r39, 3;
	and.b32  	%r56, %r55, 4;
	mov.u32 	%r57, global_smem;
	add.s32 	%r16, %r57, %r56;
	mov.b32 	%r17, %f22;
	// begin inline asm
	@%p10 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p11, %r39, 2;
	shl.b32 	%r58, %r39, 2;
	add.s32 	%r19, %r57, %r58;
	// begin inline asm
	@%p11 ld.shared.b32 %r18, [ %r19 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r18;
	shfl.sync.bfly.b32	%r59, %r18, 1, 31, -1;
	mov.b32 	%f24, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r60, %r39, 1;
	setp.eq.b32 	%p19, %r60, 1;
	not.pred 	%p20, %p19;
	and.pred  	%p12, %p11, %p20;
	mov.b32 	%r21, %f25;
	// begin inline asm
	@%p12 st.shared.b32 [ %r19 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 45 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:45:20
	ld.shared.u32 	%r23, [global_smem];
	mov.b32 	%r24, 1124073472;
	// begin inline asm
	div.full.f32 %r22, %r23, %r24;
	// end inline asm
	mov.b32 	%f26, %r22;
	.loc	1 46 19                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:46:19
	sub.f32 	%f27, %f10, %f26;
	sub.f32 	%f28, %f9, %f26;
	.loc	1 47 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:47:20
	mul.f32 	%f29, %f28, %f28;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f30, %f27, %f27, %f29;
	selp.f32 	%f31, %f30, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f31;
	shfl.sync.bfly.b32	%r62, %r61, 16, 31, -1;
	mov.b32 	%f32, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f33;
	shfl.sync.bfly.b32	%r64, %r63, 8, 31, -1;
	mov.b32 	%f34, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f35;
	shfl.sync.bfly.b32	%r66, %r65, 4, 31, -1;
	mov.b32 	%f36, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f37;
	shfl.sync.bfly.b32	%r68, %r67, 2, 31, -1;
	mov.b32 	%f38, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f39;
	shfl.sync.bfly.b32	%r70, %r69, 1, 31, -1;
	mov.b32 	%f40, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r26, %f41;
	// begin inline asm
	@%p10 st.shared.b32 [ %r16 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p11 ld.shared.b32 %r27, [ %r19 + 0 ];
	// end inline asm
	mov.b32 	%f42, %r27;
	shfl.sync.bfly.b32	%r71, %r27, 1, 31, -1;
	mov.b32 	%f43, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f44;
	// begin inline asm
	@%p12 st.shared.b32 [ %r19 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 53 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:53:20
	ld.shared.u32 	%r32, [global_smem];
	// begin inline asm
	div.full.f32 %r31, %r32, %r24;
	// end inline asm
	mov.b32 	%f45, %r31;
	.loc	1 55 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:55:20
	add.f32 	%f46, %f45, 0f3727C5AC;
	.loc	1 56 28                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:56:28
	rsqrt.approx.ftz.f32 	%f47, %f46;
	.loc	1 35 36                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:35:36
	mov.b32 	%f48, %r15;
	mov.b32 	%f49, %r14;
	.loc	1 34 36                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:34:36
	mov.b32 	%f50, %r13;
	mov.b32 	%f51, %r12;
	.loc	1 57 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:57:20
	mul.f32 	%f52, %f27, %f47;
	mul.f32 	%f53, %f28, %f47;
	.loc	1 59 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:59:20
	fma.rn.f32 	%f54, %f52, %f51, %f49;
	fma.rn.f32 	%f55, %f53, %f50, %f48;
	.loc	1 61 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:61:20
	mul.f32 	%f56, %f47, 0f3C000000;
	.loc	1 62 49                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:62:49
	mov.b32 	%r34, %f52;
	mov.b32 	%r35, %f53;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd2 + 0 ], { %r34, %r35 };
	// end inline asm
	.loc	1 63 25                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:63:25
	add.s64 	%rd7, %rd14, %rd16;
	.loc	1 63 46                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:63:46
	mov.b32 	%r36, %f54;
	mov.b32 	%r37, %f55;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd7 + 0 ], { %r36, %r37 };
	// end inline asm
	.loc	1 64 25                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:64:25
	mul.wide.s32 	%rd18, %r1, 4;
	add.s64 	%rd8, %rd15, %rd18;
	.loc	1 64 37                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:64:37
	and.b32  	%r72, %r39, 63;
	setp.eq.s32 	%p21, %r72, 0;
	mov.b32 	%r38, %f56;
	and.pred  	%p18, %p21, %p1;
	// begin inline asm
	@%p18 st.global.b32 [ %rd8 + 0 ], { %r38 };
	// end inline asm
	.loc	1 64 4                          // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:64:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/e3/ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 236                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 51
.b8 119
.b8 114
.b8 122
.b8 121
.b8 100
.b8 117
.b8 111
.b8 106
.b8 107
.b8 122
.b8 115
.b8 112
.b8 104
.b8 50
.b8 121
.b8 55
.b8 120
.b8 104
.b8 117
.b8 101
.b8 115
.b8 52
.b8 108
.b8 51
.b8 111
.b8 119
.b8 115
.b8 52
.b8 121
.b8 50
.b8 117
.b8 52
.b8 52
.b8 104
.b8 104
.b8 106
.b8 121
.b8 119
.b8 105
.b8 52
.b8 114
.b8 98
.b8 50
.b8 112
.b8 110
.b8 110
.b8 122
.b8 103
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x46 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa9:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
