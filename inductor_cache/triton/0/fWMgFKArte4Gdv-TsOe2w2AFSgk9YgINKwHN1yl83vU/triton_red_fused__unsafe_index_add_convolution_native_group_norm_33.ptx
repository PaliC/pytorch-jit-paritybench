//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__unsafe_index_add_convolution_native_group_norm_33 // -- Begin function triton_red_fused__unsafe_index_add_convolution_native_group_norm_33
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__unsafe_index_add_convolution_native_group_norm_33
.visible .entry triton_red_fused__unsafe_index_add_convolution_native_group_norm_33(
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_7,
	.param .u32 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_8,
	.param .u32 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<40>;
	.reg .b32 	%r<129>;
	.reg .f32 	%f<55>;
	.reg .b64 	%rd<88>;
	.loc	1 19 0                          // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:19:0

// %bb.0:                               // %.peel.next
	ld.param.u64 	%rd15, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_7];
	ld.param.u64 	%rd14, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_6];
	ld.param.u64 	%rd13, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_5];
	ld.param.u64 	%rd12, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_1];
	ld.param.u64 	%rd20, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_0];
$L__tmp0:
	.loc	1 22 28                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:22:28
	// begin inline asm
	mov.u32 %r11, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:22:33
	shl.b32 	%r21, %r11, 6;
	ld.param.u64 	%rd27, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_2];
	.loc	1 23 44                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:23:44
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd28, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_3];
	and.b32  	%r2, %r1, 3;
	ld.param.u64 	%rd29, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_4];
	and.b32  	%r3, %r1, 63;
	bfe.u32 	%r22, %r1, 2, 4;
	and.b32  	%r23, %r1, 64;
	shr.u32 	%r24, %r23, 2;
	or.b32  	%r25, %r22, %r24;
	and.b32  	%r26, %r1, 128;
	shr.u32 	%r27, %r26, 2;
	or.b32  	%r28, %r25, %r27;
	.loc	1 23 23                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:23:23
	or.b32  	%r4, %r21, %r3;
	or.b32  	%r5, %r21, %r28;
	.loc	1 24 21                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:24:21
	setp.lt.s32 	%p1, %r4, 512;
	setp.lt.s32 	%p6, %r5, 512;
	.loc	1 27 19                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:27:19
	shr.s32 	%r30, %r4, 31;
	shr.u32 	%r31, %r30, 30;
	add.s32 	%r32, %r4, %r31;
	shr.s32 	%r33, %r32, 2;
	.loc	1 26 19                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:26:19
	and.b32  	%r34, %r32, 268435452;
	sub.s32 	%r35, %r4, %r34;
	.loc	1 28 26                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:28:26
	shr.s32 	%r36, %r32, 31;
	shr.u32 	%r37, %r36, 27;
	add.s32 	%r38, %r33, %r37;
	and.b32  	%r39, %r38, -32;
	sub.s32 	%r40, %r33, %r39;
	.loc	1 29 31                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:29:31
	mul.wide.s32 	%rd30, %r40, 4;
	add.s64 	%rd16, %rd27, %rd30;
	.loc	1 29 36                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:29:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r12;
	.loc	1 41 42                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:41:42
	shl.b32 	%r41, %r35, 4;
	.loc	1 44 46                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:44:46
	shl.b32 	%r42, %r5, 16;
	.loc	1 55 71                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:55:71
	shl.b32 	%r43, %r33, 15;
	.loc	1 55 65                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:55:65
	cvt.s64.s32 	%rd1, %r43;
	.loc	1 34 36                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:34:36
	or.b32  	%r44, %r23, %r26;
	shr.u32 	%r6, %r44, 6;
	or.b32  	%r45, %r42, %r2;
	shl.b32 	%r46, %r1, 6;
	and.b32  	%r47, %r46, 192;
	or.b32  	%r48, %r28, %r47;
	and.b32  	%r49, %r1, 255;
	shr.u32 	%r50, %r47, 4;
	mov.u32 	%r51, global_smem;
	add.s32 	%r52, %r51, %r50;
	shl.b32 	%r53, %r48, 2;
	add.s32 	%r72, %r52, %r53;
	shr.u32 	%r54, %r1, 4;
	and.b32  	%r55, %r54, 12;
	add.s32 	%r56, %r51, %r55;
	shl.b32 	%r57, %r49, 2;
	add.s32 	%r8, %r56, %r57;
	shl.b32 	%r58, %r1, 2;
	and.b32  	%r59, %r58, 252;
	or.b32  	%r60, %r59, %r6;
	add.s32 	%r61, %r51, %r59;
	shl.b32 	%r62, %r60, 2;
	add.s32 	%r78, %r61, %r62;
	and.b32  	%r63, %r1, 252;
	add.s32 	%r64, %r51, %r63;
	add.s32 	%r10, %r64, %r57;
	.loc	1 41 34                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:41:34
	mul.wide.s32 	%rd31, %r41, 8;
	add.s64 	%rd18, %rd20, %rd31;
	.loc	1 41 47                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:41:47
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd18 + 0 ];
	@!%p1 mov.u64 %rd17, 0x0;
	// end inline asm
	mov.pred 	%p23, -1;
	.loc	1 42 39                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:42:39
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p23 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 43 34                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:43:34
	mul.wide.u32 	%rd32, %r6, 8;
	add.s64 	%rd22, %rd20, %rd32;
	.loc	1 43 39                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:43:39
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p23 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 44 35                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:44:35
	mul.wide.s32 	%rd33, %r45, 4;
	add.s64 	%rd23, %rd28, %rd33;
	mov.b32 	%r14, 0;
	.loc	1 44 51                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:44:51
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p6 ld.global.L1::evict_first.b32 { %r16 }, [ %rd23 + 0 ];
	@!%p6 mov.u32 %r16, %r14;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p23 st.shared.b32 [ %r72 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f11, [%r8];
	.loc	1 48 36                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:48:36
	shr.u64 	%rd34, %rd17, 58;
	and.b64  	%rd35, %rd34, 32;
	add.s64 	%rd36, %rd35, %rd17;
	.loc	1 51 36                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:51:36
	shr.u64 	%rd37, %rd19, 58;
	and.b64  	%rd38, %rd37, 32;
	add.s64 	%rd39, %rd38, %rd19;
	.loc	1 55 35                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:55:35
	shl.b64 	%rd40, %rd21, 2;
	add.s64 	%rd41, %rd12, %rd40;
	shr.u64 	%rd42, %rd21, 56;
	and.b64  	%rd43, %rd42, 128;
	add.s64 	%rd44, %rd41, %rd43;
	shl.b64 	%rd45, %rd39, 7;
	add.s64 	%rd46, %rd44, %rd45;
	shl.b64 	%rd47, %rd36, 12;
	add.s64 	%rd48, %rd46, %rd47;
	mul.wide.s32 	%rd49, %r43, 4;
	add.s64 	%rd24, %rd48, %rd49;
	.loc	1 55 76                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:55:76
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd24 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r17;
	.loc	1 56 24                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:56:24
	add.f32 	%f13, %f1, %f12;
	.loc	1 57 24                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:57:24
	add.f32 	%f14, %f11, %f13;
	.loc	1 65 29                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:65:29
	add.s64 	%rd25, %rd29, %rd33;
	.loc	1 65 52                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:65:52
	bar.sync 	0;
	mov.b32 	%r19, %f14;
	// begin inline asm
	@%p23 st.shared.b32 [ %r78 + 0 ], %r19;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r20, [%r10];
	// begin inline asm
	@%p6 st.global.b32 [ %rd25 + 0 ], { %r20 };
	// end inline asm
	.loc	1 64 58                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:64:58
	selp.f32 	%f52, 0f3F800000, 0f00000000, %p1;
	.loc	1 62 54                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:62:54
	selp.f32 	%f54, %f14, 0f00000000, %p1;
	.loc	1 34 36                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:34:36
	or.b32  	%r65, %r21, %r27;
	or.b32  	%r66, %r65, %r24;
	or.b32  	%r67, %r66, %r22;
	shl.b32 	%r68, %r67, 16;
	or.b32  	%r69, %r68, %r2;
	mul.wide.s32 	%rd50, %r69, 4;
	or.b64  	%rd51, %rd50, 16;
	add.s64 	%rd86, %rd29, %rd51;
	add.s64 	%rd85, %rd28, %rd51;
	mov.f32 	%f53, 0f00000000;
	mov.u64 	%rd87, 4;
	shl.b64 	%rd80, %rd1, 2;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 36                          // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:0:36
	cvt.u32.u64 	%r81, %rd87;
	.loc	1 37 23                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:37:23
	shr.u32 	%r82, %r81, 12;
	.loc	1 39 23                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:39:23
	and.b32  	%r83, %r81, 60;
	or.b32  	%r84, %r83, %r6;
	.loc	1 41 34                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:41:34
	mul.wide.u32 	%rd61, %r82, 8;
	add.s64 	%rd53, %rd18, %rd61;
	.loc	1 41 47                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:41:47
	// begin inline asm
	mov.u64 %rd52, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd52 }, [ %rd53 + 0 ];
	@!%p1 mov.u64 %rd52, 0x0;
	// end inline asm
	.loc	1 42 34                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:42:34
	shr.u64 	%rd62, %rd87, 3;
	and.b64  	%rd63, %rd62, 504;
	add.s64 	%rd55, %rd20, %rd63;
	.loc	1 42 39                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:42:39
	// begin inline asm
	mov.u64 %rd54, 0x0;
	@%p23 ld.global.L1::evict_last.b64 { %rd54 }, [ %rd55 + 0 ];
	// end inline asm
	.loc	1 43 34                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:43:34
	mul.wide.u32 	%rd64, %r84, 8;
	add.s64 	%rd57, %rd20, %rd64;
	.loc	1 43 39                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:43:39
	// begin inline asm
	mov.u64 %rd56, 0x0;
	@%p23 ld.global.L1::evict_last.b64 { %rd56 }, [ %rd57 + 0 ];
	// end inline asm
	.loc	1 44 51                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:44:51
	// begin inline asm
	mov.u32 %r70, 0x0;
	@%p6 ld.global.L1::evict_first.b32 { %r70 }, [ %rd85 + 0 ];
	@!%p6 mov.u32 %r70, %r14;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p23 st.shared.b32 [ %r72 + 0 ], %r70;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f15, [%r8];
	.loc	1 48 36                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:48:36
	shr.u64 	%rd65, %rd52, 58;
	and.b64  	%rd66, %rd65, 32;
	add.s64 	%rd67, %rd66, %rd52;
	.loc	1 51 36                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:51:36
	shr.u64 	%rd68, %rd54, 58;
	and.b64  	%rd69, %rd68, 32;
	add.s64 	%rd70, %rd69, %rd54;
	.loc	1 55 35                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:55:35
	shl.b64 	%rd71, %rd56, 2;
	add.s64 	%rd72, %rd12, %rd71;
	shr.u64 	%rd73, %rd56, 56;
	and.b64  	%rd74, %rd73, 128;
	add.s64 	%rd75, %rd72, %rd74;
	shl.b64 	%rd76, %rd70, 7;
	add.s64 	%rd77, %rd75, %rd76;
	shl.b64 	%rd78, %rd67, 12;
	add.s64 	%rd79, %rd77, %rd78;
	add.s64 	%rd59, %rd79, %rd80;
	.loc	1 55 76                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:55:76
	// begin inline asm
	mov.u32 %r74, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r74 }, [ %rd59 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r74;
	.loc	1 56 24                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:56:24
	add.f32 	%f17, %f1, %f16;
	.loc	1 57 24                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:57:24
	add.f32 	%f18, %f15, %f17;
$L__tmp1:
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f19, %f18, %f54;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f20, %f52, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r76, %f19;
	mov.b32 	%r77, %f20;
	// begin inline asm
	div.full.f32 %r75, %r76, %r77;
	// end inline asm
	mov.b32 	%f21, %r75;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f22, %f54, %f21;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f23, %f18, %f22;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f24, %f19, %f23, %f53;
$L__tmp2:
	.loc	1 62 54                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:62:54
	selp.f32 	%f54, %f22, %f54, %p1;
	.loc	1 63 50                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:63:50
	selp.f32 	%f53, %f24, %f53, %p1;
	.loc	1 64 58                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:64:58
	selp.f32 	%f52, %f20, %f52, %p1;
	.loc	1 65 52                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:65:52
	bar.sync 	0;
	mov.b32 	%r79, %f18;
	// begin inline asm
	@%p23 st.shared.b32 [ %r78 + 0 ], %r79;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r80, [%r10];
	// begin inline asm
	@%p6 st.global.b32 [ %rd86 + 0 ], { %r80 };
	// end inline asm
	.loc	1 34 36                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:34:36
	add.s64 	%rd8, %rd87, 4;
	add.s64 	%rd86, %rd86, 16;
	add.s64 	%rd85, %rd85, 16;
	setp.lt.u64 	%p22, %rd87, 65532;
	mov.u64 	%rd87, %rd8;
	@%p22 bra 	$L__BB0_1;
// %bb.2:                               // %.loopexit
$L__tmp3:
	.loc	2 204 46                        // triton_helpers.py:204:46
	bar.sync 	0;
	bfe.u32 	%r112, %r1, 6, 2;
	shl.b32 	%r113, %r112, 2;
	shl.b32 	%r114, %r3, 4;
	or.b32  	%r115, %r114, %r113;
	add.s32 	%r85, %r51, %r115;
	mov.b32 	%r86, %f54;
	// begin inline asm
	@%p23 st.shared.b32 [ %r85 + 0 ], %r86;
	// end inline asm
	add.s32 	%r117, %r51, 1024;
	add.s32 	%r87, %r117, %r115;
	mov.b32 	%r88, %f53;
	// begin inline asm
	@%p23 st.shared.b32 [ %r87 + 0 ], %r88;
	// end inline asm
	add.s32 	%r118, %r51, 2048;
	add.s32 	%r89, %r118, %r115;
	mov.b32 	%r90, %f52;
	// begin inline asm
	@%p23 st.shared.b32 [ %r89 + 0 ], %r90;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p26, %r1, 256;
	add.s32 	%r92, %r51, %r58;
	// begin inline asm
	@%p26 ld.shared.b32 %r91, [ %r92 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r91;
	add.s32 	%r94, %r117, %r58;
	// begin inline asm
	@%p26 ld.shared.b32 %r93, [ %r94 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r93;
	add.s32 	%r96, %r118, %r58;
	// begin inline asm
	@%p26 ld.shared.b32 %r95, [ %r96 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r95;
	shfl.sync.bfly.b32	%r120, %r91, 2, 31, -1;
	mov.b32 	%f28, %r120;
	shfl.sync.bfly.b32	%r121, %r93, 2, 31, -1;
	mov.b32 	%f29, %r121;
	shfl.sync.bfly.b32	%r98, %r95, 2, 31, -1;
	mov.b32 	%f30, %r98;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f31, %f28, %f25;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f32, %f27, %f30;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p36, %f32, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r99, %f32;
	// begin inline asm
	div.full.f32 %r97, %r98, %r99;
	// end inline asm
	mov.b32 	%f33, %r97;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f34, 0f00000000, %f33, %p36;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f35, %f31, %f34, %f25;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f36, %f26, %f29;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f37, %f31, %f31;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f38, %f37, %f27;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f39, %f38, %f34, %f36;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r122, %f35;
	shfl.sync.bfly.b32	%r123, %r122, 1, 31, -1;
	mov.b32 	%f40, %r123;
	mov.b32 	%r124, %f39;
	shfl.sync.bfly.b32	%r125, %r124, 1, 31, -1;
	mov.b32 	%f41, %r125;
	shfl.sync.bfly.b32	%r101, %r99, 1, 31, -1;
	mov.b32 	%f42, %r101;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f43, %f40, %f35;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f44, %f32, %f42;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p37, %f44, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r102, %f44;
	// begin inline asm
	div.full.f32 %r100, %r101, %r102;
	// end inline asm
	mov.b32 	%f45, %r100;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f46, 0f00000000, %f45, %p37;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f47, %f43, %f46, %f35;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f48, %f39, %f41;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f49, %f43, %f43;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f50, %f32, %f49;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f51, %f46, %f50, %f48;
	.loc	2 204 46                        // triton_helpers.py:204:46
	setp.eq.s32 	%p38, %r2, 0;
	and.pred  	%p29, %p26, %p38;
	mov.b32 	%r104, %f47;
	// begin inline asm
	@%p29 st.shared.b32 [ %r92 + 0 ], %r104;
	// end inline asm
	mov.b32 	%r106, %f51;
	// begin inline asm
	@%p29 st.shared.b32 [ %r94 + 0 ], %r106;
	// end inline asm
	// begin inline asm
	@%p29 st.shared.b32 [ %r96 + 0 ], %r102;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r126, %r51, %r114;
	ld.shared.u32 	%r109, [%r126];
	add.s32 	%r127, %r117, %r114;
	ld.shared.u32 	%r110, [%r127];
	add.s32 	%r128, %r118, %r114;
	ld.shared.u32 	%r111, [%r128];
$L__tmp4:
	.loc	1 72 25                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:72:25
	mul.wide.s32 	%rd84, %r4, 4;
	add.s64 	%rd81, %rd13, %rd84;
	.loc	1 72 37                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:72:37
	setp.eq.s32 	%p39, %r112, 0;
	and.pred  	%p32, %p39, %p1;
	// begin inline asm
	@%p32 st.global.b32 [ %rd81 + 0 ], { %r109 };
	// end inline asm
	.loc	1 73 25                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:73:25
	add.s64 	%rd82, %rd14, %rd84;
	.loc	1 73 37                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:73:37
	// begin inline asm
	@%p32 st.global.b32 [ %rd82 + 0 ], { %r110 };
	// end inline asm
	.loc	1 74 25                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:74:25
	add.s64 	%rd83, %rd15, %rd84;
	.loc	1 74 37                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:74:37
	// begin inline asm
	@%p32 st.global.b32 [ %rd83 + 0 ], { %r111 };
	// end inline asm
	.loc	1 74 4                          // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:74:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 236                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 117
.b8 102
.b8 121
.b8 101
.b8 52
.b8 116
.b8 52
.b8 113
.b8 103
.b8 99
.b8 110
.b8 118
.b8 55
.b8 97
.b8 119
.b8 117
.b8 50
.b8 111
.b8 97
.b8 113
.b8 117
.b8 98
.b8 114
.b8 103
.b8 107
.b8 116
.b8 115
.b8 52
.b8 116
.b8 114
.b8 113
.b8 111
.b8 104
.b8 101
.b8 98
.b8 122
.b8 119
.b8 106
.b8 98
.b8 114
.b8 113
.b8 116
.b8 53
.b8 109
.b8 103
.b8 116
.b8 113
.b8 112
.b8 115
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 117
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x46 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 51
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa9:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 60                                  // DW_AT_call_line
.b8 55                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 67                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
