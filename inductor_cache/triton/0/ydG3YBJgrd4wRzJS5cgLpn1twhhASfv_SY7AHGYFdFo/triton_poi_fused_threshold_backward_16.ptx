//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_threshold_backward_16 // -- Begin function triton_poi_fused_threshold_backward_16
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_threshold_backward_16
.visible .entry triton_poi_fused_threshold_backward_16(
	.param .u64 .ptr .global .align 1 triton_poi_fused_threshold_backward_16_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_threshold_backward_16_param_1,
	.param .u32 triton_poi_fused_threshold_backward_16_param_2,
	.param .u32 triton_poi_fused_threshold_backward_16_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<25>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<101>;
	.reg .f32 	%f<9>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_threshold_backward_16_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused_threshold_backward_16_param_1];
$L__tmp0:
	.loc	1 22 28                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:22:33
	shl.b32 	%r21, %r1, 5;
	.loc	1 23 44                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:23:44
	mov.u32 	%r22, %tid.x;
	bfe.u32 	%r23, %r22, 3, 4;
	shl.b32 	%r24, %r22, 3;
	and.b32  	%r25, %r24, 24;
	.loc	1 23 23                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:23:23
	or.b32  	%r26, %r21, %r23;
	or.b32  	%r27, %r26, 16;
	or.b32  	%r28, %r21, %r25;
	.loc	1 24 21                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:24:21
	setp.lt.s32 	%p12, %r26, 512;
	setp.lt.s32 	%p13, %r27, 512;
	setp.lt.s32 	%p14, %r28, 512;
	.loc	1 25 28                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:25:33
	shl.b32 	%r29, %r2, 5;
	.loc	1 26 44                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:26:44
	shl.b32 	%r30, %r22, 2;
	and.b32  	%r31, %r30, 28;
	bfe.u32 	%r32, %r22, 2, 5;
	.loc	1 26 23                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:26:23
	or.b32  	%r33, %r29, %r31;
	or.b32  	%r34, %r29, %r32;
	.loc	1 27 21                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:27:21
	setp.lt.s32 	%p15, %r33, 64;
	setp.lt.s32 	%p16, %r34, 64;
	.loc	1 31 19                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:31:19
	shr.s32 	%r36, %r28, 31;
	shr.u32 	%r37, %r36, 25;
	add.s32 	%r38, %r28, %r37;
	.loc	1 30 19                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:30:19
	and.b32  	%r39, %r38, -128;
	sub.s32 	%r40, %r28, %r39;
	.loc	1 32 38                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:32:38
	shl.b32 	%r41, %r26, 6;
	shl.b32 	%r42, %r27, 6;
	.loc	1 32 35                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:32:35
	add.s32 	%r43, %r33, %r41;
	add.s32 	%r44, %r33, %r42;
	.loc	1 32 30                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:32:30
	mul.wide.s32 	%rd6, %r43, 4;
	add.s64 	%rd1, %rd4, %rd6;
	mul.wide.s32 	%rd7, %r44, 4;
	add.s64 	%rd2, %rd4, %rd7;
	.loc	1 32 51                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:32:51
	and.pred  	%p1, %p12, %p15;
	and.pred  	%p2, %p13, %p15;
	and.pred  	%p11, %p14, %p16;
	.loc	1 32 43                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:32:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	.loc	1 34 19                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:34:19
	setp.le.f32 	%p17, %f8, 0f00000000;
	setp.le.f32 	%p18, %f7, 0f00000000;
	setp.le.f32 	%p19, %f6, 0f00000000;
	setp.le.f32 	%p20, %f5, 0f00000000;
	setp.le.f32 	%p21, %f4, 0f00000000;
	setp.le.f32 	%p22, %f3, 0f00000000;
	setp.le.f32 	%p23, %f2, 0f00000000;
	setp.le.f32 	%p24, %f1, 0f00000000;
	.loc	1 35 34                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:35:34
	shl.b32 	%r45, %r34, 7;
	.loc	1 35 30                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:35:30
	add.s32 	%r46, %r45, %r40;
	.loc	1 35 44                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:35:44
	shl.b32 	%r47, %r38, 6;
	and.b32  	%r48, %r47, -8192;
	.loc	1 35 39                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:35:39
	add.s32 	%r49, %r46, %r48;
	.loc	1 35 25                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:35:25
	cvt.s64.s32 	%rd8, %r49;
	add.s64 	%rd3, %rd5, %rd8;
	.loc	1 35 55                         // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:35:55
	shl.b32 	%r50, %r22, 7;
	and.b32  	%r51, %r50, 896;
	or.b32  	%r52, %r51, %r23;
	and.b32  	%r53, %r24, 1016;
	shr.u32 	%r54, %r51, 2;
	add.s32 	%r55, %r54, %r52;
	mov.u32 	%r56, global_smem;
	add.s32 	%r11, %r56, %r55;
	selp.u16 	%rs1, 1, 0, %p24;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b8 [ %r11 + 0 ], %rs1;
	// end inline asm
	or.b32  	%r57, %r51, 32;
	shr.u32 	%r58, %r57, 2;
	add.s32 	%r59, %r58, %r52;
	add.s32 	%r60, %r56, %r59;
	add.s32 	%r12, %r60, 32;
	selp.u16 	%rs2, 1, 0, %p23;
	// begin inline asm
	@%p3 st.shared.b8 [ %r12 + 0 ], %rs2;
	// end inline asm
	or.b32  	%r61, %r51, 64;
	shr.u32 	%r62, %r61, 2;
	add.s32 	%r63, %r62, %r52;
	add.s32 	%r64, %r56, %r63;
	add.s32 	%r13, %r64, 64;
	selp.u16 	%rs3, 1, 0, %p22;
	// begin inline asm
	@%p3 st.shared.b8 [ %r13 + 0 ], %rs3;
	// end inline asm
	or.b32  	%r65, %r51, 96;
	shr.u32 	%r66, %r65, 2;
	add.s32 	%r67, %r66, %r52;
	add.s32 	%r68, %r56, %r67;
	add.s32 	%r14, %r68, 96;
	selp.u16 	%rs4, 1, 0, %p21;
	// begin inline asm
	@%p3 st.shared.b8 [ %r14 + 0 ], %rs4;
	// end inline asm
	add.s32 	%r15, %r11, 16;
	selp.u16 	%rs5, 1, 0, %p20;
	// begin inline asm
	@%p3 st.shared.b8 [ %r15 + 0 ], %rs5;
	// end inline asm
	add.s32 	%r16, %r60, 48;
	selp.u16 	%rs6, 1, 0, %p19;
	// begin inline asm
	@%p3 st.shared.b8 [ %r16 + 0 ], %rs6;
	// end inline asm
	add.s32 	%r17, %r64, 80;
	selp.u16 	%rs7, 1, 0, %p18;
	// begin inline asm
	@%p3 st.shared.b8 [ %r17 + 0 ], %rs7;
	// end inline asm
	add.s32 	%r18, %r68, 112;
	selp.u16 	%rs8, 1, 0, %p17;
	// begin inline asm
	@%p3 st.shared.b8 [ %r18 + 0 ], %rs8;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r69, %r22, 1;
	and.b32  	%r70, %r69, 248;
	add.s32 	%r71, %r70, %r53;
	add.s32 	%r72, %r56, %r71;
	ld.shared.v2.u32 	{%r73, %r74}, [%r72];
	bfe.u32 	%r77, %r73, 0, 8;
	bfe.u32 	%r78, %r73, 16, 8;
	cvt.u16.u32 	%rs9, %r78;
	bfe.u32 	%r79, %r73, 8, 8;
	cvt.u16.u32 	%rs10, %r79;
	mov.b32 	%r80, {%rs10, %rs9};
	and.b32  	%r81, %r80, 65537;
	bfe.u32 	%r82, %r74, 0, 8;
	bfe.u32 	%r83, %r74, 16, 8;
	cvt.u16.u32 	%rs11, %r83;
	bfe.u32 	%r84, %r74, 8, 8;
	cvt.u16.u32 	%rs12, %r84;
	mov.b32 	%r85, {%rs12, %rs11};
	and.b32  	%r86, %r85, 65537;
	mov.b32 	{%rs13, %rs14}, %r81;
	cvt.u32.u16 	%r87, %rs14;
	bfe.u32 	%r88, %r73, 24, 1;
	prmt.b32 	%r89, %r87, %r88, 0x3340U;
	cvt.u32.u16 	%r90, %rs13;
	and.b32  	%r91, %r77, 1;
	prmt.b32 	%r92, %r91, %r90, 0x3340U;
	prmt.b32 	%r93, %r92, %r89, 0x5410U;
	mov.b32 	{%rs15, %rs16}, %r86;
	cvt.u32.u16 	%r94, %rs16;
	bfe.u32 	%r95, %r74, 24, 1;
	prmt.b32 	%r96, %r94, %r95, 0x3340U;
	cvt.u32.u16 	%r97, %rs15;
	and.b32  	%r98, %r82, 1;
	prmt.b32 	%r99, %r98, %r97, 0x3340U;
	prmt.b32 	%r100, %r99, %r96, 0x5410U;
	// begin inline asm
	@%p11 st.global.v2.b32 [ %rd3 + 0 ], { %r93, %r100 };
	// end inline asm
	.loc	1 35 4                          // csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/sd/csdrwcnegd4vyegytoqsbpj3ojnuiisa5l3g6trawm44sczxbpun.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 100
.b8 114
.b8 119
.b8 99
.b8 110
.b8 101
.b8 103
.b8 100
.b8 52
.b8 118
.b8 121
.b8 101
.b8 103
.b8 121
.b8 116
.b8 111
.b8 113
.b8 115
.b8 98
.b8 112
.b8 106
.b8 51
.b8 111
.b8 106
.b8 110
.b8 117
.b8 105
.b8 105
.b8 115
.b8 97
.b8 53
.b8 108
.b8 51
.b8 103
.b8 54
.b8 116
.b8 114
.b8 97
.b8 119
.b8 109
.b8 52
.b8 52
.b8 115
.b8 99
.b8 122
.b8 120
.b8 98
.b8 112
.b8 117
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 100
.b8 0
	}
	.section	.debug_macinfo	{	}
