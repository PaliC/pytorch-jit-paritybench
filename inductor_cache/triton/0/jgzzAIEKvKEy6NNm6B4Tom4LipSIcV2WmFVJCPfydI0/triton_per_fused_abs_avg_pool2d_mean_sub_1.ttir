#loc = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":19:0)
#loc1 = loc(unknown)
#loc42 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":52:26)
#loc53 = loc(callsite(#loc1 at #loc42))
module {
  tt.func public @triton_per_fused_abs_avg_pool2d_mean_sub_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<2.500000e-01> : tensor<1x64xf32> loc(#loc1)
    %cst_0 = arith.constant dense<5> : tensor<1x64xi32> loc(#loc1)
    %cst_1 = arith.constant dense<4> : tensor<1x64xi32> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<1x64xi32> loc(#loc1)
    %cst_3 = arith.constant dense<8> : tensor<1x64xi32> loc(#loc1)
    %cst_4 = arith.constant dense<2> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc3)
    %2 = arith.remsi %1, %cst_4 : tensor<1x64xi32> loc(#loc4)
    %3 = arith.divsi %1, %cst_4 : tensor<1x64xi32> loc(#loc5)
    %4 = arith.muli %2, %cst_4 : tensor<1x64xi32> loc(#loc6)
    %5 = arith.muli %3, %cst_3 : tensor<1x64xi32> loc(#loc7)
    %6 = arith.addi %4, %5 : tensor<1x64xi32> loc(#loc8)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %8 = tt.addptr %7, %6 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc9)
    %9 = tt.load %8 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc10)
    %10 = arith.addi %4, %cst_2 : tensor<1x64xi32> loc(#loc11)
    %11 = arith.addi %10, %5 : tensor<1x64xi32> loc(#loc12)
    %12 = tt.addptr %7, %11 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc13)
    %13 = tt.load %12 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc14)
    %14 = arith.addi %4, %cst_1 : tensor<1x64xi32> loc(#loc15)
    %15 = arith.addi %14, %5 : tensor<1x64xi32> loc(#loc16)
    %16 = tt.addptr %7, %15 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc17)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc18)
    %18 = arith.addi %4, %cst_0 : tensor<1x64xi32> loc(#loc19)
    %19 = arith.addi %18, %5 : tensor<1x64xi32> loc(#loc20)
    %20 = tt.addptr %7, %19 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc21)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc22)
    %22 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc23)
    %23 = tt.addptr %22, %6 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc23)
    %24 = tt.load %23 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc24)
    %25 = tt.addptr %22, %11 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc25)
    %26 = tt.load %25 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc26)
    %27 = tt.addptr %22, %15 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc27)
    %28 = tt.load %27 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc28)
    %29 = tt.addptr %22, %19 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc29)
    %30 = tt.load %29 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc30)
    %31 = arith.addf %13, %9 : tensor<1x64xf32> loc(#loc31)
    %32 = arith.addf %17, %31 : tensor<1x64xf32> loc(#loc32)
    %33 = arith.addf %21, %32 : tensor<1x64xf32> loc(#loc33)
    %34 = arith.mulf %33, %cst : tensor<1x64xf32> loc(#loc34)
    %35 = arith.addf %26, %24 : tensor<1x64xf32> loc(#loc35)
    %36 = arith.addf %28, %35 : tensor<1x64xf32> loc(#loc36)
    %37 = arith.addf %30, %36 : tensor<1x64xf32> loc(#loc37)
    %38 = arith.mulf %37, %cst : tensor<1x64xf32> loc(#loc38)
    %39 = arith.subf %34, %38 : tensor<1x64xf32> loc(#loc39)
    %40 = math.absf %39 : tensor<1x64xf32> loc(#loc40)
    %41 = "tt.reduce"(%40) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc42)), %arg7: f32 loc(callsite(#loc1 at #loc42))):
      %49 = arith.addf %arg6, %arg7 : f32 loc(#loc55)
      tt.reduce.return %49 : f32 loc(#loc52)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc52)
    %42 = tt.expand_dims %41 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc44)
    %43 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc45)
    %44 = tt.addptr %43, %1 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc45)
    tt.store %44, %34 : tensor<1x64x!tt.ptr<f32>> loc(#loc46)
    %45 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc47)
    %46 = tt.addptr %45, %1 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc47)
    tt.store %46, %38 : tensor<1x64x!tt.ptr<f32>> loc(#loc48)
    %47 = tt.addptr %arg4, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc49)
    %48 = tt.splat %47 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc49)
    tt.store %48, %42 : tensor<1x1x!tt.ptr<f32>> loc(#loc50)
    tt.return loc(#loc51)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":26:26)
#loc3 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":26:34)
#loc4 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":29:19)
#loc5 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":30:19)
#loc6 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":32:32)
#loc7 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":32:39)
#loc8 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":32:37)
#loc9 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":32:30)
#loc10 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":32:44)
#loc11 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":33:34)
#loc12 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":33:41)
#loc13 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":33:30)
#loc14 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":33:48)
#loc15 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":34:34)
#loc16 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":34:41)
#loc17 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":34:30)
#loc18 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":34:48)
#loc19 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":35:34)
#loc20 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":35:41)
#loc21 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":35:30)
#loc22 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":35:48)
#loc23 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":36:30)
#loc24 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":36:44)
#loc25 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":37:31)
#loc26 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":37:49)
#loc27 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":38:31)
#loc28 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":38:49)
#loc29 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":39:31)
#loc30 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":39:49)
#loc31 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":40:18)
#loc32 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":41:18)
#loc33 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":42:18)
#loc34 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":44:18)
#loc35 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":45:20)
#loc36 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":46:20)
#loc37 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":47:20)
#loc38 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":48:20)
#loc39 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":49:19)
#loc40 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":50:24)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc44 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":52:29)
#loc45 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":53:25)
#loc46 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":53:71)
#loc47 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":54:25)
#loc48 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":54:72)
#loc49 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":55:25)
#loc50 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":55:68)
#loc51 = loc("inductor_cache/dc/cdcsybfcqx5dap4lyhjieep6vvioxrl4dkchd2cr4r5tt35552h6.py":55:4)
#loc52 = loc(callsite(#loc41 at #loc42))
#loc54 = loc(callsite(#loc43 at #loc41))
#loc55 = loc(callsite(#loc54 at #loc42))
