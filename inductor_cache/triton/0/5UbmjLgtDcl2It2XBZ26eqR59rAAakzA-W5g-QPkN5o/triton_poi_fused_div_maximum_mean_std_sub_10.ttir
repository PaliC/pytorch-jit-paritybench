#loc = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":19:0)
module {
  tt.func public @triton_poi_fused_div_maximum_mean_std_sub_10(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":19:0), %arg4: i32 loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.00902109779> : tensor<1x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<12288> : tensor<1x16xi32> loc(#loc1)
    %cst_1 = arith.constant dense<3> : tensor<64x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<1.228700e+04> : tensor<1x16xf32> loc(#loc1)
    %cst_3 = arith.constant dense<1.228800e+04> : tensor<1x16xf32> loc(#loc1)
    %cst_4 = arith.constant dense<4096> : tensor<1x16xi32> loc(#loc1)
    %cst_5 = arith.constant dense<3> : tensor<1x16xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_6 = arith.constant dense<12> : tensor<1x16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x16xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x16xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_6 : tensor<1x16xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.muli %7, %c64_i32 : i32 loc(#loc9)
    %9 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc10)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc11)
    %11 = tt.splat %8 : i32 -> tensor<64x1xi32> loc(#loc12)
    %12 = arith.addi %11, %10 : tensor<64x1xi32> loc(#loc12)
    %13 = arith.divsi %5, %cst_5 : tensor<1x16xi32> loc(#loc13)
    %14 = arith.remsi %5, %cst_5 : tensor<1x16xi32> loc(#loc14)
    %15 = arith.muli %5, %cst_4 : tensor<1x16xi32> loc(#loc15)
    %16 = tt.broadcast %12 : tensor<64x1xi32> -> tensor<64x16xi32> loc(#loc16)
    %17 = tt.broadcast %15 : tensor<1x16xi32> -> tensor<64x16xi32> loc(#loc16)
    %18 = arith.addi %16, %17 : tensor<64x16xi32> loc(#loc16)
    %19 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x16x!tt.ptr<f32>> loc(#loc17)
    %20 = tt.addptr %19, %18 : tensor<64x16x!tt.ptr<f32>>, tensor<64x16xi32> loc(#loc17)
    %21 = tt.broadcast %6 : tensor<1x16xi1> -> tensor<64x16xi1> loc(#loc18)
    %22 = tt.load %20, %21 evictionPolicy = evict_last : tensor<64x16x!tt.ptr<f32>> loc(#loc18)
    %23 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc19)
    %24 = tt.addptr %23, %13 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc19)
    %25 = tt.load %24, %6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc20)
    %26 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc21)
    %27 = tt.addptr %26, %13 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc21)
    %28 = tt.load %27, %6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc22)
    %29 = arith.divf %25, %cst_3 : tensor<1x16xf32> loc(#loc23)
    %30 = tt.broadcast %29 : tensor<1x16xf32> -> tensor<64x16xf32> loc(#loc24)
    %31 = arith.subf %22, %30 : tensor<64x16xf32> loc(#loc24)
    %32 = arith.divf %28, %cst_2 : tensor<1x16xf32> loc(#loc25)
    %33 = tt.extern_elementwise %32 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x16xf32>) -> tensor<1x16xf32> loc(#loc26)
    %34 = arith.cmpf ogt, %33, %cst : tensor<1x16xf32> loc(#loc40)
    %35 = arith.cmpf une, %33, %33 : tensor<1x16xf32> loc(#loc41)
    %36 = arith.ori %34, %35 : tensor<1x16xi1> loc(#loc42)
    %37 = arith.select %36, %33, %cst : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc43)
    %38 = tt.broadcast %37 : tensor<1x16xf32> -> tensor<64x16xf32> loc(#loc32)
    %39 = arith.divf %31, %38 : tensor<64x16xf32> loc(#loc32)
    %40 = arith.muli %12, %cst_1 : tensor<64x1xi32> loc(#loc33)
    %41 = tt.broadcast %14 : tensor<1x16xi32> -> tensor<64x16xi32> loc(#loc34)
    %42 = tt.broadcast %40 : tensor<64x1xi32> -> tensor<64x16xi32> loc(#loc34)
    %43 = arith.addi %41, %42 : tensor<64x16xi32> loc(#loc34)
    %44 = arith.muli %13, %cst_0 : tensor<1x16xi32> loc(#loc35)
    %45 = tt.broadcast %44 : tensor<1x16xi32> -> tensor<64x16xi32> loc(#loc36)
    %46 = arith.addi %43, %45 : tensor<64x16xi32> loc(#loc36)
    %47 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<64x16x!tt.ptr<f32>> loc(#loc37)
    %48 = tt.addptr %47, %46 : tensor<64x16x!tt.ptr<f32>>, tensor<64x16xi32> loc(#loc37)
    tt.store %48, %39, %21 : tensor<64x16x!tt.ptr<f32>> loc(#loc38)
    tt.return loc(#loc39)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":22:28)
#loc3 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":22:33)
#loc4 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":23:36)
#loc5 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":23:44)
#loc6 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":23:23)
#loc7 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":24:21)
#loc8 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":25:28)
#loc9 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":25:33)
#loc10 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":26:36)
#loc11 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":26:44)
#loc12 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":26:23)
#loc13 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":30:19)
#loc14 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":31:19)
#loc15 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":32:40)
#loc16 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":32:35)
#loc17 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":32:30)
#loc18 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":32:45)
#loc19 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":33:30)
#loc20 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":33:35)
#loc21 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":34:30)
#loc22 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":34:35)
#loc23 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":36:18)
#loc24 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":37:18)
#loc25 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":39:18)
#loc26 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":40:26)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc28 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":42:41)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc32 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":43:19)
#loc33 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":44:32)
#loc34 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":44:30)
#loc35 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":44:43)
#loc36 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":44:37)
#loc37 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":44:25)
#loc38 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":44:55)
#loc39 = loc("inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py":44:4)
#loc40 = loc(callsite(#loc27 at #loc28))
#loc41 = loc(callsite(#loc29 at #loc28))
#loc42 = loc(callsite(#loc30 at #loc28))
#loc43 = loc(callsite(#loc31 at #loc28))
