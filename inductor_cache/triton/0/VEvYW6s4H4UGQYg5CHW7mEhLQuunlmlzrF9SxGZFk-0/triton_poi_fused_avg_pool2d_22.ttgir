#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_avg_pool2d_22(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-2> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<9> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<8> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<7> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<-7> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<-8> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<16> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<-9> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<8> : tensor<128xi64, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<0> : tensor<128xi64, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<-1> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<2> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<4> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<192> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_14 : tensor<128xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_13 : tensor<128xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_13 : tensor<128xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %4, %cst_13 : tensor<128xi32, #blocked> loc(#loc9)
    %9 = arith.muli %7, %cst_12 : tensor<128xi32, #blocked> loc(#loc10)
    %10 = arith.addi %9, %cst_11 : tensor<128xi32, #blocked> loc(#loc11)
    %11 = arith.extsi %10 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc12)
    %12 = arith.cmpi sge, %11, %cst_10 : tensor<128xi64, #blocked> loc(#loc12)
    %13 = arith.cmpi slt, %11, %cst_9 : tensor<128xi64, #blocked> loc(#loc13)
    %14 = arith.andi %12, %13 : tensor<128xi1, #blocked> loc(#loc14)
    %15 = arith.muli %8, %cst_12 : tensor<128xi32, #blocked> loc(#loc15)
    %16 = arith.addi %15, %cst_11 : tensor<128xi32, #blocked> loc(#loc16)
    %17 = arith.extsi %16 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc17)
    %18 = arith.cmpi sge, %17, %cst_10 : tensor<128xi64, #blocked> loc(#loc17)
    %19 = arith.cmpi slt, %17, %cst_9 : tensor<128xi64, #blocked> loc(#loc18)
    %20 = arith.andi %18, %19 : tensor<128xi1, #blocked> loc(#loc19)
    %21 = arith.andi %14, %20 : tensor<128xi1, #blocked> loc(#loc20)
    %22 = arith.addi %15, %cst_8 : tensor<128xi32, #blocked> loc(#loc21)
    %23 = arith.muli %6, %cst_7 : tensor<128xi32, #blocked> loc(#loc22)
    %24 = arith.addi %22, %23 : tensor<128xi32, #blocked> loc(#loc23)
    %25 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc24)
    %26 = tt.addptr %25, %24 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc24)
    %27 = arith.andi %21, %5 : tensor<128xi1, #blocked> loc(#loc25)
    %28 = tt.load %26, %27, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc26)
    %29 = arith.extsi %15 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc27)
    %30 = arith.cmpi sge, %29, %cst_10 : tensor<128xi64, #blocked> loc(#loc27)
    %31 = arith.cmpi slt, %29, %cst_9 : tensor<128xi64, #blocked> loc(#loc28)
    %32 = arith.andi %30, %31 : tensor<128xi1, #blocked> loc(#loc29)
    %33 = arith.andi %14, %32 : tensor<128xi1, #blocked> loc(#loc30)
    %34 = arith.addi %15, %cst_5 : tensor<128xi32, #blocked> loc(#loc31)
    %35 = arith.addi %34, %23 : tensor<128xi32, #blocked> loc(#loc32)
    %36 = tt.addptr %25, %35 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc33)
    %37 = arith.andi %33, %5 : tensor<128xi1, #blocked> loc(#loc34)
    %38 = tt.load %36, %37, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc35)
    %39 = arith.addf %38, %28 : tensor<128xf32, #blocked> loc(#loc36)
    %40 = arith.addi %15, %cst_4 : tensor<128xi32, #blocked> loc(#loc37)
    %41 = arith.extsi %40 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc38)
    %42 = arith.cmpi sge, %41, %cst_10 : tensor<128xi64, #blocked> loc(#loc38)
    %43 = arith.cmpi slt, %41, %cst_9 : tensor<128xi64, #blocked> loc(#loc39)
    %44 = arith.andi %42, %43 : tensor<128xi1, #blocked> loc(#loc40)
    %45 = arith.andi %14, %44 : tensor<128xi1, #blocked> loc(#loc41)
    %46 = arith.addi %15, %cst_3 : tensor<128xi32, #blocked> loc(#loc42)
    %47 = arith.addi %46, %23 : tensor<128xi32, #blocked> loc(#loc43)
    %48 = tt.addptr %25, %47 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc44)
    %49 = arith.andi %45, %5 : tensor<128xi1, #blocked> loc(#loc45)
    %50 = tt.load %48, %49, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc46)
    %51 = arith.addf %50, %39 : tensor<128xf32, #blocked> loc(#loc47)
    %52 = arith.extsi %9 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc48)
    %53 = arith.cmpi sge, %52, %cst_10 : tensor<128xi64, #blocked> loc(#loc48)
    %54 = arith.cmpi slt, %52, %cst_9 : tensor<128xi64, #blocked> loc(#loc49)
    %55 = arith.andi %53, %54 : tensor<128xi1, #blocked> loc(#loc50)
    %56 = arith.andi %55, %20 : tensor<128xi1, #blocked> loc(#loc51)
    %57 = arith.addi %16, %23 : tensor<128xi32, #blocked> loc(#loc52)
    %58 = tt.addptr %25, %57 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc53)
    %59 = arith.andi %56, %5 : tensor<128xi1, #blocked> loc(#loc54)
    %60 = tt.load %58, %59, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc55)
    %61 = arith.addf %60, %51 : tensor<128xf32, #blocked> loc(#loc56)
    %62 = arith.andi %55, %32 : tensor<128xi1, #blocked> loc(#loc57)
    %63 = arith.addi %15, %23 : tensor<128xi32, #blocked> loc(#loc58)
    %64 = tt.addptr %25, %63 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc59)
    %65 = arith.andi %62, %5 : tensor<128xi1, #blocked> loc(#loc60)
    %66 = tt.load %64, %65, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc61)
    %67 = arith.addf %66, %61 : tensor<128xf32, #blocked> loc(#loc62)
    %68 = arith.andi %55, %44 : tensor<128xi1, #blocked> loc(#loc63)
    %69 = arith.addi %40, %23 : tensor<128xi32, #blocked> loc(#loc64)
    %70 = tt.addptr %25, %69 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc65)
    %71 = arith.andi %68, %5 : tensor<128xi1, #blocked> loc(#loc66)
    %72 = tt.load %70, %71, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc67)
    %73 = arith.addf %72, %67 : tensor<128xf32, #blocked> loc(#loc68)
    %74 = arith.addi %9, %cst_4 : tensor<128xi32, #blocked> loc(#loc69)
    %75 = arith.extsi %74 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc70)
    %76 = arith.cmpi sge, %75, %cst_10 : tensor<128xi64, #blocked> loc(#loc70)
    %77 = arith.cmpi slt, %75, %cst_9 : tensor<128xi64, #blocked> loc(#loc71)
    %78 = arith.andi %76, %77 : tensor<128xi1, #blocked> loc(#loc72)
    %79 = arith.andi %78, %20 : tensor<128xi1, #blocked> loc(#loc73)
    %80 = arith.addi %15, %cst_2 : tensor<128xi32, #blocked> loc(#loc74)
    %81 = arith.addi %80, %23 : tensor<128xi32, #blocked> loc(#loc75)
    %82 = tt.addptr %25, %81 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc76)
    %83 = arith.andi %79, %5 : tensor<128xi1, #blocked> loc(#loc77)
    %84 = tt.load %82, %83, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc78)
    %85 = arith.addf %84, %73 : tensor<128xf32, #blocked> loc(#loc79)
    %86 = arith.andi %78, %32 : tensor<128xi1, #blocked> loc(#loc80)
    %87 = arith.addi %15, %cst_1 : tensor<128xi32, #blocked> loc(#loc81)
    %88 = arith.addi %87, %23 : tensor<128xi32, #blocked> loc(#loc82)
    %89 = tt.addptr %25, %88 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc83)
    %90 = arith.andi %86, %5 : tensor<128xi1, #blocked> loc(#loc84)
    %91 = tt.load %89, %90, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc85)
    %92 = arith.addf %91, %85 : tensor<128xf32, #blocked> loc(#loc86)
    %93 = arith.andi %78, %44 : tensor<128xi1, #blocked> loc(#loc87)
    %94 = arith.addi %15, %cst_0 : tensor<128xi32, #blocked> loc(#loc88)
    %95 = arith.addi %94, %23 : tensor<128xi32, #blocked> loc(#loc89)
    %96 = tt.addptr %25, %95 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc90)
    %97 = arith.andi %93, %5 : tensor<128xi1, #blocked> loc(#loc91)
    %98 = tt.load %96, %97, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc92)
    %99 = arith.addf %98, %92 : tensor<128xf32, #blocked> loc(#loc93)
    %100 = arith.muli %8, %cst : tensor<128xi32, #blocked> loc(#loc94)
    %101 = arith.addi %100, %cst_4 : tensor<128xi32, #blocked> loc(#loc95)
    %102 = arith.muli %7, %cst : tensor<128xi32, #blocked> loc(#loc96)
    %103 = arith.addi %101, %102 : tensor<128xi32, #blocked> loc(#loc97)
    %104 = arith.addi %15, %cst_12 : tensor<128xi32, #blocked> loc(#loc98)
    %105 = arith.cmpi sge, %104, %cst_0 : tensor<128xi32, #blocked> loc(#loc99)
    %106 = arith.extui %105 : tensor<128xi1, #blocked> to tensor<128xi32, #blocked> loc(#loc100)
    %107 = arith.muli %106, %cst_0 : tensor<128xi32, #blocked> loc(#loc100)
    %108 = arith.cmpi slt, %104, %cst_0 : tensor<128xi32, #blocked> loc(#loc101)
    %109 = arith.extui %108 : tensor<128xi1, #blocked> to tensor<128xi32, #blocked> loc(#loc102)
    %110 = arith.muli %104, %109 : tensor<128xi32, #blocked> loc(#loc102)
    %111 = arith.addi %107, %110 : tensor<128xi32, #blocked> loc(#loc103)
    %112 = arith.addi %9, %cst_12 : tensor<128xi32, #blocked> loc(#loc104)
    %113 = arith.cmpi sge, %112, %cst_0 : tensor<128xi32, #blocked> loc(#loc105)
    %114 = arith.extui %113 : tensor<128xi1, #blocked> to tensor<128xi32, #blocked> loc(#loc106)
    %115 = arith.muli %114, %cst_0 : tensor<128xi32, #blocked> loc(#loc106)
    %116 = arith.cmpi slt, %112, %cst_0 : tensor<128xi32, #blocked> loc(#loc107)
    %117 = arith.extui %116 : tensor<128xi1, #blocked> to tensor<128xi32, #blocked> loc(#loc108)
    %118 = arith.muli %112, %117 : tensor<128xi32, #blocked> loc(#loc108)
    %119 = arith.addi %115, %118 : tensor<128xi32, #blocked> loc(#loc109)
    %120 = arith.muli %111, %119 : tensor<128xi32, #blocked> loc(#loc110)
    %121 = arith.addi %103, %120 : tensor<128xi32, #blocked> loc(#loc111)
    %122 = arith.muli %100, %119 : tensor<128xi32, #blocked> loc(#loc112)
    %123 = arith.addi %121, %122 : tensor<128xi32, #blocked> loc(#loc113)
    %124 = arith.muli %102, %111 : tensor<128xi32, #blocked> loc(#loc114)
    %125 = arith.addi %123, %124 : tensor<128xi32, #blocked> loc(#loc115)
    %126 = arith.muli %8, %cst_13 : tensor<128xi32, #blocked> loc(#loc116)
    %127 = arith.muli %126, %7 : tensor<128xi32, #blocked> loc(#loc117)
    %128 = arith.addi %125, %127 : tensor<128xi32, #blocked> loc(#loc118)
    %129 = arith.addi %128, %111 : tensor<128xi32, #blocked> loc(#loc119)
    %130 = arith.addi %129, %119 : tensor<128xi32, #blocked> loc(#loc120)
    %131 = arith.sitofp %130 : tensor<128xi32, #blocked> to tensor<128xf32, #blocked> loc(#loc121)
    %132 = arith.divf %99, %131 : tensor<128xf32, #blocked> loc(#loc121)
    %133 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc122)
    %134 = tt.addptr %133, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc122)
    tt.store %134, %132, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc123)
    tt.return loc(#loc124)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":21:28)
#loc3 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":21:33)
#loc4 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":22:36)
#loc5 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":22:23)
#loc6 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":23:21)
#loc7 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":24:21)
#loc8 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":24:26)
#loc9 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":25:19)
#loc10 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":28:20)
#loc11 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":28:18)
#loc12 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":30:19)
#loc13 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":32:18)
#loc14 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":33:18)
#loc15 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":34:20)
#loc16 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":34:18)
#loc17 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":35:19)
#loc18 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":36:18)
#loc19 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":37:18)
#loc20 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":38:19)
#loc21 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":39:38)
#loc22 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":39:48)
#loc23 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":39:45)
#loc24 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":39:31)
#loc25 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":39:61)
#loc26 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":39:53)
#loc27 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":41:21)
#loc28 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":42:20)
#loc29 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":43:20)
#loc30 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":44:19)
#loc31 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":45:38)
#loc32 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":45:45)
#loc33 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":45:31)
#loc34 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":45:61)
#loc35 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":45:53)
#loc36 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":46:20)
#loc37 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":47:16)
#loc38 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":48:21)
#loc39 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":49:20)
#loc40 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":50:20)
#loc41 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":51:19)
#loc42 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":52:38)
#loc43 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":52:45)
#loc44 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":52:31)
#loc45 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":52:61)
#loc46 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":52:53)
#loc47 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":53:20)
#loc48 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":55:21)
#loc49 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":56:20)
#loc50 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":57:20)
#loc51 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":58:20)
#loc52 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":59:45)
#loc53 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":59:31)
#loc54 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":59:61)
#loc55 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":59:53)
#loc56 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":60:20)
#loc57 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":61:20)
#loc58 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":62:38)
#loc59 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":62:31)
#loc60 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":62:54)
#loc61 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":62:46)
#loc62 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":63:20)
#loc63 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":64:20)
#loc64 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":65:42)
#loc65 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":65:31)
#loc66 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":65:58)
#loc67 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":65:50)
#loc68 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":66:20)
#loc69 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":67:16)
#loc70 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":68:21)
#loc71 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":69:20)
#loc72 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":70:20)
#loc73 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":71:20)
#loc74 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":72:35)
#loc75 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":72:42)
#loc76 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":72:31)
#loc77 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":72:58)
#loc78 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":72:50)
#loc79 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":73:20)
#loc80 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":74:20)
#loc81 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":75:35)
#loc82 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":75:42)
#loc83 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":75:31)
#loc84 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":75:58)
#loc85 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":75:50)
#loc86 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":76:20)
#loc87 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":77:20)
#loc88 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":78:35)
#loc89 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":78:42)
#loc90 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":78:31)
#loc91 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":78:58)
#loc92 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":78:50)
#loc93 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":79:20)
#loc94 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:22)
#loc95 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:17)
#loc96 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:34)
#loc97 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:29)
#loc98 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:60)
#loc99 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:56)
#loc100 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:48)
#loc101 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:97)
#loc102 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:83)
#loc103 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:69)
#loc104 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:122)
#loc105 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:118)
#loc106 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:110)
#loc107 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:159)
#loc108 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:145)
#loc109 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:131)
#loc110 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:103)
#loc111 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:40)
#loc112 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:176)
#loc113 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:167)
#loc114 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:250)
#loc115 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:241)
#loc116 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:316)
#loc117 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:319)
#loc118 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:314)
#loc119 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:325)
#loc120 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":80:389)
#loc121 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":81:20)
#loc122 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":82:25)
#loc123 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":82:37)
#loc124 = loc("inductor_cache/ro/crowxzfbbjuiyhhm3vzkbw7s3kg6wrcocm3btqcijs44u25msy5u.py":82:4)
