; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_convolution_max_pool2d_with_indices_relu_24(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %7 = shl i32 %6, 6, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 2, !dbg !12
  %11 = and i32 %9, 62, !dbg !12
  %12 = lshr i32 %8, 1, !dbg !12
  %13 = and i32 %12, 63, !dbg !12
  %14 = or disjoint i32 %7, %11, !dbg !13
  %15 = or disjoint i32 %7, %13, !dbg !13
  %16 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !14
  %17 = shl i32 %16, 2, !dbg !15
  %18 = lshr i32 %8, 5, !dbg !16
  %19 = and i32 %18, 3, !dbg !16
  %20 = or disjoint i32 %17, %19, !dbg !17
  %21 = or disjoint i32 %17, %10, !dbg !17
  %22 = icmp slt i32 %20, 4, !dbg !18
  %23 = icmp slt i32 %21, 4, !dbg !18
  %.frozen = freeze i32 %14, !dbg !19
  %24 = sdiv i32 %.frozen, 512, !dbg !19
  %25 = mul i32 %24, 512, !dbg !20
  %.decomposed = sub i32 %.frozen, %25, !dbg !20
  %26 = shl i32 %20, 9, !dbg !21
  %27 = add i32 %26, %.decomposed, !dbg !22
  %28 = shl i32 %24, 11, !dbg !23
  %29 = add i32 %27, %28, !dbg !24
  %30 = sext i32 %29 to i64, !dbg !25
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !25
  %32 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %31, i1 %22) #2, !dbg !26
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !26
  %34 = extractvalue { i32, i32 } %32, 1, !dbg !26
  %35 = bitcast i32 %33 to float, !dbg !26
  %36 = bitcast i32 %34 to float, !dbg !26
  %37 = sext i32 %.decomposed to i64, !dbg !27
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !27
  %39 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %38, i1 true) #2, !dbg !28
  %40 = extractvalue { i32, i32 } %39, 0, !dbg !28
  %41 = extractvalue { i32, i32 } %39, 1, !dbg !28
  %42 = bitcast i32 %40 to float, !dbg !28
  %43 = bitcast i32 %41 to float, !dbg !28
  %44 = fadd float %35, %42, !dbg !29
  %45 = fadd float %36, %43, !dbg !29
  %46 = fcmp olt float %44, 0.000000e+00, !dbg !30
  %47 = fcmp olt float %45, 0.000000e+00, !dbg !30
  %48 = select i1 %46, float 0.000000e+00, float %44, !dbg !34
  %49 = select i1 %47, float 0.000000e+00, float %45, !dbg !34
  %50 = shl i32 %15, 2, !dbg !35
  %51 = add i32 %21, %50, !dbg !36
  %52 = sext i32 %51 to i64, !dbg !37
  %53 = getelementptr float, ptr addrspace(1) %2, i64 %52, !dbg !37
  %54 = shl i32 %8, 3, !dbg !38
  %55 = and i32 %54, 248, !dbg !38
  %56 = or disjoint i32 %55, %19, !dbg !38
  %57 = and i32 %9, 254, !dbg !38
  %58 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %55, !dbg !38
  %59 = getelementptr inbounds float, ptr addrspace(3) %58, i32 %56, !dbg !38
  %60 = bitcast float %48 to <1 x i32>, !dbg !38
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %59, <1 x i32> %60, i1 true) #2, !dbg !38
  %61 = or disjoint i32 %56, 4, !dbg !38
  %62 = lshr i32 %61, 2, !dbg !38
  %63 = getelementptr float, ptr addrspace(3) @global_smem, i32 %62, !dbg !38
  %64 = getelementptr float, ptr addrspace(3) %63, i32 %61, !dbg !38
  %65 = bitcast float %49 to <1 x i32>, !dbg !38
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %64, <1 x i32> %65, i1 true) #2, !dbg !38
  tail call void @llvm.nvvm.barrier0(), !dbg !38
  %66 = lshr i32 %57, 2, !dbg !38
  %67 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %66, !dbg !38
  %68 = getelementptr inbounds float, ptr addrspace(3) %67, i32 %57, !dbg !38
  %69 = load i32, ptr addrspace(3) %68, align 4, !dbg !38
  %70 = or disjoint i32 %57, 1, !dbg !38
  %71 = getelementptr inbounds float, ptr addrspace(3) %67, i32 %70, !dbg !38
  %72 = load i32, ptr addrspace(3) %71, align 4, !dbg !38
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %69, i32 %72, ptr addrspace(1) %53, i1 %23) #2, !dbg !38
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cskyc4lei3g5236jvkm45zvln6hzuqoepoqxkuuc6yaclnq5j7uw.py", directory: "inductor_cache/sk")
!4 = !{ptr @triton_poi_fused_convolution_max_pool2d_with_indices_relu_24, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_max_pool2d_with_indices_relu_24, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_max_pool2d_with_indices_relu_24", linkageName: "triton_poi_fused_convolution_max_pool2d_with_indices_relu_24", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 28, scope: !7)
!15 = !DILocation(line: 25, column: 33, scope: !7)
!16 = !DILocation(line: 26, column: 44, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 30, column: 19, scope: !7)
!20 = !DILocation(line: 29, column: 19, scope: !7)
!21 = !DILocation(line: 32, column: 39, scope: !7)
!22 = !DILocation(line: 32, column: 35, scope: !7)
!23 = !DILocation(line: 32, column: 49, scope: !7)
!24 = !DILocation(line: 32, column: 44, scope: !7)
!25 = !DILocation(line: 32, column: 30, scope: !7)
!26 = !DILocation(line: 32, column: 54, scope: !7)
!27 = !DILocation(line: 33, column: 30, scope: !7)
!28 = !DILocation(line: 33, column: 35, scope: !7)
!29 = !DILocation(line: 34, column: 18, scope: !7)
!30 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !33)
!31 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!32 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!33 = !DILocation(line: 36, column: 40, scope: !7)
!34 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !33)
!35 = !DILocation(line: 37, column: 32, scope: !7)
!36 = !DILocation(line: 37, column: 30, scope: !7)
!37 = !DILocation(line: 37, column: 25, scope: !7)
!38 = !DILocation(line: 37, column: 43, scope: !7)
!39 = !DILocation(line: 37, column: 4, scope: !7)
