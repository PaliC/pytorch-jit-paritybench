#loc = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_add_constant_pad_nd_24(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4096> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<512> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<-1152> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<8> : tensor<256xi64> loc(#loc1)
    %cst_6 = arith.constant dense<0> : tensor<256xi64> loc(#loc1)
    %cst_7 = arith.constant dense<-2> : tensor<256xi32> loc(#loc1)
    %cst_8 = arith.constant dense<9216> : tensor<256xi32> loc(#loc1)
    %cst_9 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_10 = arith.constant dense<12> : tensor<256xi32> loc(#loc1)
    %cst_11 = arith.constant dense<768> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.divsi %4, %cst_11 : tensor<256xi32> loc(#loc6)
    %6 = arith.remsi %5, %cst_10 : tensor<256xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_9 : tensor<256xi32> loc(#loc8)
    %8 = arith.remsi %7, %cst_10 : tensor<256xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_8 : tensor<256xi32> loc(#loc10)
    %10 = arith.remsi %4, %cst_11 : tensor<256xi32> loc(#loc11)
    %11 = arith.remsi %4, %cst_9 : tensor<256xi32> loc(#loc12)
    %12 = arith.addi %6, %cst_7 : tensor<256xi32> loc(#loc13)
    %13 = arith.extsi %12 : tensor<256xi32> to tensor<256xi64> loc(#loc14)
    %14 = arith.cmpi sge, %13, %cst_6 : tensor<256xi64> loc(#loc14)
    %15 = arith.cmpi slt, %13, %cst_5 : tensor<256xi64> loc(#loc15)
    %16 = arith.addi %8, %cst_7 : tensor<256xi32> loc(#loc16)
    %17 = arith.extsi %16 : tensor<256xi32> to tensor<256xi64> loc(#loc17)
    %18 = arith.cmpi sge, %17, %cst_6 : tensor<256xi64> loc(#loc17)
    %19 = arith.cmpi slt, %17, %cst_5 : tensor<256xi64> loc(#loc18)
    %20 = arith.andi %14, %15 : tensor<256xi1> loc(#loc19)
    %21 = arith.andi %20, %18 : tensor<256xi1> loc(#loc20)
    %22 = arith.andi %21, %19 : tensor<256xi1> loc(#loc21)
    %23 = arith.addi %10, %cst_4 : tensor<256xi32> loc(#loc22)
    %24 = arith.muli %6, %cst_3 : tensor<256xi32> loc(#loc23)
    %25 = arith.addi %23, %24 : tensor<256xi32> loc(#loc24)
    %26 = arith.muli %9, %cst_2 : tensor<256xi32> loc(#loc25)
    %27 = arith.addi %25, %26 : tensor<256xi32> loc(#loc26)
    %28 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc27)
    %29 = tt.addptr %28, %27 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc27)
    %30 = tt.load %29, %22, %cst_1 : tensor<256x!tt.ptr<f32>> loc(#loc28)
    %31 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc29)
    %32 = tt.addptr %31, %27 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc29)
    %33 = tt.load %32, %22, %cst_1 : tensor<256x!tt.ptr<f32>> loc(#loc30)
    %34 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc31)
    %35 = tt.addptr %34, %11 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc31)
    %36 = tt.load %35, %22, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc32)
    %37 = arith.subf %33, %36 : tensor<256xf32> loc(#loc33)
    %38 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc34)
    %39 = tt.addptr %38, %11 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc34)
    %40 = tt.load %39, %22, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc35)
    %41 = arith.addf %40, %cst_0 : tensor<256xf32> loc(#loc36)
    %42 = tt.extern_elementwise %41 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc37)
    %43 = arith.divf %cst, %42 : tensor<256xf32> loc(#loc38)
    %44 = arith.mulf %37, %43 : tensor<256xf32> loc(#loc39)
    %45 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc40)
    %46 = tt.addptr %45, %11 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc40)
    %47 = tt.load %46, %22, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc41)
    %48 = arith.mulf %44, %47 : tensor<256xf32> loc(#loc42)
    %49 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc43)
    %50 = tt.addptr %49, %11 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc43)
    %51 = tt.load %50, %22, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc44)
    %52 = arith.addf %48, %51 : tensor<256xf32> loc(#loc45)
    %53 = arith.addf %30, %52 : tensor<256xf32> loc(#loc46)
    %54 = arith.select %22, %53, %cst_1 : tensor<256xi1>, tensor<256xf32> loc(#loc47)
    %55 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc48)
    %56 = tt.addptr %55, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc48)
    tt.store %56, %54 : tensor<256x!tt.ptr<f32>> loc(#loc49)
    tt.return loc(#loc50)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":21:28)
#loc3 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":21:33)
#loc4 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":22:36)
#loc5 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":22:23)
#loc6 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":24:21)
#loc7 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":24:28)
#loc8 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":25:21)
#loc9 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":25:27)
#loc10 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":26:19)
#loc11 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":27:19)
#loc12 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":28:19)
#loc13 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":30:18)
#loc14 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":32:19)
#loc15 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":34:18)
#loc16 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":35:18)
#loc17 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":36:19)
#loc18 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":37:18)
#loc19 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":38:18)
#loc20 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":39:18)
#loc21 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":40:19)
#loc22 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":41:41)
#loc23 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":41:50)
#loc24 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":41:46)
#loc25 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":41:60)
#loc26 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":41:55)
#loc27 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":41:31)
#loc28 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":41:65)
#loc29 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":42:31)
#loc30 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":42:65)
#loc31 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":43:31)
#loc32 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":43:36)
#loc33 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":44:20)
#loc34 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":45:31)
#loc35 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":45:36)
#loc36 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":47:20)
#loc37 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":48:27)
#loc38 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":50:20)
#loc39 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":53:20)
#loc40 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":54:31)
#loc41 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":54:36)
#loc42 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":55:20)
#loc43 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":56:31)
#loc44 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":56:36)
#loc45 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":57:20)
#loc46 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":58:20)
#loc47 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":60:35)
#loc48 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":61:25)
#loc49 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":61:37)
#loc50 = loc("inductor_cache/57/c575xyjf5plyzr77axqac7cmeyokw3jmyfablo6nldcw6audfqr5.py":61:4)
