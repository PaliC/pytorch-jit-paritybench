; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_19(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 9, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 510, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = sdiv i32 %12, 4096, !dbg !14
  %14 = srem i32 %13, 32, !dbg !15
  %15 = sext i32 %12 to i64, !dbg !16
  %16 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !16
  %17 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %16, i1 true) #1, !dbg !17
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !17
  %19 = extractvalue { i32, i32 } %17, 1, !dbg !17
  %20 = sext i32 %14 to i64, !dbg !18
  %21 = getelementptr float, ptr addrspace(1) %2, i64 %20, !dbg !18
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !19
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !19
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !20
  %25 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %24, i1 true) #1, !dbg !21
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !21
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !21
  %28 = bitcast i32 %26 to float, !dbg !21
  %29 = bitcast i32 %27 to float, !dbg !21
  %30 = getelementptr float, ptr addrspace(1) %3, i64 %20, !dbg !22
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #1, !dbg !23
  %32 = bitcast i32 %31 to float, !dbg !23
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #1, !dbg !23
  %34 = bitcast i32 %33 to float, !dbg !23
  %35 = fadd float %28, %32, !dbg !24
  %36 = fadd float %29, %34, !dbg !24
  %37 = getelementptr i1, ptr addrspace(1) %4, i64 %15, !dbg !25
  %38 = insertelement <2 x i32> poison, i32 %18, i64 0, !dbg !17
  %39 = insertelement <2 x i32> %38, i32 %19, i64 1, !dbg !17
  %40 = bitcast <2 x i32> %39 to <2 x float>, !dbg !17
  %41 = insertelement <2 x i32> poison, i32 %22, i64 0, !dbg !19
  %42 = insertelement <2 x i32> %41, i32 %23, i64 1, !dbg !19
  %43 = bitcast <2 x i32> %42 to <2 x float>, !dbg !19
  %44 = fadd <2 x float> %40, %43, !dbg !26
  %45 = fcmp ogt <2 x float> %44, zeroinitializer, !dbg !27
  %46 = fmul <2 x float> %44, splat (float 0x3F847AE140000000), !dbg !28
  %47 = select <2 x i1> %45, <2 x float> %44, <2 x float> %46, !dbg !29
  %48 = extractelement <2 x float> %47, i64 0, !dbg !30
  %49 = fadd float %48, %35, !dbg !30
  %50 = extractelement <2 x float> %47, i64 1, !dbg !30
  %51 = fadd float %50, %36, !dbg !30
  %52 = fcmp ogt <2 x float> %47, zeroinitializer, !dbg !31
  %53 = bitcast float %49 to i32, !dbg !32
  %54 = bitcast float %51 to i32, !dbg !32
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %53, i32 %54, ptr addrspace(1) %24, i1 true) #1, !dbg !32
  %55 = zext <2 x i1> %52 to <2 x i8>, !dbg !33
  %56 = bitcast <2 x i8> %55 to i16, !dbg !33
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %56, ptr addrspace(1) %37, i1 true) #1, !dbg !33
  ret void, !dbg !34
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbe5hra2px5ql6qz7cyh3arjxvqlj5nbmyvrhzh6qszj57bjapc4.py", directory: "inductor_cache/be")
!4 = !{ptr @triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_19, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_19, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_19", linkageName: "triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_19", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 29, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 34, scope: !7)
!21 = !DILocation(line: 28, column: 39, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 35, scope: !7)
!24 = !DILocation(line: 36, column: 19, scope: !7)
!25 = !DILocation(line: 40, column: 25, scope: !7)
!26 = !DILocation(line: 30, column: 18, scope: !7)
!27 = !DILocation(line: 32, column: 18, scope: !7)
!28 = !DILocation(line: 34, column: 18, scope: !7)
!29 = !DILocation(line: 35, column: 32, scope: !7)
!30 = !DILocation(line: 37, column: 19, scope: !7)
!31 = !DILocation(line: 38, column: 19, scope: !7)
!32 = !DILocation(line: 39, column: 40, scope: !7)
!33 = !DILocation(line: 40, column: 37, scope: !7)
!34 = !DILocation(line: 40, column: 4, scope: !7)
