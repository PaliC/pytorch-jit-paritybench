; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_copy_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 5, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 2, !dbg !12
  %9 = and i32 %8, 31, !dbg !12
  %10 = and i32 %7, 3, !dbg !12
  %11 = and i32 %7, 31, !dbg !12
  %12 = or disjoint i32 %6, %9, !dbg !13
  %13 = or disjoint i32 %6, %11, !dbg !13
  %14 = icmp slt i32 %12, 32, !dbg !14
  %15 = icmp slt i32 %13, 32, !dbg !14
  %16 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !15
  %17 = shl i32 %16, 2, !dbg !16
  %.lobit23 = lshr i32 %7, 5, !dbg !17
  %18 = and i32 %.lobit23, 3, !dbg !17
  %19 = or disjoint i32 %17, %10, !dbg !18
  %20 = or disjoint i32 %17, %18, !dbg !18
  %21 = icmp slt i32 %19, 4, !dbg !19
  %22 = icmp slt i32 %20, 4, !dbg !19
  %.frozen = freeze i32 %12, !dbg !20
  %23 = sdiv i32 %.frozen, 8, !dbg !20
  %24 = mul i32 %23, 8, !dbg !21
  %.decomposed = sub i32 %.frozen, %24, !dbg !21
  %.frozen4 = freeze i32 %13, !dbg !20
  %25 = sdiv i32 %.frozen4, 8, !dbg !20
  %26 = mul i32 %25, 8, !dbg !21
  %.decomposed5 = sub i32 %.frozen4, %26, !dbg !21
  %27 = icmp sgt i32 %.decomposed, 5, !dbg !22
  %28 = add nsw i32 %.decomposed, -2, !dbg !23
  %29 = icmp ult i32 %28, 4, !dbg !23
  %30 = shl nsw i32 %.decomposed, 2, !dbg !24
  %31 = shl i32 %23, 4, !dbg !25
  %32 = add i32 %30, %19, !dbg !26
  %33 = add i32 %32, -8, !dbg !27
  %34 = add i32 %33, %31, !dbg !28
  %35 = sext i32 %34 to i64, !dbg !29
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !29
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 false, i32 0, i1 false) #2, !dbg !30
  %38 = add i32 %32, -24, !dbg !31
  %39 = add i32 %38, %31, !dbg !32
  %40 = sext i32 %39 to i64, !dbg !33
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !33
  %42 = and i1 %27, %21, !dbg !34
  %43 = and i1 %14, %42, !dbg !35
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %43, i32 0, i1 %43) #2, !dbg !36
  %45 = icmp slt i32 %.decomposed, 2, !dbg !37
  %46 = add nsw i32 %.decomposed, 2, !dbg !38
  %47 = icmp ult i32 %46, 4, !dbg !38
  %48 = add i32 %32, 8, !dbg !39
  %49 = add i32 %48, %31, !dbg !40
  %50 = sext i32 %49 to i64, !dbg !41
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !41
  %52 = and i1 %21, %47, !dbg !42
  %53 = and i1 %14, %52, !dbg !43
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %53, i32 0, i1 %53) #2, !dbg !44
  %55 = bitcast i32 %54 to float, !dbg !44
  %56 = select i1 %47, float %55, float 0x7FF8000000000000, !dbg !45
  %57 = and i1 %21, %29, !dbg !46
  %58 = and i1 %14, %57, !dbg !47
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %58, i32 0, i1 %58) #2, !dbg !48
  %60 = bitcast i32 %59 to float, !dbg !48
  %61 = select i1 %29, float %60, float 0x7FF8000000000000, !dbg !49
  %62 = select i1 %45, float %56, float %61, !dbg !50
  %63 = shl i32 %20, 3, !dbg !51
  %64 = add i32 %63, %.decomposed5, !dbg !52
  %65 = shl i32 %25, 5, !dbg !53
  %66 = add i32 %64, %65, !dbg !54
  %67 = sext i32 %66 to i64, !dbg !55
  %68 = getelementptr float, ptr addrspace(1) %1, i64 %67, !dbg !55
  %69 = and i1 %15, %22, !dbg !56
  %70 = shl i32 %7, 5, !dbg !57
  %71 = and i32 %70, 96, !dbg !57
  %72 = or disjoint i32 %71, %9, !dbg !57
  %73 = and i32 %7, 127, !dbg !57
  %74 = lshr exact i32 %71, 5, !dbg !57
  %75 = add nuw nsw i32 %72, %74, !dbg !57
  %76 = zext nneg i32 %75 to i64, !dbg !57
  %77 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %76, !dbg !57
  %78 = bitcast float %62 to i32, !dbg !57
  %79 = select i1 %27, i32 %44, i32 %78, !dbg !50
  %80 = insertelement <1 x i32> poison, i32 %79, i64 0, !dbg !57
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %77, <1 x i32> %80, i1 true) #2, !dbg !57
  tail call void @llvm.nvvm.barrier0(), !dbg !57
  %81 = lshr i32 %73, 5, !dbg !57
  %82 = add nuw nsw i32 %81, %73, !dbg !57
  %83 = zext nneg i32 %82 to i64, !dbg !57
  %84 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %83, !dbg !57
  %85 = load i32, ptr addrspace(3) %84, align 4, !dbg !57
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %85, ptr addrspace(1) %68, i1 %69) #2, !dbg !57
  ret void, !dbg !58
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cztuhzoxo25oeas3tdxuq6u5e5krd3bvkc7bawtmcnelo6lwzql7.py", directory: "inductor_cache/zt")
!4 = !{ptr @triton_poi_fused_copy_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_copy_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_copy_0", linkageName: "triton_poi_fused_copy_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 30, column: 19, scope: !7)
!21 = !DILocation(line: 28, column: 19, scope: !7)
!22 = !DILocation(line: 33, column: 19, scope: !7)
!23 = !DILocation(line: 43, column: 19, scope: !7)
!24 = !DILocation(line: 45, column: 45, scope: !7)
!25 = !DILocation(line: 45, column: 53, scope: !7)
!26 = !DILocation(line: 45, column: 38, scope: !7)
!27 = !DILocation(line: 45, column: 43, scope: !7)
!28 = !DILocation(line: 45, column: 50, scope: !7)
!29 = !DILocation(line: 45, column: 31, scope: !7)
!30 = !DILocation(line: 45, column: 58, scope: !7)
!31 = !DILocation(line: 55, column: 44, scope: !7)
!32 = !DILocation(line: 55, column: 51, scope: !7)
!33 = !DILocation(line: 55, column: 31, scope: !7)
!34 = !DILocation(line: 55, column: 67, scope: !7)
!35 = !DILocation(line: 55, column: 75, scope: !7)
!36 = !DILocation(line: 55, column: 59, scope: !7)
!37 = !DILocation(line: 62, column: 19, scope: !7)
!38 = !DILocation(line: 68, column: 20, scope: !7)
!39 = !DILocation(line: 70, column: 40, scope: !7)
!40 = !DILocation(line: 70, column: 47, scope: !7)
!41 = !DILocation(line: 70, column: 31, scope: !7)
!42 = !DILocation(line: 70, column: 63, scope: !7)
!43 = !DILocation(line: 70, column: 71, scope: !7)
!44 = !DILocation(line: 70, column: 55, scope: !7)
!45 = !DILocation(line: 72, column: 35, scope: !7)
!46 = !DILocation(line: 78, column: 66, scope: !7)
!47 = !DILocation(line: 78, column: 74, scope: !7)
!48 = !DILocation(line: 78, column: 58, scope: !7)
!49 = !DILocation(line: 80, column: 35, scope: !7)
!50 = !DILocation(line: 0, scope: !7)
!51 = !DILocation(line: 83, column: 32, scope: !7)
!52 = !DILocation(line: 83, column: 30, scope: !7)
!53 = !DILocation(line: 83, column: 40, scope: !7)
!54 = !DILocation(line: 83, column: 37, scope: !7)
!55 = !DILocation(line: 83, column: 25, scope: !7)
!56 = !DILocation(line: 83, column: 60, scope: !7)
!57 = !DILocation(line: 83, column: 52, scope: !7)
!58 = !DILocation(line: 83, column: 4, scope: !7)
