//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__weight_norm_interface_6 // -- Begin function triton_per_fused__weight_norm_interface_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__weight_norm_interface_6
.visible .entry triton_per_fused__weight_norm_interface_6(
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_6_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_6_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_6_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_6_param_3,
	.param .u32 triton_per_fused__weight_norm_interface_6_param_4,
	.param .u32 triton_per_fused__weight_norm_interface_6_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<49>;
	.reg .b32 	%r<147>;
	.reg .f32 	%f<103>;
	.reg .b64 	%rd<41>;
	.loc	1 19 0                          // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd26, [triton_per_fused__weight_norm_interface_6_param_0];
	ld.param.u64 	%rd27, [triton_per_fused__weight_norm_interface_6_param_1];
$L__tmp0:
	.loc	1 23 28                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:23:33
	shl.b32 	%r87, %r1, 5;
	ld.param.u64 	%rd28, [triton_per_fused__weight_norm_interface_6_param_2];
	ld.param.u64 	%rd29, [triton_per_fused__weight_norm_interface_6_param_3];
	.loc	1 24 44                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:24:44
	mov.u32 	%r88, %tid.x;
	bfe.u32 	%r89, %r88, 5, 3;
	and.b32  	%r90, %r88, 31;
	.loc	1 24 23                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:24:23
	or.b32  	%r91, %r87, %r89;
	or.b32  	%r92, %r91, 8;
	or.b32  	%r93, %r91, 16;
	or.b32  	%r94, %r91, 24;
	.loc	1 25 21                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:25:21
	setp.lt.s32 	%p21, %r91, 32;
	setp.lt.s32 	%p25, %r92, 32;
	setp.lt.s32 	%p29, %r93, 32;
	setp.lt.s32 	%p33, %r94, 32;
	.loc	1 26 34                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:26:34
	shl.b32 	%r95, %r88, 2;
	and.b32  	%r96, %r95, 124;
	.loc	1 28 21                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:28:21
	setp.lt.u32 	%p46, %r96, 96;
	.loc	1 31 35                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:31:35
	mad.lo.s32 	%r97, %r91, 96, %r96;
	mad.lo.s32 	%r98, %r92, 96, %r96;
	mad.lo.s32 	%r99, %r93, 96, %r96;
	mad.lo.s32 	%r100, %r94, 96, %r96;
	.loc	1 31 30                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:31:30
	mul.wide.s32 	%rd30, %r97, 4;
	add.s64 	%rd1, %rd27, %rd30;
	mul.wide.s32 	%rd31, %r98, 4;
	add.s64 	%rd2, %rd27, %rd31;
	mul.wide.s32 	%rd32, %r99, 4;
	add.s64 	%rd3, %rd27, %rd32;
	mul.wide.s32 	%rd33, %r100, 4;
	add.s64 	%rd4, %rd27, %rd33;
	.loc	1 31 51                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:31:51
	and.pred  	%p1, %p46, %p21;
	and.pred  	%p6, %p46, %p25;
	and.pred  	%p11, %p46, %p29;
	and.pred  	%p16, %p46, %p33;
	mov.b32 	%r6, 0;
	.loc	1 31 43                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:31:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p11 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r18, %r6;
	@!%p11 mov.u32 %r19, %r6;
	@!%p11 mov.u32 %r20, %r6;
	@!%p11 mov.u32 %r21, %r6;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p16 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p16 mov.u32 %r26, %r6;
	@!%p16 mov.u32 %r27, %r6;
	@!%p16 mov.u32 %r28, %r6;
	@!%p16 mov.u32 %r29, %r6;
	// end inline asm
	mov.b32 	%f13, %r26;
	mov.b32 	%f14, %r27;
	mov.b32 	%f15, %r28;
	mov.b32 	%f16, %r29;
	.loc	1 32 30                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:32:30
	mul.wide.s32 	%rd34, %r91, 4;
	add.s64 	%rd5, %rd28, %rd34;
	cvt.s64.s32 	%rd35, %r87;
	cvt.u64.u32 	%rd36, %r89;
	or.b64  	%rd37, %rd35, %rd36;
	shl.b64 	%rd38, %rd37, 2;
	add.s64 	%rd39, %rd28, %rd38;
	add.s64 	%rd9, %rd39, 32;
	add.s64 	%rd13, %rd39, 64;
	add.s64 	%rd17, %rd39, 96;
	.loc	1 32 35                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:32:35
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r34 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r35 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r36 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r59, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r59 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r38 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r39 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r40 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r62, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r62 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p29 ld.global.L1::evict_last.b32 { %r42 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r43, 0x0;
	@%p29 ld.global.L1::evict_last.b32 { %r43 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p29 ld.global.L1::evict_last.b32 { %r44 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r65, 0x0;
	@%p29 ld.global.L1::evict_last.b32 { %r65 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p33 ld.global.L1::evict_last.b32 { %r46 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r47, 0x0;
	@%p33 ld.global.L1::evict_last.b32 { %r47 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p33 ld.global.L1::evict_last.b32 { %r48 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r68, 0x0;
	@%p33 ld.global.L1::evict_last.b32 { %r68 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 33 18                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:33:18
	mul.f32 	%f17, %f2, %f2;
	mul.f32 	%f18, %f6, %f6;
	mul.f32 	%f19, %f10, %f10;
	mul.f32 	%f20, %f14, %f14;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f21, %f1, %f1, %f17;
	fma.rn.f32 	%f22, %f3, %f3, %f21;
	fma.rn.f32 	%f23, %f4, %f4, %f22;
	selp.f32 	%f24, %f23, 0f00000000, %p1;
	fma.rn.f32 	%f25, %f5, %f5, %f18;
	fma.rn.f32 	%f26, %f7, %f7, %f25;
	fma.rn.f32 	%f27, %f8, %f8, %f26;
	selp.f32 	%f28, %f27, 0f00000000, %p6;
	fma.rn.f32 	%f29, %f9, %f9, %f19;
	fma.rn.f32 	%f30, %f11, %f11, %f29;
	fma.rn.f32 	%f31, %f12, %f12, %f30;
	selp.f32 	%f32, %f31, 0f00000000, %p11;
	fma.rn.f32 	%f33, %f13, %f13, %f20;
	fma.rn.f32 	%f34, %f15, %f15, %f33;
	fma.rn.f32 	%f35, %f16, %f16, %f34;
	selp.f32 	%f36, %f35, 0f00000000, %p16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r101, %f24;
	shfl.sync.bfly.b32	%r102, %r101, 16, 31, -1;
	mov.b32 	%f37, %r102;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f24, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r103, %f38;
	shfl.sync.bfly.b32	%r104, %r103, 8, 31, -1;
	mov.b32 	%f39, %r104;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r105, %f40;
	shfl.sync.bfly.b32	%r106, %r105, 4, 31, -1;
	mov.b32 	%f41, %r106;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r107, %f42;
	shfl.sync.bfly.b32	%r108, %r107, 2, 31, -1;
	mov.b32 	%f43, %r108;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r109, %f44;
	shfl.sync.bfly.b32	%r110, %r109, 1, 31, -1;
	mov.b32 	%f45, %r110;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r111, %f28;
	shfl.sync.bfly.b32	%r112, %r111, 16, 31, -1;
	mov.b32 	%f47, %r112;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f28, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r113, %f48;
	shfl.sync.bfly.b32	%r114, %r113, 8, 31, -1;
	mov.b32 	%f49, %r114;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f50;
	shfl.sync.bfly.b32	%r116, %r115, 4, 31, -1;
	mov.b32 	%f51, %r116;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r117, %f52;
	shfl.sync.bfly.b32	%r118, %r117, 2, 31, -1;
	mov.b32 	%f53, %r118;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r119, %f54;
	shfl.sync.bfly.b32	%r120, %r119, 1, 31, -1;
	mov.b32 	%f55, %r120;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r121, %f32;
	shfl.sync.bfly.b32	%r122, %r121, 16, 31, -1;
	mov.b32 	%f57, %r122;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f32, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r123, %f58;
	shfl.sync.bfly.b32	%r124, %r123, 8, 31, -1;
	mov.b32 	%f59, %r124;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r125, %f60;
	shfl.sync.bfly.b32	%r126, %r125, 4, 31, -1;
	mov.b32 	%f61, %r126;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r127, %f62;
	shfl.sync.bfly.b32	%r128, %r127, 2, 31, -1;
	mov.b32 	%f63, %r128;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r129, %f64;
	shfl.sync.bfly.b32	%r130, %r129, 1, 31, -1;
	mov.b32 	%f65, %r130;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r131, %f36;
	shfl.sync.bfly.b32	%r132, %r131, 16, 31, -1;
	mov.b32 	%f67, %r132;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f36, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r133, %f68;
	shfl.sync.bfly.b32	%r134, %r133, 8, 31, -1;
	mov.b32 	%f69, %r134;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r135, %f70;
	shfl.sync.bfly.b32	%r136, %r135, 4, 31, -1;
	mov.b32 	%f71, %r136;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r137, %f72;
	shfl.sync.bfly.b32	%r138, %r137, 2, 31, -1;
	mov.b32 	%f73, %r138;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r139, %f74;
	shfl.sync.bfly.b32	%r140, %r139, 1, 31, -1;
	mov.b32 	%f75, %r140;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
$L__tmp2:
	.loc	1 37 26                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:37:26
	shl.b32 	%r141, %r89, 2;
	mov.u32 	%r142, global_smem;
	add.s32 	%r50, %r142, %r141;
	mov.b32 	%r51, %f46;
	mov.pred 	%p37, -1;
	// begin inline asm
	@%p37 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	add.s32 	%r52, %r50, 32;
	mov.b32 	%r53, %f56;
	// begin inline asm
	@%p37 st.shared.b32 [ %r52 + 0 ], %r53;
	// end inline asm
	add.s32 	%r54, %r50, 64;
	mov.b32 	%r55, %f66;
	// begin inline asm
	@%p37 st.shared.b32 [ %r54 + 0 ], %r55;
	// end inline asm
	add.s32 	%r56, %r50, 96;
	mov.b32 	%r57, %f76;
	// begin inline asm
	@%p37 st.shared.b32 [ %r56 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r143, %r90, 2;
	add.s32 	%r144, %r142, %r143;
	ld.shared.f32 	%f77, [%r144];
	sqrt.approx.ftz.f32 	%f78, %f77;
	sqrt.approx.ftz.f32 	%f79, %f46;
	sqrt.approx.ftz.f32 	%f80, %f56;
	sqrt.approx.ftz.f32 	%f81, %f66;
	sqrt.approx.ftz.f32 	%f82, %f76;
	.loc	1 24 23                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:24:23
	or.b32  	%r145, %r87, %r90;
	.loc	1 25 21                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:25:21
	setp.lt.s32 	%p47, %r145, 32;
	.loc	1 38 18                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:38:18
	mov.b32 	%r60, %f79;
	// begin inline asm
	div.full.f32 %r58, %r59, %r60;
	// end inline asm
	mov.b32 	%f83, %r58;
	mov.b32 	%r63, %f80;
	// begin inline asm
	div.full.f32 %r61, %r62, %r63;
	// end inline asm
	mov.b32 	%f84, %r61;
	mov.b32 	%r66, %f81;
	// begin inline asm
	div.full.f32 %r64, %r65, %r66;
	// end inline asm
	mov.b32 	%f85, %r64;
	mov.b32 	%r69, %f82;
	// begin inline asm
	div.full.f32 %r67, %r68, %r69;
	// end inline asm
	mov.b32 	%f86, %r67;
	.loc	1 39 18                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:39:18
	mul.f32 	%f87, %f83, %f1;
	mul.f32 	%f88, %f83, %f2;
	mul.f32 	%f89, %f83, %f3;
	mul.f32 	%f90, %f83, %f4;
	mul.f32 	%f91, %f84, %f5;
	mul.f32 	%f92, %f84, %f6;
	mul.f32 	%f93, %f84, %f7;
	mul.f32 	%f94, %f84, %f8;
	mul.f32 	%f95, %f85, %f9;
	mul.f32 	%f96, %f85, %f10;
	mul.f32 	%f97, %f85, %f11;
	mul.f32 	%f98, %f85, %f12;
	mul.f32 	%f99, %f86, %f13;
	mul.f32 	%f100, %f86, %f14;
	mul.f32 	%f101, %f86, %f15;
	mul.f32 	%f102, %f86, %f16;
	.loc	1 40 4                          // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:40:4
	bar.sync 	0;
	.loc	1 41 28                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:41:28
	mul.wide.s32 	%rd40, %r145, 4;
	add.s64 	%rd21, %rd26, %rd40;
	.loc	1 41 39                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:41:39
	and.b32  	%r146, %r88, 224;
	setp.eq.s32 	%p48, %r146, 0;
	mov.b32 	%r70, %f78;
	and.pred  	%p41, %p48, %p47;
	// begin inline asm
	@%p41 st.global.b32 [ %rd21 + 0 ], { %r70 };
	// end inline asm
	.loc	1 42 25                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:42:25
	add.s64 	%rd22, %rd29, %rd30;
	add.s64 	%rd23, %rd29, %rd31;
	add.s64 	%rd24, %rd29, %rd32;
	add.s64 	%rd25, %rd29, %rd33;
	.loc	1 42 44                         // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:42:44
	mov.b32 	%r71, %f87;
	mov.b32 	%r72, %f88;
	mov.b32 	%r73, %f89;
	mov.b32 	%r74, %f90;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd22 + 0 ], { %r71, %r72, %r73, %r74 };
	// end inline asm
	mov.b32 	%r75, %f91;
	mov.b32 	%r76, %f92;
	mov.b32 	%r77, %f93;
	mov.b32 	%r78, %f94;
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd23 + 0 ], { %r75, %r76, %r77, %r78 };
	// end inline asm
	mov.b32 	%r79, %f95;
	mov.b32 	%r80, %f96;
	mov.b32 	%r81, %f97;
	mov.b32 	%r82, %f98;
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd24 + 0 ], { %r79, %r80, %r81, %r82 };
	// end inline asm
	mov.b32 	%r83, %f99;
	mov.b32 	%r84, %f100;
	mov.b32 	%r85, %f101;
	mov.b32 	%r86, %f102;
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd25 + 0 ], { %r83, %r84, %r85, %r86 };
	// end inline asm
	.loc	1 42 4                          // cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py:42:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/yq/cyqfdqebgw5knkx7hvqfu7joezfy35aag5cjj6j7nw3lhxl2ibjl.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 186                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 113
.b8 102
.b8 100
.b8 113
.b8 101
.b8 98
.b8 103
.b8 119
.b8 53
.b8 107
.b8 110
.b8 107
.b8 120
.b8 55
.b8 104
.b8 118
.b8 113
.b8 102
.b8 117
.b8 55
.b8 106
.b8 111
.b8 101
.b8 122
.b8 102
.b8 121
.b8 51
.b8 53
.b8 97
.b8 97
.b8 103
.b8 53
.b8 99
.b8 106
.b8 106
.b8 54
.b8 106
.b8 55
.b8 110
.b8 119
.b8 51
.b8 108
.b8 104
.b8 120
.b8 108
.b8 50
.b8 105
.b8 98
.b8 106
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 113
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 119
.b8 101
.b8 105
.b8 103
.b8 104
.b8 116
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 105
.b8 110
.b8 116
.b8 101
.b8 114
.b8 102
.b8 97
.b8 99
.b8 101
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8f:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
