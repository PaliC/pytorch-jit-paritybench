; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_convolution_elu_14(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 9, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 2, !dbg !12
  %11 = and i32 %10, 508, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = sdiv i32 %12, 16, !dbg !14
  %14 = srem i32 %13, 1024, !dbg !15
  %.frozen = freeze i32 %12, !dbg !16
  %15 = sdiv i32 %.frozen, 16384, !dbg !16
  %16 = mul i32 %15, 16384, !dbg !17
  %.decomposed = sub i32 %.frozen, %16, !dbg !17
  %17 = sext i32 %12 to i64, !dbg !18
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !18
  %19 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %18, i1 true) #3, !dbg !19
  %20 = extractvalue { i32, i32, i32, i32 } %19, 0, !dbg !19
  %21 = extractvalue { i32, i32, i32, i32 } %19, 1, !dbg !19
  %22 = extractvalue { i32, i32, i32, i32 } %19, 2, !dbg !19
  %23 = extractvalue { i32, i32, i32, i32 } %19, 3, !dbg !19
  %24 = sext i32 %14 to i64, !dbg !20
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !20
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #3, !dbg !21
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #3, !dbg !21
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #3, !dbg !21
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #3, !dbg !21
  %30 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !22
  %31 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %30, i1 true) #3, !dbg !23
  %32 = extractvalue { i32, i32, i32, i32 } %31, 0, !dbg !23
  %33 = extractvalue { i32, i32, i32, i32 } %31, 1, !dbg !23
  %34 = extractvalue { i32, i32, i32, i32 } %31, 2, !dbg !23
  %35 = extractvalue { i32, i32, i32, i32 } %31, 3, !dbg !23
  %36 = mul i32 %15, 24576, !dbg !24
  %37 = add i32 %36, %.decomposed, !dbg !25
  %38 = sext i32 %37 to i64, !dbg !26
  %39 = getelementptr float, ptr addrspace(1) %3, i64 %38, !dbg !26
  %40 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %39, i1 true) #3, !dbg !27
  %41 = extractvalue { i32, i32, i32, i32 } %40, 0, !dbg !27
  %42 = extractvalue { i32, i32, i32, i32 } %40, 1, !dbg !27
  %43 = extractvalue { i32, i32, i32, i32 } %40, 2, !dbg !27
  %44 = extractvalue { i32, i32, i32, i32 } %40, 3, !dbg !27
  %45 = insertelement <4 x i32> poison, i32 %23, i64 0, !dbg !19
  %46 = insertelement <4 x i32> %45, i32 %20, i64 1, !dbg !19
  %47 = insertelement <4 x i32> %46, i32 %21, i64 2, !dbg !19
  %48 = insertelement <4 x i32> %47, i32 %22, i64 3, !dbg !19
  %49 = bitcast <4 x i32> %48 to <4 x float>, !dbg !19
  %50 = insertelement <4 x i32> poison, i32 %29, i64 0, !dbg !21
  %51 = insertelement <4 x i32> %50, i32 %26, i64 1, !dbg !21
  %52 = insertelement <4 x i32> %51, i32 %27, i64 2, !dbg !21
  %53 = insertelement <4 x i32> %52, i32 %28, i64 3, !dbg !21
  %54 = bitcast <4 x i32> %53 to <4 x float>, !dbg !21
  %55 = insertelement <4 x i32> poison, i32 %35, i64 0, !dbg !23
  %56 = insertelement <4 x i32> %55, i32 %32, i64 1, !dbg !23
  %57 = insertelement <4 x i32> %56, i32 %33, i64 2, !dbg !23
  %58 = insertelement <4 x i32> %57, i32 %34, i64 3, !dbg !23
  %59 = bitcast <4 x i32> %58 to <4 x float>, !dbg !23
  %60 = insertelement <4 x i32> poison, i32 %44, i64 0, !dbg !27
  %61 = insertelement <4 x i32> %60, i32 %41, i64 1, !dbg !27
  %62 = insertelement <4 x i32> %61, i32 %42, i64 2, !dbg !27
  %63 = insertelement <4 x i32> %62, i32 %43, i64 3, !dbg !27
  %64 = bitcast <4 x i32> %63 to <4 x float>, !dbg !27
  %65 = fadd <4 x float> %49, %54, !dbg !28
  %66 = fadd <4 x float> %59, %64, !dbg !29
  %67 = fadd <4 x float> %65, %66, !dbg !30
  %68 = extractelement <4 x float> %67, i64 1, !dbg !31
  %69 = fmul float %68, 0x3FF7154760000000, !dbg !31
  %70 = tail call float @llvm.nvvm.round.f(float %69) #3, !dbg !31
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i = icmp eq i32 %71, 0, !dbg !31
  %72 = tail call float @llvm.nvvm.fabs.ftz.f(float %68) #3, !dbg !31
  %73 = tail call float @llvm.nvvm.fabs.f(float %68) #3, !dbg !31
  %.03.i = select i1 %.not.i, float %73, float %72, !dbg !31
  %74 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !31
  %t.0.i = select i1 %74, float 0.000000e+00, float %70, !dbg !31
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %77 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !31
  %j.0.i = select i1 %77, float 1.270000e+02, float %t.0.i, !dbg !31
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not8.i = icmp eq i32 %83, 0, !dbg !31
  br i1 %.not8.i, label %86, label %84, !dbg !31

84:                                               ; preds = %6
  %85 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !31
  br label %__nv_expm1f.exit, !dbg !31

86:                                               ; preds = %6
  %87 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !31
  br label %__nv_expm1f.exit, !dbg !31

__nv_expm1f.exit:                                 ; preds = %84, %86
  %.0.i = phi float [ %85, %84 ], [ %87, %86 ], !dbg !31
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %89 = extractelement <4 x float> %67, i64 2, !dbg !31
  %90 = fmul float %89, 0x3FF7154760000000, !dbg !31
  %91 = tail call float @llvm.nvvm.round.f(float %90) #3, !dbg !31
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i1 = icmp eq i32 %92, 0, !dbg !31
  %93 = tail call float @llvm.nvvm.fabs.ftz.f(float %89) #3, !dbg !31
  %94 = tail call float @llvm.nvvm.fabs.f(float %89) #3, !dbg !31
  %.03.i2 = select i1 %.not.i1, float %94, float %93, !dbg !31
  %95 = fcmp olt float %.03.i2, 0x3FDA3D70A0000000, !dbg !31
  %t.0.i3 = select i1 %95, float 0.000000e+00, float %91, !dbg !31
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %98 = fcmp oeq float %t.0.i3, 1.280000e+02, !dbg !31
  %j.0.i4 = select i1 %98, float 1.270000e+02, float %t.0.i3, !dbg !31
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not8.i5 = icmp eq i32 %104, 0, !dbg !31
  br i1 %.not8.i5, label %107, label %105, !dbg !31

105:                                              ; preds = %__nv_expm1f.exit
  %106 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i4) #3, !dbg !31
  br label %__nv_expm1f.exit27, !dbg !31

107:                                              ; preds = %__nv_expm1f.exit
  %108 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i4) #3, !dbg !31
  br label %__nv_expm1f.exit27, !dbg !31

__nv_expm1f.exit27:                               ; preds = %105, %107
  %.0.i6 = phi float [ %106, %105 ], [ %108, %107 ], !dbg !31
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %110 = extractelement <4 x float> %67, i64 3, !dbg !31
  %111 = fmul float %110, 0x3FF7154760000000, !dbg !31
  %112 = tail call float @llvm.nvvm.round.f(float %111) #3, !dbg !31
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i28 = icmp eq i32 %113, 0, !dbg !31
  %114 = tail call float @llvm.nvvm.fabs.ftz.f(float %110) #3, !dbg !31
  %115 = tail call float @llvm.nvvm.fabs.f(float %110) #3, !dbg !31
  %.03.i29 = select i1 %.not.i28, float %115, float %114, !dbg !31
  %116 = fcmp olt float %.03.i29, 0x3FDA3D70A0000000, !dbg !31
  %t.0.i30 = select i1 %116, float 0.000000e+00, float %112, !dbg !31
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %119 = fcmp oeq float %t.0.i30, 1.280000e+02, !dbg !31
  %j.0.i31 = select i1 %119, float 1.270000e+02, float %t.0.i30, !dbg !31
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not8.i32 = icmp eq i32 %125, 0, !dbg !31
  br i1 %.not8.i32, label %128, label %126, !dbg !31

126:                                              ; preds = %__nv_expm1f.exit27
  %127 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i31) #3, !dbg !31
  br label %__nv_expm1f.exit54, !dbg !31

128:                                              ; preds = %__nv_expm1f.exit27
  %129 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i31) #3, !dbg !31
  br label %__nv_expm1f.exit54, !dbg !31

__nv_expm1f.exit54:                               ; preds = %126, %128
  %.0.i33 = phi float [ %127, %126 ], [ %129, %128 ], !dbg !31
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %131 = extractelement <4 x float> %67, i64 0, !dbg !31
  %132 = fmul float %131, 0x3FF7154760000000, !dbg !31
  %133 = tail call float @llvm.nvvm.round.f(float %132) #3, !dbg !31
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i55 = icmp eq i32 %134, 0, !dbg !31
  %135 = tail call float @llvm.nvvm.fabs.ftz.f(float %131) #3, !dbg !31
  %136 = tail call float @llvm.nvvm.fabs.f(float %131) #3, !dbg !31
  %.03.i56 = select i1 %.not.i55, float %136, float %135, !dbg !31
  %137 = fcmp olt float %.03.i56, 0x3FDA3D70A0000000, !dbg !31
  %t.0.i57 = select i1 %137, float 0.000000e+00, float %133, !dbg !31
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %140 = fcmp oeq float %t.0.i57, 1.280000e+02, !dbg !31
  %j.0.i58 = select i1 %140, float 1.270000e+02, float %t.0.i57, !dbg !31
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not8.i59 = icmp eq i32 %146, 0, !dbg !31
  br i1 %.not8.i59, label %149, label %147, !dbg !31

147:                                              ; preds = %__nv_expm1f.exit54
  %148 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i58) #3, !dbg !31
  br label %__nv_expm1f.exit81, !dbg !31

149:                                              ; preds = %__nv_expm1f.exit54
  %150 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i58) #3, !dbg !31
  br label %__nv_expm1f.exit81, !dbg !31

__nv_expm1f.exit81:                               ; preds = %147, %149
  %.0.i60 = phi float [ %148, %147 ], [ %150, %149 ], !dbg !31
  %151 = fcmp oeq <4 x float> %67, zeroinitializer, !dbg !31
  %152 = fadd float %110, %110, !dbg !31
  %153 = fcmp olt float %j.0.i31, -2.500000e+01, !dbg !31
  %154 = fcmp ogt float %j.0.i31, 1.280000e+02, !dbg !31
  %.not9.i48 = icmp eq i32 %130, 0, !dbg !31
  %.not7.i34 = icmp eq i32 %124, 0, !dbg !31
  %.not6.i35 = icmp eq i32 %123, 0, !dbg !31
  %.not5.i36 = icmp eq i32 %122, 0, !dbg !31
  %.not4.i37 = icmp eq i32 %121, 0, !dbg !31
  %.not3.i38 = icmp eq i32 %120, 0, !dbg !31
  %.not2.i39 = icmp eq i32 %118, 0, !dbg !31
  %155 = fneg float %t.0.i30, !dbg !31
  %.not1.i40 = icmp eq i32 %117, 0, !dbg !31
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %155, float 0x3FE62E4000000000, float %110) #3, !dbg !31
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %155, float 0x3FE62E4000000000, float %110) #3, !dbg !31
  %.04.i41 = select i1 %.not1.i40, float %156, float %157, !dbg !31
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %155, float 0x3EB7F7D1C0000000, float %.04.i41) #3, !dbg !31
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %155, float 0x3EB7F7D1C0000000, float %.04.i41) #3, !dbg !31
  %.05.i42 = select i1 %.not2.i39, float %158, float %159, !dbg !31
  %160 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i42, float 0x3F812ACC60000000) #3, !dbg !31
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i42, float 0x3F812ACC60000000) #3, !dbg !31
  %.07.i43 = select i1 %.not3.i38, float %160, float %161, !dbg !31
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i43, float %.05.i42, float 0x3FA5557C60000000) #3, !dbg !31
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i43, float %.05.i42, float 0x3FA5557C60000000) #3, !dbg !31
  %.08.i44 = select i1 %.not4.i37, float %162, float %163, !dbg !31
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i44, float %.05.i42, float 0x3FC5553EC0000000) #3, !dbg !31
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i44, float %.05.i42, float 0x3FC5553EC0000000) #3, !dbg !31
  %.09.i45 = select i1 %.not5.i36, float %164, float %165, !dbg !31
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i45, float %.05.i42, float 0x3FDFFFFFC0000000) #3, !dbg !31
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i45, float %.05.i42, float 0x3FDFFFFFC0000000) #3, !dbg !31
  %.06.i46 = select i1 %.not6.i35, float %166, float %167, !dbg !31
  %168 = fmul float %.05.i42, %.06.i46, !dbg !31
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %168, float %.05.i42, float %.05.i42) #3, !dbg !31
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %168, float %.05.i42, float %.05.i42) #3, !dbg !31
  %.01.i47 = select i1 %.not7.i34, float %169, float %170, !dbg !31
  %171 = fadd float %.0.i33, -1.000000e+00, !dbg !31
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i47, float %.0.i33, float %171) #3, !dbg !31
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i47, float %.0.i33, float %171) #3, !dbg !31
  %.02.i49 = select i1 %.not9.i48, float %172, float %173, !dbg !31
  %174 = fadd float %.02.i49, %.02.i49, !dbg !31
  %u.0.i50 = select i1 %119, float %174, float %.02.i49, !dbg !31
  %u.1.i51 = select i1 %154, float 0x7FF0000000000000, float %u.0.i50, !dbg !31
  %u.2.i52 = select i1 %153, float -1.000000e+00, float %u.1.i51, !dbg !31
  %175 = extractelement <4 x i1> %151, i64 3, !dbg !31
  %u.3.i53 = select i1 %175, float %152, float %u.2.i52, !dbg !31
  %176 = fadd float %89, %89, !dbg !31
  %177 = fcmp olt float %j.0.i4, -2.500000e+01, !dbg !31
  %178 = fcmp ogt float %j.0.i4, 1.280000e+02, !dbg !31
  %.not9.i21 = icmp eq i32 %109, 0, !dbg !31
  %.not7.i7 = icmp eq i32 %103, 0, !dbg !31
  %.not6.i8 = icmp eq i32 %102, 0, !dbg !31
  %.not5.i9 = icmp eq i32 %101, 0, !dbg !31
  %.not4.i10 = icmp eq i32 %100, 0, !dbg !31
  %.not3.i11 = icmp eq i32 %99, 0, !dbg !31
  %.not2.i12 = icmp eq i32 %97, 0, !dbg !31
  %179 = fneg float %t.0.i3, !dbg !31
  %.not1.i13 = icmp eq i32 %96, 0, !dbg !31
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %179, float 0x3FE62E4000000000, float %89) #3, !dbg !31
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %179, float 0x3FE62E4000000000, float %89) #3, !dbg !31
  %.04.i14 = select i1 %.not1.i13, float %180, float %181, !dbg !31
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %179, float 0x3EB7F7D1C0000000, float %.04.i14) #3, !dbg !31
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %179, float 0x3EB7F7D1C0000000, float %.04.i14) #3, !dbg !31
  %.05.i15 = select i1 %.not2.i12, float %182, float %183, !dbg !31
  %184 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i15, float 0x3F812ACC60000000) #3, !dbg !31
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i15, float 0x3F812ACC60000000) #3, !dbg !31
  %.07.i16 = select i1 %.not3.i11, float %184, float %185, !dbg !31
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i16, float %.05.i15, float 0x3FA5557C60000000) #3, !dbg !31
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i16, float %.05.i15, float 0x3FA5557C60000000) #3, !dbg !31
  %.08.i17 = select i1 %.not4.i10, float %186, float %187, !dbg !31
  %188 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i17, float %.05.i15, float 0x3FC5553EC0000000) #3, !dbg !31
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i17, float %.05.i15, float 0x3FC5553EC0000000) #3, !dbg !31
  %.09.i18 = select i1 %.not5.i9, float %188, float %189, !dbg !31
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i18, float %.05.i15, float 0x3FDFFFFFC0000000) #3, !dbg !31
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i18, float %.05.i15, float 0x3FDFFFFFC0000000) #3, !dbg !31
  %.06.i19 = select i1 %.not6.i8, float %190, float %191, !dbg !31
  %192 = fmul float %.05.i15, %.06.i19, !dbg !31
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %192, float %.05.i15, float %.05.i15) #3, !dbg !31
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %192, float %.05.i15, float %.05.i15) #3, !dbg !31
  %.01.i20 = select i1 %.not7.i7, float %193, float %194, !dbg !31
  %195 = fadd float %.0.i6, -1.000000e+00, !dbg !31
  %196 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i20, float %.0.i6, float %195) #3, !dbg !31
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i20, float %.0.i6, float %195) #3, !dbg !31
  %.02.i22 = select i1 %.not9.i21, float %196, float %197, !dbg !31
  %198 = fadd float %.02.i22, %.02.i22, !dbg !31
  %u.0.i23 = select i1 %98, float %198, float %.02.i22, !dbg !31
  %u.1.i24 = select i1 %178, float 0x7FF0000000000000, float %u.0.i23, !dbg !31
  %u.2.i25 = select i1 %177, float -1.000000e+00, float %u.1.i24, !dbg !31
  %199 = extractelement <4 x i1> %151, i64 2, !dbg !31
  %u.3.i26 = select i1 %199, float %176, float %u.2.i25, !dbg !31
  %200 = fadd float %68, %68, !dbg !31
  %201 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !31
  %202 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !31
  %.not9.i = icmp eq i32 %88, 0, !dbg !31
  %.not7.i = icmp eq i32 %82, 0, !dbg !31
  %.not6.i = icmp eq i32 %81, 0, !dbg !31
  %.not5.i = icmp eq i32 %80, 0, !dbg !31
  %.not4.i = icmp eq i32 %79, 0, !dbg !31
  %.not3.i = icmp eq i32 %78, 0, !dbg !31
  %.not2.i = icmp eq i32 %76, 0, !dbg !31
  %203 = fneg float %t.0.i, !dbg !31
  %.not1.i = icmp eq i32 %75, 0, !dbg !31
  %204 = tail call float @llvm.nvvm.fma.rn.f(float %203, float 0x3FE62E4000000000, float %68) #3, !dbg !31
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %203, float 0x3FE62E4000000000, float %68) #3, !dbg !31
  %.04.i = select i1 %.not1.i, float %204, float %205, !dbg !31
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %203, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !31
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %203, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !31
  %.05.i = select i1 %.not2.i, float %206, float %207, !dbg !31
  %208 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !31
  %209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !31
  %.07.i = select i1 %.not3.i, float %208, float %209, !dbg !31
  %210 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !31
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !31
  %.08.i = select i1 %.not4.i, float %210, float %211, !dbg !31
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !31
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !31
  %.09.i = select i1 %.not5.i, float %212, float %213, !dbg !31
  %214 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !31
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !31
  %.06.i = select i1 %.not6.i, float %214, float %215, !dbg !31
  %216 = fmul float %.05.i, %.06.i, !dbg !31
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %216, float %.05.i, float %.05.i) #3, !dbg !31
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %216, float %.05.i, float %.05.i) #3, !dbg !31
  %.01.i = select i1 %.not7.i, float %217, float %218, !dbg !31
  %219 = fadd float %.0.i, -1.000000e+00, !dbg !31
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i, float %219) #3, !dbg !31
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i, float %219) #3, !dbg !31
  %.02.i = select i1 %.not9.i, float %220, float %221, !dbg !31
  %222 = fadd float %.02.i, %.02.i, !dbg !31
  %u.0.i = select i1 %77, float %222, float %.02.i, !dbg !31
  %u.1.i = select i1 %202, float 0x7FF0000000000000, float %u.0.i, !dbg !31
  %u.2.i = select i1 %201, float -1.000000e+00, float %u.1.i, !dbg !31
  %223 = extractelement <4 x i1> %151, i64 1, !dbg !31
  %u.3.i = select i1 %223, float %200, float %u.2.i, !dbg !31
  %224 = fcmp ogt float %131, 0.000000e+00, !dbg !32
  %225 = fcmp ogt float %110, 0.000000e+00, !dbg !32
  %226 = fcmp ogt float %89, 0.000000e+00, !dbg !32
  %227 = fcmp ogt float %68, 0.000000e+00, !dbg !32
  %.not7.i61 = icmp eq i32 %145, 0, !dbg !31
  %.not6.i62 = icmp eq i32 %144, 0, !dbg !31
  %.not5.i63 = icmp eq i32 %143, 0, !dbg !31
  %.not4.i64 = icmp eq i32 %142, 0, !dbg !31
  %.not3.i65 = icmp eq i32 %141, 0, !dbg !31
  %.not2.i66 = icmp eq i32 %139, 0, !dbg !31
  %228 = fneg float %t.0.i57, !dbg !31
  %.not1.i67 = icmp eq i32 %138, 0, !dbg !31
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %228, float 0x3FE62E4000000000, float %131) #3, !dbg !31
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %228, float 0x3FE62E4000000000, float %131) #3, !dbg !31
  %.04.i68 = select i1 %.not1.i67, float %229, float %230, !dbg !31
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %228, float 0x3EB7F7D1C0000000, float %.04.i68) #3, !dbg !31
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %228, float 0x3EB7F7D1C0000000, float %.04.i68) #3, !dbg !31
  %.05.i69 = select i1 %.not2.i66, float %231, float %232, !dbg !31
  %233 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i69, float 0x3F812ACC60000000) #3, !dbg !31
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i69, float 0x3F812ACC60000000) #3, !dbg !31
  %.07.i70 = select i1 %.not3.i65, float %233, float %234, !dbg !31
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i70, float %.05.i69, float 0x3FA5557C60000000) #3, !dbg !31
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i70, float %.05.i69, float 0x3FA5557C60000000) #3, !dbg !31
  %.08.i71 = select i1 %.not4.i64, float %235, float %236, !dbg !31
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i71, float %.05.i69, float 0x3FC5553EC0000000) #3, !dbg !31
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i71, float %.05.i69, float 0x3FC5553EC0000000) #3, !dbg !31
  %.09.i72 = select i1 %.not5.i63, float %237, float %238, !dbg !31
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %.05.i69, float 0x3FDFFFFFC0000000) #3, !dbg !31
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %.05.i69, float 0x3FDFFFFFC0000000) #3, !dbg !31
  %.06.i73 = select i1 %.not6.i62, float %239, float %240, !dbg !31
  %241 = fmul float %.05.i69, %.06.i73, !dbg !31
  %242 = tail call float @llvm.nvvm.fma.rn.f(float %241, float %.05.i69, float %.05.i69) #3, !dbg !31
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %241, float %.05.i69, float %.05.i69) #3, !dbg !31
  %.01.i74 = select i1 %.not7.i61, float %242, float %243, !dbg !31
  %244 = fadd float %.0.i60, -1.000000e+00, !dbg !31
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not9.i75 = icmp eq i32 %245, 0, !dbg !31
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i74, float %.0.i60, float %244) #3, !dbg !31
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i74, float %.0.i60, float %244) #3, !dbg !31
  %.02.i76 = select i1 %.not9.i75, float %247, float %246, !dbg !31
  %248 = fadd float %.02.i76, %.02.i76, !dbg !31
  %u.0.i77 = select i1 %140, float %248, float %.02.i76, !dbg !31
  %249 = fcmp ogt float %j.0.i58, 1.280000e+02, !dbg !31
  %u.1.i78 = select i1 %249, float 0x7FF0000000000000, float %u.0.i77, !dbg !31
  %250 = fcmp olt float %j.0.i58, -2.500000e+01, !dbg !31
  %u.2.i79 = select i1 %250, float -1.000000e+00, float %u.1.i78, !dbg !31
  %251 = fadd float %131, %131, !dbg !31
  %252 = extractelement <4 x i1> %151, i64 0, !dbg !31
  %u.3.i80 = select i1 %252, float %251, float %u.2.i79, !dbg !31
  %253 = select i1 %227, float %68, float %u.3.i, !dbg !33
  %254 = select i1 %226, float %89, float %u.3.i26, !dbg !33
  %255 = select i1 %225, float %110, float %u.3.i53, !dbg !33
  %256 = select i1 %224, float %131, float %u.3.i80, !dbg !33
  %257 = bitcast float %68 to i32, !dbg !34
  %258 = bitcast float %89 to i32, !dbg !34
  %259 = bitcast float %110 to i32, !dbg !34
  %260 = bitcast float %131 to i32, !dbg !34
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %257, i32 %258, i32 %259, i32 %260, ptr addrspace(1) %18, i1 true) #3, !dbg !34
  %261 = getelementptr float, ptr addrspace(1) %4, i64 %17, !dbg !35
  %262 = bitcast float %253 to i32, !dbg !36
  %263 = bitcast float %254 to i32, !dbg !36
  %264 = bitcast float %255 to i32, !dbg !36
  %265 = bitcast float %256 to i32, !dbg !36
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %262, i32 %263, i32 %264, i32 %265, ptr addrspace(1) %261, i1 true) #3, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czaladc2tz2itq7365md3eqsdgmigoarz4gap3apfrqyaguvndfg.py", directory: "inductor_cache/za")
!4 = !{ptr @triton_poi_fused_add_convolution_elu_14, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_convolution_elu_14, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_convolution_elu_14", linkageName: "triton_poi_fused_add_convolution_elu_14", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 27, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 34, scope: !7)
!19 = !DILocation(line: 28, column: 39, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 30, scope: !7)
!23 = !DILocation(line: 30, column: 35, scope: !7)
!24 = !DILocation(line: 31, column: 41, scope: !7)
!25 = !DILocation(line: 31, column: 35, scope: !7)
!26 = !DILocation(line: 31, column: 30, scope: !7)
!27 = !DILocation(line: 31, column: 46, scope: !7)
!28 = !DILocation(line: 32, column: 18, scope: !7)
!29 = !DILocation(line: 33, column: 18, scope: !7)
!30 = !DILocation(line: 34, column: 18, scope: !7)
!31 = !DILocation(line: 39, column: 28, scope: !7)
!32 = !DILocation(line: 36, column: 18, scope: !7)
!33 = !DILocation(line: 41, column: 34, scope: !7)
!34 = !DILocation(line: 42, column: 39, scope: !7)
!35 = !DILocation(line: 43, column: 25, scope: !7)
!36 = !DILocation(line: 43, column: 37, scope: !7)
!37 = !DILocation(line: 43, column: 4, scope: !7)
