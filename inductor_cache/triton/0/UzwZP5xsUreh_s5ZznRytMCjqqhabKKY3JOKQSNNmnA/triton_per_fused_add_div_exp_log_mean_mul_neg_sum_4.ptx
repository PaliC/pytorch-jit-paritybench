//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4 // -- Begin function triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4
.visible .entry triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4_param_5,
	.param .u32 triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<39>;
	.reg .b32 	%r<135>;
	.reg .f32 	%f<155>;
	.reg .b64 	%rd<33>;
$L__func_begin0:

// %bb.0:
	.loc	1 26 34                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:26:34
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd24, [triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4_param_1];
	and.b32  	%r2, %r1, 31;
	ld.param.u64 	%rd25, [triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4_param_2];
	shr.u32 	%r3, %r1, 5;
	ld.param.u64 	%rd26, [triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4_param_3];
	.loc	1 29 19                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:29:19
	and.b32  	%r76, %r1, 3;
	ld.param.u64 	%rd27, [triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4_param_4];
	.loc	1 31 32                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:31:32
	shl.b32 	%r77, %r76, 2;
	ld.param.u64 	%rd28, [triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4_param_5];
	.loc	1 31 30                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:31:30
	mul.wide.u32 	%rd29, %r77, 4;
	add.s64 	%rd2, %rd24, %rd29;
	mov.pred 	%p2, -1;
	.loc	1 31 37                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:31:37
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 32 30                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:32:30
	add.s64 	%rd3, %rd25, %rd29;
	.loc	1 32 37                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:32:37
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r7 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:33:30
	mul.wide.u32 	%rd30, %r76, 4;
	add.s64 	%rd4, %rd26, %rd30;
	.loc	1 33 35                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:33:35
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r33 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 34 32                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:34:32
	shl.b32 	%r78, %r1, 2;
	and.b32  	%r79, %r78, 252;
	.loc	1 34 30                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:34:30
	mul.wide.u32 	%rd31, %r79, 4;
	add.s64 	%rd5, %rd27, %rd31;
	.loc	1 34 37                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:34:37
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r9;
	.loc	1 35 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:35:31
	add.s64 	%rd6, %rd2, 4;
	.loc	1 35 42                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:35:42
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:36:31
	add.s64 	%rd7, %rd3, 4;
	.loc	1 36 42                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:36:42
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r11 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:37:31
	add.s64 	%rd8, %rd5, 4;
	.loc	1 37 42                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:37:42
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r12 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r12;
	.loc	1 38 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:38:31
	add.s64 	%rd9, %rd2, 8;
	.loc	1 38 42                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:38:42
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r13 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:39:31
	add.s64 	%rd10, %rd3, 8;
	.loc	1 39 42                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:39:42
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r14 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 40 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:40:31
	add.s64 	%rd11, %rd5, 8;
	.loc	1 40 42                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:40:42
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r15 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r15;
	.loc	1 41 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:41:31
	add.s64 	%rd12, %rd2, 12;
	.loc	1 41 42                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:41:42
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r16 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 42 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:42:31
	add.s64 	%rd13, %rd3, 12;
	.loc	1 42 42                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:42:42
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r17 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 43 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:43:31
	add.s64 	%rd14, %rd5, 12;
	.loc	1 43 42                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:43:42
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r18 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r18;
	.loc	1 44 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:44:31
	add.s64 	%rd15, %rd24, %rd30;
	.loc	1 44 36                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:44:36
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r19 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 45 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:45:31
	add.s64 	%rd16, %rd25, %rd30;
	.loc	1 45 36                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:45:36
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r20 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 46 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:46:31
	add.s64 	%rd17, %rd28, %rd30;
	.loc	1 46 36                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:46:36
	// begin inline asm
	mov.u32 %r57, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r57 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 47 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:47:31
	add.s64 	%rd18, %rd15, 16;
	.loc	1 47 40                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:47:40
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r22 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 48 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:48:31
	add.s64 	%rd19, %rd16, 16;
	.loc	1 48 40                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:48:40
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r23 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 49 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:49:31
	add.s64 	%rd20, %rd15, 32;
	.loc	1 49 40                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:49:40
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r24 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 50 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:50:31
	add.s64 	%rd21, %rd16, 32;
	.loc	1 50 40                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:50:40
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r25 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 51 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:51:31
	add.s64 	%rd22, %rd15, 48;
	.loc	1 51 41                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:51:41
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r26 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 52 31                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:52:31
	add.s64 	%rd23, %rd16, 48;
	.loc	1 52 41                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:52:41
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r27 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 53 18                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:53:18
	// begin inline asm
	div.full.f32 %r28, %r6, %r7;
	// end inline asm
	mov.b32 	%f31, %r28;
	.loc	1 55 18                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:55:18
	mul.f32 	%f32, %f31, 0f3E800000;
	.loc	1 56 23                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:56:23
	mul.f32 	%f12, %f32, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	.loc	1 57 18                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:57:18
	mov.b32 	%r32, %f11;
	// begin inline asm
	div.full.f32 %r31, %r32, %r33;
	// end inline asm
	mov.b32 	%f33, %r31;
	.loc	1 59 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:59:20
	// begin inline asm
	div.full.f32 %r34, %r10, %r11;
	// end inline asm
	mov.b32 	%f34, %r34;
	.loc	1 60 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:60:20
	mul.f32 	%f35, %f34, 0f3E800000;
	.loc	1 61 24                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:61:24
	mul.f32 	%f14, %f35, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	.loc	1 62 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:62:20
	mov.b32 	%r38, %f13;
	// begin inline asm
	div.full.f32 %r37, %r38, %r33;
	// end inline asm
	mov.b32 	%f36, %r37;
	.loc	1 63 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:63:20
	mul.f32 	%f37, %f36, %f28;
	.loc	1 64 19                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:64:19
	fma.rn.f32 	%f38, %f33, %f27, %f37;
	.loc	1 65 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:65:20
	// begin inline asm
	div.full.f32 %r40, %r13, %r14;
	// end inline asm
	mov.b32 	%f39, %r40;
	.loc	1 66 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:66:20
	mul.f32 	%f40, %f39, 0f3E800000;
	.loc	1 67 24                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:67:24
	mul.f32 	%f16, %f40, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	1 68 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:68:20
	mov.b32 	%r44, %f15;
	// begin inline asm
	div.full.f32 %r43, %r44, %r33;
	// end inline asm
	mov.b32 	%f41, %r43;
	.loc	1 70 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:70:20
	fma.rn.f32 	%f42, %f41, %f29, %f38;
	.loc	1 71 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:71:20
	// begin inline asm
	div.full.f32 %r46, %r16, %r17;
	// end inline asm
	mov.b32 	%f43, %r46;
	.loc	1 72 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:72:20
	mul.f32 	%f44, %f43, 0f3E800000;
	.loc	1 73 24                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:73:24
	mul.f32 	%f18, %f44, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f17, %f18;
	// end inline asm
	.loc	1 74 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:74:20
	mov.b32 	%r50, %f17;
	// begin inline asm
	div.full.f32 %r49, %r50, %r33;
	// end inline asm
	mov.b32 	%f45, %r49;
	.loc	1 76 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:76:20
	fma.rn.f32 	%f46, %f45, %f30, %f42;
	.loc	1 77 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:77:20
	// begin inline asm
	div.full.f32 %r52, %r19, %r20;
	// end inline asm
	mov.b32 	%f47, %r52;
	.loc	1 78 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:78:20
	mul.f32 	%f48, %f47, 0f3E800000;
	.loc	1 79 24                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:79:24
	mul.f32 	%f20, %f48, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f19, %f20;
	// end inline asm
	.loc	1 80 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:80:20
	mov.b32 	%r56, %f19;
	// begin inline asm
	div.full.f32 %r55, %r56, %r57;
	// end inline asm
	mov.b32 	%f49, %r55;
	.loc	1 82 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:82:20
	// begin inline asm
	div.full.f32 %r58, %r22, %r23;
	// end inline asm
	mov.b32 	%f50, %r58;
	.loc	1 83 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:83:20
	mul.f32 	%f51, %f50, 0f3E800000;
	.loc	1 84 24                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:84:24
	mul.f32 	%f22, %f51, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f21, %f22;
	// end inline asm
	.loc	1 85 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:85:20
	mov.b32 	%r62, %f21;
	// begin inline asm
	div.full.f32 %r61, %r62, %r57;
	// end inline asm
	mov.b32 	%f52, %r61;
	.loc	1 86 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:86:20
	mul.f32 	%f53, %f52, %f28;
	.loc	1 87 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:87:20
	fma.rn.f32 	%f54, %f49, %f27, %f53;
	.loc	1 88 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:88:20
	// begin inline asm
	div.full.f32 %r64, %r24, %r25;
	// end inline asm
	mov.b32 	%f55, %r64;
	.loc	1 89 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:89:20
	mul.f32 	%f56, %f55, 0f3E800000;
	.loc	1 90 24                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:90:24
	mul.f32 	%f24, %f56, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f23, %f24;
	// end inline asm
	.loc	1 91 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:91:20
	mov.b32 	%r68, %f23;
	// begin inline asm
	div.full.f32 %r67, %r68, %r57;
	// end inline asm
	mov.b32 	%f57, %r67;
	.loc	1 93 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:93:20
	fma.rn.f32 	%f58, %f57, %f29, %f54;
	.loc	1 94 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:94:20
	// begin inline asm
	div.full.f32 %r70, %r26, %r27;
	// end inline asm
	mov.b32 	%f59, %r70;
	.loc	1 95 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:95:20
	mul.f32 	%f60, %f59, 0f3E800000;
	.loc	1 96 24                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:96:24
	mul.f32 	%f26, %f60, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f25, %f26;
	// end inline asm
	.loc	1 97 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:97:20
	mov.b32 	%r74, %f25;
	// begin inline asm
	div.full.f32 %r73, %r74, %r57;
	// end inline asm
	mov.b32 	%f61, %r73;
	.loc	1 99 20                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:99:20
	fma.rn.f32 	%f1, %f61, %f30, %f58;
	.loc	1 100 24                        // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:100:24
	setp.lt.f32 	%p24, %f46, 0f00800000;
	mul.f32 	%f62, %f46, 0f4B000000;
	selp.f32 	%f2, %f62, %f46, %p24;
	selp.f32 	%f63, 0fC1B80000, 0f00000000, %p24;
	mov.b32 	%r80, %f2;
	add.s32 	%r81, %r80, -1059760811;
	and.b32  	%r82, %r81, -8388608;
	sub.s32 	%r83, %r80, %r82;
	mov.b32 	%f64, %r83;
	cvt.rn.f32.s32 	%f65, %r82;
	mov.f32 	%f66, 0f34000000;
	fma.rn.ftz.f32 	%f67, %f65, %f66, %f63;
	add.f32 	%f68, %f64, 0fBF800000;
	mov.f32 	%f69, 0f3E1039F6;
	mov.f32 	%f70, 0fBE055027;
	fma.rn.ftz.f32 	%f71, %f70, %f68, %f69;
	mov.f32 	%f72, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f73, %f71, %f68, %f72;
	mov.f32 	%f74, 0f3E0F2955;
	fma.rn.ftz.f32 	%f75, %f73, %f68, %f74;
	mov.f32 	%f76, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f77, %f75, %f68, %f76;
	mov.f32 	%f78, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f79, %f77, %f68, %f78;
	mov.f32 	%f80, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f81, %f79, %f68, %f80;
	mov.f32 	%f82, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f83, %f81, %f68, %f82;
	mov.f32 	%f84, 0fBF000000;
	fma.rn.ftz.f32 	%f85, %f83, %f68, %f84;
	mul.f32 	%f86, %f68, %f85;
	fma.rn.ftz.f32 	%f87, %f86, %f68, %f68;
	mov.f32 	%f88, 0f3F317218;
	fma.rn.ftz.f32 	%f153, %f67, %f88, %f87;
	setp.lt.u32 	%p25, %r80, 2139095040;
	mov.f32 	%f89, 0f7F800000;
	@%p25 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:0:24
	fma.rn.ftz.f32 	%f153, %f2, %f89, %f89;
$L__BB0_2:                              // %__nv_logf.exit
	ld.param.u64 	%rd32, [triton_per_fused_add_div_exp_log_mean_mul_neg_sum_4_param_0];
	.loc	1 100 24                        // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:100:24
	setp.eq.f32 	%p29, %f2, 0f00000000;
	selp.f32 	%f90, 0fFF800000, %f153, %p29;
$L__tmp0:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f90;
	shfl.sync.bfly.b32	%r91, %r90, 16, 31, -1;
	mov.b32 	%f91, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f92, %f90, %f91;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r92, %f92;
	shfl.sync.bfly.b32	%r93, %r92, 8, 31, -1;
	mov.b32 	%f93, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f94, %f92, %f93;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f94;
	shfl.sync.bfly.b32	%r95, %r94, 4, 31, -1;
	mov.b32 	%f95, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f96, %f94, %f95;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f96;
	shfl.sync.bfly.b32	%r97, %r96, 2, 31, -1;
	mov.b32 	%f97, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f98, %f96, %f97;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f98;
	shfl.sync.bfly.b32	%r99, %r98, 1, 31, -1;
	mov.b32 	%f99, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f100, %f98, %f99;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p26, %r2, 0;
	and.b32  	%r100, %r3, 1;
	shl.b32 	%r101, %r100, 2;
	mov.u32 	%r102, global_smem;
	add.s32 	%r110, %r102, %r101;
	mov.b32 	%r85, %f100;
	// begin inline asm
	@%p26 st.shared.b32 [ %r110 + 0 ], %r85;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p27, %r1, 2;
	add.s32 	%r113, %r102, %r78;
	// begin inline asm
	@%p27 ld.shared.b32 %r86, [ %r113 + 0 ];
	// end inline asm
	mov.b32 	%f101, %r86;
	shfl.sync.bfly.b32	%r104, %r86, 1, 31, -1;
	mov.b32 	%f102, %r104;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f103, %f101, %f102;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r105, %r1, 1;
	setp.eq.b32 	%p30, %r105, 1;
	not.pred 	%p31, %p30;
	and.pred  	%p36, %p27, %p31;
	mov.b32 	%r89, %f103;
	// begin inline asm
	@%p36 st.shared.b32 [ %r113 + 0 ], %r89;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f6, [global_smem];
$L__tmp1:
	.loc	1 103 24                        // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:103:24
	setp.lt.f32 	%p32, %f1, 0f00800000;
	mul.f32 	%f104, %f1, 0f4B000000;
	selp.f32 	%f7, %f104, %f1, %p32;
	selp.f32 	%f105, 0fC1B80000, 0f00000000, %p32;
	mov.b32 	%r106, %f7;
	add.s32 	%r107, %r106, -1059760811;
	and.b32  	%r108, %r107, -8388608;
	sub.s32 	%r109, %r106, %r108;
	mov.b32 	%f106, %r109;
	cvt.rn.f32.s32 	%f107, %r108;
	fma.rn.ftz.f32 	%f109, %f107, %f66, %f105;
	add.f32 	%f110, %f106, 0fBF800000;
	fma.rn.ftz.f32 	%f113, %f70, %f110, %f69;
	fma.rn.ftz.f32 	%f115, %f113, %f110, %f72;
	fma.rn.ftz.f32 	%f117, %f115, %f110, %f74;
	fma.rn.ftz.f32 	%f119, %f117, %f110, %f76;
	fma.rn.ftz.f32 	%f121, %f119, %f110, %f78;
	fma.rn.ftz.f32 	%f123, %f121, %f110, %f80;
	fma.rn.ftz.f32 	%f125, %f123, %f110, %f82;
	fma.rn.ftz.f32 	%f127, %f125, %f110, %f84;
	mul.f32 	%f128, %f110, %f127;
	fma.rn.ftz.f32 	%f129, %f128, %f110, %f110;
	fma.rn.ftz.f32 	%f154, %f109, %f88, %f129;
	setp.lt.u32 	%p33, %r106, 2139095040;
	@%p33 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i27
	.loc	1 0 24                          // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:0:24
	fma.rn.ftz.f32 	%f154, %f7, %f89, %f89;
$L__BB0_4:                              // %__nv_logf.exit30
	.loc	1 103 24                        // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:103:24
	setp.eq.f32 	%p38, %f7, 0f00000000;
	selp.f32 	%f132, 0fFF800000, %f154, %p38;
$L__tmp2:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r123, %f132;
	shfl.sync.bfly.b32	%r124, %r123, 16, 31, -1;
	mov.b32 	%f133, %r124;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f134, %f132, %f133;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r125, %f134;
	shfl.sync.bfly.b32	%r126, %r125, 8, 31, -1;
	mov.b32 	%f135, %r126;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f136, %f134, %f135;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r127, %f136;
	shfl.sync.bfly.b32	%r128, %r127, 4, 31, -1;
	mov.b32 	%f137, %r128;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f138, %f136, %f137;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r129, %f138;
	shfl.sync.bfly.b32	%r130, %r129, 2, 31, -1;
	mov.b32 	%f139, %r130;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f140, %f138, %f139;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r131, %f140;
	shfl.sync.bfly.b32	%r132, %r131, 1, 31, -1;
	mov.b32 	%f141, %r132;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f142, %f140, %f141;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r111, %f142;
	// begin inline asm
	@%p26 st.shared.b32 [ %r110 + 0 ], %r111;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p27 ld.shared.b32 %r112, [ %r113 + 0 ];
	// end inline asm
	mov.b32 	%f143, %r112;
	shfl.sync.bfly.b32	%r133, %r112, 1, 31, -1;
	mov.b32 	%f144, %r133;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f145, %f143, %f144;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f145;
	// begin inline asm
	@%p36 st.shared.b32 [ %r113 + 0 ], %r115;
	// end inline asm
	bar.sync 	0;
$L__tmp3:
	.loc	1 107 20                        // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:107:20
	mov.b32 	%r117, %f6;
	mov.b32 	%r118, 1115684864;
	// begin inline asm
	div.full.f32 %r116, %r117, %r118;
	// end inline asm
	mov.b32 	%f146, %r116;
	mov.f32 	%f147, 0f00000000;
	.loc	1 108 13                        // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:108:13
	sub.f32 	%f148, %f147, %f146;
	.loc	1 111 20                        // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:111:20
	ld.shared.u32 	%r120, [global_smem];
	// begin inline asm
	div.full.f32 %r119, %r120, %r118;
	// end inline asm
	mov.b32 	%f149, %r119;
	.loc	1 112 13                        // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:112:13
	sub.f32 	%f150, %f147, %f149;
	.loc	1 114 20                        // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:114:20
	mul.f32 	%f151, %f150, 0fC0400000;
	.loc	1 115 20                        // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:115:20
	fma.rn.f32 	%f152, %f148, 0f40800000, %f151;
	.loc	1 116 4                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:116:4
	bar.sync 	0;
	.loc	1 117 71                        // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:117:71
	and.b32  	%r134, %r1, 63;
	setp.eq.s32 	%p37, %r134, 0;
	mov.b32 	%r122, %f152;
	// begin inline asm
	@%p37 st.global.b32 [ %rd32 + 0 ], { %r122 };
	// end inline asm
	.loc	1 117 4                         // cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py:117:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ns/cns6l44m4yb6rxd7by256qxjeq7jhymqciz2lsaeid2tbrzehqsp.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 220                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 115
.b8 54
.b8 108
.b8 52
.b8 52
.b8 109
.b8 52
.b8 121
.b8 98
.b8 54
.b8 114
.b8 120
.b8 100
.b8 55
.b8 98
.b8 121
.b8 50
.b8 53
.b8 54
.b8 113
.b8 120
.b8 106
.b8 101
.b8 113
.b8 55
.b8 106
.b8 104
.b8 121
.b8 109
.b8 113
.b8 99
.b8 105
.b8 122
.b8 50
.b8 108
.b8 115
.b8 97
.b8 101
.b8 105
.b8 100
.b8 50
.b8 116
.b8 98
.b8 114
.b8 122
.b8 101
.b8 104
.b8 113
.b8 115
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x36 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 101
.b8 120
.b8 112
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 101
.b8 103
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x99:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xae:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 102                                 // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 105                                 // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
