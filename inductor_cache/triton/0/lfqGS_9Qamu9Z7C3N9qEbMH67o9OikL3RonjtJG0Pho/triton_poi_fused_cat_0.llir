; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 640, !dbg !14
  %.frozen = freeze i32 %8, !dbg !15
  %10 = sdiv i32 %.frozen, 10, !dbg !15
  %11 = mul i32 %10, 10, !dbg !16
  %.decomposed = sub i32 %.frozen, %11, !dbg !16
  %12 = srem i32 %10, 4, !dbg !17
  %13 = sdiv i32 %8, 40, !dbg !18
  %14 = icmp slt i32 %.decomposed, 4, !dbg !19
  %15 = add nsw i32 %.decomposed, 1, !dbg !20
  %16 = tail call i32 @llvm.abs.i32(i32 %15, i1 true), !dbg !21
  %17 = add nsw i32 %16, -5, !dbg !22
  %18 = tail call i32 @llvm.abs.i32(i32 %17, i1 true), !dbg !23
  %19 = add nsw i32 %18, -1, !dbg !24
  %20 = icmp ult i32 %19, 4, !dbg !24
  %21 = and i1 %14, %20, !dbg !25
  %.neg = shl nsw i32 %12, 2, !dbg !26
  %22 = shl nsw i32 %13, 4, !dbg !27
  %23 = add nsw i32 %22, %.neg, !dbg !28
  %24 = add nsw i32 %23, 4, !dbg !28
  %25 = sub nsw i32 %24, %18, !dbg !29
  %26 = sext i32 %25 to i64, !dbg !30
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !30
  %28 = and i1 %9, %21, !dbg !31
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %28, i32 0, i1 %28) #1, !dbg !32
  %30 = icmp sgt i32 %.decomposed, 3, !dbg !33
  %31 = add nsw i32 %.decomposed, -4, !dbg !34
  %32 = tail call i32 @llvm.abs.i32(i32 %31, i1 true), !dbg !35
  %33 = add nsw i32 %32, -5, !dbg !36
  %34 = tail call i32 @llvm.abs.i32(i32 %33, i1 true), !dbg !37
  %35 = add nsw i32 %34, -1, !dbg !38
  %36 = icmp ult i32 %35, 4, !dbg !38
  %37 = and i1 %30, %36, !dbg !39
  %38 = sub nsw i32 %24, %34, !dbg !40
  %39 = sext i32 %38 to i64, !dbg !41
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !41
  %41 = and i1 %9, %37, !dbg !42
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %41, i32 0, i1 %41) #1, !dbg !43
  %.v = select i1 %14, i32 %29, i32 %42, !dbg !44
  %43 = sext i32 %8 to i64, !dbg !45
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !45
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %.v, ptr addrspace(1) %44, i1 %9) #1, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqzypv6szuf3lsrrzcermmvmopzhkf3inyuyzhfe3l5jy2ihag44.py", directory: "inductor_cache/qz")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 27, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 57, scope: !7)
!21 = !DILocation(line: 33, column: 52, scope: !7)
!22 = !DILocation(line: 33, column: 40, scope: !7)
!23 = !DILocation(line: 33, column: 33, scope: !7)
!24 = !DILocation(line: 38, column: 19, scope: !7)
!25 = !DILocation(line: 39, column: 20, scope: !7)
!26 = !DILocation(line: 40, column: 93, scope: !7)
!27 = !DILocation(line: 40, column: 122, scope: !7)
!28 = !DILocation(line: 40, column: 88, scope: !7)
!29 = !DILocation(line: 40, column: 119, scope: !7)
!30 = !DILocation(line: 40, column: 31, scope: !7)
!31 = !DILocation(line: 40, column: 135, scope: !7)
!32 = !DILocation(line: 40, column: 127, scope: !7)
!33 = !DILocation(line: 43, column: 20, scope: !7)
!34 = !DILocation(line: 46, column: 60, scope: !7)
!35 = !DILocation(line: 46, column: 53, scope: !7)
!36 = !DILocation(line: 46, column: 41, scope: !7)
!37 = !DILocation(line: 46, column: 34, scope: !7)
!38 = !DILocation(line: 51, column: 20, scope: !7)
!39 = !DILocation(line: 52, column: 20, scope: !7)
!40 = !DILocation(line: 53, column: 120, scope: !7)
!41 = !DILocation(line: 53, column: 31, scope: !7)
!42 = !DILocation(line: 53, column: 136, scope: !7)
!43 = !DILocation(line: 53, column: 128, scope: !7)
!44 = !DILocation(line: 0, scope: !7)
!45 = !DILocation(line: 57, column: 25, scope: !7)
!46 = !DILocation(line: 57, column: 37, scope: !7)
!47 = !DILocation(line: 57, column: 4, scope: !7)
