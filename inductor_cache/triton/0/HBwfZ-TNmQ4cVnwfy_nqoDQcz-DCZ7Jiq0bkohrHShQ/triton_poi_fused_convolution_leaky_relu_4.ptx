//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_leaky_relu_4 // -- Begin function triton_poi_fused_convolution_leaky_relu_4
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_leaky_relu_4
.visible .entry triton_poi_fused_convolution_leaky_relu_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_4_param_3,
	.param .u32 triton_poi_fused_convolution_leaky_relu_4_param_4,
	.param .u32 triton_poi_fused_convolution_leaky_relu_4_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<52>;
	.reg .b16 	%rs<21>;
	.reg .b32 	%r<159>;
	.reg .f32 	%f<55>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_convolution_leaky_relu_4_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_convolution_leaky_relu_4_param_1];
$L__tmp0:
	.loc	1 22 28                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:22:33
	shl.b32 	%r62, %r1, 8;
	ld.param.u64 	%rd9, [triton_poi_fused_convolution_leaky_relu_4_param_2];
	ld.param.u64 	%rd10, [triton_poi_fused_convolution_leaky_relu_4_param_3];
	.loc	1 23 44                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:23:44
	mov.u32 	%r63, %tid.x;
	and.b32  	%r64, %r63, 127;
	shl.b32 	%r65, %r63, 1;
	and.b32  	%r66, %r65, 254;
	shl.b32 	%r67, %r63, 3;
	and.b32  	%r68, %r67, 248;
	shl.b32 	%r69, %r63, 2;
	and.b32  	%r70, %r69, 252;
	.loc	1 23 23                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:23:23
	or.b32  	%r71, %r62, %r64;
	or.b32  	%r72, %r71, 128;
	or.b32  	%r73, %r62, %r66;
	or.b32  	%r74, %r62, %r68;
	or.b32  	%r75, %r62, %r70;
	.loc	1 24 21                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:24:21
	setp.lt.s32 	%p28, %r71, 256;
	setp.lt.s32 	%p29, %r72, 256;
	setp.lt.s32 	%p19, %r73, 256;
	setp.lt.s32 	%p30, %r74, 256;
	setp.lt.s32 	%p31, %r75, 256;
	.loc	1 25 28                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:25:33
	shl.b32 	%r76, %r2, 2;
	.loc	1 26 44                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:26:44
	bfe.u32 	%r77, %r63, 5, 2;
	bfe.u32 	%r78, %r63, 6, 1;
	.loc	1 26 23                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:26:23
	or.b32  	%r79, %r76, %r77;
	or.b32  	%r80, %r76, %r78;
	or.b32  	%r81, %r80, 2;
	.loc	1 27 21                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:27:21
	setp.lt.s32 	%p32, %r76, 2116;
	setp.lt.s32 	%p33, %r79, 2116;
	setp.lt.s32 	%p34, %r80, 2116;
	setp.lt.s32 	%p35, %r81, 2116;
	.loc	1 30 19                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:30:19
	bfe.s32 	%r82, %r1, 23, 1;
	shr.u32 	%r83, %r82, 26;
	add.s32 	%r84, %r73, %r83;
	and.b32  	%r85, %r84, -64;
	sub.s32 	%r86, %r73, %r85;
	.loc	1 31 19                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:31:19
	shr.s32 	%r88, %r74, 31;
	shr.u32 	%r89, %r88, 26;
	add.s32 	%r90, %r74, %r89;
	shr.s32 	%r91, %r90, 6;
	.loc	1 30 19                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:30:19
	and.b32  	%r92, %r90, -64;
	sub.s32 	%r93, %r74, %r92;
	.loc	1 31 19                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:31:19
	shr.s32 	%r95, %r75, 31;
	shr.u32 	%r96, %r95, 26;
	add.s32 	%r97, %r75, %r96;
	shr.s32 	%r98, %r97, 6;
	.loc	1 30 19                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:30:19
	and.b32  	%r99, %r97, -64;
	sub.s32 	%r100, %r75, %r99;
	.loc	1 32 35                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:32:35
	mad.lo.s32 	%r101, %r71, 2116, %r76;
	mad.lo.s32 	%r102, %r72, 2116, %r76;
	.loc	1 32 30                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:32:30
	mul.wide.s32 	%rd11, %r101, 4;
	add.s64 	%rd1, %rd7, %rd11;
	mul.wide.s32 	%rd12, %r102, 4;
	add.s64 	%rd2, %rd7, %rd12;
	.loc	1 32 53                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:32:53
	and.pred  	%p1, %p32, %p28;
	and.pred  	%p2, %p32, %p29;
	and.pred  	%p25, %p30, %p33;
	and.pred  	%p26, %p31, %p34;
	and.pred  	%p27, %p35, %p31;
	.loc	1 32 45                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:32:45
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r14, %r16, %r18 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd2 + 0 ];
	// end inline asm
	and.b32  	%r103, %r69, 508;
	shl.b32 	%r104, %r64, 2;
	mov.u32 	%r105, global_smem;
	add.s32 	%r11, %r105, %r104;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	add.s32 	%r13, %r11, 1040;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	add.s32 	%r15, %r11, 2080;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	add.s32 	%r17, %r11, 3120;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r11, 512;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r11, 1552;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r11, 2592;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r11, 3632;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r106, %r63, 2;
	and.b32  	%r107, %r106, 16;
	add.s32 	%r108, %r105, %r107;
	shl.b32 	%r109, %r103, 2;
	add.s32 	%r110, %r108, %r109;
	or.b32  	%r111, %r103, 512;
	shr.u32 	%r112, %r111, 4;
	and.b32  	%r113, %r112, 48;
	add.s32 	%r114, %r105, %r113;
	add.s32 	%r115, %r114, %r109;
	add.s32 	%r29, %r11, 1032;
	add.s32 	%r31, %r11, 2064;
	add.s32 	%r33, %r11, 3096;
	add.s32 	%r37, %r11, 1544;
	add.s32 	%r39, %r11, 2576;
	add.s32 	%r41, %r11, 3608;
	shl.b32 	%r116, %r66, 2;
	add.s32 	%r45, %r105, %r116;
	.loc	1 33 30                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:33:30
	mul.wide.s32 	%rd13, %r86, 4;
	add.s64 	%rd3, %rd8, %rd13;
	.loc	1 39 32                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:39:32
	shl.b32 	%r117, %r70, 2;
	add.s32 	%r118, %r105, %r117;
	.loc	1 32 45                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:32:45
	ld.shared.v4.f32 	{%f1, %f2, %f3, %f4}, [%r110];
	ld.shared.v4.f32 	{%f5, %f6, %f7, %f8}, [%r115+2048];
	bar.sync 	0;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	// begin inline asm
	@%p3 st.shared.b32 [ %r29 + 0 ], %r14;
	// end inline asm
	// begin inline asm
	@%p3 st.shared.b32 [ %r31 + 0 ], %r16;
	// end inline asm
	// begin inline asm
	@%p3 st.shared.b32 [ %r33 + 0 ], %r18;
	// end inline asm
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	// begin inline asm
	@%p3 st.shared.b32 [ %r37 + 0 ], %r22;
	// end inline asm
	// begin inline asm
	@%p3 st.shared.b32 [ %r39 + 0 ], %r24;
	// end inline asm
	// begin inline asm
	@%p3 st.shared.b32 [ %r41 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.f32 	{%f9, %f10}, [%r45];
	ld.shared.v2.f32 	{%f11, %f12}, [%r45+1032];
	ld.shared.v2.f32 	{%f13, %f14}, [%r45+2064];
	ld.shared.v2.f32 	{%f15, %f16}, [%r45+3096];
	.loc	1 33 35                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:33:35
	// begin inline asm
	mov.u32 %r46, 0x0;
	mov.u32 %r47, 0x0;
	@%p19 ld.global.L1::evict_last.v2.b32 { %r46, %r47 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r47;
	mov.b32 	%f18, %r46;
	.loc	1 39 32                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:39:32
	bar.sync 	0;
	// begin inline asm
	@%p3 st.shared.v2.b32 [ %r45 + 0 ], { %r46, %r47 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.f32 	{%f19, %f20, %f21, %f22}, [%r118];
	.loc	1 34 18                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:34:18
	add.f32 	%f23, %f1, %f19;
	add.f32 	%f24, %f2, %f20;
	add.f32 	%f25, %f3, %f21;
	add.f32 	%f26, %f4, %f22;
	add.f32 	%f27, %f5, %f19;
	add.f32 	%f28, %f6, %f20;
	add.f32 	%f29, %f7, %f21;
	add.f32 	%f30, %f8, %f22;
	add.f32 	%f31, %f9, %f18;
	add.f32 	%f32, %f13, %f18;
	add.f32 	%f33, %f15, %f18;
	add.f32 	%f34, %f10, %f17;
	add.f32 	%f35, %f14, %f17;
	add.f32 	%f36, %f16, %f17;
	add.f32 	%f37, %f11, %f18;
	add.f32 	%f38, %f12, %f17;
	.loc	1 36 18                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:36:18
	setp.gt.f32 	%p36, %f38, 0f00000000;
	selp.u16 	%rs9, 1, 0, %p36;
	setp.gt.f32 	%p37, %f37, 0f00000000;
	selp.u16 	%rs10, -1, 0, %p37;
	shl.b16 	%rs11, %rs10, 1;
	or.b16  	%rs12, %rs9, %rs11;
	setp.gt.f32 	%p38, %f36, 0f00000000;
	setp.gt.f32 	%p39, %f35, 0f00000000;
	selp.u16 	%rs6, 1, 0, %p39;
	setp.gt.f32 	%p40, %f34, 0f00000000;
	selp.u16 	%rs2, 1, 0, %p40;
	setp.gt.f32 	%p41, %f33, 0f00000000;
	setp.gt.f32 	%p42, %f32, 0f00000000;
	setp.gt.f32 	%p43, %f31, 0f00000000;
	setp.gt.f32 	%p44, %f30, 0f00000000;
	setp.gt.f32 	%p45, %f29, 0f00000000;
	setp.gt.f32 	%p46, %f28, 0f00000000;
	setp.gt.f32 	%p47, %f27, 0f00000000;
	setp.gt.f32 	%p48, %f26, 0f00000000;
	setp.gt.f32 	%p49, %f25, 0f00000000;
	setp.gt.f32 	%p50, %f24, 0f00000000;
	setp.gt.f32 	%p51, %f23, 0f00000000;
	.loc	1 38 18                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:38:18
	mul.f32 	%f39, %f23, 0f3C23D70A;
	mul.f32 	%f40, %f24, 0f3C23D70A;
	mul.f32 	%f41, %f25, 0f3C23D70A;
	mul.f32 	%f42, %f26, 0f3C23D70A;
	mul.f32 	%f43, %f27, 0f3C23D70A;
	mul.f32 	%f44, %f28, 0f3C23D70A;
	mul.f32 	%f45, %f29, 0f3C23D70A;
	mul.f32 	%f46, %f30, 0f3C23D70A;
	.loc	1 39 32                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:39:32
	selp.f32 	%f47, %f23, %f39, %p51;
	selp.f32 	%f48, %f24, %f40, %p50;
	selp.f32 	%f49, %f25, %f41, %p49;
	selp.f32 	%f50, %f26, %f42, %p48;
	selp.f32 	%f51, %f27, %f43, %p47;
	selp.f32 	%f52, %f28, %f44, %p46;
	selp.f32 	%f53, %f29, %f45, %p45;
	selp.f32 	%f54, %f30, %f46, %p44;
	.loc	1 40 33                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:33
	shl.b32 	%r119, %r79, 6;
	shl.b32 	%r120, %r80, 6;
	shl.b32 	%r121, %r81, 6;
	.loc	1 40 30                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:30
	add.s32 	%r122, %r119, %r93;
	.loc	1 40 38                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:38
	mad.lo.s32 	%r123, %r91, 135424, %r122;
	.loc	1 40 30                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:30
	mad.lo.s32 	%r124, %r98, 135424, %r100;
	.loc	1 40 38                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:38
	add.s32 	%r125, %r124, %r120;
	add.s32 	%r126, %r124, %r121;
	.loc	1 40 25                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:25
	cvt.s64.s32 	%rd14, %r123;
	add.s64 	%rd4, %rd9, %rd14;
	.loc	1 40 56                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:56
	bar.sync 	0;
	selp.u16 	%rs1, 1, 0, %p43;
	selp.u16 	%rs3, 1, 0, %p37;
	selp.u16 	%rs5, 1, 0, %p42;
	selp.u16 	%rs7, 1, 0, %p41;
	and.b32  	%r127, %r67, 1016;
	add.s32 	%r48, %r105, %r66;
	// begin inline asm
	@%p3 st.shared.v2.b8 [ %r48 + 0 ], { %rs1, %rs2 };
	// end inline asm
	add.s32 	%r49, %r48, 264;
	and.b16  	%rs4, %rs12, 1;
	// begin inline asm
	@%p3 st.shared.v2.b8 [ %r49 + 0 ], { %rs3, %rs4 };
	// end inline asm
	add.s32 	%r50, %r48, 528;
	// begin inline asm
	@%p3 st.shared.v2.b8 [ %r50 + 0 ], { %rs5, %rs6 };
	// end inline asm
	add.s32 	%r51, %r48, 792;
	.loc	1 36 18                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:36:18
	selp.u16 	%rs8, 1, 0, %p38;
	.loc	1 40 56                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:56
	// begin inline asm
	@%p3 st.shared.v2.b8 [ %r51 + 0 ], { %rs7, %rs8 };
	// end inline asm
	bar.sync 	0;
	and.b32  	%r128, %r106, 24;
	add.s32 	%r129, %r105, %r128;
	add.s32 	%r130, %r129, %r127;
	ld.shared.v2.u32 	{%r131, %r132}, [%r130];
	bfe.u32 	%r135, %r131, 0, 8;
	bfe.u32 	%r136, %r131, 16, 8;
	cvt.u16.u32 	%rs13, %r136;
	bfe.u32 	%r137, %r131, 8, 8;
	cvt.u16.u32 	%rs14, %r137;
	mov.b32 	%r138, {%rs14, %rs13};
	and.b32  	%r139, %r138, 65537;
	bfe.u32 	%r140, %r132, 0, 8;
	bfe.u32 	%r141, %r132, 16, 8;
	cvt.u16.u32 	%rs15, %r141;
	bfe.u32 	%r142, %r132, 8, 8;
	cvt.u16.u32 	%rs16, %r142;
	mov.b32 	%r143, {%rs16, %rs15};
	and.b32  	%r144, %r143, 65537;
	mov.b32 	{%rs17, %rs18}, %r139;
	cvt.u32.u16 	%r145, %rs18;
	bfe.u32 	%r146, %r131, 24, 1;
	prmt.b32 	%r147, %r145, %r146, 0x3340U;
	cvt.u32.u16 	%r148, %rs17;
	and.b32  	%r149, %r135, 1;
	prmt.b32 	%r150, %r149, %r148, 0x3340U;
	prmt.b32 	%r151, %r150, %r147, 0x5410U;
	mov.b32 	{%rs19, %rs20}, %r144;
	cvt.u32.u16 	%r152, %rs20;
	bfe.u32 	%r153, %r132, 24, 1;
	prmt.b32 	%r154, %r152, %r153, 0x3340U;
	cvt.u32.u16 	%r155, %rs19;
	and.b32  	%r156, %r140, 1;
	prmt.b32 	%r157, %r156, %r155, 0x3340U;
	prmt.b32 	%r158, %r157, %r154, 0x5410U;
	// begin inline asm
	@%p25 st.global.v2.b32 [ %rd4 + 0 ], { %r151, %r158 };
	// end inline asm
	.loc	1 41 25                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:41:25
	mul.wide.s32 	%rd15, %r125, 4;
	add.s64 	%rd5, %rd10, %rd15;
	mul.wide.s32 	%rd16, %r126, 4;
	add.s64 	%rd6, %rd10, %rd16;
	.loc	1 41 56                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:41:56
	mov.b32 	%r54, %f47;
	mov.b32 	%r55, %f48;
	mov.b32 	%r56, %f49;
	mov.b32 	%r57, %f50;
	// begin inline asm
	@%p26 st.global.v4.b32 [ %rd5 + 0 ], { %r54, %r55, %r56, %r57 };
	// end inline asm
	mov.b32 	%r58, %f51;
	mov.b32 	%r59, %f52;
	mov.b32 	%r60, %f53;
	mov.b32 	%r61, %f54;
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd6 + 0 ], { %r58, %r59, %r60, %r61 };
	// end inline asm
	.loc	1 41 4                          // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:41:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/m4/cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 52
.b8 54
.b8 101
.b8 117
.b8 110
.b8 52
.b8 52
.b8 114
.b8 50
.b8 116
.b8 120
.b8 114
.b8 99
.b8 50
.b8 98
.b8 52
.b8 106
.b8 51
.b8 107
.b8 122
.b8 115
.b8 112
.b8 50
.b8 113
.b8 103
.b8 102
.b8 50
.b8 50
.b8 105
.b8 109
.b8 101
.b8 103
.b8 102
.b8 52
.b8 118
.b8 109
.b8 105
.b8 99
.b8 98
.b8 102
.b8 103
.b8 100
.b8 115
.b8 99
.b8 122
.b8 102
.b8 120
.b8 52
.b8 110
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 52
.b8 0
	}
	.section	.debug_macinfo	{	}
