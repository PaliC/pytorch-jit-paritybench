; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_native_layer_norm_9(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 5, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 31, !dbg !12
  %11 = or disjoint i32 %8, %10, !dbg !13
  %12 = icmp slt i32 %11, 20, !dbg !14
  %13 = shl i32 %11, 2, !dbg !15
  %14 = sext i32 %13 to i64, !dbg !16
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !16
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 %12) #1, !dbg !17
  %17 = getelementptr float, ptr addrspace(1) %1, i64 %14, !dbg !18
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %12) #1, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #1, !dbg !20
  %20 = or disjoint i32 %13, 1, !dbg !21
  %21 = sext i32 %20 to i64, !dbg !22
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !22
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %12) #1, !dbg !23
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %21, !dbg !24
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %12) #1, !dbg !25
  %26 = getelementptr i8, ptr addrspace(1) %2, i64 4, !dbg !26
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #1, !dbg !27
  %28 = or disjoint i32 %13, 2, !dbg !28
  %29 = sext i32 %28 to i64, !dbg !29
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !29
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %12) #1, !dbg !30
  %32 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !31
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %12) #1, !dbg !32
  %34 = getelementptr i8, ptr addrspace(1) %2, i64 8, !dbg !33
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #1, !dbg !34
  %36 = or disjoint i32 %13, 3, !dbg !35
  %37 = sext i32 %36 to i64, !dbg !36
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !36
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %12) #1, !dbg !37
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !38
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %12) #1, !dbg !39
  %42 = getelementptr i8, ptr addrspace(1) %2, i64 12, !dbg !40
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #1, !dbg !41
  %44 = insertelement <2 x i32> poison, i32 %16, i64 0, !dbg !17
  %45 = insertelement <2 x i32> %44, i32 %23, i64 1, !dbg !17
  %46 = bitcast <2 x i32> %45 to <2 x float>, !dbg !17
  %47 = insertelement <2 x i32> poison, i32 %18, i64 0, !dbg !19
  %48 = insertelement <2 x i32> %47, i32 %25, i64 1, !dbg !19
  %49 = bitcast <2 x i32> %48 to <2 x float>, !dbg !19
  %50 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !20
  %51 = insertelement <2 x i32> %50, i32 %27, i64 1, !dbg !20
  %52 = bitcast <2 x i32> %51 to <2 x float>, !dbg !20
  %53 = fadd <2 x float> %49, %52, !dbg !42
  %54 = fadd <2 x float> %53, %46, !dbg !43
  %55 = extractelement <2 x float> %54, i64 0, !dbg !44
  %56 = extractelement <2 x float> %54, i64 1, !dbg !45
  %57 = fadd float %55, %56, !dbg !46
  %58 = insertelement <2 x i32> poison, i32 %31, i64 0, !dbg !30
  %59 = insertelement <2 x i32> %58, i32 %39, i64 1, !dbg !30
  %60 = bitcast <2 x i32> %59 to <2 x float>, !dbg !30
  %61 = insertelement <2 x i32> poison, i32 %33, i64 0, !dbg !32
  %62 = insertelement <2 x i32> %61, i32 %41, i64 1, !dbg !32
  %63 = bitcast <2 x i32> %62 to <2 x float>, !dbg !32
  %64 = insertelement <2 x i32> poison, i32 %35, i64 0, !dbg !34
  %65 = insertelement <2 x i32> %64, i32 %43, i64 1, !dbg !34
  %66 = bitcast <2 x i32> %65 to <2 x float>, !dbg !34
  %67 = fadd <2 x float> %63, %66, !dbg !47
  %68 = fadd <2 x float> %67, %60, !dbg !48
  %69 = extractelement <2 x float> %68, i64 0, !dbg !49
  %70 = fadd float %57, %69, !dbg !50
  %71 = extractelement <2 x float> %68, i64 1, !dbg !51
  %72 = fadd float %70, %71, !dbg !52
  %73 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %72, float 4.000000e+00) #1, !dbg !53
  %74 = fsub float %55, %73, !dbg !44
  %75 = fmul float %74, %74, !dbg !54
  %76 = fsub float %56, %73, !dbg !45
  %77 = fmul float %76, %76, !dbg !55
  %78 = fadd float %75, %77, !dbg !56
  %79 = fsub float %69, %73, !dbg !49
  %80 = fmul float %79, %79, !dbg !57
  %81 = fadd float %80, %78, !dbg !58
  %82 = fsub float %71, %73, !dbg !51
  %83 = fmul float %82, %82, !dbg !59
  %84 = fadd float %81, %83, !dbg !60
  %85 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %84, float 4.000000e+00) #1, !dbg !61
  %86 = sext i32 %11 to i64, !dbg !62
  %87 = getelementptr float, ptr addrspace(1) %3, i64 %86, !dbg !62
  %88 = bitcast float %73 to i32, !dbg !63
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %88, ptr addrspace(1) %87, i1 %12) #1, !dbg !63
  %89 = getelementptr float, ptr addrspace(1) %4, i64 %86, !dbg !64
  %90 = bitcast float %85 to i32, !dbg !65
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %90, ptr addrspace(1) %89, i1 %12) #1, !dbg !65
  ret void, !dbg !66
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpexxufsslzpmutvjixb6mlcksar5r7ipe6xfarxjxdgbokkdcwf.py", directory: "inductor_cache/pe")
!4 = !{ptr @triton_poi_fused_add_native_layer_norm_9, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_native_layer_norm_9, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_native_layer_norm_9", linkageName: "triton_poi_fused_add_native_layer_norm_9", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 26, column: 30, scope: !7)
!19 = !DILocation(line: 26, column: 37, scope: !7)
!20 = !DILocation(line: 27, column: 19, scope: !7)
!21 = !DILocation(line: 29, column: 34, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 41, scope: !7)
!24 = !DILocation(line: 30, column: 30, scope: !7)
!25 = !DILocation(line: 30, column: 41, scope: !7)
!26 = !DILocation(line: 31, column: 30, scope: !7)
!27 = !DILocation(line: 31, column: 19, scope: !7)
!28 = !DILocation(line: 33, column: 35, scope: !7)
!29 = !DILocation(line: 33, column: 31, scope: !7)
!30 = !DILocation(line: 33, column: 42, scope: !7)
!31 = !DILocation(line: 34, column: 31, scope: !7)
!32 = !DILocation(line: 34, column: 42, scope: !7)
!33 = !DILocation(line: 35, column: 31, scope: !7)
!34 = !DILocation(line: 35, column: 20, scope: !7)
!35 = !DILocation(line: 37, column: 35, scope: !7)
!36 = !DILocation(line: 37, column: 31, scope: !7)
!37 = !DILocation(line: 37, column: 42, scope: !7)
!38 = !DILocation(line: 38, column: 31, scope: !7)
!39 = !DILocation(line: 38, column: 42, scope: !7)
!40 = !DILocation(line: 39, column: 31, scope: !7)
!41 = !DILocation(line: 39, column: 20, scope: !7)
!42 = !DILocation(line: 41, column: 18, scope: !7)
!43 = !DILocation(line: 42, column: 18, scope: !7)
!44 = !DILocation(line: 54, column: 19, scope: !7)
!45 = !DILocation(line: 56, column: 20, scope: !7)
!46 = !DILocation(line: 45, column: 19, scope: !7)
!47 = !DILocation(line: 46, column: 20, scope: !7)
!48 = !DILocation(line: 47, column: 20, scope: !7)
!49 = !DILocation(line: 59, column: 20, scope: !7)
!50 = !DILocation(line: 48, column: 20, scope: !7)
!51 = !DILocation(line: 62, column: 20, scope: !7)
!52 = !DILocation(line: 51, column: 20, scope: !7)
!53 = !DILocation(line: 53, column: 20, scope: !7)
!54 = !DILocation(line: 55, column: 20, scope: !7)
!55 = !DILocation(line: 57, column: 20, scope: !7)
!56 = !DILocation(line: 58, column: 20, scope: !7)
!57 = !DILocation(line: 60, column: 20, scope: !7)
!58 = !DILocation(line: 61, column: 20, scope: !7)
!59 = !DILocation(line: 63, column: 20, scope: !7)
!60 = !DILocation(line: 64, column: 20, scope: !7)
!61 = !DILocation(line: 65, column: 20, scope: !7)
!62 = !DILocation(line: 66, column: 25, scope: !7)
!63 = !DILocation(line: 66, column: 37, scope: !7)
!64 = !DILocation(line: 67, column: 25, scope: !7)
!65 = !DILocation(line: 67, column: 37, scope: !7)
!66 = !DILocation(line: 67, column: 4, scope: !7)
