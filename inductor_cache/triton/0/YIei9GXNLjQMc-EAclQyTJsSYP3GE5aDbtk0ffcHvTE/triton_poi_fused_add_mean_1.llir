; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_mean_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 6, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 62, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 64, !dbg !14
  %12 = shl i32 %10, 2, !dbg !15
  %13 = or disjoint i32 %12, 4, !dbg !15
  %14 = sext i32 %12 to i64, !dbg !16
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !16
  %16 = sext i32 %13 to i64, !dbg !16
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !16
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 %11) #1, !dbg !17
  %19 = bitcast i32 %18 to float, !dbg !17
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %11) #1, !dbg !17
  %21 = bitcast i32 %20 to float, !dbg !17
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !18
  %23 = bitcast i32 %22 to float, !dbg !18
  %24 = or disjoint i32 %12, 1, !dbg !19
  %25 = or disjoint i32 %12, 5, !dbg !19
  %26 = sext i32 %24 to i64, !dbg !20
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !20
  %28 = sext i32 %25 to i64, !dbg !20
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !20
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %11) #1, !dbg !21
  %31 = bitcast i32 %30 to float, !dbg !21
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %11) #1, !dbg !21
  %33 = bitcast i32 %32 to float, !dbg !21
  %34 = or disjoint i32 %12, 2, !dbg !22
  %35 = or disjoint i32 %12, 6, !dbg !22
  %36 = sext i32 %34 to i64, !dbg !23
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !23
  %38 = sext i32 %35 to i64, !dbg !23
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !23
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %11) #1, !dbg !24
  %41 = bitcast i32 %40 to float, !dbg !24
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %11) #1, !dbg !24
  %43 = bitcast i32 %42 to float, !dbg !24
  %44 = or disjoint i32 %12, 3, !dbg !25
  %45 = or disjoint i32 %12, 7, !dbg !25
  %46 = sext i32 %44 to i64, !dbg !26
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !26
  %48 = sext i32 %45 to i64, !dbg !26
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !26
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 %11) #1, !dbg !27
  %51 = bitcast i32 %50 to float, !dbg !27
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %11) #1, !dbg !27
  %53 = bitcast i32 %52 to float, !dbg !27
  %54 = fadd float %19, %23, !dbg !28
  %55 = fadd float %21, %23, !dbg !28
  %56 = fadd float %23, %31, !dbg !29
  %57 = fadd float %23, %33, !dbg !29
  %58 = fadd float %54, %56, !dbg !30
  %59 = fadd float %55, %57, !dbg !30
  %60 = fadd float %23, %41, !dbg !31
  %61 = fadd float %23, %43, !dbg !31
  %62 = fadd float %58, %60, !dbg !32
  %63 = fadd float %59, %61, !dbg !32
  %64 = fadd float %23, %51, !dbg !33
  %65 = fadd float %23, %53, !dbg !33
  %66 = fadd float %62, %64, !dbg !34
  %67 = fadd float %63, %65, !dbg !34
  %68 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %66, float 4.000000e+00) #1, !dbg !35
  %69 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %67, float 4.000000e+00) #1, !dbg !35
  %70 = sext i32 %10 to i64, !dbg !36
  %71 = getelementptr float, ptr addrspace(1) %2, i64 %70, !dbg !36
  %72 = bitcast float %68 to i32, !dbg !37
  %73 = bitcast float %69 to i32, !dbg !37
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %72, i32 %73, ptr addrspace(1) %71, i1 %11) #1, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ch4iwmipufr23x3t7cam6ixhmcjvew3lj4xpsif2ogc4qmeoynpa.py", directory: "inductor_cache/h4")
!4 = !{ptr @triton_poi_fused_add_mean_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mean_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mean_1", linkageName: "triton_poi_fused_add_mean_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 34, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 41, scope: !7)
!22 = !DILocation(line: 29, column: 34, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 41, scope: !7)
!25 = !DILocation(line: 30, column: 35, scope: !7)
!26 = !DILocation(line: 30, column: 31, scope: !7)
!27 = !DILocation(line: 30, column: 42, scope: !7)
!28 = !DILocation(line: 31, column: 18, scope: !7)
!29 = !DILocation(line: 32, column: 18, scope: !7)
!30 = !DILocation(line: 33, column: 18, scope: !7)
!31 = !DILocation(line: 34, column: 18, scope: !7)
!32 = !DILocation(line: 35, column: 18, scope: !7)
!33 = !DILocation(line: 36, column: 20, scope: !7)
!34 = !DILocation(line: 37, column: 19, scope: !7)
!35 = !DILocation(line: 39, column: 20, scope: !7)
!36 = !DILocation(line: 40, column: 25, scope: !7)
!37 = !DILocation(line: 40, column: 37, scope: !7)
!38 = !DILocation(line: 40, column: 4, scope: !7)
