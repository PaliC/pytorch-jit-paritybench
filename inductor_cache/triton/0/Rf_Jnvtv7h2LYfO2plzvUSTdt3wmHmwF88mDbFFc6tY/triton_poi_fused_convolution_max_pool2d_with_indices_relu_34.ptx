//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_max_pool2d_with_indices_relu_34 // -- Begin function triton_poi_fused_convolution_max_pool2d_with_indices_relu_34
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_max_pool2d_with_indices_relu_34
.visible .entry triton_poi_fused_convolution_max_pool2d_with_indices_relu_34(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_max_pool2d_with_indices_relu_34_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_max_pool2d_with_indices_relu_34_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_max_pool2d_with_indices_relu_34_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_max_pool2d_with_indices_relu_34_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_max_pool2d_with_indices_relu_34_param_4,
	.param .u32 triton_poi_fused_convolution_max_pool2d_with_indices_relu_34_param_5,
	.param .u32 triton_poi_fused_convolution_max_pool2d_with_indices_relu_34_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<99>;
	.reg .b16 	%rs<54>;
	.reg .b32 	%r<284>;
	.reg .f32 	%f<89>;
	.reg .b64 	%rd<32>;
	.loc	1 19 0                          // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:19:0

// %bb.0:
	ld.param.u64 	%rd18, [triton_poi_fused_convolution_max_pool2d_with_indices_relu_34_param_0];
	ld.param.u64 	%rd19, [triton_poi_fused_convolution_max_pool2d_with_indices_relu_34_param_1];
$L__tmp0:
	.loc	1 22 28                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:22:33
	shl.b32 	%r136, %r1, 8;
	ld.param.u64 	%rd20, [triton_poi_fused_convolution_max_pool2d_with_indices_relu_34_param_2];
	.loc	1 23 44                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:23:44
	mov.u32 	%r137, %tid.x;
	ld.param.u64 	%rd21, [triton_poi_fused_convolution_max_pool2d_with_indices_relu_34_param_3];
	shl.b32 	%r139, %r137, 2;
	ld.param.u64 	%rd22, [triton_poi_fused_convolution_max_pool2d_with_indices_relu_34_param_4];
	and.b32  	%r140, %r139, 12;
	and.b32  	%r141, %r139, 252;
	bfe.u32 	%r142, %r137, 2, 6;
	or.b32  	%r143, %r142, 64;
	or.b32  	%r144, %r142, 128;
	or.b32  	%r145, %r142, 192;
	and.b32  	%r146, %r137, 255;
	.loc	1 23 23                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:23:23
	or.b32  	%r147, %r136, %r141;
	or.b32  	%r148, %r136, %r142;
	or.b32  	%r149, %r136, %r143;
	or.b32  	%r150, %r136, %r144;
	or.b32  	%r151, %r136, %r145;
	or.b32  	%r152, %r136, %r146;
	.loc	1 25 28                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:25:33
	shl.b32 	%r153, %r2, 4;
	.loc	1 26 44                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:26:44
	bfe.u32 	%r154, %r137, 6, 2;
	.loc	1 26 23                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:26:23
	or.b32  	%r155, %r153, %r154;
	or.b32  	%r156, %r155, 4;
	or.b32  	%r157, %r155, 8;
	or.b32  	%r158, %r155, 12;
	or.b32  	%r159, %r153, %r140;
	.loc	1 27 21                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:27:21
	setp.lt.s32 	%p1, %r155, 16;
	setp.lt.s32 	%p2, %r156, 16;
	setp.lt.s32 	%p3, %r157, 16;
	setp.lt.s32 	%p4, %r158, 16;
	setp.lt.s32 	%p28, %r159, 16;
	.loc	1 30 19                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:30:19
	bfe.s32 	%r160, %r1, 23, 1;
	.loc	1 29 19                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:29:19
	shr.u32 	%r161, %r160, 23;
	.loc	1 30 19                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:30:19
	add.s32 	%r162, %r147, %r161;
	.loc	1 29 19                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:29:19
	and.b32  	%r163, %r162, -512;
	sub.s32 	%r164, %r147, %r163;
	add.s32 	%r165, %r152, %r161;
	and.b32  	%r166, %r165, -512;
	sub.s32 	%r167, %r152, %r166;
	.loc	1 32 39                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:32:39
	shl.b32 	%r168, %r155, 9;
	shl.b32 	%r169, %r156, 9;
	shl.b32 	%r170, %r157, 9;
	shl.b32 	%r171, %r158, 9;
	.loc	1 32 49                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:32:49
	shl.b32 	%r172, %r162, 4;
	and.b32  	%r173, %r172, -8192;
	.loc	1 32 35                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:32:35
	add.s32 	%r174, %r173, %r164;
	.loc	1 32 44                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:32:44
	add.s32 	%r175, %r174, %r168;
	add.s32 	%r176, %r174, %r169;
	add.s32 	%r177, %r174, %r170;
	add.s32 	%r178, %r174, %r171;
	.loc	1 32 30                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:32:30
	mul.wide.s32 	%rd23, %r175, 4;
	add.s64 	%rd1, %rd18, %rd23;
	mul.wide.s32 	%rd24, %r176, 4;
	add.s64 	%rd2, %rd18, %rd24;
	mul.wide.s32 	%rd25, %r177, 4;
	add.s64 	%rd3, %rd18, %rd25;
	mul.wide.s32 	%rd26, %r178, 4;
	add.s64 	%rd4, %rd18, %rd26;
	.loc	1 32 54                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:32:54
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r34, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r28, %r30, %r32, %r34 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r42, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r36, %r38, %r40, %r42 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r50, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r44, %r46, %r48, %r50 }, [ %rd4 + 0 ];
	// end inline asm
	shl.b32 	%r179, %r137, 6;
	and.b32  	%r180, %r179, 4032;
	or.b32  	%r181, %r180, %r154;
	and.b32  	%r182, %r139, 1020;
	shr.u32 	%r183, %r180, 2;
	mov.u32 	%r184, global_smem;
	add.s32 	%r185, %r184, %r183;
	shl.b32 	%r186, %r181, 2;
	add.s32 	%r19, %r185, %r186;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r187, %r180, 16;
	shr.u32 	%r188, %r187, 2;
	add.s32 	%r189, %r184, %r188;
	add.s32 	%r190, %r189, %r186;
	add.s32 	%r21, %r190, 64;
	// begin inline asm
	@%p5 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	or.b32  	%r191, %r180, 32;
	shr.u32 	%r192, %r191, 2;
	add.s32 	%r193, %r184, %r192;
	add.s32 	%r194, %r193, %r186;
	add.s32 	%r23, %r194, 128;
	// begin inline asm
	@%p5 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r195, %r180, 48;
	shr.u32 	%r196, %r195, 2;
	add.s32 	%r197, %r184, %r196;
	add.s32 	%r198, %r197, %r186;
	add.s32 	%r25, %r198, 192;
	// begin inline asm
	@%p5 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r19, 16;
	// begin inline asm
	@%p5 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r190, 80;
	// begin inline asm
	@%p5 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r194, 144;
	// begin inline asm
	@%p5 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r198, 208;
	// begin inline asm
	@%p5 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r19, 32;
	// begin inline asm
	@%p5 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r190, 96;
	// begin inline asm
	@%p5 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r194, 160;
	// begin inline asm
	@%p5 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r198, 224;
	// begin inline asm
	@%p5 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r19, 48;
	// begin inline asm
	@%p5 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r190, 112;
	// begin inline asm
	@%p5 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r194, 176;
	// begin inline asm
	@%p5 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r198, 240;
	// begin inline asm
	@%p5 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r199, %r137, 252;
	add.s32 	%r200, %r184, %r199;
	shl.b32 	%r201, %r182, 2;
	add.s32 	%r202, %r200, %r201;
	or.b32  	%r203, %r182, 1024;
	shr.u32 	%r204, %r203, 2;
	and.b32  	%r205, %r204, 508;
	add.s32 	%r206, %r184, %r205;
	add.s32 	%r207, %r206, %r201;
	ld.shared.f32 	%f1, [%r207+4096];
	ld.shared.f32 	%f2, [%r207+4100];
	ld.shared.f32 	%f3, [%r207+4104];
	ld.shared.f32 	%f4, [%r207+4108];
	or.b32  	%r208, %r182, 2048;
	shr.u32 	%r209, %r208, 2;
	and.b32  	%r210, %r209, 764;
	add.s32 	%r211, %r184, %r210;
	add.s32 	%r212, %r211, %r201;
	ld.shared.f32 	%f5, [%r212+8192];
	ld.shared.f32 	%f6, [%r212+8196];
	ld.shared.f32 	%f7, [%r212+8200];
	ld.shared.f32 	%f8, [%r212+8204];
	or.b32  	%r213, %r182, 3072;
	shr.u32 	%r214, %r213, 2;
	and.b32  	%r215, %r214, 1020;
	add.s32 	%r216, %r184, %r215;
	add.s32 	%r217, %r216, %r201;
	ld.shared.f32 	%f9, [%r217+12288];
	ld.shared.f32 	%f10, [%r217+12292];
	ld.shared.f32 	%f11, [%r217+12296];
	ld.shared.f32 	%f12, [%r217+12300];
	.loc	1 33 30                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:33:30
	mul.wide.s32 	%rd27, %r167, 4;
	add.s64 	%rd5, %rd19, %rd27;
	.loc	1 34 30                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:34:30
	add.s64 	%rd6, %rd20, %rd23;
	add.s64 	%rd7, %rd20, %rd24;
	add.s64 	%rd8, %rd20, %rd25;
	add.s64 	%rd9, %rd20, %rd26;
	.loc	1 35 18                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:35:18
	shl.b32 	%r218, %r146, 2;
	add.s32 	%r68, %r184, %r218;
	shl.b32 	%r219, %r141, 2;
	add.s32 	%r220, %r184, %r219;
$L__tmp1:
	.loc	2 121 29                        // triton_helpers.py:121:29
	add.s32 	%r70, %r68, %r218;
	shl.b32 	%r221, %r142, 3;
	add.s32 	%r222, %r184, %r221;
	shl.b32 	%r223, %r143, 3;
	add.s32 	%r224, %r184, %r223;
	shl.b32 	%r225, %r144, 3;
	add.s32 	%r226, %r184, %r225;
	shl.b32 	%r227, %r145, 3;
	add.s32 	%r228, %r184, %r227;
$L__tmp2:
	.loc	1 32 54                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:32:54
	ld.shared.f32 	%f13, [%r202+12];
	ld.shared.f32 	%f14, [%r202+8];
	ld.shared.f32 	%f15, [%r202+4];
	ld.shared.f32 	%f16, [%r202];
	.loc	1 33 35                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:33:35
	// begin inline asm
	mov.u32 %r69, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r69 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 54                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:34:54
	// begin inline asm
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r52, %r53, %r54, %r55 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r56, %r57, %r58, %r59 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	mov.u32 %r62, 0x0;
	mov.u32 %r63, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r60, %r61, %r62, %r63 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	mov.u32 %r66, 0x0;
	mov.u32 %r67, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r64, %r65, %r66, %r67 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r53;
	mov.b32 	%f18, %r52;
	mov.b32 	%f19, %r55;
	mov.b32 	%f20, %r54;
	mov.b32 	%f21, %r57;
	mov.b32 	%f22, %r56;
	mov.b32 	%f23, %r59;
	mov.b32 	%f24, %r58;
	mov.b32 	%f25, %r61;
	mov.b32 	%f26, %r60;
	mov.b32 	%f27, %r63;
	mov.b32 	%f28, %r62;
	mov.b32 	%f29, %r65;
	mov.b32 	%f30, %r64;
	mov.b32 	%f31, %r67;
	mov.b32 	%f32, %r66;
	.loc	1 35 18                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:35:18
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.f32 	{%f33, %f34, %f35, %f36}, [%r220];
$L__tmp3:
	.loc	2 121 29                        // triton_helpers.py:121:29
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r70 + 0 ], %r69;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f37, [%r222];
	ld.shared.f32 	%f38, [%r224];
	ld.shared.f32 	%f39, [%r226];
	ld.shared.f32 	%f40, [%r228];
$L__tmp4:
	.loc	1 38 18                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:38:18
	add.f32 	%f41, %f16, %f37;
	add.f32 	%f42, %f15, %f37;
	add.f32 	%f43, %f14, %f37;
	add.f32 	%f44, %f13, %f37;
	add.f32 	%f45, %f1, %f38;
	add.f32 	%f46, %f2, %f38;
	add.f32 	%f47, %f3, %f38;
	add.f32 	%f48, %f4, %f38;
	add.f32 	%f49, %f5, %f39;
	add.f32 	%f50, %f6, %f39;
	add.f32 	%f51, %f7, %f39;
	add.f32 	%f52, %f8, %f39;
	add.f32 	%f53, %f9, %f40;
	add.f32 	%f54, %f10, %f40;
	add.f32 	%f55, %f11, %f40;
	add.f32 	%f56, %f12, %f40;
	add.f32 	%f57, %f35, %f32;
	add.f32 	%f58, %f36, %f31;
	add.f32 	%f59, %f33, %f30;
	add.f32 	%f60, %f34, %f29;
	add.f32 	%f61, %f35, %f28;
	add.f32 	%f62, %f36, %f27;
	add.f32 	%f63, %f33, %f26;
	add.f32 	%f64, %f34, %f25;
	add.f32 	%f65, %f35, %f24;
	add.f32 	%f66, %f36, %f23;
	add.f32 	%f67, %f33, %f22;
	add.f32 	%f68, %f34, %f21;
	add.f32 	%f69, %f35, %f20;
	add.f32 	%f70, %f36, %f19;
	add.f32 	%f71, %f33, %f18;
	add.f32 	%f72, %f34, %f17;
$L__tmp5:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p52, %f72, 0f00000000;
	selp.u16 	%rs1, 1, 0, %p52;
	shl.b16 	%rs2, %rs1, 2;
	setp.lt.f32 	%p53, %f71, 0f00000000;
	selp.u16 	%rs3, -1, 0, %p53;
	shl.b16 	%rs4, %rs3, 3;
	or.b16  	%rs5, %rs4, %rs2;
	setp.lt.f32 	%p54, %f70, 0f00000000;
	selp.u16 	%rs6, 1, 0, %p54;
	setp.lt.f32 	%p55, %f69, 0f00000000;
	selp.u16 	%rs7, -1, 0, %p55;
	shl.b16 	%rs8, %rs7, 1;
	or.b16  	%rs9, %rs6, %rs8;
	and.b16  	%rs10, %rs9, 3;
	or.b16  	%rs11, %rs10, %rs5;
	shl.b16 	%rs12, %rs11, 12;
	setp.lt.f32 	%p56, %f68, 0f00000000;
	selp.u16 	%rs13, 1, 0, %p56;
	shl.b16 	%rs14, %rs13, 2;
	setp.lt.f32 	%p57, %f67, 0f00000000;
	selp.u16 	%rs15, -1, 0, %p57;
	shl.b16 	%rs16, %rs15, 3;
	or.b16  	%rs17, %rs16, %rs14;
	setp.lt.f32 	%p58, %f66, 0f00000000;
	selp.u16 	%rs18, 1, 0, %p58;
	setp.lt.f32 	%p59, %f65, 0f00000000;
	selp.u16 	%rs19, -1, 0, %p59;
	shl.b16 	%rs20, %rs19, 1;
	or.b16  	%rs21, %rs18, %rs20;
	and.b16  	%rs22, %rs21, 3;
	or.b16  	%rs23, %rs22, %rs17;
	and.b16  	%rs24, %rs23, 15;
	shl.b16 	%rs25, %rs24, 8;
	or.b16  	%rs26, %rs12, %rs25;
	setp.lt.f32 	%p60, %f64, 0f00000000;
	selp.u16 	%rs27, 1, 0, %p60;
	shl.b16 	%rs28, %rs27, 2;
	setp.lt.f32 	%p61, %f63, 0f00000000;
	selp.u16 	%rs29, -1, 0, %p61;
	shl.b16 	%rs30, %rs29, 3;
	or.b16  	%rs31, %rs30, %rs28;
	setp.lt.f32 	%p62, %f62, 0f00000000;
	selp.u16 	%rs32, 1, 0, %p62;
	setp.lt.f32 	%p63, %f61, 0f00000000;
	selp.u16 	%rs33, -1, 0, %p63;
	shl.b16 	%rs34, %rs33, 1;
	or.b16  	%rs35, %rs32, %rs34;
	and.b16  	%rs36, %rs35, 3;
	or.b16  	%rs37, %rs36, %rs31;
	shl.b16 	%rs38, %rs37, 4;
	setp.lt.f32 	%p64, %f60, 0f00000000;
	selp.u16 	%rs39, 1, 0, %p64;
	shl.b16 	%rs40, %rs39, 2;
	setp.lt.f32 	%p65, %f59, 0f00000000;
	selp.u16 	%rs41, -1, 0, %p65;
	shl.b16 	%rs42, %rs41, 3;
	or.b16  	%rs43, %rs42, %rs40;
	setp.lt.f32 	%p66, %f58, 0f00000000;
	selp.u16 	%rs44, 1, 0, %p66;
	setp.lt.f32 	%p67, %f57, 0f00000000;
	selp.u16 	%rs45, -1, 0, %p67;
	shl.b16 	%rs46, %rs45, 1;
	or.b16  	%rs47, %rs44, %rs46;
	and.b16  	%rs48, %rs47, 3;
	or.b16  	%rs49, %rs48, %rs43;
	and.b16  	%rs50, %rs49, 15;
	or.b16  	%rs51, %rs50, %rs38;
	and.b16  	%rs52, %rs51, 255;
	or.b16  	%rs53, %rs52, %rs26;
	cvt.u32.u16 	%r229, %rs53;
	setp.lt.f32 	%p68, %f56, 0f00000000;
	setp.lt.f32 	%p69, %f55, 0f00000000;
	setp.lt.f32 	%p70, %f54, 0f00000000;
	setp.lt.f32 	%p71, %f53, 0f00000000;
	setp.lt.f32 	%p72, %f52, 0f00000000;
	setp.lt.f32 	%p73, %f51, 0f00000000;
	setp.lt.f32 	%p74, %f50, 0f00000000;
	setp.lt.f32 	%p75, %f49, 0f00000000;
	setp.lt.f32 	%p76, %f48, 0f00000000;
	setp.lt.f32 	%p77, %f47, 0f00000000;
	setp.lt.f32 	%p78, %f46, 0f00000000;
	setp.lt.f32 	%p79, %f45, 0f00000000;
	setp.lt.f32 	%p80, %f44, 0f00000000;
	setp.lt.f32 	%p81, %f43, 0f00000000;
	setp.lt.f32 	%p82, %f42, 0f00000000;
	setp.lt.f32 	%p83, %f41, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	shr.u32 	%r230, %r229, 15;
	and.b32  	%r231, %r230, 1;
	setp.eq.b32 	%p84, %r231, 1;
	selp.f32 	%f73, 0f00000000, %f71, %p84;
	shr.u32 	%r232, %r229, 14;
	and.b32  	%r233, %r232, 1;
	setp.eq.b32 	%p85, %r233, 1;
	selp.f32 	%f74, 0f00000000, %f72, %p85;
	shr.u32 	%r234, %r229, 13;
	and.b32  	%r235, %r234, 1;
	setp.eq.b32 	%p86, %r235, 1;
	selp.f32 	%f75, 0f00000000, %f69, %p86;
	shr.u32 	%r236, %r229, 12;
	and.b32  	%r237, %r236, 1;
	setp.eq.b32 	%p87, %r237, 1;
	selp.f32 	%f76, 0f00000000, %f70, %p87;
	shr.u32 	%r238, %r229, 11;
	and.b32  	%r239, %r238, 1;
	setp.eq.b32 	%p88, %r239, 1;
	selp.f32 	%f77, 0f00000000, %f67, %p88;
	shr.u32 	%r240, %r229, 10;
	and.b32  	%r241, %r240, 1;
	setp.eq.b32 	%p89, %r241, 1;
	selp.f32 	%f78, 0f00000000, %f68, %p89;
	shr.u32 	%r242, %r229, 9;
	and.b32  	%r243, %r242, 1;
	setp.eq.b32 	%p90, %r243, 1;
	selp.f32 	%f79, 0f00000000, %f65, %p90;
	shr.u32 	%r244, %r229, 8;
	and.b32  	%r245, %r244, 1;
	setp.eq.b32 	%p91, %r245, 1;
	selp.f32 	%f80, 0f00000000, %f66, %p91;
	shr.u32 	%r246, %r229, 7;
	and.b32  	%r247, %r246, 1;
	setp.eq.b32 	%p92, %r247, 1;
	selp.f32 	%f81, 0f00000000, %f63, %p92;
	shr.u32 	%r248, %r229, 6;
	and.b32  	%r249, %r248, 1;
	setp.eq.b32 	%p93, %r249, 1;
	selp.f32 	%f82, 0f00000000, %f64, %p93;
	shr.u32 	%r250, %r229, 5;
	and.b32  	%r251, %r250, 1;
	setp.eq.b32 	%p94, %r251, 1;
	selp.f32 	%f83, 0f00000000, %f61, %p94;
	shr.u32 	%r252, %r229, 4;
	and.b32  	%r253, %r252, 1;
	setp.eq.b32 	%p95, %r253, 1;
	selp.f32 	%f84, 0f00000000, %f62, %p95;
	shr.u32 	%r254, %r229, 3;
	and.b32  	%r255, %r254, 1;
	setp.eq.b32 	%p96, %r255, 1;
	selp.f32 	%f85, 0f00000000, %f59, %p96;
	shr.u32 	%r256, %r229, 2;
	and.b32  	%r257, %r256, 1;
	setp.eq.b32 	%p97, %r257, 1;
	selp.f32 	%f86, 0f00000000, %f60, %p97;
	shr.u32 	%r258, %r229, 1;
	and.b32  	%r259, %r258, 1;
	setp.eq.b32 	%p98, %r259, 1;
	selp.f32 	%f87, 0f00000000, %f57, %p98;
	selp.f32 	%f88, 0f00000000, %f58, %p66;
$L__tmp6:
	.loc	1 40 33                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:40:33
	shl.b32 	%r260, %r148, 4;
	shl.b32 	%r261, %r149, 4;
	shl.b32 	%r262, %r150, 4;
	shl.b32 	%r263, %r151, 4;
	.loc	1 40 30                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:40:30
	add.s32 	%r264, %r159, %r260;
	add.s32 	%r265, %r159, %r261;
	add.s32 	%r266, %r159, %r262;
	add.s32 	%r267, %r159, %r263;
	.loc	1 40 25                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:40:25
	mul.wide.s32 	%rd28, %r264, 4;
	add.s64 	%rd10, %rd21, %rd28;
	mul.wide.s32 	%rd29, %r265, 4;
	add.s64 	%rd11, %rd21, %rd29;
	mul.wide.s32 	%rd30, %r266, 4;
	add.s64 	%rd12, %rd21, %rd30;
	mul.wide.s32 	%rd31, %r267, 4;
	add.s64 	%rd13, %rd21, %rd31;
	.loc	1 40 44                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:40:44
	mov.b32 	%r268, %f56;
	mov.b32 	%r269, %f55;
	mov.b32 	%r270, %f54;
	mov.b32 	%r271, %f53;
	mov.b32 	%r272, %f52;
	mov.b32 	%r273, %f51;
	mov.b32 	%r274, %f50;
	mov.b32 	%r275, %f49;
	mov.b32 	%r276, %f48;
	mov.b32 	%r277, %f47;
	mov.b32 	%r278, %f46;
	mov.b32 	%r279, %f45;
	mov.b32 	%r280, %f44;
	mov.b32 	%r281, %f43;
	mov.b32 	%r282, %f42;
	mov.b32 	%r283, %f41;
$L__tmp7:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r72, 0, %r283, %p83;
	selp.b32 	%r73, 0, %r282, %p82;
	selp.b32 	%r74, 0, %r281, %p81;
	selp.b32 	%r75, 0, %r280, %p80;
$L__tmp8:
	.loc	1 40 44                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:40:44
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd10 + 0 ], { %r72, %r73, %r74, %r75 };
	// end inline asm
$L__tmp9:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r76, 0, %r279, %p79;
	selp.b32 	%r77, 0, %r278, %p78;
	selp.b32 	%r78, 0, %r277, %p77;
	selp.b32 	%r79, 0, %r276, %p76;
$L__tmp10:
	.loc	1 40 44                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:40:44
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd11 + 0 ], { %r76, %r77, %r78, %r79 };
	// end inline asm
$L__tmp11:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r80, 0, %r275, %p75;
	selp.b32 	%r81, 0, %r274, %p74;
	selp.b32 	%r82, 0, %r273, %p73;
	selp.b32 	%r83, 0, %r272, %p72;
$L__tmp12:
	.loc	1 40 44                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:40:44
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd12 + 0 ], { %r80, %r81, %r82, %r83 };
	// end inline asm
$L__tmp13:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r84, 0, %r271, %p71;
	selp.b32 	%r85, 0, %r270, %p70;
	selp.b32 	%r86, 0, %r269, %p69;
	selp.b32 	%r87, 0, %r268, %p68;
$L__tmp14:
	.loc	1 40 44                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:40:44
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd13 + 0 ], { %r84, %r85, %r86, %r87 };
	// end inline asm
	.loc	1 41 25                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:41:25
	add.s64 	%rd14, %rd22, %rd28;
	add.s64 	%rd15, %rd22, %rd29;
	add.s64 	%rd16, %rd22, %rd30;
	add.s64 	%rd17, %rd22, %rd31;
	.loc	1 41 44                         // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:41:44
	bar.sync 	0;
	mov.b32 	%r89, %f73;
	// begin inline asm
	@%p5 st.shared.b32 [ %r19 + 0 ], %r89;
	// end inline asm
	mov.b32 	%r91, %f74;
	// begin inline asm
	@%p5 st.shared.b32 [ %r21 + 0 ], %r91;
	// end inline asm
	mov.b32 	%r93, %f75;
	// begin inline asm
	@%p5 st.shared.b32 [ %r23 + 0 ], %r93;
	// end inline asm
	mov.b32 	%r95, %f76;
	// begin inline asm
	@%p5 st.shared.b32 [ %r25 + 0 ], %r95;
	// end inline asm
	mov.b32 	%r97, %f77;
	// begin inline asm
	@%p5 st.shared.b32 [ %r27 + 0 ], %r97;
	// end inline asm
	mov.b32 	%r99, %f78;
	// begin inline asm
	@%p5 st.shared.b32 [ %r29 + 0 ], %r99;
	// end inline asm
	mov.b32 	%r101, %f79;
	// begin inline asm
	@%p5 st.shared.b32 [ %r31 + 0 ], %r101;
	// end inline asm
	mov.b32 	%r103, %f80;
	// begin inline asm
	@%p5 st.shared.b32 [ %r33 + 0 ], %r103;
	// end inline asm
	mov.b32 	%r105, %f81;
	// begin inline asm
	@%p5 st.shared.b32 [ %r35 + 0 ], %r105;
	// end inline asm
	mov.b32 	%r107, %f82;
	// begin inline asm
	@%p5 st.shared.b32 [ %r37 + 0 ], %r107;
	// end inline asm
	mov.b32 	%r109, %f83;
	// begin inline asm
	@%p5 st.shared.b32 [ %r39 + 0 ], %r109;
	// end inline asm
	mov.b32 	%r111, %f84;
	// begin inline asm
	@%p5 st.shared.b32 [ %r41 + 0 ], %r111;
	// end inline asm
	mov.b32 	%r113, %f85;
	// begin inline asm
	@%p5 st.shared.b32 [ %r43 + 0 ], %r113;
	// end inline asm
	mov.b32 	%r115, %f86;
	// begin inline asm
	@%p5 st.shared.b32 [ %r45 + 0 ], %r115;
	// end inline asm
	mov.b32 	%r117, %f87;
	// begin inline asm
	@%p5 st.shared.b32 [ %r47 + 0 ], %r117;
	// end inline asm
	mov.b32 	%r119, %f88;
	// begin inline asm
	@%p5 st.shared.b32 [ %r49 + 0 ], %r119;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r120, [%r202];
	ld.shared.u32 	%r121, [%r202+4];
	ld.shared.u32 	%r122, [%r202+8];
	ld.shared.u32 	%r123, [%r202+12];
	ld.shared.u32 	%r124, [%r207+4096];
	ld.shared.u32 	%r125, [%r207+4100];
	ld.shared.u32 	%r126, [%r207+4104];
	ld.shared.u32 	%r127, [%r207+4108];
	ld.shared.u32 	%r128, [%r212+8192];
	ld.shared.u32 	%r129, [%r212+8196];
	ld.shared.u32 	%r130, [%r212+8200];
	ld.shared.u32 	%r131, [%r212+8204];
	ld.shared.u32 	%r132, [%r217+12288];
	ld.shared.u32 	%r133, [%r217+12292];
	ld.shared.u32 	%r134, [%r217+12296];
	ld.shared.u32 	%r135, [%r217+12300];
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd14 + 0 ], { %r120, %r121, %r122, %r123 };
	// end inline asm
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd15 + 0 ], { %r124, %r125, %r126, %r127 };
	// end inline asm
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd16 + 0 ], { %r128, %r129, %r130, %r131 };
	// end inline asm
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd17 + 0 ], { %r132, %r133, %r134, %r135 };
	// end inline asm
	.loc	1 41 4                          // cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py:41:4
	ret;
$L__tmp15:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/xc/cxclhtnkdrz3qlighzdc5m25sekv34sq3ovdcd2vhulaoniupw6b.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 229                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xde DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 99
.b8 108
.b8 104
.b8 116
.b8 110
.b8 107
.b8 100
.b8 114
.b8 122
.b8 51
.b8 113
.b8 108
.b8 105
.b8 103
.b8 104
.b8 122
.b8 100
.b8 99
.b8 53
.b8 109
.b8 50
.b8 53
.b8 115
.b8 101
.b8 107
.b8 118
.b8 51
.b8 52
.b8 115
.b8 113
.b8 51
.b8 111
.b8 118
.b8 100
.b8 99
.b8 100
.b8 50
.b8 118
.b8 104
.b8 117
.b8 108
.b8 97
.b8 111
.b8 110
.b8 105
.b8 117
.b8 112
.b8 119
.b8 54
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 99
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 97
.b8 120
.b8 95
.b8 112
.b8 111
.b8 111
.b8 108
.b8 50
.b8 100
.b8 95
.b8 119
.b8 105
.b8 116
.b8 104
.b8 95
.b8 105
.b8 110
.b8 100
.b8 105
.b8 99
.b8 101
.b8 115
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 51
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa2:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp14                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
