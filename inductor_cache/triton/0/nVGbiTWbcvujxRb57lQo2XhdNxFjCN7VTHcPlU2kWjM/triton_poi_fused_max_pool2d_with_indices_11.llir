; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_11(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %11 = sdiv i32 %.frozen, 16, !dbg !14
  %12 = mul i32 %11, 16, !dbg !15
  %.decomposed = sub i32 %.frozen, %12, !dbg !15
  %13 = srem i32 %11, 16, !dbg !16
  %14 = sdiv i32 %10, 256, !dbg !17
  %15 = srem i32 %14, 16, !dbg !18
  %16 = shl nsw i32 %13, 5, !dbg !19
  %17 = shl i32 %14, 10, !dbg !20
  %18 = add i32 %17, %.decomposed, !dbg !21
  %19 = add i32 %18, %16, !dbg !22
  %20 = sext i32 %19 to i64, !dbg !23
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !23
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !24
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !24
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !24
  %25 = bitcast i32 %23 to float, !dbg !24
  %26 = bitcast i32 %24 to float, !dbg !24
  %27 = add i32 %18, 16, !dbg !25
  %28 = add i32 %27, %16, !dbg !26
  %29 = sext i32 %28 to i64, !dbg !27
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !27
  %31 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %30, i1 true) #1, !dbg !28
  %32 = extractvalue { i32, i32 } %31, 0, !dbg !28
  %33 = extractvalue { i32, i32 } %31, 1, !dbg !28
  %34 = bitcast i32 %32 to float, !dbg !28
  %35 = bitcast i32 %33 to float, !dbg !28
  %36 = add i32 %18, 512, !dbg !29
  %37 = add i32 %36, %16, !dbg !30
  %38 = sext i32 %37 to i64, !dbg !31
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !31
  %40 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %39, i1 true) #1, !dbg !32
  %41 = extractvalue { i32, i32 } %40, 0, !dbg !32
  %42 = extractvalue { i32, i32 } %40, 1, !dbg !32
  %43 = bitcast i32 %41 to float, !dbg !32
  %44 = bitcast i32 %42 to float, !dbg !32
  %45 = add i32 %18, 528, !dbg !33
  %46 = add i32 %45, %16, !dbg !34
  %47 = sext i32 %46 to i64, !dbg !35
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !35
  %49 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %48, i1 true) #1, !dbg !36
  %50 = extractvalue { i32, i32 } %49, 0, !dbg !36
  %51 = extractvalue { i32, i32 } %49, 1, !dbg !36
  %52 = bitcast i32 %50 to float, !dbg !36
  %53 = bitcast i32 %51 to float, !dbg !36
  %54 = fcmp ogt float %34, %25, !dbg !37
  %55 = fcmp ogt float %35, %26, !dbg !37
  %56 = fcmp uno float %34, 0.000000e+00, !dbg !41
  %57 = fcmp uno float %35, 0.000000e+00, !dbg !41
  %58 = or i1 %54, %56, !dbg !42
  %59 = or i1 %55, %57, !dbg !42
  %60 = select i1 %58, float %34, float %25, !dbg !43
  %61 = select i1 %59, float %35, float %26, !dbg !43
  %62 = fcmp olt float %60, %43, !dbg !44
  %63 = fcmp olt float %61, %44, !dbg !44
  %64 = fcmp uno float %43, 0.000000e+00, !dbg !46
  %65 = fcmp uno float %44, 0.000000e+00, !dbg !46
  %66 = or i1 %64, %62, !dbg !47
  %67 = or i1 %65, %63, !dbg !47
  %68 = select i1 %66, float %43, float %60, !dbg !48
  %69 = select i1 %67, float %44, float %61, !dbg !48
  %70 = fcmp olt float %68, %52, !dbg !49
  %71 = fcmp olt float %69, %53, !dbg !49
  %72 = fcmp uno float %52, 0.000000e+00, !dbg !51
  %73 = fcmp uno float %53, 0.000000e+00, !dbg !51
  %74 = or i1 %72, %70, !dbg !52
  %75 = or i1 %73, %71, !dbg !52
  %76 = zext i1 %54 to i32, !dbg !53
  %77 = select i1 %62, i32 2, i32 %76, !dbg !54
  %78 = select i1 %70, i32 3, i32 %77, !dbg !55
  %79 = zext i1 %55 to i32, !dbg !53
  %80 = select i1 %63, i32 2, i32 %79, !dbg !54
  %81 = select i1 %71, i32 3, i32 %80, !dbg !55
  %82 = lshr i32 %78, 1, !dbg !56
  %83 = lshr i32 %81, 1, !dbg !56
  %84 = and i32 %78, 1, !dbg !57
  %85 = and i32 %81, 1, !dbg !57
  %86 = shl nsw i32 %15, 1, !dbg !58
  %87 = or disjoint i32 %82, %86, !dbg !59
  %88 = or disjoint i32 %83, %86, !dbg !59
  %89 = shl nsw i32 %13, 1, !dbg !60
  %90 = or disjoint i32 %84, %89, !dbg !61
  %91 = or disjoint i32 %85, %89, !dbg !61
  %92 = sext i32 %87 to i64, !dbg !62
  %93 = sext i32 %88 to i64, !dbg !62
  %94 = shl nsw i64 %92, 5, !dbg !62
  %95 = shl nsw i64 %93, 5, !dbg !62
  %96 = sext i32 %90 to i64, !dbg !63
  %97 = sext i32 %91 to i64, !dbg !63
  %98 = add nsw i64 %94, %96, !dbg !63
  %99 = add nsw i64 %95, %97, !dbg !63
  %100 = sext i32 %10 to i64, !dbg !64
  %101 = getelementptr float, ptr addrspace(1) %1, i64 %100, !dbg !64
  %102 = bitcast float %68 to i32, !dbg !65
  %103 = select i1 %74, i32 %50, i32 %102, !dbg !66
  %104 = bitcast float %69 to i32, !dbg !65
  %105 = select i1 %75, i32 %51, i32 %104, !dbg !66
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %103, i32 %105, ptr addrspace(1) %101, i1 true) #1, !dbg !65
  %106 = getelementptr i64, ptr addrspace(1) %2, i64 %100, !dbg !67
  tail call void asm sideeffect "@$3 st.global.v2.b64 [ $2 + 0 ], { $0, $1 };", "l,l,l,b"(i64 %98, i64 %99, ptr addrspace(1) %106, i1 true) #1, !dbg !68
  ret void, !dbg !69
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpuxyrstytnbfv3kbzmkyam4oxhtw2ffshlyk5afoup43nosv7er.py", directory: "inductor_cache/pu")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_11, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_11", linkageName: "triton_poi_fused_max_pool2d_with_indices_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 28, scope: !7)
!19 = !DILocation(line: 29, column: 38, scope: !7)
!20 = !DILocation(line: 29, column: 48, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 43, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 53, scope: !7)
!25 = !DILocation(line: 30, column: 40, scope: !7)
!26 = !DILocation(line: 30, column: 48, scope: !7)
!27 = !DILocation(line: 30, column: 30, scope: !7)
!28 = !DILocation(line: 30, column: 58, scope: !7)
!29 = !DILocation(line: 31, column: 41, scope: !7)
!30 = !DILocation(line: 31, column: 49, scope: !7)
!31 = !DILocation(line: 31, column: 30, scope: !7)
!32 = !DILocation(line: 31, column: 59, scope: !7)
!33 = !DILocation(line: 32, column: 41, scope: !7)
!34 = !DILocation(line: 32, column: 49, scope: !7)
!35 = !DILocation(line: 32, column: 30, scope: !7)
!36 = !DILocation(line: 32, column: 59, scope: !7)
!37 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !7, file: !39, discriminator: 0)
!39 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!40 = !DILocation(line: 33, column: 40, scope: !7)
!41 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !40)
!42 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !40)
!43 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !40)
!44 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !45)
!45 = !DILocation(line: 34, column: 40, scope: !7)
!46 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !45)
!47 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !45)
!48 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !45)
!49 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !50)
!50 = !DILocation(line: 35, column: 40, scope: !7)
!51 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !50)
!52 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !50)
!53 = !DILocation(line: 47, column: 30, scope: !7)
!54 = !DILocation(line: 42, column: 35, scope: !7)
!55 = !DILocation(line: 45, column: 35, scope: !7)
!56 = !DILocation(line: 47, column: 87, scope: !7)
!57 = !DILocation(line: 49, column: 20, scope: !7)
!58 = !DILocation(line: 50, column: 14, scope: !7)
!59 = !DILocation(line: 51, column: 20, scope: !7)
!60 = !DILocation(line: 52, column: 14, scope: !7)
!61 = !DILocation(line: 53, column: 20, scope: !7)
!62 = !DILocation(line: 55, column: 20, scope: !7)
!63 = !DILocation(line: 56, column: 20, scope: !7)
!64 = !DILocation(line: 57, column: 25, scope: !7)
!65 = !DILocation(line: 57, column: 36, scope: !7)
!66 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !50)
!67 = !DILocation(line: 58, column: 25, scope: !7)
!68 = !DILocation(line: 58, column: 37, scope: !7)
!69 = !DILocation(line: 58, column: 4, scope: !7)
