; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_convolution_relu_threshold_backward_21(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %10 = shl i32 %9, 7, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = and i32 %11, 127, !dbg !12
  %13 = or disjoint i32 %10, %12, !dbg !13
  %14 = icmp slt i32 %13, 256, !dbg !14
  %15 = sdiv i32 %13, 16, !dbg !15
  %16 = srem i32 %15, 4, !dbg !16
  %17 = sext i32 %13 to i64, !dbg !17
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !17
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 %14) #1, !dbg !18
  %20 = sext i32 %16 to i64, !dbg !19
  %21 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !19
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %14) #1, !dbg !20
  %23 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !21
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %14) #1, !dbg !22
  %25 = getelementptr float, ptr addrspace(1) %3, i64 %20, !dbg !23
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %14) #1, !dbg !24
  %27 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !18
  %28 = insertelement <2 x i32> %27, i32 %24, i64 1, !dbg !18
  %29 = bitcast <2 x i32> %28 to <2 x float>, !dbg !18
  %30 = insertelement <2 x i32> poison, i32 %22, i64 0, !dbg !20
  %31 = insertelement <2 x i32> %30, i32 %26, i64 1, !dbg !20
  %32 = bitcast <2 x i32> %31 to <2 x float>, !dbg !20
  %33 = fadd <2 x float> %29, %32, !dbg !25
  %34 = fcmp olt <2 x float> %33, zeroinitializer, !dbg !26
  %35 = select <2 x i1> %34, <2 x float> zeroinitializer, <2 x float> %33, !dbg !30
  %36 = extractelement <2 x float> %35, i64 0, !dbg !31
  %37 = extractelement <2 x float> %35, i64 1, !dbg !32
  %38 = fadd float %36, %37, !dbg !33
  %39 = fcmp ole float %37, 0.000000e+00, !dbg !32
  %40 = fcmp ole float %36, 0.000000e+00, !dbg !31
  %41 = getelementptr float, ptr addrspace(1) %4, i64 %17, !dbg !34
  %42 = bitcast float %38 to i32, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %42, ptr addrspace(1) %41, i1 %14) #1, !dbg !35
  %43 = getelementptr i1, ptr addrspace(1) %5, i64 %17, !dbg !36
  %44 = zext i1 %39 to i8, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %44, ptr addrspace(1) %43, i1 %14) #1, !dbg !37
  %45 = getelementptr i1, ptr addrspace(1) %6, i64 %17, !dbg !38
  %46 = zext i1 %40 to i8, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %46, ptr addrspace(1) %45, i1 %14) #1, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cz273qrcyja4kwa2zz3lzmfce3gkrf2ihudqlsoiyuqryuxdvxma.py", directory: "inductor_cache/z2")
!4 = !{ptr @triton_poi_fused_add_convolution_relu_threshold_backward_21, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_convolution_relu_threshold_backward_21, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_convolution_relu_threshold_backward_21", linkageName: "triton_poi_fused_add_convolution_relu_threshold_backward_21", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 35, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 35, scope: !7)
!25 = !DILocation(line: 30, column: 18, scope: !7)
!26 = !DILocation(line: 118, column: 15, scope: !27, inlinedAt: !29)
!27 = distinct !DILexicalBlockFile(scope: !7, file: !28, discriminator: 0)
!28 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!29 = !DILocation(line: 32, column: 40, scope: !7)
!30 = !DILocation(line: 121, column: 29, scope: !27, inlinedAt: !29)
!31 = !DILocation(line: 38, column: 20, scope: !7)
!32 = !DILocation(line: 37, column: 20, scope: !7)
!33 = !DILocation(line: 35, column: 18, scope: !7)
!34 = !DILocation(line: 39, column: 25, scope: !7)
!35 = !DILocation(line: 39, column: 36, scope: !7)
!36 = !DILocation(line: 40, column: 25, scope: !7)
!37 = !DILocation(line: 40, column: 37, scope: !7)
!38 = !DILocation(line: 41, column: 25, scope: !7)
!39 = !DILocation(line: 41, column: 37, scope: !7)
!40 = !DILocation(line: 41, column: 4, scope: !7)
