; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 5, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 31, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 32, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 8, !dbg !15
  %13 = mul i32 %12, 8, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = icmp slt i32 %.decomposed, 4, !dbg !17
  %15 = shl nsw i32 %12, 2, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = and i1 %11, %14, !dbg !20
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %18, i32 0, i1 %18) #1, !dbg !21
  %20 = sext i32 %.decomposed to i64, !dbg !22
  %21 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !22
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %21, i1 %18, i32 0, i1 %18) #1, !dbg !23
  %23 = or disjoint i32 %15, 1, !dbg !24
  %24 = sext i32 %23 to i64, !dbg !25
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !25
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %18, i32 0, i1 %18) #1, !dbg !26
  %27 = getelementptr i8, ptr addrspace(1) %21, i64 16, !dbg !27
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %18, i32 0, i1 %18) #1, !dbg !28
  %29 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !21
  %30 = insertelement <2 x i32> %29, i32 %26, i64 1, !dbg !21
  %31 = bitcast <2 x i32> %30 to <2 x float>, !dbg !21
  %32 = insertelement <2 x i32> poison, i32 %22, i64 0, !dbg !23
  %33 = insertelement <2 x i32> %32, i32 %28, i64 1, !dbg !23
  %34 = bitcast <2 x i32> %33 to <2 x float>, !dbg !23
  %35 = fmul <2 x float> %31, %34, !dbg !29
  %shift = shufflevector <2 x float> %35, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !30
  %36 = fadd <2 x float> %35, %shift, !dbg !30
  %37 = or disjoint i32 %15, 2, !dbg !31
  %38 = sext i32 %37 to i64, !dbg !32
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !32
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %18, i32 0, i1 %18) #1, !dbg !33
  %41 = getelementptr i8, ptr addrspace(1) %21, i64 32, !dbg !34
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %18, i32 0, i1 %18) #1, !dbg !35
  %43 = or disjoint i32 %15, 3, !dbg !36
  %44 = sext i32 %43 to i64, !dbg !37
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !37
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %18, i32 0, i1 %18) #1, !dbg !38
  %47 = getelementptr i8, ptr addrspace(1) %21, i64 48, !dbg !39
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %18, i32 0, i1 %18) #1, !dbg !40
  %49 = insertelement <2 x i32> poison, i32 %40, i64 0, !dbg !33
  %50 = insertelement <2 x i32> %49, i32 %46, i64 1, !dbg !33
  %51 = bitcast <2 x i32> %50 to <2 x float>, !dbg !33
  %52 = insertelement <2 x i32> poison, i32 %42, i64 0, !dbg !35
  %53 = insertelement <2 x i32> %52, i32 %48, i64 1, !dbg !35
  %54 = bitcast <2 x i32> %53 to <2 x float>, !dbg !35
  %55 = fmul <2 x float> %51, %54, !dbg !41
  %56 = fadd <2 x float> %36, %55, !dbg !42
  %shift1 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !43
  %57 = fadd <2 x float> %56, %shift1, !dbg !43
  %58 = icmp sgt i32 %.decomposed, 3, !dbg !44
  %59 = add nsw i32 %.decomposed, -4, !dbg !45
  %60 = add nsw i32 %59, %15, !dbg !46
  %61 = sext i32 %60 to i64, !dbg !47
  %62 = getelementptr float, ptr addrspace(1) %2, i64 %61, !dbg !47
  %63 = and i1 %11, %58, !dbg !48
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %63, i32 0, i1 %63) #1, !dbg !49
  %65 = sext i32 %10 to i64, !dbg !50
  %66 = getelementptr float, ptr addrspace(1) %3, i64 %65, !dbg !50
  %bc = bitcast <2 x float> %57 to <2 x i32>, !dbg !51
  %67 = extractelement <2 x i32> %bc, i64 0, !dbg !51
  %68 = select i1 %14, i32 %67, i32 %64, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %68, ptr addrspace(1) %66, i1 %11) #1, !dbg !51
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cuuxbvyfl5wyru4clohup63xyr2o63sompug4wcn52vqdz6kcalc.py", directory: "inductor_cache/uu")
!4 = !{ptr @triton_poi_fused_cat_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_3, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_3", linkageName: "triton_poi_fused_cat_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 32, scope: !7)
!19 = !DILocation(line: 32, column: 30, scope: !7)
!20 = !DILocation(line: 32, column: 44, scope: !7)
!21 = !DILocation(line: 32, column: 37, scope: !7)
!22 = !DILocation(line: 33, column: 30, scope: !7)
!23 = !DILocation(line: 33, column: 35, scope: !7)
!24 = !DILocation(line: 35, column: 34, scope: !7)
!25 = !DILocation(line: 35, column: 30, scope: !7)
!26 = !DILocation(line: 35, column: 41, scope: !7)
!27 = !DILocation(line: 36, column: 30, scope: !7)
!28 = !DILocation(line: 36, column: 41, scope: !7)
!29 = !DILocation(line: 34, column: 18, scope: !7)
!30 = !DILocation(line: 38, column: 19, scope: !7)
!31 = !DILocation(line: 39, column: 35, scope: !7)
!32 = !DILocation(line: 39, column: 31, scope: !7)
!33 = !DILocation(line: 39, column: 42, scope: !7)
!34 = !DILocation(line: 40, column: 31, scope: !7)
!35 = !DILocation(line: 40, column: 42, scope: !7)
!36 = !DILocation(line: 43, column: 35, scope: !7)
!37 = !DILocation(line: 43, column: 31, scope: !7)
!38 = !DILocation(line: 43, column: 42, scope: !7)
!39 = !DILocation(line: 44, column: 31, scope: !7)
!40 = !DILocation(line: 44, column: 43, scope: !7)
!41 = !DILocation(line: 41, column: 20, scope: !7)
!42 = !DILocation(line: 42, column: 20, scope: !7)
!43 = !DILocation(line: 46, column: 20, scope: !7)
!44 = !DILocation(line: 49, column: 20, scope: !7)
!45 = !DILocation(line: 52, column: 46, scope: !7)
!46 = !DILocation(line: 52, column: 39, scope: !7)
!47 = !DILocation(line: 52, column: 31, scope: !7)
!48 = !DILocation(line: 52, column: 60, scope: !7)
!49 = !DILocation(line: 52, column: 52, scope: !7)
!50 = !DILocation(line: 54, column: 25, scope: !7)
!51 = !DILocation(line: 54, column: 37, scope: !7)
!52 = !DILocation(line: 0, scope: !7)
!53 = !DILocation(line: 54, column: 4, scope: !7)
