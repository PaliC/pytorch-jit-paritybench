; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_14(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %10 = shl i32 %9, 7, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = and i32 %11, 127, !dbg !12
  %13 = or disjoint i32 %10, %12, !dbg !13
  %14 = icmp slt i32 %13, 688, !dbg !14
  %.frozen = freeze i32 %13, !dbg !15
  %15 = sdiv i32 %.frozen, 2, !dbg !15
  %16 = srem i32 %15, 86, !dbg !16
  %17 = mul i32 %15, 2, !dbg !17
  %.decomposed = sub i32 %.frozen, %17, !dbg !17
  %.frozen5 = freeze i32 %13, !dbg !18
  %18 = sdiv i32 %.frozen5, 172, !dbg !18
  %19 = icmp slt i32 %16, 84, !dbg !19
  %20 = mul i32 %18, 172, !dbg !20
  %srem.decomposed = sub i32 %.frozen5, %20, !dbg !20
  %.lhs.trunc = trunc nsw i32 %srem.decomposed to i16, !dbg !21
  %21 = sdiv i16 %.lhs.trunc, 42, !dbg !22
  %22 = mul i16 %21, 42, !dbg !21
  %.decomposed6 = sub i16 %.lhs.trunc, %22, !dbg !21
  %.sext = sext i16 %.decomposed6 to i32, !dbg !21
  %23 = shl nsw i32 %.sext, 2, !dbg !23
  %24 = mul nsw i32 %18, 168, !dbg !24
  %25 = add nsw i32 %24, %srem.decomposed, !dbg !25
  %26 = sdiv i32 %25, 168, !dbg !26
  %27 = srem i32 %26, 4, !dbg !27
  %28 = mul nsw i32 %27, 168, !dbg !28
  %29 = add nsw i32 %28, %23, !dbg !29
  %.lhs.trunc3 = trunc nsw i16 %21 to i8, !dbg !30
  %30 = srem i8 %.lhs.trunc3, 4, !dbg !30
  %.sext4 = sext i8 %30 to i32, !dbg !30
  %31 = add nsw i32 %29, %.sext4, !dbg !31
  %32 = sext i32 %31 to i64, !dbg !32
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !32
  %34 = and i1 %14, %19, !dbg !33
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %34, i32 0, i1 %34) #1, !dbg !34
  %36 = bitcast i32 %35 to float, !dbg !34
  %37 = sext i16 %.decomposed6 to i64, !dbg !35
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !35
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %34, i32 0, i1 %34) #1, !dbg !36
  %40 = bitcast i32 %39 to float, !dbg !36
  %41 = fadd float %36, %40, !dbg !37
  %42 = icmp eq i32 %16, 84, !dbg !38
  %43 = shl nsw i32 %18, 1, !dbg !39
  %44 = add nsw i32 %43, %.decomposed, !dbg !40
  %45 = sext i32 %44 to i64, !dbg !41
  %46 = getelementptr float, ptr addrspace(1) %2, i64 %45, !dbg !41
  %47 = and i1 %14, %42, !dbg !42
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %47, i32 0, i1 %47) #1, !dbg !43
  %49 = bitcast i32 %48 to float, !dbg !43
  %50 = sext i32 %.decomposed to i64, !dbg !44
  %51 = getelementptr float, ptr addrspace(1) %3, i64 %50, !dbg !44
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %47, i32 0, i1 %47) #1, !dbg !45
  %53 = bitcast i32 %52 to float, !dbg !45
  %54 = fadd float %49, %53, !dbg !46
  %55 = icmp sgt i32 %16, 84, !dbg !47
  %56 = getelementptr float, ptr addrspace(1) %4, i64 %45, !dbg !48
  %57 = and i1 %14, %55, !dbg !49
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %57, i32 0, i1 %57) #1, !dbg !50
  %59 = bitcast i32 %58 to float, !dbg !50
  %60 = getelementptr float, ptr addrspace(1) %5, i64 %50, !dbg !51
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 %57, i32 0, i1 %57) #1, !dbg !52
  %62 = bitcast i32 %61 to float, !dbg !52
  %63 = fadd float %59, %62, !dbg !53
  %64 = select i1 %55, float %63, float 0.000000e+00, !dbg !54
  %65 = select i1 %42, float %54, float %64, !dbg !55
  %66 = select i1 %19, float %41, float %65, !dbg !55
  %67 = sext i32 %13 to i64, !dbg !56
  %68 = getelementptr float, ptr addrspace(1) %6, i64 %67, !dbg !56
  %69 = bitcast float %66 to i32, !dbg !57
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %69, ptr addrspace(1) %68, i1 %14) #1, !dbg !57
  ret void, !dbg !58
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cccryoifyipp6grbkjwux4bm7yu77r2tl7devza4xgiv3gvmfeyf.py", directory: "inductor_cache/cc")
!4 = !{ptr @triton_poi_fused_cat_14, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_14, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_14", linkageName: "triton_poi_fused_cat_14", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 40, scope: !7)
!21 = !DILocation(line: 33, column: 50, scope: !7)
!22 = !DILocation(line: 33, column: 123, scope: !7)
!23 = !DILocation(line: 33, column: 34, scope: !7)
!24 = !DILocation(line: 33, column: 83, scope: !7)
!25 = !DILocation(line: 33, column: 79, scope: !7)
!26 = !DILocation(line: 33, column: 90, scope: !7)
!27 = !DILocation(line: 33, column: 97, scope: !7)
!28 = !DILocation(line: 33, column: 63, scope: !7)
!29 = !DILocation(line: 33, column: 57, scope: !7)
!30 = !DILocation(line: 33, column: 129, scope: !7)
!31 = !DILocation(line: 33, column: 105, scope: !7)
!32 = !DILocation(line: 33, column: 30, scope: !7)
!33 = !DILocation(line: 33, column: 142, scope: !7)
!34 = !DILocation(line: 33, column: 135, scope: !7)
!35 = !DILocation(line: 34, column: 31, scope: !7)
!36 = !DILocation(line: 34, column: 53, scope: !7)
!37 = !DILocation(line: 35, column: 18, scope: !7)
!38 = !DILocation(line: 41, column: 20, scope: !7)
!39 = !DILocation(line: 42, column: 38, scope: !7)
!40 = !DILocation(line: 42, column: 36, scope: !7)
!41 = !DILocation(line: 42, column: 31, scope: !7)
!42 = !DILocation(line: 42, column: 51, scope: !7)
!43 = !DILocation(line: 42, column: 43, scope: !7)
!44 = !DILocation(line: 43, column: 31, scope: !7)
!45 = !DILocation(line: 43, column: 36, scope: !7)
!46 = !DILocation(line: 44, column: 20, scope: !7)
!47 = !DILocation(line: 47, column: 20, scope: !7)
!48 = !DILocation(line: 50, column: 31, scope: !7)
!49 = !DILocation(line: 50, column: 51, scope: !7)
!50 = !DILocation(line: 50, column: 43, scope: !7)
!51 = !DILocation(line: 51, column: 31, scope: !7)
!52 = !DILocation(line: 51, column: 36, scope: !7)
!53 = !DILocation(line: 52, column: 20, scope: !7)
!54 = !DILocation(line: 54, column: 35, scope: !7)
!55 = !DILocation(line: 0, scope: !7)
!56 = !DILocation(line: 57, column: 25, scope: !7)
!57 = !DILocation(line: 57, column: 37, scope: !7)
!58 = !DILocation(line: 57, column: 4, scope: !7)
