#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_7(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<5> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<6> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<7> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<8> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<0xFF800000> : tensor<256xf32, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_9 = arith.constant dense<2048> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<2> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<-1> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<0> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<4> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<-5> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<8> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<-4> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<1> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_18 = arith.constant dense<-3> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_19 = arith.constant dense<3> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_20 = arith.constant dense<4> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_21 = arith.constant dense<5> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_9 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_10 : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_10 : tensor<256xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %4, %cst_10 : tensor<256xi32, #blocked> loc(#loc9)
    %9 = arith.muli %7, %cst_10 : tensor<256xi32, #blocked> loc(#loc10)
    %10 = arith.addi %9, %cst_11 : tensor<256xi32, #blocked> loc(#loc11)
    %11 = arith.extsi %10 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc12)
    %12 = arith.cmpi sge, %11, %cst_12 : tensor<256xi64, #blocked> loc(#loc12)
    %13 = arith.cmpi slt, %11, %cst_13 : tensor<256xi64, #blocked> loc(#loc13)
    %14 = arith.andi %12, %13 : tensor<256xi1, #blocked> loc(#loc14)
    %15 = arith.muli %8, %cst_10 : tensor<256xi32, #blocked> loc(#loc15)
    %16 = arith.addi %15, %cst_11 : tensor<256xi32, #blocked> loc(#loc16)
    %17 = arith.extsi %16 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc17)
    %18 = arith.cmpi sge, %17, %cst_12 : tensor<256xi64, #blocked> loc(#loc17)
    %19 = arith.cmpi slt, %17, %cst_13 : tensor<256xi64, #blocked> loc(#loc18)
    %20 = arith.andi %18, %19 : tensor<256xi1, #blocked> loc(#loc19)
    %21 = arith.andi %14, %20 : tensor<256xi1, #blocked> loc(#loc20)
    %22 = arith.addi %15, %cst_14 : tensor<256xi32, #blocked> loc(#loc21)
    %23 = arith.muli %6, %cst_15 : tensor<256xi32, #blocked> loc(#loc22)
    %24 = arith.addi %22, %23 : tensor<256xi32, #blocked> loc(#loc23)
    %25 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc24)
    %26 = tt.addptr %25, %24 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc24)
    %27 = arith.andi %21, %5 : tensor<256xi1, #blocked> loc(#loc25)
    %28 = tt.load %26, %27, %cst_8 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc26)
    %29 = arith.extsi %15 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc27)
    %30 = arith.cmpi sge, %29, %cst_12 : tensor<256xi64, #blocked> loc(#loc27)
    %31 = arith.cmpi slt, %29, %cst_13 : tensor<256xi64, #blocked> loc(#loc28)
    %32 = arith.andi %30, %31 : tensor<256xi1, #blocked> loc(#loc29)
    %33 = arith.andi %14, %32 : tensor<256xi1, #blocked> loc(#loc30)
    %34 = arith.addi %15, %cst_16 : tensor<256xi32, #blocked> loc(#loc31)
    %35 = arith.addi %34, %23 : tensor<256xi32, #blocked> loc(#loc32)
    %36 = tt.addptr %25, %35 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc33)
    %37 = arith.andi %33, %5 : tensor<256xi1, #blocked> loc(#loc34)
    %38 = tt.load %36, %37, %cst_8 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc35)
    %39 = arith.cmpf ogt, %38, %28 : tensor<256xf32, #blocked> loc(#loc111)
    %40 = arith.cmpf une, %38, %38 : tensor<256xf32, #blocked> loc(#loc112)
    %41 = arith.ori %39, %40 : tensor<256xi1, #blocked> loc(#loc113)
    %42 = arith.select %41, %38, %28 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc114)
    %43 = arith.addi %15, %cst_17 : tensor<256xi32, #blocked> loc(#loc41)
    %44 = arith.extsi %43 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc42)
    %45 = arith.cmpi sge, %44, %cst_12 : tensor<256xi64, #blocked> loc(#loc42)
    %46 = arith.cmpi slt, %44, %cst_13 : tensor<256xi64, #blocked> loc(#loc43)
    %47 = arith.andi %45, %46 : tensor<256xi1, #blocked> loc(#loc44)
    %48 = arith.andi %14, %47 : tensor<256xi1, #blocked> loc(#loc45)
    %49 = arith.addi %15, %cst_18 : tensor<256xi32, #blocked> loc(#loc46)
    %50 = arith.addi %49, %23 : tensor<256xi32, #blocked> loc(#loc47)
    %51 = tt.addptr %25, %50 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc48)
    %52 = arith.andi %48, %5 : tensor<256xi1, #blocked> loc(#loc49)
    %53 = tt.load %51, %52, %cst_8 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc50)
    %54 = arith.cmpf ogt, %53, %42 : tensor<256xf32, #blocked> loc(#loc115)
    %55 = arith.cmpf une, %53, %53 : tensor<256xf32, #blocked> loc(#loc116)
    %56 = arith.ori %54, %55 : tensor<256xi1, #blocked> loc(#loc117)
    %57 = arith.select %56, %53, %42 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc118)
    %58 = arith.extsi %9 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc52)
    %59 = arith.cmpi sge, %58, %cst_12 : tensor<256xi64, #blocked> loc(#loc52)
    %60 = arith.cmpi slt, %58, %cst_13 : tensor<256xi64, #blocked> loc(#loc53)
    %61 = arith.andi %59, %60 : tensor<256xi1, #blocked> loc(#loc54)
    %62 = arith.andi %61, %20 : tensor<256xi1, #blocked> loc(#loc55)
    %63 = arith.addi %16, %23 : tensor<256xi32, #blocked> loc(#loc56)
    %64 = tt.addptr %25, %63 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc57)
    %65 = arith.andi %62, %5 : tensor<256xi1, #blocked> loc(#loc58)
    %66 = tt.load %64, %65, %cst_8 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc59)
    %67 = arith.cmpf ogt, %66, %57 : tensor<256xf32, #blocked> loc(#loc119)
    %68 = arith.cmpf une, %66, %66 : tensor<256xf32, #blocked> loc(#loc120)
    %69 = arith.ori %67, %68 : tensor<256xi1, #blocked> loc(#loc121)
    %70 = arith.select %69, %66, %57 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc122)
    %71 = arith.andi %61, %32 : tensor<256xi1, #blocked> loc(#loc61)
    %72 = arith.addi %15, %23 : tensor<256xi32, #blocked> loc(#loc62)
    %73 = tt.addptr %25, %72 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc63)
    %74 = arith.andi %71, %5 : tensor<256xi1, #blocked> loc(#loc64)
    %75 = tt.load %73, %74, %cst_8 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc65)
    %76 = arith.cmpf ogt, %75, %70 : tensor<256xf32, #blocked> loc(#loc123)
    %77 = arith.cmpf une, %75, %75 : tensor<256xf32, #blocked> loc(#loc124)
    %78 = arith.ori %76, %77 : tensor<256xi1, #blocked> loc(#loc125)
    %79 = arith.select %78, %75, %70 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc126)
    %80 = arith.andi %61, %47 : tensor<256xi1, #blocked> loc(#loc67)
    %81 = arith.addi %43, %23 : tensor<256xi32, #blocked> loc(#loc68)
    %82 = tt.addptr %25, %81 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc69)
    %83 = arith.andi %80, %5 : tensor<256xi1, #blocked> loc(#loc70)
    %84 = tt.load %82, %83, %cst_8 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc71)
    %85 = arith.cmpf ogt, %84, %79 : tensor<256xf32, #blocked> loc(#loc127)
    %86 = arith.cmpf une, %84, %84 : tensor<256xf32, #blocked> loc(#loc128)
    %87 = arith.ori %85, %86 : tensor<256xi1, #blocked> loc(#loc129)
    %88 = arith.select %87, %84, %79 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc130)
    %89 = arith.addi %9, %cst_17 : tensor<256xi32, #blocked> loc(#loc73)
    %90 = arith.extsi %89 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc74)
    %91 = arith.cmpi sge, %90, %cst_12 : tensor<256xi64, #blocked> loc(#loc74)
    %92 = arith.cmpi slt, %90, %cst_13 : tensor<256xi64, #blocked> loc(#loc75)
    %93 = arith.andi %91, %92 : tensor<256xi1, #blocked> loc(#loc76)
    %94 = arith.andi %93, %20 : tensor<256xi1, #blocked> loc(#loc77)
    %95 = arith.addi %15, %cst_19 : tensor<256xi32, #blocked> loc(#loc78)
    %96 = arith.addi %95, %23 : tensor<256xi32, #blocked> loc(#loc79)
    %97 = tt.addptr %25, %96 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc80)
    %98 = arith.andi %94, %5 : tensor<256xi1, #blocked> loc(#loc81)
    %99 = tt.load %97, %98, %cst_8 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc82)
    %100 = arith.cmpf ogt, %99, %88 : tensor<256xf32, #blocked> loc(#loc131)
    %101 = arith.cmpf une, %99, %99 : tensor<256xf32, #blocked> loc(#loc132)
    %102 = arith.ori %100, %101 : tensor<256xi1, #blocked> loc(#loc133)
    %103 = arith.select %102, %99, %88 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc134)
    %104 = arith.andi %93, %32 : tensor<256xi1, #blocked> loc(#loc84)
    %105 = arith.addi %15, %cst_20 : tensor<256xi32, #blocked> loc(#loc85)
    %106 = arith.addi %105, %23 : tensor<256xi32, #blocked> loc(#loc86)
    %107 = tt.addptr %25, %106 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc87)
    %108 = arith.andi %104, %5 : tensor<256xi1, #blocked> loc(#loc88)
    %109 = tt.load %107, %108, %cst_8 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc89)
    %110 = arith.cmpf ogt, %109, %103 : tensor<256xf32, #blocked> loc(#loc135)
    %111 = arith.cmpf une, %109, %109 : tensor<256xf32, #blocked> loc(#loc136)
    %112 = arith.ori %110, %111 : tensor<256xi1, #blocked> loc(#loc137)
    %113 = arith.select %112, %109, %103 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc138)
    %114 = arith.andi %93, %47 : tensor<256xi1, #blocked> loc(#loc91)
    %115 = arith.addi %15, %cst_21 : tensor<256xi32, #blocked> loc(#loc92)
    %116 = arith.addi %115, %23 : tensor<256xi32, #blocked> loc(#loc93)
    %117 = tt.addptr %25, %116 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc94)
    %118 = arith.andi %114, %5 : tensor<256xi1, #blocked> loc(#loc95)
    %119 = tt.load %117, %118, %cst_8 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc96)
    %120 = arith.cmpf ogt, %119, %113 : tensor<256xf32, #blocked> loc(#loc139)
    %121 = arith.cmpf une, %119, %119 : tensor<256xf32, #blocked> loc(#loc140)
    %122 = arith.ori %120, %121 : tensor<256xi1, #blocked> loc(#loc141)
    %123 = arith.select %122, %119, %113 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc142)
    %124 = arith.select %39, %cst, %cst_0 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc98)
    %125 = arith.select %54, %cst_1, %124 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc99)
    %126 = arith.select %67, %cst_2, %125 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc100)
    %127 = arith.select %76, %cst_3, %126 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc101)
    %128 = arith.select %85, %cst_4, %127 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc102)
    %129 = arith.select %100, %cst_5, %128 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc103)
    %130 = arith.select %110, %cst_6, %129 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc104)
    %131 = arith.select %120, %cst_7, %130 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc105)
    %132 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc106)
    %133 = tt.addptr %132, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc106)
    tt.store %133, %123, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc107)
    %134 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<256x!tt.ptr<i8>, #blocked> loc(#loc108)
    %135 = tt.addptr %134, %4 : tensor<256x!tt.ptr<i8>, #blocked>, tensor<256xi32, #blocked> loc(#loc108)
    tt.store %135, %131, %5 : tensor<256x!tt.ptr<i8>, #blocked> loc(#loc109)
    tt.return loc(#loc110)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":21:28)
#loc3 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":21:33)
#loc4 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":22:36)
#loc5 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":22:23)
#loc6 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":23:21)
#loc7 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":24:21)
#loc8 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":24:26)
#loc9 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":25:19)
#loc10 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":28:20)
#loc11 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":28:18)
#loc12 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":30:19)
#loc13 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":32:18)
#loc14 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":33:18)
#loc15 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":34:20)
#loc16 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":34:18)
#loc17 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":35:19)
#loc18 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":36:18)
#loc19 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":37:18)
#loc20 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":38:19)
#loc21 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":39:38)
#loc22 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":39:47)
#loc23 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":39:45)
#loc24 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":39:31)
#loc25 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":39:60)
#loc26 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":39:52)
#loc27 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":41:21)
#loc28 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":42:20)
#loc29 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":43:20)
#loc30 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":44:19)
#loc31 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":45:38)
#loc32 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":45:45)
#loc33 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":45:31)
#loc34 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":45:60)
#loc35 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":45:52)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc37 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":46:42)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc41 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":47:16)
#loc42 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":48:21)
#loc43 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":49:20)
#loc44 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":50:20)
#loc45 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":51:19)
#loc46 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":52:38)
#loc47 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":52:45)
#loc48 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":52:31)
#loc49 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":52:60)
#loc50 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":52:52)
#loc51 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":53:42)
#loc52 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":55:21)
#loc53 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":56:20)
#loc54 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":57:20)
#loc55 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":58:20)
#loc56 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":59:45)
#loc57 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":59:31)
#loc58 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":59:60)
#loc59 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":59:52)
#loc60 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":60:42)
#loc61 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":61:20)
#loc62 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":62:38)
#loc63 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":62:31)
#loc64 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":62:53)
#loc65 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":62:45)
#loc66 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":63:42)
#loc67 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":64:20)
#loc68 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":65:42)
#loc69 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":65:31)
#loc70 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":65:57)
#loc71 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":65:49)
#loc72 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":66:42)
#loc73 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":67:16)
#loc74 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":68:21)
#loc75 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":69:20)
#loc76 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":70:20)
#loc77 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":71:20)
#loc78 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":72:35)
#loc79 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":72:42)
#loc80 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":72:31)
#loc81 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":72:57)
#loc82 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":72:49)
#loc83 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":73:42)
#loc84 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":74:20)
#loc85 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":75:35)
#loc86 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":75:42)
#loc87 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":75:31)
#loc88 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":75:57)
#loc89 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":75:49)
#loc90 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":76:42)
#loc91 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":77:20)
#loc92 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":78:35)
#loc93 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":78:42)
#loc94 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":78:31)
#loc95 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":78:57)
#loc96 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":78:49)
#loc97 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":79:42)
#loc98 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":83:35)
#loc99 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":86:35)
#loc100 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":89:35)
#loc101 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":92:35)
#loc102 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":95:35)
#loc103 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":98:35)
#loc104 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":101:35)
#loc105 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":104:35)
#loc106 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":105:25)
#loc107 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":105:37)
#loc108 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":106:25)
#loc109 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":106:37)
#loc110 = loc("inductor_cache/wj/cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py":106:4)
#loc111 = loc(callsite(#loc36 at #loc37))
#loc112 = loc(callsite(#loc38 at #loc37))
#loc113 = loc(callsite(#loc39 at #loc37))
#loc114 = loc(callsite(#loc40 at #loc37))
#loc115 = loc(callsite(#loc36 at #loc51))
#loc116 = loc(callsite(#loc38 at #loc51))
#loc117 = loc(callsite(#loc39 at #loc51))
#loc118 = loc(callsite(#loc40 at #loc51))
#loc119 = loc(callsite(#loc36 at #loc60))
#loc120 = loc(callsite(#loc38 at #loc60))
#loc121 = loc(callsite(#loc39 at #loc60))
#loc122 = loc(callsite(#loc40 at #loc60))
#loc123 = loc(callsite(#loc36 at #loc66))
#loc124 = loc(callsite(#loc38 at #loc66))
#loc125 = loc(callsite(#loc39 at #loc66))
#loc126 = loc(callsite(#loc40 at #loc66))
#loc127 = loc(callsite(#loc36 at #loc72))
#loc128 = loc(callsite(#loc38 at #loc72))
#loc129 = loc(callsite(#loc39 at #loc72))
#loc130 = loc(callsite(#loc40 at #loc72))
#loc131 = loc(callsite(#loc36 at #loc83))
#loc132 = loc(callsite(#loc38 at #loc83))
#loc133 = loc(callsite(#loc39 at #loc83))
#loc134 = loc(callsite(#loc40 at #loc83))
#loc135 = loc(callsite(#loc36 at #loc90))
#loc136 = loc(callsite(#loc38 at #loc90))
#loc137 = loc(callsite(#loc39 at #loc90))
#loc138 = loc(callsite(#loc40 at #loc90))
#loc139 = loc(callsite(#loc36 at #loc97))
#loc140 = loc(callsite(#loc38 at #loc97))
#loc141 = loc(callsite(#loc39 at #loc97))
#loc142 = loc(callsite(#loc40 at #loc97))
