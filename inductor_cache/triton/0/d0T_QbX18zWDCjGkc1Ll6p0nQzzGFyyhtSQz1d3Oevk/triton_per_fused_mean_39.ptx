//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mean_39 // -- Begin function triton_per_fused_mean_39
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mean_39
.visible .entry triton_per_fused_mean_39(
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_39_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_39_param_1,
	.param .u32 triton_per_fused_mean_39_param_2,
	.param .u32 triton_per_fused_mean_39_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<71>;
	.reg .f32 	%f<26>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_per_fused_mean_39_param_0];
	ld.param.u64 	%rd4, [triton_per_fused_mean_39_param_1];
$L__tmp0:
	.loc	1 23 28                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:23:33
	shl.b32 	%r27, %r1, 5;
	.loc	1 24 44                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:24:44
	mov.u32 	%r28, %tid.x;
	and.b32  	%r30, %r28, 24;
	shl.b32 	%r31, %r28, 2;
	and.b32  	%r32, %r31, 28;
	and.b32  	%r33, %r28, 31;
	.loc	1 24 23                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:24:23
	or.b32  	%r34, %r27, %r32;
	or.b32  	%r35, %r27, %r33;
	.loc	1 31 19                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:31:19
	bfe.s32 	%r36, %r1, 26, 1;
	shr.u32 	%r37, %r36, 21;
	add.s32 	%r38, %r34, %r37;
	.loc	1 30 19                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:30:19
	and.b32  	%r39, %r38, -2048;
	sub.s32 	%r40, %r34, %r39;
	.loc	1 33 40                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:33:40
	shl.b32 	%r41, %r28, 8;
	and.b32  	%r42, %r41, 30720;
	.loc	1 33 35                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:33:35
	add.s32 	%r43, %r40, %r42;
	.loc	1 33 51                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:33:51
	shl.b32 	%r44, %r38, 4;
	and.b32  	%r45, %r44, -32768;
	.loc	1 33 45                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:33:45
	add.s32 	%r46, %r43, %r45;
	.loc	1 33 30                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:33:30
	mul.wide.s32 	%rd5, %r46, 4;
	add.s64 	%rd1, %rd4, %rd5;
	mov.pred 	%p1, -1;
	.loc	1 33 56                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:33:56
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	shfl.sync.bfly.b32	%r47, %r2, 16, 31, -1;
	mov.b32 	%f5, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f1, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f6;
	shfl.sync.bfly.b32	%r49, %r48, 8, 31, -1;
	mov.b32 	%f7, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f6, %f7;
	.loc	2 267 36                        // standard.py:267:36
	shfl.sync.bfly.b32	%r50, %r3, 16, 31, -1;
	mov.b32 	%f9, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f2, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f10;
	shfl.sync.bfly.b32	%r52, %r51, 8, 31, -1;
	mov.b32 	%f11, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	shfl.sync.bfly.b32	%r53, %r4, 16, 31, -1;
	mov.b32 	%f13, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f3, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f14;
	shfl.sync.bfly.b32	%r55, %r54, 8, 31, -1;
	mov.b32 	%f15, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	shfl.sync.bfly.b32	%r56, %r5, 16, 31, -1;
	mov.b32 	%f17, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f4, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f18;
	shfl.sync.bfly.b32	%r58, %r57, 8, 31, -1;
	mov.b32 	%f19, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p2, %r30, 0;
	bfe.u32 	%r59, %r28, 5, 2;
	shl.b32 	%r60, %r59, 2;
	shl.b32 	%r61, %r32, 4;
	or.b32  	%r62, %r61, %r60;
	mov.u32 	%r63, global_smem;
	add.s32 	%r6, %r63, %r62;
	mov.b32 	%r7, %f8;
	// begin inline asm
	@%p2 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	add.s32 	%r8, %r6, 16;
	mov.b32 	%r9, %f12;
	// begin inline asm
	@%p2 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	add.s32 	%r10, %r6, 32;
	mov.b32 	%r11, %f16;
	// begin inline asm
	@%p2 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	add.s32 	%r12, %r6, 48;
	mov.b32 	%r13, %f20;
	// begin inline asm
	@%p2 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r28, 128;
	add.s32 	%r15, %r63, %r31;
	// begin inline asm
	@%p6 ld.shared.b32 %r14, [ %r15 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r14;
	shfl.sync.bfly.b32	%r64, %r14, 2, 31, -1;
	mov.b32 	%f22, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f23;
	shfl.sync.bfly.b32	%r66, %r65, 1, 31, -1;
	mov.b32 	%f24, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r67, %r28, 3;
	setp.eq.s32 	%p10, %r67, 0;
	and.pred  	%p7, %p6, %p10;
	mov.b32 	%r17, %f25;
	// begin inline asm
	@%p7 st.shared.b32 [ %r15 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r68, %r63, %r61;
	ld.shared.u32 	%r19, [%r68];
	ld.shared.u32 	%r20, [%r68+16];
	ld.shared.u32 	%r21, [%r68+32];
	ld.shared.u32 	%r22, [%r68+48];
$L__tmp2:
	.loc	1 37 18                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:37:18
	bar.sync 	0;
	mad.lo.s32 	%r18, %r32, -12, %r68;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r18 + 0 ], { %r19, %r20, %r21, %r22 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r69, %r33, 2;
	add.s32 	%r70, %r63, %r69;
	ld.shared.u32 	%r24, [%r70];
	mov.b32 	%r25, 1098907648;
	// begin inline asm
	div.full.f32 %r26, %r24, %r25;
	// end inline asm
	.loc	1 38 4                          // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:38:4
	bar.sync 	0;
	.loc	1 39 28                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:39:28
	mul.wide.s32 	%rd6, %r35, 4;
	add.s64 	%rd2, %rd3, %rd6;
	.loc	1 39 39                         // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:39:39
	setp.eq.s32 	%p9, %r59, 0;
	// begin inline asm
	@%p9 st.global.b32 [ %rd2 + 0 ], { %r26 };
	// end inline asm
	.loc	1 39 4                          // cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py:39:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bm/cbm6fmqb6kk3gszma4bd2puavzyiktvmdksmwqgs6uqsqriippqr.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 169                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 109
.b8 54
.b8 102
.b8 109
.b8 113
.b8 98
.b8 54
.b8 107
.b8 107
.b8 51
.b8 103
.b8 115
.b8 122
.b8 109
.b8 97
.b8 52
.b8 98
.b8 100
.b8 50
.b8 112
.b8 117
.b8 97
.b8 118
.b8 122
.b8 121
.b8 105
.b8 107
.b8 116
.b8 118
.b8 109
.b8 100
.b8 107
.b8 115
.b8 109
.b8 119
.b8 113
.b8 103
.b8 115
.b8 54
.b8 117
.b8 113
.b8 115
.b8 113
.b8 114
.b8 105
.b8 105
.b8 112
.b8 112
.b8 113
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 51
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x93:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 35                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
