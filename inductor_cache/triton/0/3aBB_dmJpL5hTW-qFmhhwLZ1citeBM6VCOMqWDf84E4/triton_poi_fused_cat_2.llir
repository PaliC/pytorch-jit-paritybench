; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, ptr addrspace(1) %10, i32 %11) local_unnamed_addr !dbg !7 {
  %13 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %14 = shl i32 %13, 7, !dbg !11
  %15 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %16 = and i32 %15, 127, !dbg !12
  %17 = or disjoint i32 %14, %16, !dbg !13
  %18 = icmp slt i32 %17, 644, !dbg !14
  %.frozen = freeze i32 %17, !dbg !15
  %19 = sdiv i32 %.frozen, 161, !dbg !15
  %20 = mul i32 %19, 161, !dbg !16
  %.decomposed = sub i32 %.frozen, %20, !dbg !16
  %21 = icmp slt i32 %.decomposed, 4, !dbg !17
  %22 = mul nsw i32 %19, 161, !dbg !18
  %23 = add i32 %22, %.decomposed, !dbg !19
  %24 = sext i32 %23 to i64, !dbg !20
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !20
  %26 = and i1 %18, %21, !dbg !21
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %26, i32 0, i1 %26) #1, !dbg !22
  %28 = add nsw i32 %.decomposed, -4, !dbg !23
  %29 = icmp ult i32 %28, 144, !dbg !23
  %30 = mul nsw i32 %19, 144, !dbg !24
  %31 = add nsw i32 %30, %28, !dbg !25
  %32 = sext i32 %31 to i64, !dbg !26
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %32, !dbg !26
  %34 = and i1 %18, %29, !dbg !27
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %34, i32 0, i1 %34) #1, !dbg !28
  %36 = bitcast i32 %35 to float, !dbg !28
  %37 = sext i32 %28 to i64, !dbg !29
  %38 = getelementptr float, ptr addrspace(1) %2, i64 %37, !dbg !29
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %34, i32 0, i1 %34) #1, !dbg !30
  %40 = bitcast i32 %39 to float, !dbg !30
  %41 = fadd float %36, %40, !dbg !31
  %42 = getelementptr float, ptr addrspace(1) %3, i64 %37, !dbg !32
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %42, i1 %34, i32 0, i1 %34) #1, !dbg !33
  %44 = bitcast i32 %43 to float, !dbg !33
  %45 = fadd float %41, %44, !dbg !34
  %46 = add nsw i32 %.decomposed, -148, !dbg !35
  %47 = icmp ult i32 %46, 10, !dbg !35
  %48 = mul nsw i32 %19, 10, !dbg !36
  %49 = add nsw i32 %48, %46, !dbg !37
  %50 = sext i32 %49 to i64, !dbg !38
  %51 = getelementptr float, ptr addrspace(1) %4, i64 %50, !dbg !38
  %52 = and i1 %18, %47, !dbg !39
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %52, i32 0, i1 %52) #1, !dbg !40
  %54 = bitcast i32 %53 to float, !dbg !40
  %55 = sext i32 %46 to i64, !dbg !41
  %56 = getelementptr float, ptr addrspace(1) %5, i64 %55, !dbg !41
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %52, i32 0, i1 %52) #1, !dbg !42
  %58 = bitcast i32 %57 to float, !dbg !42
  %59 = fadd float %54, %58, !dbg !43
  %60 = getelementptr float, ptr addrspace(1) %6, i64 %55, !dbg !44
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 %52, i32 0, i1 %52) #1, !dbg !45
  %62 = bitcast i32 %61 to float, !dbg !45
  %63 = fadd float %59, %62, !dbg !46
  %64 = icmp sgt i32 %.decomposed, 157, !dbg !47
  %65 = mul nsw i32 %19, 3, !dbg !48
  %66 = add nsw i32 %.decomposed, -158, !dbg !49
  %67 = add nsw i32 %65, %66, !dbg !50
  %68 = sext i32 %67 to i64, !dbg !51
  %69 = getelementptr float, ptr addrspace(1) %7, i64 %68, !dbg !51
  %70 = and i1 %18, %64, !dbg !52
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %69, i1 %70, i32 0, i1 %70) #1, !dbg !53
  %72 = bitcast i32 %71 to float, !dbg !53
  %73 = sext i32 %66 to i64, !dbg !54
  %74 = getelementptr float, ptr addrspace(1) %8, i64 %73, !dbg !54
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %74, i1 %70, i32 0, i1 %70) #1, !dbg !55
  %76 = bitcast i32 %75 to float, !dbg !55
  %77 = fadd float %72, %76, !dbg !56
  %78 = getelementptr float, ptr addrspace(1) %9, i64 %73, !dbg !57
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %78, i1 %70, i32 0, i1 %70) #1, !dbg !58
  %80 = bitcast i32 %79 to float, !dbg !58
  %81 = fadd float %77, %80, !dbg !59
  %82 = select i1 %64, float %81, float 0.000000e+00, !dbg !60
  %83 = select i1 %47, float %63, float %82, !dbg !61
  %84 = select i1 %29, float %45, float %83, !dbg !61
  %85 = sext i32 %17 to i64, !dbg !62
  %86 = getelementptr float, ptr addrspace(1) %10, i64 %85, !dbg !62
  %87 = bitcast float %84 to i32, !dbg !63
  %88 = select i1 %21, i32 %27, i32 %87, !dbg !64
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %88, ptr addrspace(1) %86, i1 %18) #1, !dbg !63
  ret void, !dbg !65
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "crhdteesukvl5bcghqy5kbwu3tkfiztx4uwssiksrnxccie4zedb.py", directory: "inductor_cache/rh")
!4 = !{ptr @triton_poi_fused_cat_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_2", linkageName: "triton_poi_fused_cat_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 34, scope: !7)
!19 = !DILocation(line: 32, column: 40, scope: !7)
!20 = !DILocation(line: 32, column: 30, scope: !7)
!21 = !DILocation(line: 32, column: 53, scope: !7)
!22 = !DILocation(line: 32, column: 46, scope: !7)
!23 = !DILocation(line: 36, column: 18, scope: !7)
!24 = !DILocation(line: 37, column: 35, scope: !7)
!25 = !DILocation(line: 37, column: 41, scope: !7)
!26 = !DILocation(line: 37, column: 31, scope: !7)
!27 = !DILocation(line: 37, column: 61, scope: !7)
!28 = !DILocation(line: 37, column: 54, scope: !7)
!29 = !DILocation(line: 38, column: 31, scope: !7)
!30 = !DILocation(line: 38, column: 43, scope: !7)
!31 = !DILocation(line: 39, column: 20, scope: !7)
!32 = !DILocation(line: 40, column: 31, scope: !7)
!33 = !DILocation(line: 40, column: 43, scope: !7)
!34 = !DILocation(line: 41, column: 20, scope: !7)
!35 = !DILocation(line: 47, column: 20, scope: !7)
!36 = !DILocation(line: 48, column: 34, scope: !7)
!37 = !DILocation(line: 48, column: 40, scope: !7)
!38 = !DILocation(line: 48, column: 31, scope: !7)
!39 = !DILocation(line: 48, column: 63, scope: !7)
!40 = !DILocation(line: 48, column: 55, scope: !7)
!41 = !DILocation(line: 49, column: 31, scope: !7)
!42 = !DILocation(line: 49, column: 45, scope: !7)
!43 = !DILocation(line: 50, column: 20, scope: !7)
!44 = !DILocation(line: 51, column: 31, scope: !7)
!45 = !DILocation(line: 51, column: 45, scope: !7)
!46 = !DILocation(line: 52, column: 20, scope: !7)
!47 = !DILocation(line: 55, column: 20, scope: !7)
!48 = !DILocation(line: 58, column: 33, scope: !7)
!49 = !DILocation(line: 58, column: 48, scope: !7)
!50 = !DILocation(line: 58, column: 39, scope: !7)
!51 = !DILocation(line: 58, column: 31, scope: !7)
!52 = !DILocation(line: 58, column: 62, scope: !7)
!53 = !DILocation(line: 58, column: 54, scope: !7)
!54 = !DILocation(line: 59, column: 31, scope: !7)
!55 = !DILocation(line: 59, column: 45, scope: !7)
!56 = !DILocation(line: 60, column: 20, scope: !7)
!57 = !DILocation(line: 61, column: 31, scope: !7)
!58 = !DILocation(line: 61, column: 45, scope: !7)
!59 = !DILocation(line: 62, column: 20, scope: !7)
!60 = !DILocation(line: 64, column: 35, scope: !7)
!61 = !DILocation(line: 0, scope: !7)
!62 = !DILocation(line: 68, column: 25, scope: !7)
!63 = !DILocation(line: 68, column: 37, scope: !7)
!64 = !DILocation(line: 67, column: 33, scope: !7)
!65 = !DILocation(line: 68, column: 4, scope: !7)
