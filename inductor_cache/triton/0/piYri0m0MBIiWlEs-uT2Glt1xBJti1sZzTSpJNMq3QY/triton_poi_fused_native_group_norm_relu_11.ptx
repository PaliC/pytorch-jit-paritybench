//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_native_group_norm_relu_11 // -- Begin function triton_poi_fused_native_group_norm_relu_11
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_native_group_norm_relu_11
.visible .entry triton_poi_fused_native_group_norm_relu_11(
	.param .u64 .ptr .global .align 1 triton_poi_fused_native_group_norm_relu_11_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_native_group_norm_relu_11_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_native_group_norm_relu_11_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_native_group_norm_relu_11_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_native_group_norm_relu_11_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_native_group_norm_relu_11_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_native_group_norm_relu_11_param_6,
	.param .u32 triton_poi_fused_native_group_norm_relu_11_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<35>;
	.reg .b16 	%rs<29>;
	.reg .b32 	%r<131>;
	.reg .f32 	%f<97>;
	.reg .b64 	%rd<44>;
	.loc	1 19 0                          // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd27, [triton_poi_fused_native_group_norm_relu_11_param_0];
	ld.param.u64 	%rd28, [triton_poi_fused_native_group_norm_relu_11_param_1];
$L__tmp0:
	.loc	1 21 28                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:21:33
	shl.b32 	%r82, %r1, 10;
	ld.param.u64 	%rd29, [triton_poi_fused_native_group_norm_relu_11_param_2];
	ld.param.u64 	%rd30, [triton_poi_fused_native_group_norm_relu_11_param_3];
	.loc	1 22 36                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:22:36
	mov.u32 	%r83, %tid.x;
	shl.b32 	%r84, %r83, 2;
	ld.param.u64 	%rd31, [triton_poi_fused_native_group_norm_relu_11_param_4];
	and.b32  	%r85, %r84, 508;
	ld.param.u64 	%rd32, [triton_poi_fused_native_group_norm_relu_11_param_5];
	.loc	1 22 23                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:22:23
	or.b32  	%r86, %r82, %r85;
	ld.param.u64 	%rd33, [triton_poi_fused_native_group_norm_relu_11_param_6];
	or.b32  	%r87, %r86, 1;
	or.b32  	%r88, %r86, 2;
	or.b32  	%r89, %r86, 3;
	.loc	1 25 19                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:25:19
	bfe.s32 	%r90, %r1, 21, 1;
	shr.u32 	%r91, %r90, 25;
	add.s32 	%r92, %r86, %r91;
	and.b32  	%r93, %r92, -128;
	sub.s32 	%r94, %r86, %r93;
	add.s32 	%r95, %r87, %r91;
	and.b32  	%r96, %r95, 65408;
	sub.s32 	%r97, %r87, %r96;
	add.s32 	%r98, %r88, %r91;
	and.b32  	%r99, %r98, 65408;
	sub.s32 	%r100, %r88, %r99;
	add.s32 	%r101, %r89, %r91;
	and.b32  	%r102, %r101, 65408;
	sub.s32 	%r103, %r89, %r102;
	.loc	1 26 19                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:26:19
	shr.u32 	%r104, %r90, 13;
	add.s32 	%r105, %r104, %r86;
	shr.s32 	%r106, %r105, 19;
	add.s32 	%r107, %r105, 512;
	shr.s32 	%r108, %r107, 19;
	.loc	1 27 30                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:27:30
	mul.wide.s32 	%rd34, %r86, 4;
	add.s64 	%rd1, %rd27, %rd34;
	add.s64 	%rd2, %rd1, 2048;
	mov.pred 	%p1, -1;
	.loc	1 27 35                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:27:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 28 30                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:28:30
	add.s64 	%rd3, %rd28, %rd34;
	add.s64 	%rd4, %rd3, 2048;
	.loc	1 28 35                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:28:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 29 32                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:29:32
	shl.b32 	%r109, %r106, 2;
	shl.b32 	%r110, %r108, 2;
	.loc	1 29 44                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:29:44
	cvt.u16.u32 	%rs1, %r94;
	cvt.s8.s32 	%rs2, %r94;
	shr.u16 	%rs3, %rs2, 10;
	and.b16  	%rs4, %rs3, 31;
	add.s16 	%rs5, %rs1, %rs4;
	cvt.s16.s8 	%rs6, %rs5;
	shr.s16 	%rs7, %rs6, 5;
	cvt.s32.s16 	%r111, %rs7;
	cvt.u16.u32 	%rs8, %r97;
	cvt.s8.s32 	%rs9, %r97;
	shr.u16 	%rs10, %rs9, 10;
	and.b16  	%rs11, %rs10, 31;
	add.s16 	%rs12, %rs8, %rs11;
	cvt.s16.s8 	%rs13, %rs12;
	shr.s16 	%rs14, %rs13, 5;
	cvt.s32.s16 	%r112, %rs14;
	cvt.u16.u32 	%rs15, %r100;
	cvt.s8.s32 	%rs16, %r100;
	shr.u16 	%rs17, %rs16, 10;
	and.b16  	%rs18, %rs17, 31;
	add.s16 	%rs19, %rs15, %rs18;
	cvt.s16.s8 	%rs20, %rs19;
	shr.s16 	%rs21, %rs20, 5;
	cvt.s32.s16 	%r113, %rs21;
	cvt.u16.u32 	%rs22, %r103;
	cvt.s8.s32 	%rs23, %r103;
	shr.u16 	%rs24, %rs23, 10;
	and.b16  	%rs25, %rs24, 31;
	add.s16 	%rs26, %rs22, %rs25;
	cvt.s16.s8 	%rs27, %rs26;
	shr.s16 	%rs28, %rs27, 5;
	cvt.s32.s16 	%r114, %rs28;
	.loc	1 29 38                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:29:38
	add.s32 	%r115, %r109, %r111;
	add.s32 	%r116, %r109, %r112;
	add.s32 	%r117, %r109, %r113;
	add.s32 	%r118, %r109, %r114;
	add.s32 	%r119, %r110, %r111;
	add.s32 	%r120, %r110, %r112;
	add.s32 	%r121, %r110, %r113;
	add.s32 	%r122, %r110, %r114;
	.loc	1 29 30                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:29:30
	mul.wide.s32 	%rd35, %r115, 4;
	add.s64 	%rd5, %rd29, %rd35;
	mul.wide.s32 	%rd36, %r116, 4;
	add.s64 	%rd6, %rd29, %rd36;
	mul.wide.s32 	%rd37, %r117, 4;
	add.s64 	%rd7, %rd29, %rd37;
	mul.wide.s32 	%rd38, %r118, 4;
	add.s64 	%rd8, %rd29, %rd38;
	mul.wide.s32 	%rd39, %r119, 4;
	add.s64 	%rd9, %rd29, %rd39;
	mul.wide.s32 	%rd40, %r120, 4;
	add.s64 	%rd10, %rd29, %rd40;
	mul.wide.s32 	%rd41, %r121, 4;
	add.s64 	%rd11, %rd29, %rd41;
	mul.wide.s32 	%rd42, %r122, 4;
	add.s64 	%rd12, %rd29, %rd42;
	.loc	1 29 50                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:29:50
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:30:30
	add.s64 	%rd13, %rd30, %rd35;
	add.s64 	%rd14, %rd30, %rd36;
	add.s64 	%rd15, %rd30, %rd37;
	add.s64 	%rd16, %rd30, %rd38;
	add.s64 	%rd17, %rd30, %rd39;
	add.s64 	%rd18, %rd30, %rd40;
	add.s64 	%rd19, %rd30, %rd41;
	add.s64 	%rd20, %rd30, %rd42;
	.loc	1 30 50                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:30:50
	// begin inline asm
	mov.u32 %r51, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r51 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r54, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r54 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r57, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r57 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r60, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r60 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r63, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r63 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r66, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r66 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r69, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r69 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r72, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r72 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 31 31                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:31:31
	mul.wide.s32 	%rd43, %r94, 4;
	add.s64 	%rd21, %rd31, %rd43;
	.loc	1 31 36                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:31:36
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r38, %r39, %r40, %r41 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 32 31                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:32:31
	add.s64 	%rd23, %rd32, %rd43;
	.loc	1 32 36                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:32:36
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r46, 0x0;
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r46, %r47, %r48, %r49 }, [ %rd23 + 0 ];
	// end inline asm
	mov.b32 	%r52, 1207959552;
	.loc	1 36 18                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:36:18
	// begin inline asm
	div.full.f32 %r50, %r51, %r52;
	// end inline asm
	mov.b32 	%f1, %r50;
	// begin inline asm
	div.full.f32 %r53, %r54, %r52;
	// end inline asm
	mov.b32 	%f2, %r53;
	// begin inline asm
	div.full.f32 %r56, %r57, %r52;
	// end inline asm
	mov.b32 	%f3, %r56;
	// begin inline asm
	div.full.f32 %r59, %r60, %r52;
	// end inline asm
	mov.b32 	%f4, %r59;
	// begin inline asm
	div.full.f32 %r62, %r63, %r52;
	// end inline asm
	mov.b32 	%f5, %r62;
	// begin inline asm
	div.full.f32 %r65, %r66, %r52;
	// end inline asm
	mov.b32 	%f6, %r65;
	// begin inline asm
	div.full.f32 %r68, %r69, %r52;
	// end inline asm
	mov.b32 	%f7, %r68;
	// begin inline asm
	div.full.f32 %r71, %r72, %r52;
	// end inline asm
	mov.b32 	%f8, %r71;
	.loc	1 38 18                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:38:18
	add.f32 	%f9, %f1, 0f3727C5AC;
	add.f32 	%f10, %f2, 0f3727C5AC;
	add.f32 	%f11, %f3, 0f3727C5AC;
	add.f32 	%f12, %f4, 0f3727C5AC;
	add.f32 	%f13, %f5, 0f3727C5AC;
	add.f32 	%f14, %f6, 0f3727C5AC;
	add.f32 	%f15, %f7, 0f3727C5AC;
	add.f32 	%f16, %f8, 0f3727C5AC;
	.loc	1 39 28                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:39:28
	rsqrt.approx.ftz.f32 	%f17, %f9;
	rsqrt.approx.ftz.f32 	%f18, %f10;
	rsqrt.approx.ftz.f32 	%f19, %f11;
	rsqrt.approx.ftz.f32 	%f20, %f12;
	rsqrt.approx.ftz.f32 	%f21, %f13;
	rsqrt.approx.ftz.f32 	%f22, %f14;
	rsqrt.approx.ftz.f32 	%f23, %f15;
	rsqrt.approx.ftz.f32 	%f24, %f16;
	.loc	1 29 50                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:29:50
	mov.b32 	%f25, %r25;
	mov.b32 	%f26, %r24;
	mov.b32 	%f27, %r23;
	mov.b32 	%f28, %r22;
	mov.b32 	%f29, %r21;
	mov.b32 	%f30, %r20;
	mov.b32 	%f31, %r19;
	mov.b32 	%f32, %r18;
	.loc	1 27 35                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:27:35
	mov.b32 	%f33, %r2;
	mov.b32 	%f34, %r3;
	mov.b32 	%f35, %r4;
	mov.b32 	%f36, %r5;
	mov.b32 	%f37, %r6;
	mov.b32 	%f38, %r7;
	mov.b32 	%f39, %r8;
	mov.b32 	%f40, %r9;
	.loc	1 28 35                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:28:35
	mov.b32 	%f41, %r10;
	mov.b32 	%f42, %r11;
	mov.b32 	%f43, %r12;
	mov.b32 	%f44, %r13;
	mov.b32 	%f45, %r14;
	mov.b32 	%f46, %r15;
	mov.b32 	%f47, %r16;
	mov.b32 	%f48, %r17;
	.loc	1 33 18                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:33:18
	add.f32 	%f49, %f40, %f48;
	add.f32 	%f50, %f39, %f47;
	add.f32 	%f51, %f38, %f46;
	add.f32 	%f52, %f37, %f45;
	add.f32 	%f53, %f36, %f44;
	add.f32 	%f54, %f35, %f43;
	add.f32 	%f55, %f34, %f42;
	add.f32 	%f56, %f33, %f41;
	.loc	1 34 18                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:34:18
	sub.f32 	%f57, %f56, %f32;
	sub.f32 	%f58, %f55, %f31;
	sub.f32 	%f59, %f54, %f30;
	sub.f32 	%f60, %f53, %f29;
	sub.f32 	%f61, %f52, %f28;
	sub.f32 	%f62, %f51, %f27;
	sub.f32 	%f63, %f50, %f26;
	sub.f32 	%f64, %f49, %f25;
	.loc	1 32 36                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:32:36
	mov.b32 	%f65, %r49;
	mov.b32 	%f66, %r48;
	mov.b32 	%f67, %r47;
	mov.b32 	%f68, %r46;
	mov.b32 	%f69, %r45;
	mov.b32 	%f70, %r44;
	mov.b32 	%f71, %r43;
	mov.b32 	%f72, %r42;
	.loc	1 31 36                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:31:36
	mov.b32 	%f73, %r41;
	mov.b32 	%f74, %r40;
	mov.b32 	%f75, %r39;
	mov.b32 	%f76, %r38;
	mov.b32 	%f77, %r37;
	mov.b32 	%f78, %r36;
	mov.b32 	%f79, %r35;
	mov.b32 	%f80, %r34;
	.loc	1 40 19                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:40:19
	mul.f32 	%f81, %f64, %f24;
	mul.f32 	%f82, %f63, %f23;
	mul.f32 	%f83, %f62, %f22;
	mul.f32 	%f84, %f61, %f21;
	mul.f32 	%f85, %f60, %f20;
	mul.f32 	%f86, %f59, %f19;
	mul.f32 	%f87, %f58, %f18;
	mul.f32 	%f88, %f57, %f17;
	.loc	1 42 20                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:42:20
	fma.rn.f32 	%f89, %f88, %f80, %f72;
	fma.rn.f32 	%f90, %f87, %f79, %f71;
	fma.rn.f32 	%f91, %f86, %f78, %f70;
	fma.rn.f32 	%f92, %f85, %f77, %f69;
	fma.rn.f32 	%f93, %f84, %f76, %f68;
	fma.rn.f32 	%f94, %f83, %f75, %f67;
	fma.rn.f32 	%f95, %f82, %f74, %f66;
	fma.rn.f32 	%f96, %f81, %f73, %f65;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p27, %f96, 0f00000000;
	setp.lt.f32 	%p28, %f95, 0f00000000;
	setp.lt.f32 	%p29, %f94, 0f00000000;
	setp.lt.f32 	%p30, %f93, 0f00000000;
	setp.lt.f32 	%p31, %f92, 0f00000000;
	setp.lt.f32 	%p32, %f91, 0f00000000;
	setp.lt.f32 	%p33, %f90, 0f00000000;
	setp.lt.f32 	%p34, %f89, 0f00000000;
$L__tmp2:
	.loc	1 45 25                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:45:25
	add.s64 	%rd25, %rd33, %rd34;
	add.s64 	%rd26, %rd25, 2048;
	.loc	1 45 37                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:45:37
	mov.b32 	%r123, %f96;
	mov.b32 	%r124, %f95;
	mov.b32 	%r125, %f94;
	mov.b32 	%r126, %f93;
	mov.b32 	%r127, %f92;
	mov.b32 	%r128, %f91;
	mov.b32 	%r129, %f90;
	mov.b32 	%r130, %f89;
$L__tmp3:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r74, 0, %r130, %p34;
	selp.b32 	%r75, 0, %r129, %p33;
	selp.b32 	%r76, 0, %r128, %p32;
	selp.b32 	%r77, 0, %r127, %p31;
$L__tmp4:
	.loc	1 45 37                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:45:37
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd25 + 0 ], { %r74, %r75, %r76, %r77 };
	// end inline asm
$L__tmp5:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r78, 0, %r126, %p30;
	selp.b32 	%r79, 0, %r125, %p29;
	selp.b32 	%r80, 0, %r124, %p28;
	selp.b32 	%r81, 0, %r123, %p27;
$L__tmp6:
	.loc	1 45 37                         // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:45:37
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd26 + 0 ], { %r78, %r79, %r80, %r81 };
	// end inline asm
	.loc	1 45 4                          // cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py:45:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/xd/cxdv47e3homlmjkar5dodktw4ujyeys74ojn636mgbxgz24me3we.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 187                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb4 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 100
.b8 118
.b8 52
.b8 55
.b8 101
.b8 51
.b8 104
.b8 111
.b8 109
.b8 108
.b8 109
.b8 106
.b8 107
.b8 97
.b8 114
.b8 53
.b8 100
.b8 111
.b8 100
.b8 107
.b8 116
.b8 119
.b8 52
.b8 117
.b8 106
.b8 121
.b8 101
.b8 121
.b8 115
.b8 55
.b8 52
.b8 111
.b8 106
.b8 110
.b8 54
.b8 51
.b8 54
.b8 109
.b8 103
.b8 98
.b8 120
.b8 103
.b8 122
.b8 50
.b8 52
.b8 109
.b8 101
.b8 51
.b8 119
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 100
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 49
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x90:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
