//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__unsafe_index_add_convolution_native_group_norm_26 // -- Begin function triton_red_fused__unsafe_index_add_convolution_native_group_norm_26
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__unsafe_index_add_convolution_native_group_norm_26
.visible .entry triton_red_fused__unsafe_index_add_convolution_native_group_norm_26(
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_7,
	.param .u32 triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_8,
	.param .u32 triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<49>;
	.reg .b32 	%r<128>;
	.reg .f32 	%f<56>;
	.reg .b64 	%rd<92>;
	.loc	1 19 0                          // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:19:0

// %bb.0:                               // %.peel.next
	ld.param.u64 	%rd15, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_7];
	ld.param.u64 	%rd14, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_6];
	ld.param.u64 	%rd13, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_5];
	ld.param.u64 	%rd12, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_1];
	ld.param.u64 	%rd17, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_0];
$L__tmp0:
	.loc	1 22 28                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:22:28
	// begin inline asm
	mov.u32 %r11, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:22:33
	shl.b32 	%r23, %r11, 6;
	ld.param.u64 	%rd27, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_2];
	.loc	1 23 44                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:23:44
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd28, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_3];
	and.b32  	%r2, %r1, 3;
	ld.param.u64 	%rd29, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_26_param_4];
	and.b32  	%r3, %r1, 63;
	bfe.u32 	%r24, %r1, 2, 4;
	and.b32  	%r25, %r1, 64;
	shr.u32 	%r26, %r25, 2;
	or.b32  	%r27, %r24, %r26;
	and.b32  	%r28, %r1, 128;
	shr.u32 	%r29, %r28, 2;
	or.b32  	%r30, %r27, %r29;
	.loc	1 23 23                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:23:23
	or.b32  	%r4, %r23, %r3;
	or.b32  	%r5, %r23, %r30;
	.loc	1 24 21                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:24:21
	setp.lt.s32 	%p7, %r4, 256;
	setp.lt.s32 	%p9, %r5, 256;
	.loc	1 27 19                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:27:19
	bfe.s32 	%r31, %r11, 25, 1;
	shr.u32 	%r32, %r31, 26;
	add.s32 	%r33, %r4, %r32;
	and.b32  	%r34, %r33, 2147483584;
	sub.s32 	%r35, %r4, %r34;
	.loc	1 42 42                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:42:42
	shl.b32 	%r36, %r35, 1;
	.loc	1 43 45                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:43:45
	shl.b32 	%r37, %r5, 13;
	.loc	1 54 76                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:54:76
	shl.b32 	%r38, %r4, 10;
	.loc	1 54 71                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:54:71
	cvt.s64.s32 	%rd1, %r38;
	.loc	1 31 36                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:31:36
	or.b32  	%r39, %r25, %r28;
	shr.u32 	%r6, %r39, 6;
	or.b32  	%r40, %r37, %r2;
	shl.b32 	%r41, %r1, 6;
	and.b32  	%r42, %r41, 192;
	or.b32  	%r43, %r30, %r42;
	and.b32  	%r44, %r1, 255;
	shr.u32 	%r45, %r42, 4;
	mov.u32 	%r46, global_smem;
	add.s32 	%r47, %r46, %r45;
	shl.b32 	%r48, %r43, 2;
	add.s32 	%r69, %r47, %r48;
	shr.u32 	%r49, %r1, 4;
	and.b32  	%r50, %r49, 12;
	add.s32 	%r51, %r46, %r50;
	shl.b32 	%r52, %r44, 2;
	add.s32 	%r8, %r51, %r52;
	shl.b32 	%r53, %r1, 2;
	and.b32  	%r54, %r53, 252;
	or.b32  	%r55, %r54, %r6;
	add.s32 	%r56, %r46, %r54;
	shl.b32 	%r57, %r55, 2;
	add.s32 	%r76, %r56, %r57;
	and.b32  	%r58, %r1, 252;
	add.s32 	%r59, %r46, %r58;
	add.s32 	%r10, %r59, %r52;
	mov.pred 	%p32, -1;
	.loc	1 39 39                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:39:39
	// begin inline asm
	mov.u64 %rd16, 0x0;
	@%p32 ld.global.L1::evict_last.b64 { %rd16 }, [ %rd17 + 0 ];
	@!%p32 mov.u64 %rd16, 0x0;
	// end inline asm
	.loc	1 40 39                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:40:39
	// begin inline asm
	mov.u64 %rd18, 0x0;
	@%p32 ld.global.L1::evict_last.b64 { %rd18 }, [ %rd17 + 0 ];
	@!%p32 mov.u64 %rd18, 0x0;
	// end inline asm
	.loc	1 41 34                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:41:34
	mul.wide.u32 	%rd30, %r6, 8;
	add.s64 	%rd21, %rd17, %rd30;
	.loc	1 41 39                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:41:39
	// begin inline asm
	mov.u64 %rd20, 0x0;
	@%p32 ld.global.L1::evict_last.b64 { %rd20 }, [ %rd21 + 0 ];
	@!%p32 mov.u64 %rd20, 0x0;
	// end inline asm
	.loc	1 42 35                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:42:35
	mul.wide.s32 	%rd31, %r36, 4;
	add.s64 	%rd22, %rd27, %rd31;
	mov.b32 	%r13, 0;
	.loc	1 42 47                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:42:47
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r12 }, [ %rd22 + 0 ];
	@!%p7 mov.u32 %r12, %r13;
	// end inline asm
	.loc	1 43 35                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:43:35
	mul.wide.s32 	%rd32, %r40, 4;
	add.s64 	%rd23, %rd28, %rd32;
	.loc	1 43 50                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:43:50
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p9 ld.global.L1::evict_first.b32 { %r17 }, [ %rd23 + 0 ];
	@!%p9 mov.u32 %r17, %r13;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p32 st.shared.b32 [ %r69 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f10, [%r8];
	.loc	1 47 36                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:47:36
	shr.u64 	%rd33, %rd16, 60;
	and.b64  	%rd34, %rd33, 8;
	add.s64 	%rd35, %rd34, %rd16;
	.loc	1 50 36                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:50:36
	shr.u64 	%rd36, %rd18, 60;
	and.b64  	%rd37, %rd36, 8;
	add.s64 	%rd38, %rd37, %rd18;
	.loc	1 54 35                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:54:35
	shl.b64 	%rd39, %rd20, 2;
	add.s64 	%rd40, %rd12, %rd39;
	shr.u64 	%rd41, %rd20, 58;
	and.b64  	%rd42, %rd41, 32;
	add.s64 	%rd43, %rd40, %rd42;
	shl.b64 	%rd44, %rd38, 5;
	add.s64 	%rd45, %rd43, %rd44;
	shl.b64 	%rd46, %rd35, 8;
	add.s64 	%rd47, %rd45, %rd46;
	mul.wide.s32 	%rd48, %r38, 4;
	add.s64 	%rd24, %rd47, %rd48;
	.loc	1 54 81                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:54:81
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r18 }, [ %rd24 + 0 ];
	@!%p7 mov.u32 %r18, %r13;
	// end inline asm
	.loc	1 42 47                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:42:47
	mov.b32 	%f11, %r12;
	.loc	1 54 81                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:54:81
	mov.b32 	%f12, %r18;
	.loc	1 55 24                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:55:24
	add.f32 	%f13, %f11, %f12;
	.loc	1 56 24                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:56:24
	add.f32 	%f14, %f10, %f13;
	.loc	1 64 29                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:64:29
	add.s64 	%rd25, %rd29, %rd32;
	.loc	1 64 51                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:64:51
	bar.sync 	0;
	mov.b32 	%r21, %f14;
	// begin inline asm
	@%p32 st.shared.b32 [ %r76 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r22, [%r10];
	// begin inline asm
	@%p9 st.global.b32 [ %rd25 + 0 ], { %r22 };
	// end inline asm
	.loc	1 63 66                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:63:66
	selp.f32 	%f53, 0f3F800000, 0f00000000, %p7;
	.loc	1 61 62                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:61:62
	selp.f32 	%f55, %f14, 0f00000000, %p7;
	.loc	1 31 36                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:31:36
	or.b32  	%r60, %r23, %r29;
	or.b32  	%r61, %r60, %r26;
	or.b32  	%r62, %r61, %r24;
	shl.b32 	%r63, %r62, 13;
	or.b32  	%r64, %r63, %r2;
	mul.wide.s32 	%rd49, %r64, 4;
	or.b64  	%rd50, %rd49, 16;
	add.s64 	%rd90, %rd29, %rd50;
	add.s64 	%rd89, %rd28, %rd50;
	mov.f32 	%f54, 0f00000000;
	mov.u64 	%rd91, 4;
	shl.b64 	%rd84, %rd1, 2;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 36                          // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:0:36
	cvt.u32.u64 	%r79, %rd91;
	.loc	1 36 23                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:36:23
	and.b32  	%r80, %r79, 12;
	or.b32  	%r81, %r80, %r6;
	.loc	1 37 23                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:37:23
	shr.u32 	%r82, %r79, 12;
	.loc	1 39 34                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:39:34
	shr.u64 	%rd61, %rd91, 5;
	and.b64  	%rd62, %rd61, 120;
	add.s64 	%rd52, %rd17, %rd62;
	.loc	1 39 39                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:39:39
	// begin inline asm
	mov.u64 %rd51, 0x0;
	@%p32 ld.global.L1::evict_last.b64 { %rd51 }, [ %rd52 + 0 ];
	@!%p32 mov.u64 %rd51, 0x0;
	// end inline asm
	.loc	1 40 34                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:40:34
	shr.u64 	%rd63, %rd91, 1;
	and.b64  	%rd64, %rd63, 120;
	add.s64 	%rd54, %rd17, %rd64;
	.loc	1 40 39                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:40:39
	// begin inline asm
	mov.u64 %rd53, 0x0;
	@%p32 ld.global.L1::evict_last.b64 { %rd53 }, [ %rd54 + 0 ];
	@!%p32 mov.u64 %rd53, 0x0;
	// end inline asm
	.loc	1 41 34                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:41:34
	mul.wide.u32 	%rd65, %r81, 8;
	add.s64 	%rd56, %rd17, %rd65;
	.loc	1 41 39                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:41:39
	// begin inline asm
	mov.u64 %rd55, 0x0;
	@%p32 ld.global.L1::evict_last.b64 { %rd55 }, [ %rd56 + 0 ];
	@!%p32 mov.u64 %rd55, 0x0;
	// end inline asm
	.loc	1 42 35                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:42:35
	mul.wide.u32 	%rd66, %r82, 4;
	add.s64 	%rd57, %rd22, %rd66;
	.loc	1 42 47                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:42:47
	// begin inline asm
	mov.u32 %r65, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r65 }, [ %rd57 + 0 ];
	@!%p7 mov.u32 %r65, %r13;
	// end inline asm
	mov.b32 	%f15, %r65;
	.loc	1 43 50                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:43:50
	// begin inline asm
	mov.u32 %r67, 0x0;
	@%p9 ld.global.L1::evict_first.b32 { %r67 }, [ %rd89 + 0 ];
	@!%p9 mov.u32 %r67, %r13;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p32 st.shared.b32 [ %r69 + 0 ], %r67;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f16, [%r8];
	.loc	1 47 36                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:47:36
	shr.u64 	%rd67, %rd51, 60;
	and.b64  	%rd68, %rd67, 8;
	add.s64 	%rd69, %rd68, %rd51;
	.loc	1 50 36                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:50:36
	shr.u64 	%rd70, %rd53, 60;
	and.b64  	%rd71, %rd70, 8;
	add.s64 	%rd72, %rd71, %rd53;
	.loc	1 54 66                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:54:66
	shl.b32 	%r83, %r82, 9;
	.loc	1 54 35                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:54:35
	shl.b64 	%rd73, %rd55, 2;
	add.s64 	%rd74, %rd12, %rd73;
	shr.u64 	%rd75, %rd55, 58;
	and.b64  	%rd76, %rd75, 32;
	add.s64 	%rd77, %rd74, %rd76;
	shl.b64 	%rd78, %rd72, 5;
	add.s64 	%rd79, %rd77, %rd78;
	shl.b64 	%rd80, %rd69, 8;
	add.s64 	%rd81, %rd79, %rd80;
	mul.wide.u32 	%rd82, %r83, 4;
	add.s64 	%rd83, %rd81, %rd82;
	add.s64 	%rd59, %rd83, %rd84;
	.loc	1 54 81                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:54:81
	// begin inline asm
	mov.u32 %r71, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r71 }, [ %rd59 + 0 ];
	@!%p7 mov.u32 %r71, %r13;
	// end inline asm
	mov.b32 	%f17, %r71;
	.loc	1 55 24                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:55:24
	add.f32 	%f18, %f15, %f17;
	.loc	1 56 24                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:56:24
	add.f32 	%f19, %f16, %f18;
$L__tmp1:
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f20, %f19, %f55;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f21, %f53, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r74, %f20;
	mov.b32 	%r75, %f21;
	// begin inline asm
	div.full.f32 %r73, %r74, %r75;
	// end inline asm
	mov.b32 	%f22, %r73;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f23, %f55, %f22;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f24, %f19, %f23;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f25, %f20, %f24, %f54;
$L__tmp2:
	.loc	1 61 62                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:61:62
	selp.f32 	%f55, %f23, %f55, %p7;
	.loc	1 62 58                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:62:58
	selp.f32 	%f54, %f25, %f54, %p7;
	.loc	1 63 66                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:63:66
	selp.f32 	%f53, %f21, %f53, %p7;
	.loc	1 64 51                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:64:51
	bar.sync 	0;
	mov.b32 	%r77, %f19;
	// begin inline asm
	@%p32 st.shared.b32 [ %r76 + 0 ], %r77;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r78, [%r10];
	// begin inline asm
	@%p9 st.global.b32 [ %rd90 + 0 ], { %r78 };
	// end inline asm
	.loc	1 31 36                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:31:36
	add.s64 	%rd8, %rd91, 4;
	add.s64 	%rd90, %rd90, 16;
	add.s64 	%rd89, %rd89, 16;
	setp.lt.u64 	%p31, %rd91, 8188;
	mov.u64 	%rd91, %rd8;
	@%p31 bra 	$L__BB0_1;
// %bb.2:                               // %.loopexit
$L__tmp3:
	.loc	2 204 46                        // triton_helpers.py:204:46
	bar.sync 	0;
	bfe.u32 	%r111, %r1, 6, 2;
	shl.b32 	%r112, %r111, 2;
	shl.b32 	%r113, %r3, 4;
	or.b32  	%r114, %r113, %r112;
	add.s32 	%r84, %r46, %r114;
	mov.b32 	%r85, %f55;
	// begin inline asm
	@%p32 st.shared.b32 [ %r84 + 0 ], %r85;
	// end inline asm
	add.s32 	%r116, %r46, 1024;
	add.s32 	%r86, %r116, %r114;
	mov.b32 	%r87, %f54;
	// begin inline asm
	@%p32 st.shared.b32 [ %r86 + 0 ], %r87;
	// end inline asm
	add.s32 	%r117, %r46, 2048;
	add.s32 	%r88, %r117, %r114;
	mov.b32 	%r89, %f53;
	// begin inline asm
	@%p32 st.shared.b32 [ %r88 + 0 ], %r89;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p35, %r1, 256;
	add.s32 	%r91, %r46, %r53;
	// begin inline asm
	@%p35 ld.shared.b32 %r90, [ %r91 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r90;
	add.s32 	%r93, %r116, %r53;
	// begin inline asm
	@%p35 ld.shared.b32 %r92, [ %r93 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r92;
	add.s32 	%r95, %r117, %r53;
	// begin inline asm
	@%p35 ld.shared.b32 %r94, [ %r95 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r94;
	shfl.sync.bfly.b32	%r119, %r90, 2, 31, -1;
	mov.b32 	%f29, %r119;
	shfl.sync.bfly.b32	%r120, %r92, 2, 31, -1;
	mov.b32 	%f30, %r120;
	shfl.sync.bfly.b32	%r97, %r94, 2, 31, -1;
	mov.b32 	%f31, %r97;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f32, %f29, %f26;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f33, %f28, %f31;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p45, %f33, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r98, %f33;
	// begin inline asm
	div.full.f32 %r96, %r97, %r98;
	// end inline asm
	mov.b32 	%f34, %r96;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f35, 0f00000000, %f34, %p45;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f36, %f32, %f35, %f26;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f37, %f27, %f30;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f38, %f32, %f32;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f39, %f38, %f28;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f40, %f39, %f35, %f37;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r121, %f36;
	shfl.sync.bfly.b32	%r122, %r121, 1, 31, -1;
	mov.b32 	%f41, %r122;
	mov.b32 	%r123, %f40;
	shfl.sync.bfly.b32	%r124, %r123, 1, 31, -1;
	mov.b32 	%f42, %r124;
	shfl.sync.bfly.b32	%r100, %r98, 1, 31, -1;
	mov.b32 	%f43, %r100;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f44, %f41, %f36;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f45, %f33, %f43;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p46, %f45, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r101, %f45;
	// begin inline asm
	div.full.f32 %r99, %r100, %r101;
	// end inline asm
	mov.b32 	%f46, %r99;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f47, 0f00000000, %f46, %p46;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f48, %f44, %f47, %f36;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f49, %f40, %f42;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f50, %f44, %f44;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f51, %f33, %f50;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f52, %f47, %f51, %f49;
	.loc	2 204 46                        // triton_helpers.py:204:46
	setp.eq.s32 	%p47, %r2, 0;
	and.pred  	%p38, %p35, %p47;
	mov.b32 	%r103, %f48;
	// begin inline asm
	@%p38 st.shared.b32 [ %r91 + 0 ], %r103;
	// end inline asm
	mov.b32 	%r105, %f52;
	// begin inline asm
	@%p38 st.shared.b32 [ %r93 + 0 ], %r105;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b32 [ %r95 + 0 ], %r101;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r125, %r46, %r113;
	ld.shared.u32 	%r108, [%r125];
	add.s32 	%r126, %r116, %r113;
	ld.shared.u32 	%r109, [%r126];
	add.s32 	%r127, %r117, %r113;
	ld.shared.u32 	%r110, [%r127];
$L__tmp4:
	.loc	1 71 25                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:71:25
	mul.wide.s32 	%rd88, %r4, 4;
	add.s64 	%rd85, %rd13, %rd88;
	.loc	1 71 37                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:71:37
	setp.eq.s32 	%p48, %r111, 0;
	and.pred  	%p41, %p48, %p7;
	// begin inline asm
	@%p41 st.global.b32 [ %rd85 + 0 ], { %r108 };
	// end inline asm
	.loc	1 72 25                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:72:25
	add.s64 	%rd86, %rd14, %rd88;
	.loc	1 72 37                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:72:37
	// begin inline asm
	@%p41 st.global.b32 [ %rd86 + 0 ], { %r109 };
	// end inline asm
	.loc	1 73 25                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:73:25
	add.s64 	%rd87, %rd15, %rd88;
	.loc	1 73 37                         // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:73:37
	// begin inline asm
	@%p41 st.global.b32 [ %rd87 + 0 ], { %r110 };
	// end inline asm
	.loc	1 73 4                          // ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py:73:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 236                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 110
.b8 104
.b8 107
.b8 50
.b8 114
.b8 52
.b8 54
.b8 55
.b8 101
.b8 111
.b8 101
.b8 111
.b8 112
.b8 116
.b8 100
.b8 108
.b8 113
.b8 54
.b8 111
.b8 97
.b8 120
.b8 99
.b8 98
.b8 110
.b8 116
.b8 113
.b8 51
.b8 100
.b8 107
.b8 112
.b8 115
.b8 118
.b8 114
.b8 121
.b8 110
.b8 111
.b8 113
.b8 54
.b8 103
.b8 110
.b8 120
.b8 101
.b8 106
.b8 104
.b8 53
.b8 102
.b8 115
.b8 113
.b8 100
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x46 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 50
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa9:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 59                                  // DW_AT_call_line
.b8 55                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 66                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
