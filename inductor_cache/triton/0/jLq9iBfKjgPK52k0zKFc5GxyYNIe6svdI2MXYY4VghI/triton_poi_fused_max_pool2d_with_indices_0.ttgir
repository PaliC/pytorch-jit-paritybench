#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<10> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<9> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<8> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<6> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<5> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<2> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<1> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<0xFF800000> : tensor<16xf32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<16> : tensor<16xi32, #blocked> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<16xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<16xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_8 : tensor<16xi32, #blocked> loc(#loc6)
    %6 = arith.muli %4, %cst_8 : tensor<16xi32, #blocked> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc8)
    %9 = tt.load %8, %5, %cst_7 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc9)
    %10 = arith.cmpf ogt, %9, %cst_7 : tensor<16xf32, #blocked> loc(#loc52)
    %11 = arith.cmpf une, %9, %9 : tensor<16xf32, #blocked> loc(#loc53)
    %12 = arith.ori %10, %11 : tensor<16xi1, #blocked> loc(#loc54)
    %13 = arith.select %12, %9, %cst_7 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc55)
    %14 = arith.addi %6, %cst_6 : tensor<16xi32, #blocked> loc(#loc15)
    %15 = tt.addptr %7, %14 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc16)
    %16 = tt.load %15, %5, %cst_7 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc17)
    %17 = arith.cmpf ogt, %16, %13 : tensor<16xf32, #blocked> loc(#loc56)
    %18 = arith.cmpf une, %16, %16 : tensor<16xf32, #blocked> loc(#loc57)
    %19 = arith.ori %17, %18 : tensor<16xi1, #blocked> loc(#loc58)
    %20 = arith.select %19, %16, %13 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc59)
    %21 = arith.addi %6, %cst_5 : tensor<16xi32, #blocked> loc(#loc19)
    %22 = tt.addptr %7, %21 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc20)
    %23 = tt.load %22, %5, %cst_7 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc21)
    %24 = arith.cmpf ogt, %23, %20 : tensor<16xf32, #blocked> loc(#loc60)
    %25 = arith.cmpf une, %23, %23 : tensor<16xf32, #blocked> loc(#loc61)
    %26 = arith.ori %24, %25 : tensor<16xi1, #blocked> loc(#loc62)
    %27 = arith.select %26, %23, %20 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc63)
    %28 = arith.cmpf ogt, %cst_7, %27 : tensor<16xf32, #blocked> loc(#loc64)
    %29 = arith.select %28, %cst_7, %27 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc65)
    %30 = arith.addi %6, %cst_4 : tensor<16xi32, #blocked> loc(#loc24)
    %31 = tt.addptr %7, %30 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc25)
    %32 = tt.load %31, %5, %cst_7 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc26)
    %33 = arith.cmpf ogt, %32, %29 : tensor<16xf32, #blocked> loc(#loc66)
    %34 = arith.cmpf une, %32, %32 : tensor<16xf32, #blocked> loc(#loc67)
    %35 = arith.ori %33, %34 : tensor<16xi1, #blocked> loc(#loc68)
    %36 = arith.select %35, %32, %29 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc69)
    %37 = arith.addi %6, %cst_3 : tensor<16xi32, #blocked> loc(#loc28)
    %38 = tt.addptr %7, %37 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc29)
    %39 = tt.load %38, %5, %cst_7 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc30)
    %40 = arith.cmpf ogt, %39, %36 : tensor<16xf32, #blocked> loc(#loc70)
    %41 = arith.cmpf une, %39, %39 : tensor<16xf32, #blocked> loc(#loc71)
    %42 = arith.ori %40, %41 : tensor<16xi1, #blocked> loc(#loc72)
    %43 = arith.select %42, %39, %36 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc73)
    %44 = arith.addi %6, %cst_2 : tensor<16xi32, #blocked> loc(#loc32)
    %45 = tt.addptr %7, %44 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc33)
    %46 = tt.load %45, %5, %cst_7 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc34)
    %47 = arith.cmpf ogt, %46, %43 : tensor<16xf32, #blocked> loc(#loc74)
    %48 = arith.cmpf une, %46, %46 : tensor<16xf32, #blocked> loc(#loc75)
    %49 = arith.ori %47, %48 : tensor<16xi1, #blocked> loc(#loc76)
    %50 = arith.select %49, %46, %43 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc77)
    %51 = arith.cmpf ogt, %cst_7, %50 : tensor<16xf32, #blocked> loc(#loc78)
    %52 = arith.select %51, %cst_7, %50 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc79)
    %53 = arith.addi %6, %cst_1 : tensor<16xi32, #blocked> loc(#loc37)
    %54 = tt.addptr %7, %53 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc38)
    %55 = tt.load %54, %5, %cst_7 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc39)
    %56 = arith.cmpf ogt, %55, %52 : tensor<16xf32, #blocked> loc(#loc80)
    %57 = arith.cmpf une, %55, %55 : tensor<16xf32, #blocked> loc(#loc81)
    %58 = arith.ori %56, %57 : tensor<16xi1, #blocked> loc(#loc82)
    %59 = arith.select %58, %55, %52 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc83)
    %60 = arith.addi %6, %cst_0 : tensor<16xi32, #blocked> loc(#loc41)
    %61 = tt.addptr %7, %60 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc42)
    %62 = tt.load %61, %5, %cst_7 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc43)
    %63 = arith.cmpf ogt, %62, %59 : tensor<16xf32, #blocked> loc(#loc84)
    %64 = arith.cmpf une, %62, %62 : tensor<16xf32, #blocked> loc(#loc85)
    %65 = arith.ori %63, %64 : tensor<16xi1, #blocked> loc(#loc86)
    %66 = arith.select %65, %62, %59 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc87)
    %67 = arith.addi %6, %cst : tensor<16xi32, #blocked> loc(#loc45)
    %68 = tt.addptr %7, %67 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc46)
    %69 = tt.load %68, %5, %cst_7 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc47)
    %70 = arith.cmpf ogt, %69, %66 : tensor<16xf32, #blocked> loc(#loc88)
    %71 = arith.cmpf une, %69, %69 : tensor<16xf32, #blocked> loc(#loc89)
    %72 = arith.ori %70, %71 : tensor<16xi1, #blocked> loc(#loc90)
    %73 = arith.select %72, %69, %66 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc91)
    %74 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked> loc(#loc49)
    %75 = tt.addptr %74, %4 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc49)
    tt.store %75, %73, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc50)
    tt.return loc(#loc51)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":21:28)
#loc3 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":21:33)
#loc4 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":22:36)
#loc5 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":22:23)
#loc6 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":23:21)
#loc7 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":57:34)
#loc8 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":57:31)
#loc9 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":57:39)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc11 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":58:42)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc15 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":60:35)
#loc16 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":60:31)
#loc17 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":60:43)
#loc18 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":61:42)
#loc19 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":63:35)
#loc20 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":63:31)
#loc21 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":63:43)
#loc22 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":64:42)
#loc23 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":67:42)
#loc24 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":69:35)
#loc25 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":69:31)
#loc26 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":69:43)
#loc27 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":70:42)
#loc28 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":72:35)
#loc29 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":72:31)
#loc30 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":72:43)
#loc31 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":73:42)
#loc32 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":75:35)
#loc33 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":75:31)
#loc34 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":75:43)
#loc35 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":76:42)
#loc36 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":79:42)
#loc37 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":81:35)
#loc38 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":81:31)
#loc39 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":81:43)
#loc40 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":82:42)
#loc41 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":84:35)
#loc42 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":84:31)
#loc43 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":84:43)
#loc44 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":85:42)
#loc45 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":87:36)
#loc46 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":87:31)
#loc47 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":87:44)
#loc48 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":88:42)
#loc49 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":89:25)
#loc50 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":89:37)
#loc51 = loc("inductor_cache/li/clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py":89:4)
#loc52 = loc(callsite(#loc10 at #loc11))
#loc53 = loc(callsite(#loc12 at #loc11))
#loc54 = loc(callsite(#loc13 at #loc11))
#loc55 = loc(callsite(#loc14 at #loc11))
#loc56 = loc(callsite(#loc10 at #loc18))
#loc57 = loc(callsite(#loc12 at #loc18))
#loc58 = loc(callsite(#loc13 at #loc18))
#loc59 = loc(callsite(#loc14 at #loc18))
#loc60 = loc(callsite(#loc10 at #loc22))
#loc61 = loc(callsite(#loc12 at #loc22))
#loc62 = loc(callsite(#loc13 at #loc22))
#loc63 = loc(callsite(#loc14 at #loc22))
#loc64 = loc(callsite(#loc10 at #loc23))
#loc65 = loc(callsite(#loc14 at #loc23))
#loc66 = loc(callsite(#loc10 at #loc27))
#loc67 = loc(callsite(#loc12 at #loc27))
#loc68 = loc(callsite(#loc13 at #loc27))
#loc69 = loc(callsite(#loc14 at #loc27))
#loc70 = loc(callsite(#loc10 at #loc31))
#loc71 = loc(callsite(#loc12 at #loc31))
#loc72 = loc(callsite(#loc13 at #loc31))
#loc73 = loc(callsite(#loc14 at #loc31))
#loc74 = loc(callsite(#loc10 at #loc35))
#loc75 = loc(callsite(#loc12 at #loc35))
#loc76 = loc(callsite(#loc13 at #loc35))
#loc77 = loc(callsite(#loc14 at #loc35))
#loc78 = loc(callsite(#loc10 at #loc36))
#loc79 = loc(callsite(#loc14 at #loc36))
#loc80 = loc(callsite(#loc10 at #loc40))
#loc81 = loc(callsite(#loc12 at #loc40))
#loc82 = loc(callsite(#loc13 at #loc40))
#loc83 = loc(callsite(#loc14 at #loc40))
#loc84 = loc(callsite(#loc10 at #loc44))
#loc85 = loc(callsite(#loc12 at #loc44))
#loc86 = loc(callsite(#loc13 at #loc44))
#loc87 = loc(callsite(#loc14 at #loc44))
#loc88 = loc(callsite(#loc10 at #loc48))
#loc89 = loc(callsite(#loc12 at #loc48))
#loc90 = loc(callsite(#loc13 at #loc48))
#loc91 = loc(callsite(#loc14 at #loc48))
