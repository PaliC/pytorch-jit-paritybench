; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 4, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 16, !dbg !12
  %8 = and i32 %6, 15, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 16, !dbg !14
  %11 = shl i32 %9, 4, !dbg !15
  %12 = sext i32 %11 to i64, !dbg !16
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !16
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %13, i1 %10, i32 -8388608, i1 %10) #1, !dbg !17
  %15 = bitcast i32 %14 to float, !dbg !17
  %16 = or disjoint i32 %11, 1, !dbg !18
  %17 = sext i32 %16 to i64, !dbg !19
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %10, i32 -8388608, i1 %10) #1, !dbg !20
  %20 = bitcast i32 %19 to float, !dbg !20
  %21 = fcmp ogt float %20, %15, !dbg !21
  %22 = fcmp uno float %20, 0.000000e+00, !dbg !25
  %23 = or i1 %21, %22, !dbg !26
  %24 = select i1 %23, float %20, float %15, !dbg !27
  %25 = or disjoint i32 %11, 2, !dbg !28
  %26 = sext i32 %25 to i64, !dbg !29
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !29
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %10, i32 -8388608, i1 %10) #1, !dbg !30
  %29 = bitcast i32 %28 to float, !dbg !30
  %30 = fcmp olt float %24, %29, !dbg !31
  %31 = fcmp uno float %29, 0.000000e+00, !dbg !33
  %32 = or i1 %31, %30, !dbg !34
  %33 = select i1 %32, float %29, float %24, !dbg !35
  %34 = or disjoint i32 %11, 4, !dbg !36
  %35 = sext i32 %34 to i64, !dbg !37
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !37
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %10, i32 -8388608, i1 %10) #1, !dbg !38
  %38 = bitcast i32 %37 to float, !dbg !38
  %39 = fcmp olt float %33, %38, !dbg !39
  %40 = fcmp uno float %38, 0.000000e+00, !dbg !41
  %41 = or i1 %40, %39, !dbg !42
  %42 = select i1 %41, float %38, float %33, !dbg !43
  %43 = or disjoint i32 %11, 5, !dbg !44
  %44 = sext i32 %43 to i64, !dbg !45
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !45
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %10, i32 -8388608, i1 %10) #1, !dbg !46
  %47 = bitcast i32 %46 to float, !dbg !46
  %48 = fcmp olt float %42, %47, !dbg !47
  %49 = fcmp uno float %47, 0.000000e+00, !dbg !49
  %50 = or i1 %49, %48, !dbg !50
  %51 = select i1 %50, float %47, float %42, !dbg !51
  %52 = or disjoint i32 %11, 6, !dbg !52
  %53 = sext i32 %52 to i64, !dbg !53
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !53
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %54, i1 %10, i32 -8388608, i1 %10) #1, !dbg !54
  %56 = bitcast i32 %55 to float, !dbg !54
  %57 = fcmp olt float %51, %56, !dbg !55
  %58 = fcmp uno float %56, 0.000000e+00, !dbg !57
  %59 = or i1 %58, %57, !dbg !58
  %60 = select i1 %59, float %56, float %51, !dbg !59
  %61 = or disjoint i32 %11, 8, !dbg !60
  %62 = sext i32 %61 to i64, !dbg !61
  %63 = getelementptr float, ptr addrspace(1) %0, i64 %62, !dbg !61
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %63, i1 %10, i32 -8388608, i1 %10) #1, !dbg !62
  %65 = bitcast i32 %64 to float, !dbg !62
  %66 = fcmp olt float %60, %65, !dbg !63
  %67 = fcmp uno float %65, 0.000000e+00, !dbg !65
  %68 = or i1 %67, %66, !dbg !66
  %69 = select i1 %68, float %65, float %60, !dbg !67
  %70 = or disjoint i32 %11, 9, !dbg !68
  %71 = sext i32 %70 to i64, !dbg !69
  %72 = getelementptr float, ptr addrspace(1) %0, i64 %71, !dbg !69
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %72, i1 %10, i32 -8388608, i1 %10) #1, !dbg !70
  %74 = bitcast i32 %73 to float, !dbg !70
  %75 = fcmp olt float %69, %74, !dbg !71
  %76 = fcmp uno float %74, 0.000000e+00, !dbg !73
  %77 = or i1 %76, %75, !dbg !74
  %78 = select i1 %77, float %74, float %69, !dbg !75
  %79 = or disjoint i32 %11, 10, !dbg !76
  %80 = sext i32 %79 to i64, !dbg !77
  %81 = getelementptr float, ptr addrspace(1) %0, i64 %80, !dbg !77
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %81, i1 %10, i32 -8388608, i1 %10) #1, !dbg !78
  %83 = bitcast i32 %82 to float, !dbg !78
  %84 = fcmp olt float %78, %83, !dbg !79
  %85 = fcmp uno float %83, 0.000000e+00, !dbg !81
  %86 = or i1 %85, %84, !dbg !82
  %87 = sext i32 %9 to i64, !dbg !83
  %88 = getelementptr float, ptr addrspace(1) %1, i64 %87, !dbg !83
  %89 = icmp eq i32 %7, 0, !dbg !84
  %90 = bitcast float %78 to i32, !dbg !84
  %91 = select i1 %86, i32 %82, i32 %90, !dbg !85
  %92 = and i1 %89, %10, !dbg !84
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %91, ptr addrspace(1) %88, i1 %92) #1, !dbg !84
  ret void, !dbg !86
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "clin5bttiky5rhuhoyc7xagpxzyhth2ighyqngabo5fl4swsdeu4.py", directory: "inductor_cache/li")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_0", linkageName: "triton_poi_fused_max_pool2d_with_indices_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 57, column: 34, scope: !7)
!16 = !DILocation(line: 57, column: 31, scope: !7)
!17 = !DILocation(line: 57, column: 39, scope: !7)
!18 = !DILocation(line: 60, column: 35, scope: !7)
!19 = !DILocation(line: 60, column: 31, scope: !7)
!20 = !DILocation(line: 60, column: 43, scope: !7)
!21 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!24 = !DILocation(line: 61, column: 42, scope: !7)
!25 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !24)
!26 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !24)
!27 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !24)
!28 = !DILocation(line: 63, column: 35, scope: !7)
!29 = !DILocation(line: 63, column: 31, scope: !7)
!30 = !DILocation(line: 63, column: 43, scope: !7)
!31 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !32)
!32 = !DILocation(line: 64, column: 42, scope: !7)
!33 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !32)
!34 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !32)
!35 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !32)
!36 = !DILocation(line: 69, column: 35, scope: !7)
!37 = !DILocation(line: 69, column: 31, scope: !7)
!38 = !DILocation(line: 69, column: 43, scope: !7)
!39 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !40)
!40 = !DILocation(line: 70, column: 42, scope: !7)
!41 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !40)
!42 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !40)
!43 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !40)
!44 = !DILocation(line: 72, column: 35, scope: !7)
!45 = !DILocation(line: 72, column: 31, scope: !7)
!46 = !DILocation(line: 72, column: 43, scope: !7)
!47 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !48)
!48 = !DILocation(line: 73, column: 42, scope: !7)
!49 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !48)
!50 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !48)
!51 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !48)
!52 = !DILocation(line: 75, column: 35, scope: !7)
!53 = !DILocation(line: 75, column: 31, scope: !7)
!54 = !DILocation(line: 75, column: 43, scope: !7)
!55 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !56)
!56 = !DILocation(line: 76, column: 42, scope: !7)
!57 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !56)
!58 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !56)
!59 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !56)
!60 = !DILocation(line: 81, column: 35, scope: !7)
!61 = !DILocation(line: 81, column: 31, scope: !7)
!62 = !DILocation(line: 81, column: 43, scope: !7)
!63 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !64)
!64 = !DILocation(line: 82, column: 42, scope: !7)
!65 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !64)
!66 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !64)
!67 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !64)
!68 = !DILocation(line: 84, column: 35, scope: !7)
!69 = !DILocation(line: 84, column: 31, scope: !7)
!70 = !DILocation(line: 84, column: 43, scope: !7)
!71 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !72)
!72 = !DILocation(line: 85, column: 42, scope: !7)
!73 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !72)
!74 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !72)
!75 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !72)
!76 = !DILocation(line: 87, column: 36, scope: !7)
!77 = !DILocation(line: 87, column: 31, scope: !7)
!78 = !DILocation(line: 87, column: 44, scope: !7)
!79 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !80)
!80 = !DILocation(line: 88, column: 42, scope: !7)
!81 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !80)
!82 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !80)
!83 = !DILocation(line: 89, column: 25, scope: !7)
!84 = !DILocation(line: 89, column: 37, scope: !7)
!85 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !80)
!86 = !DILocation(line: 89, column: 4, scope: !7)
