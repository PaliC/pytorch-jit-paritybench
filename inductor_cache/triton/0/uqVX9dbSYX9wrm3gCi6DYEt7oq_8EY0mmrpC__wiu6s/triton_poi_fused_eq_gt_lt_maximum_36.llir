; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_eq_gt_lt_maximum_36(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %11 = shl i32 %10, 7, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = and i32 %12, 127, !dbg !12
  %14 = or disjoint i32 %11, %13, !dbg !13
  %15 = icmp slt i32 %14, 1024, !dbg !14
  %.frozen = freeze i32 %14, !dbg !15
  %16 = sdiv i32 %.frozen, 256, !dbg !15
  %17 = mul i32 %16, 256, !dbg !16
  %.decomposed = sub i32 %.frozen, %17, !dbg !16
  %18 = shl i32 %16, 10, !dbg !17
  %19 = add i32 %18, %.decomposed, !dbg !18
  %20 = sext i32 %19 to i64, !dbg !19
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !19
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %15) #1, !dbg !20
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !21
  %24 = add i32 %19, 256, !dbg !22
  %25 = sext i32 %24 to i64, !dbg !23
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !23
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %15) #1, !dbg !24
  %28 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !25
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #1, !dbg !26
  %30 = add i32 %19, 512, !dbg !27
  %31 = sext i32 %30 to i64, !dbg !28
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !28
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %15) #1, !dbg !29
  %34 = bitcast i32 %33 to float, !dbg !29
  %35 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !30
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #1, !dbg !31
  %37 = bitcast i32 %36 to float, !dbg !31
  %38 = insertelement <2 x i32> poison, i32 %22, i64 0, !dbg !20
  %39 = insertelement <2 x i32> %38, i32 %27, i64 1, !dbg !20
  %40 = bitcast <2 x i32> %39 to <2 x float>, !dbg !20
  %41 = insertelement <2 x i32> poison, i32 %23, i64 0, !dbg !21
  %42 = insertelement <2 x i32> %41, i32 %29, i64 1, !dbg !21
  %43 = bitcast <2 x i32> %42 to <2 x float>, !dbg !21
  %44 = fadd <2 x float> %40, %43, !dbg !32
  %45 = extractelement <2 x float> %44, i64 0, !dbg !33
  %46 = extractelement <2 x float> %44, i64 1, !dbg !33
  %47 = fcmp ogt float %45, %46, !dbg !34
  %48 = fcmp uno float %45, 0.000000e+00, !dbg !38
  %49 = or i1 %48, %47, !dbg !39
  %50 = select i1 %49, float %45, float %46, !dbg !40
  %51 = fadd float %34, %37, !dbg !41
  %52 = fcmp oeq float %50, %51, !dbg !42
  %53 = fcmp ogt float %50, %51, !dbg !43
  %54 = fcmp olt float %50, %51, !dbg !44
  %55 = fcmp oeq float %45, %46, !dbg !45
  %56 = fcmp olt float %45, %46, !dbg !33
  %57 = sext i32 %14 to i64, !dbg !46
  %58 = getelementptr i1, ptr addrspace(1) %2, i64 %57, !dbg !46
  %59 = zext i1 %52 to i8, !dbg !47
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %59, ptr addrspace(1) %58, i1 %15) #1, !dbg !47
  %60 = getelementptr i1, ptr addrspace(1) %3, i64 %57, !dbg !48
  %61 = zext i1 %53 to i8, !dbg !49
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %61, ptr addrspace(1) %60, i1 %15) #1, !dbg !49
  %62 = getelementptr i1, ptr addrspace(1) %4, i64 %57, !dbg !50
  %63 = zext i1 %54 to i8, !dbg !51
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %63, ptr addrspace(1) %62, i1 %15) #1, !dbg !51
  %64 = getelementptr i1, ptr addrspace(1) %5, i64 %57, !dbg !52
  %65 = zext i1 %55 to i8, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %65, ptr addrspace(1) %64, i1 %15) #1, !dbg !53
  %66 = getelementptr i1, ptr addrspace(1) %6, i64 %57, !dbg !54
  %67 = zext i1 %47 to i8, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %67, ptr addrspace(1) %66, i1 %15) #1, !dbg !55
  %68 = getelementptr i1, ptr addrspace(1) %7, i64 %57, !dbg !56
  %69 = zext i1 %56 to i8, !dbg !57
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %69, ptr addrspace(1) %68, i1 %15) #1, !dbg !57
  ret void, !dbg !58
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py", directory: "inductor_cache/dm")
!4 = !{ptr @triton_poi_fused_eq_gt_lt_maximum_36, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_eq_gt_lt_maximum_36, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_eq_gt_lt_maximum_36", linkageName: "triton_poi_fused_eq_gt_lt_maximum_36", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 40, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 45, scope: !7)
!21 = !DILocation(line: 28, column: 19, scope: !7)
!22 = !DILocation(line: 30, column: 41, scope: !7)
!23 = !DILocation(line: 30, column: 30, scope: !7)
!24 = !DILocation(line: 30, column: 51, scope: !7)
!25 = !DILocation(line: 31, column: 30, scope: !7)
!26 = !DILocation(line: 31, column: 19, scope: !7)
!27 = !DILocation(line: 33, column: 41, scope: !7)
!28 = !DILocation(line: 33, column: 30, scope: !7)
!29 = !DILocation(line: 33, column: 51, scope: !7)
!30 = !DILocation(line: 34, column: 31, scope: !7)
!31 = !DILocation(line: 34, column: 20, scope: !7)
!32 = !DILocation(line: 36, column: 18, scope: !7)
!33 = !DILocation(line: 45, column: 19, scope: !7)
!34 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !37)
!35 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!36 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!37 = !DILocation(line: 38, column: 40, scope: !7)
!38 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !37)
!39 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !37)
!40 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !37)
!41 = !DILocation(line: 39, column: 19, scope: !7)
!42 = !DILocation(line: 40, column: 20, scope: !7)
!43 = !DILocation(line: 41, column: 19, scope: !7)
!44 = !DILocation(line: 42, column: 19, scope: !7)
!45 = !DILocation(line: 43, column: 20, scope: !7)
!46 = !DILocation(line: 46, column: 25, scope: !7)
!47 = !DILocation(line: 46, column: 37, scope: !7)
!48 = !DILocation(line: 47, column: 25, scope: !7)
!49 = !DILocation(line: 47, column: 37, scope: !7)
!50 = !DILocation(line: 48, column: 25, scope: !7)
!51 = !DILocation(line: 48, column: 37, scope: !7)
!52 = !DILocation(line: 49, column: 25, scope: !7)
!53 = !DILocation(line: 49, column: 37, scope: !7)
!54 = !DILocation(line: 50, column: 25, scope: !7)
!55 = !DILocation(line: 50, column: 37, scope: !7)
!56 = !DILocation(line: 51, column: 25, scope: !7)
!57 = !DILocation(line: 51, column: 37, scope: !7)
!58 = !DILocation(line: 51, column: 4, scope: !7)
