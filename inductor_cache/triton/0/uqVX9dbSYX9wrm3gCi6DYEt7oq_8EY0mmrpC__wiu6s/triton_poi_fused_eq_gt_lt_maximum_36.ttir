#loc = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":19:0)
module {
  tt.func public @triton_poi_fused_eq_gt_lt_maximum_36(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":19:0), %arg2: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":19:0), %arg3: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":19:0), %arg4: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":19:0), %arg5: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":19:0), %arg6: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":19:0), %arg7: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":19:0)) attributes {noinline = false} {
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst = arith.constant dense<512> : tensor<128xi32> loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<256> : tensor<128xi32> loc(#loc1)
    %cst_1 = arith.constant dense<1024> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_1 : tensor<128xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_0 : tensor<128xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_0 : tensor<128xi32> loc(#loc8)
    %8 = arith.muli %7, %cst_1 : tensor<128xi32> loc(#loc9)
    %9 = arith.addi %6, %8 : tensor<128xi32> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc11)
    %12 = tt.load %11, %5 : tensor<128x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc13)
    %14 = tt.load %13 : !tt.ptr<f32> loc(#loc14)
    %15 = tt.splat %14 : f32 -> tensor<128xf32> loc(#loc15)
    %16 = arith.addi %6, %cst_0 : tensor<128xi32> loc(#loc16)
    %17 = arith.addi %16, %8 : tensor<128xi32> loc(#loc17)
    %18 = tt.addptr %10, %17 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc18)
    %19 = tt.load %18, %5 : tensor<128x!tt.ptr<f32>> loc(#loc19)
    %20 = tt.addptr %arg1, %c1_i32 : !tt.ptr<f32>, i32 loc(#loc20)
    %21 = tt.load %20 : !tt.ptr<f32> loc(#loc21)
    %22 = tt.splat %21 : f32 -> tensor<128xf32> loc(#loc22)
    %23 = arith.addi %6, %cst : tensor<128xi32> loc(#loc23)
    %24 = arith.addi %23, %8 : tensor<128xi32> loc(#loc24)
    %25 = tt.addptr %10, %24 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc25)
    %26 = tt.load %25, %5 : tensor<128x!tt.ptr<f32>> loc(#loc26)
    %27 = tt.addptr %arg1, %c2_i32 : !tt.ptr<f32>, i32 loc(#loc27)
    %28 = tt.load %27 : !tt.ptr<f32> loc(#loc28)
    %29 = tt.splat %28 : f32 -> tensor<128xf32> loc(#loc29)
    %30 = arith.addf %12, %15 : tensor<128xf32> loc(#loc30)
    %31 = arith.addf %19, %22 : tensor<128xf32> loc(#loc31)
    %32 = arith.cmpf ogt, %30, %31 : tensor<128xf32> loc(#loc56)
    %33 = arith.cmpf une, %30, %30 : tensor<128xf32> loc(#loc57)
    %34 = arith.ori %32, %33 : tensor<128xi1> loc(#loc58)
    %35 = arith.select %34, %30, %31 : tensor<128xi1>, tensor<128xf32> loc(#loc59)
    %36 = arith.addf %26, %29 : tensor<128xf32> loc(#loc37)
    %37 = arith.cmpf oeq, %35, %36 : tensor<128xf32> loc(#loc38)
    %38 = arith.cmpf ogt, %35, %36 : tensor<128xf32> loc(#loc39)
    %39 = arith.cmpf olt, %35, %36 : tensor<128xf32> loc(#loc40)
    %40 = arith.cmpf oeq, %30, %31 : tensor<128xf32> loc(#loc41)
    %41 = arith.cmpf olt, %30, %31 : tensor<128xf32> loc(#loc42)
    %42 = tt.splat %arg2 : !tt.ptr<i1> -> tensor<128x!tt.ptr<i1>> loc(#loc43)
    %43 = tt.addptr %42, %4 : tensor<128x!tt.ptr<i1>>, tensor<128xi32> loc(#loc43)
    %44 = tt.bitcast %43 : tensor<128x!tt.ptr<i1>> -> tensor<128x!tt.ptr<i8>> loc(#loc44)
    %45 = arith.extui %37 : tensor<128xi1> to tensor<128xi8> loc(#loc44)
    tt.store %44, %45, %5 : tensor<128x!tt.ptr<i8>> loc(#loc44)
    %46 = tt.splat %arg3 : !tt.ptr<i1> -> tensor<128x!tt.ptr<i1>> loc(#loc45)
    %47 = tt.addptr %46, %4 : tensor<128x!tt.ptr<i1>>, tensor<128xi32> loc(#loc45)
    %48 = tt.bitcast %47 : tensor<128x!tt.ptr<i1>> -> tensor<128x!tt.ptr<i8>> loc(#loc46)
    %49 = arith.extui %38 : tensor<128xi1> to tensor<128xi8> loc(#loc46)
    tt.store %48, %49, %5 : tensor<128x!tt.ptr<i8>> loc(#loc46)
    %50 = tt.splat %arg4 : !tt.ptr<i1> -> tensor<128x!tt.ptr<i1>> loc(#loc47)
    %51 = tt.addptr %50, %4 : tensor<128x!tt.ptr<i1>>, tensor<128xi32> loc(#loc47)
    %52 = tt.bitcast %51 : tensor<128x!tt.ptr<i1>> -> tensor<128x!tt.ptr<i8>> loc(#loc48)
    %53 = arith.extui %39 : tensor<128xi1> to tensor<128xi8> loc(#loc48)
    tt.store %52, %53, %5 : tensor<128x!tt.ptr<i8>> loc(#loc48)
    %54 = tt.splat %arg5 : !tt.ptr<i1> -> tensor<128x!tt.ptr<i1>> loc(#loc49)
    %55 = tt.addptr %54, %4 : tensor<128x!tt.ptr<i1>>, tensor<128xi32> loc(#loc49)
    %56 = tt.bitcast %55 : tensor<128x!tt.ptr<i1>> -> tensor<128x!tt.ptr<i8>> loc(#loc50)
    %57 = arith.extui %40 : tensor<128xi1> to tensor<128xi8> loc(#loc50)
    tt.store %56, %57, %5 : tensor<128x!tt.ptr<i8>> loc(#loc50)
    %58 = tt.splat %arg6 : !tt.ptr<i1> -> tensor<128x!tt.ptr<i1>> loc(#loc51)
    %59 = tt.addptr %58, %4 : tensor<128x!tt.ptr<i1>>, tensor<128xi32> loc(#loc51)
    %60 = tt.bitcast %59 : tensor<128x!tt.ptr<i1>> -> tensor<128x!tt.ptr<i8>> loc(#loc52)
    %61 = arith.extui %32 : tensor<128xi1> to tensor<128xi8> loc(#loc52)
    tt.store %60, %61, %5 : tensor<128x!tt.ptr<i8>> loc(#loc52)
    %62 = tt.splat %arg7 : !tt.ptr<i1> -> tensor<128x!tt.ptr<i1>> loc(#loc53)
    %63 = tt.addptr %62, %4 : tensor<128x!tt.ptr<i1>>, tensor<128xi32> loc(#loc53)
    %64 = tt.bitcast %63 : tensor<128x!tt.ptr<i1>> -> tensor<128x!tt.ptr<i8>> loc(#loc54)
    %65 = arith.extui %41 : tensor<128xi1> to tensor<128xi8> loc(#loc54)
    tt.store %64, %65, %5 : tensor<128x!tt.ptr<i8>> loc(#loc54)
    tt.return loc(#loc55)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":21:28)
#loc3 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":21:33)
#loc4 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":22:36)
#loc5 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":22:23)
#loc6 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":23:21)
#loc7 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":24:19)
#loc8 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":25:19)
#loc9 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":27:40)
#loc10 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":27:35)
#loc11 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":27:30)
#loc12 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":27:45)
#loc13 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":28:30)
#loc14 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":28:19)
#loc15 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":29:33)
#loc16 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":30:36)
#loc17 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":30:41)
#loc18 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":30:30)
#loc19 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":30:51)
#loc20 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":31:30)
#loc21 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":31:19)
#loc22 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":32:33)
#loc23 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":33:36)
#loc24 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":33:41)
#loc25 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":33:30)
#loc26 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":33:51)
#loc27 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":34:31)
#loc28 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":34:20)
#loc29 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":35:35)
#loc30 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":36:18)
#loc31 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":37:18)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc33 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":38:40)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc37 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":39:19)
#loc38 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":40:20)
#loc39 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":41:19)
#loc40 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":42:19)
#loc41 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":43:20)
#loc42 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":45:19)
#loc43 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":46:25)
#loc44 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":46:37)
#loc45 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":47:25)
#loc46 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":47:37)
#loc47 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":48:25)
#loc48 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":48:37)
#loc49 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":49:25)
#loc50 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":49:37)
#loc51 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":50:25)
#loc52 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":50:37)
#loc53 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":51:25)
#loc54 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":51:37)
#loc55 = loc("inductor_cache/dm/cdmpkd4wd2ka56cy4gc4ucaxri6oaby5ypk2me7qjkdwaga7kgec.py":51:4)
#loc56 = loc(callsite(#loc32 at #loc33))
#loc57 = loc(callsite(#loc34 at #loc33))
#loc58 = loc(callsite(#loc35 at #loc33))
#loc59 = loc(callsite(#loc36 at #loc33))
