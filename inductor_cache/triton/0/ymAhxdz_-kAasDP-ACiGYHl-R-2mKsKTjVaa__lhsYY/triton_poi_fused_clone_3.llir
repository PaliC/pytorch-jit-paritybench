; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_clone_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %8 = lshr i32 %7, 2, !dbg !11
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !12
  %10 = lshr i32 %7, 3, !dbg !13
  %11 = insertelement <2 x i32> poison, i32 %6, i64 0, !dbg !14
  %12 = insertelement <2 x i32> %11, i32 %9, i64 1, !dbg !14
  %13 = shl <2 x i32> %12, <i32 3, i32 2>, !dbg !14
  %14 = and i32 %10, 3, !dbg !13
  %15 = insertelement <2 x i32> poison, i32 %7, i64 0, !dbg !11
  %16 = insertelement <2 x i32> %15, i32 %10, i64 1, !dbg !11
  %17 = and <2 x i32> %16, <i32 7, i32 3>, !dbg !11
  %18 = or disjoint <2 x i32> %13, %17, !dbg !15
  %19 = extractelement <2 x i32> %18, i64 0, !dbg !16
  %20 = icmp slt i32 %19, 8, !dbg !16
  %21 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !11
  %22 = insertelement <2 x i32> %21, i32 %7, i64 1, !dbg !11
  %23 = and <2 x i32> %22, <i32 7, i32 3>, !dbg !11
  %24 = or disjoint <2 x i32> %13, %23, !dbg !17
  %25 = extractelement <2 x i32> %24, i64 0, !dbg !18
  %26 = icmp slt i32 %25, 8, !dbg !16
  %27 = extractelement <2 x i32> %24, i64 1, !dbg !19
  %28 = icmp slt i32 %27, 8, !dbg !19
  %29 = extractelement <2 x i32> %18, i64 1, !dbg !19
  %30 = icmp slt i32 %29, 8, !dbg !19
  %31 = srem i32 %29, 4, !dbg !20
  %32 = srem i32 %19, 2, !dbg !21
  %33 = sdiv <2 x i32> %18, <i32 2, i32 4>, !dbg !22
  %34 = shl nsw i32 %31, 2, !dbg !23
  %35 = shl <2 x i32> %33, <i32 4, i32 1>, !dbg !24
  %36 = extractelement <2 x i32> %35, i64 0, !dbg !25
  %37 = add i32 %36, %32, !dbg !25
  %38 = extractelement <2 x i32> %35, i64 1, !dbg !26
  %39 = add i32 %37, %38, !dbg !26
  %40 = add i32 %39, %34, !dbg !27
  %41 = sext i32 %40 to i64, !dbg !28
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !28
  %43 = and i1 %26, %28, !dbg !29
  %44 = and i1 %20, %30, !dbg !29
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %44) #2, !dbg !30
  %46 = bitcast i32 %45 to float, !dbg !30
  %47 = sext i32 %31 to i64, !dbg !31
  %48 = getelementptr float, ptr addrspace(1) %1, i64 %47, !dbg !31
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %30) #2, !dbg !32
  %50 = bitcast i32 %49 to float, !dbg !32
  %51 = fadd float %46, %50, !dbg !33
  %52 = shl i32 %25, 3, !dbg !18
  %53 = add i32 %27, %52, !dbg !34
  %54 = sext i32 %53 to i64, !dbg !35
  %55 = getelementptr float, ptr addrspace(1) %2, i64 %54, !dbg !35
  %56 = shl i32 %7, 2, !dbg !36
  %57 = and i32 %56, 28, !dbg !36
  %58 = or disjoint i32 %57, %14, !dbg !36
  %59 = and i32 %7, 31, !dbg !36
  %60 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %57, !dbg !36
  %61 = getelementptr inbounds float, ptr addrspace(3) %60, i32 %58, !dbg !36
  %62 = bitcast float %51 to <1 x i32>, !dbg !36
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %61, <1 x i32> %62, i1 true) #2, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %63 = lshr i32 %59, 2, !dbg !36
  %64 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %63, !dbg !36
  %65 = getelementptr inbounds float, ptr addrspace(3) %64, i32 %59, !dbg !36
  %66 = load i32, ptr addrspace(3) %65, align 4, !dbg !36
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %66, ptr addrspace(1) %55, i1 %43) #2, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c27dwaxknqjy5elf5jynvipqe5iw7cnfuudurf4m75lu5tf7wquk.py", directory: "inductor_cache/27")
!4 = !{ptr @triton_poi_fused_clone_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_3, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_3", linkageName: "triton_poi_fused_clone_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 44, scope: !7)
!12 = !DILocation(line: 25, column: 28, scope: !7)
!13 = !DILocation(line: 26, column: 44, scope: !7)
!14 = !DILocation(line: 22, column: 33, scope: !7)
!15 = !DILocation(line: 23, column: 23, scope: !7)
!16 = !DILocation(line: 24, column: 21, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 37, column: 32, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 28, column: 19, scope: !7)
!21 = !DILocation(line: 30, column: 19, scope: !7)
!22 = !DILocation(line: 31, column: 19, scope: !7)
!23 = !DILocation(line: 34, column: 44, scope: !7)
!24 = !DILocation(line: 34, column: 52, scope: !7)
!25 = !DILocation(line: 34, column: 35, scope: !7)
!26 = !DILocation(line: 34, column: 42, scope: !7)
!27 = !DILocation(line: 34, column: 49, scope: !7)
!28 = !DILocation(line: 34, column: 30, scope: !7)
!29 = !DILocation(line: 34, column: 65, scope: !7)
!30 = !DILocation(line: 34, column: 57, scope: !7)
!31 = !DILocation(line: 35, column: 30, scope: !7)
!32 = !DILocation(line: 35, column: 35, scope: !7)
!33 = !DILocation(line: 36, column: 18, scope: !7)
!34 = !DILocation(line: 37, column: 30, scope: !7)
!35 = !DILocation(line: 37, column: 25, scope: !7)
!36 = !DILocation(line: 37, column: 43, scope: !7)
!37 = !DILocation(line: 37, column: 4, scope: !7)
