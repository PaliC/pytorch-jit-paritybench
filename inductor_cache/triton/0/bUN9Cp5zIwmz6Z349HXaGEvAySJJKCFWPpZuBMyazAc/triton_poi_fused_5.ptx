//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_5      // -- Begin function triton_poi_fused_5
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_5
.visible .entry triton_poi_fused_5(
	.param .u64 .ptr .global .align 1 triton_poi_fused_5_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_5_param_1,
	.param .u32 triton_poi_fused_5_param_2,
	.param .u32 triton_poi_fused_5_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<77>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_5_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_5_param_1];
$L__tmp0:
	.loc	1 22 28                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:22:33
	shl.b32 	%r35, %r1, 8;
	.loc	1 23 44                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:23:44
	mov.u32 	%r36, %tid.x;
	and.b32  	%r37, %r36, 127;
	shl.b32 	%r38, %r36, 2;
	and.b32  	%r39, %r38, 252;
	.loc	1 23 23                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:23:23
	or.b32  	%r40, %r35, %r37;
	or.b32  	%r41, %r40, 128;
	or.b32  	%r42, %r35, %r39;
	.loc	1 24 21                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:24:21
	setp.lt.s32 	%p13, %r40, 256;
	setp.lt.s32 	%p14, %r41, 256;
	setp.lt.s32 	%p15, %r42, 256;
	.loc	1 25 28                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:25:33
	shl.b32 	%r43, %r2, 2;
	.loc	1 26 44                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:26:44
	bfe.u32 	%r44, %r36, 6, 1;
	.loc	1 26 23                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:26:23
	or.b32  	%r45, %r43, %r44;
	or.b32  	%r46, %r45, 2;
	.loc	1 27 21                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:27:21
	setp.lt.s32 	%p16, %r43, 4;
	setp.lt.s32 	%p17, %r45, 4;
	setp.lt.s32 	%p18, %r46, 4;
	.loc	1 31 19                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:31:19
	shr.s32 	%r48, %r42, 31;
	shr.u32 	%r49, %r48, 28;
	add.s32 	%r50, %r42, %r49;
	.loc	1 30 19                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:30:19
	and.b32  	%r51, %r50, -16;
	sub.s32 	%r52, %r42, %r51;
	.loc	1 32 35                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:32:35
	add.s32 	%r53, %r40, %r2;
	shl.b32 	%r54, %r53, 2;
	add.s32 	%r55, %r41, %r2;
	shl.b32 	%r56, %r55, 2;
	.loc	1 32 30                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:32:30
	mul.wide.s32 	%rd7, %r54, 4;
	add.s64 	%rd1, %rd5, %rd7;
	mul.wide.s32 	%rd8, %r56, 4;
	add.s64 	%rd2, %rd5, %rd8;
	.loc	1 32 50                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:32:50
	and.pred  	%p1, %p16, %p13;
	and.pred  	%p2, %p16, %p14;
	and.pred  	%p11, %p15, %p17;
	and.pred  	%p12, %p18, %p15;
	.loc	1 32 42                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:32:42
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r14, %r16, %r18 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 33                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:33:33
	shl.b32 	%r57, %r45, 4;
	shl.b32 	%r58, %r46, 4;
	.loc	1 33 41                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:33:41
	shl.b32 	%r59, %r50, 2;
	and.b32  	%r60, %r59, -64;
	.loc	1 33 30                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:33:30
	add.s32 	%r61, %r60, %r52;
	.loc	1 33 38                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:33:38
	add.s32 	%r62, %r61, %r57;
	add.s32 	%r63, %r61, %r58;
	.loc	1 33 25                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:33:25
	mul.wide.s32 	%rd9, %r62, 4;
	add.s64 	%rd3, %rd6, %rd9;
	mul.wide.s32 	%rd10, %r63, 4;
	add.s64 	%rd4, %rd6, %rd10;
	.loc	1 33 52                         // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:33:52
	and.b32  	%r64, %r38, 508;
	shl.b32 	%r65, %r37, 2;
	mov.u32 	%r66, global_smem;
	add.s32 	%r11, %r66, %r65;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	add.s32 	%r13, %r11, 1040;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	add.s32 	%r15, %r11, 2080;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	add.s32 	%r17, %r11, 3120;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r11, 512;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r11, 1552;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r11, 2592;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r11, 3632;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r67, %r36, 2;
	and.b32  	%r68, %r67, 16;
	add.s32 	%r69, %r66, %r68;
	shl.b32 	%r70, %r64, 2;
	add.s32 	%r71, %r69, %r70;
	or.b32  	%r72, %r64, 512;
	shr.u32 	%r73, %r72, 4;
	and.b32  	%r74, %r73, 48;
	add.s32 	%r75, %r66, %r74;
	add.s32 	%r76, %r75, %r70;
	ld.shared.v4.u32 	{%r31, %r32, %r33, %r34}, [%r76+2048];
	ld.shared.v4.u32 	{%r27, %r28, %r29, %r30}, [%r71];
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd3 + 0 ], { %r27, %r28, %r29, %r30 };
	// end inline asm
	// begin inline asm
	@%p12 st.global.v4.b32 [ %rd4 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	.loc	1 33 4                          // cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py:33:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/xj/cxjarnnhoncfnd7oybfwa3tzajqxh5qrkurxaxercbtz4ingxlmr.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 106
.b8 97
.b8 114
.b8 110
.b8 110
.b8 104
.b8 111
.b8 110
.b8 99
.b8 102
.b8 110
.b8 100
.b8 55
.b8 111
.b8 121
.b8 98
.b8 102
.b8 119
.b8 97
.b8 51
.b8 116
.b8 122
.b8 97
.b8 106
.b8 113
.b8 120
.b8 104
.b8 53
.b8 113
.b8 114
.b8 107
.b8 117
.b8 114
.b8 120
.b8 97
.b8 120
.b8 101
.b8 114
.b8 99
.b8 98
.b8 116
.b8 122
.b8 52
.b8 105
.b8 110
.b8 103
.b8 120
.b8 108
.b8 109
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 106
.b8 0
	}
	.section	.debug_macinfo	{	}
