; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused__log_softmax_mul_sum_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 6, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 62, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 64, !dbg !14
  %12 = shl i32 %10, 2, !dbg !15
  %13 = or disjoint i32 %12, 4, !dbg !15
  %14 = sext i32 %12 to i64, !dbg !16
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !16
  %16 = sext i32 %13 to i64, !dbg !16
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !16
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 %11) #2, !dbg !17
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %11) #2, !dbg !17
  %20 = getelementptr float, ptr addrspace(1) %1, i64 %14, !dbg !18
  %21 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !18
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %11) #2, !dbg !19
  %23 = bitcast i32 %22 to float, !dbg !19
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %11) #2, !dbg !19
  %25 = bitcast i32 %24 to float, !dbg !19
  %26 = or disjoint i32 %12, 1, !dbg !20
  %27 = or disjoint i32 %12, 5, !dbg !20
  %28 = sext i32 %26 to i64, !dbg !21
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !21
  %30 = sext i32 %27 to i64, !dbg !21
  %31 = getelementptr float, ptr addrspace(1) %1, i64 %30, !dbg !21
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %11) #2, !dbg !22
  %33 = bitcast i32 %32 to float, !dbg !22
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %11) #2, !dbg !22
  %35 = bitcast i32 %34 to float, !dbg !22
  %36 = or disjoint i32 %12, 2, !dbg !23
  %37 = or disjoint i32 %12, 6, !dbg !23
  %38 = sext i32 %36 to i64, !dbg !24
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !24
  %40 = sext i32 %37 to i64, !dbg !24
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !24
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %11) #2, !dbg !25
  %43 = bitcast i32 %42 to float, !dbg !25
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %11) #2, !dbg !25
  %45 = bitcast i32 %44 to float, !dbg !25
  %46 = or disjoint i32 %12, 3, !dbg !26
  %47 = or disjoint i32 %12, 7, !dbg !26
  %48 = sext i32 %46 to i64, !dbg !27
  %49 = getelementptr float, ptr addrspace(1) %1, i64 %48, !dbg !27
  %50 = sext i32 %47 to i64, !dbg !27
  %51 = getelementptr float, ptr addrspace(1) %1, i64 %50, !dbg !27
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %11) #2, !dbg !28
  %53 = bitcast i32 %52 to float, !dbg !28
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 %11) #2, !dbg !28
  %55 = bitcast i32 %54 to float, !dbg !28
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !29
  %57 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !29
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %11) #2, !dbg !30
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 %11) #2, !dbg !30
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !31
  %61 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !31
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 %11) #2, !dbg !32
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 %11) #2, !dbg !32
  %64 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !33
  %65 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !33
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 %11) #2, !dbg !34
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %65, i1 %11) #2, !dbg !34
  %68 = fmul float %23, 0x3FF7154760000000, !dbg !35
  %69 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %68) #2, !dbg !35
  %70 = fmul float %25, 0x3FF7154760000000, !dbg !35
  %71 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %70) #2, !dbg !35
  %72 = fmul float %33, 0x3FF7154760000000, !dbg !36
  %73 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %72) #2, !dbg !36
  %74 = fmul float %35, 0x3FF7154760000000, !dbg !36
  %75 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %74) #2, !dbg !36
  %76 = fadd float %69, %73, !dbg !37
  %77 = fadd float %71, %75, !dbg !37
  %78 = fmul float %43, 0x3FF7154760000000, !dbg !38
  %79 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %78) #2, !dbg !38
  %80 = fmul float %45, 0x3FF7154760000000, !dbg !38
  %81 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %80) #2, !dbg !38
  %82 = fadd float %76, %79, !dbg !39
  %83 = fadd float %77, %81, !dbg !39
  %84 = fmul float %53, 0x3FF7154760000000, !dbg !40
  %85 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %84) #2, !dbg !40
  %86 = fmul float %55, 0x3FF7154760000000, !dbg !40
  %87 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %86) #2, !dbg !40
  %88 = fadd float %82, %85, !dbg !41
  %89 = fadd float %83, %87, !dbg !41
  %90 = fcmp olt float %88, 0x3810000000000000, !dbg !42
  %91 = fmul float %88, 0x4160000000000000, !dbg !42
  %.02.i = select i1 %90, float %91, float %88, !dbg !42
  %i.i.0.i = select i1 %90, float -2.300000e+01, float 0.000000e+00, !dbg !42
  %92 = bitcast float %.02.i to i32, !dbg !42
  %93 = add i32 %92, -1059760811, !dbg !42
  %94 = and i32 %93, -8388608, !dbg !42
  %95 = sub i32 %92, %94, !dbg !42
  %96 = bitcast i32 %95 to float, !dbg !42
  %97 = sitofp i32 %94 to float, !dbg !42
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not.i = icmp eq i32 %98, 0, !dbg !42
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %97, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !42
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %97, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !42
  %.08.i = select i1 %.not.i, float %100, float %99, !dbg !42
  %101 = fadd float %96, -1.000000e+00, !dbg !42
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not1.i = icmp eq i32 %102, 0, !dbg !42
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %101, float 0x3FC2073EC0000000) #2, !dbg !42
  %104 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %101, float 0x3FC2073EC0000000) #2, !dbg !42
  %.010.i = select i1 %.not1.i, float %104, float %103, !dbg !42
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not2.i = icmp eq i32 %105, 0, !dbg !42
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %101, float 0xBFBF19B980000000) #2, !dbg !42
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %101, float 0xBFBF19B980000000) #2, !dbg !42
  %.011.i = select i1 %.not2.i, float %107, float %106, !dbg !42
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not3.i = icmp eq i32 %108, 0, !dbg !42
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %101, float 0x3FC1E52AA0000000) #2, !dbg !42
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %101, float 0x3FC1E52AA0000000) #2, !dbg !42
  %.012.i = select i1 %.not3.i, float %110, float %109, !dbg !42
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not4.i = icmp eq i32 %111, 0, !dbg !42
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %101, float 0xBFC55B1720000000) #2, !dbg !42
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %101, float 0xBFC55B1720000000) #2, !dbg !42
  %.09.i = select i1 %.not4.i, float %113, float %112, !dbg !42
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not5.i = icmp eq i32 %114, 0, !dbg !42
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %101, float 0x3FC99DA160000000) #2, !dbg !42
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %101, float 0x3FC99DA160000000) #2, !dbg !42
  %.05.i = select i1 %.not5.i, float %116, float %115, !dbg !42
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not6.i = icmp eq i32 %117, 0, !dbg !42
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %101, float 0xBFCFFFE440000000) #2, !dbg !42
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %101, float 0xBFCFFFE440000000) #2, !dbg !42
  %.01.i = select i1 %.not6.i, float %119, float %118, !dbg !42
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not7.i = icmp eq i32 %120, 0, !dbg !42
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %101, float 0x3FD5554F00000000) #2, !dbg !42
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %101, float 0x3FD5554F00000000) #2, !dbg !42
  %.0.i = select i1 %.not7.i, float %122, float %121, !dbg !42
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not8.i = icmp eq i32 %123, 0, !dbg !42
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %101, float -5.000000e-01) #2, !dbg !42
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %101, float -5.000000e-01) #2, !dbg !42
  %.07.i = select i1 %.not8.i, float %125, float %124, !dbg !42
  %126 = fmul float %101, %.07.i, !dbg !42
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not9.i = icmp eq i32 %127, 0, !dbg !42
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %126, float %101, float %101) #2, !dbg !42
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %126, float %101, float %101) #2, !dbg !42
  %.06.i = select i1 %.not9.i, float %129, float %128, !dbg !42
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not10.i = icmp eq i32 %130, 0, !dbg !42
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !42
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !42
  %.04.i = select i1 %.not10.i, float %132, float %131, !dbg !42
  %133 = icmp ugt i32 %92, 2139095039, !dbg !42
  br i1 %133, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !42

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not11.i = icmp eq i32 %134, 0, !dbg !42
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !42
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !42
  %.03.i = select i1 %.not11.i, float %136, float %135, !dbg !42
  br label %__nv_logf.exit, !dbg !42

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !42
  %137 = fcmp olt float %89, 0x3810000000000000, !dbg !42
  %138 = fmul float %89, 0x4160000000000000, !dbg !42
  %.02.i1 = select i1 %137, float %138, float %89, !dbg !42
  %i.i.0.i2 = select i1 %137, float -2.300000e+01, float 0.000000e+00, !dbg !42
  %139 = bitcast float %.02.i1 to i32, !dbg !42
  %140 = add i32 %139, -1059760811, !dbg !42
  %141 = and i32 %140, -8388608, !dbg !42
  %142 = sub i32 %139, %141, !dbg !42
  %143 = bitcast i32 %142 to float, !dbg !42
  %144 = sitofp i32 %141 to float, !dbg !42
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not.i3 = icmp eq i32 %145, 0, !dbg !42
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %144, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !42
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %144, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !42
  %.08.i4 = select i1 %.not.i3, float %147, float %146, !dbg !42
  %148 = fadd float %143, -1.000000e+00, !dbg !42
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not1.i5 = icmp eq i32 %149, 0, !dbg !42
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %148, float 0x3FC2073EC0000000) #2, !dbg !42
  %151 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %148, float 0x3FC2073EC0000000) #2, !dbg !42
  %.010.i6 = select i1 %.not1.i5, float %151, float %150, !dbg !42
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not2.i7 = icmp eq i32 %152, 0, !dbg !42
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %148, float 0xBFBF19B980000000) #2, !dbg !42
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %148, float 0xBFBF19B980000000) #2, !dbg !42
  %.011.i8 = select i1 %.not2.i7, float %154, float %153, !dbg !42
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not3.i9 = icmp eq i32 %155, 0, !dbg !42
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %148, float 0x3FC1E52AA0000000) #2, !dbg !42
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %148, float 0x3FC1E52AA0000000) #2, !dbg !42
  %.012.i10 = select i1 %.not3.i9, float %157, float %156, !dbg !42
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not4.i11 = icmp eq i32 %158, 0, !dbg !42
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %148, float 0xBFC55B1720000000) #2, !dbg !42
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %148, float 0xBFC55B1720000000) #2, !dbg !42
  %.09.i12 = select i1 %.not4.i11, float %160, float %159, !dbg !42
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not5.i13 = icmp eq i32 %161, 0, !dbg !42
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %148, float 0x3FC99DA160000000) #2, !dbg !42
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %148, float 0x3FC99DA160000000) #2, !dbg !42
  %.05.i14 = select i1 %.not5.i13, float %163, float %162, !dbg !42
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not6.i15 = icmp eq i32 %164, 0, !dbg !42
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %148, float 0xBFCFFFE440000000) #2, !dbg !42
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %148, float 0xBFCFFFE440000000) #2, !dbg !42
  %.01.i16 = select i1 %.not6.i15, float %166, float %165, !dbg !42
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not7.i17 = icmp eq i32 %167, 0, !dbg !42
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %148, float 0x3FD5554F00000000) #2, !dbg !42
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %148, float 0x3FD5554F00000000) #2, !dbg !42
  %.0.i18 = select i1 %.not7.i17, float %169, float %168, !dbg !42
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not8.i19 = icmp eq i32 %170, 0, !dbg !42
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %148, float -5.000000e-01) #2, !dbg !42
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %148, float -5.000000e-01) #2, !dbg !42
  %.07.i20 = select i1 %.not8.i19, float %172, float %171, !dbg !42
  %173 = fmul float %148, %.07.i20, !dbg !42
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not9.i21 = icmp eq i32 %174, 0, !dbg !42
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %173, float %148, float %148) #2, !dbg !42
  %176 = tail call float @llvm.nvvm.fma.rn.f(float %173, float %148, float %148) #2, !dbg !42
  %.06.i22 = select i1 %.not9.i21, float %176, float %175, !dbg !42
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not10.i23 = icmp eq i32 %177, 0, !dbg !42
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !42
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !42
  %.04.i24 = select i1 %.not10.i23, float %179, float %178, !dbg !42
  %180 = icmp ugt i32 %139, 2139095039, !dbg !42
  br i1 %180, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !42

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !42
  %.not11.i28 = icmp eq i32 %181, 0, !dbg !42
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !42
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !42
  %.03.i29 = select i1 %.not11.i28, float %183, float %182, !dbg !42
  br label %__nv_logf.exit30, !dbg !42

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !42
  %184 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !42
  %r.i.1.i = select i1 %184, float 0xFFF0000000000000, float %r.i.0.i, !dbg !42
  %185 = bitcast i32 %67 to float, !dbg !34
  %186 = bitcast i32 %66 to float, !dbg !34
  %187 = bitcast i32 %63 to float, !dbg !32
  %188 = bitcast i32 %62 to float, !dbg !32
  %189 = bitcast i32 %59 to float, !dbg !30
  %190 = bitcast i32 %58 to float, !dbg !30
  %191 = bitcast i32 %19 to float, !dbg !17
  %192 = bitcast i32 %18 to float, !dbg !17
  %193 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !42
  %r.i.1.i26 = select i1 %193, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !42
  %194 = fsub float %23, %r.i.1.i, !dbg !43
  %195 = fsub float %25, %r.i.1.i26, !dbg !43
  %196 = fmul float %194, %192, !dbg !44
  %197 = fmul float %195, %191, !dbg !44
  %198 = fsub float %33, %r.i.1.i, !dbg !45
  %199 = fsub float %35, %r.i.1.i26, !dbg !45
  %200 = fmul float %198, %190, !dbg !46
  %201 = fmul float %199, %189, !dbg !46
  %202 = fadd float %196, %200, !dbg !47
  %203 = fadd float %197, %201, !dbg !47
  %204 = fsub float %43, %r.i.1.i, !dbg !48
  %205 = fsub float %45, %r.i.1.i26, !dbg !48
  %206 = fmul float %204, %188, !dbg !49
  %207 = fmul float %205, %187, !dbg !49
  %208 = fadd float %206, %202, !dbg !50
  %209 = fadd float %207, %203, !dbg !50
  %210 = fsub float %53, %r.i.1.i, !dbg !51
  %211 = fsub float %55, %r.i.1.i26, !dbg !51
  %212 = fmul float %210, %186, !dbg !52
  %213 = fmul float %211, %185, !dbg !52
  %214 = fadd float %212, %208, !dbg !53
  %215 = fadd float %213, %209, !dbg !53
  %216 = sext i32 %10 to i64, !dbg !54
  %217 = getelementptr float, ptr addrspace(1) %2, i64 %216, !dbg !54
  %218 = bitcast float %214 to i32, !dbg !55
  %219 = bitcast float %215 to i32, !dbg !55
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %218, i32 %219, ptr addrspace(1) %217, i1 %11) #2, !dbg !55
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cg2ui75egdt3vjxtar6hvemxpvf7ywnxzkzqu3rubcqyuruuc67g.py", directory: "inductor_cache/g2")
!4 = !{ptr @triton_poi_fused__log_softmax_mul_sum_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__log_softmax_mul_sum_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__log_softmax_mul_sum_1", linkageName: "triton_poi_fused__log_softmax_mul_sum_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 26, column: 30, scope: !7)
!19 = !DILocation(line: 26, column: 37, scope: !7)
!20 = !DILocation(line: 27, column: 34, scope: !7)
!21 = !DILocation(line: 27, column: 30, scope: !7)
!22 = !DILocation(line: 27, column: 41, scope: !7)
!23 = !DILocation(line: 28, column: 34, scope: !7)
!24 = !DILocation(line: 28, column: 30, scope: !7)
!25 = !DILocation(line: 28, column: 41, scope: !7)
!26 = !DILocation(line: 29, column: 34, scope: !7)
!27 = !DILocation(line: 29, column: 30, scope: !7)
!28 = !DILocation(line: 29, column: 41, scope: !7)
!29 = !DILocation(line: 30, column: 31, scope: !7)
!30 = !DILocation(line: 30, column: 42, scope: !7)
!31 = !DILocation(line: 31, column: 31, scope: !7)
!32 = !DILocation(line: 31, column: 42, scope: !7)
!33 = !DILocation(line: 32, column: 31, scope: !7)
!34 = !DILocation(line: 32, column: 42, scope: !7)
!35 = !DILocation(line: 33, column: 23, scope: !7)
!36 = !DILocation(line: 34, column: 23, scope: !7)
!37 = !DILocation(line: 35, column: 18, scope: !7)
!38 = !DILocation(line: 36, column: 23, scope: !7)
!39 = !DILocation(line: 37, column: 18, scope: !7)
!40 = !DILocation(line: 38, column: 24, scope: !7)
!41 = !DILocation(line: 39, column: 19, scope: !7)
!42 = !DILocation(line: 40, column: 24, scope: !7)
!43 = !DILocation(line: 41, column: 19, scope: !7)
!44 = !DILocation(line: 42, column: 19, scope: !7)
!45 = !DILocation(line: 43, column: 19, scope: !7)
!46 = !DILocation(line: 44, column: 20, scope: !7)
!47 = !DILocation(line: 45, column: 20, scope: !7)
!48 = !DILocation(line: 46, column: 19, scope: !7)
!49 = !DILocation(line: 47, column: 20, scope: !7)
!50 = !DILocation(line: 48, column: 20, scope: !7)
!51 = !DILocation(line: 49, column: 19, scope: !7)
!52 = !DILocation(line: 50, column: 20, scope: !7)
!53 = !DILocation(line: 51, column: 20, scope: !7)
!54 = !DILocation(line: 52, column: 25, scope: !7)
!55 = !DILocation(line: 52, column: 37, scope: !7)
!56 = !DILocation(line: 52, column: 4, scope: !7)
