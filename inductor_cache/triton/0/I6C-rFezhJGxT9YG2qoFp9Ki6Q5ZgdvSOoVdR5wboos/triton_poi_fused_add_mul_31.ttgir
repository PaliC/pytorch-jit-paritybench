#blocked = #triton_gpu.blocked<{sizePerThread = [1, 2], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [0, 1]}>
#loc = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_add_mul_31(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":19:0)) attributes {noinline = false} {
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst = arith.constant dense<8192> : tensor<1x256xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<64> : tensor<1x256xi32, #blocked1> loc(#loc1)
    %cst_1 = arith.constant dense<128> : tensor<1x256xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<512> : tensor<1x256xi32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<512> : tensor<1x256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %3 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<256xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x256xi32, #blocked1> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<256xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x256xi32, #blocked> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<1x256xi32, #blocked1> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<1x256xi32, #blocked> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<1x256xi32, #blocked1> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<1x256xi32, #blocked> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_2 : tensor<1x256xi32, #blocked1> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_3 : tensor<1x256xi32, #blocked> loc(#loc6)
    %12 = tt.get_program_id x : i32 loc(#loc7)
    %13 = arith.cmpi slt, %12, %c64_i32 : i32 loc(#loc8)
    %14 = arith.remsi %9, %cst_1 : tensor<1x256xi32, #blocked> loc(#loc9)
    %15 = arith.divsi %9, %cst_1 : tensor<1x256xi32, #blocked> loc(#loc10)
    %16 = arith.muli %8, %cst_0 : tensor<1x256xi32, #blocked1> loc(#loc11)
    %17 = tt.splat %12 : i32 -> tensor<1x256xi32, #blocked1> loc(#loc12)
    %18 = arith.addi %17, %16 : tensor<1x256xi32, #blocked1> loc(#loc12)
    %19 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked1> loc(#loc13)
    %20 = tt.addptr %19, %18 : tensor<1x256x!tt.ptr<f32>, #blocked1>, tensor<1x256xi32, #blocked1> loc(#loc13)
    %21 = tt.splat %13 : i1 -> tensor<1x256xi1, #blocked1> loc(#loc14)
    %22 = tt.splat %13 : i1 -> tensor<1x256xi1, #blocked> loc(#loc14)
    %23 = arith.andi %21, %10 : tensor<1x256xi1, #blocked1> loc(#loc14)
    %24 = arith.andi %22, %11 : tensor<1x256xi1, #blocked> loc(#loc14)
    %25 = tt.load %20, %23 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>, #blocked1> loc(#loc15)
    %26 = triton_gpu.convert_layout %25 : tensor<1x256xf32, #blocked1> -> tensor<1x256xf32, #blocked> loc(#loc15)
    %27 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc16)
    %28 = tt.addptr %27, %14 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc16)
    %29 = tt.load %28, %11 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc17)
    %30 = arith.muli %12, %c128_i32 : i32 loc(#loc18)
    %31 = tt.splat %30 : i32 -> tensor<1x256xi32, #blocked> loc(#loc19)
    %32 = arith.addi %14, %31 : tensor<1x256xi32, #blocked> loc(#loc19)
    %33 = arith.muli %15, %cst : tensor<1x256xi32, #blocked> loc(#loc20)
    %34 = arith.addi %32, %33 : tensor<1x256xi32, #blocked> loc(#loc21)
    %35 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc22)
    %36 = tt.addptr %35, %34 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc22)
    %37 = tt.load %36, %24 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc23)
    %38 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc24)
    %39 = tt.addptr %38, %14 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc24)
    %40 = tt.load %39, %11 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc25)
    %41 = arith.mulf %29, %37 : tensor<1x256xf32, #blocked> loc(#loc26)
    %42 = arith.addf %41, %40 : tensor<1x256xf32, #blocked> loc(#loc27)
    %43 = arith.addf %26, %42 : tensor<1x256xf32, #blocked> loc(#loc28)
    %44 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked1> loc(#loc29)
    %45 = tt.addptr %44, %18 : tensor<1x256x!tt.ptr<f32>, #blocked1>, tensor<1x256xi32, #blocked1> loc(#loc29)
    %46 = triton_gpu.convert_layout %43 : tensor<1x256xf32, #blocked> -> tensor<1x256xf32, #blocked1> loc(#loc30)
    tt.store %45, %46, %23 : tensor<1x256x!tt.ptr<f32>, #blocked1> loc(#loc30)
    tt.return loc(#loc31)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":22:28)
#loc3 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":22:33)
#loc4 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":23:44)
#loc5 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":23:23)
#loc6 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":24:21)
#loc7 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":25:28)
#loc8 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":27:21)
#loc9 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":30:19)
#loc10 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":31:19)
#loc11 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":32:38)
#loc12 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":32:35)
#loc13 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":32:30)
#loc14 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":32:51)
#loc15 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":32:43)
#loc16 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":33:30)
#loc17 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":33:35)
#loc18 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":34:39)
#loc19 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":34:35)
#loc20 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":34:49)
#loc21 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":34:44)
#loc22 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":34:30)
#loc23 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":34:54)
#loc24 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":35:30)
#loc25 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":35:35)
#loc26 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":36:18)
#loc27 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":37:18)
#loc28 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":38:18)
#loc29 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":39:25)
#loc30 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":39:44)
#loc31 = loc("inductor_cache/ua/cuaiqbjq5ev7eoohu2twzfo5zxgsr4qztxl4pucbdobc6xugcgaw.py":39:4)
