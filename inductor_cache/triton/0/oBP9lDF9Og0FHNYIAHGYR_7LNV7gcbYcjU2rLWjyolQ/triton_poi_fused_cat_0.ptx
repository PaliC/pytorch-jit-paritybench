//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_0  // -- Begin function triton_poi_fused_cat_0
                                        // @triton_poi_fused_cat_0
.visible .entry triton_poi_fused_cat_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_0_param_1,
	.param .u32 triton_poi_fused_cat_0_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<40>;
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_cat_0_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_cat_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:21:33
	shl.b32 	%r19, %r1, 7;
	.loc	1 22 36                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:22:36
	mov.u32 	%r20, %tid.x;
	and.b32  	%r21, %r20, 127;
	.loc	1 22 23                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:22:23
	or.b32  	%r22, %r19, %r21;
	.loc	1 23 21                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:23:21
	setp.lt.s32 	%p17, %r22, 128;
	.loc	1 25 19                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:25:19
	shr.s32 	%r24, %r22, 31;
	shr.u32 	%r25, %r24, 29;
	add.s32 	%r26, %r22, %r25;
	.loc	1 24 19                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:24:19
	and.b32  	%r27, %r26, -8;
	sub.s32 	%r28, %r22, %r27;
	.loc	1 31 18                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:31:18
	setp.lt.s32 	%p18, %r28, 4;
	.loc	1 32 33                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:32:33
	shl.b32 	%r29, %r28, 2;
	.loc	1 32 42                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:32:42
	shl.b32 	%r30, %r26, 1;
	and.b32  	%r31, %r30, -16;
	.loc	1 32 39                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:32:39
	add.s32 	%r32, %r29, %r31;
	.loc	1 32 30                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:32:30
	mul.wide.s32 	%rd12, %r32, 4;
	add.s64 	%rd1, %rd10, %rd12;
	.loc	1 32 54                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:32:54
	and.pred  	%p1, %p17, %p18;
	mov.b32 	%r3, 0;
	.loc	1 32 47                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 33 43                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:33:43
	or.b32  	%r33, %r32, 1;
	.loc	1 33 30                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:33:30
	mul.wide.s32 	%rd13, %r33, 4;
	add.s64 	%rd2, %rd10, %rd13;
	.loc	1 33 51                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:33:51
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 34 18                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:34:18
	add.f32 	%f3, %f1, %f2;
	.loc	1 35 43                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:35:43
	or.b32  	%r34, %r32, 2;
	.loc	1 35 30                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:35:30
	mul.wide.s32 	%rd14, %r34, 4;
	add.s64 	%rd3, %rd10, %rd14;
	.loc	1 35 51                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:35:51
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r6, %r3;
	// end inline asm
	mov.b32 	%f4, %r6;
	.loc	1 36 18                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:36:18
	add.f32 	%f5, %f3, %f4;
	.loc	1 37 44                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:37:44
	or.b32  	%r35, %r32, 3;
	.loc	1 37 31                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:37:31
	mul.wide.s32 	%rd15, %r35, 4;
	add.s64 	%rd4, %rd10, %rd15;
	.loc	1 37 52                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:37:52
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r8, %r3;
	// end inline asm
	mov.b32 	%f6, %r8;
	.loc	1 38 20                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:38:20
	add.f32 	%f7, %f5, %f6;
	.loc	1 43 20                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:43:20
	setp.gt.s32 	%p19, %r28, 3;
	.loc	1 46 47                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:46:47
	add.s32 	%r36, %r28, %r31;
	.loc	1 46 40                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:46:40
	add.s32 	%r37, %r36, -4;
	.loc	1 46 31                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:46:31
	mul.wide.s32 	%rd16, %r37, 4;
	add.s64 	%rd5, %rd10, %rd16;
	.loc	1 46 61                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:46:61
	and.pred  	%p9, %p17, %p19;
	.loc	1 46 53                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:46:53
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p9 mov.u32 %r10, %r3;
	// end inline asm
	mov.b32 	%f8, %r10;
	.loc	1 47 31                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:47:31
	mul.wide.s32 	%rd17, %r36, 4;
	add.s64 	%rd6, %rd10, %rd17;
	.loc	1 47 57                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:47:57
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r12 }, [ %rd6 + 0 ];
	@!%p9 mov.u32 %r12, %r3;
	// end inline asm
	mov.b32 	%f9, %r12;
	.loc	1 48 20                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:48:20
	add.f32 	%f10, %f8, %f9;
	.loc	1 49 44                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:49:44
	add.s32 	%r38, %r36, 4;
	.loc	1 49 31                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:49:31
	mul.wide.s32 	%rd18, %r38, 4;
	add.s64 	%rd7, %rd10, %rd18;
	.loc	1 49 57                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:49:57
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	@!%p9 mov.u32 %r14, %r3;
	// end inline asm
	mov.b32 	%f11, %r14;
	.loc	1 50 20                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:50:20
	add.f32 	%f12, %f10, %f11;
	.loc	1 51 45                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:51:45
	add.s32 	%r39, %r36, 8;
	.loc	1 51 31                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:51:31
	mul.wide.s32 	%rd19, %r39, 4;
	add.s64 	%rd8, %rd10, %rd19;
	.loc	1 51 58                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:51:58
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r16 }, [ %rd8 + 0 ];
	@!%p9 mov.u32 %r16, %r3;
	// end inline asm
	mov.b32 	%f13, %r16;
	.loc	1 52 20                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:52:20
	add.f32 	%f14, %f12, %f13;
	.loc	1 0 0                           // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:0:0
	selp.f32 	%f15, %f7, %f14, %p18;
	mul.f32 	%f16, %f15, 0f3E800000;
	.loc	1 58 25                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:58:25
	mul.wide.s32 	%rd20, %r22, 4;
	add.s64 	%rd9, %rd11, %rd20;
	.loc	1 58 37                         // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:58:37
	mov.b32 	%r18, %f16;
	// begin inline asm
	@%p17 st.global.b32 [ %rd9 + 0 ], { %r18 };
	// end inline asm
	.loc	1 58 4                          // curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py:58:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 114
.b8 110
.b8 102
.b8 105
.b8 117
.b8 101
.b8 106
.b8 105
.b8 114
.b8 104
.b8 55
.b8 112
.b8 52
.b8 104
.b8 122
.b8 107
.b8 102
.b8 52
.b8 55
.b8 99
.b8 104
.b8 54
.b8 116
.b8 52
.b8 104
.b8 99
.b8 50
.b8 106
.b8 101
.b8 104
.b8 55
.b8 117
.b8 99
.b8 115
.b8 51
.b8 53
.b8 100
.b8 50
.b8 111
.b8 114
.b8 50
.b8 118
.b8 111
.b8 111
.b8 116
.b8 97
.b8 52
.b8 121
.b8 106
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 114
.b8 0
	}
	.section	.debug_macinfo	{	}
