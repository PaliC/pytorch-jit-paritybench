#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_cat_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<12> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<-4> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2.500000e-01> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<16> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<4> : tensor<128xi64, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<8> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<128> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_10 : tensor<128xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_9 : tensor<128xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_9 : tensor<128xi32, #blocked> loc(#loc8)
    %8 = arith.extsi %6 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_8 : tensor<128xi64, #blocked> loc(#loc9)
    %10 = arith.muli %6, %cst_7 : tensor<128xi32, #blocked> loc(#loc10)
    %11 = arith.muli %7, %cst_6 : tensor<128xi32, #blocked> loc(#loc11)
    %12 = arith.addi %10, %11 : tensor<128xi32, #blocked> loc(#loc12)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = tt.addptr %13, %12 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc13)
    %15 = arith.andi %9, %5 : tensor<128xi1, #blocked> loc(#loc14)
    %16 = tt.load %14, %15, %cst_5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = arith.addi %10, %cst_4 : tensor<128xi32, #blocked> loc(#loc16)
    %18 = arith.addi %17, %11 : tensor<128xi32, #blocked> loc(#loc17)
    %19 = tt.addptr %13, %18 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc18)
    %20 = tt.load %19, %15, %cst_5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc19)
    %21 = arith.addf %20, %16 : tensor<128xf32, #blocked> loc(#loc20)
    %22 = arith.addi %10, %cst_3 : tensor<128xi32, #blocked> loc(#loc21)
    %23 = arith.addi %22, %11 : tensor<128xi32, #blocked> loc(#loc22)
    %24 = tt.addptr %13, %23 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc23)
    %25 = tt.load %24, %15, %cst_5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc24)
    %26 = arith.addf %25, %21 : tensor<128xf32, #blocked> loc(#loc25)
    %27 = arith.addi %10, %cst_2 : tensor<128xi32, #blocked> loc(#loc26)
    %28 = arith.addi %27, %11 : tensor<128xi32, #blocked> loc(#loc27)
    %29 = tt.addptr %13, %28 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc28)
    %30 = tt.load %29, %15, %cst_5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc29)
    %31 = arith.addf %30, %26 : tensor<128xf32, #blocked> loc(#loc30)
    %32 = arith.mulf %31, %cst_1 : tensor<128xf32, #blocked> loc(#loc31)
    %33 = arith.cmpi sge, %8, %cst_8 : tensor<128xi64, #blocked> loc(#loc32)
    %34 = arith.addi %6, %cst_0 : tensor<128xi32, #blocked> loc(#loc33)
    %35 = arith.addi %11, %34 : tensor<128xi32, #blocked> loc(#loc34)
    %36 = tt.addptr %13, %35 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc35)
    %37 = arith.andi %33, %5 : tensor<128xi1, #blocked> loc(#loc36)
    %38 = tt.load %36, %37, %cst_5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc37)
    %39 = arith.addi %11, %cst_7 : tensor<128xi32, #blocked> loc(#loc38)
    %40 = arith.addi %39, %34 : tensor<128xi32, #blocked> loc(#loc39)
    %41 = tt.addptr %13, %40 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc40)
    %42 = tt.load %41, %37, %cst_5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc41)
    %43 = arith.addf %42, %38 : tensor<128xf32, #blocked> loc(#loc42)
    %44 = arith.addi %11, %cst_9 : tensor<128xi32, #blocked> loc(#loc43)
    %45 = arith.addi %44, %34 : tensor<128xi32, #blocked> loc(#loc44)
    %46 = tt.addptr %13, %45 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc45)
    %47 = tt.load %46, %37, %cst_5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc46)
    %48 = arith.addf %47, %43 : tensor<128xf32, #blocked> loc(#loc47)
    %49 = arith.addi %11, %cst : tensor<128xi32, #blocked> loc(#loc48)
    %50 = arith.addi %49, %34 : tensor<128xi32, #blocked> loc(#loc49)
    %51 = tt.addptr %13, %50 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc50)
    %52 = tt.load %51, %37, %cst_5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc51)
    %53 = arith.addf %52, %48 : tensor<128xf32, #blocked> loc(#loc52)
    %54 = arith.mulf %53, %cst_1 : tensor<128xf32, #blocked> loc(#loc53)
    %55 = arith.select %33, %54, %cst_5 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc54)
    %56 = arith.select %9, %32, %55 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc60)
    %57 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc57)
    %58 = tt.addptr %57, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc57)
    tt.store %58, %56, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc58)
    tt.return loc(#loc59)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":21:28)
#loc3 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":21:33)
#loc4 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":22:36)
#loc5 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":22:23)
#loc6 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":23:21)
#loc7 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":24:19)
#loc8 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":25:19)
#loc9 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":31:18)
#loc10 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":32:33)
#loc11 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":32:42)
#loc12 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":32:39)
#loc13 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":32:30)
#loc14 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":32:54)
#loc15 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":32:47)
#loc16 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":33:34)
#loc17 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":33:43)
#loc18 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":33:30)
#loc19 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":33:51)
#loc20 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":34:18)
#loc21 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":35:34)
#loc22 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":35:43)
#loc23 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":35:30)
#loc24 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":35:51)
#loc25 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":36:18)
#loc26 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":37:35)
#loc27 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":37:44)
#loc28 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":37:31)
#loc29 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":37:52)
#loc30 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":38:20)
#loc31 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":40:20)
#loc32 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":43:20)
#loc33 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":46:47)
#loc34 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":46:40)
#loc35 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":46:31)
#loc36 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":46:61)
#loc37 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":46:53)
#loc38 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":47:35)
#loc39 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":47:44)
#loc40 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":47:31)
#loc41 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":47:57)
#loc42 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":48:20)
#loc43 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":49:35)
#loc44 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":49:44)
#loc45 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":49:31)
#loc46 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":49:57)
#loc47 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":50:20)
#loc48 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":51:36)
#loc49 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":51:45)
#loc50 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":51:31)
#loc51 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":51:58)
#loc52 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":52:20)
#loc53 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":54:20)
#loc54 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":56:35)
#loc55 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":57:34)
#loc56 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":42:34)
#loc57 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":58:25)
#loc58 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":58:37)
#loc59 = loc("inductor_cache/ur/curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py":58:4)
#loc60 = loc(fused[#loc55, #loc56])
