; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 128, !dbg !14
  %.frozen = freeze i32 %8, !dbg !15
  %10 = sdiv i32 %.frozen, 8, !dbg !15
  %11 = mul i32 %10, 8, !dbg !16
  %.decomposed = sub i32 %.frozen, %11, !dbg !16
  %12 = icmp slt i32 %.decomposed, 4, !dbg !17
  %13 = shl nsw i32 %.decomposed, 2, !dbg !18
  %14 = shl i32 %10, 4, !dbg !19
  %15 = add i32 %13, %14, !dbg !20
  %16 = sext i32 %15 to i64, !dbg !21
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !21
  %18 = and i1 %9, %12, !dbg !22
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %18, i32 0, i1 %18) #1, !dbg !23
  %20 = bitcast i32 %19 to float, !dbg !23
  %21 = or disjoint i32 %13, 1, !dbg !24
  %22 = add i32 %21, %14, !dbg !25
  %23 = sext i32 %22 to i64, !dbg !26
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !26
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %24, i1 %18, i32 0, i1 %18) #1, !dbg !27
  %26 = bitcast i32 %25 to float, !dbg !27
  %27 = fadd float %20, %26, !dbg !28
  %28 = or disjoint i32 %13, 2, !dbg !29
  %29 = add i32 %28, %14, !dbg !30
  %30 = sext i32 %29 to i64, !dbg !31
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !31
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %18, i32 0, i1 %18) #1, !dbg !32
  %33 = bitcast i32 %32 to float, !dbg !32
  %34 = fadd float %27, %33, !dbg !33
  %35 = or disjoint i32 %13, 3, !dbg !34
  %36 = add i32 %35, %14, !dbg !35
  %37 = sext i32 %36 to i64, !dbg !36
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !36
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %18, i32 0, i1 %18) #1, !dbg !37
  %40 = bitcast i32 %39 to float, !dbg !37
  %41 = fadd float %34, %40, !dbg !38
  %42 = icmp sgt i32 %.decomposed, 3, !dbg !39
  %43 = add nsw i32 %.decomposed, -4, !dbg !40
  %44 = add i32 %14, %43, !dbg !41
  %45 = sext i32 %44 to i64, !dbg !42
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !42
  %47 = and i1 %9, %42, !dbg !43
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %47, i32 0, i1 %47) #1, !dbg !44
  %49 = bitcast i32 %48 to float, !dbg !44
  %50 = or disjoint i32 %14, 4, !dbg !45
  %51 = add i32 %50, %43, !dbg !46
  %52 = sext i32 %51 to i64, !dbg !47
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !47
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %53, i1 %47, i32 0, i1 %47) #1, !dbg !48
  %55 = bitcast i32 %54 to float, !dbg !48
  %56 = fadd float %49, %55, !dbg !49
  %57 = or disjoint i32 %14, 8, !dbg !50
  %58 = add i32 %57, %43, !dbg !51
  %59 = sext i32 %58 to i64, !dbg !52
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !52
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 %47, i32 0, i1 %47) #1, !dbg !53
  %62 = bitcast i32 %61 to float, !dbg !53
  %63 = fadd float %56, %62, !dbg !54
  %64 = or disjoint i32 %14, 12, !dbg !55
  %65 = add i32 %64, %43, !dbg !56
  %66 = sext i32 %65 to i64, !dbg !57
  %67 = getelementptr float, ptr addrspace(1) %0, i64 %66, !dbg !57
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %67, i1 %47, i32 0, i1 %47) #1, !dbg !58
  %69 = bitcast i32 %68 to float, !dbg !58
  %70 = fadd float %63, %69, !dbg !59
  %.v = select i1 %12, float %41, float %70, !dbg !60
  %71 = fmul float %.v, 2.500000e-01, !dbg !60
  %72 = sext i32 %8 to i64, !dbg !61
  %73 = getelementptr float, ptr addrspace(1) %1, i64 %72, !dbg !61
  %74 = bitcast float %71 to i32, !dbg !62
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %74, ptr addrspace(1) %73, i1 %9) #1, !dbg !62
  ret void, !dbg !63
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "curnfiuejirh7p4hzkf47ch6t4hc2jeh7ucs35d2or2voota4yjt.py", directory: "inductor_cache/ur")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 33, scope: !7)
!19 = !DILocation(line: 32, column: 42, scope: !7)
!20 = !DILocation(line: 32, column: 39, scope: !7)
!21 = !DILocation(line: 32, column: 30, scope: !7)
!22 = !DILocation(line: 32, column: 54, scope: !7)
!23 = !DILocation(line: 32, column: 47, scope: !7)
!24 = !DILocation(line: 33, column: 34, scope: !7)
!25 = !DILocation(line: 33, column: 43, scope: !7)
!26 = !DILocation(line: 33, column: 30, scope: !7)
!27 = !DILocation(line: 33, column: 51, scope: !7)
!28 = !DILocation(line: 34, column: 18, scope: !7)
!29 = !DILocation(line: 35, column: 34, scope: !7)
!30 = !DILocation(line: 35, column: 43, scope: !7)
!31 = !DILocation(line: 35, column: 30, scope: !7)
!32 = !DILocation(line: 35, column: 51, scope: !7)
!33 = !DILocation(line: 36, column: 18, scope: !7)
!34 = !DILocation(line: 37, column: 35, scope: !7)
!35 = !DILocation(line: 37, column: 44, scope: !7)
!36 = !DILocation(line: 37, column: 31, scope: !7)
!37 = !DILocation(line: 37, column: 52, scope: !7)
!38 = !DILocation(line: 38, column: 20, scope: !7)
!39 = !DILocation(line: 43, column: 20, scope: !7)
!40 = !DILocation(line: 46, column: 47, scope: !7)
!41 = !DILocation(line: 46, column: 40, scope: !7)
!42 = !DILocation(line: 46, column: 31, scope: !7)
!43 = !DILocation(line: 46, column: 61, scope: !7)
!44 = !DILocation(line: 46, column: 53, scope: !7)
!45 = !DILocation(line: 47, column: 35, scope: !7)
!46 = !DILocation(line: 47, column: 44, scope: !7)
!47 = !DILocation(line: 47, column: 31, scope: !7)
!48 = !DILocation(line: 47, column: 57, scope: !7)
!49 = !DILocation(line: 48, column: 20, scope: !7)
!50 = !DILocation(line: 49, column: 35, scope: !7)
!51 = !DILocation(line: 49, column: 44, scope: !7)
!52 = !DILocation(line: 49, column: 31, scope: !7)
!53 = !DILocation(line: 49, column: 57, scope: !7)
!54 = !DILocation(line: 50, column: 20, scope: !7)
!55 = !DILocation(line: 51, column: 36, scope: !7)
!56 = !DILocation(line: 51, column: 45, scope: !7)
!57 = !DILocation(line: 51, column: 31, scope: !7)
!58 = !DILocation(line: 51, column: 58, scope: !7)
!59 = !DILocation(line: 52, column: 20, scope: !7)
!60 = !DILocation(line: 0, scope: !7)
!61 = !DILocation(line: 58, column: 25, scope: !7)
!62 = !DILocation(line: 58, column: 37, scope: !7)
!63 = !DILocation(line: 58, column: 4, scope: !7)
