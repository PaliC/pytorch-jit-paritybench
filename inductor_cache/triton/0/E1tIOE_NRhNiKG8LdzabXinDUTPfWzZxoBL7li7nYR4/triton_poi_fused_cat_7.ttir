#loc = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_7(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-4> : tensor<256xi32> loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<256xi64> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<128> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<8> : tensor<256xi32> loc(#loc1)
    %cst_6 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_7 = arith.constant dense<512> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_7 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_6 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_5 : tensor<256xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_6 : tensor<256xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_4 : tensor<256xi32> loc(#loc10)
    %10 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc11)
    %11 = tt.load %10 : !tt.ptr<f32> loc(#loc12)
    %12 = tt.splat %11 : f32 -> tensor<256xf32> loc(#loc13)
    %13 = tt.addptr %arg3, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc14)
    %14 = tt.load %13 : !tt.ptr<f32> loc(#loc15)
    %15 = tt.splat %14 : f32 -> tensor<256xf32> loc(#loc16)
    %16 = arith.extsi %7 : tensor<256xi32> to tensor<256xi64> loc(#loc17)
    %17 = arith.cmpi slt, %16, %cst_3 : tensor<256xi64> loc(#loc17)
    %18 = arith.muli %7, %cst_6 : tensor<256xi32> loc(#loc18)
    %19 = arith.addi %8, %18 : tensor<256xi32> loc(#loc19)
    %20 = arith.muli %9, %cst_2 : tensor<256xi32> loc(#loc20)
    %21 = arith.addi %19, %20 : tensor<256xi32> loc(#loc21)
    %22 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc22)
    %23 = tt.addptr %22, %21 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc22)
    %24 = arith.andi %17, %5 : tensor<256xi1> loc(#loc23)
    %25 = tt.load %23, %24, %cst_1 : tensor<256x!tt.ptr<f32>> loc(#loc24)
    %26 = arith.muli %9, %cst_0 : tensor<256xi32> loc(#loc25)
    %27 = arith.addi %26, %7 : tensor<256xi32> loc(#loc26)
    %28 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc27)
    %29 = tt.addptr %28, %27 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc27)
    %30 = tt.load %29, %24, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc28)
    %31 = arith.mulf %12, %30 : tensor<256xf32> loc(#loc29)
    %32 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc30)
    %33 = tt.addptr %32, %27 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc30)
    %34 = tt.load %33, %24, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc31)
    %35 = arith.mulf %15, %34 : tensor<256xf32> loc(#loc32)
    %36 = arith.addf %31, %35 : tensor<256xf32> loc(#loc33)
    %37 = arith.mulf %25, %36 : tensor<256xf32> loc(#loc34)
    %38 = arith.cmpi sge, %16, %cst_3 : tensor<256xi64> loc(#loc35)
    %39 = arith.addi %7, %cst : tensor<256xi32> loc(#loc36)
    %40 = arith.muli %39, %cst_6 : tensor<256xi32> loc(#loc37)
    %41 = arith.addi %8, %40 : tensor<256xi32> loc(#loc38)
    %42 = arith.addi %41, %20 : tensor<256xi32> loc(#loc39)
    %43 = tt.addptr %22, %42 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc40)
    %44 = arith.andi %38, %5 : tensor<256xi1> loc(#loc41)
    %45 = tt.load %43, %44, %cst_1 : tensor<256x!tt.ptr<f32>> loc(#loc42)
    %46 = arith.select %17, %37, %45 : tensor<256xi1>, tensor<256xf32> loc(#loc48)
    %47 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc45)
    %48 = tt.addptr %47, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc45)
    tt.store %48, %46, %5 : tensor<256x!tt.ptr<f32>> loc(#loc46)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":21:28)
#loc3 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":21:33)
#loc4 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":22:36)
#loc5 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":22:23)
#loc6 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":23:21)
#loc7 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":24:21)
#loc8 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":24:27)
#loc9 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":25:19)
#loc10 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":26:19)
#loc11 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":28:30)
#loc12 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":28:19)
#loc13 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":29:33)
#loc14 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":30:31)
#loc15 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":30:20)
#loc16 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":31:35)
#loc17 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":36:18)
#loc18 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":37:39)
#loc19 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":37:35)
#loc20 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":37:48)
#loc21 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":37:45)
#loc22 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":37:30)
#loc23 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":37:60)
#loc24 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":37:53)
#loc25 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":38:32)
#loc26 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":38:38)
#loc27 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":38:30)
#loc28 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":38:44)
#loc29 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":39:18)
#loc30 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":40:31)
#loc31 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":40:45)
#loc32 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":41:20)
#loc33 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":42:19)
#loc34 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":43:19)
#loc35 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":46:20)
#loc36 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":49:47)
#loc37 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":49:40)
#loc38 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":49:36)
#loc39 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":49:53)
#loc40 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":49:31)
#loc41 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":49:69)
#loc42 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":49:61)
#loc43 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":50:34)
#loc44 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":45:34)
#loc45 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":51:25)
#loc46 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":51:37)
#loc47 = loc("inductor_cache/7h/c7hbjg43zu7w33fl6lg4a3uw53oowyhlxnmadrvznmup26l4qfa7.py":51:4)
#loc48 = loc(fused[#loc43, #loc44])
