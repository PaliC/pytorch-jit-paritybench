; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_avg_pool2d_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 16, !dbg !12
  %10 = and i32 %8, 15, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 16, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %13 = sdiv i32 %.frozen, 4, !dbg !15
  %14 = mul i32 %13, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = shl i32 %13, 4, !dbg !17
  %16 = add i32 %15, %.decomposed, !dbg !18
  %17 = sext i32 %16 to i64, !dbg !19
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %12, i32 0, i1 %12) #1, !dbg !20
  %20 = bitcast i32 %19 to float, !dbg !20
  %21 = fadd float %20, 0.000000e+00, !dbg !21
  %22 = add i32 %16, 4, !dbg !22
  %23 = sext i32 %22 to i64, !dbg !23
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !23
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %24, i1 %12, i32 0, i1 %12) #1, !dbg !24
  %26 = bitcast i32 %25 to float, !dbg !24
  %27 = fadd float %21, %26, !dbg !25
  %28 = add i32 %16, 8, !dbg !26
  %29 = sext i32 %28 to i64, !dbg !27
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !27
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %12, i32 0, i1 %12) #1, !dbg !28
  %32 = bitcast i32 %31 to float, !dbg !28
  %33 = fadd float %27, %32, !dbg !29
  %34 = add i32 %16, 12, !dbg !30
  %35 = sext i32 %34 to i64, !dbg !31
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !31
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %12, i32 0, i1 %12) #1, !dbg !32
  %38 = bitcast i32 %37 to float, !dbg !32
  %39 = fadd float %33, %38, !dbg !33
  %40 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %39, float 9.000000e+00) #1, !dbg !34
  %41 = fadd float %40, %40, !dbg !35
  %42 = fadd float %40, %41, !dbg !36
  %43 = fadd float %40, %42, !dbg !37
  %44 = fadd float %40, %43, !dbg !38
  %45 = fadd float %40, %44, !dbg !39
  %46 = fadd float %40, %45, !dbg !40
  %47 = fadd float %40, %46, !dbg !41
  %48 = fadd float %40, %47, !dbg !42
  %49 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %48, float 9.000000e+00) #1, !dbg !43
  %50 = fadd float %49, %49, !dbg !44
  %51 = fadd float %49, %50, !dbg !45
  %52 = fadd float %49, %51, !dbg !46
  %53 = fadd float %49, %52, !dbg !47
  %54 = fadd float %49, %53, !dbg !48
  %55 = fadd float %49, %54, !dbg !49
  %56 = fadd float %49, %55, !dbg !50
  %57 = fadd float %49, %56, !dbg !51
  %58 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %57, float 9.000000e+00) #1, !dbg !52
  %59 = sext i32 %11 to i64, !dbg !53
  %60 = getelementptr float, ptr addrspace(1) %1, i64 %59, !dbg !53
  %61 = icmp eq i32 %9, 0, !dbg !54
  %62 = bitcast float %40 to i32, !dbg !54
  %63 = and i1 %61, %12, !dbg !54
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %62, ptr addrspace(1) %60, i1 %63) #1, !dbg !54
  %64 = getelementptr float, ptr addrspace(1) %2, i64 %59, !dbg !55
  %65 = bitcast float %49 to i32, !dbg !56
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %65, ptr addrspace(1) %64, i1 %63) #1, !dbg !56
  %66 = getelementptr float, ptr addrspace(1) %3, i64 %59, !dbg !57
  %67 = bitcast float %58 to i32, !dbg !58
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %67, ptr addrspace(1) %66, i1 %63) #1, !dbg !58
  ret void, !dbg !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjulibppx5e5sboyetypoj3h7ignyukoos2r6dnzfiq7ycr3jvxn.py", directory: "inductor_cache/ju")
!4 = !{ptr @triton_poi_fused_avg_pool2d_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_5, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_5", linkageName: "triton_poi_fused_avg_pool2d_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 52, column: 39, scope: !7)
!18 = !DILocation(line: 52, column: 36, scope: !7)
!19 = !DILocation(line: 52, column: 31, scope: !7)
!20 = !DILocation(line: 52, column: 44, scope: !7)
!21 = !DILocation(line: 53, column: 20, scope: !7)
!22 = !DILocation(line: 55, column: 40, scope: !7)
!23 = !DILocation(line: 55, column: 31, scope: !7)
!24 = !DILocation(line: 55, column: 48, scope: !7)
!25 = !DILocation(line: 56, column: 20, scope: !7)
!26 = !DILocation(line: 61, column: 40, scope: !7)
!27 = !DILocation(line: 61, column: 31, scope: !7)
!28 = !DILocation(line: 61, column: 48, scope: !7)
!29 = !DILocation(line: 62, column: 20, scope: !7)
!30 = !DILocation(line: 64, column: 41, scope: !7)
!31 = !DILocation(line: 64, column: 31, scope: !7)
!32 = !DILocation(line: 64, column: 49, scope: !7)
!33 = !DILocation(line: 65, column: 20, scope: !7)
!34 = !DILocation(line: 67, column: 20, scope: !7)
!35 = !DILocation(line: 74, column: 20, scope: !7)
!36 = !DILocation(line: 78, column: 20, scope: !7)
!37 = !DILocation(line: 80, column: 20, scope: !7)
!38 = !DILocation(line: 82, column: 20, scope: !7)
!39 = !DILocation(line: 84, column: 20, scope: !7)
!40 = !DILocation(line: 86, column: 20, scope: !7)
!41 = !DILocation(line: 88, column: 20, scope: !7)
!42 = !DILocation(line: 90, column: 20, scope: !7)
!43 = !DILocation(line: 91, column: 20, scope: !7)
!44 = !DILocation(line: 92, column: 20, scope: !7)
!45 = !DILocation(line: 93, column: 20, scope: !7)
!46 = !DILocation(line: 94, column: 20, scope: !7)
!47 = !DILocation(line: 95, column: 20, scope: !7)
!48 = !DILocation(line: 96, column: 20, scope: !7)
!49 = !DILocation(line: 97, column: 20, scope: !7)
!50 = !DILocation(line: 98, column: 20, scope: !7)
!51 = !DILocation(line: 99, column: 20, scope: !7)
!52 = !DILocation(line: 100, column: 20, scope: !7)
!53 = !DILocation(line: 101, column: 25, scope: !7)
!54 = !DILocation(line: 101, column: 37, scope: !7)
!55 = !DILocation(line: 102, column: 25, scope: !7)
!56 = !DILocation(line: 102, column: 37, scope: !7)
!57 = !DILocation(line: 103, column: 25, scope: !7)
!58 = !DILocation(line: 103, column: 37, scope: !7)
!59 = !DILocation(line: 103, column: 4, scope: !7)
