; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__softmax_div_eq_masked_fill_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 16, !dbg !12
  %10 = and i32 %8, 15, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 16, !dbg !14
  %13 = sdiv i32 %11, 4, !dbg !15
  %14 = shl nsw i32 %13, 2, !dbg !16
  %15 = sext i32 %14 to i64, !dbg !17
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !17
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %12) #1, !dbg !18
  %18 = shl i32 %11, 2, !dbg !19
  %19 = sext i32 %18 to i64, !dbg !20
  %20 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !20
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %12) #1, !dbg !21
  %22 = or disjoint i32 %14, 1, !dbg !22
  %23 = sext i32 %22 to i64, !dbg !23
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !23
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %12) #1, !dbg !24
  %26 = or disjoint i32 %18, 1, !dbg !25
  %27 = sext i32 %26 to i64, !dbg !26
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !26
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %12) #1, !dbg !27
  %30 = or disjoint i32 %14, 2, !dbg !28
  %31 = sext i32 %30 to i64, !dbg !29
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !29
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %12) #1, !dbg !30
  %34 = or disjoint i32 %18, 2, !dbg !31
  %35 = sext i32 %34 to i64, !dbg !32
  %36 = getelementptr float, ptr addrspace(1) %1, i64 %35, !dbg !32
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %12) #1, !dbg !33
  %38 = bitcast i32 %37 to float, !dbg !33
  %39 = or disjoint i32 %14, 3, !dbg !34
  %40 = sext i32 %39 to i64, !dbg !35
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !35
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %12) #1, !dbg !36
  %43 = or disjoint i32 %18, 3, !dbg !37
  %44 = sext i32 %43 to i64, !dbg !38
  %45 = getelementptr float, ptr addrspace(1) %1, i64 %44, !dbg !38
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %12) #1, !dbg !39
  %47 = bitcast i32 %46 to float, !dbg !39
  %48 = insertelement <2 x i32> poison, i32 %21, i64 0, !dbg !21
  %49 = insertelement <2 x i32> %48, i32 %29, i64 1, !dbg !21
  %50 = bitcast <2 x i32> %49 to <2 x float>, !dbg !21
  %51 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !40
  %52 = insertelement <2 x i32> %51, i32 %25, i64 1, !dbg !40
  %53 = and <2 x i32> %52, splat (i32 2147483647), !dbg !40
  %54 = icmp eq <2 x i32> %53, zeroinitializer, !dbg !40
  %55 = select <2 x i1> %54, <2 x float> splat (float -1.000000e+09), <2 x float> %50, !dbg !41
  %56 = extractelement <2 x float> %55, i64 0, !dbg !42
  %57 = extractelement <2 x float> %55, i64 1, !dbg !43
  %58 = fcmp ogt float %56, %57, !dbg !44
  %59 = fcmp uno float %56, 0.000000e+00, !dbg !48
  %60 = or i1 %59, %58, !dbg !49
  %61 = select i1 %60, float %56, float %57, !dbg !50
  %62 = and i32 %33, 2147483647, !dbg !51
  %63 = icmp eq i32 %62, 0, !dbg !51
  %64 = select i1 %63, float -1.000000e+09, float %38, !dbg !52
  %65 = fcmp ogt float %61, %64, !dbg !53
  %66 = fcmp uno float %61, 0.000000e+00, !dbg !55
  %67 = or i1 %65, %66, !dbg !56
  %68 = select i1 %67, float %61, float %64, !dbg !57
  %69 = and i32 %42, 2147483647, !dbg !58
  %70 = icmp eq i32 %69, 0, !dbg !58
  %71 = select i1 %70, float -1.000000e+09, float %47, !dbg !59
  %72 = fcmp ogt float %68, %71, !dbg !60
  %73 = fcmp uno float %68, 0.000000e+00, !dbg !62
  %74 = or i1 %72, %73, !dbg !63
  %75 = select i1 %74, float %68, float %71, !dbg !64
  %76 = fsub float %56, %75, !dbg !42
  %77 = fmul float %76, 0x3FF7154760000000, !dbg !65
  %78 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %77) #1, !dbg !65
  %79 = fsub float %57, %75, !dbg !43
  %80 = fmul float %79, 0x3FF7154760000000, !dbg !66
  %81 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %80) #1, !dbg !66
  %82 = fadd float %78, %81, !dbg !67
  %83 = fsub float %64, %75, !dbg !68
  %84 = fmul float %83, 0x3FF7154760000000, !dbg !69
  %85 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %84) #1, !dbg !69
  %86 = fadd float %82, %85, !dbg !70
  %87 = fsub float %71, %75, !dbg !71
  %88 = fmul float %87, 0x3FF7154760000000, !dbg !72
  %89 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %88) #1, !dbg !72
  %90 = fadd float %86, %89, !dbg !73
  %91 = sext i32 %11 to i64, !dbg !74
  %92 = getelementptr float, ptr addrspace(1) %2, i64 %91, !dbg !74
  %93 = icmp eq i32 %9, 0, !dbg !75
  %94 = bitcast float %75 to i32, !dbg !75
  %95 = and i1 %93, %12, !dbg !75
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %94, ptr addrspace(1) %92, i1 %95) #1, !dbg !75
  %96 = getelementptr float, ptr addrspace(1) %3, i64 %91, !dbg !76
  %97 = bitcast float %90 to i32, !dbg !77
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %97, ptr addrspace(1) %96, i1 %95) #1, !dbg !77
  ret void, !dbg !78
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmtozhm7q5lcnrocrirlhrqhrzplpvq4y265l5hvavi5s567upvt.py", directory: "inductor_cache/mt")
!4 = !{ptr @triton_poi_fused__softmax_div_eq_masked_fill_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax_div_eq_masked_fill_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax_div_eq_masked_fill_2", linkageName: "triton_poi_fused__softmax_div_eq_masked_fill_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 32, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 37, scope: !7)
!19 = !DILocation(line: 27, column: 32, scope: !7)
!20 = !DILocation(line: 27, column: 30, scope: !7)
!21 = !DILocation(line: 27, column: 37, scope: !7)
!22 = !DILocation(line: 28, column: 34, scope: !7)
!23 = !DILocation(line: 28, column: 30, scope: !7)
!24 = !DILocation(line: 28, column: 41, scope: !7)
!25 = !DILocation(line: 29, column: 35, scope: !7)
!26 = !DILocation(line: 29, column: 31, scope: !7)
!27 = !DILocation(line: 29, column: 42, scope: !7)
!28 = !DILocation(line: 30, column: 35, scope: !7)
!29 = !DILocation(line: 30, column: 31, scope: !7)
!30 = !DILocation(line: 30, column: 42, scope: !7)
!31 = !DILocation(line: 31, column: 35, scope: !7)
!32 = !DILocation(line: 31, column: 31, scope: !7)
!33 = !DILocation(line: 31, column: 42, scope: !7)
!34 = !DILocation(line: 32, column: 35, scope: !7)
!35 = !DILocation(line: 32, column: 31, scope: !7)
!36 = !DILocation(line: 32, column: 42, scope: !7)
!37 = !DILocation(line: 33, column: 35, scope: !7)
!38 = !DILocation(line: 33, column: 31, scope: !7)
!39 = !DILocation(line: 33, column: 42, scope: !7)
!40 = !DILocation(line: 35, column: 19, scope: !7)
!41 = !DILocation(line: 39, column: 32, scope: !7)
!42 = !DILocation(line: 52, column: 19, scope: !7)
!43 = !DILocation(line: 54, column: 20, scope: !7)
!44 = !DILocation(line: 118, column: 15, scope: !45, inlinedAt: !47)
!45 = distinct !DILexicalBlockFile(scope: !7, file: !46, discriminator: 0)
!46 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!47 = !DILocation(line: 43, column: 41, scope: !7)
!48 = !DILocation(line: 120, column: 21, scope: !45, inlinedAt: !47)
!49 = !DILocation(line: 120, column: 16, scope: !45, inlinedAt: !47)
!50 = !DILocation(line: 121, column: 29, scope: !45, inlinedAt: !47)
!51 = !DILocation(line: 44, column: 21, scope: !7)
!52 = !DILocation(line: 46, column: 34, scope: !7)
!53 = !DILocation(line: 118, column: 15, scope: !45, inlinedAt: !54)
!54 = !DILocation(line: 47, column: 42, scope: !7)
!55 = !DILocation(line: 120, column: 21, scope: !45, inlinedAt: !54)
!56 = !DILocation(line: 120, column: 16, scope: !45, inlinedAt: !54)
!57 = !DILocation(line: 121, column: 29, scope: !45, inlinedAt: !54)
!58 = !DILocation(line: 48, column: 21, scope: !7)
!59 = !DILocation(line: 50, column: 34, scope: !7)
!60 = !DILocation(line: 118, column: 15, scope: !45, inlinedAt: !61)
!61 = !DILocation(line: 51, column: 42, scope: !7)
!62 = !DILocation(line: 120, column: 21, scope: !45, inlinedAt: !61)
!63 = !DILocation(line: 120, column: 16, scope: !45, inlinedAt: !61)
!64 = !DILocation(line: 121, column: 29, scope: !45, inlinedAt: !61)
!65 = !DILocation(line: 53, column: 24, scope: !7)
!66 = !DILocation(line: 55, column: 24, scope: !7)
!67 = !DILocation(line: 56, column: 20, scope: !7)
!68 = !DILocation(line: 57, column: 20, scope: !7)
!69 = !DILocation(line: 58, column: 24, scope: !7)
!70 = !DILocation(line: 59, column: 20, scope: !7)
!71 = !DILocation(line: 60, column: 20, scope: !7)
!72 = !DILocation(line: 61, column: 24, scope: !7)
!73 = !DILocation(line: 62, column: 20, scope: !7)
!74 = !DILocation(line: 63, column: 25, scope: !7)
!75 = !DILocation(line: 63, column: 37, scope: !7)
!76 = !DILocation(line: 64, column: 25, scope: !7)
!77 = !DILocation(line: 64, column: 37, scope: !7)
!78 = !DILocation(line: 64, column: 4, scope: !7)
