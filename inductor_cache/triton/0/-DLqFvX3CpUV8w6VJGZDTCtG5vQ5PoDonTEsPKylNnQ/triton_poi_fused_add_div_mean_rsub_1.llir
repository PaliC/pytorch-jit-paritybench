; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_div_mean_rsub_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #1, !dbg !10
  %5 = bitcast i32 %4 to float, !dbg !10
  %6 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !11
  %7 = bitcast i32 %6 to float, !dbg !11
  %8 = getelementptr i8, ptr addrspace(1) %0, i64 4, !dbg !12
  %9 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %8, i1 true) #1, !dbg !13
  %10 = bitcast i32 %9 to float, !dbg !13
  %11 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !14
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #1, !dbg !15
  %13 = bitcast i32 %12 to float, !dbg !15
  %14 = getelementptr i8, ptr addrspace(1) %0, i64 8, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 true) #1, !dbg !17
  %16 = bitcast i32 %15 to float, !dbg !17
  %17 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !18
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 true) #1, !dbg !19
  %19 = bitcast i32 %18 to float, !dbg !19
  %20 = getelementptr i8, ptr addrspace(1) %0, i64 12, !dbg !20
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !21
  %22 = bitcast i32 %21 to float, !dbg !21
  %23 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !22
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #1, !dbg !23
  %25 = bitcast i32 %24 to float, !dbg !23
  %26 = fadd float %5, 1.000000e+00, !dbg !24
  %27 = fadd float %7, 1.000000e+00, !dbg !25
  %28 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %26, float %27) #1, !dbg !26
  %29 = fsub float 1.000000e+00, %28, !dbg !27
  %30 = fadd float %10, 1.000000e+00, !dbg !28
  %31 = fadd float %13, 1.000000e+00, !dbg !29
  %32 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %30, float %31) #1, !dbg !30
  %33 = fsub float 1.000000e+00, %32, !dbg !31
  %34 = fadd float %29, %33, !dbg !32
  %35 = fadd float %16, 1.000000e+00, !dbg !33
  %36 = fadd float %19, 1.000000e+00, !dbg !34
  %37 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %35, float %36) #1, !dbg !35
  %38 = fsub float 1.000000e+00, %37, !dbg !36
  %39 = fadd float %34, %38, !dbg !37
  %40 = fadd float %22, 1.000000e+00, !dbg !38
  %41 = fadd float %25, 1.000000e+00, !dbg !39
  %42 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %40, float %41) #1, !dbg !40
  %43 = fsub float 1.000000e+00, %42, !dbg !41
  %44 = fadd float %39, %43, !dbg !42
  %45 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %44, float 4.000000e+00) #1, !dbg !43
  %46 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !44
  %47 = and i32 %46, 31, !dbg !44
  %48 = icmp eq i32 %47, 0, !dbg !44
  %49 = bitcast float %45 to i32, !dbg !44
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %49, ptr addrspace(1) %2, i1 %48) #1, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py", directory: "inductor_cache/uv")
!4 = !{ptr @triton_poi_fused_add_div_mean_rsub_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_mean_rsub_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_mean_rsub_1", linkageName: "triton_poi_fused_add_div_mean_rsub_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 19, scope: !7)
!11 = !DILocation(line: 26, column: 19, scope: !7)
!12 = !DILocation(line: 28, column: 30, scope: !7)
!13 = !DILocation(line: 28, column: 19, scope: !7)
!14 = !DILocation(line: 30, column: 31, scope: !7)
!15 = !DILocation(line: 30, column: 20, scope: !7)
!16 = !DILocation(line: 32, column: 31, scope: !7)
!17 = !DILocation(line: 32, column: 20, scope: !7)
!18 = !DILocation(line: 34, column: 31, scope: !7)
!19 = !DILocation(line: 34, column: 20, scope: !7)
!20 = !DILocation(line: 36, column: 31, scope: !7)
!21 = !DILocation(line: 36, column: 20, scope: !7)
!22 = !DILocation(line: 38, column: 31, scope: !7)
!23 = !DILocation(line: 38, column: 20, scope: !7)
!24 = !DILocation(line: 41, column: 18, scope: !7)
!25 = !DILocation(line: 42, column: 18, scope: !7)
!26 = !DILocation(line: 43, column: 18, scope: !7)
!27 = !DILocation(line: 44, column: 18, scope: !7)
!28 = !DILocation(line: 45, column: 20, scope: !7)
!29 = !DILocation(line: 46, column: 20, scope: !7)
!30 = !DILocation(line: 47, column: 20, scope: !7)
!31 = !DILocation(line: 48, column: 19, scope: !7)
!32 = !DILocation(line: 49, column: 19, scope: !7)
!33 = !DILocation(line: 50, column: 20, scope: !7)
!34 = !DILocation(line: 51, column: 20, scope: !7)
!35 = !DILocation(line: 52, column: 20, scope: !7)
!36 = !DILocation(line: 53, column: 19, scope: !7)
!37 = !DILocation(line: 54, column: 20, scope: !7)
!38 = !DILocation(line: 55, column: 20, scope: !7)
!39 = !DILocation(line: 56, column: 20, scope: !7)
!40 = !DILocation(line: 57, column: 20, scope: !7)
!41 = !DILocation(line: 58, column: 19, scope: !7)
!42 = !DILocation(line: 59, column: 20, scope: !7)
!43 = !DILocation(line: 61, column: 20, scope: !7)
!44 = !DILocation(line: 62, column: 65, scope: !7)
!45 = !DILocation(line: 62, column: 4, scope: !7)
