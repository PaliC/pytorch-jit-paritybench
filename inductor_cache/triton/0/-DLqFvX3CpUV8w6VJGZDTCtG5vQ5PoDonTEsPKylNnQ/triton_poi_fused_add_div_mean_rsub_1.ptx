//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_div_mean_rsub_1 // -- Begin function triton_poi_fused_add_div_mean_rsub_1
                                        // @triton_poi_fused_add_div_mean_rsub_1
.visible .entry triton_poi_fused_add_div_mean_rsub_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_rsub_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_rsub_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_rsub_1_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<27>;
	.reg .f32 	%f<29>;
	.reg .b64 	%rd<10>;
	.loc	1 19 0                          // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:19:0

// %bb.0:
	ld.param.u64 	%rd1, [triton_poi_fused_add_div_mean_rsub_1_param_0];
	mov.pred 	%p1, -1;
$L__tmp0:
	.loc	1 24 19                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:24:19
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd2, [triton_poi_fused_add_div_mean_rsub_1_param_1];
	mov.b32 	%f1, %r1;
	ld.param.u64 	%rd9, [triton_poi_fused_add_div_mean_rsub_1_param_2];
	.loc	1 26 19                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:26:19
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r2;
	.loc	1 28 30                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:28:30
	add.s64 	%rd3, %rd1, 4;
	.loc	1 28 19                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:28:19
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r3;
	.loc	1 30 31                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:30:31
	add.s64 	%rd4, %rd2, 4;
	.loc	1 30 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:30:20
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r4;
	.loc	1 32 31                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:32:31
	add.s64 	%rd5, %rd1, 8;
	.loc	1 32 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:32:20
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r5;
	.loc	1 34 31                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:34:31
	add.s64 	%rd6, %rd2, 8;
	.loc	1 34 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:34:20
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r6;
	.loc	1 36 31                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:36:31
	add.s64 	%rd7, %rd1, 12;
	.loc	1 36 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:36:20
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r7;
	.loc	1 38 31                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:38:31
	add.s64 	%rd8, %rd2, 12;
	.loc	1 38 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:38:20
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r8;
	.loc	1 41 18                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:41:18
	add.f32 	%f9, %f1, 0f3F800000;
	.loc	1 42 18                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:42:18
	add.f32 	%f10, %f2, 0f3F800000;
	.loc	1 43 18                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:43:18
	mov.b32 	%r10, %f9;
	mov.b32 	%r11, %f10;
	// begin inline asm
	div.full.f32 %r9, %r10, %r11;
	// end inline asm
	mov.b32 	%f11, %r9;
	mov.f32 	%f12, 0f3F800000;
	.loc	1 44 18                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:44:18
	sub.f32 	%f13, %f12, %f11;
	.loc	1 45 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:45:20
	add.f32 	%f14, %f3, 0f3F800000;
	.loc	1 46 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:46:20
	add.f32 	%f15, %f4, 0f3F800000;
	.loc	1 47 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:47:20
	mov.b32 	%r13, %f14;
	mov.b32 	%r14, %f15;
	// begin inline asm
	div.full.f32 %r12, %r13, %r14;
	// end inline asm
	mov.b32 	%f16, %r12;
	.loc	1 48 19                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:48:19
	sub.f32 	%f17, %f12, %f16;
	.loc	1 49 19                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:49:19
	add.f32 	%f18, %f13, %f17;
	.loc	1 50 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:50:20
	add.f32 	%f19, %f5, 0f3F800000;
	.loc	1 51 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:51:20
	add.f32 	%f20, %f6, 0f3F800000;
	.loc	1 52 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:52:20
	mov.b32 	%r16, %f19;
	mov.b32 	%r17, %f20;
	// begin inline asm
	div.full.f32 %r15, %r16, %r17;
	// end inline asm
	mov.b32 	%f21, %r15;
	.loc	1 53 19                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:53:19
	sub.f32 	%f22, %f12, %f21;
	.loc	1 54 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:54:20
	add.f32 	%f23, %f18, %f22;
	.loc	1 55 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:55:20
	add.f32 	%f24, %f7, 0f3F800000;
	.loc	1 56 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:56:20
	add.f32 	%f25, %f8, 0f3F800000;
	.loc	1 57 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:57:20
	mov.b32 	%r19, %f24;
	mov.b32 	%r20, %f25;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f26, %r18;
	.loc	1 58 19                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:58:19
	sub.f32 	%f27, %f12, %f26;
	.loc	1 59 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:59:20
	add.f32 	%f28, %f23, %f27;
	.loc	1 61 20                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:61:20
	mov.b32 	%r22, %f28;
	mov.b32 	%r23, 1082130432;
	// begin inline asm
	div.full.f32 %r24, %r22, %r23;
	// end inline asm
	.loc	1 62 65                         // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:62:65
	mov.u32 	%r25, %tid.x;
	and.b32  	%r26, %r25, 31;
	setp.eq.s32 	%p9, %r26, 0;
	// begin inline asm
	@%p9 st.global.b32 [ %rd9 + 0 ], { %r24 };
	// end inline asm
	.loc	1 62 4                          // cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py:62:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/uv/cuvjd2ni3ux6kov6kzjmgip6qalcsjjs6h5uafknbjtargrp2sca.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 118
.b8 106
.b8 100
.b8 50
.b8 110
.b8 105
.b8 51
.b8 117
.b8 120
.b8 54
.b8 107
.b8 111
.b8 118
.b8 54
.b8 107
.b8 122
.b8 106
.b8 109
.b8 103
.b8 105
.b8 112
.b8 54
.b8 113
.b8 97
.b8 108
.b8 99
.b8 115
.b8 106
.b8 106
.b8 115
.b8 54
.b8 104
.b8 53
.b8 117
.b8 97
.b8 102
.b8 107
.b8 110
.b8 98
.b8 106
.b8 116
.b8 97
.b8 114
.b8 103
.b8 114
.b8 112
.b8 50
.b8 115
.b8 99
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 118
.b8 0
	}
	.section	.debug_macinfo	{	}
