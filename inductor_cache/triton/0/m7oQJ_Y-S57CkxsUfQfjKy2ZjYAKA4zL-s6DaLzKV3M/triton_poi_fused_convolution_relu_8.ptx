//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_relu_8 // -- Begin function triton_poi_fused_convolution_relu_8
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_relu_8
.visible .entry triton_poi_fused_convolution_relu_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_8_param_2,
	.param .u32 triton_poi_fused_convolution_relu_8_param_3,
	.param .u32 triton_poi_fused_convolution_relu_8_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<63>;
	.reg .b32 	%r<175>;
	.reg .f32 	%f<53>;
	.reg .b64 	%rd<40>;
	.loc	1 19 0                          // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:19:0

// %bb.0:
	ld.param.u64 	%rd25, [triton_poi_fused_convolution_relu_8_param_0];
	ld.param.u64 	%rd26, [triton_poi_fused_convolution_relu_8_param_1];
$L__tmp0:
	.loc	1 22 28                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:22:33
	shl.b32 	%r83, %r1, 6;
	ld.param.u64 	%rd27, [triton_poi_fused_convolution_relu_8_param_2];
	.loc	1 23 44                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:23:44
	mov.u32 	%r84, %tid.x;
	bfe.u32 	%r85, %r84, 4, 4;
	or.b32  	%r86, %r85, 16;
	or.b32  	%r87, %r85, 32;
	or.b32  	%r88, %r85, 48;
	shl.b32 	%r89, %r84, 2;
	and.b32  	%r90, %r89, 60;
	.loc	1 23 23                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:23:23
	or.b32  	%r91, %r83, %r85;
	or.b32  	%r92, %r83, %r86;
	or.b32  	%r93, %r83, %r87;
	or.b32  	%r94, %r83, %r88;
	or.b32  	%r95, %r83, %r90;
	.loc	1 24 21                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:24:21
	setp.lt.s32 	%p5, %r91, 256;
	setp.lt.s32 	%p9, %r92, 256;
	setp.lt.s32 	%p13, %r93, 256;
	setp.lt.s32 	%p17, %r94, 256;
	setp.lt.s32 	%p41, %r95, 256;
	.loc	1 25 28                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:25:33
	shl.b32 	%r96, %r2, 6;
	.loc	1 26 23                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:26:23
	or.b32  	%r97, %r96, %r90;
	or.b32  	%r98, %r96, %r85;
	or.b32  	%r99, %r96, %r86;
	or.b32  	%r100, %r96, %r87;
	or.b32  	%r101, %r96, %r88;
	.loc	1 27 21                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:27:21
	setp.lt.s32 	%p42, %r97, 68644;
	setp.lt.s32 	%p43, %r98, 68644;
	setp.lt.s32 	%p44, %r99, 68644;
	setp.lt.s32 	%p45, %r100, 68644;
	setp.lt.s32 	%p46, %r101, 68644;
	.loc	1 30 19                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:30:19
	bfe.s32 	%r102, %r1, 25, 1;
	shr.u32 	%r103, %r102, 26;
	add.s32 	%r104, %r91, %r103;
	and.b32  	%r105, %r104, -64;
	sub.s32 	%r106, %r91, %r105;
	add.s32 	%r107, %r92, %r103;
	and.b32  	%r108, %r107, -64;
	sub.s32 	%r109, %r92, %r108;
	add.s32 	%r110, %r93, %r103;
	and.b32  	%r111, %r110, -64;
	sub.s32 	%r112, %r93, %r111;
	add.s32 	%r113, %r94, %r103;
	and.b32  	%r114, %r113, -64;
	sub.s32 	%r115, %r94, %r114;
	.loc	1 31 19                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:31:19
	shr.s32 	%r117, %r95, 31;
	shr.u32 	%r118, %r117, 26;
	add.s32 	%r119, %r95, %r118;
	shr.s32 	%r120, %r119, 6;
	.loc	1 30 19                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:30:19
	and.b32  	%r121, %r119, -64;
	sub.s32 	%r122, %r95, %r121;
	.loc	1 32 35                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:32:35
	mad.lo.s32 	%r123, %r91, 68644, %r97;
	mad.lo.s32 	%r124, %r92, 68644, %r97;
	mad.lo.s32 	%r125, %r93, 68644, %r97;
	mad.lo.s32 	%r126, %r94, 68644, %r97;
	.loc	1 32 30                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:32:30
	mul.wide.s32 	%rd28, %r123, 4;
	add.s64 	%rd1, %rd25, %rd28;
	mul.wide.s32 	%rd29, %r124, 4;
	add.s64 	%rd2, %rd25, %rd29;
	mul.wide.s32 	%rd30, %r125, 4;
	add.s64 	%rd3, %rd25, %rd30;
	mul.wide.s32 	%rd31, %r126, 4;
	add.s64 	%rd4, %rd25, %rd31;
	.loc	1 32 54                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:32:54
	and.pred  	%p1, %p5, %p42;
	and.pred  	%p2, %p9, %p42;
	and.pred  	%p3, %p13, %p42;
	and.pred  	%p4, %p17, %p42;
	and.pred  	%p37, %p41, %p43;
	and.pred  	%p38, %p41, %p44;
	and.pred  	%p39, %p41, %p45;
	and.pred  	%p40, %p41, %p46;
	.loc	1 32 46                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:32:46
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:33:30
	mul.wide.s32 	%rd32, %r106, 4;
	add.s64 	%rd5, %rd26, %rd32;
	mul.wide.s32 	%rd33, %r109, 4;
	add.s64 	%rd9, %rd26, %rd33;
	mul.wide.s32 	%rd34, %r112, 4;
	add.s64 	%rd13, %rd26, %rd34;
	mul.wide.s32 	%rd35, %r115, 4;
	add.s64 	%rd17, %rd26, %rd35;
	.loc	1 33 35                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:33:35
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r19 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r20 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r21 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r22 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r23 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r24 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r25 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r26 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r27 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r28 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r29 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r30 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r31 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r32 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r33 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r34 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 32 46                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:32:46
	mov.b32 	%f1, %r18;
	mov.b32 	%f2, %r17;
	mov.b32 	%f3, %r16;
	mov.b32 	%f4, %r15;
	mov.b32 	%f5, %r14;
	mov.b32 	%f6, %r13;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r11;
	mov.b32 	%f9, %r10;
	mov.b32 	%f10, %r9;
	mov.b32 	%f11, %r8;
	mov.b32 	%f12, %r7;
	mov.b32 	%f13, %r6;
	mov.b32 	%f14, %r5;
	mov.b32 	%f15, %r4;
	mov.b32 	%f16, %r3;
	.loc	1 33 35                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:33:35
	mov.b32 	%f17, %r34;
	mov.b32 	%f18, %r30;
	mov.b32 	%f19, %r26;
	mov.b32 	%f20, %r22;
	.loc	1 34 18                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:34:18
	add.f32 	%f21, %f20, %f16;
	add.f32 	%f22, %f20, %f15;
	add.f32 	%f23, %f20, %f14;
	add.f32 	%f24, %f20, %f13;
	add.f32 	%f25, %f19, %f12;
	add.f32 	%f26, %f19, %f11;
	add.f32 	%f27, %f19, %f10;
	add.f32 	%f28, %f19, %f9;
	add.f32 	%f29, %f18, %f8;
	add.f32 	%f30, %f18, %f7;
	add.f32 	%f31, %f18, %f6;
	add.f32 	%f32, %f18, %f5;
	add.f32 	%f33, %f17, %f4;
	add.f32 	%f34, %f17, %f3;
	add.f32 	%f35, %f17, %f2;
	add.f32 	%f36, %f17, %f1;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p47, %f36, 0f00000000;
	setp.lt.f32 	%p48, %f35, 0f00000000;
	setp.lt.f32 	%p49, %f34, 0f00000000;
	setp.lt.f32 	%p50, %f33, 0f00000000;
	setp.lt.f32 	%p51, %f32, 0f00000000;
	setp.lt.f32 	%p52, %f31, 0f00000000;
	setp.lt.f32 	%p53, %f30, 0f00000000;
	setp.lt.f32 	%p54, %f29, 0f00000000;
	setp.lt.f32 	%p55, %f28, 0f00000000;
	setp.lt.f32 	%p56, %f27, 0f00000000;
	setp.lt.f32 	%p57, %f26, 0f00000000;
	setp.lt.f32 	%p58, %f25, 0f00000000;
	setp.lt.f32 	%p59, %f24, 0f00000000;
	setp.lt.f32 	%p60, %f23, 0f00000000;
	setp.lt.f32 	%p61, %f22, 0f00000000;
	setp.lt.f32 	%p62, %f21, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f37, 0f00000000, %f21, %p62;
	selp.f32 	%f38, 0f00000000, %f22, %p61;
	selp.f32 	%f39, 0f00000000, %f23, %p60;
	selp.f32 	%f40, 0f00000000, %f24, %p59;
	selp.f32 	%f41, 0f00000000, %f25, %p58;
	selp.f32 	%f42, 0f00000000, %f26, %p57;
	selp.f32 	%f43, 0f00000000, %f27, %p56;
	selp.f32 	%f44, 0f00000000, %f28, %p55;
	selp.f32 	%f45, 0f00000000, %f29, %p54;
	selp.f32 	%f46, 0f00000000, %f30, %p53;
	selp.f32 	%f47, 0f00000000, %f31, %p52;
	selp.f32 	%f48, 0f00000000, %f32, %p51;
	selp.f32 	%f49, 0f00000000, %f33, %p50;
	selp.f32 	%f50, 0f00000000, %f34, %p49;
	selp.f32 	%f51, 0f00000000, %f35, %p48;
	selp.f32 	%f52, 0f00000000, %f36, %p47;
$L__tmp2:
	.loc	1 37 33                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:37:33
	shl.b32 	%r127, %r98, 6;
	shl.b32 	%r128, %r99, 6;
	shl.b32 	%r129, %r100, 6;
	shl.b32 	%r130, %r101, 6;
	.loc	1 37 30                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:37:30
	mad.lo.s32 	%r131, %r120, 4393216, %r122;
	.loc	1 37 38                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:37:38
	add.s32 	%r132, %r131, %r127;
	add.s32 	%r133, %r131, %r128;
	add.s32 	%r134, %r131, %r129;
	add.s32 	%r135, %r131, %r130;
	.loc	1 37 25                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:37:25
	mul.wide.s32 	%rd36, %r132, 4;
	add.s64 	%rd21, %rd27, %rd36;
	mul.wide.s32 	%rd37, %r133, 4;
	add.s64 	%rd22, %rd27, %rd37;
	mul.wide.s32 	%rd38, %r134, 4;
	add.s64 	%rd23, %rd27, %rd38;
	mul.wide.s32 	%rd39, %r135, 4;
	add.s64 	%rd24, %rd27, %rd39;
	.loc	1 37 57                         // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:37:57
	shl.b32 	%r136, %r84, 8;
	and.b32  	%r137, %r136, 3840;
	or.b32  	%r138, %r137, %r85;
	and.b32  	%r139, %r89, 1020;
	shr.u32 	%r140, %r137, 2;
	mov.u32 	%r141, global_smem;
	add.s32 	%r142, %r141, %r140;
	shl.b32 	%r143, %r138, 2;
	add.s32 	%r35, %r142, %r143;
	mov.b32 	%r36, %f37;
	mov.pred 	%p21, -1;
	// begin inline asm
	@%p21 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	or.b32  	%r144, %r137, 64;
	shr.u32 	%r145, %r144, 2;
	add.s32 	%r146, %r141, %r145;
	add.s32 	%r147, %r146, %r143;
	add.s32 	%r37, %r147, 256;
	mov.b32 	%r38, %f38;
	// begin inline asm
	@%p21 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	or.b32  	%r148, %r137, 128;
	shr.u32 	%r149, %r148, 2;
	add.s32 	%r150, %r141, %r149;
	add.s32 	%r151, %r150, %r143;
	add.s32 	%r39, %r151, 512;
	mov.b32 	%r40, %f39;
	// begin inline asm
	@%p21 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	or.b32  	%r152, %r137, 192;
	shr.u32 	%r153, %r152, 2;
	add.s32 	%r154, %r141, %r153;
	add.s32 	%r155, %r154, %r143;
	add.s32 	%r41, %r155, 768;
	mov.b32 	%r42, %f40;
	// begin inline asm
	@%p21 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r35, 64;
	mov.b32 	%r44, %f41;
	// begin inline asm
	@%p21 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r147, 320;
	mov.b32 	%r46, %f42;
	// begin inline asm
	@%p21 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r151, 576;
	mov.b32 	%r48, %f43;
	// begin inline asm
	@%p21 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r155, 832;
	mov.b32 	%r50, %f44;
	// begin inline asm
	@%p21 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	add.s32 	%r51, %r35, 128;
	mov.b32 	%r52, %f45;
	// begin inline asm
	@%p21 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	add.s32 	%r53, %r147, 384;
	mov.b32 	%r54, %f46;
	// begin inline asm
	@%p21 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	add.s32 	%r55, %r151, 640;
	mov.b32 	%r56, %f47;
	// begin inline asm
	@%p21 st.shared.b32 [ %r55 + 0 ], %r56;
	// end inline asm
	add.s32 	%r57, %r155, 896;
	mov.b32 	%r58, %f48;
	// begin inline asm
	@%p21 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	add.s32 	%r59, %r35, 192;
	mov.b32 	%r60, %f49;
	// begin inline asm
	@%p21 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	add.s32 	%r61, %r147, 448;
	mov.b32 	%r62, %f50;
	// begin inline asm
	@%p21 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	add.s32 	%r63, %r151, 704;
	mov.b32 	%r64, %f51;
	// begin inline asm
	@%p21 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	add.s32 	%r65, %r155, 960;
	mov.b32 	%r66, %f52;
	// begin inline asm
	@%p21 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r156, %r84, 240;
	add.s32 	%r157, %r141, %r156;
	shl.b32 	%r158, %r139, 2;
	add.s32 	%r159, %r157, %r158;
	or.b32  	%r160, %r139, 1024;
	shr.u32 	%r161, %r160, 2;
	and.b32  	%r162, %r161, 496;
	add.s32 	%r163, %r141, %r162;
	add.s32 	%r164, %r163, %r158;
	ld.shared.v4.u32 	{%r71, %r72, %r73, %r74}, [%r164+4096];
	or.b32  	%r165, %r139, 2048;
	shr.u32 	%r166, %r165, 2;
	and.b32  	%r167, %r166, 752;
	add.s32 	%r168, %r141, %r167;
	add.s32 	%r169, %r168, %r158;
	ld.shared.v4.u32 	{%r75, %r76, %r77, %r78}, [%r169+8192];
	or.b32  	%r170, %r139, 3072;
	shr.u32 	%r171, %r170, 2;
	and.b32  	%r172, %r171, 1008;
	add.s32 	%r173, %r141, %r172;
	add.s32 	%r174, %r173, %r158;
	ld.shared.v4.u32 	{%r79, %r80, %r81, %r82}, [%r174+12288];
	ld.shared.v4.u32 	{%r67, %r68, %r69, %r70}, [%r159];
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd21 + 0 ], { %r67, %r68, %r69, %r70 };
	// end inline asm
	// begin inline asm
	@%p38 st.global.v4.b32 [ %rd22 + 0 ], { %r71, %r72, %r73, %r74 };
	// end inline asm
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd23 + 0 ], { %r75, %r76, %r77, %r78 };
	// end inline asm
	// begin inline asm
	@%p40 st.global.v4.b32 [ %rd24 + 0 ], { %r79, %r80, %r81, %r82 };
	// end inline asm
	.loc	1 37 4                          // cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py:37:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qt/cqtrultqaifjqwzybqeeblejpj2dsuwtj2a2sktuja2xhg5rua3k.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 180                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xad DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 116
.b8 114
.b8 117
.b8 108
.b8 116
.b8 113
.b8 97
.b8 105
.b8 102
.b8 106
.b8 113
.b8 119
.b8 122
.b8 121
.b8 98
.b8 113
.b8 101
.b8 101
.b8 98
.b8 108
.b8 101
.b8 106
.b8 112
.b8 106
.b8 50
.b8 100
.b8 115
.b8 117
.b8 119
.b8 116
.b8 106
.b8 50
.b8 97
.b8 50
.b8 115
.b8 107
.b8 116
.b8 117
.b8 106
.b8 97
.b8 50
.b8 120
.b8 104
.b8 103
.b8 53
.b8 114
.b8 117
.b8 97
.b8 51
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
