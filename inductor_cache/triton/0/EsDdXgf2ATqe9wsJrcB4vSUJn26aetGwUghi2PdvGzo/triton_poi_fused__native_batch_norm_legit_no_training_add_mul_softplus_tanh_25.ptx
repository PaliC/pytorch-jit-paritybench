//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<33>;
	.reg .f32 	%f<79>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd9, [triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_1];
$L__tmp0:
	.loc	1 21 28                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:21:28
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:21:33
	shl.b32 	%r13, %r3, 7;
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_2];
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_3];
	.loc	1 22 36                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:22:36
	mov.u32 	%r14, %tid.x;
	and.b32  	%r15, %r14, 127;
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_4];
	.loc	1 22 23                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:22:23
	or.b32  	%r16, %r13, %r15;
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_5];
	.loc	1 25 19                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:25:19
	bfe.s32 	%r17, %r3, 24, 1;
	shr.u32 	%r18, %r17, 25;
	add.s32 	%r19, %r16, %r18;
	and.b32  	%r20, %r19, -128;
	sub.s32 	%r21, %r16, %r20;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_6];
	.loc	1 26 30                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:26:30
	mul.wide.s32 	%rd15, %r16, 4;
	add.s64 	%rd3, %rd9, %rd15;
	mov.pred 	%p1, -1;
	.loc	1 26 35                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:26:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r4;
	.loc	1 27 30                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:27:30
	mul.wide.s32 	%rd16, %r21, 4;
	add.s64 	%rd4, %rd10, %rd16;
	.loc	1 27 35                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:27:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r5;
	.loc	1 28 30                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:28:30
	add.s64 	%rd5, %rd11, %rd16;
	.loc	1 28 35                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:28:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r6;
	.loc	1 29 31                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:29:31
	add.s64 	%rd6, %rd12, %rd16;
	.loc	1 29 36                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:29:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r7;
	.loc	1 30 31                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:30:31
	add.s64 	%rd7, %rd13, %rd16;
	.loc	1 30 36                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:30:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r8;
	.loc	1 31 31                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:31:31
	add.s64 	%rd8, %rd14, %rd15;
	.loc	1 31 36                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:31:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 32 18                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:32:18
	sub.f32 	%f20, %f15, %f16;
	.loc	1 34 18                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:34:18
	add.f32 	%f21, %f17, 0f3727C5AC;
	.loc	1 35 26                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:35:26
	sqrt.approx.ftz.f32 	%f22, %f21;
	.loc	1 37 18                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:37:18
	mov.b32 	%r12, %f22;
	mov.b32 	%r11, 1065353216;
	// begin inline asm
	div.full.f32 %r10, %r11, %r12;
	// end inline asm
	mov.b32 	%f23, %r10;
	.loc	1 40 19                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:40:19
	mul.f32 	%f24, %f20, %f23;
	.loc	1 42 20                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:42:20
	fma.rn.f32 	%f1, %f24, %f18, %f19;
	.loc	1 45 24                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:45:24
	mul.f32 	%f14, %f1, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mov.f32 	%f25, 0f3F800000;
	.loc	1 46 28                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:46:28
	add.rz.ftz.f32 	%f26, %f13, %f25;
	mov.b32 	%r22, %f26;
	add.s32 	%r23, %r22, -1061158912;
	and.b32  	%r24, %r23, -8388608;
	mov.b32 	%r2, %f13;
	sub.s32 	%r25, %r2, %r24;
	mov.b32 	%f27, %r25;
	mov.b32 	%r26, 1082130432;
	sub.s32 	%r27, %r26, %r24;
	mov.b32 	%f28, %r27;
	mov.f32 	%f29, 0fBF800000;
	mov.f32 	%f30, 0f3E800000;
	fma.rn.ftz.f32 	%f31, %f30, %f28, %f29;
	add.f32 	%f32, %f31, %f27;
	cvt.rn.f32.s32 	%f33, %r24;
	mul.f32 	%f34, %f33, 0f34000000;
	mov.f32 	%f35, 0f3DD80012;
	mov.f32 	%f36, 0fBD39BF78;
	fma.rn.ftz.f32 	%f37, %f36, %f32, %f35;
	mov.f32 	%f38, 0fBE0778E0;
	fma.rn.ftz.f32 	%f39, %f37, %f32, %f38;
	mov.f32 	%f40, 0f3E146475;
	fma.rn.ftz.f32 	%f41, %f39, %f32, %f40;
	mov.f32 	%f42, 0fBE2A68DD;
	fma.rn.ftz.f32 	%f43, %f41, %f32, %f42;
	mov.f32 	%f44, 0f3E4CAF9E;
	fma.rn.ftz.f32 	%f45, %f43, %f32, %f44;
	mov.f32 	%f46, 0fBE800042;
	fma.rn.ftz.f32 	%f47, %f45, %f32, %f46;
	mov.f32 	%f48, 0f3EAAAAE6;
	fma.rn.ftz.f32 	%f49, %f47, %f32, %f48;
	mov.f32 	%f50, 0fBF000000;
	fma.rn.ftz.f32 	%f51, %f49, %f32, %f50;
	mul.f32 	%f52, %f32, %f51;
	fma.rn.ftz.f32 	%f53, %f52, %f32, %f32;
	mov.f32 	%f54, 0f3F317218;
	fma.rn.ftz.f32 	%f77, %f34, %f54, %f53;
	setp.lt.u32 	%p7, %r2, 2139095040;
	@%p7 bra 	$L__BB0_4;
// %bb.1:
	setp.lt.s32 	%p8, %r2, -1082130431;
	@%p8 bra 	$L__BB0_3;
// %bb.2:                               // %__nv_fmaf_rn.exit.i
	.loc	1 0 28                          // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:0:28
	mov.f32 	%f55, 0f7F800000;
	fma.rn.ftz.f32 	%f77, %f13, %f55, %f55;
$L__BB0_3:
	.loc	1 46 28                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:46:28
	setp.eq.f32 	%p9, %f13, 0f00000000;
	selp.f32 	%f77, 0f80000000, %f77, %p9;
$L__BB0_4:                              // %__nv_log1pf.exit
	.loc	1 0 28                          // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:0:28
	ld.param.u64 	%rd2, [triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_25_param_0];
	cvt.s64.s32 	%rd1, %r16;
	.loc	1 44 20                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:44:20
	setp.gt.f32 	%p10, %f1, 0f41A00000;
	.loc	1 47 35                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:47:35
	selp.f32 	%f8, %f1, %f77, %p10;
	.loc	1 48 27                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:48:27
	abs.ftz.f32 	%f9, %f8;
	setp.ltu.f32 	%p11, %f9, 0f3F19999A;
	@%p11 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_5;
$L__BB0_6:                              // %__internal_fmad.exit3.i
	mul.f32 	%f64, %f8, %f8;
	mov.f32 	%f65, 0fBD563CAE;
	mov.f32 	%f66, 0f3C80F082;
	fma.rn.ftz.f32 	%f67, %f66, %f64, %f65;
	mov.f32 	%f68, 0f3E085941;
	fma.rn.ftz.f32 	%f69, %f67, %f64, %f68;
	mov.f32 	%f70, 0fBEAAA9ED;
	fma.rn.ftz.f32 	%f71, %f69, %f64, %f70;
	mov.f32 	%f72, 0f00000000;
	fma.rn.ftz.f32 	%f73, %f71, %f64, %f72;
	fma.rn.ftz.f32 	%f78, %f73, %f8, %f8;
	bra.uni 	$L__BB0_7;
$L__BB0_5:                              // %__internal_fmad.exit1.i
	mul.f32 	%f58, %f9, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f59, %f58;
	add.f32 	%f57, %f59, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f56,%f57;
	// end inline asm
	mov.f32 	%f61, 0fC0000000;
	fma.rn.ftz.f32 	%f62, %f56, %f61, %f25;
	setp.ge.f32 	%p12, %f9, 0f41102CB4;
	selp.f32 	%f63, 0f3F800000, %f62, %p12;
	mov.b32 	%r28, %f63;
	mov.b32 	%r29, %f8;
	and.b32  	%r30, %r29, -2147483648;
	or.b32  	%r31, %r30, %r28;
	mov.b32 	%f78, %r31;
$L__BB0_7:                              // %__nv_tanhf.exit
	.loc	1 31 36                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:31:36
	mov.b32 	%f74, %r9;
	.loc	1 50 20                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:50:20
	fma.rn.f32 	%f75, %f1, %f78, %f74;
	.loc	1 51 28                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:51:28
	shl.b64 	%rd18, %rd1, 2;
	add.s64 	%rd17, %rd2, %rd18;
	.loc	1 51 40                         // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:51:40
	mov.b32 	%r32, %f75;
	// begin inline asm
	@%p1 st.global.b32 [ %rd17 + 0 ], { %r32 };
	// end inline asm
	.loc	1 51 4                          // ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py:51:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/cg/ccg2tzzzxjocpxp7yfhdrxcyunp7elln2dady6mirt7lbbqlu4tx.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 103
.b8 50
.b8 116
.b8 122
.b8 122
.b8 122
.b8 120
.b8 106
.b8 111
.b8 99
.b8 112
.b8 120
.b8 112
.b8 55
.b8 121
.b8 102
.b8 104
.b8 100
.b8 114
.b8 120
.b8 99
.b8 121
.b8 117
.b8 110
.b8 112
.b8 55
.b8 101
.b8 108
.b8 108
.b8 110
.b8 50
.b8 100
.b8 97
.b8 100
.b8 121
.b8 54
.b8 109
.b8 105
.b8 114
.b8 116
.b8 55
.b8 108
.b8 98
.b8 98
.b8 113
.b8 108
.b8 117
.b8 52
.b8 116
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 103
.b8 0
	}
	.section	.debug_macinfo	{	}
