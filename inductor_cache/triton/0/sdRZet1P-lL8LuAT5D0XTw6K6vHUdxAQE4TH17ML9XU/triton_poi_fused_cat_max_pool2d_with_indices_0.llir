; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_max_pool2d_with_indices_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %11 = sdiv i32 %9, 4, !dbg !15
  %.frozen = freeze i32 %9, !dbg !16
  %12 = sdiv i32 %.frozen, 64, !dbg !16
  %13 = mul i32 %12, 64, !dbg !17
  %.decomposed = sub i32 %.frozen, %13, !dbg !17
  %14 = sext i32 %9 to i64, !dbg !18
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !18
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 %10) #1, !dbg !19
  %17 = add i32 %9, -10, !dbg !20
  %18 = sext i32 %17 to i64, !dbg !21
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !21
  %20 = add i32 %9, -9, !dbg !22
  %21 = sext i32 %20 to i64, !dbg !23
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !23
  %23 = add i32 %9, -8, !dbg !24
  %24 = sext i32 %23 to i64, !dbg !25
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !25
  %26 = add i32 %9, -7, !dbg !26
  %27 = sext i32 %26 to i64, !dbg !27
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !27
  %29 = add i32 %9, -6, !dbg !28
  %30 = sext i32 %29 to i64, !dbg !29
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !29
  %32 = add i32 %9, -5, !dbg !30
  %33 = sext i32 %32 to i64, !dbg !31
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !31
  %35 = add i32 %9, -4, !dbg !32
  %36 = sext i32 %35 to i64, !dbg !33
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !33
  %38 = add i32 %9, -3, !dbg !34
  %39 = sext i32 %38 to i64, !dbg !35
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !35
  %41 = add i32 %9, -2, !dbg !36
  %42 = sext i32 %41 to i64, !dbg !37
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !37
  %44 = add i32 %9, -1, !dbg !38
  %45 = sext i32 %44 to i64, !dbg !39
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !39
  %47 = add i32 %9, 1, !dbg !40
  %48 = sext i32 %47 to i64, !dbg !41
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !41
  %50 = add i32 %9, 2, !dbg !42
  %51 = sext i32 %50 to i64, !dbg !43
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !43
  %53 = add i32 %9, 3, !dbg !44
  %54 = sext i32 %53 to i64, !dbg !45
  %55 = getelementptr float, ptr addrspace(1) %0, i64 %54, !dbg !45
  %56 = add i32 %9, 4, !dbg !46
  %57 = sext i32 %56 to i64, !dbg !47
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !47
  %59 = add i32 %9, 5, !dbg !48
  %60 = sext i32 %59 to i64, !dbg !49
  %61 = getelementptr float, ptr addrspace(1) %0, i64 %60, !dbg !49
  %62 = add i32 %9, 6, !dbg !50
  %63 = sext i32 %62 to i64, !dbg !51
  %64 = getelementptr float, ptr addrspace(1) %0, i64 %63, !dbg !51
  %65 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !52
  %66 = insertelement <2 x i32> %65, i32 %9, i64 1, !dbg !52
  %67 = srem <2 x i32> %66, splat (i32 4), !dbg !52
  %68 = extractelement <2 x i32> %67, i64 0, !dbg !53
  %69 = icmp sgt i32 %68, 1, !dbg !54
  %70 = extractelement <2 x i32> %67, i64 1, !dbg !55
  %71 = icmp sgt i32 %70, 1, !dbg !56
  %72 = and i1 %71, %69, !dbg !57
  %73 = and i1 %10, %72, !dbg !58
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %73, i32 -8388608, i1 %73) #1, !dbg !59
  %75 = bitcast i32 %74 to float, !dbg !59
  %76 = icmp sgt i32 %70, 0, !dbg !60
  %77 = and i1 %76, %69, !dbg !61
  %78 = and i1 %10, %77, !dbg !62
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %78, i32 -8388608, i1 %78) #1, !dbg !63
  %80 = bitcast i32 %79 to float, !dbg !63
  %81 = fcmp ogt float %80, %75, !dbg !64
  %82 = fcmp uno float %80, 0.000000e+00, !dbg !68
  %83 = or i1 %81, %82, !dbg !69
  %84 = select i1 %83, float %80, float %75, !dbg !70
  %85 = icmp sgt i32 %70, -1, !dbg !71
  %86 = and i1 %85, %69, !dbg !72
  %87 = and i1 %10, %86, !dbg !73
  %88 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %87, i32 -8388608, i1 %87) #1, !dbg !74
  %89 = bitcast i32 %88 to float, !dbg !74
  %90 = fcmp olt float %84, %89, !dbg !75
  %91 = fcmp uno float %89, 0.000000e+00, !dbg !77
  %92 = or i1 %91, %90, !dbg !78
  %93 = select i1 %92, float %89, float %84, !dbg !79
  %94 = add nsw i32 %70, 1, !dbg !80
  %95 = icmp ult i32 %94, 4, !dbg !80
  %96 = and i1 %69, %95, !dbg !81
  %97 = and i1 %10, %96, !dbg !82
  %98 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %97, i32 -8388608, i1 %97) #1, !dbg !83
  %99 = bitcast i32 %98 to float, !dbg !83
  %100 = fcmp olt float %93, %99, !dbg !84
  %101 = fcmp uno float %99, 0.000000e+00, !dbg !86
  %102 = or i1 %101, %100, !dbg !87
  %103 = select i1 %102, float %99, float %93, !dbg !88
  %104 = add nsw <2 x i32> %67, splat (i32 2), !dbg !89
  %105 = extractelement <2 x i32> %104, i64 1, !dbg !90
  %106 = icmp ult i32 %105, 4, !dbg !91
  %107 = and i1 %69, %106, !dbg !92
  %108 = and i1 %10, %107, !dbg !93
  %109 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %108, i32 -8388608, i1 %108) #1, !dbg !94
  %110 = bitcast i32 %109 to float, !dbg !94
  %111 = fcmp olt float %103, %110, !dbg !95
  %112 = fcmp uno float %110, 0.000000e+00, !dbg !97
  %113 = or i1 %112, %111, !dbg !98
  %114 = select i1 %113, float %110, float %103, !dbg !99
  %115 = icmp sgt i32 %68, 0, !dbg !100
  %116 = and i1 %71, %115, !dbg !101
  %117 = and i1 %10, %116, !dbg !102
  %118 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %117, i32 -8388608, i1 %117) #1, !dbg !103
  %119 = bitcast i32 %118 to float, !dbg !103
  %120 = fcmp olt float %114, %119, !dbg !104
  %121 = fcmp uno float %119, 0.000000e+00, !dbg !106
  %122 = or i1 %121, %120, !dbg !107
  %123 = select i1 %122, float %119, float %114, !dbg !108
  %124 = and i1 %76, %115, !dbg !109
  %125 = and i1 %10, %124, !dbg !110
  %126 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %34, i1 %125, i32 -8388608, i1 %125) #1, !dbg !111
  %127 = bitcast i32 %126 to float, !dbg !111
  %128 = fcmp olt float %123, %127, !dbg !112
  %129 = fcmp uno float %127, 0.000000e+00, !dbg !114
  %130 = or i1 %129, %128, !dbg !115
  %131 = select i1 %130, float %127, float %123, !dbg !116
  %132 = and i1 %85, %115, !dbg !117
  %133 = and i1 %10, %132, !dbg !118
  %134 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %133, i32 -8388608, i1 %133) #1, !dbg !119
  %135 = bitcast i32 %134 to float, !dbg !119
  %136 = fcmp olt float %131, %135, !dbg !120
  %137 = fcmp uno float %135, 0.000000e+00, !dbg !122
  %138 = or i1 %137, %136, !dbg !123
  %139 = select i1 %138, float %135, float %131, !dbg !124
  %140 = and i1 %115, %95, !dbg !125
  %141 = and i1 %10, %140, !dbg !126
  %142 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %141, i32 -8388608, i1 %141) #1, !dbg !127
  %143 = bitcast i32 %142 to float, !dbg !127
  %144 = fcmp olt float %139, %143, !dbg !128
  %145 = fcmp uno float %143, 0.000000e+00, !dbg !130
  %146 = or i1 %145, %144, !dbg !131
  %147 = select i1 %146, float %143, float %139, !dbg !132
  %148 = and i1 %115, %106, !dbg !133
  %149 = and i1 %10, %148, !dbg !134
  %150 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %43, i1 %149, i32 -8388608, i1 %149) #1, !dbg !135
  %151 = bitcast i32 %150 to float, !dbg !135
  %152 = fcmp olt float %147, %151, !dbg !136
  %153 = fcmp uno float %151, 0.000000e+00, !dbg !138
  %154 = or i1 %153, %152, !dbg !139
  %155 = select i1 %154, float %151, float %147, !dbg !140
  %156 = icmp sgt i32 %68, -1, !dbg !141
  %157 = and i1 %71, %156, !dbg !142
  %158 = and i1 %10, %157, !dbg !143
  %159 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %43, i1 %158, i32 -8388608, i1 %158) #1, !dbg !144
  %160 = bitcast i32 %159 to float, !dbg !144
  %161 = fcmp olt float %155, %160, !dbg !145
  %162 = fcmp uno float %160, 0.000000e+00, !dbg !147
  %163 = or i1 %162, %161, !dbg !148
  %164 = select i1 %163, float %160, float %155, !dbg !149
  %165 = and i1 %76, %156, !dbg !150
  %166 = and i1 %10, %165, !dbg !151
  %167 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %166, i32 -8388608, i1 %166) #1, !dbg !152
  %168 = bitcast i32 %167 to float, !dbg !152
  %169 = fcmp olt float %164, %168, !dbg !153
  %170 = fcmp uno float %168, 0.000000e+00, !dbg !155
  %171 = or i1 %170, %169, !dbg !156
  %172 = select i1 %171, float %168, float %164, !dbg !157
  %173 = or i32 %68, %70, !dbg !55
  %174 = icmp sgt i32 %173, -1, !dbg !55
  %175 = and i1 %10, %174, !dbg !158
  %176 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %15, i1 %175, i32 -8388608, i1 %175) #1, !dbg !159
  %177 = bitcast i32 %176 to float, !dbg !159
  %178 = fcmp olt float %172, %177, !dbg !160
  %179 = fcmp uno float %177, 0.000000e+00, !dbg !162
  %180 = or i1 %179, %178, !dbg !163
  %181 = select i1 %180, float %177, float %172, !dbg !164
  %182 = and i1 %156, %95, !dbg !165
  %183 = and i1 %10, %182, !dbg !166
  %184 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %183, i32 -8388608, i1 %183) #1, !dbg !167
  %185 = bitcast i32 %184 to float, !dbg !167
  %186 = fcmp olt float %181, %185, !dbg !168
  %187 = fcmp uno float %185, 0.000000e+00, !dbg !170
  %188 = or i1 %187, %186, !dbg !171
  %189 = select i1 %188, float %185, float %181, !dbg !172
  %190 = and i1 %156, %106, !dbg !173
  %191 = and i1 %10, %190, !dbg !174
  %192 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %191, i32 -8388608, i1 %191) #1, !dbg !175
  %193 = bitcast i32 %192 to float, !dbg !175
  %194 = fcmp olt float %189, %193, !dbg !176
  %195 = fcmp uno float %193, 0.000000e+00, !dbg !178
  %196 = or i1 %195, %194, !dbg !179
  %197 = select i1 %196, float %193, float %189, !dbg !180
  %198 = add nsw i32 %68, 1, !dbg !53
  %199 = icmp ult i32 %198, 4, !dbg !53
  %200 = and i1 %71, %199, !dbg !181
  %201 = and i1 %10, %200, !dbg !182
  %202 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %201, i32 -8388608, i1 %201) #1, !dbg !183
  %203 = bitcast i32 %202 to float, !dbg !183
  %204 = fcmp olt float %197, %203, !dbg !184
  %205 = fcmp uno float %203, 0.000000e+00, !dbg !186
  %206 = or i1 %205, %204, !dbg !187
  %207 = select i1 %206, float %203, float %197, !dbg !188
  %208 = and i1 %76, %199, !dbg !189
  %209 = and i1 %10, %208, !dbg !190
  %210 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %209, i32 -8388608, i1 %209) #1, !dbg !191
  %211 = bitcast i32 %210 to float, !dbg !191
  %212 = fcmp olt float %207, %211, !dbg !192
  %213 = fcmp uno float %211, 0.000000e+00, !dbg !194
  %214 = or i1 %213, %212, !dbg !195
  %215 = select i1 %214, float %211, float %207, !dbg !196
  %216 = and i1 %85, %199, !dbg !197
  %217 = and i1 %10, %216, !dbg !198
  %218 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %58, i1 %217, i32 -8388608, i1 %217) #1, !dbg !199
  %219 = bitcast i32 %218 to float, !dbg !199
  %220 = fcmp olt float %215, %219, !dbg !200
  %221 = fcmp uno float %219, 0.000000e+00, !dbg !202
  %222 = or i1 %221, %220, !dbg !203
  %223 = select i1 %222, float %219, float %215, !dbg !204
  %224 = or i32 %198, %94, !dbg !205
  %225 = icmp ult i32 %224, 4, !dbg !205
  %226 = and i1 %10, %225, !dbg !206
  %227 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %61, i1 %226, i32 -8388608, i1 %226) #1, !dbg !207
  %228 = bitcast i32 %227 to float, !dbg !207
  %229 = fcmp olt float %223, %228, !dbg !208
  %230 = fcmp uno float %228, 0.000000e+00, !dbg !210
  %231 = or i1 %230, %229, !dbg !211
  %232 = select i1 %231, float %228, float %223, !dbg !212
  %233 = or i32 %198, %105, !dbg !213
  %234 = icmp ult i32 %233, 4, !dbg !213
  %235 = and i1 %10, %234, !dbg !214
  %236 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %64, i1 %235, i32 -8388608, i1 %235) #1, !dbg !215
  %237 = bitcast i32 %236 to float, !dbg !215
  %238 = fcmp olt float %232, %237, !dbg !216
  %239 = fcmp uno float %237, 0.000000e+00, !dbg !218
  %240 = or i1 %239, %238, !dbg !219
  %241 = select i1 %240, float %237, float %232, !dbg !220
  %242 = extractelement <2 x i32> %104, i64 0, !dbg !90
  %243 = icmp ult i32 %242, 4, !dbg !89
  %244 = and i1 %71, %243, !dbg !221
  %245 = and i1 %10, %244, !dbg !222
  %246 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %64, i1 %245, i32 -8388608, i1 %245) #1, !dbg !223
  %247 = bitcast i32 %246 to float, !dbg !223
  %248 = fcmp olt float %241, %247, !dbg !224
  %249 = fcmp uno float %247, 0.000000e+00, !dbg !226
  %250 = or i1 %249, %248, !dbg !227
  %251 = select i1 %250, float %247, float %241, !dbg !228
  %252 = and i1 %76, %243, !dbg !229
  %253 = add i32 %9, 7, !dbg !230
  %254 = sext i32 %253 to i64, !dbg !231
  %255 = getelementptr float, ptr addrspace(1) %0, i64 %254, !dbg !231
  %256 = and i1 %10, %252, !dbg !232
  %257 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %255, i1 %256, i32 -8388608, i1 %256) #1, !dbg !233
  %258 = bitcast i32 %257 to float, !dbg !233
  %259 = fcmp olt float %251, %258, !dbg !234
  %260 = fcmp uno float %258, 0.000000e+00, !dbg !236
  %261 = or i1 %260, %259, !dbg !237
  %262 = select i1 %261, float %258, float %251, !dbg !238
  %263 = and i1 %85, %243, !dbg !239
  %264 = add i32 %9, 8, !dbg !240
  %265 = sext i32 %264 to i64, !dbg !241
  %266 = getelementptr float, ptr addrspace(1) %0, i64 %265, !dbg !241
  %267 = and i1 %10, %263, !dbg !242
  %268 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %266, i1 %267, i32 -8388608, i1 %267) #1, !dbg !243
  %269 = bitcast i32 %268 to float, !dbg !243
  %270 = fcmp olt float %262, %269, !dbg !244
  %271 = fcmp uno float %269, 0.000000e+00, !dbg !246
  %272 = or i1 %271, %270, !dbg !247
  %273 = select i1 %272, float %269, float %262, !dbg !248
  %274 = or i32 %242, %94, !dbg !249
  %275 = icmp ult i32 %274, 4, !dbg !249
  %276 = add i32 %9, 9, !dbg !250
  %277 = sext i32 %276 to i64, !dbg !251
  %278 = getelementptr float, ptr addrspace(1) %0, i64 %277, !dbg !251
  %279 = and i1 %10, %275, !dbg !252
  %280 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %278, i1 %279, i32 -8388608, i1 %279) #1, !dbg !253
  %281 = bitcast i32 %280 to float, !dbg !253
  %282 = fcmp olt float %273, %281, !dbg !254
  %283 = fcmp uno float %281, 0.000000e+00, !dbg !256
  %284 = or i1 %283, %282, !dbg !257
  %285 = select i1 %284, float %281, float %273, !dbg !258
  %286 = or i32 %242, %105, !dbg !90
  %287 = icmp ult i32 %286, 4, !dbg !90
  %288 = add i32 %9, 10, !dbg !259
  %289 = sext i32 %288 to i64, !dbg !260
  %290 = getelementptr float, ptr addrspace(1) %0, i64 %289, !dbg !260
  %291 = and i1 %10, %287, !dbg !261
  %292 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %290, i1 %291, i32 -8388608, i1 %291) #1, !dbg !262
  %293 = bitcast i32 %292 to float, !dbg !262
  %294 = fcmp olt float %285, %293, !dbg !263
  %295 = fcmp uno float %293, 0.000000e+00, !dbg !265
  %296 = or i1 %295, %294, !dbg !266
  %297 = shl i32 %12, 8, !dbg !267
  %298 = add i32 %297, %.decomposed, !dbg !268
  %299 = sext i32 %298 to i64, !dbg !269
  %300 = getelementptr float, ptr addrspace(1) %1, i64 %299, !dbg !269
  %301 = bitcast float %285 to i32, !dbg !270
  %302 = select i1 %296, i32 %292, i32 %301, !dbg !271
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %302, ptr addrspace(1) %300, i1 %10) #1, !dbg !270
  %303 = getelementptr float, ptr addrspace(1) %2, i64 %299, !dbg !272
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %16, ptr addrspace(1) %303, i1 %10) #1, !dbg !273
  ret void, !dbg !274
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "crqaslcpxb4eqwbbvnv3rljk6j73fhug7r433zgeolwymvo3v5wj.py", directory: "inductor_cache/rq")
!4 = !{ptr @triton_poi_fused_cat_max_pool2d_with_indices_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_max_pool2d_with_indices_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_max_pool2d_with_indices_0", linkageName: "triton_poi_fused_cat_max_pool2d_with_indices_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 27, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 19, scope: !7)
!18 = !DILocation(line: 29, column: 32, scope: !7)
!19 = !DILocation(line: 29, column: 37, scope: !7)
!20 = !DILocation(line: 41, column: 39, scope: !7)
!21 = !DILocation(line: 41, column: 31, scope: !7)
!22 = !DILocation(line: 47, column: 38, scope: !7)
!23 = !DILocation(line: 47, column: 31, scope: !7)
!24 = !DILocation(line: 54, column: 38, scope: !7)
!25 = !DILocation(line: 54, column: 31, scope: !7)
!26 = !DILocation(line: 61, column: 38, scope: !7)
!27 = !DILocation(line: 61, column: 31, scope: !7)
!28 = !DILocation(line: 68, column: 38, scope: !7)
!29 = !DILocation(line: 68, column: 31, scope: !7)
!30 = !DILocation(line: 78, column: 38, scope: !7)
!31 = !DILocation(line: 78, column: 31, scope: !7)
!32 = !DILocation(line: 81, column: 38, scope: !7)
!33 = !DILocation(line: 81, column: 31, scope: !7)
!34 = !DILocation(line: 84, column: 38, scope: !7)
!35 = !DILocation(line: 84, column: 31, scope: !7)
!36 = !DILocation(line: 87, column: 38, scope: !7)
!37 = !DILocation(line: 87, column: 31, scope: !7)
!38 = !DILocation(line: 97, column: 38, scope: !7)
!39 = !DILocation(line: 97, column: 31, scope: !7)
!40 = !DILocation(line: 103, column: 35, scope: !7)
!41 = !DILocation(line: 103, column: 31, scope: !7)
!42 = !DILocation(line: 106, column: 35, scope: !7)
!43 = !DILocation(line: 106, column: 31, scope: !7)
!44 = !DILocation(line: 116, column: 35, scope: !7)
!45 = !DILocation(line: 116, column: 31, scope: !7)
!46 = !DILocation(line: 119, column: 35, scope: !7)
!47 = !DILocation(line: 119, column: 31, scope: !7)
!48 = !DILocation(line: 122, column: 35, scope: !7)
!49 = !DILocation(line: 122, column: 31, scope: !7)
!50 = !DILocation(line: 125, column: 35, scope: !7)
!51 = !DILocation(line: 125, column: 31, scope: !7)
!52 = !DILocation(line: 24, column: 26, scope: !7)
!53 = !DILocation(line: 111, column: 20, scope: !7)
!54 = !DILocation(line: 32, column: 19, scope: !7)
!55 = !DILocation(line: 99, column: 20, scope: !7)
!56 = !DILocation(line: 37, column: 19, scope: !7)
!57 = !DILocation(line: 40, column: 19, scope: !7)
!58 = !DILocation(line: 41, column: 52, scope: !7)
!59 = !DILocation(line: 41, column: 44, scope: !7)
!60 = !DILocation(line: 43, column: 21, scope: !7)
!61 = !DILocation(line: 46, column: 19, scope: !7)
!62 = !DILocation(line: 47, column: 51, scope: !7)
!63 = !DILocation(line: 47, column: 43, scope: !7)
!64 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !67)
!65 = distinct !DILexicalBlockFile(scope: !7, file: !66, discriminator: 0)
!66 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!67 = !DILocation(line: 48, column: 42, scope: !7)
!68 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !67)
!69 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !67)
!70 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !67)
!71 = !DILocation(line: 50, column: 21, scope: !7)
!72 = !DILocation(line: 53, column: 19, scope: !7)
!73 = !DILocation(line: 54, column: 51, scope: !7)
!74 = !DILocation(line: 54, column: 43, scope: !7)
!75 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !76)
!76 = !DILocation(line: 55, column: 42, scope: !7)
!77 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !76)
!78 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !76)
!79 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !76)
!80 = !DILocation(line: 59, column: 20, scope: !7)
!81 = !DILocation(line: 60, column: 19, scope: !7)
!82 = !DILocation(line: 61, column: 51, scope: !7)
!83 = !DILocation(line: 61, column: 43, scope: !7)
!84 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !85)
!85 = !DILocation(line: 62, column: 42, scope: !7)
!86 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !85)
!87 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !85)
!88 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !85)
!89 = !DILocation(line: 130, column: 21, scope: !7)
!90 = !DILocation(line: 143, column: 22, scope: !7)
!91 = !DILocation(line: 66, column: 20, scope: !7)
!92 = !DILocation(line: 67, column: 19, scope: !7)
!93 = !DILocation(line: 68, column: 51, scope: !7)
!94 = !DILocation(line: 68, column: 43, scope: !7)
!95 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !96)
!96 = !DILocation(line: 69, column: 42, scope: !7)
!97 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !96)
!98 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !96)
!99 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !96)
!100 = !DILocation(line: 71, column: 21, scope: !7)
!101 = !DILocation(line: 74, column: 20, scope: !7)
!102 = !DILocation(line: 75, column: 51, scope: !7)
!103 = !DILocation(line: 75, column: 43, scope: !7)
!104 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !105)
!105 = !DILocation(line: 76, column: 42, scope: !7)
!106 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !105)
!107 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !105)
!108 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !105)
!109 = !DILocation(line: 77, column: 20, scope: !7)
!110 = !DILocation(line: 78, column: 51, scope: !7)
!111 = !DILocation(line: 78, column: 43, scope: !7)
!112 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !113)
!113 = !DILocation(line: 79, column: 42, scope: !7)
!114 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !113)
!115 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !113)
!116 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !113)
!117 = !DILocation(line: 80, column: 20, scope: !7)
!118 = !DILocation(line: 81, column: 51, scope: !7)
!119 = !DILocation(line: 81, column: 43, scope: !7)
!120 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !121)
!121 = !DILocation(line: 82, column: 42, scope: !7)
!122 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !121)
!123 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !121)
!124 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !121)
!125 = !DILocation(line: 83, column: 20, scope: !7)
!126 = !DILocation(line: 84, column: 51, scope: !7)
!127 = !DILocation(line: 84, column: 43, scope: !7)
!128 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !129)
!129 = !DILocation(line: 85, column: 42, scope: !7)
!130 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !129)
!131 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !129)
!132 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !129)
!133 = !DILocation(line: 86, column: 20, scope: !7)
!134 = !DILocation(line: 87, column: 51, scope: !7)
!135 = !DILocation(line: 87, column: 43, scope: !7)
!136 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !137)
!137 = !DILocation(line: 88, column: 42, scope: !7)
!138 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !137)
!139 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !137)
!140 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !137)
!141 = !DILocation(line: 90, column: 21, scope: !7)
!142 = !DILocation(line: 93, column: 20, scope: !7)
!143 = !DILocation(line: 94, column: 51, scope: !7)
!144 = !DILocation(line: 94, column: 43, scope: !7)
!145 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !146)
!146 = !DILocation(line: 95, column: 42, scope: !7)
!147 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !146)
!148 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !146)
!149 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !146)
!150 = !DILocation(line: 96, column: 20, scope: !7)
!151 = !DILocation(line: 97, column: 51, scope: !7)
!152 = !DILocation(line: 97, column: 43, scope: !7)
!153 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !154)
!154 = !DILocation(line: 98, column: 42, scope: !7)
!155 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !154)
!156 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !154)
!157 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !154)
!158 = !DILocation(line: 100, column: 44, scope: !7)
!159 = !DILocation(line: 100, column: 36, scope: !7)
!160 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !161)
!161 = !DILocation(line: 101, column: 42, scope: !7)
!162 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !161)
!163 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !161)
!164 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !161)
!165 = !DILocation(line: 102, column: 20, scope: !7)
!166 = !DILocation(line: 103, column: 48, scope: !7)
!167 = !DILocation(line: 103, column: 40, scope: !7)
!168 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !169)
!169 = !DILocation(line: 104, column: 42, scope: !7)
!170 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !169)
!171 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !169)
!172 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !169)
!173 = !DILocation(line: 105, column: 20, scope: !7)
!174 = !DILocation(line: 106, column: 48, scope: !7)
!175 = !DILocation(line: 106, column: 40, scope: !7)
!176 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !177)
!177 = !DILocation(line: 107, column: 42, scope: !7)
!178 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !177)
!179 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !177)
!180 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !177)
!181 = !DILocation(line: 112, column: 20, scope: !7)
!182 = !DILocation(line: 113, column: 48, scope: !7)
!183 = !DILocation(line: 113, column: 40, scope: !7)
!184 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !185)
!185 = !DILocation(line: 114, column: 42, scope: !7)
!186 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !185)
!187 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !185)
!188 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !185)
!189 = !DILocation(line: 115, column: 20, scope: !7)
!190 = !DILocation(line: 116, column: 48, scope: !7)
!191 = !DILocation(line: 116, column: 40, scope: !7)
!192 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !193)
!193 = !DILocation(line: 117, column: 42, scope: !7)
!194 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !193)
!195 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !193)
!196 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !193)
!197 = !DILocation(line: 118, column: 20, scope: !7)
!198 = !DILocation(line: 119, column: 48, scope: !7)
!199 = !DILocation(line: 119, column: 40, scope: !7)
!200 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !201)
!201 = !DILocation(line: 120, column: 42, scope: !7)
!202 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !201)
!203 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !201)
!204 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !201)
!205 = !DILocation(line: 121, column: 20, scope: !7)
!206 = !DILocation(line: 122, column: 48, scope: !7)
!207 = !DILocation(line: 122, column: 40, scope: !7)
!208 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !209)
!209 = !DILocation(line: 123, column: 42, scope: !7)
!210 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !209)
!211 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !209)
!212 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !209)
!213 = !DILocation(line: 124, column: 20, scope: !7)
!214 = !DILocation(line: 125, column: 48, scope: !7)
!215 = !DILocation(line: 125, column: 40, scope: !7)
!216 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !217)
!217 = !DILocation(line: 126, column: 42, scope: !7)
!218 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !217)
!219 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !217)
!220 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !217)
!221 = !DILocation(line: 131, column: 22, scope: !7)
!222 = !DILocation(line: 132, column: 50, scope: !7)
!223 = !DILocation(line: 132, column: 41, scope: !7)
!224 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !225)
!225 = !DILocation(line: 133, column: 44, scope: !7)
!226 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !225)
!227 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !225)
!228 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !225)
!229 = !DILocation(line: 134, column: 22, scope: !7)
!230 = !DILocation(line: 135, column: 36, scope: !7)
!231 = !DILocation(line: 135, column: 32, scope: !7)
!232 = !DILocation(line: 135, column: 50, scope: !7)
!233 = !DILocation(line: 135, column: 41, scope: !7)
!234 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !235)
!235 = !DILocation(line: 136, column: 44, scope: !7)
!236 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !235)
!237 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !235)
!238 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !235)
!239 = !DILocation(line: 137, column: 22, scope: !7)
!240 = !DILocation(line: 138, column: 36, scope: !7)
!241 = !DILocation(line: 138, column: 32, scope: !7)
!242 = !DILocation(line: 138, column: 50, scope: !7)
!243 = !DILocation(line: 138, column: 41, scope: !7)
!244 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !245)
!245 = !DILocation(line: 139, column: 44, scope: !7)
!246 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !245)
!247 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !245)
!248 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !245)
!249 = !DILocation(line: 140, column: 22, scope: !7)
!250 = !DILocation(line: 141, column: 36, scope: !7)
!251 = !DILocation(line: 141, column: 32, scope: !7)
!252 = !DILocation(line: 141, column: 50, scope: !7)
!253 = !DILocation(line: 141, column: 41, scope: !7)
!254 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !255)
!255 = !DILocation(line: 142, column: 44, scope: !7)
!256 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !255)
!257 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !255)
!258 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !255)
!259 = !DILocation(line: 144, column: 37, scope: !7)
!260 = !DILocation(line: 144, column: 32, scope: !7)
!261 = !DILocation(line: 144, column: 51, scope: !7)
!262 = !DILocation(line: 144, column: 42, scope: !7)
!263 = !DILocation(line: 118, column: 15, scope: !65, inlinedAt: !264)
!264 = !DILocation(line: 145, column: 44, scope: !7)
!265 = !DILocation(line: 120, column: 21, scope: !65, inlinedAt: !264)
!266 = !DILocation(line: 120, column: 16, scope: !65, inlinedAt: !264)
!267 = !DILocation(line: 146, column: 34, scope: !7)
!268 = !DILocation(line: 146, column: 30, scope: !7)
!269 = !DILocation(line: 146, column: 25, scope: !7)
!270 = !DILocation(line: 146, column: 47, scope: !7)
!271 = !DILocation(line: 121, column: 29, scope: !65, inlinedAt: !264)
!272 = !DILocation(line: 147, column: 25, scope: !7)
!273 = !DILocation(line: 147, column: 47, scope: !7)
!274 = !DILocation(line: 147, column: 4, scope: !7)
