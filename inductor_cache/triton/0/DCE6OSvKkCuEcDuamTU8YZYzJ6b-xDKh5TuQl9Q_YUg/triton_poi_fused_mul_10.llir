; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mul_10(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %11 = sdiv i32 %.frozen, 16, !dbg !14
  %12 = mul i32 %11, 16, !dbg !15
  %.decomposed = sub i32 %.frozen, %12, !dbg !15
  %13 = srem i32 %11, 320, !dbg !16
  %14 = sdiv i32 %10, 5120, !dbg !17
  %15 = sext i32 %10 to i64, !dbg !18
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !18
  %17 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %16, i1 true) #1, !dbg !19
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !19
  %19 = extractvalue { i32, i32 } %17, 1, !dbg !19
  %20 = bitcast i32 %18 to float, !dbg !19
  %21 = bitcast i32 %19 to float, !dbg !19
  %.lhs.trunc = trunc nsw i32 %13 to i16, !dbg !20
  %22 = sdiv i16 %.lhs.trunc, 64, !dbg !20
  %.sext = sext i16 %22 to i32, !dbg !20
  %23 = shl nsw i32 %.sext, 4, !dbg !21
  %24 = mul nsw i32 %14, 80, !dbg !22
  %25 = add nsw i32 %24, %.decomposed, !dbg !23
  %26 = add nsw i32 %25, %23, !dbg !24
  %27 = sext i32 %26 to i64, !dbg !25
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !25
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 true) #1, !dbg !26
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !26
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !26
  %32 = bitcast i32 %30 to float, !dbg !26
  %33 = bitcast i32 %31 to float, !dbg !26
  %34 = fsub float 0.000000e+00, %32, !dbg !27
  %35 = fsub float 0.000000e+00, %33, !dbg !27
  %36 = fmul float %34, 0x3FF7154760000000, !dbg !31
  %37 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %36) #1, !dbg !31
  %38 = fmul float %35, 0x3FF7154760000000, !dbg !31
  %39 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %38) #1, !dbg !31
  %40 = fadd float %37, 1.000000e+00, !dbg !32
  %41 = fadd float %39, 1.000000e+00, !dbg !32
  %42 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %40) #1, !dbg !33
  %43 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %41) #1, !dbg !33
  %44 = fmul float %42, %20, !dbg !34
  %45 = fmul float %43, %21, !dbg !34
  %46 = getelementptr float, ptr addrspace(1) %2, i64 %15, !dbg !35
  %47 = bitcast float %44 to i32, !dbg !36
  %48 = bitcast float %45 to i32, !dbg !36
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %47, i32 %48, ptr addrspace(1) %46, i1 true) #1, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cknhgsiynkqsgvw5sapcyaq3uwzix3mxojpnqkhjqglhismb7zff.py", directory: "inductor_cache/kn")
!4 = !{ptr @triton_poi_fused_mul_10, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mul_10, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mul_10", linkageName: "triton_poi_fused_mul_10", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 26, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 27, scope: !7)
!17 = !DILocation(line: 27, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 29, column: 45, scope: !7)
!21 = !DILocation(line: 29, column: 39, scope: !7)
!22 = !DILocation(line: 29, column: 54, scope: !7)
!23 = !DILocation(line: 29, column: 35, scope: !7)
!24 = !DILocation(line: 29, column: 51, scope: !7)
!25 = !DILocation(line: 29, column: 30, scope: !7)
!26 = !DILocation(line: 29, column: 59, scope: !7)
!27 = !DILocation(line: 47, column: 30, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !7, file: !29, discriminator: 0)
!29 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!30 = !DILocation(line: 30, column: 22, scope: !7)
!31 = !DILocation(line: 47, column: 29, scope: !28, inlinedAt: !30)
!32 = !DILocation(line: 47, column: 20, scope: !28, inlinedAt: !30)
!33 = !DILocation(line: 47, column: 16, scope: !28, inlinedAt: !30)
!34 = !DILocation(line: 31, column: 18, scope: !7)
!35 = !DILocation(line: 32, column: 25, scope: !7)
!36 = !DILocation(line: 32, column: 36, scope: !7)
!37 = !DILocation(line: 32, column: 4, scope: !7)
