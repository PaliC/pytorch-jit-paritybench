#blocked = #triton_gpu.blocked<{sizePerThread = [4, 1], threadsPerWarp = [32, 1], warpsPerCTA = [4, 1], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 2], threadsPerWarp = [32, 1], warpsPerCTA = [4, 1], order = [1, 0]}>
#loc = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_mul_sigmoid_silu_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg12: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg13: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg14: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg15: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg16: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999974E-6> : tensor<512x1xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<512x1xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<512x2xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<512x2xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<512> : tensor<512x1xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<512> : tensor<512x1xi32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<4096> : tensor<1x2xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<4096> : tensor<1x2xi32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<512> : tensor<1x2xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<4096> : tensor<512x1xi32, #blocked1> loc(#loc1)
    %cst_9 = arith.constant dense<2097152> : tensor<1x2xi32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c2_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x2xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x2xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<1x2xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<1x2xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<1x2xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<1x2xi32, #blocked1> loc(#loc5)
    %10 = tt.get_program_id x : i32 loc(#loc6)
    %11 = arith.muli %10, %c512_i32 : i32 loc(#loc7)
    %12 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc8)
    %13 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc8)
    %14 = tt.expand_dims %12 {axis = 1 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<512x1xi32, #blocked> loc(#loc8)
    %15 = tt.expand_dims %13 {axis = 1 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<512x1xi32, #blocked1> loc(#loc8)
    %16 = tt.splat %11 : i32 -> tensor<512x1xi32, #blocked> loc(#loc9)
    %17 = tt.splat %11 : i32 -> tensor<512x1xi32, #blocked1> loc(#loc9)
    %18 = arith.addi %16, %14 : tensor<512x1xi32, #blocked> loc(#loc9)
    %19 = arith.addi %17, %15 : tensor<512x1xi32, #blocked1> loc(#loc9)
    %20 = arith.cmpi slt, %18, %cst_3 : tensor<512x1xi32, #blocked> loc(#loc10)
    %21 = arith.cmpi slt, %19, %cst_4 : tensor<512x1xi32, #blocked1> loc(#loc10)
    %22 = arith.divsi %8, %cst_5 : tensor<1x2xi32, #blocked> loc(#loc11)
    %23 = arith.divsi %9, %cst_6 : tensor<1x2xi32, #blocked1> loc(#loc11)
    %24 = arith.remsi %9, %cst_6 : tensor<1x2xi32, #blocked1> loc(#loc12)
    %25 = arith.muli %8, %cst_7 : tensor<1x2xi32, #blocked> loc(#loc13)
    %26 = tt.broadcast %18 : tensor<512x1xi32, #blocked> -> tensor<512x2xi32, #blocked> loc(#loc14)
    %27 = tt.broadcast %25 : tensor<1x2xi32, #blocked> -> tensor<512x2xi32, #blocked> loc(#loc14)
    %28 = arith.addi %26, %27 : tensor<512x2xi32, #blocked> loc(#loc14)
    %29 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x2x!tt.ptr<f32>, #blocked> loc(#loc15)
    %30 = tt.addptr %29, %28 : tensor<512x2x!tt.ptr<f32>, #blocked>, tensor<512x2xi32, #blocked> loc(#loc15)
    %31 = tt.broadcast %20 : tensor<512x1xi1, #blocked> -> tensor<512x2xi1, #blocked> loc(#loc16)
    %32 = tt.broadcast %21 : tensor<512x1xi1, #blocked1> -> tensor<512x2xi1, #blocked1> loc(#loc16)
    %33 = tt.load %30, %31 evictionPolicy = evict_last : tensor<512x2x!tt.ptr<f32>, #blocked> loc(#loc16)
    %34 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc17)
    %35 = tt.addptr %34, %18 : tensor<512x1x!tt.ptr<f32>, #blocked>, tensor<512x1xi32, #blocked> loc(#loc17)
    %36 = tt.load %35, %20 evictionPolicy = evict_last : tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc18)
    %37 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x2x!tt.ptr<f32>, #blocked> loc(#loc19)
    %38 = tt.addptr %37, %28 : tensor<512x2x!tt.ptr<f32>, #blocked>, tensor<512x2xi32, #blocked> loc(#loc19)
    %39 = tt.load %38, %31 evictionPolicy = evict_last : tensor<512x2x!tt.ptr<f32>, #blocked> loc(#loc20)
    %40 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc21)
    %41 = tt.addptr %40, %18 : tensor<512x1x!tt.ptr<f32>, #blocked>, tensor<512x1xi32, #blocked> loc(#loc21)
    %42 = tt.load %41, %20 evictionPolicy = evict_last : tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc22)
    %43 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc23)
    %44 = tt.addptr %43, %18 : tensor<512x1x!tt.ptr<f32>, #blocked>, tensor<512x1xi32, #blocked> loc(#loc23)
    %45 = tt.load %44, %20 evictionPolicy = evict_last : tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc24)
    %46 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc25)
    %47 = tt.addptr %46, %18 : tensor<512x1x!tt.ptr<f32>, #blocked>, tensor<512x1xi32, #blocked> loc(#loc25)
    %48 = tt.load %47, %20 evictionPolicy = evict_last : tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc26)
    %49 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc27)
    %50 = tt.addptr %49, %18 : tensor<512x1x!tt.ptr<f32>, #blocked>, tensor<512x1xi32, #blocked> loc(#loc27)
    %51 = tt.load %50, %20 evictionPolicy = evict_last : tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc28)
    %52 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc29)
    %53 = tt.addptr %52, %18 : tensor<512x1x!tt.ptr<f32>, #blocked>, tensor<512x1xi32, #blocked> loc(#loc29)
    %54 = tt.load %53, %20 evictionPolicy = evict_last : tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc30)
    %55 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc31)
    %56 = tt.addptr %55, %18 : tensor<512x1x!tt.ptr<f32>, #blocked>, tensor<512x1xi32, #blocked> loc(#loc31)
    %57 = tt.load %56, %20 evictionPolicy = evict_last : tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc32)
    %58 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc33)
    %59 = tt.addptr %58, %18 : tensor<512x1x!tt.ptr<f32>, #blocked>, tensor<512x1xi32, #blocked> loc(#loc33)
    %60 = tt.load %59, %20 evictionPolicy = evict_last : tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc34)
    %61 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc35)
    %62 = tt.addptr %61, %18 : tensor<512x1x!tt.ptr<f32>, #blocked>, tensor<512x1xi32, #blocked> loc(#loc35)
    %63 = tt.load %62, %20 evictionPolicy = evict_last : tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc36)
    %64 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc37)
    %65 = tt.addptr %64, %18 : tensor<512x1x!tt.ptr<f32>, #blocked>, tensor<512x1xi32, #blocked> loc(#loc37)
    %66 = tt.load %65, %20 evictionPolicy = evict_last : tensor<512x1x!tt.ptr<f32>, #blocked> loc(#loc38)
    %67 = arith.muli %22, %cst_7 : tensor<1x2xi32, #blocked> loc(#loc39)
    %68 = tt.broadcast %67 : tensor<1x2xi32, #blocked> -> tensor<512x2xi32, #blocked> loc(#loc40)
    %69 = arith.addi %26, %68 : tensor<512x2xi32, #blocked> loc(#loc40)
    %70 = tt.splat %arg12 : !tt.ptr<f32> -> tensor<512x2x!tt.ptr<f32>, #blocked> loc(#loc41)
    %71 = tt.addptr %70, %69 : tensor<512x2x!tt.ptr<f32>, #blocked>, tensor<512x2xi32, #blocked> loc(#loc41)
    %72 = tt.load %71, %31 evictionPolicy = evict_last : tensor<512x2x!tt.ptr<f32>, #blocked> loc(#loc42)
    %73 = tt.splat %arg13 : !tt.ptr<f32> -> tensor<512x2x!tt.ptr<f32>, #blocked> loc(#loc43)
    %74 = tt.addptr %73, %28 : tensor<512x2x!tt.ptr<f32>, #blocked>, tensor<512x2xi32, #blocked> loc(#loc43)
    %75 = tt.load %74, %31 evictionPolicy = evict_last : tensor<512x2x!tt.ptr<f32>, #blocked> loc(#loc44)
    %76 = tt.broadcast %36 : tensor<512x1xf32, #blocked> -> tensor<512x2xf32, #blocked> loc(#loc45)
    %77 = arith.addf %33, %76 : tensor<512x2xf32, #blocked> loc(#loc45)
    %78 = tt.broadcast %42 : tensor<512x1xf32, #blocked> -> tensor<512x2xf32, #blocked> loc(#loc46)
    %79 = arith.addf %39, %78 : tensor<512x2xf32, #blocked> loc(#loc46)
    %80 = tt.broadcast %45 : tensor<512x1xf32, #blocked> -> tensor<512x2xf32, #blocked> loc(#loc47)
    %81 = arith.subf %77, %80 : tensor<512x2xf32, #blocked> loc(#loc47)
    %82 = arith.addf %48, %cst : tensor<512x1xf32, #blocked> loc(#loc48)
    %83 = tt.extern_elementwise %82 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512x1xf32, #blocked>) -> tensor<512x1xf32, #blocked> loc(#loc49)
    %84 = arith.divf %cst_0, %83 : tensor<512x1xf32, #blocked> loc(#loc50)
    %85 = tt.broadcast %84 : tensor<512x1xf32, #blocked> -> tensor<512x2xf32, #blocked> loc(#loc51)
    %86 = arith.mulf %81, %85 : tensor<512x2xf32, #blocked> loc(#loc51)
    %87 = tt.broadcast %51 : tensor<512x1xf32, #blocked> -> tensor<512x2xf32, #blocked> loc(#loc52)
    %88 = arith.mulf %86, %87 : tensor<512x2xf32, #blocked> loc(#loc52)
    %89 = tt.broadcast %54 : tensor<512x1xf32, #blocked> -> tensor<512x2xf32, #blocked> loc(#loc53)
    %90 = arith.addf %88, %89 : tensor<512x2xf32, #blocked> loc(#loc53)
    %91 = tt.broadcast %57 : tensor<512x1xf32, #blocked> -> tensor<512x2xf32, #blocked> loc(#loc54)
    %92 = arith.subf %79, %91 : tensor<512x2xf32, #blocked> loc(#loc54)
    %93 = arith.addf %60, %cst : tensor<512x1xf32, #blocked> loc(#loc55)
    %94 = tt.extern_elementwise %93 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512x1xf32, #blocked>) -> tensor<512x1xf32, #blocked> loc(#loc56)
    %95 = arith.divf %cst_0, %94 : tensor<512x1xf32, #blocked> loc(#loc57)
    %96 = tt.broadcast %95 : tensor<512x1xf32, #blocked> -> tensor<512x2xf32, #blocked> loc(#loc58)
    %97 = arith.mulf %92, %96 : tensor<512x2xf32, #blocked> loc(#loc58)
    %98 = tt.broadcast %63 : tensor<512x1xf32, #blocked> -> tensor<512x2xf32, #blocked> loc(#loc59)
    %99 = arith.mulf %97, %98 : tensor<512x2xf32, #blocked> loc(#loc59)
    %100 = tt.broadcast %66 : tensor<512x1xf32, #blocked> -> tensor<512x2xf32, #blocked> loc(#loc60)
    %101 = arith.addf %99, %100 : tensor<512x2xf32, #blocked> loc(#loc60)
    %102 = arith.addf %90, %101 : tensor<512x2xf32, #blocked> loc(#loc61)
    %103 = arith.subf %cst_2, %72 : tensor<512x2xf32, #blocked> loc(#loc82)
    %104 = math.exp %103 : tensor<512x2xf32, #blocked> loc(#loc83)
    %105 = arith.addf %104, %cst_1 : tensor<512x2xf32, #blocked> loc(#loc84)
    %106 = arith.divf %cst_1, %105 : tensor<512x2xf32, #blocked> loc(#loc85)
    %107 = arith.mulf %106, %75 : tensor<512x2xf32, #blocked> loc(#loc67)
    %108 = arith.addf %102, %107 : tensor<512x2xf32, #blocked> loc(#loc68)
    %109 = arith.subf %cst_2, %108 : tensor<512x2xf32, #blocked> loc(#loc86)
    %110 = math.exp %109 : tensor<512x2xf32, #blocked> loc(#loc87)
    %111 = arith.addf %110, %cst_1 : tensor<512x2xf32, #blocked> loc(#loc88)
    %112 = arith.divf %cst_1, %111 : tensor<512x2xf32, #blocked> loc(#loc89)
    %113 = arith.mulf %108, %112 : tensor<512x2xf32, #blocked> loc(#loc70)
    gpu.barrier loc(#loc71)
    tt.store %30, %77, %31 : tensor<512x2x!tt.ptr<f32>, #blocked> loc(#loc72)
    gpu.barrier loc(#loc73)
    tt.store %38, %79, %31 : tensor<512x2x!tt.ptr<f32>, #blocked> loc(#loc74)
    %114 = arith.muli %19, %cst_8 : tensor<512x1xi32, #blocked1> loc(#loc75)
    %115 = tt.broadcast %24 : tensor<1x2xi32, #blocked1> -> tensor<512x2xi32, #blocked1> loc(#loc76)
    %116 = tt.broadcast %114 : tensor<512x1xi32, #blocked1> -> tensor<512x2xi32, #blocked1> loc(#loc76)
    %117 = arith.addi %115, %116 : tensor<512x2xi32, #blocked1> loc(#loc76)
    %118 = arith.muli %23, %cst_9 : tensor<1x2xi32, #blocked1> loc(#loc77)
    %119 = tt.broadcast %118 : tensor<1x2xi32, #blocked1> -> tensor<512x2xi32, #blocked1> loc(#loc78)
    %120 = arith.addi %117, %119 : tensor<512x2xi32, #blocked1> loc(#loc78)
    %121 = tt.splat %arg14 : !tt.ptr<f32> -> tensor<512x2x!tt.ptr<f32>, #blocked1> loc(#loc79)
    %122 = tt.addptr %121, %120 : tensor<512x2x!tt.ptr<f32>, #blocked1>, tensor<512x2xi32, #blocked1> loc(#loc79)
    %123 = triton_gpu.convert_layout %113 : tensor<512x2xf32, #blocked> -> tensor<512x2xf32, #blocked1> loc(#loc80)
    tt.store %122, %123, %32 : tensor<512x2x!tt.ptr<f32>, #blocked1> loc(#loc80)
    tt.return loc(#loc81)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":22:28)
#loc3 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":22:33)
#loc4 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":23:44)
#loc5 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":23:23)
#loc6 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":25:28)
#loc7 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":25:33)
#loc8 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":26:44)
#loc9 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":26:23)
#loc10 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":27:21)
#loc11 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":30:19)
#loc12 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":31:19)
#loc13 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":32:43)
#loc14 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":32:39)
#loc15 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":32:34)
#loc16 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":32:48)
#loc17 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":33:30)
#loc18 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":33:35)
#loc19 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":34:34)
#loc20 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":34:48)
#loc21 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":35:30)
#loc22 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":35:35)
#loc23 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":36:30)
#loc24 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":36:35)
#loc25 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":37:30)
#loc26 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":37:35)
#loc27 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":38:31)
#loc28 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":38:36)
#loc29 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":39:31)
#loc30 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":39:36)
#loc31 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":40:31)
#loc32 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":40:36)
#loc33 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":41:31)
#loc34 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":41:36)
#loc35 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":42:31)
#loc36 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":42:36)
#loc37 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":43:31)
#loc38 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":43:36)
#loc39 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":44:41)
#loc40 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":44:37)
#loc41 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":44:32)
#loc42 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":44:46)
#loc43 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":45:32)
#loc44 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":45:46)
#loc45 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":46:18)
#loc46 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":47:18)
#loc47 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":48:18)
#loc48 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":50:19)
#loc49 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":51:27)
#loc50 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":53:20)
#loc51 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":56:19)
#loc52 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":57:20)
#loc53 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":58:20)
#loc54 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":59:19)
#loc55 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":60:20)
#loc56 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":61:27)
#loc57 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":62:20)
#loc58 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":64:20)
#loc59 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":65:20)
#loc60 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":66:20)
#loc61 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":67:20)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc63 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":68:23)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc67 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":69:20)
#loc68 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":70:20)
#loc69 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":71:23)
#loc70 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":72:20)
#loc71 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":73:4)
#loc72 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":74:48)
#loc73 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":75:4)
#loc74 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":76:48)
#loc75 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":77:35)
#loc76 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":77:30)
#loc77 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":77:48)
#loc78 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":77:40)
#loc79 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":77:25)
#loc80 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":77:60)
#loc81 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":77:4)
#loc82 = loc(callsite(#loc62 at #loc63))
#loc83 = loc(callsite(#loc64 at #loc63))
#loc84 = loc(callsite(#loc65 at #loc63))
#loc85 = loc(callsite(#loc66 at #loc63))
#loc86 = loc(callsite(#loc62 at #loc69))
#loc87 = loc(callsite(#loc64 at #loc69))
#loc88 = loc(callsite(#loc65 at #loc69))
#loc89 = loc(callsite(#loc66 at #loc69))
