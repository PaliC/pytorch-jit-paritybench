; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_16(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %10 = shl i32 %9, 9, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 2, !dbg !12
  %13 = and i32 %12, 508, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = sdiv i32 %14, 16, !dbg !14
  %16 = srem i32 %15, 1024, !dbg !15
  %17 = sext i32 %14 to i64, !dbg !16
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !16
  %19 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %18, i1 true) #3, !dbg !17
  %20 = extractvalue { i32, i32, i32, i32 } %19, 0, !dbg !17
  %21 = extractvalue { i32, i32, i32, i32 } %19, 1, !dbg !17
  %22 = extractvalue { i32, i32, i32, i32 } %19, 2, !dbg !17
  %23 = extractvalue { i32, i32, i32, i32 } %19, 3, !dbg !17
  %24 = sext i32 %16 to i64, !dbg !18
  %25 = getelementptr float, ptr addrspace(1) %2, i64 %24, !dbg !18
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #3, !dbg !19
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #3, !dbg !19
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #3, !dbg !19
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #3, !dbg !19
  %30 = getelementptr float, ptr addrspace(1) %3, i64 %24, !dbg !20
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #3, !dbg !21
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #3, !dbg !21
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #3, !dbg !21
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #3, !dbg !21
  %35 = getelementptr float, ptr addrspace(1) %4, i64 %24, !dbg !22
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #3, !dbg !23
  %37 = bitcast i32 %36 to float, !dbg !23
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #3, !dbg !23
  %39 = bitcast i32 %38 to float, !dbg !23
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #3, !dbg !23
  %41 = bitcast i32 %40 to float, !dbg !23
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #3, !dbg !23
  %43 = bitcast i32 %42 to float, !dbg !23
  %44 = getelementptr float, ptr addrspace(1) %5, i64 %24, !dbg !24
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #3, !dbg !25
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #3, !dbg !25
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #3, !dbg !25
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #3, !dbg !25
  %49 = insertelement <4 x i32> poison, i32 %48, i64 0, !dbg !25
  %50 = insertelement <4 x i32> %49, i32 %45, i64 1, !dbg !25
  %51 = insertelement <4 x i32> %50, i32 %46, i64 2, !dbg !25
  %52 = insertelement <4 x i32> %51, i32 %47, i64 3, !dbg !25
  %53 = bitcast <4 x i32> %52 to <4 x float>, !dbg !25
  %54 = getelementptr float, ptr addrspace(1) %6, i64 %24, !dbg !26
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 true) #3, !dbg !27
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 true) #3, !dbg !27
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 true) #3, !dbg !27
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 true) #3, !dbg !27
  %59 = insertelement <4 x i32> poison, i32 %58, i64 0, !dbg !27
  %60 = insertelement <4 x i32> %59, i32 %55, i64 1, !dbg !27
  %61 = insertelement <4 x i32> %60, i32 %56, i64 2, !dbg !27
  %62 = insertelement <4 x i32> %61, i32 %57, i64 3, !dbg !27
  %63 = bitcast <4 x i32> %62 to <4 x float>, !dbg !27
  %64 = insertelement <4 x i32> poison, i32 %23, i64 0, !dbg !17
  %65 = insertelement <4 x i32> %64, i32 %20, i64 1, !dbg !17
  %66 = insertelement <4 x i32> %65, i32 %21, i64 2, !dbg !17
  %67 = insertelement <4 x i32> %66, i32 %22, i64 3, !dbg !17
  %68 = bitcast <4 x i32> %67 to <4 x float>, !dbg !17
  %69 = insertelement <4 x i32> poison, i32 %29, i64 0, !dbg !19
  %70 = insertelement <4 x i32> %69, i32 %26, i64 1, !dbg !19
  %71 = insertelement <4 x i32> %70, i32 %27, i64 2, !dbg !19
  %72 = insertelement <4 x i32> %71, i32 %28, i64 3, !dbg !19
  %73 = bitcast <4 x i32> %72 to <4 x float>, !dbg !19
  %74 = insertelement <4 x i32> poison, i32 %34, i64 0, !dbg !21
  %75 = insertelement <4 x i32> %74, i32 %31, i64 1, !dbg !21
  %76 = insertelement <4 x i32> %75, i32 %32, i64 2, !dbg !21
  %77 = insertelement <4 x i32> %76, i32 %33, i64 3, !dbg !21
  %78 = bitcast <4 x i32> %77 to <4 x float>, !dbg !21
  %79 = fadd <4 x float> %68, %73, !dbg !28
  %80 = fsub <4 x float> %79, %78, !dbg !29
  %81 = fadd float %37, 0x3F1A36E2E0000000, !dbg !30
  %82 = fadd float %39, 0x3F1A36E2E0000000, !dbg !30
  %83 = fadd float %41, 0x3F1A36E2E0000000, !dbg !30
  %84 = fadd float %43, 0x3F1A36E2E0000000, !dbg !30
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i = icmp eq i32 %85, 0, !dbg !31
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i = icmp eq i32 %86, 0, !dbg !31
  br i1 %.not.i, label %92, label %87, !dbg !31

87:                                               ; preds = %8
  br i1 %.not1.i, label %90, label %88, !dbg !31

88:                                               ; preds = %87
  %89 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %81) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

90:                                               ; preds = %87
  %91 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %81) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

92:                                               ; preds = %8
  br i1 %.not1.i, label %95, label %93, !dbg !31

93:                                               ; preds = %92
  %94 = tail call float @llvm.nvvm.sqrt.rn.f(float %81) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

95:                                               ; preds = %92
  %96 = tail call float @llvm.nvvm.sqrt.approx.f(float %81) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

__nv_sqrtf.exit:                                  ; preds = %88, %90, %93, %95
  %.0.i = phi float [ %89, %88 ], [ %91, %90 ], [ %94, %93 ], [ %96, %95 ], !dbg !31
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i1 = icmp eq i32 %97, 0, !dbg !31
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i4 = icmp eq i32 %98, 0, !dbg !31
  br i1 %.not.i1, label %104, label %99, !dbg !31

99:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %102, label %100, !dbg !31

100:                                              ; preds = %99
  %101 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %82) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

102:                                              ; preds = %99
  %103 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %82) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

104:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %107, label %105, !dbg !31

105:                                              ; preds = %104
  %106 = tail call float @llvm.nvvm.sqrt.rn.f(float %82) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

107:                                              ; preds = %104
  %108 = tail call float @llvm.nvvm.sqrt.approx.f(float %82) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

__nv_sqrtf.exit5:                                 ; preds = %100, %102, %105, %107
  %.0.i3 = phi float [ %101, %100 ], [ %103, %102 ], [ %106, %105 ], [ %108, %107 ], !dbg !31
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i6 = icmp eq i32 %109, 0, !dbg !31
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i9 = icmp eq i32 %110, 0, !dbg !31
  br i1 %.not.i6, label %116, label %111, !dbg !31

111:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %114, label %112, !dbg !31

112:                                              ; preds = %111
  %113 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %83) #3, !dbg !31
  br label %__nv_sqrtf.exit10, !dbg !31

114:                                              ; preds = %111
  %115 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %83) #3, !dbg !31
  br label %__nv_sqrtf.exit10, !dbg !31

116:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %119, label %117, !dbg !31

117:                                              ; preds = %116
  %118 = tail call float @llvm.nvvm.sqrt.rn.f(float %83) #3, !dbg !31
  br label %__nv_sqrtf.exit10, !dbg !31

119:                                              ; preds = %116
  %120 = tail call float @llvm.nvvm.sqrt.approx.f(float %83) #3, !dbg !31
  br label %__nv_sqrtf.exit10, !dbg !31

__nv_sqrtf.exit10:                                ; preds = %112, %114, %117, %119
  %.0.i8 = phi float [ %113, %112 ], [ %115, %114 ], [ %118, %117 ], [ %120, %119 ], !dbg !31
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i11 = icmp eq i32 %121, 0, !dbg !31
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i14 = icmp eq i32 %122, 0, !dbg !31
  br i1 %.not.i11, label %128, label %123, !dbg !31

123:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %126, label %124, !dbg !31

124:                                              ; preds = %123
  %125 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %84) #3, !dbg !31
  br label %__nv_sqrtf.exit15, !dbg !31

126:                                              ; preds = %123
  %127 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %84) #3, !dbg !31
  br label %__nv_sqrtf.exit15, !dbg !31

128:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %131, label %129, !dbg !31

129:                                              ; preds = %128
  %130 = tail call float @llvm.nvvm.sqrt.rn.f(float %84) #3, !dbg !31
  br label %__nv_sqrtf.exit15, !dbg !31

131:                                              ; preds = %128
  %132 = tail call float @llvm.nvvm.sqrt.approx.f(float %84) #3, !dbg !31
  br label %__nv_sqrtf.exit15, !dbg !31

__nv_sqrtf.exit15:                                ; preds = %124, %126, %129, %131
  %.0.i13 = phi float [ %125, %124 ], [ %127, %126 ], [ %130, %129 ], [ %132, %131 ], !dbg !31
  %133 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !32
  %134 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !32
  %135 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i8) #3, !dbg !32
  %136 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i13) #3, !dbg !32
  %137 = insertelement <4 x float> poison, float %136, i64 0, !dbg !33
  %138 = insertelement <4 x float> %137, float %133, i64 1, !dbg !33
  %139 = insertelement <4 x float> %138, float %134, i64 2, !dbg !33
  %140 = insertelement <4 x float> %139, float %135, i64 3, !dbg !33
  %141 = fmul <4 x float> %80, %140, !dbg !33
  %142 = fmul <4 x float> %141, %53, !dbg !34
  %143 = fadd <4 x float> %142, %63, !dbg !35
  %144 = extractelement <4 x float> %143, i64 1, !dbg !36
  %145 = fmul float %144, 0x3FF7154760000000, !dbg !36
  %146 = tail call float @llvm.nvvm.round.f(float %145) #3, !dbg !36
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i16 = icmp eq i32 %147, 0, !dbg !36
  %148 = tail call float @llvm.nvvm.fabs.ftz.f(float %144) #3, !dbg !36
  %149 = tail call float @llvm.nvvm.fabs.f(float %144) #3, !dbg !36
  %.03.i = select i1 %.not.i16, float %149, float %148, !dbg !36
  %150 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !36
  %t.0.i = select i1 %150, float 0.000000e+00, float %146, !dbg !36
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %153 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !36
  %j.0.i = select i1 %153, float 1.270000e+02, float %t.0.i, !dbg !36
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i = icmp eq i32 %159, 0, !dbg !36
  br i1 %.not8.i, label %162, label %160, !dbg !36

160:                                              ; preds = %__nv_sqrtf.exit15
  %161 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !36
  br label %__nv_expm1f.exit, !dbg !36

162:                                              ; preds = %__nv_sqrtf.exit15
  %163 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !36
  br label %__nv_expm1f.exit, !dbg !36

__nv_expm1f.exit:                                 ; preds = %160, %162
  %.0.i17 = phi float [ %161, %160 ], [ %163, %162 ], !dbg !36
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %165 = extractelement <4 x float> %143, i64 2, !dbg !36
  %166 = fmul float %165, 0x3FF7154760000000, !dbg !36
  %167 = tail call float @llvm.nvvm.round.f(float %166) #3, !dbg !36
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i20 = icmp eq i32 %168, 0, !dbg !36
  %169 = tail call float @llvm.nvvm.fabs.ftz.f(float %165) #3, !dbg !36
  %170 = tail call float @llvm.nvvm.fabs.f(float %165) #3, !dbg !36
  %.03.i21 = select i1 %.not.i20, float %170, float %169, !dbg !36
  %171 = fcmp olt float %.03.i21, 0x3FDA3D70A0000000, !dbg !36
  %t.0.i22 = select i1 %171, float 0.000000e+00, float %167, !dbg !36
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %174 = fcmp oeq float %t.0.i22, 1.280000e+02, !dbg !36
  %j.0.i23 = select i1 %174, float 1.270000e+02, float %t.0.i22, !dbg !36
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i24 = icmp eq i32 %180, 0, !dbg !36
  br i1 %.not8.i24, label %183, label %181, !dbg !36

181:                                              ; preds = %__nv_expm1f.exit
  %182 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i23) #3, !dbg !36
  br label %__nv_expm1f.exit46, !dbg !36

183:                                              ; preds = %__nv_expm1f.exit
  %184 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i23) #3, !dbg !36
  br label %__nv_expm1f.exit46, !dbg !36

__nv_expm1f.exit46:                               ; preds = %181, %183
  %.0.i25 = phi float [ %182, %181 ], [ %184, %183 ], !dbg !36
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %186 = extractelement <4 x float> %143, i64 3, !dbg !36
  %187 = fmul float %186, 0x3FF7154760000000, !dbg !36
  %188 = tail call float @llvm.nvvm.round.f(float %187) #3, !dbg !36
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i47 = icmp eq i32 %189, 0, !dbg !36
  %190 = tail call float @llvm.nvvm.fabs.ftz.f(float %186) #3, !dbg !36
  %191 = tail call float @llvm.nvvm.fabs.f(float %186) #3, !dbg !36
  %.03.i48 = select i1 %.not.i47, float %191, float %190, !dbg !36
  %192 = fcmp olt float %.03.i48, 0x3FDA3D70A0000000, !dbg !36
  %t.0.i49 = select i1 %192, float 0.000000e+00, float %188, !dbg !36
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %195 = fcmp oeq float %t.0.i49, 1.280000e+02, !dbg !36
  %j.0.i50 = select i1 %195, float 1.270000e+02, float %t.0.i49, !dbg !36
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i51 = icmp eq i32 %201, 0, !dbg !36
  br i1 %.not8.i51, label %204, label %202, !dbg !36

202:                                              ; preds = %__nv_expm1f.exit46
  %203 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i50) #3, !dbg !36
  br label %__nv_expm1f.exit73, !dbg !36

204:                                              ; preds = %__nv_expm1f.exit46
  %205 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i50) #3, !dbg !36
  br label %__nv_expm1f.exit73, !dbg !36

__nv_expm1f.exit73:                               ; preds = %202, %204
  %.0.i52 = phi float [ %203, %202 ], [ %205, %204 ], !dbg !36
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %207 = extractelement <4 x float> %143, i64 0, !dbg !36
  %208 = fmul float %207, 0x3FF7154760000000, !dbg !36
  %209 = tail call float @llvm.nvvm.round.f(float %208) #3, !dbg !36
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i74 = icmp eq i32 %210, 0, !dbg !36
  %211 = tail call float @llvm.nvvm.fabs.ftz.f(float %207) #3, !dbg !36
  %212 = tail call float @llvm.nvvm.fabs.f(float %207) #3, !dbg !36
  %.03.i75 = select i1 %.not.i74, float %212, float %211, !dbg !36
  %213 = fcmp olt float %.03.i75, 0x3FDA3D70A0000000, !dbg !36
  %t.0.i76 = select i1 %213, float 0.000000e+00, float %209, !dbg !36
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %216 = fcmp oeq float %t.0.i76, 1.280000e+02, !dbg !36
  %j.0.i77 = select i1 %216, float 1.270000e+02, float %t.0.i76, !dbg !36
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i78 = icmp eq i32 %222, 0, !dbg !36
  br i1 %.not8.i78, label %225, label %223, !dbg !36

223:                                              ; preds = %__nv_expm1f.exit73
  %224 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i77) #3, !dbg !36
  br label %__nv_expm1f.exit100, !dbg !36

225:                                              ; preds = %__nv_expm1f.exit73
  %226 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i77) #3, !dbg !36
  br label %__nv_expm1f.exit100, !dbg !36

__nv_expm1f.exit100:                              ; preds = %223, %225
  %.0.i79 = phi float [ %224, %223 ], [ %226, %225 ], !dbg !36
  %227 = fcmp oeq <4 x float> %143, zeroinitializer, !dbg !36
  %228 = fadd float %186, %186, !dbg !36
  %229 = fcmp olt float %j.0.i50, -2.500000e+01, !dbg !36
  %230 = fcmp ogt float %j.0.i50, 1.280000e+02, !dbg !36
  %.not9.i67 = icmp eq i32 %206, 0, !dbg !36
  %.not7.i53 = icmp eq i32 %200, 0, !dbg !36
  %.not6.i54 = icmp eq i32 %199, 0, !dbg !36
  %.not5.i55 = icmp eq i32 %198, 0, !dbg !36
  %.not4.i56 = icmp eq i32 %197, 0, !dbg !36
  %.not3.i57 = icmp eq i32 %196, 0, !dbg !36
  %.not2.i58 = icmp eq i32 %194, 0, !dbg !36
  %231 = fneg float %t.0.i49, !dbg !36
  %.not1.i59 = icmp eq i32 %193, 0, !dbg !36
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %231, float 0x3FE62E4000000000, float %186) #3, !dbg !36
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %231, float 0x3FE62E4000000000, float %186) #3, !dbg !36
  %.04.i60 = select i1 %.not1.i59, float %232, float %233, !dbg !36
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %231, float 0x3EB7F7D1C0000000, float %.04.i60) #3, !dbg !36
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %231, float 0x3EB7F7D1C0000000, float %.04.i60) #3, !dbg !36
  %.05.i61 = select i1 %.not2.i58, float %234, float %235, !dbg !36
  %236 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i61, float 0x3F812ACC60000000) #3, !dbg !36
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i61, float 0x3F812ACC60000000) #3, !dbg !36
  %.07.i62 = select i1 %.not3.i57, float %236, float %237, !dbg !36
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i62, float %.05.i61, float 0x3FA5557C60000000) #3, !dbg !36
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i62, float %.05.i61, float 0x3FA5557C60000000) #3, !dbg !36
  %.08.i63 = select i1 %.not4.i56, float %238, float %239, !dbg !36
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i63, float %.05.i61, float 0x3FC5553EC0000000) #3, !dbg !36
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i63, float %.05.i61, float 0x3FC5553EC0000000) #3, !dbg !36
  %.09.i64 = select i1 %.not5.i55, float %240, float %241, !dbg !36
  %242 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i64, float %.05.i61, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i64, float %.05.i61, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %.06.i65 = select i1 %.not6.i54, float %242, float %243, !dbg !36
  %244 = fmul float %.05.i61, %.06.i65, !dbg !36
  %245 = tail call float @llvm.nvvm.fma.rn.f(float %244, float %.05.i61, float %.05.i61) #3, !dbg !36
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %244, float %.05.i61, float %.05.i61) #3, !dbg !36
  %.01.i66 = select i1 %.not7.i53, float %245, float %246, !dbg !36
  %247 = fadd float %.0.i52, -1.000000e+00, !dbg !36
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i66, float %.0.i52, float %247) #3, !dbg !36
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i66, float %.0.i52, float %247) #3, !dbg !36
  %.02.i68 = select i1 %.not9.i67, float %248, float %249, !dbg !36
  %250 = fadd float %.02.i68, %.02.i68, !dbg !36
  %u.0.i69 = select i1 %195, float %250, float %.02.i68, !dbg !36
  %u.1.i70 = select i1 %230, float 0x7FF0000000000000, float %u.0.i69, !dbg !36
  %u.2.i71 = select i1 %229, float -1.000000e+00, float %u.1.i70, !dbg !36
  %251 = extractelement <4 x i1> %227, i64 3, !dbg !36
  %u.3.i72 = select i1 %251, float %228, float %u.2.i71, !dbg !36
  %252 = fadd float %165, %165, !dbg !36
  %253 = fcmp olt float %j.0.i23, -2.500000e+01, !dbg !36
  %254 = fcmp ogt float %j.0.i23, 1.280000e+02, !dbg !36
  %.not9.i40 = icmp eq i32 %185, 0, !dbg !36
  %.not7.i26 = icmp eq i32 %179, 0, !dbg !36
  %.not6.i27 = icmp eq i32 %178, 0, !dbg !36
  %.not5.i28 = icmp eq i32 %177, 0, !dbg !36
  %.not4.i29 = icmp eq i32 %176, 0, !dbg !36
  %.not3.i30 = icmp eq i32 %175, 0, !dbg !36
  %.not2.i31 = icmp eq i32 %173, 0, !dbg !36
  %255 = fneg float %t.0.i22, !dbg !36
  %.not1.i32 = icmp eq i32 %172, 0, !dbg !36
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %255, float 0x3FE62E4000000000, float %165) #3, !dbg !36
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %255, float 0x3FE62E4000000000, float %165) #3, !dbg !36
  %.04.i33 = select i1 %.not1.i32, float %256, float %257, !dbg !36
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %255, float 0x3EB7F7D1C0000000, float %.04.i33) #3, !dbg !36
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %255, float 0x3EB7F7D1C0000000, float %.04.i33) #3, !dbg !36
  %.05.i34 = select i1 %.not2.i31, float %258, float %259, !dbg !36
  %260 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i34, float 0x3F812ACC60000000) #3, !dbg !36
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i34, float 0x3F812ACC60000000) #3, !dbg !36
  %.07.i35 = select i1 %.not3.i30, float %260, float %261, !dbg !36
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i35, float %.05.i34, float 0x3FA5557C60000000) #3, !dbg !36
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i35, float %.05.i34, float 0x3FA5557C60000000) #3, !dbg !36
  %.08.i36 = select i1 %.not4.i29, float %262, float %263, !dbg !36
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i36, float %.05.i34, float 0x3FC5553EC0000000) #3, !dbg !36
  %265 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i36, float %.05.i34, float 0x3FC5553EC0000000) #3, !dbg !36
  %.09.i37 = select i1 %.not5.i28, float %264, float %265, !dbg !36
  %266 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i37, float %.05.i34, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i37, float %.05.i34, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %.06.i38 = select i1 %.not6.i27, float %266, float %267, !dbg !36
  %268 = fmul float %.05.i34, %.06.i38, !dbg !36
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %268, float %.05.i34, float %.05.i34) #3, !dbg !36
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %268, float %.05.i34, float %.05.i34) #3, !dbg !36
  %.01.i39 = select i1 %.not7.i26, float %269, float %270, !dbg !36
  %271 = fadd float %.0.i25, -1.000000e+00, !dbg !36
  %272 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i39, float %.0.i25, float %271) #3, !dbg !36
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i39, float %.0.i25, float %271) #3, !dbg !36
  %.02.i41 = select i1 %.not9.i40, float %272, float %273, !dbg !36
  %274 = fadd float %.02.i41, %.02.i41, !dbg !36
  %u.0.i42 = select i1 %174, float %274, float %.02.i41, !dbg !36
  %u.1.i43 = select i1 %254, float 0x7FF0000000000000, float %u.0.i42, !dbg !36
  %u.2.i44 = select i1 %253, float -1.000000e+00, float %u.1.i43, !dbg !36
  %275 = extractelement <4 x i1> %227, i64 2, !dbg !36
  %u.3.i45 = select i1 %275, float %252, float %u.2.i44, !dbg !36
  %276 = fadd float %144, %144, !dbg !36
  %277 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !36
  %278 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !36
  %.not9.i = icmp eq i32 %164, 0, !dbg !36
  %.not7.i = icmp eq i32 %158, 0, !dbg !36
  %.not6.i = icmp eq i32 %157, 0, !dbg !36
  %.not5.i = icmp eq i32 %156, 0, !dbg !36
  %.not4.i = icmp eq i32 %155, 0, !dbg !36
  %.not3.i = icmp eq i32 %154, 0, !dbg !36
  %.not2.i18 = icmp eq i32 %152, 0, !dbg !36
  %279 = fneg float %t.0.i, !dbg !36
  %.not1.i19 = icmp eq i32 %151, 0, !dbg !36
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %279, float 0x3FE62E4000000000, float %144) #3, !dbg !36
  %281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %279, float 0x3FE62E4000000000, float %144) #3, !dbg !36
  %.04.i = select i1 %.not1.i19, float %280, float %281, !dbg !36
  %282 = tail call float @llvm.nvvm.fma.rn.f(float %279, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !36
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %279, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !36
  %.05.i = select i1 %.not2.i18, float %282, float %283, !dbg !36
  %284 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !36
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !36
  %.07.i = select i1 %.not3.i, float %284, float %285, !dbg !36
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !36
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !36
  %.08.i = select i1 %.not4.i, float %286, float %287, !dbg !36
  %288 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !36
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !36
  %.09.i = select i1 %.not5.i, float %288, float %289, !dbg !36
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %.06.i = select i1 %.not6.i, float %290, float %291, !dbg !36
  %292 = fmul float %.05.i, %.06.i, !dbg !36
  %293 = tail call float @llvm.nvvm.fma.rn.f(float %292, float %.05.i, float %.05.i) #3, !dbg !36
  %294 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %292, float %.05.i, float %.05.i) #3, !dbg !36
  %.01.i = select i1 %.not7.i, float %293, float %294, !dbg !36
  %295 = fadd float %.0.i17, -1.000000e+00, !dbg !36
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i17, float %295) #3, !dbg !36
  %297 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i17, float %295) #3, !dbg !36
  %.02.i = select i1 %.not9.i, float %296, float %297, !dbg !36
  %298 = fadd float %.02.i, %.02.i, !dbg !36
  %u.0.i = select i1 %153, float %298, float %.02.i, !dbg !36
  %u.1.i = select i1 %278, float 0x7FF0000000000000, float %u.0.i, !dbg !36
  %u.2.i = select i1 %277, float -1.000000e+00, float %u.1.i, !dbg !36
  %299 = extractelement <4 x i1> %227, i64 1, !dbg !36
  %u.3.i = select i1 %299, float %276, float %u.2.i, !dbg !36
  %300 = fcmp ogt float %207, 0.000000e+00, !dbg !37
  %301 = fcmp ogt float %186, 0.000000e+00, !dbg !37
  %302 = fcmp ogt float %165, 0.000000e+00, !dbg !37
  %303 = fcmp ogt float %144, 0.000000e+00, !dbg !37
  %.not7.i80 = icmp eq i32 %221, 0, !dbg !36
  %.not6.i81 = icmp eq i32 %220, 0, !dbg !36
  %.not5.i82 = icmp eq i32 %219, 0, !dbg !36
  %.not4.i83 = icmp eq i32 %218, 0, !dbg !36
  %.not3.i84 = icmp eq i32 %217, 0, !dbg !36
  %.not2.i85 = icmp eq i32 %215, 0, !dbg !36
  %304 = fneg float %t.0.i76, !dbg !36
  %.not1.i86 = icmp eq i32 %214, 0, !dbg !36
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %304, float 0x3FE62E4000000000, float %207) #3, !dbg !36
  %306 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %304, float 0x3FE62E4000000000, float %207) #3, !dbg !36
  %.04.i87 = select i1 %.not1.i86, float %305, float %306, !dbg !36
  %307 = tail call float @llvm.nvvm.fma.rn.f(float %304, float 0x3EB7F7D1C0000000, float %.04.i87) #3, !dbg !36
  %308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %304, float 0x3EB7F7D1C0000000, float %.04.i87) #3, !dbg !36
  %.05.i88 = select i1 %.not2.i85, float %307, float %308, !dbg !36
  %309 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i88, float 0x3F812ACC60000000) #3, !dbg !36
  %310 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i88, float 0x3F812ACC60000000) #3, !dbg !36
  %.07.i89 = select i1 %.not3.i84, float %309, float %310, !dbg !36
  %311 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i89, float %.05.i88, float 0x3FA5557C60000000) #3, !dbg !36
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i89, float %.05.i88, float 0x3FA5557C60000000) #3, !dbg !36
  %.08.i90 = select i1 %.not4.i83, float %311, float %312, !dbg !36
  %313 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i90, float %.05.i88, float 0x3FC5553EC0000000) #3, !dbg !36
  %314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i90, float %.05.i88, float 0x3FC5553EC0000000) #3, !dbg !36
  %.09.i91 = select i1 %.not5.i82, float %313, float %314, !dbg !36
  %315 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i91, float %.05.i88, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %316 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i91, float %.05.i88, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %.06.i92 = select i1 %.not6.i81, float %315, float %316, !dbg !36
  %317 = fmul float %.05.i88, %.06.i92, !dbg !36
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %317, float %.05.i88, float %.05.i88) #3, !dbg !36
  %319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %317, float %.05.i88, float %.05.i88) #3, !dbg !36
  %.01.i93 = select i1 %.not7.i80, float %318, float %319, !dbg !36
  %320 = fadd float %.0.i79, -1.000000e+00, !dbg !36
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not9.i94 = icmp eq i32 %321, 0, !dbg !36
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i93, float %.0.i79, float %320) #3, !dbg !36
  %323 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i93, float %.0.i79, float %320) #3, !dbg !36
  %.02.i95 = select i1 %.not9.i94, float %323, float %322, !dbg !36
  %324 = fadd float %.02.i95, %.02.i95, !dbg !36
  %u.0.i96 = select i1 %216, float %324, float %.02.i95, !dbg !36
  %325 = fcmp ogt float %j.0.i77, 1.280000e+02, !dbg !36
  %u.1.i97 = select i1 %325, float 0x7FF0000000000000, float %u.0.i96, !dbg !36
  %326 = fcmp olt float %j.0.i77, -2.500000e+01, !dbg !36
  %u.2.i98 = select i1 %326, float -1.000000e+00, float %u.1.i97, !dbg !36
  %327 = fadd float %207, %207, !dbg !36
  %328 = extractelement <4 x i1> %227, i64 0, !dbg !36
  %u.3.i99 = select i1 %328, float %327, float %u.2.i98, !dbg !36
  %329 = select i1 %303, float %144, float %u.3.i, !dbg !38
  %330 = select i1 %302, float %165, float %u.3.i45, !dbg !38
  %331 = select i1 %301, float %186, float %u.3.i72, !dbg !38
  %332 = select i1 %300, float %207, float %u.3.i99, !dbg !38
  %bc = bitcast <4 x float> %79 to <4 x i32>, !dbg !39
  %333 = extractelement <4 x i32> %bc, i64 1, !dbg !39
  %bc101 = bitcast <4 x float> %79 to <4 x i32>, !dbg !39
  %334 = extractelement <4 x i32> %bc101, i64 2, !dbg !39
  %bc102 = bitcast <4 x float> %79 to <4 x i32>, !dbg !39
  %335 = extractelement <4 x i32> %bc102, i64 3, !dbg !39
  %bc103 = bitcast <4 x float> %79 to <4 x i32>, !dbg !39
  %336 = extractelement <4 x i32> %bc103, i64 0, !dbg !39
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %333, i32 %334, i32 %335, i32 %336, ptr addrspace(1) %18, i1 true) #3, !dbg !39
  %337 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !40
  %338 = bitcast float %329 to i32, !dbg !41
  %339 = bitcast float %330 to i32, !dbg !41
  %340 = bitcast float %331 to i32, !dbg !41
  %341 = bitcast float %332 to i32, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %338, i32 %339, i32 %340, i32 %341, ptr addrspace(1) %337, i1 true) #3, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cym32vmzjpuhxysauml6mfwmjzenuuwqqhstusgbrnllgdjsezis.py", directory: "inductor_cache/ym")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_16, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_16, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_16", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_16", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 27, scope: !7)
!16 = !DILocation(line: 26, column: 34, scope: !7)
!17 = !DILocation(line: 26, column: 39, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 35, scope: !7)
!24 = !DILocation(line: 30, column: 31, scope: !7)
!25 = !DILocation(line: 30, column: 36, scope: !7)
!26 = !DILocation(line: 31, column: 31, scope: !7)
!27 = !DILocation(line: 31, column: 36, scope: !7)
!28 = !DILocation(line: 32, column: 18, scope: !7)
!29 = !DILocation(line: 33, column: 18, scope: !7)
!30 = !DILocation(line: 35, column: 18, scope: !7)
!31 = !DILocation(line: 36, column: 26, scope: !7)
!32 = !DILocation(line: 38, column: 19, scope: !7)
!33 = !DILocation(line: 41, column: 19, scope: !7)
!34 = !DILocation(line: 42, column: 20, scope: !7)
!35 = !DILocation(line: 43, column: 20, scope: !7)
!36 = !DILocation(line: 47, column: 28, scope: !7)
!37 = !DILocation(line: 45, column: 20, scope: !7)
!38 = !DILocation(line: 49, column: 35, scope: !7)
!39 = !DILocation(line: 50, column: 39, scope: !7)
!40 = !DILocation(line: 51, column: 28, scope: !7)
!41 = !DILocation(line: 51, column: 40, scope: !7)
!42 = !DILocation(line: 51, column: 4, scope: !7)
