; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused__log_softmax_2(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #3, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 2, !dbg !12
  %9 = and i32 %8, 508, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !14
  %12 = shl i32 %11, 1, !dbg !15
  %13 = or disjoint i32 %12, 1, !dbg !16
  %14 = icmp slt i32 %12, 2, !dbg !17
  %15 = icmp slt i32 %13, 2, !dbg !17
  %.frozen = freeze i32 %10, !dbg !18
  %16 = sdiv i32 %.frozen, 4096, !dbg !18
  %17 = mul i32 %16, 4096, !dbg !19
  %.decomposed = sub i32 %.frozen, %17, !dbg !19
  %18 = shl i32 %13, 12, !dbg !20
  %19 = shl i32 %16, 13, !dbg !21
  %20 = add i32 %19, %.decomposed, !dbg !22
  %21 = add i32 %16, %11, !dbg !23
  %22 = shl i32 %21, 13, !dbg !23
  %23 = add i32 %22, %.decomposed, !dbg !23
  %24 = add i32 %20, %18, !dbg !23
  %25 = sext i32 %23 to i64, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !24
  %27 = sext i32 %24 to i64, !dbg !24
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !24
  %29 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %26, i1 %14) #3, !dbg !25
  %30 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %28, i1 %15) #3, !dbg !25
  %31 = sext i32 %20 to i64, !dbg !26
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !26
  %33 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %32, i1 true) #3, !dbg !27
  %34 = extractvalue { i32, i32, i32, i32 } %33, 0, !dbg !27
  %35 = extractvalue { i32, i32, i32, i32 } %33, 1, !dbg !27
  %36 = extractvalue { i32, i32, i32, i32 } %33, 2, !dbg !27
  %37 = extractvalue { i32, i32, i32, i32 } %33, 3, !dbg !27
  %38 = bitcast i32 %34 to float, !dbg !27
  %39 = bitcast i32 %35 to float, !dbg !27
  %40 = bitcast i32 %36 to float, !dbg !27
  %41 = bitcast i32 %37 to float, !dbg !27
  %42 = add i32 %20, 4096, !dbg !28
  %43 = sext i32 %42 to i64, !dbg !29
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !29
  %45 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %44, i1 true) #3, !dbg !30
  %46 = extractvalue { i32, i32, i32, i32 } %45, 0, !dbg !30
  %47 = extractvalue { i32, i32, i32, i32 } %45, 1, !dbg !30
  %48 = extractvalue { i32, i32, i32, i32 } %45, 2, !dbg !30
  %49 = extractvalue { i32, i32, i32, i32 } %45, 3, !dbg !30
  %50 = bitcast i32 %46 to float, !dbg !30
  %51 = bitcast i32 %47 to float, !dbg !30
  %52 = bitcast i32 %48 to float, !dbg !30
  %53 = bitcast i32 %49 to float, !dbg !30
  %54 = fmul float %38, 0x3FF7154760000000, !dbg !31
  %55 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %54) #3, !dbg !31
  %56 = fmul float %39, 0x3FF7154760000000, !dbg !31
  %57 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %56) #3, !dbg !31
  %58 = fmul float %40, 0x3FF7154760000000, !dbg !31
  %59 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %58) #3, !dbg !31
  %60 = fmul float %41, 0x3FF7154760000000, !dbg !31
  %61 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %60) #3, !dbg !31
  %62 = fmul float %50, 0x3FF7154760000000, !dbg !32
  %63 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %62) #3, !dbg !32
  %64 = fmul float %51, 0x3FF7154760000000, !dbg !32
  %65 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %64) #3, !dbg !32
  %66 = fmul float %52, 0x3FF7154760000000, !dbg !32
  %67 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %66) #3, !dbg !32
  %68 = fmul float %53, 0x3FF7154760000000, !dbg !32
  %69 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %68) #3, !dbg !32
  %70 = fadd float %55, %63, !dbg !33
  %71 = fadd float %57, %65, !dbg !33
  %72 = fadd float %59, %67, !dbg !33
  %73 = fadd float %61, %69, !dbg !33
  %74 = fcmp olt float %70, 0x3810000000000000, !dbg !34
  %75 = fmul float %70, 0x4160000000000000, !dbg !34
  %.02.i = select i1 %74, float %75, float %70, !dbg !34
  %i.i.0.i = select i1 %74, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %76 = bitcast float %.02.i to i32, !dbg !34
  %77 = add i32 %76, -1059760811, !dbg !34
  %78 = and i32 %77, -8388608, !dbg !34
  %79 = sub i32 %76, %78, !dbg !34
  %80 = bitcast i32 %79 to float, !dbg !34
  %81 = sitofp i32 %78 to float, !dbg !34
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i = icmp eq i32 %82, 0, !dbg !34
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %81, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !34
  %84 = tail call float @llvm.nvvm.fma.rn.f(float %81, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !34
  %.08.i = select i1 %.not.i, float %84, float %83, !dbg !34
  %85 = fadd float %80, -1.000000e+00, !dbg !34
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not1.i = icmp eq i32 %86, 0, !dbg !34
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %85, float 0x3FC2073EC0000000) #3, !dbg !34
  %88 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %85, float 0x3FC2073EC0000000) #3, !dbg !34
  %.010.i = select i1 %.not1.i, float %88, float %87, !dbg !34
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not2.i = icmp eq i32 %89, 0, !dbg !34
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %85, float 0xBFBF19B980000000) #3, !dbg !34
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %85, float 0xBFBF19B980000000) #3, !dbg !34
  %.011.i = select i1 %.not2.i, float %91, float %90, !dbg !34
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not3.i = icmp eq i32 %92, 0, !dbg !34
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %85, float 0x3FC1E52AA0000000) #3, !dbg !34
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %85, float 0x3FC1E52AA0000000) #3, !dbg !34
  %.012.i = select i1 %.not3.i, float %94, float %93, !dbg !34
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not4.i = icmp eq i32 %95, 0, !dbg !34
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %85, float 0xBFC55B1720000000) #3, !dbg !34
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %85, float 0xBFC55B1720000000) #3, !dbg !34
  %.09.i = select i1 %.not4.i, float %97, float %96, !dbg !34
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not5.i = icmp eq i32 %98, 0, !dbg !34
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %85, float 0x3FC99DA160000000) #3, !dbg !34
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %85, float 0x3FC99DA160000000) #3, !dbg !34
  %.05.i = select i1 %.not5.i, float %100, float %99, !dbg !34
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not6.i = icmp eq i32 %101, 0, !dbg !34
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %85, float 0xBFCFFFE440000000) #3, !dbg !34
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %85, float 0xBFCFFFE440000000) #3, !dbg !34
  %.01.i = select i1 %.not6.i, float %103, float %102, !dbg !34
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not7.i = icmp eq i32 %104, 0, !dbg !34
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %85, float 0x3FD5554F00000000) #3, !dbg !34
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %85, float 0x3FD5554F00000000) #3, !dbg !34
  %.0.i = select i1 %.not7.i, float %106, float %105, !dbg !34
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not8.i = icmp eq i32 %107, 0, !dbg !34
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %85, float -5.000000e-01) #3, !dbg !34
  %109 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %85, float -5.000000e-01) #3, !dbg !34
  %.07.i = select i1 %.not8.i, float %109, float %108, !dbg !34
  %110 = fmul float %85, %.07.i, !dbg !34
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not9.i = icmp eq i32 %111, 0, !dbg !34
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %110, float %85, float %85) #3, !dbg !34
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %110, float %85, float %85) #3, !dbg !34
  %.06.i = select i1 %.not9.i, float %113, float %112, !dbg !34
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not10.i = icmp eq i32 %114, 0, !dbg !34
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #3, !dbg !34
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #3, !dbg !34
  %.04.i = select i1 %.not10.i, float %116, float %115, !dbg !34
  %117 = icmp ugt i32 %76, 2139095039, !dbg !34
  br i1 %117, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !34

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not11.i = icmp eq i32 %118, 0, !dbg !34
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !34
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !34
  %.03.i = select i1 %.not11.i, float %120, float %119, !dbg !34
  br label %__nv_logf.exit, !dbg !34

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !34
  %121 = fcmp olt float %71, 0x3810000000000000, !dbg !34
  %122 = fmul float %71, 0x4160000000000000, !dbg !34
  %.02.i1 = select i1 %121, float %122, float %71, !dbg !34
  %i.i.0.i2 = select i1 %121, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %123 = bitcast float %.02.i1 to i32, !dbg !34
  %124 = add i32 %123, -1059760811, !dbg !34
  %125 = and i32 %124, -8388608, !dbg !34
  %126 = sub i32 %123, %125, !dbg !34
  %127 = bitcast i32 %126 to float, !dbg !34
  %128 = sitofp i32 %125 to float, !dbg !34
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i3 = icmp eq i32 %129, 0, !dbg !34
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %128, float 0x3E80000000000000, float %i.i.0.i2) #3, !dbg !34
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %128, float 0x3E80000000000000, float %i.i.0.i2) #3, !dbg !34
  %.08.i4 = select i1 %.not.i3, float %131, float %130, !dbg !34
  %132 = fadd float %127, -1.000000e+00, !dbg !34
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not1.i5 = icmp eq i32 %133, 0, !dbg !34
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %132, float 0x3FC2073EC0000000) #3, !dbg !34
  %135 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %132, float 0x3FC2073EC0000000) #3, !dbg !34
  %.010.i6 = select i1 %.not1.i5, float %135, float %134, !dbg !34
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not2.i7 = icmp eq i32 %136, 0, !dbg !34
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %132, float 0xBFBF19B980000000) #3, !dbg !34
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %132, float 0xBFBF19B980000000) #3, !dbg !34
  %.011.i8 = select i1 %.not2.i7, float %138, float %137, !dbg !34
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not3.i9 = icmp eq i32 %139, 0, !dbg !34
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %132, float 0x3FC1E52AA0000000) #3, !dbg !34
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %132, float 0x3FC1E52AA0000000) #3, !dbg !34
  %.012.i10 = select i1 %.not3.i9, float %141, float %140, !dbg !34
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not4.i11 = icmp eq i32 %142, 0, !dbg !34
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %132, float 0xBFC55B1720000000) #3, !dbg !34
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %132, float 0xBFC55B1720000000) #3, !dbg !34
  %.09.i12 = select i1 %.not4.i11, float %144, float %143, !dbg !34
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not5.i13 = icmp eq i32 %145, 0, !dbg !34
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %132, float 0x3FC99DA160000000) #3, !dbg !34
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %132, float 0x3FC99DA160000000) #3, !dbg !34
  %.05.i14 = select i1 %.not5.i13, float %147, float %146, !dbg !34
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not6.i15 = icmp eq i32 %148, 0, !dbg !34
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %132, float 0xBFCFFFE440000000) #3, !dbg !34
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %132, float 0xBFCFFFE440000000) #3, !dbg !34
  %.01.i16 = select i1 %.not6.i15, float %150, float %149, !dbg !34
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not7.i17 = icmp eq i32 %151, 0, !dbg !34
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %132, float 0x3FD5554F00000000) #3, !dbg !34
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %132, float 0x3FD5554F00000000) #3, !dbg !34
  %.0.i18 = select i1 %.not7.i17, float %153, float %152, !dbg !34
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not8.i19 = icmp eq i32 %154, 0, !dbg !34
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %132, float -5.000000e-01) #3, !dbg !34
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %132, float -5.000000e-01) #3, !dbg !34
  %.07.i20 = select i1 %.not8.i19, float %156, float %155, !dbg !34
  %157 = fmul float %132, %.07.i20, !dbg !34
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not9.i21 = icmp eq i32 %158, 0, !dbg !34
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %157, float %132, float %132) #3, !dbg !34
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %157, float %132, float %132) #3, !dbg !34
  %.06.i22 = select i1 %.not9.i21, float %160, float %159, !dbg !34
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not10.i23 = icmp eq i32 %161, 0, !dbg !34
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #3, !dbg !34
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #3, !dbg !34
  %.04.i24 = select i1 %.not10.i23, float %163, float %162, !dbg !34
  %164 = icmp ugt i32 %123, 2139095039, !dbg !34
  br i1 %164, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !34

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not11.i28 = icmp eq i32 %165, 0, !dbg !34
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !34
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !34
  %.03.i29 = select i1 %.not11.i28, float %167, float %166, !dbg !34
  br label %__nv_logf.exit30, !dbg !34

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !34
  %168 = fcmp olt float %72, 0x3810000000000000, !dbg !34
  %169 = fmul float %72, 0x4160000000000000, !dbg !34
  %.02.i31 = select i1 %168, float %169, float %72, !dbg !34
  %i.i.0.i32 = select i1 %168, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %170 = bitcast float %.02.i31 to i32, !dbg !34
  %171 = add i32 %170, -1059760811, !dbg !34
  %172 = and i32 %171, -8388608, !dbg !34
  %173 = sub i32 %170, %172, !dbg !34
  %174 = bitcast i32 %173 to float, !dbg !34
  %175 = sitofp i32 %172 to float, !dbg !34
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i33 = icmp eq i32 %176, 0, !dbg !34
  %177 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %175, float 0x3E80000000000000, float %i.i.0.i32) #3, !dbg !34
  %178 = tail call float @llvm.nvvm.fma.rn.f(float %175, float 0x3E80000000000000, float %i.i.0.i32) #3, !dbg !34
  %.08.i34 = select i1 %.not.i33, float %178, float %177, !dbg !34
  %179 = fadd float %174, -1.000000e+00, !dbg !34
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not1.i35 = icmp eq i32 %180, 0, !dbg !34
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %179, float 0x3FC2073EC0000000) #3, !dbg !34
  %182 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %179, float 0x3FC2073EC0000000) #3, !dbg !34
  %.010.i36 = select i1 %.not1.i35, float %182, float %181, !dbg !34
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not2.i37 = icmp eq i32 %183, 0, !dbg !34
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %179, float 0xBFBF19B980000000) #3, !dbg !34
  %185 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %179, float 0xBFBF19B980000000) #3, !dbg !34
  %.011.i38 = select i1 %.not2.i37, float %185, float %184, !dbg !34
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not3.i39 = icmp eq i32 %186, 0, !dbg !34
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %179, float 0x3FC1E52AA0000000) #3, !dbg !34
  %188 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %179, float 0x3FC1E52AA0000000) #3, !dbg !34
  %.012.i40 = select i1 %.not3.i39, float %188, float %187, !dbg !34
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not4.i41 = icmp eq i32 %189, 0, !dbg !34
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %179, float 0xBFC55B1720000000) #3, !dbg !34
  %191 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %179, float 0xBFC55B1720000000) #3, !dbg !34
  %.09.i42 = select i1 %.not4.i41, float %191, float %190, !dbg !34
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not5.i43 = icmp eq i32 %192, 0, !dbg !34
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %179, float 0x3FC99DA160000000) #3, !dbg !34
  %194 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %179, float 0x3FC99DA160000000) #3, !dbg !34
  %.05.i44 = select i1 %.not5.i43, float %194, float %193, !dbg !34
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not6.i45 = icmp eq i32 %195, 0, !dbg !34
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %179, float 0xBFCFFFE440000000) #3, !dbg !34
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %179, float 0xBFCFFFE440000000) #3, !dbg !34
  %.01.i46 = select i1 %.not6.i45, float %197, float %196, !dbg !34
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not7.i47 = icmp eq i32 %198, 0, !dbg !34
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %179, float 0x3FD5554F00000000) #3, !dbg !34
  %200 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %179, float 0x3FD5554F00000000) #3, !dbg !34
  %.0.i48 = select i1 %.not7.i47, float %200, float %199, !dbg !34
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not8.i49 = icmp eq i32 %201, 0, !dbg !34
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %179, float -5.000000e-01) #3, !dbg !34
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %179, float -5.000000e-01) #3, !dbg !34
  %.07.i50 = select i1 %.not8.i49, float %203, float %202, !dbg !34
  %204 = fmul float %179, %.07.i50, !dbg !34
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not9.i51 = icmp eq i32 %205, 0, !dbg !34
  %206 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %204, float %179, float %179) #3, !dbg !34
  %207 = tail call float @llvm.nvvm.fma.rn.f(float %204, float %179, float %179) #3, !dbg !34
  %.06.i52 = select i1 %.not9.i51, float %207, float %206, !dbg !34
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not10.i53 = icmp eq i32 %208, 0, !dbg !34
  %209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #3, !dbg !34
  %210 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #3, !dbg !34
  %.04.i54 = select i1 %.not10.i53, float %210, float %209, !dbg !34
  %211 = icmp ugt i32 %170, 2139095039, !dbg !34
  br i1 %211, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !34

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not11.i58 = icmp eq i32 %212, 0, !dbg !34
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !34
  %214 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !34
  %.03.i59 = select i1 %.not11.i58, float %214, float %213, !dbg !34
  br label %__nv_logf.exit60, !dbg !34

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !34
  %215 = fcmp olt float %73, 0x3810000000000000, !dbg !34
  %216 = fmul float %73, 0x4160000000000000, !dbg !34
  %.02.i61 = select i1 %215, float %216, float %73, !dbg !34
  %i.i.0.i62 = select i1 %215, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %217 = bitcast float %.02.i61 to i32, !dbg !34
  %218 = add i32 %217, -1059760811, !dbg !34
  %219 = and i32 %218, -8388608, !dbg !34
  %220 = sub i32 %217, %219, !dbg !34
  %221 = bitcast i32 %220 to float, !dbg !34
  %222 = sitofp i32 %219 to float, !dbg !34
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i63 = icmp eq i32 %223, 0, !dbg !34
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %222, float 0x3E80000000000000, float %i.i.0.i62) #3, !dbg !34
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %222, float 0x3E80000000000000, float %i.i.0.i62) #3, !dbg !34
  %.08.i64 = select i1 %.not.i63, float %225, float %224, !dbg !34
  %226 = fadd float %221, -1.000000e+00, !dbg !34
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not1.i65 = icmp eq i32 %227, 0, !dbg !34
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %226, float 0x3FC2073EC0000000) #3, !dbg !34
  %229 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %226, float 0x3FC2073EC0000000) #3, !dbg !34
  %.010.i66 = select i1 %.not1.i65, float %229, float %228, !dbg !34
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not2.i67 = icmp eq i32 %230, 0, !dbg !34
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %226, float 0xBFBF19B980000000) #3, !dbg !34
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %226, float 0xBFBF19B980000000) #3, !dbg !34
  %.011.i68 = select i1 %.not2.i67, float %232, float %231, !dbg !34
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not3.i69 = icmp eq i32 %233, 0, !dbg !34
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %226, float 0x3FC1E52AA0000000) #3, !dbg !34
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %226, float 0x3FC1E52AA0000000) #3, !dbg !34
  %.012.i70 = select i1 %.not3.i69, float %235, float %234, !dbg !34
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not4.i71 = icmp eq i32 %236, 0, !dbg !34
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %226, float 0xBFC55B1720000000) #3, !dbg !34
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %226, float 0xBFC55B1720000000) #3, !dbg !34
  %.09.i72 = select i1 %.not4.i71, float %238, float %237, !dbg !34
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not5.i73 = icmp eq i32 %239, 0, !dbg !34
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %226, float 0x3FC99DA160000000) #3, !dbg !34
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %226, float 0x3FC99DA160000000) #3, !dbg !34
  %.05.i74 = select i1 %.not5.i73, float %241, float %240, !dbg !34
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not6.i75 = icmp eq i32 %242, 0, !dbg !34
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %226, float 0xBFCFFFE440000000) #3, !dbg !34
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %226, float 0xBFCFFFE440000000) #3, !dbg !34
  %.01.i76 = select i1 %.not6.i75, float %244, float %243, !dbg !34
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not7.i77 = icmp eq i32 %245, 0, !dbg !34
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %226, float 0x3FD5554F00000000) #3, !dbg !34
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %226, float 0x3FD5554F00000000) #3, !dbg !34
  %.0.i78 = select i1 %.not7.i77, float %247, float %246, !dbg !34
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not8.i79 = icmp eq i32 %248, 0, !dbg !34
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %226, float -5.000000e-01) #3, !dbg !34
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %226, float -5.000000e-01) #3, !dbg !34
  %.07.i80 = select i1 %.not8.i79, float %250, float %249, !dbg !34
  %251 = fmul float %226, %.07.i80, !dbg !34
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not9.i81 = icmp eq i32 %252, 0, !dbg !34
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %251, float %226, float %226) #3, !dbg !34
  %254 = tail call float @llvm.nvvm.fma.rn.f(float %251, float %226, float %226) #3, !dbg !34
  %.06.i82 = select i1 %.not9.i81, float %254, float %253, !dbg !34
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not10.i83 = icmp eq i32 %255, 0, !dbg !34
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #3, !dbg !34
  %257 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #3, !dbg !34
  %.04.i84 = select i1 %.not10.i83, float %257, float %256, !dbg !34
  %258 = icmp ugt i32 %217, 2139095039, !dbg !34
  br i1 %258, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !34

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not11.i88 = icmp eq i32 %259, 0, !dbg !34
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !34
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !34
  %.03.i89 = select i1 %.not11.i88, float %261, float %260, !dbg !34
  br label %__nv_logf.exit90, !dbg !34

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !34
  %262 = fcmp oeq float %.02.i31, 0.000000e+00, !dbg !34
  %r.i.1.i56 = select i1 %262, float 0xFFF0000000000000, float %r.i.0.i55, !dbg !34
  %263 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !34
  %r.i.1.i26 = select i1 %263, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !34
  %264 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !34
  %r.i.1.i = select i1 %264, float 0xFFF0000000000000, float %r.i.0.i, !dbg !34
  %265 = extractvalue { i32, i32, i32, i32 } %30, 3, !dbg !25
  %266 = bitcast i32 %265 to float, !dbg !25
  %267 = extractvalue { i32, i32, i32, i32 } %30, 2, !dbg !25
  %268 = bitcast i32 %267 to float, !dbg !25
  %269 = extractvalue { i32, i32, i32, i32 } %30, 1, !dbg !25
  %270 = bitcast i32 %269 to float, !dbg !25
  %271 = extractvalue { i32, i32, i32, i32 } %30, 0, !dbg !25
  %272 = bitcast i32 %271 to float, !dbg !25
  %273 = extractvalue { i32, i32, i32, i32 } %29, 3, !dbg !25
  %274 = bitcast i32 %273 to float, !dbg !25
  %275 = extractvalue { i32, i32, i32, i32 } %29, 2, !dbg !25
  %276 = bitcast i32 %275 to float, !dbg !25
  %277 = extractvalue { i32, i32, i32, i32 } %29, 1, !dbg !25
  %278 = bitcast i32 %277 to float, !dbg !25
  %279 = extractvalue { i32, i32, i32, i32 } %29, 0, !dbg !25
  %280 = bitcast i32 %279 to float, !dbg !25
  %281 = and i32 %7, 127, !dbg !12
  %282 = or disjoint i32 %281, %6, !dbg !13
  %283 = or disjoint i32 %282, 384, !dbg !13
  %284 = sdiv i32 %283, 12288, !dbg !35
  %285 = or disjoint i32 %282, 256, !dbg !13
  %286 = sdiv i32 %285, 12288, !dbg !35
  %287 = or disjoint i32 %282, 128, !dbg !13
  %288 = sdiv i32 %287, 12288, !dbg !35
  %289 = sdiv i32 %282, 12288, !dbg !35
  %.frozen91 = freeze i32 %283, !dbg !18
  %290 = sdiv i32 %.frozen91, 4096, !dbg !18
  %291 = srem i32 %290, 3, !dbg !36
  %.frozen93 = freeze i32 %285, !dbg !18
  %292 = sdiv i32 %.frozen93, 4096, !dbg !18
  %293 = srem i32 %292, 3, !dbg !36
  %.frozen95 = freeze i32 %287, !dbg !18
  %294 = sdiv i32 %.frozen95, 4096, !dbg !18
  %295 = srem i32 %294, 3, !dbg !36
  %.frozen97 = freeze i32 %282, !dbg !18
  %296 = sdiv i32 %.frozen97, 4096, !dbg !18
  %297 = srem i32 %296, 3, !dbg !36
  %298 = mul i32 %290, 4096, !dbg !19
  %.decomposed92 = sub i32 %.frozen91, %298, !dbg !19
  %299 = mul i32 %292, 4096, !dbg !19
  %.decomposed94 = sub i32 %.frozen93, %299, !dbg !19
  %300 = mul i32 %294, 4096, !dbg !19
  %.decomposed96 = sub i32 %.frozen95, %300, !dbg !19
  %301 = mul i32 %296, 4096, !dbg !19
  %.decomposed98 = sub i32 %.frozen97, %301, !dbg !19
  %302 = fcmp oeq float %.02.i61, 0.000000e+00, !dbg !34
  %r.i.1.i86 = select i1 %302, float 0xFFF0000000000000, float %r.i.0.i85, !dbg !34
  %303 = fsub float %280, %r.i.1.i, !dbg !37
  %304 = fsub float %278, %r.i.1.i26, !dbg !37
  %305 = fsub float %276, %r.i.1.i56, !dbg !37
  %306 = fsub float %274, %r.i.1.i86, !dbg !37
  %307 = fsub float %272, %r.i.1.i, !dbg !37
  %308 = fsub float %270, %r.i.1.i26, !dbg !37
  %309 = fsub float %268, %r.i.1.i56, !dbg !37
  %310 = fsub float %266, %r.i.1.i86, !dbg !37
  %311 = add i32 %297, %11, !dbg !38
  %312 = shl i32 %311, 1, !dbg !38
  %313 = add i32 %295, %11, !dbg !38
  %314 = shl i32 %313, 1, !dbg !38
  %315 = add i32 %293, %11, !dbg !38
  %316 = shl i32 %315, 1, !dbg !38
  %317 = add i32 %291, %11, !dbg !38
  %318 = shl i32 %317, 1, !dbg !38
  %319 = mul nsw i32 %.decomposed98, 6, !dbg !39
  %320 = mul nsw i32 %.decomposed96, 6, !dbg !39
  %321 = mul nsw i32 %.decomposed94, 6, !dbg !39
  %322 = mul nsw i32 %.decomposed92, 6, !dbg !39
  %323 = mul i32 %289, 24576, !dbg !40
  %324 = mul i32 %288, 24576, !dbg !40
  %325 = mul i32 %286, 24576, !dbg !40
  %326 = mul i32 %284, 24576, !dbg !40
  %327 = add i32 %323, %319, !dbg !41
  %328 = add i32 %327, %312, !dbg !42
  %329 = add i32 %324, %320, !dbg !41
  %330 = add i32 %329, %314, !dbg !42
  %331 = add i32 %325, %321, !dbg !41
  %332 = add i32 %331, %316, !dbg !42
  %333 = add i32 %326, %322, !dbg !41
  %334 = add i32 %333, %318, !dbg !42
  %335 = sext i32 %328 to i64, !dbg !43
  %336 = getelementptr float, ptr addrspace(1) %1, i64 %335, !dbg !43
  %337 = sext i32 %330 to i64, !dbg !43
  %338 = getelementptr float, ptr addrspace(1) %1, i64 %337, !dbg !43
  %339 = sext i32 %332 to i64, !dbg !43
  %340 = getelementptr float, ptr addrspace(1) %1, i64 %339, !dbg !43
  %341 = sext i32 %334 to i64, !dbg !43
  %342 = getelementptr float, ptr addrspace(1) %1, i64 %341, !dbg !43
  %343 = shl i32 %7, 3, !dbg !44
  %344 = and i32 %343, 1016, !dbg !44
  %345 = shl i32 %7, 1, !dbg !44
  %346 = and i32 %345, 254, !dbg !44
  %347 = lshr exact i32 %344, 1, !dbg !44
  %348 = add nuw nsw i32 %347, %344, !dbg !44
  %349 = zext nneg i32 %348 to i64, !dbg !44
  %350 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %349, !dbg !44
  %351 = bitcast float %303 to <1 x i32>, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %350, <1 x i32> %351, i1 true) #3, !dbg !44
  %352 = or disjoint i32 %344, 2, !dbg !44
  %353 = lshr exact i32 %352, 1, !dbg !44
  %354 = add nuw nsw i32 %353, %352, !dbg !44
  %355 = zext nneg i32 %354 to i64, !dbg !44
  %356 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %355, !dbg !44
  %357 = bitcast float %304 to <1 x i32>, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %356, <1 x i32> %357, i1 true) #3, !dbg !44
  %358 = or disjoint i32 %344, 4, !dbg !44
  %359 = lshr exact i32 %358, 1, !dbg !44
  %360 = add nuw nsw i32 %359, %358, !dbg !44
  %361 = zext nneg i32 %360 to i64, !dbg !44
  %362 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %361, !dbg !44
  %363 = bitcast float %305 to <1 x i32>, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %362, <1 x i32> %363, i1 true) #3, !dbg !44
  %364 = or disjoint i32 %344, 6, !dbg !44
  %365 = lshr exact i32 %364, 1, !dbg !44
  %366 = add nuw nsw i32 %365, %364, !dbg !44
  %367 = zext nneg i32 %366 to i64, !dbg !44
  %368 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %367, !dbg !44
  %369 = bitcast float %306 to <1 x i32>, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %368, <1 x i32> %369, i1 true) #3, !dbg !44
  %370 = or disjoint i32 %344, 1, !dbg !44
  %371 = add nuw nsw i32 %370, %347, !dbg !44
  %372 = zext nneg i32 %371 to i64, !dbg !44
  %373 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %372, !dbg !44
  %374 = bitcast float %307 to <1 x i32>, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %373, <1 x i32> %374, i1 true) #3, !dbg !44
  %375 = or disjoint i32 %344, 3, !dbg !44
  %376 = lshr i32 %375, 1, !dbg !44
  %377 = add nuw nsw i32 %376, %375, !dbg !44
  %378 = zext nneg i32 %377 to i64, !dbg !44
  %379 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %378, !dbg !44
  %380 = bitcast float %308 to <1 x i32>, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %379, <1 x i32> %380, i1 true) #3, !dbg !44
  %381 = or disjoint i32 %344, 5, !dbg !44
  %382 = lshr i32 %381, 1, !dbg !44
  %383 = add nuw nsw i32 %382, %381, !dbg !44
  %384 = zext nneg i32 %383 to i64, !dbg !44
  %385 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %384, !dbg !44
  %386 = bitcast float %309 to <1 x i32>, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %385, <1 x i32> %386, i1 true) #3, !dbg !44
  %387 = or disjoint i32 %344, 7, !dbg !44
  %388 = lshr i32 %387, 1, !dbg !44
  %389 = add nuw nsw i32 %388, %387, !dbg !44
  %390 = zext nneg i32 %389 to i64, !dbg !44
  %391 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %390, !dbg !44
  %392 = bitcast float %310 to <1 x i32>, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %391, <1 x i32> %392, i1 true) #3, !dbg !44
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %393 = lshr exact i32 %346, 1, !dbg !44
  %394 = add nuw nsw i32 %393, %346, !dbg !44
  %395 = zext nneg i32 %394 to i64, !dbg !44
  %396 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %395, !dbg !44
  %397 = load i32, ptr addrspace(3) %396, align 4, !dbg !44
  %398 = or disjoint i32 %346, 1, !dbg !44
  %399 = add nuw nsw i32 %398, %393, !dbg !44
  %400 = zext nneg i32 %399 to i64, !dbg !44
  %401 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %400, !dbg !44
  %402 = load i32, ptr addrspace(3) %401, align 4, !dbg !44
  %403 = or disjoint i32 %346, 256, !dbg !44
  %404 = lshr exact i32 %403, 1, !dbg !44
  %405 = add nuw nsw i32 %404, %403, !dbg !44
  %406 = zext nneg i32 %405 to i64, !dbg !44
  %407 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %406, !dbg !44
  %408 = load i32, ptr addrspace(3) %407, align 4, !dbg !44
  %409 = or disjoint i32 %346, 257, !dbg !44
  %410 = lshr i32 %409, 1, !dbg !44
  %411 = add nuw nsw i32 %410, %409, !dbg !44
  %412 = zext nneg i32 %411 to i64, !dbg !44
  %413 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %412, !dbg !44
  %414 = load i32, ptr addrspace(3) %413, align 4, !dbg !44
  %415 = or disjoint i32 %346, 512, !dbg !44
  %416 = lshr exact i32 %415, 1, !dbg !44
  %417 = add nuw nsw i32 %416, %415, !dbg !44
  %418 = zext nneg i32 %417 to i64, !dbg !44
  %419 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %418, !dbg !44
  %420 = load i32, ptr addrspace(3) %419, align 4, !dbg !44
  %421 = or disjoint i32 %346, 513, !dbg !44
  %422 = lshr i32 %421, 1, !dbg !44
  %423 = add nuw nsw i32 %422, %421, !dbg !44
  %424 = zext nneg i32 %423 to i64, !dbg !44
  %425 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %424, !dbg !44
  %426 = load i32, ptr addrspace(3) %425, align 4, !dbg !44
  %427 = or disjoint i32 %346, 768, !dbg !44
  %428 = lshr exact i32 %427, 1, !dbg !44
  %429 = add nuw nsw i32 %428, %427, !dbg !44
  %430 = zext nneg i32 %429 to i64, !dbg !44
  %431 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %430, !dbg !44
  %432 = load i32, ptr addrspace(3) %431, align 4, !dbg !44
  %433 = or disjoint i32 %346, 769, !dbg !44
  %434 = lshr i32 %433, 1, !dbg !44
  %435 = add nuw nsw i32 %434, %433, !dbg !44
  %436 = zext nneg i32 %435 to i64, !dbg !44
  %437 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %436, !dbg !44
  %438 = load i32, ptr addrspace(3) %437, align 4, !dbg !44
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %397, i32 %402, ptr addrspace(1) %336, i1 %14) #3, !dbg !44
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %408, i32 %414, ptr addrspace(1) %338, i1 %14) #3, !dbg !44
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %420, i32 %426, ptr addrspace(1) %340, i1 %14) #3, !dbg !44
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %432, i32 %438, ptr addrspace(1) %342, i1 %14) #3, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cn5iazcl7enpbxvlidg6nao3gs2n7yziwl3vqs6xsum4e4mobo5a.py", directory: "inductor_cache/n5")
!4 = !{ptr @triton_poi_fused__log_softmax_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__log_softmax_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__log_softmax_2", linkageName: "triton_poi_fused__log_softmax_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 28, scope: !7)
!15 = !DILocation(line: 25, column: 33, scope: !7)
!16 = !DILocation(line: 26, column: 23, scope: !7)
!17 = !DILocation(line: 27, column: 21, scope: !7)
!18 = !DILocation(line: 30, column: 19, scope: !7)
!19 = !DILocation(line: 29, column: 19, scope: !7)
!20 = !DILocation(line: 33, column: 40, scope: !7)
!21 = !DILocation(line: 33, column: 50, scope: !7)
!22 = !DILocation(line: 33, column: 35, scope: !7)
!23 = !DILocation(line: 33, column: 45, scope: !7)
!24 = !DILocation(line: 33, column: 30, scope: !7)
!25 = !DILocation(line: 33, column: 55, scope: !7)
!26 = !DILocation(line: 34, column: 30, scope: !7)
!27 = !DILocation(line: 34, column: 45, scope: !7)
!28 = !DILocation(line: 35, column: 42, scope: !7)
!29 = !DILocation(line: 35, column: 30, scope: !7)
!30 = !DILocation(line: 35, column: 52, scope: !7)
!31 = !DILocation(line: 36, column: 23, scope: !7)
!32 = !DILocation(line: 37, column: 23, scope: !7)
!33 = !DILocation(line: 38, column: 18, scope: !7)
!34 = !DILocation(line: 39, column: 23, scope: !7)
!35 = !DILocation(line: 32, column: 19, scope: !7)
!36 = !DILocation(line: 31, column: 29, scope: !7)
!37 = !DILocation(line: 40, column: 18, scope: !7)
!38 = !DILocation(line: 41, column: 30, scope: !7)
!39 = !DILocation(line: 41, column: 39, scope: !7)
!40 = !DILocation(line: 41, column: 50, scope: !7)
!41 = !DILocation(line: 41, column: 37, scope: !7)
!42 = !DILocation(line: 41, column: 44, scope: !7)
!43 = !DILocation(line: 41, column: 25, scope: !7)
!44 = !DILocation(line: 41, column: 61, scope: !7)
!45 = !DILocation(line: 41, column: 4, scope: !7)
