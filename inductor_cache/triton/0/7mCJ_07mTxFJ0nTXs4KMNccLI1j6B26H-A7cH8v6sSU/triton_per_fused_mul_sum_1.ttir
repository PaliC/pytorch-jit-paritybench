#loc = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0)
#loc1 = loc(unknown)
#loc46 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":52:26)
#loc57 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":62:26)
#loc61 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":66:26)
#loc79 = loc(callsite(#loc1 at #loc46))
#loc90 = loc(callsite(#loc1 at #loc57))
#loc92 = loc(callsite(#loc1 at #loc61))
module {
  tt.func public @triton_per_fused_mul_sum_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":19:0)) attributes {noinline = false} {
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999996E-13> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.remsi %0, %c4_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c16_i32 : i32 loc(#loc7)
    %7 = arith.divsi %0, %c4_i32 : i32 loc(#loc8)
    %8 = arith.muli %5, %c16_i32 : i32 loc(#loc9)
    %9 = tt.splat %8 : i32 -> tensor<1x16xi32> loc(#loc10)
    %10 = arith.addi %4, %9 : tensor<1x16xi32> loc(#loc10)
    %11 = arith.muli %6, %c64_i32 : i32 loc(#loc11)
    %12 = tt.splat %11 : i32 -> tensor<1x16xi32> loc(#loc12)
    %13 = arith.addi %10, %12 : tensor<1x16xi32> loc(#loc12)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc13)
    %15 = tt.addptr %14, %13 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc13)
    %16 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc14)
    %17 = tt.load %15, %16, %cst_0 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc14)
    %18 = arith.muli %6, %c4_i32 : i32 loc(#loc15)
    %19 = arith.addi %5, %18 : i32 loc(#loc16)
    %20 = tt.addptr %arg1, %19 : !tt.ptr<f32>, i32 loc(#loc17)
    %21 = tt.splat %20 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.load %21, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc18)
    %23 = arith.muli %7, %c16_i32 : i32 loc(#loc19)
    %24 = tt.splat %23 : i32 -> tensor<1x16xi32> loc(#loc20)
    %25 = arith.addi %4, %24 : tensor<1x16xi32> loc(#loc20)
    %26 = tt.addptr %14, %25 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc21)
    %27 = tt.load %26, %16, %cst_0 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc22)
    %28 = tt.addptr %arg1, %7 : !tt.ptr<f32>, i32 loc(#loc23)
    %29 = tt.splat %28 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc23)
    %30 = tt.load %29, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc24)
    %31 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc25)
    %32 = tt.addptr %31, %13 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc25)
    %33 = tt.load %32, %16, %cst_0 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc26)
    %34 = tt.addptr %arg3, %19 : !tt.ptr<f32>, i32 loc(#loc27)
    %35 = tt.splat %34 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc27)
    %36 = tt.load %35, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc28)
    %37 = tt.addptr %31, %25 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc29)
    %38 = tt.load %37, %16, %cst_0 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc30)
    %39 = tt.addptr %arg3, %7 : !tt.ptr<f32>, i32 loc(#loc31)
    %40 = tt.splat %39 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc31)
    %41 = tt.load %40, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc32)
    %42 = tt.extern_elementwise %22 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc33)
    %43 = arith.cmpf ogt, %42, %cst : tensor<1x1xf32> loc(#loc70)
    %44 = arith.cmpf une, %42, %42 : tensor<1x1xf32> loc(#loc71)
    %45 = arith.ori %43, %44 : tensor<1x1xi1> loc(#loc72)
    %46 = arith.select %45, %42, %cst : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc73)
    %47 = tt.broadcast %46 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc39)
    %48 = arith.divf %17, %47 : tensor<1x16xf32> loc(#loc39)
    %49 = tt.extern_elementwise %30 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc40)
    %50 = arith.cmpf ogt, %49, %cst : tensor<1x1xf32> loc(#loc74)
    %51 = arith.cmpf une, %49, %49 : tensor<1x1xf32> loc(#loc75)
    %52 = arith.ori %50, %51 : tensor<1x1xi1> loc(#loc76)
    %53 = arith.select %52, %49, %cst : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc77)
    %54 = tt.broadcast %53 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc42)
    %55 = arith.divf %27, %54 : tensor<1x16xf32> loc(#loc42)
    %56 = arith.mulf %48, %55 : tensor<1x16xf32> loc(#loc43)
    %57 = arith.select %16, %56, %cst_0 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc44)
    %58 = "tt.reduce"(%57) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc46)), %arg10: f32 loc(callsite(#loc1 at #loc46))):
      %88 = arith.addf %arg9, %arg10 : f32 loc(#loc93)
      tt.reduce.return %88 : f32 loc(#loc78)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc78)
    %59 = tt.expand_dims %58 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc48)
    %60 = tt.extern_elementwise %36 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc49)
    %61 = arith.cmpf ogt, %60, %cst : tensor<1x1xf32> loc(#loc81)
    %62 = arith.cmpf une, %60, %60 : tensor<1x1xf32> loc(#loc82)
    %63 = arith.ori %61, %62 : tensor<1x1xi1> loc(#loc83)
    %64 = arith.select %63, %60, %cst : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc84)
    %65 = tt.broadcast %64 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc51)
    %66 = arith.divf %33, %65 : tensor<1x16xf32> loc(#loc51)
    %67 = tt.extern_elementwise %41 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc52)
    %68 = arith.cmpf ogt, %67, %cst : tensor<1x1xf32> loc(#loc85)
    %69 = arith.cmpf une, %67, %67 : tensor<1x1xf32> loc(#loc86)
    %70 = arith.ori %68, %69 : tensor<1x1xi1> loc(#loc87)
    %71 = arith.select %70, %67, %cst : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc88)
    %72 = tt.broadcast %71 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc54)
    %73 = arith.divf %38, %72 : tensor<1x16xf32> loc(#loc54)
    %74 = arith.mulf %66, %73 : tensor<1x16xf32> loc(#loc55)
    %75 = arith.select %16, %74, %cst_0 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc56)
    %76 = "tt.reduce"(%75) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc57)), %arg10: f32 loc(callsite(#loc1 at #loc57))):
      %88 = arith.addf %arg9, %arg10 : f32 loc(#loc94)
      tt.reduce.return %88 : f32 loc(#loc89)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc89)
    %77 = tt.expand_dims %76 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc58)
    %78 = arith.mulf %66, %55 : tensor<1x16xf32> loc(#loc59)
    %79 = arith.select %16, %78, %cst_0 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc60)
    %80 = "tt.reduce"(%79) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc61)), %arg10: f32 loc(callsite(#loc1 at #loc61))):
      %88 = arith.addf %arg9, %arg10 : f32 loc(#loc95)
      tt.reduce.return %88 : f32 loc(#loc91)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc91)
    %81 = tt.expand_dims %80 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc62)
    %82 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc63)
    %83 = tt.splat %82 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc63)
    tt.store %83, %59, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc64)
    %84 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc65)
    %85 = tt.splat %84 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc65)
    tt.store %85, %77, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc66)
    %86 = tt.addptr %arg6, %0 : !tt.ptr<f32>, i32 loc(#loc67)
    %87 = tt.splat %86 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc67)
    tt.store %87, %81, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc68)
    tt.return loc(#loc69)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":23:28)
#loc3 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":25:21)
#loc4 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":26:26)
#loc5 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":26:34)
#loc6 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":30:19)
#loc7 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":31:19)
#loc8 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":32:19)
#loc9 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":34:38)
#loc10 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":34:35)
#loc11 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":34:46)
#loc12 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":34:43)
#loc13 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":34:30)
#loc14 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":34:51)
#loc15 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":35:37)
#loc16 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":35:35)
#loc17 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":35:30)
#loc18 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":35:42)
#loc19 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":36:38)
#loc20 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":36:35)
#loc21 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":36:30)
#loc22 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":36:43)
#loc23 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":37:30)
#loc24 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":37:35)
#loc25 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":38:31)
#loc26 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":38:52)
#loc27 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":39:31)
#loc28 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":39:43)
#loc29 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":40:31)
#loc30 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":40:44)
#loc31 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":41:31)
#loc32 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":41:36)
#loc33 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":42:26)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc35 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":44:40)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc39 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":45:18)
#loc40 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":46:26)
#loc41 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":47:40)
#loc42 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":48:19)
#loc43 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":49:19)
#loc44 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":51:35)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc48 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":52:29)
#loc49 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":53:27)
#loc50 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":54:42)
#loc51 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":55:20)
#loc52 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":56:27)
#loc53 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":57:42)
#loc54 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":58:20)
#loc55 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":59:20)
#loc56 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":61:35)
#loc58 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":62:29)
#loc59 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":63:20)
#loc60 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":65:35)
#loc62 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":66:29)
#loc63 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":67:25)
#loc64 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":67:37)
#loc65 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":68:25)
#loc66 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":68:37)
#loc67 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":69:25)
#loc68 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":69:37)
#loc69 = loc("inductor_cache/77/c77hhhx3yihyatzshnro3cufvi5cccsacrubokyecyxkncfco5s7.py":69:4)
#loc70 = loc(callsite(#loc34 at #loc35))
#loc71 = loc(callsite(#loc36 at #loc35))
#loc72 = loc(callsite(#loc37 at #loc35))
#loc73 = loc(callsite(#loc38 at #loc35))
#loc74 = loc(callsite(#loc34 at #loc41))
#loc75 = loc(callsite(#loc36 at #loc41))
#loc76 = loc(callsite(#loc37 at #loc41))
#loc77 = loc(callsite(#loc38 at #loc41))
#loc78 = loc(callsite(#loc45 at #loc46))
#loc80 = loc(callsite(#loc47 at #loc45))
#loc81 = loc(callsite(#loc34 at #loc50))
#loc82 = loc(callsite(#loc36 at #loc50))
#loc83 = loc(callsite(#loc37 at #loc50))
#loc84 = loc(callsite(#loc38 at #loc50))
#loc85 = loc(callsite(#loc34 at #loc53))
#loc86 = loc(callsite(#loc36 at #loc53))
#loc87 = loc(callsite(#loc37 at #loc53))
#loc88 = loc(callsite(#loc38 at #loc53))
#loc89 = loc(callsite(#loc45 at #loc57))
#loc91 = loc(callsite(#loc45 at #loc61))
#loc93 = loc(callsite(#loc80 at #loc46))
#loc94 = loc(callsite(#loc80 at #loc57))
#loc95 = loc(callsite(#loc80 at #loc61))
