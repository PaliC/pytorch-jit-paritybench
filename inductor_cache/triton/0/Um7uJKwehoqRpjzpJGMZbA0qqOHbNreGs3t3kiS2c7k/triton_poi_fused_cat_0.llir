; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 384, !dbg !14
  %12 = sdiv i32 %9, 96, !dbg !15
  %13 = srem i32 %9, 16, !dbg !16
  %14 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !17
  %15 = shufflevector <2 x i32> %14, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !17
  %16 = sdiv <2 x i32> %15, <i32 4, i32 16>, !dbg !17
  %17 = insertelement <4 x i32> poison, i32 %10, i64 0, !dbg !18
  %18 = insertelement <4 x i32> %17, i32 %9, i64 1, !dbg !18
  %19 = shufflevector <2 x i32> %16, <2 x i32> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !18
  %20 = shufflevector <4 x i32> %18, <4 x i32> %19, <4 x i32> <i32 0, i32 1, i32 4, i32 5>, !dbg !18
  %21 = srem <4 x i32> %20, <i32 4, i32 4, i32 4, i32 6>, !dbg !18
  %22 = extractelement <4 x i32> %21, i64 2, !dbg !19
  %23 = sitofp i32 %22 to float, !dbg !20
  %24 = fmul float %23, 0x3FE5555560000000, !dbg !21
  %25 = fadd float %24, -1.000000e+00, !dbg !22
  %26 = sub nsw i32 3, %22, !dbg !19
  %27 = uitofp nneg i32 %26 to float, !dbg !23
  %28 = fmul float %27, 0x3FE5555560000000, !dbg !24
  %29 = fsub float 1.000000e+00, %28, !dbg !25
  %30 = icmp slt <4 x i32> %21, <i32 2, i32 2, i32 2, i32 1>, !dbg !26
  %31 = extractelement <4 x i1> %30, i64 2, !dbg !27
  %32 = select i1 %31, float %25, float %29, !dbg !27
  %33 = extractelement <4 x i32> %21, i64 3, !dbg !28
  %34 = icmp eq i32 %33, 1, !dbg !29
  %35 = extractelement <4 x i32> %21, i64 1, !dbg !30
  %36 = sitofp i32 %35 to float, !dbg !31
  %37 = extractelement <4 x i32> %21, i64 0, !dbg !30
  %38 = sitofp i32 %37 to float, !dbg !31
  %39 = fmul float %36, 0x3FE5555560000000, !dbg !32
  %40 = fmul float %38, 0x3FE5555560000000, !dbg !32
  %41 = fadd float %39, -1.000000e+00, !dbg !33
  %42 = fadd float %40, -1.000000e+00, !dbg !33
  %43 = sub nsw i32 3, %35, !dbg !30
  %44 = sub nsw i32 3, %37, !dbg !30
  %45 = uitofp nneg i32 %43 to float, !dbg !34
  %46 = uitofp nneg i32 %44 to float, !dbg !34
  %47 = fmul float %45, 0x3FE5555560000000, !dbg !35
  %48 = fmul float %46, 0x3FE5555560000000, !dbg !35
  %49 = fsub float 1.000000e+00, %47, !dbg !36
  %50 = fsub float 1.000000e+00, %48, !dbg !36
  %51 = extractelement <4 x i1> %30, i64 1, !dbg !37
  %52 = select i1 %51, float %41, float %49, !dbg !37
  %53 = extractelement <4 x i1> %30, i64 0, !dbg !37
  %54 = select i1 %53, float %42, float %50, !dbg !37
  %55 = icmp sgt i32 %33, 1, !dbg !38
  %56 = shl nsw i32 %33, 4, !dbg !28
  %57 = shl nsw i32 %12, 6, !dbg !39
  %58 = add nsw i32 %13, -32, !dbg !28
  %59 = add nsw i32 %58, %57, !dbg !40
  %60 = add nsw i32 %59, %56, !dbg !41
  %61 = sext i32 %60 to i64, !dbg !42
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !42
  %63 = and i1 %11, %55, !dbg !43
  %64 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %62, i1 %63, i32 0, i1 %63, i32 0, i1 %63) #1, !dbg !44
  %65 = extractvalue { i32, i32 } %64, 0, !dbg !44
  %66 = extractvalue { i32, i32 } %64, 1, !dbg !44
  %67 = bitcast i32 %65 to float, !dbg !44
  %68 = bitcast i32 %66 to float, !dbg !44
  %69 = select i1 %34, float %52, float %67, !dbg !45
  %70 = select i1 %34, float %54, float %68, !dbg !45
  %71 = extractelement <4 x i1> %30, i64 3, !dbg !45
  %72 = select i1 %71, float %32, float %69, !dbg !45
  %73 = select i1 %71, float %32, float %70, !dbg !45
  %74 = sext i32 %9 to i64, !dbg !46
  %75 = getelementptr float, ptr addrspace(1) %1, i64 %74, !dbg !46
  %76 = bitcast float %72 to i32, !dbg !47
  %77 = bitcast float %73 to i32, !dbg !47
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %76, i32 %77, ptr addrspace(1) %75, i1 %11) #1, !dbg !47
  ret void, !dbg !48
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cgrkz63o72y67remhoku3tmzhyru6cljkituthxfxabf2oh3arbf.py", directory: "inductor_cache/gr")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 27, column: 19, scope: !7)
!16 = !DILocation(line: 28, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 21, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 43, column: 17, scope: !7)
!20 = !DILocation(line: 36, column: 19, scope: !7)
!21 = !DILocation(line: 40, column: 19, scope: !7)
!22 = !DILocation(line: 42, column: 20, scope: !7)
!23 = !DILocation(line: 44, column: 21, scope: !7)
!24 = !DILocation(line: 45, column: 20, scope: !7)
!25 = !DILocation(line: 47, column: 20, scope: !7)
!26 = !DILocation(line: 58, column: 20, scope: !7)
!27 = !DILocation(line: 48, column: 34, scope: !7)
!28 = !DILocation(line: 74, column: 40, scope: !7)
!29 = !DILocation(line: 54, column: 20, scope: !7)
!30 = !DILocation(line: 63, column: 17, scope: !7)
!31 = !DILocation(line: 56, column: 21, scope: !7)
!32 = !DILocation(line: 60, column: 20, scope: !7)
!33 = !DILocation(line: 62, column: 20, scope: !7)
!34 = !DILocation(line: 64, column: 21, scope: !7)
!35 = !DILocation(line: 65, column: 20, scope: !7)
!36 = !DILocation(line: 67, column: 20, scope: !7)
!37 = !DILocation(line: 68, column: 35, scope: !7)
!38 = !DILocation(line: 71, column: 20, scope: !7)
!39 = !DILocation(line: 74, column: 56, scope: !7)
!40 = !DILocation(line: 74, column: 36, scope: !7)
!41 = !DILocation(line: 74, column: 53, scope: !7)
!42 = !DILocation(line: 74, column: 31, scope: !7)
!43 = !DILocation(line: 74, column: 69, scope: !7)
!44 = !DILocation(line: 74, column: 61, scope: !7)
!45 = !DILocation(line: 0, scope: !7)
!46 = !DILocation(line: 77, column: 25, scope: !7)
!47 = !DILocation(line: 77, column: 37, scope: !7)
!48 = !DILocation(line: 77, column: 4, scope: !7)
