//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7 // -- Begin function triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7
.visible .entry triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7(
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_10,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_11,
	.param .u32 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_12,
	.param .u32 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_13
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<99>;
	.reg .b32 	%r<368>;
	.reg .f32 	%f<414>;
	.reg .b64 	%rd<195>;
	.loc	1 19 0                          // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:19:0

// %bb.0:
	ld.param.u64 	%rd111, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_0];
	ld.param.u64 	%rd112, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_1];
$L__tmp0:
	.loc	1 22 28                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:22:33
	shl.b32 	%r291, %r1, 5;
	ld.param.u64 	%rd113, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_2];
	ld.param.u64 	%rd114, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_3];
	.loc	1 23 44                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:23:44
	mov.u32 	%r292, %tid.x;
	shl.b32 	%r293, %r292, 2;
	ld.param.u64 	%rd115, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_4];
	and.b32  	%r294, %r293, 28;
	ld.param.u64 	%rd116, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_5];
	ld.param.u64 	%rd117, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_6];
	bfe.u32 	%r295, %r292, 3, 4;
	ld.param.u64 	%rd118, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_7];
	or.b32  	%r296, %r295, 16;
	ld.param.u64 	%rd119, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_8];
	.loc	1 23 23                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:23:23
	or.b32  	%r297, %r291, %r294;
	ld.param.u64 	%rd120, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_9];
	or.b32  	%r298, %r291, %r295;
	ld.param.u64 	%rd121, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_10];
	or.b32  	%r299, %r291, %r296;
	ld.param.u64 	%rd122, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_7_param_11];
	.loc	1 24 21                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:24:21
	setp.lt.s32 	%p95, %r297, 512;
	setp.lt.s32 	%p96, %r298, 512;
	setp.lt.s32 	%p97, %r299, 512;
	.loc	1 25 28                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:25:33
	shl.b32 	%r300, %r2, 5;
	.loc	1 26 23                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:26:23
	or.b32  	%r301, %r300, %r295;
	or.b32  	%r302, %r300, %r296;
	or.b32  	%r303, %r300, %r294;
	.loc	1 27 21                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:27:21
	setp.lt.s32 	%p1, %r301, 256;
	setp.lt.s32 	%p5, %r302, 256;
	setp.lt.s32 	%p98, %r303, 256;
	.loc	1 28 19                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:28:19
	shr.s32 	%r305, %r301, 31;
	shr.u32 	%r306, %r305, 28;
	add.s32 	%r307, %r301, %r306;
	shr.s32 	%r308, %r307, 4;
	shr.s32 	%r310, %r302, 31;
	shr.u32 	%r311, %r310, 28;
	add.s32 	%r312, %r302, %r311;
	shr.s32 	%r313, %r312, 4;
	.loc	1 29 19                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:29:19
	and.b32  	%r314, %r307, -16;
	sub.s32 	%r315, %r301, %r314;
	and.b32  	%r316, %r312, -16;
	sub.s32 	%r317, %r302, %r316;
	.loc	1 31 19                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:31:19
	shr.s32 	%r319, %r297, 31;
	shr.u32 	%r320, %r319, 25;
	add.s32 	%r321, %r297, %r320;
	shr.s32 	%r322, %r321, 7;
	.loc	1 30 19                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:30:19
	and.b32  	%r323, %r321, -128;
	sub.s32 	%r324, %r297, %r323;
	.loc	1 34 30                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:34:30
	mul.wide.s32 	%rd123, %r308, 8;
	add.s64 	%rd2, %rd111, %rd123;
	mul.wide.s32 	%rd124, %r313, 8;
	add.s64 	%rd10, %rd111, %rd124;
	.loc	1 34 35                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:34:35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd9, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd9 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd11 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:35:30
	mul.wide.s32 	%rd125, %r315, 8;
	add.s64 	%rd18, %rd112, %rd125;
	mul.wide.s32 	%rd126, %r317, 8;
	add.s64 	%rd26, %rd112, %rd126;
	.loc	1 35 35                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:35:35
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd23 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd25 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd27, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd27 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd29 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd31, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd31 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:36:31
	add.s64 	%rd34, %rd114, %rd125;
	add.s64 	%rd42, %rd114, %rd126;
	.loc	1 36 36                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:36:36
	// begin inline asm
	mov.u64 %rd33, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd33 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd35, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd35 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd37, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd37 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd39, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd39 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd41, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd41 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd43, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd43 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd45, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd45 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd47, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd47 }, [ %rd42 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:37:31
	mul.wide.s32 	%rd127, %r315, 4;
	add.s64 	%rd49, %rd115, %rd127;
	mul.wide.s32 	%rd128, %r317, 4;
	add.s64 	%rd53, %rd115, %rd128;
	.loc	1 37 36                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:37:36
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd49 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd49 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd49 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd49 + 0 ];
	// end inline asm
	mov.b32 	%f81, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r7 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r8 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r9 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r10 }, [ %rd53 + 0 ];
	// end inline asm
	mov.b32 	%f82, %r10;
	.loc	1 38 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:38:31
	add.s64 	%rd58, %rd116, %rd123;
	add.s64 	%rd66, %rd116, %rd124;
	.loc	1 38 36                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:38:36
	// begin inline asm
	mov.u64 %rd57, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd57 }, [ %rd58 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd59, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd59 }, [ %rd58 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd61, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd61 }, [ %rd58 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd63, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd63 }, [ %rd58 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd65, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd65 }, [ %rd66 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd67, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd67 }, [ %rd66 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd69, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd69 }, [ %rd66 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd71, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd71 }, [ %rd66 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:39:31
	mul.wide.s32 	%rd129, %r308, 4;
	add.s64 	%rd73, %rd117, %rd129;
	mul.wide.s32 	%rd130, %r313, 4;
	add.s64 	%rd77, %rd117, %rd130;
	.loc	1 39 36                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:39:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd73 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd73 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd73 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd73 + 0 ];
	// end inline asm
	mov.b32 	%f83, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r15 }, [ %rd77 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r16 }, [ %rd77 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r17 }, [ %rd77 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r18 }, [ %rd77 + 0 ];
	// end inline asm
	mov.b32 	%f84, %r18;
	.loc	1 46 32                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:46:32
	shr.u64 	%rd131, %rd23, 61;
	and.b64  	%rd132, %rd131, 4;
	add.s64 	%rd133, %rd132, %rd23;
	shr.u64 	%rd134, %rd31, 61;
	and.b64  	%rd135, %rd134, 4;
	add.s64 	%rd136, %rd135, %rd31;
	.loc	1 47 39                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:39
	shl.b64 	%rd137, %rd133, 7;
	shl.b64 	%rd138, %rd136, 7;
	.loc	1 47 62                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:62
	shl.b32 	%r325, %r322, 11;
	.loc	1 47 75                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:75
	and.pred  	%p49, %p95, %p1;
	and.pred  	%p50, %p95, %p5;
	and.pred  	%p83, %p96, %p98;
	and.pred  	%p84, %p97, %p98;
	.loc	1 47 57                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:57
	cvt.s64.s32 	%rd139, %r325;
	cvt.s64.s32 	%rd140, %r324;
	.loc	1 47 35                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:35
	add.s64 	%rd141, %rd137, %rd140;
	add.s64 	%rd142, %rd138, %rd140;
	.loc	1 43 32                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:43:32
	shr.u64 	%rd143, %rd39, 61;
	shr.u64 	%rd144, %rd7, 61;
	and.b64  	%rd145, %rd144, 4;
	and.b64  	%rd146, %rd143, 4;
	add.s64 	%rd147, %rd146, %rd39;
	add.s64 	%rd148, %rd145, %rd7;
	.loc	1 47 50                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:50
	shl.b64 	%rd149, %rd148, 9;
	shl.b64 	%rd150, %rd147, 7;
	.loc	1 47 46                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:46
	add.s64 	%rd151, %rd150, %rd140;
	add.s64 	%rd152, %rd149, %rd139;
	.loc	1 47 57                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:57
	add.s64 	%rd153, %rd152, %rd141;
	.loc	1 47 30                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:30
	shl.b64 	%rd154, %rd153, 2;
	add.s64 	%rd81, %rd113, %rd154;
	.loc	1 47 67                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:67
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p49 ld.global.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd81 + 0 ];
	// end inline asm
	.loc	1 43 32                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:43:32
	shr.u64 	%rd155, %rd47, 61;
	shr.u64 	%rd156, %rd15, 61;
	and.b64  	%rd157, %rd156, 4;
	and.b64  	%rd158, %rd155, 4;
	add.s64 	%rd159, %rd158, %rd47;
	add.s64 	%rd160, %rd157, %rd15;
	.loc	1 47 50                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:50
	shl.b64 	%rd161, %rd160, 9;
	shl.b64 	%rd162, %rd159, 7;
	.loc	1 47 46                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:46
	add.s64 	%rd163, %rd162, %rd140;
	add.s64 	%rd164, %rd161, %rd139;
	.loc	1 47 57                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:57
	add.s64 	%rd165, %rd164, %rd142;
	.loc	1 47 30                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:30
	shl.b64 	%rd166, %rd165, 2;
	add.s64 	%rd82, %rd113, %rd166;
	.loc	1 47 67                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:47:67
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p50 ld.global.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd82 + 0 ];
	// end inline asm
	.loc	1 51 59                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:51:59
	add.s64 	%rd167, %rd152, %rd151;
	add.s64 	%rd168, %rd164, %rd163;
	.loc	1 51 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:51:31
	shl.b64 	%rd169, %rd167, 2;
	add.s64 	%rd83, %rd113, %rd169;
	shl.b64 	%rd170, %rd168, 2;
	add.s64 	%rd84, %rd113, %rd170;
	.loc	1 51 69                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:51:69
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p49 ld.global.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd83 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p50 ld.global.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd84 + 0 ];
	// end inline asm
	.loc	1 57 35                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:57:35
	shr.u64 	%rd171, %rd63, 61;
	and.b64  	%rd172, %rd171, 4;
	add.s64 	%rd173, %rd172, %rd63;
	shr.u64 	%rd174, %rd71, 61;
	and.b64  	%rd175, %rd174, 4;
	add.s64 	%rd176, %rd175, %rd71;
	.loc	1 58 51                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:51
	shl.b64 	%rd177, %rd173, 9;
	shl.b64 	%rd178, %rd176, 9;
	.loc	1 58 47                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:47
	add.s64 	%rd179, %rd141, %rd139;
	.loc	1 58 59                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:59
	add.s64 	%rd180, %rd179, %rd177;
	.loc	1 58 47                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:47
	add.s64 	%rd181, %rd142, %rd139;
	.loc	1 58 59                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:59
	add.s64 	%rd182, %rd181, %rd178;
	.loc	1 58 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:31
	shl.b64 	%rd183, %rd180, 2;
	add.s64 	%rd85, %rd113, %rd183;
	shl.b64 	%rd184, %rd182, 2;
	add.s64 	%rd86, %rd113, %rd184;
	.loc	1 58 69                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:69
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p49 ld.global.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd85 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	@%p50 ld.global.v4.b32 { %r39, %r40, %r41, %r42 }, [ %rd86 + 0 ];
	// end inline asm
	.loc	1 59 48                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:59:48
	add.s64 	%rd185, %rd151, %rd139;
	.loc	1 59 60                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:59:60
	add.s64 	%rd186, %rd185, %rd177;
	.loc	1 59 48                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:59:48
	add.s64 	%rd187, %rd163, %rd139;
	.loc	1 59 60                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:59:60
	add.s64 	%rd188, %rd187, %rd178;
	.loc	1 59 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:59:31
	shl.b64 	%rd189, %rd186, 2;
	add.s64 	%rd87, %rd113, %rd189;
	shl.b64 	%rd190, %rd188, 2;
	add.s64 	%rd88, %rd113, %rd190;
	.loc	1 59 70                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:59:70
	// begin inline asm
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	@%p49 ld.global.v4.b32 { %r43, %r44, %r45, %r46 }, [ %rd87 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	@%p50 ld.global.v4.b32 { %r47, %r48, %r49, %r50 }, [ %rd88 + 0 ];
	// end inline asm
	.loc	1 58 69                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:69
	mov.b32 	%f85, %r19;
	mov.b32 	%f86, %r35;
	.loc	1 59 70                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:59:70
	mov.b32 	%f87, %r27;
	mov.b32 	%f88, %r43;
	.loc	1 60 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:60:20
	sub.f32 	%f89, %f88, %f86;
	sub.f32 	%f90, %f87, %f85;
	.loc	1 62 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:62:20
	fma.rn.f32 	%f91, %f90, %f81, %f85;
	fma.rn.f32 	%f92, %f89, %f81, %f86;
	.loc	1 58 69                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:69
	mov.b32 	%f93, %r20;
	mov.b32 	%f94, %r36;
	.loc	1 59 70                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:59:70
	mov.b32 	%f95, %r28;
	mov.b32 	%f96, %r44;
	.loc	1 60 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:60:20
	sub.f32 	%f97, %f96, %f94;
	sub.f32 	%f98, %f95, %f93;
	.loc	1 62 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:62:20
	fma.rn.f32 	%f99, %f98, %f81, %f93;
	fma.rn.f32 	%f100, %f97, %f81, %f94;
	.loc	1 58 69                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:69
	mov.b32 	%f101, %r21;
	mov.b32 	%f102, %r37;
	.loc	1 59 70                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:59:70
	mov.b32 	%f103, %r29;
	mov.b32 	%f104, %r45;
	.loc	1 60 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:60:20
	sub.f32 	%f105, %f104, %f102;
	sub.f32 	%f106, %f103, %f101;
	.loc	1 62 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:62:20
	fma.rn.f32 	%f107, %f106, %f81, %f101;
	fma.rn.f32 	%f108, %f105, %f81, %f102;
	.loc	1 58 69                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:69
	mov.b32 	%f109, %r22;
	mov.b32 	%f110, %r38;
	.loc	1 59 70                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:59:70
	mov.b32 	%f111, %r30;
	mov.b32 	%f112, %r46;
	.loc	1 60 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:60:20
	sub.f32 	%f113, %f112, %f110;
	sub.f32 	%f114, %f111, %f109;
	.loc	1 62 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:62:20
	fma.rn.f32 	%f115, %f114, %f81, %f109;
	fma.rn.f32 	%f116, %f113, %f81, %f110;
	.loc	1 58 69                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:69
	mov.b32 	%f117, %r23;
	mov.b32 	%f118, %r39;
	.loc	1 59 70                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:59:70
	mov.b32 	%f119, %r31;
	mov.b32 	%f120, %r47;
	.loc	1 60 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:60:20
	sub.f32 	%f121, %f120, %f118;
	sub.f32 	%f122, %f119, %f117;
	.loc	1 62 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:62:20
	fma.rn.f32 	%f123, %f122, %f82, %f117;
	fma.rn.f32 	%f124, %f121, %f82, %f118;
	.loc	1 58 69                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:69
	mov.b32 	%f125, %r24;
	mov.b32 	%f126, %r40;
	.loc	1 59 70                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:59:70
	mov.b32 	%f127, %r32;
	mov.b32 	%f128, %r48;
	.loc	1 60 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:60:20
	sub.f32 	%f129, %f128, %f126;
	sub.f32 	%f130, %f127, %f125;
	.loc	1 62 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:62:20
	fma.rn.f32 	%f131, %f130, %f82, %f125;
	fma.rn.f32 	%f132, %f129, %f82, %f126;
	.loc	1 58 69                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:69
	mov.b32 	%f133, %r25;
	mov.b32 	%f134, %r41;
	.loc	1 59 70                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:59:70
	mov.b32 	%f135, %r33;
	mov.b32 	%f136, %r49;
	.loc	1 60 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:60:20
	sub.f32 	%f137, %f136, %f134;
	sub.f32 	%f138, %f135, %f133;
	.loc	1 62 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:62:20
	fma.rn.f32 	%f139, %f138, %f82, %f133;
	fma.rn.f32 	%f140, %f137, %f82, %f134;
	.loc	1 58 69                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:58:69
	mov.b32 	%f141, %r26;
	mov.b32 	%f142, %r42;
	.loc	1 59 70                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:59:70
	mov.b32 	%f143, %r34;
	mov.b32 	%f144, %r50;
	.loc	1 60 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:60:20
	sub.f32 	%f145, %f144, %f142;
	sub.f32 	%f146, %f143, %f141;
	.loc	1 62 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:62:20
	fma.rn.f32 	%f147, %f146, %f82, %f141;
	fma.rn.f32 	%f148, %f145, %f82, %f142;
	.loc	1 63 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:63:20
	sub.f32 	%f149, %f92, %f91;
	sub.f32 	%f150, %f100, %f99;
	sub.f32 	%f151, %f108, %f107;
	sub.f32 	%f152, %f116, %f115;
	sub.f32 	%f153, %f124, %f123;
	sub.f32 	%f154, %f132, %f131;
	sub.f32 	%f155, %f140, %f139;
	sub.f32 	%f156, %f148, %f147;
	.loc	1 65 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:65:20
	fma.rn.f32 	%f157, %f149, %f83, %f91;
	fma.rn.f32 	%f158, %f150, %f83, %f99;
	fma.rn.f32 	%f159, %f151, %f83, %f107;
	fma.rn.f32 	%f160, %f152, %f83, %f115;
	fma.rn.f32 	%f161, %f153, %f84, %f123;
	fma.rn.f32 	%f162, %f154, %f84, %f131;
	fma.rn.f32 	%f163, %f155, %f84, %f139;
	fma.rn.f32 	%f164, %f156, %f84, %f147;
	mov.f32 	%f165, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f166, %f165, %f157;
	sub.f32 	%f167, %f165, %f158;
	sub.f32 	%f168, %f165, %f159;
	sub.f32 	%f169, %f165, %f160;
	sub.f32 	%f170, %f165, %f161;
	sub.f32 	%f171, %f165, %f162;
	sub.f32 	%f172, %f165, %f163;
	sub.f32 	%f173, %f165, %f164;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f166, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f167, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f168, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f169, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	mul.f32 	%f10, %f170, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f171, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	mul.f32 	%f14, %f172, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f173, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f174, %f1, 0f3F800000;
	add.f32 	%f175, %f3, 0f3F800000;
	add.f32 	%f176, %f5, 0f3F800000;
	add.f32 	%f177, %f7, 0f3F800000;
	add.f32 	%f178, %f9, 0f3F800000;
	add.f32 	%f179, %f11, 0f3F800000;
	add.f32 	%f180, %f13, 0f3F800000;
	add.f32 	%f181, %f15, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r53, %f174;
	mov.b32 	%r52, 1065353216;
	// begin inline asm
	div.full.f32 %r235, %r52, %r53;
	// end inline asm
	mov.b32 	%r56, %f175;
	// begin inline asm
	div.full.f32 %r236, %r52, %r56;
	// end inline asm
	mov.b32 	%r59, %f176;
	// begin inline asm
	div.full.f32 %r237, %r52, %r59;
	// end inline asm
	mov.b32 	%r62, %f177;
	// begin inline asm
	div.full.f32 %r238, %r52, %r62;
	// end inline asm
	mov.b32 	%r65, %f178;
	// begin inline asm
	div.full.f32 %r239, %r52, %r65;
	// end inline asm
	mov.b32 	%r68, %f179;
	// begin inline asm
	div.full.f32 %r240, %r52, %r68;
	// end inline asm
	mov.b32 	%r71, %f180;
	// begin inline asm
	div.full.f32 %r241, %r52, %r71;
	// end inline asm
	mov.b32 	%r74, %f181;
	// begin inline asm
	div.full.f32 %r242, %r52, %r74;
	// end inline asm
$L__tmp2:
	.loc	1 67 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:67:31
	add.s64 	%rd89, %rd118, %rd154;
	add.s64 	%rd90, %rd118, %rd166;
	.loc	1 67 68                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:67:68
	// begin inline asm
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	mov.u32 %r78, 0x0;
	@%p49 ld.global.v4.b32 { %r75, %r76, %r77, %r78 }, [ %rd89 + 0 ];
	// end inline asm
	mov.b32 	%f182, %r75;
	mov.b32 	%f183, %r76;
	mov.b32 	%f184, %r77;
	mov.b32 	%f185, %r78;
	// begin inline asm
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	mov.u32 %r82, 0x0;
	@%p50 ld.global.v4.b32 { %r79, %r80, %r81, %r82 }, [ %rd90 + 0 ];
	// end inline asm
	mov.b32 	%f186, %r79;
	mov.b32 	%f187, %r80;
	mov.b32 	%f188, %r81;
	mov.b32 	%f189, %r82;
	.loc	1 68 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:68:31
	add.s64 	%rd91, %rd119, %rd154;
	add.s64 	%rd92, %rd119, %rd166;
	.loc	1 68 68                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:68:68
	// begin inline asm
	mov.u32 %r83, 0x0;
	mov.u32 %r84, 0x0;
	mov.u32 %r85, 0x0;
	mov.u32 %r86, 0x0;
	@%p49 ld.global.v4.b32 { %r83, %r84, %r85, %r86 }, [ %rd91 + 0 ];
	// end inline asm
	mov.b32 	%f190, %r83;
	mov.b32 	%f191, %r84;
	mov.b32 	%f192, %r85;
	mov.b32 	%f193, %r86;
	// begin inline asm
	mov.u32 %r87, 0x0;
	mov.u32 %r88, 0x0;
	mov.u32 %r89, 0x0;
	mov.u32 %r90, 0x0;
	@%p50 ld.global.v4.b32 { %r87, %r88, %r89, %r90 }, [ %rd92 + 0 ];
	// end inline asm
	mov.b32 	%f194, %r87;
	mov.b32 	%f195, %r88;
	mov.b32 	%f196, %r89;
	mov.b32 	%f197, %r90;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f198, %f165, %f190;
	sub.f32 	%f199, %f165, %f191;
	sub.f32 	%f200, %f165, %f192;
	sub.f32 	%f201, %f165, %f193;
	sub.f32 	%f202, %f165, %f194;
	sub.f32 	%f203, %f165, %f195;
	sub.f32 	%f204, %f165, %f196;
	sub.f32 	%f205, %f165, %f197;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f18, %f198, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f17, %f18;
	// end inline asm
	mul.f32 	%f20, %f199, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f19, %f20;
	// end inline asm
	mul.f32 	%f22, %f200, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f21, %f22;
	// end inline asm
	mul.f32 	%f24, %f201, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f23, %f24;
	// end inline asm
	mul.f32 	%f26, %f202, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f25, %f26;
	// end inline asm
	mul.f32 	%f28, %f203, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f27, %f28;
	// end inline asm
	mul.f32 	%f30, %f204, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f29, %f30;
	// end inline asm
	mul.f32 	%f32, %f205, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f31, %f32;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f206, %f17, 0f3F800000;
	add.f32 	%f207, %f19, 0f3F800000;
	add.f32 	%f208, %f21, 0f3F800000;
	add.f32 	%f209, %f23, 0f3F800000;
	add.f32 	%f210, %f25, 0f3F800000;
	add.f32 	%f211, %f27, 0f3F800000;
	add.f32 	%f212, %f29, 0f3F800000;
	add.f32 	%f213, %f31, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r93, %f206;
	// begin inline asm
	div.full.f32 %r91, %r52, %r93;
	// end inline asm
	mov.b32 	%f214, %r91;
	mov.b32 	%r96, %f207;
	// begin inline asm
	div.full.f32 %r94, %r52, %r96;
	// end inline asm
	mov.b32 	%f215, %r94;
	mov.b32 	%r99, %f208;
	// begin inline asm
	div.full.f32 %r97, %r52, %r99;
	// end inline asm
	mov.b32 	%f216, %r97;
	mov.b32 	%r102, %f209;
	// begin inline asm
	div.full.f32 %r100, %r52, %r102;
	// end inline asm
	mov.b32 	%f217, %r100;
	mov.b32 	%r105, %f210;
	// begin inline asm
	div.full.f32 %r103, %r52, %r105;
	// end inline asm
	mov.b32 	%f218, %r103;
	mov.b32 	%r108, %f211;
	// begin inline asm
	div.full.f32 %r106, %r52, %r108;
	// end inline asm
	mov.b32 	%f219, %r106;
	mov.b32 	%r111, %f212;
	// begin inline asm
	div.full.f32 %r109, %r52, %r111;
	// end inline asm
	mov.b32 	%f220, %r109;
	mov.b32 	%r114, %f213;
	// begin inline asm
	div.full.f32 %r112, %r52, %r114;
	// end inline asm
	mov.b32 	%f221, %r112;
$L__tmp4:
	.loc	1 70 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:70:20
	mul.f32 	%f222, %f214, %f182;
	mul.f32 	%f223, %f215, %f183;
	mul.f32 	%f224, %f216, %f184;
	mul.f32 	%f225, %f217, %f185;
	mul.f32 	%f226, %f218, %f186;
	mul.f32 	%f227, %f219, %f187;
	mul.f32 	%f228, %f220, %f188;
	mul.f32 	%f229, %f221, %f189;
	.loc	1 71 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:71:31
	add.s64 	%rd93, %rd118, %rd169;
	add.s64 	%rd94, %rd118, %rd170;
	.loc	1 71 69                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:71:69
	// begin inline asm
	mov.u32 %r115, 0x0;
	mov.u32 %r116, 0x0;
	mov.u32 %r117, 0x0;
	mov.u32 %r118, 0x0;
	@%p49 ld.global.v4.b32 { %r115, %r116, %r117, %r118 }, [ %rd93 + 0 ];
	// end inline asm
	mov.b32 	%f230, %r115;
	mov.b32 	%f231, %r116;
	mov.b32 	%f232, %r117;
	mov.b32 	%f233, %r118;
	// begin inline asm
	mov.u32 %r119, 0x0;
	mov.u32 %r120, 0x0;
	mov.u32 %r121, 0x0;
	mov.u32 %r122, 0x0;
	@%p50 ld.global.v4.b32 { %r119, %r120, %r121, %r122 }, [ %rd94 + 0 ];
	// end inline asm
	mov.b32 	%f234, %r119;
	mov.b32 	%f235, %r120;
	mov.b32 	%f236, %r121;
	mov.b32 	%f237, %r122;
	.loc	1 72 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:72:31
	add.s64 	%rd95, %rd119, %rd169;
	add.s64 	%rd96, %rd119, %rd170;
	.loc	1 72 69                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:72:69
	// begin inline asm
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	mov.u32 %r125, 0x0;
	mov.u32 %r126, 0x0;
	@%p49 ld.global.v4.b32 { %r123, %r124, %r125, %r126 }, [ %rd95 + 0 ];
	// end inline asm
	mov.b32 	%f238, %r123;
	mov.b32 	%f239, %r124;
	mov.b32 	%f240, %r125;
	mov.b32 	%f241, %r126;
	// begin inline asm
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	mov.u32 %r129, 0x0;
	mov.u32 %r130, 0x0;
	@%p50 ld.global.v4.b32 { %r127, %r128, %r129, %r130 }, [ %rd96 + 0 ];
	// end inline asm
	mov.b32 	%f242, %r127;
	mov.b32 	%f243, %r128;
	mov.b32 	%f244, %r129;
	mov.b32 	%f245, %r130;
$L__tmp5:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f246, %f165, %f238;
	sub.f32 	%f247, %f165, %f239;
	sub.f32 	%f248, %f165, %f240;
	sub.f32 	%f249, %f165, %f241;
	sub.f32 	%f250, %f165, %f242;
	sub.f32 	%f251, %f165, %f243;
	sub.f32 	%f252, %f165, %f244;
	sub.f32 	%f253, %f165, %f245;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f34, %f246, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f33, %f34;
	// end inline asm
	mul.f32 	%f36, %f247, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f35, %f36;
	// end inline asm
	mul.f32 	%f38, %f248, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f37, %f38;
	// end inline asm
	mul.f32 	%f40, %f249, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f39, %f40;
	// end inline asm
	mul.f32 	%f42, %f250, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f41, %f42;
	// end inline asm
	mul.f32 	%f44, %f251, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f43, %f44;
	// end inline asm
	mul.f32 	%f46, %f252, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f45, %f46;
	// end inline asm
	mul.f32 	%f48, %f253, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f47, %f48;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f254, %f33, 0f3F800000;
	add.f32 	%f255, %f35, 0f3F800000;
	add.f32 	%f256, %f37, 0f3F800000;
	add.f32 	%f257, %f39, 0f3F800000;
	add.f32 	%f258, %f41, 0f3F800000;
	add.f32 	%f259, %f43, 0f3F800000;
	add.f32 	%f260, %f45, 0f3F800000;
	add.f32 	%f261, %f47, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r133, %f254;
	// begin inline asm
	div.full.f32 %r131, %r52, %r133;
	// end inline asm
	mov.b32 	%f262, %r131;
	mov.b32 	%r136, %f255;
	// begin inline asm
	div.full.f32 %r134, %r52, %r136;
	// end inline asm
	mov.b32 	%f263, %r134;
	mov.b32 	%r139, %f256;
	// begin inline asm
	div.full.f32 %r137, %r52, %r139;
	// end inline asm
	mov.b32 	%f264, %r137;
	mov.b32 	%r142, %f257;
	// begin inline asm
	div.full.f32 %r140, %r52, %r142;
	// end inline asm
	mov.b32 	%f265, %r140;
	mov.b32 	%r145, %f258;
	// begin inline asm
	div.full.f32 %r143, %r52, %r145;
	// end inline asm
	mov.b32 	%f266, %r143;
	mov.b32 	%r148, %f259;
	// begin inline asm
	div.full.f32 %r146, %r52, %r148;
	// end inline asm
	mov.b32 	%f267, %r146;
	mov.b32 	%r151, %f260;
	// begin inline asm
	div.full.f32 %r149, %r52, %r151;
	// end inline asm
	mov.b32 	%f268, %r149;
	mov.b32 	%r154, %f261;
	// begin inline asm
	div.full.f32 %r152, %r52, %r154;
	// end inline asm
	mov.b32 	%f269, %r152;
$L__tmp6:
	.loc	1 75 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:75:20
	neg.f32 	%f270, %f222;
	fma.rn.f32 	%f271, %f262, %f230, %f270;
	neg.f32 	%f272, %f223;
	fma.rn.f32 	%f273, %f263, %f231, %f272;
	neg.f32 	%f274, %f224;
	fma.rn.f32 	%f275, %f264, %f232, %f274;
	neg.f32 	%f276, %f225;
	fma.rn.f32 	%f277, %f265, %f233, %f276;
	neg.f32 	%f278, %f226;
	fma.rn.f32 	%f279, %f266, %f234, %f278;
	neg.f32 	%f280, %f227;
	fma.rn.f32 	%f281, %f267, %f235, %f280;
	neg.f32 	%f282, %f228;
	fma.rn.f32 	%f283, %f268, %f236, %f282;
	neg.f32 	%f284, %f229;
	fma.rn.f32 	%f285, %f269, %f237, %f284;
	.loc	1 77 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:77:20
	fma.rn.f32 	%f286, %f271, %f81, %f222;
	fma.rn.f32 	%f287, %f273, %f81, %f223;
	fma.rn.f32 	%f288, %f275, %f81, %f224;
	fma.rn.f32 	%f289, %f277, %f81, %f225;
	fma.rn.f32 	%f290, %f279, %f82, %f226;
	fma.rn.f32 	%f291, %f281, %f82, %f227;
	fma.rn.f32 	%f292, %f283, %f82, %f228;
	fma.rn.f32 	%f293, %f285, %f82, %f229;
	.loc	1 78 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:78:31
	add.s64 	%rd97, %rd118, %rd183;
	add.s64 	%rd98, %rd118, %rd184;
	.loc	1 78 69                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:78:69
	// begin inline asm
	mov.u32 %r155, 0x0;
	mov.u32 %r156, 0x0;
	mov.u32 %r157, 0x0;
	mov.u32 %r158, 0x0;
	@%p49 ld.global.v4.b32 { %r155, %r156, %r157, %r158 }, [ %rd97 + 0 ];
	// end inline asm
	mov.b32 	%f294, %r155;
	mov.b32 	%f295, %r156;
	mov.b32 	%f296, %r157;
	mov.b32 	%f297, %r158;
	// begin inline asm
	mov.u32 %r159, 0x0;
	mov.u32 %r160, 0x0;
	mov.u32 %r161, 0x0;
	mov.u32 %r162, 0x0;
	@%p50 ld.global.v4.b32 { %r159, %r160, %r161, %r162 }, [ %rd98 + 0 ];
	// end inline asm
	mov.b32 	%f298, %r159;
	mov.b32 	%f299, %r160;
	mov.b32 	%f300, %r161;
	mov.b32 	%f301, %r162;
	.loc	1 79 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:79:31
	add.s64 	%rd99, %rd119, %rd183;
	add.s64 	%rd100, %rd119, %rd184;
	.loc	1 79 69                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:79:69
	// begin inline asm
	mov.u32 %r163, 0x0;
	mov.u32 %r164, 0x0;
	mov.u32 %r165, 0x0;
	mov.u32 %r166, 0x0;
	@%p49 ld.global.v4.b32 { %r163, %r164, %r165, %r166 }, [ %rd99 + 0 ];
	// end inline asm
	mov.b32 	%f302, %r163;
	mov.b32 	%f303, %r164;
	mov.b32 	%f304, %r165;
	mov.b32 	%f305, %r166;
	// begin inline asm
	mov.u32 %r167, 0x0;
	mov.u32 %r168, 0x0;
	mov.u32 %r169, 0x0;
	mov.u32 %r170, 0x0;
	@%p50 ld.global.v4.b32 { %r167, %r168, %r169, %r170 }, [ %rd100 + 0 ];
	// end inline asm
	mov.b32 	%f306, %r167;
	mov.b32 	%f307, %r168;
	mov.b32 	%f308, %r169;
	mov.b32 	%f309, %r170;
$L__tmp7:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f310, %f165, %f302;
	sub.f32 	%f311, %f165, %f303;
	sub.f32 	%f312, %f165, %f304;
	sub.f32 	%f313, %f165, %f305;
	sub.f32 	%f314, %f165, %f306;
	sub.f32 	%f315, %f165, %f307;
	sub.f32 	%f316, %f165, %f308;
	sub.f32 	%f317, %f165, %f309;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f50, %f310, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f49, %f50;
	// end inline asm
	mul.f32 	%f52, %f311, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f51, %f52;
	// end inline asm
	mul.f32 	%f54, %f312, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f53, %f54;
	// end inline asm
	mul.f32 	%f56, %f313, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f55, %f56;
	// end inline asm
	mul.f32 	%f58, %f314, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f57, %f58;
	// end inline asm
	mul.f32 	%f60, %f315, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f59, %f60;
	// end inline asm
	mul.f32 	%f62, %f316, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f61, %f62;
	// end inline asm
	mul.f32 	%f64, %f317, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f63, %f64;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f318, %f49, 0f3F800000;
	add.f32 	%f319, %f51, 0f3F800000;
	add.f32 	%f320, %f53, 0f3F800000;
	add.f32 	%f321, %f55, 0f3F800000;
	add.f32 	%f322, %f57, 0f3F800000;
	add.f32 	%f323, %f59, 0f3F800000;
	add.f32 	%f324, %f61, 0f3F800000;
	add.f32 	%f325, %f63, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r173, %f318;
	// begin inline asm
	div.full.f32 %r171, %r52, %r173;
	// end inline asm
	mov.b32 	%f326, %r171;
	mov.b32 	%r176, %f319;
	// begin inline asm
	div.full.f32 %r174, %r52, %r176;
	// end inline asm
	mov.b32 	%f327, %r174;
	mov.b32 	%r179, %f320;
	// begin inline asm
	div.full.f32 %r177, %r52, %r179;
	// end inline asm
	mov.b32 	%f328, %r177;
	mov.b32 	%r182, %f321;
	// begin inline asm
	div.full.f32 %r180, %r52, %r182;
	// end inline asm
	mov.b32 	%f329, %r180;
	mov.b32 	%r185, %f322;
	// begin inline asm
	div.full.f32 %r183, %r52, %r185;
	// end inline asm
	mov.b32 	%f330, %r183;
	mov.b32 	%r188, %f323;
	// begin inline asm
	div.full.f32 %r186, %r52, %r188;
	// end inline asm
	mov.b32 	%f331, %r186;
	mov.b32 	%r191, %f324;
	// begin inline asm
	div.full.f32 %r189, %r52, %r191;
	// end inline asm
	mov.b32 	%f332, %r189;
	mov.b32 	%r194, %f325;
	// begin inline asm
	div.full.f32 %r192, %r52, %r194;
	// end inline asm
	mov.b32 	%f333, %r192;
$L__tmp8:
	.loc	1 81 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:81:20
	mul.f32 	%f334, %f326, %f294;
	mul.f32 	%f335, %f327, %f295;
	mul.f32 	%f336, %f328, %f296;
	mul.f32 	%f337, %f329, %f297;
	mul.f32 	%f338, %f330, %f298;
	mul.f32 	%f339, %f331, %f299;
	mul.f32 	%f340, %f332, %f300;
	mul.f32 	%f341, %f333, %f301;
	.loc	1 82 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:82:31
	add.s64 	%rd101, %rd118, %rd189;
	add.s64 	%rd102, %rd118, %rd190;
	.loc	1 82 70                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:82:70
	// begin inline asm
	mov.u32 %r195, 0x0;
	mov.u32 %r196, 0x0;
	mov.u32 %r197, 0x0;
	mov.u32 %r198, 0x0;
	@%p49 ld.global.v4.b32 { %r195, %r196, %r197, %r198 }, [ %rd101 + 0 ];
	// end inline asm
	mov.b32 	%f342, %r195;
	mov.b32 	%f343, %r196;
	mov.b32 	%f344, %r197;
	mov.b32 	%f345, %r198;
	// begin inline asm
	mov.u32 %r199, 0x0;
	mov.u32 %r200, 0x0;
	mov.u32 %r201, 0x0;
	mov.u32 %r202, 0x0;
	@%p50 ld.global.v4.b32 { %r199, %r200, %r201, %r202 }, [ %rd102 + 0 ];
	// end inline asm
	mov.b32 	%f346, %r199;
	mov.b32 	%f347, %r200;
	mov.b32 	%f348, %r201;
	mov.b32 	%f349, %r202;
	.loc	1 83 31                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:83:31
	add.s64 	%rd103, %rd119, %rd189;
	add.s64 	%rd104, %rd119, %rd190;
	.loc	1 83 70                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:83:70
	// begin inline asm
	mov.u32 %r203, 0x0;
	mov.u32 %r204, 0x0;
	mov.u32 %r205, 0x0;
	mov.u32 %r206, 0x0;
	@%p49 ld.global.v4.b32 { %r203, %r204, %r205, %r206 }, [ %rd103 + 0 ];
	// end inline asm
	mov.b32 	%f350, %r203;
	mov.b32 	%f351, %r204;
	mov.b32 	%f352, %r205;
	mov.b32 	%f353, %r206;
	// begin inline asm
	mov.u32 %r207, 0x0;
	mov.u32 %r208, 0x0;
	mov.u32 %r209, 0x0;
	mov.u32 %r210, 0x0;
	@%p50 ld.global.v4.b32 { %r207, %r208, %r209, %r210 }, [ %rd104 + 0 ];
	// end inline asm
	mov.b32 	%f354, %r207;
	mov.b32 	%f355, %r208;
	mov.b32 	%f356, %r209;
	mov.b32 	%f357, %r210;
$L__tmp9:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f358, %f165, %f350;
	sub.f32 	%f359, %f165, %f351;
	sub.f32 	%f360, %f165, %f352;
	sub.f32 	%f361, %f165, %f353;
	sub.f32 	%f362, %f165, %f354;
	sub.f32 	%f363, %f165, %f355;
	sub.f32 	%f364, %f165, %f356;
	sub.f32 	%f365, %f165, %f357;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f66, %f358, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f65, %f66;
	// end inline asm
	mul.f32 	%f68, %f359, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f67, %f68;
	// end inline asm
	mul.f32 	%f70, %f360, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f69, %f70;
	// end inline asm
	mul.f32 	%f72, %f361, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f71, %f72;
	// end inline asm
	mul.f32 	%f74, %f362, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f73, %f74;
	// end inline asm
	mul.f32 	%f76, %f363, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f75, %f76;
	// end inline asm
	mul.f32 	%f78, %f364, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f77, %f78;
	// end inline asm
	mul.f32 	%f80, %f365, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f79, %f80;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f366, %f65, 0f3F800000;
	add.f32 	%f367, %f67, 0f3F800000;
	add.f32 	%f368, %f69, 0f3F800000;
	add.f32 	%f369, %f71, 0f3F800000;
	add.f32 	%f370, %f73, 0f3F800000;
	add.f32 	%f371, %f75, 0f3F800000;
	add.f32 	%f372, %f77, 0f3F800000;
	add.f32 	%f373, %f79, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r213, %f366;
	// begin inline asm
	div.full.f32 %r211, %r52, %r213;
	// end inline asm
	mov.b32 	%f374, %r211;
	mov.b32 	%r216, %f367;
	// begin inline asm
	div.full.f32 %r214, %r52, %r216;
	// end inline asm
	mov.b32 	%f375, %r214;
	mov.b32 	%r219, %f368;
	// begin inline asm
	div.full.f32 %r217, %r52, %r219;
	// end inline asm
	mov.b32 	%f376, %r217;
	mov.b32 	%r222, %f369;
	// begin inline asm
	div.full.f32 %r220, %r52, %r222;
	// end inline asm
	mov.b32 	%f377, %r220;
	mov.b32 	%r225, %f370;
	// begin inline asm
	div.full.f32 %r223, %r52, %r225;
	// end inline asm
	mov.b32 	%f378, %r223;
	mov.b32 	%r228, %f371;
	// begin inline asm
	div.full.f32 %r226, %r52, %r228;
	// end inline asm
	mov.b32 	%f379, %r226;
	mov.b32 	%r231, %f372;
	// begin inline asm
	div.full.f32 %r229, %r52, %r231;
	// end inline asm
	mov.b32 	%f380, %r229;
	mov.b32 	%r234, %f373;
	// begin inline asm
	div.full.f32 %r232, %r52, %r234;
	// end inline asm
	mov.b32 	%f381, %r232;
$L__tmp10:
	.loc	1 86 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:86:20
	neg.f32 	%f382, %f334;
	fma.rn.f32 	%f383, %f374, %f342, %f382;
	neg.f32 	%f384, %f335;
	fma.rn.f32 	%f385, %f375, %f343, %f384;
	neg.f32 	%f386, %f336;
	fma.rn.f32 	%f387, %f376, %f344, %f386;
	neg.f32 	%f388, %f337;
	fma.rn.f32 	%f389, %f377, %f345, %f388;
	neg.f32 	%f390, %f338;
	fma.rn.f32 	%f391, %f378, %f346, %f390;
	neg.f32 	%f392, %f339;
	fma.rn.f32 	%f393, %f379, %f347, %f392;
	neg.f32 	%f394, %f340;
	fma.rn.f32 	%f395, %f380, %f348, %f394;
	neg.f32 	%f396, %f341;
	fma.rn.f32 	%f397, %f381, %f349, %f396;
	.loc	1 88 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:88:20
	fma.rn.f32 	%f398, %f383, %f81, %f334;
	fma.rn.f32 	%f399, %f385, %f81, %f335;
	fma.rn.f32 	%f400, %f387, %f81, %f336;
	fma.rn.f32 	%f401, %f389, %f81, %f337;
	fma.rn.f32 	%f402, %f391, %f82, %f338;
	fma.rn.f32 	%f403, %f393, %f82, %f339;
	fma.rn.f32 	%f404, %f395, %f82, %f340;
	fma.rn.f32 	%f405, %f397, %f82, %f341;
	.loc	1 89 20                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:89:20
	sub.f32 	%f406, %f398, %f286;
	sub.f32 	%f407, %f399, %f287;
	sub.f32 	%f408, %f400, %f288;
	sub.f32 	%f409, %f401, %f289;
	sub.f32 	%f410, %f402, %f290;
	sub.f32 	%f411, %f403, %f291;
	sub.f32 	%f412, %f404, %f292;
	sub.f32 	%f413, %f405, %f293;
	.loc	1 90 34                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:90:34
	shl.b32 	%r326, %r301, 7;
	shl.b32 	%r327, %r302, 7;
	.loc	1 90 45                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:90:45
	shl.b32 	%r328, %r322, 15;
	.loc	1 90 30                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:90:30
	add.s32 	%r329, %r328, %r324;
	.loc	1 90 39                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:90:39
	add.s32 	%r330, %r329, %r326;
	add.s32 	%r331, %r329, %r327;
	.loc	1 90 25                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:90:25
	mul.wide.s32 	%rd191, %r330, 4;
	add.s64 	%rd105, %rd120, %rd191;
	mul.wide.s32 	%rd192, %r331, 4;
	add.s64 	%rd106, %rd120, %rd192;
	.loc	1 90 57                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:90:57
	// begin inline asm
	@%p49 st.global.v4.b32 [ %rd105 + 0 ], { %r235, %r236, %r237, %r238 };
	// end inline asm
	// begin inline asm
	@%p50 st.global.v4.b32 [ %rd106 + 0 ], { %r239, %r240, %r241, %r242 };
	// end inline asm
	.loc	1 91 34                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:91:34
	shl.b32 	%r332, %r298, 8;
	shl.b32 	%r333, %r299, 8;
	.loc	1 91 30                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:91:30
	add.s32 	%r334, %r303, %r332;
	add.s32 	%r335, %r303, %r333;
	.loc	1 91 25                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:91:25
	mul.wide.s32 	%rd193, %r334, 4;
	add.s64 	%rd107, %rd121, %rd193;
	mul.wide.s32 	%rd194, %r335, 4;
	add.s64 	%rd108, %rd121, %rd194;
	.loc	1 91 46                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:91:46
	shl.b32 	%r336, %r292, 7;
	and.b32  	%r337, %r336, 896;
	or.b32  	%r338, %r337, %r295;
	and.b32  	%r339, %r293, 508;
	shr.u32 	%r340, %r337, 5;
	add.s32 	%r341, %r340, %r338;
	shl.b32 	%r342, %r341, 2;
	mov.u32 	%r343, global_smem;
	add.s32 	%r243, %r343, %r342;
	mov.b32 	%r244, %f286;
	mov.pred 	%p75, -1;
	// begin inline asm
	@%p75 st.shared.b32 [ %r243 + 0 ], %r244;
	// end inline asm
	or.b32  	%r344, %r337, 32;
	shr.u32 	%r345, %r344, 5;
	add.s32 	%r346, %r345, %r338;
	shl.b32 	%r347, %r346, 2;
	add.s32 	%r348, %r343, %r347;
	add.s32 	%r245, %r348, 128;
	mov.b32 	%r246, %f287;
	// begin inline asm
	@%p75 st.shared.b32 [ %r245 + 0 ], %r246;
	// end inline asm
	or.b32  	%r349, %r337, 64;
	shr.u32 	%r350, %r349, 5;
	add.s32 	%r351, %r350, %r338;
	shl.b32 	%r352, %r351, 2;
	add.s32 	%r353, %r343, %r352;
	add.s32 	%r247, %r353, 256;
	mov.b32 	%r248, %f288;
	// begin inline asm
	@%p75 st.shared.b32 [ %r247 + 0 ], %r248;
	// end inline asm
	or.b32  	%r354, %r337, 96;
	shr.u32 	%r355, %r354, 5;
	add.s32 	%r356, %r355, %r338;
	shl.b32 	%r357, %r356, 2;
	add.s32 	%r358, %r343, %r357;
	add.s32 	%r249, %r358, 384;
	mov.b32 	%r250, %f289;
	// begin inline asm
	@%p75 st.shared.b32 [ %r249 + 0 ], %r250;
	// end inline asm
	add.s32 	%r251, %r243, 64;
	mov.b32 	%r252, %f290;
	// begin inline asm
	@%p75 st.shared.b32 [ %r251 + 0 ], %r252;
	// end inline asm
	add.s32 	%r253, %r348, 192;
	mov.b32 	%r254, %f291;
	// begin inline asm
	@%p75 st.shared.b32 [ %r253 + 0 ], %r254;
	// end inline asm
	add.s32 	%r255, %r353, 320;
	mov.b32 	%r256, %f292;
	// begin inline asm
	@%p75 st.shared.b32 [ %r255 + 0 ], %r256;
	// end inline asm
	add.s32 	%r257, %r358, 448;
	mov.b32 	%r258, %f293;
	// begin inline asm
	@%p75 st.shared.b32 [ %r257 + 0 ], %r258;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r359, %r293, 5, 4;
	add.s32 	%r360, %r359, %r339;
	shl.b32 	%r361, %r360, 2;
	add.s32 	%r362, %r343, %r361;
	ld.shared.u32 	%r259, [%r362];
	ld.shared.u32 	%r260, [%r362+4];
	ld.shared.u32 	%r261, [%r362+8];
	ld.shared.u32 	%r262, [%r362+12];
	or.b32  	%r363, %r339, 512;
	shr.u32 	%r364, %r363, 5;
	add.s32 	%r365, %r364, %r339;
	shl.b32 	%r366, %r365, 2;
	add.s32 	%r367, %r343, %r366;
	ld.shared.u32 	%r263, [%r367+2048];
	ld.shared.u32 	%r264, [%r367+2052];
	ld.shared.u32 	%r265, [%r367+2056];
	ld.shared.u32 	%r266, [%r367+2060];
	// begin inline asm
	@%p83 st.global.v4.b32 [ %rd107 + 0 ], { %r259, %r260, %r261, %r262 };
	// end inline asm
	// begin inline asm
	@%p84 st.global.v4.b32 [ %rd108 + 0 ], { %r263, %r264, %r265, %r266 };
	// end inline asm
	.loc	1 92 25                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:92:25
	add.s64 	%rd109, %rd122, %rd193;
	add.s64 	%rd110, %rd122, %rd194;
	.loc	1 92 46                         // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:92:46
	bar.sync 	0;
	mov.b32 	%r268, %f406;
	// begin inline asm
	@%p75 st.shared.b32 [ %r243 + 0 ], %r268;
	// end inline asm
	mov.b32 	%r270, %f407;
	// begin inline asm
	@%p75 st.shared.b32 [ %r245 + 0 ], %r270;
	// end inline asm
	mov.b32 	%r272, %f408;
	// begin inline asm
	@%p75 st.shared.b32 [ %r247 + 0 ], %r272;
	// end inline asm
	mov.b32 	%r274, %f409;
	// begin inline asm
	@%p75 st.shared.b32 [ %r249 + 0 ], %r274;
	// end inline asm
	mov.b32 	%r276, %f410;
	// begin inline asm
	@%p75 st.shared.b32 [ %r251 + 0 ], %r276;
	// end inline asm
	mov.b32 	%r278, %f411;
	// begin inline asm
	@%p75 st.shared.b32 [ %r253 + 0 ], %r278;
	// end inline asm
	mov.b32 	%r280, %f412;
	// begin inline asm
	@%p75 st.shared.b32 [ %r255 + 0 ], %r280;
	// end inline asm
	mov.b32 	%r282, %f413;
	// begin inline asm
	@%p75 st.shared.b32 [ %r257 + 0 ], %r282;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r283, [%r362];
	ld.shared.u32 	%r284, [%r362+4];
	ld.shared.u32 	%r285, [%r362+8];
	ld.shared.u32 	%r286, [%r362+12];
	ld.shared.u32 	%r287, [%r367+2048];
	ld.shared.u32 	%r288, [%r367+2052];
	ld.shared.u32 	%r289, [%r367+2056];
	ld.shared.u32 	%r290, [%r367+2060];
	// begin inline asm
	@%p83 st.global.v4.b32 [ %rd109 + 0 ], { %r283, %r284, %r285, %r286 };
	// end inline asm
	// begin inline asm
	@%p84 st.global.v4.b32 [ %rd110 + 0 ], { %r287, %r288, %r289, %r290 };
	// end inline asm
	.loc	1 92 4                          // cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py:92:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ow/cowu6awx4txqdncme5fmkrfif3cbgoe7yju33stjebtbmsh3bixa.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 293                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x11e DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 119
.b8 117
.b8 54
.b8 97
.b8 119
.b8 120
.b8 52
.b8 116
.b8 120
.b8 113
.b8 100
.b8 110
.b8 99
.b8 109
.b8 101
.b8 53
.b8 102
.b8 109
.b8 107
.b8 114
.b8 102
.b8 105
.b8 102
.b8 51
.b8 99
.b8 98
.b8 103
.b8 111
.b8 101
.b8 55
.b8 121
.b8 106
.b8 117
.b8 51
.b8 51
.b8 115
.b8 116
.b8 106
.b8 101
.b8 98
.b8 116
.b8 98
.b8 109
.b8 115
.b8 104
.b8 51
.b8 98
.b8 105
.b8 120
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 111
.b8 119
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x37 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9a:0x8e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xaf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 66                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 69                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xdf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 73                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 80                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x10f:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp9                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 84                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
