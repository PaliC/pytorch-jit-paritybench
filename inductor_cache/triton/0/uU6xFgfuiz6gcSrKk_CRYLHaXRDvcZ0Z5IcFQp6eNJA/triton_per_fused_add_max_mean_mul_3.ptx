//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_max_mean_mul_3 // -- Begin function triton_per_fused_add_max_mean_mul_3
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_add_max_mean_mul_3
.visible .entry triton_per_fused_add_max_mean_mul_3(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_max_mean_mul_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_max_mean_mul_3_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_max_mean_mul_3_param_2,
	.param .u32 triton_per_fused_add_max_mean_mul_3_param_3,
	.param .u32 triton_per_fused_add_max_mean_mul_3_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<121>;
	.reg .b32 	%r<221>;
	.reg .f32 	%f<157>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_per_fused_add_max_mean_mul_3_param_0];
	ld.param.u64 	%rd11, [triton_per_fused_add_max_mean_mul_3_param_1];
$L__tmp0:
	.loc	1 23 28                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:23:33
	shl.b32 	%r135, %r1, 7;
	ld.param.u64 	%rd12, [triton_per_fused_add_max_mean_mul_3_param_2];
	.loc	1 24 44                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:24:44
	mov.u32 	%r136, %tid.x;
	shl.b32 	%r137, %r136, 2;
	and.b32  	%r138, %r137, 124;
	and.b32  	%r139, %r136, 127;
	.loc	1 24 23                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:24:23
	or.b32  	%r140, %r135, %r138;
	or.b32  	%r141, %r135, %r139;
	.loc	1 25 21                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:25:21
	setp.lt.s32 	%p1, %r140, 4000;
	setp.lt.s32 	%p70, %r141, 4000;
	.loc	1 26 34                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:26:34
	bfe.u32 	%r142, %r136, 5, 3;
	.loc	1 31 19                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:31:19
	mul.hi.s32 	%r144, %r140, 274877907;
	shr.u32 	%r145, %r144, 31;
	shr.s32 	%r146, %r144, 6;
	add.s32 	%r147, %r146, %r145;
	.loc	1 30 19                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:30:19
	mul.lo.s32 	%r148, %r147, 1000;
	sub.s32 	%r149, %r140, %r148;
	.loc	1 33 35                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:33:35
	mad.lo.s32 	%r150, %r142, 1000, %r149;
	.loc	1 33 45                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:33:45
	mad.lo.s32 	%r151, %r147, 32000, %r150;
	add.s32 	%r152, %r151, 8000;
	add.s32 	%r153, %r151, 16000;
	add.s32 	%r154, %r151, 24000;
	.loc	1 33 30                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:33:30
	mul.wide.s32 	%rd13, %r151, 4;
	add.s64 	%rd1, %rd11, %rd13;
	mul.wide.s32 	%rd14, %r152, 4;
	add.s64 	%rd2, %rd11, %rd14;
	mul.wide.s32 	%rd15, %r153, 4;
	add.s64 	%rd3, %rd11, %rd15;
	mul.wide.s32 	%rd16, %r154, 4;
	add.s64 	%rd4, %rd11, %rd16;
	mov.b32 	%r6, 0;
	.loc	1 33 56                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:33:56
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r20, %r6;
	@!%p1 mov.u32 %r21, %r6;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r26, %r6;
	@!%p1 mov.u32 %r27, %r6;
	@!%p1 mov.u32 %r28, %r6;
	@!%p1 mov.u32 %r29, %r6;
	// end inline asm
	mov.b32 	%f13, %r26;
	mov.b32 	%f14, %r27;
	mov.b32 	%f15, %r28;
	mov.b32 	%f16, %r29;
	.loc	1 34 30                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:34:30
	add.s64 	%rd5, %rd12, %rd13;
	add.s64 	%rd6, %rd12, %rd14;
	add.s64 	%rd7, %rd12, %rd15;
	add.s64 	%rd8, %rd12, %rd16;
	.loc	1 34 56                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:34:56
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p1 ld.global.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r34, %r6;
	@!%p1 mov.u32 %r35, %r6;
	@!%p1 mov.u32 %r36, %r6;
	@!%p1 mov.u32 %r37, %r6;
	// end inline asm
	mov.b32 	%f17, %r34;
	mov.b32 	%f18, %r35;
	mov.b32 	%f19, %r36;
	mov.b32 	%f20, %r37;
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p1 ld.global.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd6 + 0 ];
	@!%p1 mov.u32 %r42, %r6;
	@!%p1 mov.u32 %r43, %r6;
	@!%p1 mov.u32 %r44, %r6;
	@!%p1 mov.u32 %r45, %r6;
	// end inline asm
	mov.b32 	%f21, %r42;
	mov.b32 	%f22, %r43;
	mov.b32 	%f23, %r44;
	mov.b32 	%f24, %r45;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	@%p1 ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd7 + 0 ];
	@!%p1 mov.u32 %r50, %r6;
	@!%p1 mov.u32 %r51, %r6;
	@!%p1 mov.u32 %r52, %r6;
	@!%p1 mov.u32 %r53, %r6;
	// end inline asm
	mov.b32 	%f25, %r50;
	mov.b32 	%f26, %r51;
	mov.b32 	%f27, %r52;
	mov.b32 	%f28, %r53;
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	@%p1 ld.global.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd8 + 0 ];
	@!%p1 mov.u32 %r58, %r6;
	@!%p1 mov.u32 %r59, %r6;
	@!%p1 mov.u32 %r60, %r6;
	@!%p1 mov.u32 %r61, %r6;
	// end inline asm
	mov.b32 	%f29, %r58;
	mov.b32 	%f30, %r59;
	mov.b32 	%f31, %r60;
	mov.b32 	%f32, %r61;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f1, %f5;
	add.f32 	%f34, %f2, %f6;
	add.f32 	%f35, %f3, %f7;
	add.f32 	%f36, %f4, %f8;
	add.f32 	%f37, %f33, %f9;
	add.f32 	%f38, %f34, %f10;
	add.f32 	%f39, %f35, %f11;
	add.f32 	%f40, %f36, %f12;
	add.f32 	%f41, %f37, %f13;
	add.f32 	%f42, %f38, %f14;
	add.f32 	%f43, %f39, %f15;
	add.f32 	%f44, %f40, %f16;
	.loc	2 267 36                        // standard.py:267:36
	shl.b32 	%r155, %r142, 2;
	shl.b32 	%r156, %r138, 5;
	or.b32  	%r157, %r156, %r155;
	mov.u32 	%r158, global_smem;
	add.s32 	%r66, %r158, %r157;
	mov.b32 	%r159, %f41;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r67, %r159, 0, %p1;
	mov.pred 	%p41, -1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p41 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	or.b32  	%r160, %r156, 32;
	or.b32  	%r161, %r160, %r155;
	add.s32 	%r68, %r158, %r161;
	mov.b32 	%r162, %f42;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r69, %r162, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p41 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	or.b32  	%r163, %r156, 64;
	or.b32  	%r164, %r163, %r155;
	add.s32 	%r70, %r158, %r164;
	mov.b32 	%r165, %f43;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r71, %r165, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p41 st.shared.b32 [ %r70 + 0 ], %r71;
	// end inline asm
	or.b32  	%r166, %r156, 96;
	or.b32  	%r167, %r166, %r155;
	add.s32 	%r72, %r158, %r167;
	mov.b32 	%r168, %f44;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r73, %r168, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p41 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p45, %r136, 1024;
	add.s32 	%r75, %r158, %r137;
	// begin inline asm
	@%p45 ld.shared.b32 %r74, [ %r75 + 0 ];
	// end inline asm
	mov.b32 	%f45, %r74;
	shfl.sync.bfly.b32	%r169, %r74, 4, 31, -1;
	mov.b32 	%f46, %r169;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r170, %f47;
	shfl.sync.bfly.b32	%r171, %r170, 2, 31, -1;
	mov.b32 	%f48, %r171;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r172, %f49;
	shfl.sync.bfly.b32	%r173, %r172, 1, 31, -1;
	mov.b32 	%f50, %r173;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r174, %r136, 7;
	setp.eq.s32 	%p71, %r174, 0;
	and.pred  	%p46, %p45, %p71;
	mov.b32 	%r77, %f51;
	// begin inline asm
	@%p46 st.shared.b32 [ %r75 + 0 ], %r77;
	// end inline asm
	add.s32 	%r79, %r75, 1024;
	// begin inline asm
	@%p45 ld.shared.b32 %r78, [ %r79 + 0 ];
	// end inline asm
	mov.b32 	%f52, %r78;
	shfl.sync.bfly.b32	%r175, %r78, 4, 31, -1;
	mov.b32 	%f53, %r175;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r176, %f54;
	shfl.sync.bfly.b32	%r177, %r176, 2, 31, -1;
	mov.b32 	%f55, %r177;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r178, %f56;
	shfl.sync.bfly.b32	%r179, %r178, 1, 31, -1;
	mov.b32 	%f57, %r179;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f58;
	// begin inline asm
	@%p46 st.shared.b32 [ %r79 + 0 ], %r81;
	// end inline asm
	add.s32 	%r83, %r75, 2048;
	// begin inline asm
	@%p45 ld.shared.b32 %r82, [ %r83 + 0 ];
	// end inline asm
	mov.b32 	%f59, %r82;
	shfl.sync.bfly.b32	%r180, %r82, 4, 31, -1;
	mov.b32 	%f60, %r180;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r181, %f61;
	shfl.sync.bfly.b32	%r182, %r181, 2, 31, -1;
	mov.b32 	%f62, %r182;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r183, %f63;
	shfl.sync.bfly.b32	%r184, %r183, 1, 31, -1;
	mov.b32 	%f64, %r184;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f65;
	// begin inline asm
	@%p46 st.shared.b32 [ %r83 + 0 ], %r85;
	// end inline asm
	add.s32 	%r87, %r75, 3072;
	// begin inline asm
	@%p45 ld.shared.b32 %r86, [ %r87 + 0 ];
	// end inline asm
	mov.b32 	%f66, %r86;
	shfl.sync.bfly.b32	%r185, %r86, 4, 31, -1;
	mov.b32 	%f67, %r185;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r186, %f68;
	shfl.sync.bfly.b32	%r187, %r186, 2, 31, -1;
	mov.b32 	%f69, %r187;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r188, %f70;
	shfl.sync.bfly.b32	%r189, %r188, 1, 31, -1;
	mov.b32 	%f71, %r189;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f72;
	// begin inline asm
	@%p46 st.shared.b32 [ %r87 + 0 ], %r89;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r190, %r158, %r156;
	add.s32 	%r191, %r158, %r160;
	add.s32 	%r192, %r158, %r163;
	add.s32 	%r193, %r158, %r166;
$L__tmp2:
	.loc	1 39 33                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:39:33
	selp.f32 	%f73, %f17, 0fFF800000, %p1;
	selp.f32 	%f74, %f18, 0fFF800000, %p1;
	selp.f32 	%f75, %f19, 0fFF800000, %p1;
	selp.f32 	%f76, %f20, 0fFF800000, %p1;
	selp.f32 	%f77, %f21, 0fFF800000, %p1;
	selp.f32 	%f78, %f22, 0fFF800000, %p1;
	selp.f32 	%f79, %f23, 0fFF800000, %p1;
	selp.f32 	%f80, %f24, 0fFF800000, %p1;
	selp.f32 	%f81, %f25, 0fFF800000, %p1;
	selp.f32 	%f82, %f26, 0fFF800000, %p1;
	selp.f32 	%f83, %f27, 0fFF800000, %p1;
	selp.f32 	%f84, %f28, 0fFF800000, %p1;
	selp.f32 	%f85, %f29, 0fFF800000, %p1;
	selp.f32 	%f86, %f30, 0fFF800000, %p1;
	selp.f32 	%f87, %f31, 0fFF800000, %p1;
	selp.f32 	%f88, %f32, 0fFF800000, %p1;
	.loc	1 42 19                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:42:19
	ld.shared.u32 	%r115, [%r190];
	ld.shared.u32 	%r118, [%r191];
	ld.shared.u32 	%r121, [%r192];
	ld.shared.u32 	%r124, [%r193];
$L__tmp3:
	.loc	3 131 29                        // triton_helpers.py:131:29
	bar.sync 	0;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p72, %f73, %f77;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p73, %f73, %f73;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f89, %f73, %f77, %p72;
	selp.f32 	%f90, %f73, %f89, %p73;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p74, %f74, %f78;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p75, %f74, %f74;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f91, %f74, %f78, %p74;
	selp.f32 	%f92, %f74, %f91, %p75;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p76, %f75, %f79;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p77, %f75, %f75;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f93, %f75, %f79, %p76;
	selp.f32 	%f94, %f75, %f93, %p77;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p78, %f76, %f80;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p79, %f76, %f76;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f95, %f76, %f80, %p78;
	selp.f32 	%f96, %f76, %f95, %p79;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p80, %f90, %f81;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p81, %f90, %f90;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f97, %f90, %f81, %p81;
	selp.f32 	%f98, %f90, %f97, %p80;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p82, %f92, %f82;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p83, %f92, %f92;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f99, %f92, %f82, %p83;
	selp.f32 	%f100, %f92, %f99, %p82;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p84, %f94, %f83;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p85, %f94, %f94;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f101, %f94, %f83, %p85;
	selp.f32 	%f102, %f94, %f101, %p84;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p86, %f96, %f84;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p87, %f96, %f96;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f103, %f96, %f84, %p87;
	selp.f32 	%f104, %f96, %f103, %p86;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p88, %f98, %f85;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p89, %f98, %f98;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f105, %f98, %f85, %p89;
	selp.f32 	%f106, %f98, %f105, %p88;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p90, %f100, %f86;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p91, %f100, %f100;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f107, %f100, %f86, %p91;
	selp.f32 	%f108, %f100, %f107, %p90;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p92, %f102, %f87;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p93, %f102, %f102;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f109, %f102, %f87, %p93;
	selp.f32 	%f110, %f102, %f109, %p92;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p94, %f104, %f88;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p95, %f104, %f104;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f111, %f104, %f88, %p95;
	selp.f32 	%f112, %f104, %f111, %p94;
	.loc	3 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r91, %f106;
	// begin inline asm
	@%p41 st.shared.b32 [ %r66 + 0 ], %r91;
	// end inline asm
	mov.b32 	%r93, %f108;
	// begin inline asm
	@%p41 st.shared.b32 [ %r68 + 0 ], %r93;
	// end inline asm
	mov.b32 	%r95, %f110;
	// begin inline asm
	@%p41 st.shared.b32 [ %r70 + 0 ], %r95;
	// end inline asm
	mov.b32 	%r97, %f112;
	// begin inline asm
	@%p41 st.shared.b32 [ %r72 + 0 ], %r97;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p45 ld.shared.b32 %r98, [ %r75 + 0 ];
	// end inline asm
	mov.b32 	%f113, %r98;
	shfl.sync.bfly.b32	%r194, %r98, 4, 31, -1;
	mov.b32 	%f114, %r194;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p96, %f113, %f114;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p97, %f113, %f113;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f115, %f113, %f114, %p96;
	selp.f32 	%f116, %f113, %f115, %p97;
	.loc	3 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r195, %f116;
	shfl.sync.bfly.b32	%r196, %r195, 2, 31, -1;
	mov.b32 	%f117, %r196;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p98, %f116, %f117;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p99, %f116, %f116;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f118, %f116, %f117, %p99;
	selp.f32 	%f119, %f116, %f118, %p98;
	.loc	3 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r197, %f119;
	shfl.sync.bfly.b32	%r198, %r197, 1, 31, -1;
	mov.b32 	%f120, %r198;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p100, %f119, %f120;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p101, %f119, %f119;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r199, %r197, %r198, %p101;
	selp.b32 	%r101, %r197, %r199, %p100;
	.loc	3 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p46 st.shared.b32 [ %r75 + 0 ], %r101;
	// end inline asm
	// begin inline asm
	@%p45 ld.shared.b32 %r102, [ %r79 + 0 ];
	// end inline asm
	mov.b32 	%f121, %r102;
	shfl.sync.bfly.b32	%r200, %r102, 4, 31, -1;
	mov.b32 	%f122, %r200;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p102, %f121, %f122;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p103, %f121, %f121;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f123, %f121, %f122, %p102;
	selp.f32 	%f124, %f121, %f123, %p103;
	.loc	3 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r201, %f124;
	shfl.sync.bfly.b32	%r202, %r201, 2, 31, -1;
	mov.b32 	%f125, %r202;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p104, %f124, %f125;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p105, %f124, %f124;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f126, %f124, %f125, %p105;
	selp.f32 	%f127, %f124, %f126, %p104;
	.loc	3 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r203, %f127;
	shfl.sync.bfly.b32	%r204, %r203, 1, 31, -1;
	mov.b32 	%f128, %r204;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p106, %f127, %f128;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p107, %f127, %f127;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r205, %r203, %r204, %p107;
	selp.b32 	%r105, %r203, %r205, %p106;
	.loc	3 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p46 st.shared.b32 [ %r79 + 0 ], %r105;
	// end inline asm
	// begin inline asm
	@%p45 ld.shared.b32 %r106, [ %r83 + 0 ];
	// end inline asm
	mov.b32 	%f129, %r106;
	shfl.sync.bfly.b32	%r206, %r106, 4, 31, -1;
	mov.b32 	%f130, %r206;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p108, %f129, %f130;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p109, %f129, %f129;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f131, %f129, %f130, %p108;
	selp.f32 	%f132, %f129, %f131, %p109;
	.loc	3 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r207, %f132;
	shfl.sync.bfly.b32	%r208, %r207, 2, 31, -1;
	mov.b32 	%f133, %r208;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p110, %f132, %f133;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p111, %f132, %f132;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f134, %f132, %f133, %p111;
	selp.f32 	%f135, %f132, %f134, %p110;
	.loc	3 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r209, %f135;
	shfl.sync.bfly.b32	%r210, %r209, 1, 31, -1;
	mov.b32 	%f136, %r210;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p112, %f135, %f136;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p113, %f135, %f135;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r211, %r209, %r210, %p113;
	selp.b32 	%r109, %r209, %r211, %p112;
	.loc	3 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p46 st.shared.b32 [ %r83 + 0 ], %r109;
	// end inline asm
	// begin inline asm
	@%p45 ld.shared.b32 %r110, [ %r87 + 0 ];
	// end inline asm
	mov.b32 	%f137, %r110;
	shfl.sync.bfly.b32	%r212, %r110, 4, 31, -1;
	mov.b32 	%f138, %r212;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p114, %f137, %f138;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p115, %f137, %f137;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f139, %f137, %f138, %p114;
	selp.f32 	%f140, %f137, %f139, %p115;
	.loc	3 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r213, %f140;
	shfl.sync.bfly.b32	%r214, %r213, 2, 31, -1;
	mov.b32 	%f141, %r214;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p116, %f140, %f141;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p117, %f140, %f140;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f142, %f140, %f141, %p117;
	selp.f32 	%f143, %f140, %f142, %p116;
	.loc	3 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r215, %f143;
	shfl.sync.bfly.b32	%r216, %r215, 1, 31, -1;
	mov.b32 	%f144, %r216;
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p118, %f143, %f144;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p119, %f143, %f143;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r217, %r215, %r216, %p119;
	selp.b32 	%r113, %r215, %r217, %p118;
	.loc	3 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p46 st.shared.b32 [ %r87 + 0 ], %r113;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f145, [%r190];
	ld.shared.f32 	%f146, [%r191];
	ld.shared.f32 	%f147, [%r192];
	ld.shared.f32 	%f148, [%r193];
	mov.b32 	%r116, 1166016512;
$L__tmp4:
	.loc	1 42 19                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:42:19
	// begin inline asm
	div.full.f32 %r114, %r115, %r116;
	// end inline asm
	mov.b32 	%f149, %r114;
	// begin inline asm
	div.full.f32 %r117, %r118, %r116;
	// end inline asm
	mov.b32 	%f150, %r117;
	// begin inline asm
	div.full.f32 %r120, %r121, %r116;
	// end inline asm
	mov.b32 	%f151, %r120;
	// begin inline asm
	div.full.f32 %r123, %r124, %r116;
	// end inline asm
	mov.b32 	%f152, %r123;
	.loc	1 45 20                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:45:20
	fma.rn.f32 	%f153, %f145, 0f3E4CCCCD, %f149;
	fma.rn.f32 	%f154, %f146, 0f3E4CCCCD, %f150;
	fma.rn.f32 	%f155, %f147, 0f3E4CCCCD, %f151;
	fma.rn.f32 	%f156, %f148, 0f3E4CCCCD, %f152;
	.loc	1 46 4                          // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:46:4
	bar.sync 	0;
	.loc	1 47 28                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:47:28
	mul.wide.s32 	%rd17, %r141, 4;
	add.s64 	%rd9, %rd10, %rd17;
	.loc	1 47 40                         // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:47:40
	mad.lo.s32 	%r126, %r138, -28, %r190;
	mov.b32 	%r127, %f153;
	// begin inline asm
	@%p41 st.shared.b32 [ %r126 + 0 ], %r127;
	// end inline asm
	add.s32 	%r128, %r126, 4;
	mov.b32 	%r129, %f154;
	// begin inline asm
	@%p41 st.shared.b32 [ %r128 + 0 ], %r129;
	// end inline asm
	add.s32 	%r130, %r126, 8;
	mov.b32 	%r131, %f155;
	// begin inline asm
	@%p41 st.shared.b32 [ %r130 + 0 ], %r131;
	// end inline asm
	add.s32 	%r132, %r126, 12;
	mov.b32 	%r133, %f156;
	// begin inline asm
	@%p41 st.shared.b32 [ %r132 + 0 ], %r133;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r218, %r139, 2;
	add.s32 	%r219, %r158, %r218;
	ld.shared.u32 	%r134, [%r219];
	and.b32  	%r220, %r136, 128;
	setp.eq.s32 	%p120, %r220, 0;
	and.pred  	%p69, %p120, %p70;
	// begin inline asm
	@%p69 st.global.b32 [ %rd9 + 0 ], { %r134 };
	// end inline asm
	.loc	1 47 4                          // c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py:47:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6i/c6i5rqgwjn37efydebxvf376boljm7xc5xfg5uigyqfl34r7j7i6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 204                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 105
.b8 53
.b8 114
.b8 113
.b8 103
.b8 119
.b8 106
.b8 110
.b8 51
.b8 55
.b8 101
.b8 102
.b8 121
.b8 100
.b8 101
.b8 98
.b8 120
.b8 118
.b8 102
.b8 51
.b8 55
.b8 54
.b8 98
.b8 111
.b8 108
.b8 106
.b8 109
.b8 55
.b8 120
.b8 99
.b8 53
.b8 120
.b8 102
.b8 103
.b8 53
.b8 117
.b8 105
.b8 103
.b8 121
.b8 113
.b8 102
.b8 108
.b8 51
.b8 52
.b8 114
.b8 55
.b8 106
.b8 55
.b8 105
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 105
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 97
.b8 120
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 37                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
