//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_mean_mul_neg_softplus_sum_0 // -- Begin function triton_per_fused_add_mean_mul_neg_softplus_sum_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_mean_mul_neg_softplus_sum_0
.visible .entry triton_per_fused_add_mean_mul_neg_softplus_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_neg_softplus_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_neg_softplus_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_neg_softplus_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_neg_softplus_sum_0_param_3,
	.param .u32 triton_per_fused_add_mean_mul_neg_softplus_sum_0_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<27>;
	.reg .b32 	%r<60>;
	.reg .f32 	%f<122>;
	.reg .b64 	%rd<19>;
$L__func_begin0:

// %bb.0:
	.loc	1 26 34                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:26:34
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd14, [triton_per_fused_add_mean_mul_neg_softplus_sum_0_param_1];
	.loc	1 29 19                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:29:19
	and.b32  	%r16, %r1, 15;
	ld.param.u64 	%rd15, [triton_per_fused_add_mean_mul_neg_softplus_sum_0_param_2];
	.loc	1 32 38                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:32:38
	shl.b32 	%r17, %r1, 2;
	ld.param.u64 	%rd16, [triton_per_fused_add_mean_mul_neg_softplus_sum_0_param_3];
	and.b32  	%r18, %r17, 192;
	.loc	1 32 35                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:32:35
	or.b32  	%r19, %r18, %r16;
	.loc	1 32 30                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:32:30
	mul.wide.u32 	%rd17, %r19, 4;
	add.s64 	%rd2, %rd14, %rd17;
	mov.pred 	%p1, -1;
	.loc	1 32 43                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:32:43
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r4;
	.loc	1 33 30                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:33:30
	add.s64 	%rd3, %rd15, %rd17;
	.loc	1 33 43                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:33:43
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r5;
	.loc	1 34 30                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:34:30
	add.s64 	%rd4, %rd2, 64;
	.loc	1 34 48                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:34:48
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r6;
	.loc	1 35 30                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:35:30
	add.s64 	%rd5, %rd3, 64;
	.loc	1 35 48                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:35:48
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r7;
	.loc	1 36 30                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:36:30
	add.s64 	%rd6, %rd2, 128;
	.loc	1 36 48                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:36:48
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r8;
	.loc	1 37 30                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:37:30
	add.s64 	%rd7, %rd3, 128;
	.loc	1 37 48                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:37:48
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f22, %r9;
	.loc	1 38 31                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:38:31
	add.s64 	%rd8, %rd2, 192;
	.loc	1 38 49                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:38:49
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r10;
	.loc	1 39 31                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:39:31
	add.s64 	%rd9, %rd3, 192;
	.loc	1 39 49                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:39:49
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.b32 { %r11 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r11;
	.loc	1 40 31                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:40:31
	add.s64 	%rd10, %rd16, %rd17;
	.loc	1 40 44                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:40:44
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.b32 { %r12 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r12;
	.loc	1 41 31                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:41:31
	add.s64 	%rd11, %rd10, 64;
	.loc	1 41 49                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:41:49
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.b32 { %r13 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r13;
	.loc	1 42 31                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:42:31
	add.s64 	%rd12, %rd10, 128;
	.loc	1 42 49                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:42:49
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.b32 { %r14 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r14;
	.loc	1 43 31                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:43:31
	add.s64 	%rd13, %rd10, 192;
	.loc	1 43 49                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:43:49
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.b32 { %r15 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r15;
	.loc	1 45 18                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:45:18
	mul.f32 	%f29, %f19, %f20;
	.loc	1 46 18                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:46:18
	fma.rn.f32 	%f30, %f17, %f18, %f29;
	.loc	1 48 19                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:48:19
	fma.rn.f32 	%f31, %f21, %f22, %f30;
	.loc	1 50 20                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:50:20
	fma.rn.f32 	%f32, %f23, %f24, %f31;
	mov.f32 	%f33, 0f00000000;
	.loc	1 51 13                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:51:13
	sub.f32 	%f1, %f33, %f32;
	.loc	1 53 19                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:53:19
	mul.f32 	%f34, %f19, %f26;
	.loc	1 54 20                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:54:20
	fma.rn.f32 	%f35, %f17, %f25, %f34;
	.loc	1 56 20                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:56:20
	fma.rn.f32 	%f36, %f21, %f27, %f35;
	.loc	1 58 20                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:58:20
	fma.rn.f32 	%f2, %f23, %f28, %f36;
	.loc	1 61 24                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:61:24
	mul.f32 	%f16, %f1, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	mov.f32 	%f37, 0f3F800000;
	.loc	1 62 28                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:62:28
	add.rz.ftz.f32 	%f38, %f15, %f37;
	mov.b32 	%r20, %f38;
	add.s32 	%r21, %r20, -1061158912;
	and.b32  	%r22, %r21, -8388608;
	mov.b32 	%r2, %f15;
	sub.s32 	%r23, %r2, %r22;
	mov.b32 	%f39, %r23;
	mov.b32 	%r24, 1082130432;
	sub.s32 	%r25, %r24, %r22;
	mov.b32 	%f40, %r25;
	mov.f32 	%f41, 0fBF800000;
	mov.f32 	%f42, 0f3E800000;
	fma.rn.ftz.f32 	%f43, %f42, %f40, %f41;
	add.f32 	%f44, %f43, %f39;
	cvt.rn.f32.s32 	%f45, %r22;
	mul.f32 	%f46, %f45, 0f34000000;
	mov.f32 	%f47, 0f3DD80012;
	mov.f32 	%f48, 0fBD39BF78;
	fma.rn.ftz.f32 	%f49, %f48, %f44, %f47;
	mov.f32 	%f50, 0fBE0778E0;
	fma.rn.ftz.f32 	%f51, %f49, %f44, %f50;
	mov.f32 	%f52, 0f3E146475;
	fma.rn.ftz.f32 	%f53, %f51, %f44, %f52;
	mov.f32 	%f54, 0fBE2A68DD;
	fma.rn.ftz.f32 	%f55, %f53, %f44, %f54;
	mov.f32 	%f56, 0f3E4CAF9E;
	fma.rn.ftz.f32 	%f57, %f55, %f44, %f56;
	mov.f32 	%f58, 0fBE800042;
	fma.rn.ftz.f32 	%f59, %f57, %f44, %f58;
	mov.f32 	%f60, 0f3EAAAAE6;
	fma.rn.ftz.f32 	%f61, %f59, %f44, %f60;
	mov.f32 	%f62, 0fBF000000;
	fma.rn.ftz.f32 	%f63, %f61, %f44, %f62;
	mul.f32 	%f64, %f44, %f63;
	fma.rn.ftz.f32 	%f65, %f64, %f44, %f44;
	mov.f32 	%f66, 0f3F317218;
	fma.rn.ftz.f32 	%f119, %f46, %f66, %f65;
	setp.lt.u32 	%p13, %r2, 2139095040;
	mov.f32 	%f117, 0f7F800000;
	@%p13 bra 	$L__BB0_4;
// %bb.1:
	setp.lt.s32 	%p14, %r2, -1082130431;
	@%p14 bra 	$L__BB0_3;
// %bb.2:                               // %__nv_fmaf_rn.exit.i
	.loc	1 0 28                          // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:0:28
	fma.rn.ftz.f32 	%f119, %f15, %f117, %f117;
$L__BB0_3:
	.loc	1 62 28                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:62:28
	setp.eq.f32 	%p15, %f15, 0f00000000;
	selp.f32 	%f119, 0f80000000, %f119, %p15;
$L__BB0_4:                              // %__nv_log1pf.exit
	.loc	1 0 28                          // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:0:28
	ld.param.u64 	%rd18, [triton_per_fused_add_mean_mul_neg_softplus_sum_0_param_0];
	.loc	1 65 24                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:65:24
	mul.f32 	%f69, %f2, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f68, %f69;
	// end inline asm
	.loc	1 66 28                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:66:28
	add.rz.ftz.f32 	%f71, %f68, %f37;
	mov.b32 	%r26, %f71;
	add.s32 	%r27, %r26, -1061158912;
	and.b32  	%r28, %r27, -8388608;
	mov.b32 	%r3, %f68;
	sub.s32 	%r29, %r3, %r28;
	mov.b32 	%f72, %r29;
	sub.s32 	%r31, %r24, %r28;
	mov.b32 	%f73, %r31;
	fma.rn.ftz.f32 	%f76, %f42, %f73, %f41;
	add.f32 	%f77, %f76, %f72;
	cvt.rn.f32.s32 	%f78, %r28;
	mul.f32 	%f79, %f78, 0f34000000;
	fma.rn.ftz.f32 	%f82, %f48, %f77, %f47;
	fma.rn.ftz.f32 	%f84, %f82, %f77, %f50;
	fma.rn.ftz.f32 	%f86, %f84, %f77, %f52;
	fma.rn.ftz.f32 	%f88, %f86, %f77, %f54;
	fma.rn.ftz.f32 	%f90, %f88, %f77, %f56;
	fma.rn.ftz.f32 	%f92, %f90, %f77, %f58;
	fma.rn.ftz.f32 	%f94, %f92, %f77, %f60;
	fma.rn.ftz.f32 	%f96, %f94, %f77, %f62;
	mul.f32 	%f97, %f77, %f96;
	fma.rn.ftz.f32 	%f98, %f97, %f77, %f77;
	fma.rn.ftz.f32 	%f120, %f79, %f66, %f98;
	setp.lt.u32 	%p16, %r3, 2139095040;
	@%p16 bra 	$L__BB0_8;
// %bb.5:
	setp.lt.s32 	%p17, %r3, -1082130431;
	@%p17 bra 	$L__BB0_7;
// %bb.6:                               // %__nv_fmaf_rn.exit.i28
	.loc	1 0 28                          // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:0:28
	fma.rn.ftz.f32 	%f120, %f68, %f117, %f117;
$L__BB0_7:
	.loc	1 66 28                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:66:28
	setp.eq.f32 	%p18, %f68, 0f00000000;
	selp.f32 	%f120, 0f80000000, %f120, %p18;
$L__BB0_8:                              // %__nv_log1pf.exit31
	.loc	1 64 20                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:64:20
	setp.gt.f32 	%p23, %f2, 0f41A00000;
	.loc	1 60 20                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:60:20
	setp.gt.f32 	%p24, %f1, 0f41A00000;
	.loc	1 63 35                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:63:35
	selp.f32 	%f101, %f1, %f119, %p24;
	.loc	1 26 34                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:26:34
	and.b32  	%r42, %r1, 31;
	.loc	1 67 35                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:67:35
	selp.f32 	%f102, %f2, %f120, %p23;
	.loc	1 68 20                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:68:20
	add.f32 	%f103, %f101, %f102;
$L__tmp0:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f103;
	shfl.sync.bfly.b32	%r44, %r43, 16, 31, -1;
	mov.b32 	%f104, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f105, %f103, %f104;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f105;
	shfl.sync.bfly.b32	%r46, %r45, 8, 31, -1;
	mov.b32 	%f106, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f107, %f105, %f106;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f107;
	shfl.sync.bfly.b32	%r48, %r47, 4, 31, -1;
	mov.b32 	%f108, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f109, %f107, %f108;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f109;
	shfl.sync.bfly.b32	%r50, %r49, 2, 31, -1;
	mov.b32 	%f110, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f111, %f109, %f110;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f111;
	shfl.sync.bfly.b32	%r52, %r51, 1, 31, -1;
	mov.b32 	%f112, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f113, %f111, %f112;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p19, %r42, 0;
	shr.u32 	%r53, %r1, 3;
	and.b32  	%r54, %r53, 4;
	mov.u32 	%r55, global_smem;
	add.s32 	%r32, %r55, %r54;
	mov.b32 	%r33, %f113;
	// begin inline asm
	@%p19 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p20, %r1, 2;
	add.s32 	%r35, %r55, %r17;
	// begin inline asm
	@%p20 ld.shared.b32 %r34, [ %r35 + 0 ];
	// end inline asm
	mov.b32 	%f114, %r34;
	shfl.sync.bfly.b32	%r57, %r34, 1, 31, -1;
	mov.b32 	%f115, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f116, %f114, %f115;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r58, %r1, 1;
	setp.eq.b32 	%p25, %r58, 1;
	not.pred 	%p26, %p25;
	and.pred  	%p21, %p20, %p26;
	mov.b32 	%r37, %f116;
	// begin inline asm
	@%p21 st.shared.b32 [ %r35 + 0 ], %r37;
	// end inline asm
	bar.sync 	0;
$L__tmp1:
	.loc	1 72 20                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:72:20
	ld.shared.u32 	%r39, [global_smem];
	mov.b32 	%r40, 1115684864;
	// begin inline asm
	div.full.f32 %r41, %r39, %r40;
	// end inline asm
	.loc	1 73 4                          // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:73:4
	bar.sync 	0;
	.loc	1 74 71                         // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:74:71
	and.b32  	%r59, %r1, 63;
	setp.eq.s32 	%p22, %r59, 0;
	// begin inline asm
	@%p22 st.global.b32 [ %rd18 + 0 ], { %r41 };
	// end inline asm
	.loc	1 74 4                          // cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py:74:4
	ret;
$L__tmp2:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/uy/cuys2agovpuzgh2mrkcwlcjocsop2pua76fty7wfd53qy25bkhw2.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 193                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xba DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 121
.b8 115
.b8 50
.b8 97
.b8 103
.b8 111
.b8 118
.b8 112
.b8 117
.b8 122
.b8 103
.b8 104
.b8 50
.b8 109
.b8 114
.b8 107
.b8 99
.b8 119
.b8 108
.b8 99
.b8 106
.b8 111
.b8 99
.b8 115
.b8 111
.b8 112
.b8 50
.b8 112
.b8 117
.b8 97
.b8 55
.b8 54
.b8 102
.b8 116
.b8 121
.b8 55
.b8 119
.b8 102
.b8 100
.b8 53
.b8 51
.b8 113
.b8 121
.b8 50
.b8 53
.b8 98
.b8 107
.b8 104
.b8 119
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 121
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x33 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 101
.b8 103
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 112
.b8 108
.b8 117
.b8 115
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x96:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xab:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 70                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
