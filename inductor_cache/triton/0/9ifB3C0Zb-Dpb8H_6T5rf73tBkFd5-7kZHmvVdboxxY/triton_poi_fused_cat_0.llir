; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 512, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 4, !dbg !15
  %12 = srem i32 %11, 8, !dbg !16
  %13 = mul i32 %11, 4, !dbg !17
  %.decomposed = sub i32 %.frozen, %13, !dbg !17
  %.frozen1 = freeze i32 %9, !dbg !18
  %14 = sdiv i32 %.frozen1, 32, !dbg !18
  %15 = icmp slt i32 %12, 4, !dbg !19
  %16 = mul i32 %14, 32, !dbg !20
  %srem.decomposed = sub i32 %.frozen1, %16, !dbg !20
  %17 = shl nsw i32 %14, 4, !dbg !21
  %18 = add nsw i32 %17, %srem.decomposed, !dbg !22
  %19 = sext i32 %18 to i64, !dbg !23
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !23
  %21 = and i1 %10, %15, !dbg !24
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %20, i1 %21, i32 0, i1 %21, i32 0, i1 %21) #1, !dbg !25
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !25
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !25
  %25 = icmp sgt i32 %12, 3, !dbg !26
  %26 = icmp sgt i32 %9, 127, !dbg !27
  %27 = and i1 %26, %25, !dbg !28
  %28 = shl nsw i32 %12, 2, !dbg !29
  %29 = add nsw i32 %28, -16, !dbg !29
  %30 = add nsw i32 %17, %.decomposed, !dbg !30
  %31 = add nsw i32 %30, %29, !dbg !31
  %32 = sext i32 %31 to i64, !dbg !32
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !32
  %34 = and i1 %10, %27, !dbg !33
  %35 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %33, i1 %34, i32 0, i1 %34, i32 0, i1 %34) #1, !dbg !34
  %36 = extractvalue { i32, i32 } %35, 0, !dbg !34
  %37 = extractvalue { i32, i32 } %35, 1, !dbg !34
  %38 = bitcast i32 %36 to float, !dbg !34
  %39 = bitcast i32 %37 to float, !dbg !34
  %40 = add nsw i32 %30, -64, !dbg !35
  %41 = add nsw i32 %40, %29, !dbg !36
  %42 = sext i32 %41 to i64, !dbg !37
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !37
  %44 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %43, i1 %34, i32 0, i1 %34, i32 0, i1 %34) #1, !dbg !38
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !38
  %46 = extractvalue { i32, i32 } %44, 1, !dbg !38
  %47 = bitcast i32 %45 to float, !dbg !38
  %48 = bitcast i32 %46 to float, !dbg !38
  %49 = fsub float %38, %47, !dbg !39
  %50 = fsub float %39, %48, !dbg !39
  %51 = and i1 %10, %25, !dbg !40
  %52 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %33, i1 %51, i32 0, i1 %51, i32 0, i1 %51) #1, !dbg !41
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !41
  %54 = extractvalue { i32, i32 } %52, 1, !dbg !41
  %55 = sext i32 %9 to i64, !dbg !42
  %56 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !42
  %57 = bitcast float %49 to i32, !dbg !43
  %58 = select i1 %27, i32 %57, i32 0, !dbg !44
  %59 = select i1 %26, i32 %58, i32 %53, !dbg !45
  %60 = select i1 %15, i32 %23, i32 %59, !dbg !46
  %61 = bitcast float %50 to i32, !dbg !43
  %62 = select i1 %27, i32 %61, i32 0, !dbg !44
  %63 = select i1 %26, i32 %62, i32 %54, !dbg !45
  %64 = select i1 %15, i32 %24, i32 %63, !dbg !46
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %60, i32 %64, ptr addrspace(1) %56, i1 %10) #1, !dbg !43
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjxbf43wrcpiftqgfwcte6av2wmpj2tynngntaxqoegqpynvbt6b.py", directory: "inductor_cache/jx")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 33, column: 18, scope: !7)
!20 = !DILocation(line: 34, column: 35, scope: !7)
!21 = !DILocation(line: 34, column: 47, scope: !7)
!22 = !DILocation(line: 34, column: 44, scope: !7)
!23 = !DILocation(line: 34, column: 30, scope: !7)
!24 = !DILocation(line: 34, column: 59, scope: !7)
!25 = !DILocation(line: 34, column: 52, scope: !7)
!26 = !DILocation(line: 35, column: 19, scope: !7)
!27 = !DILocation(line: 40, column: 20, scope: !7)
!28 = !DILocation(line: 41, column: 20, scope: !7)
!29 = !DILocation(line: 42, column: 39, scope: !7)
!30 = !DILocation(line: 42, column: 36, scope: !7)
!31 = !DILocation(line: 42, column: 52, scope: !7)
!32 = !DILocation(line: 42, column: 31, scope: !7)
!33 = !DILocation(line: 42, column: 68, scope: !7)
!34 = !DILocation(line: 42, column: 60, scope: !7)
!35 = !DILocation(line: 43, column: 44, scope: !7)
!36 = !DILocation(line: 43, column: 60, scope: !7)
!37 = !DILocation(line: 43, column: 31, scope: !7)
!38 = !DILocation(line: 43, column: 68, scope: !7)
!39 = !DILocation(line: 44, column: 20, scope: !7)
!40 = !DILocation(line: 47, column: 67, scope: !7)
!41 = !DILocation(line: 47, column: 60, scope: !7)
!42 = !DILocation(line: 52, column: 25, scope: !7)
!43 = !DILocation(line: 52, column: 37, scope: !7)
!44 = !DILocation(line: 46, column: 35, scope: !7)
!45 = !DILocation(line: 48, column: 35, scope: !7)
!46 = !DILocation(line: 51, column: 33, scope: !7)
!47 = !DILocation(line: 52, column: 4, scope: !7)
