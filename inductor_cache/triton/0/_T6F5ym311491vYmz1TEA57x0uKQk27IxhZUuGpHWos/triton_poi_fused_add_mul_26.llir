; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_mul_26(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 10, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 2, !dbg !12
  %10 = and i32 %9, 508, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = or disjoint i32 %11, 512, !dbg !13
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #1, !dbg !14
  %14 = bitcast i32 %13 to float, !dbg !14
  %15 = sext i32 %11 to i64, !dbg !15
  %16 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !15
  %17 = sext i32 %12 to i64, !dbg !15
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !15
  %19 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %16, i1 true) #1, !dbg !16
  %20 = extractvalue { i32, i32, i32, i32 } %19, 0, !dbg !16
  %21 = extractvalue { i32, i32, i32, i32 } %19, 1, !dbg !16
  %22 = extractvalue { i32, i32, i32, i32 } %19, 2, !dbg !16
  %23 = extractvalue { i32, i32, i32, i32 } %19, 3, !dbg !16
  %24 = bitcast i32 %20 to float, !dbg !16
  %25 = bitcast i32 %21 to float, !dbg !16
  %26 = bitcast i32 %22 to float, !dbg !16
  %27 = bitcast i32 %23 to float, !dbg !16
  %28 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %18, i1 true) #1, !dbg !16
  %29 = extractvalue { i32, i32, i32, i32 } %28, 0, !dbg !16
  %30 = extractvalue { i32, i32, i32, i32 } %28, 1, !dbg !16
  %31 = extractvalue { i32, i32, i32, i32 } %28, 2, !dbg !16
  %32 = extractvalue { i32, i32, i32, i32 } %28, 3, !dbg !16
  %33 = bitcast i32 %29 to float, !dbg !16
  %34 = bitcast i32 %30 to float, !dbg !16
  %35 = bitcast i32 %31 to float, !dbg !16
  %36 = bitcast i32 %32 to float, !dbg !16
  %37 = getelementptr float, ptr addrspace(1) %2, i64 %15, !dbg !17
  %38 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !17
  %39 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %37, i1 true) #1, !dbg !18
  %40 = extractvalue { i32, i32, i32, i32 } %39, 0, !dbg !18
  %41 = extractvalue { i32, i32, i32, i32 } %39, 1, !dbg !18
  %42 = extractvalue { i32, i32, i32, i32 } %39, 2, !dbg !18
  %43 = extractvalue { i32, i32, i32, i32 } %39, 3, !dbg !18
  %44 = bitcast i32 %40 to float, !dbg !18
  %45 = bitcast i32 %41 to float, !dbg !18
  %46 = bitcast i32 %42 to float, !dbg !18
  %47 = bitcast i32 %43 to float, !dbg !18
  %48 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %38, i1 true) #1, !dbg !18
  %49 = extractvalue { i32, i32, i32, i32 } %48, 0, !dbg !18
  %50 = extractvalue { i32, i32, i32, i32 } %48, 1, !dbg !18
  %51 = extractvalue { i32, i32, i32, i32 } %48, 2, !dbg !18
  %52 = extractvalue { i32, i32, i32, i32 } %48, 3, !dbg !18
  %53 = bitcast i32 %49 to float, !dbg !18
  %54 = bitcast i32 %50 to float, !dbg !18
  %55 = bitcast i32 %51 to float, !dbg !18
  %56 = bitcast i32 %52 to float, !dbg !18
  %57 = fmul float %14, %24, !dbg !19
  %58 = fmul float %14, %25, !dbg !19
  %59 = fmul float %14, %26, !dbg !19
  %60 = fmul float %14, %27, !dbg !19
  %61 = fmul float %14, %33, !dbg !19
  %62 = fmul float %14, %34, !dbg !19
  %63 = fmul float %14, %35, !dbg !19
  %64 = fmul float %14, %36, !dbg !19
  %65 = fadd float %57, %44, !dbg !20
  %66 = fadd float %58, %45, !dbg !20
  %67 = fadd float %59, %46, !dbg !20
  %68 = fadd float %60, %47, !dbg !20
  %69 = fadd float %61, %53, !dbg !20
  %70 = fadd float %62, %54, !dbg !20
  %71 = fadd float %63, %55, !dbg !20
  %72 = fadd float %64, %56, !dbg !20
  %73 = getelementptr float, ptr addrspace(1) %3, i64 %15, !dbg !21
  %74 = getelementptr float, ptr addrspace(1) %3, i64 %17, !dbg !21
  %75 = bitcast float %65 to i32, !dbg !22
  %76 = bitcast float %66 to i32, !dbg !22
  %77 = bitcast float %67 to i32, !dbg !22
  %78 = bitcast float %68 to i32, !dbg !22
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %75, i32 %76, i32 %77, i32 %78, ptr addrspace(1) %73, i1 true) #1, !dbg !22
  %79 = bitcast float %69 to i32, !dbg !22
  %80 = bitcast float %70 to i32, !dbg !22
  %81 = bitcast float %71 to i32, !dbg !22
  %82 = bitcast float %72 to i32, !dbg !22
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %79, i32 %80, i32 %81, i32 %82, ptr addrspace(1) %74, i1 true) #1, !dbg !22
  ret void, !dbg !23
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "clat5oz6c34hzr3t5446clcy5vwfsttupc5tvtrnmcnllcibwvqt.py", directory: "inductor_cache/la")
!4 = !{ptr @triton_poi_fused_add_mul_26, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_26, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_26", linkageName: "triton_poi_fused_add_mul_26", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 27, column: 30, scope: !7)
!16 = !DILocation(line: 27, column: 35, scope: !7)
!17 = !DILocation(line: 28, column: 30, scope: !7)
!18 = !DILocation(line: 28, column: 35, scope: !7)
!19 = !DILocation(line: 29, column: 18, scope: !7)
!20 = !DILocation(line: 30, column: 18, scope: !7)
!21 = !DILocation(line: 31, column: 25, scope: !7)
!22 = !DILocation(line: 31, column: 36, scope: !7)
!23 = !DILocation(line: 31, column: 4, scope: !7)
