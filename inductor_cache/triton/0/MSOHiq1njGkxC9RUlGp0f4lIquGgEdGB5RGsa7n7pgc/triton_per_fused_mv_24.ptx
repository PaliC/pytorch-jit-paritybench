//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mv_24  // -- Begin function triton_per_fused_mv_24
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mv_24
.visible .entry triton_per_fused_mv_24(
	.param .u64 .ptr .global .align 1 triton_per_fused_mv_24_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mv_24_param_1,
	.param .u32 triton_per_fused_mv_24_param_2,
	.param .u32 triton_per_fused_mv_24_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<45>;
	.reg .b32 	%r<143>;
	.reg .f32 	%f<97>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_per_fused_mv_24_param_0];
	ld.param.u64 	%rd11, [triton_per_fused_mv_24_param_1];
$L__tmp0:
	.loc	1 23 28                         // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:23:33
	shl.b32 	%r51, %r1, 7;
	.loc	1 24 44                         // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:24:44
	mov.u32 	%r52, %tid.x;
	bfe.u32 	%r53, %r52, 4, 4;
	and.b32  	%r54, %r52, 127;
	.loc	1 24 23                         // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:24:23
	or.b32  	%r55, %r51, %r53;
	or.b32  	%r56, %r55, 16;
	or.b32  	%r57, %r55, 32;
	or.b32  	%r58, %r55, 48;
	or.b32  	%r59, %r55, 64;
	or.b32  	%r60, %r55, 80;
	or.b32  	%r61, %r55, 96;
	or.b32  	%r62, %r55, 112;
	or.b32  	%r63, %r51, %r54;
	.loc	1 25 21                         // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:25:21
	setp.lt.s32 	%p34, %r55, 512;
	setp.lt.s32 	%p35, %r56, 512;
	setp.lt.s32 	%p36, %r57, 512;
	setp.lt.s32 	%p37, %r58, 512;
	setp.lt.s32 	%p38, %r59, 512;
	setp.lt.s32 	%p39, %r60, 512;
	setp.lt.s32 	%p40, %r61, 512;
	setp.lt.s32 	%p41, %r62, 512;
	setp.lt.s32 	%p42, %r63, 512;
	.loc	1 26 34                         // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:26:34
	shl.b32 	%r64, %r52, 1;
	and.b32  	%r65, %r64, 30;
	.loc	1 28 21                         // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:28:21
	setp.lt.u32 	%p43, %r65, 18;
	.loc	1 31 35                         // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:31:35
	mad.lo.s32 	%r66, %r55, 18, %r65;
	mad.lo.s32 	%r67, %r56, 18, %r65;
	mad.lo.s32 	%r68, %r57, 18, %r65;
	mad.lo.s32 	%r69, %r58, 18, %r65;
	mad.lo.s32 	%r70, %r59, 18, %r65;
	mad.lo.s32 	%r71, %r60, 18, %r65;
	mad.lo.s32 	%r72, %r61, 18, %r65;
	mad.lo.s32 	%r73, %r62, 18, %r65;
	.loc	1 31 30                         // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:31:30
	mul.wide.s32 	%rd12, %r66, 4;
	add.s64 	%rd1, %rd10, %rd12;
	mul.wide.s32 	%rd13, %r67, 4;
	add.s64 	%rd2, %rd10, %rd13;
	mul.wide.s32 	%rd14, %r68, 4;
	add.s64 	%rd3, %rd10, %rd14;
	mul.wide.s32 	%rd15, %r69, 4;
	add.s64 	%rd4, %rd10, %rd15;
	mul.wide.s32 	%rd16, %r70, 4;
	add.s64 	%rd5, %rd10, %rd16;
	mul.wide.s32 	%rd17, %r71, 4;
	add.s64 	%rd6, %rd10, %rd17;
	mul.wide.s32 	%rd18, %r72, 4;
	add.s64 	%rd7, %rd10, %rd18;
	mul.wide.s32 	%rd19, %r73, 4;
	add.s64 	%rd8, %rd10, %rd19;
	.loc	1 31 51                         // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:31:51
	and.pred  	%p1, %p43, %p34;
	and.pred  	%p4, %p43, %p35;
	and.pred  	%p7, %p43, %p36;
	and.pred  	%p10, %p43, %p37;
	and.pred  	%p13, %p43, %p38;
	and.pred  	%p16, %p43, %p39;
	and.pred  	%p19, %p43, %p40;
	and.pred  	%p22, %p43, %p41;
	mov.b32 	%r4, 0;
	.loc	1 31 43                         // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:31:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p4 ld.global.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	@!%p4 mov.u32 %r6, %r4;
	@!%p4 mov.u32 %r7, %r4;
	// end inline asm
	mov.b32 	%f3, %r6;
	mov.b32 	%f4, %r7;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p7 ld.global.v2.b32 { %r10, %r11 }, [ %rd3 + 0 ];
	@!%p7 mov.u32 %r10, %r4;
	@!%p7 mov.u32 %r11, %r4;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p10 ld.global.v2.b32 { %r14, %r15 }, [ %rd4 + 0 ];
	@!%p10 mov.u32 %r14, %r4;
	@!%p10 mov.u32 %r15, %r4;
	// end inline asm
	mov.b32 	%f7, %r14;
	mov.b32 	%f8, %r15;
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p13 ld.global.v2.b32 { %r18, %r19 }, [ %rd5 + 0 ];
	@!%p13 mov.u32 %r18, %r4;
	@!%p13 mov.u32 %r19, %r4;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p16 ld.global.v2.b32 { %r22, %r23 }, [ %rd6 + 0 ];
	@!%p16 mov.u32 %r22, %r4;
	@!%p16 mov.u32 %r23, %r4;
	// end inline asm
	mov.b32 	%f11, %r22;
	mov.b32 	%f12, %r23;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p19 ld.global.v2.b32 { %r26, %r27 }, [ %rd7 + 0 ];
	@!%p19 mov.u32 %r26, %r4;
	@!%p19 mov.u32 %r27, %r4;
	// end inline asm
	mov.b32 	%f13, %r26;
	mov.b32 	%f14, %r27;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	@%p22 ld.global.v2.b32 { %r30, %r31 }, [ %rd8 + 0 ];
	@!%p22 mov.u32 %r30, %r4;
	@!%p22 mov.u32 %r31, %r4;
	// end inline asm
	mov.b32 	%f15, %r30;
	mov.b32 	%f16, %r31;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f1, %f2;
	selp.f32 	%f18, %f17, 0f00000000, %p1;
	add.f32 	%f19, %f3, %f4;
	selp.f32 	%f20, %f19, 0f00000000, %p4;
	add.f32 	%f21, %f5, %f6;
	selp.f32 	%f22, %f21, 0f00000000, %p7;
	add.f32 	%f23, %f7, %f8;
	selp.f32 	%f24, %f23, 0f00000000, %p10;
	add.f32 	%f25, %f9, %f10;
	selp.f32 	%f26, %f25, 0f00000000, %p13;
	add.f32 	%f27, %f11, %f12;
	selp.f32 	%f28, %f27, 0f00000000, %p16;
	add.f32 	%f29, %f13, %f14;
	selp.f32 	%f30, %f29, 0f00000000, %p19;
	add.f32 	%f31, %f15, %f16;
	selp.f32 	%f32, %f31, 0f00000000, %p22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f18;
	shfl.sync.bfly.b32	%r75, %r74, 8, 31, -1;
	mov.b32 	%f33, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f18, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f34;
	shfl.sync.bfly.b32	%r77, %r76, 4, 31, -1;
	mov.b32 	%f35, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f36;
	shfl.sync.bfly.b32	%r79, %r78, 2, 31, -1;
	mov.b32 	%f37, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f38;
	shfl.sync.bfly.b32	%r81, %r80, 1, 31, -1;
	mov.b32 	%f39, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f20;
	shfl.sync.bfly.b32	%r83, %r82, 8, 31, -1;
	mov.b32 	%f41, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f20, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f42;
	shfl.sync.bfly.b32	%r85, %r84, 4, 31, -1;
	mov.b32 	%f43, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f44;
	shfl.sync.bfly.b32	%r87, %r86, 2, 31, -1;
	mov.b32 	%f45, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f46;
	shfl.sync.bfly.b32	%r89, %r88, 1, 31, -1;
	mov.b32 	%f47, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f22;
	shfl.sync.bfly.b32	%r91, %r90, 8, 31, -1;
	mov.b32 	%f49, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f22, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r92, %f50;
	shfl.sync.bfly.b32	%r93, %r92, 4, 31, -1;
	mov.b32 	%f51, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f52;
	shfl.sync.bfly.b32	%r95, %r94, 2, 31, -1;
	mov.b32 	%f53, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f54;
	shfl.sync.bfly.b32	%r97, %r96, 1, 31, -1;
	mov.b32 	%f55, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f24;
	shfl.sync.bfly.b32	%r99, %r98, 8, 31, -1;
	mov.b32 	%f57, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f24, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f58;
	shfl.sync.bfly.b32	%r101, %r100, 4, 31, -1;
	mov.b32 	%f59, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f60;
	shfl.sync.bfly.b32	%r103, %r102, 2, 31, -1;
	mov.b32 	%f61, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f62;
	shfl.sync.bfly.b32	%r105, %r104, 1, 31, -1;
	mov.b32 	%f63, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f26;
	shfl.sync.bfly.b32	%r107, %r106, 8, 31, -1;
	mov.b32 	%f65, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f26, %f65;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r108, %f66;
	shfl.sync.bfly.b32	%r109, %r108, 4, 31, -1;
	mov.b32 	%f67, %r109;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r110, %f68;
	shfl.sync.bfly.b32	%r111, %r110, 2, 31, -1;
	mov.b32 	%f69, %r111;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r112, %f70;
	shfl.sync.bfly.b32	%r113, %r112, 1, 31, -1;
	mov.b32 	%f71, %r113;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r114, %f28;
	shfl.sync.bfly.b32	%r115, %r114, 8, 31, -1;
	mov.b32 	%f73, %r115;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f28, %f73;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r116, %f74;
	shfl.sync.bfly.b32	%r117, %r116, 4, 31, -1;
	mov.b32 	%f75, %r117;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r118, %f76;
	shfl.sync.bfly.b32	%r119, %r118, 2, 31, -1;
	mov.b32 	%f77, %r119;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r120, %f78;
	shfl.sync.bfly.b32	%r121, %r120, 1, 31, -1;
	mov.b32 	%f79, %r121;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f80, %f78, %f79;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r122, %f30;
	shfl.sync.bfly.b32	%r123, %r122, 8, 31, -1;
	mov.b32 	%f81, %r123;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f30, %f81;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r124, %f82;
	shfl.sync.bfly.b32	%r125, %r124, 4, 31, -1;
	mov.b32 	%f83, %r125;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r126, %f84;
	shfl.sync.bfly.b32	%r127, %r126, 2, 31, -1;
	mov.b32 	%f85, %r127;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r128, %f86;
	shfl.sync.bfly.b32	%r129, %r128, 1, 31, -1;
	mov.b32 	%f87, %r129;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r130, %f32;
	shfl.sync.bfly.b32	%r131, %r130, 8, 31, -1;
	mov.b32 	%f89, %r131;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f32, %f89;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r132, %f90;
	shfl.sync.bfly.b32	%r133, %r132, 4, 31, -1;
	mov.b32 	%f91, %r133;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f92, %f90, %f91;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r134, %f92;
	shfl.sync.bfly.b32	%r135, %r134, 2, 31, -1;
	mov.b32 	%f93, %r135;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f94, %f92, %f93;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r136, %f94;
	shfl.sync.bfly.b32	%r137, %r136, 1, 31, -1;
	mov.b32 	%f95, %r137;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f96, %f94, %f95;
$L__tmp2:
	.loc	1 34 27                         // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:34:27
	shl.b32 	%r138, %r53, 2;
	mov.u32 	%r139, global_smem;
	add.s32 	%r34, %r139, %r138;
	mov.b32 	%r35, %f40;
	mov.pred 	%p25, -1;
	// begin inline asm
	@%p25 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	add.s32 	%r36, %r34, 64;
	mov.b32 	%r37, %f48;
	// begin inline asm
	@%p25 st.shared.b32 [ %r36 + 0 ], %r37;
	// end inline asm
	add.s32 	%r38, %r34, 128;
	mov.b32 	%r39, %f56;
	// begin inline asm
	@%p25 st.shared.b32 [ %r38 + 0 ], %r39;
	// end inline asm
	add.s32 	%r40, %r34, 192;
	mov.b32 	%r41, %f64;
	// begin inline asm
	@%p25 st.shared.b32 [ %r40 + 0 ], %r41;
	// end inline asm
	add.s32 	%r42, %r34, 256;
	mov.b32 	%r43, %f72;
	// begin inline asm
	@%p25 st.shared.b32 [ %r42 + 0 ], %r43;
	// end inline asm
	add.s32 	%r44, %r34, 320;
	mov.b32 	%r45, %f80;
	// begin inline asm
	@%p25 st.shared.b32 [ %r44 + 0 ], %r45;
	// end inline asm
	add.s32 	%r46, %r34, 384;
	mov.b32 	%r47, %f88;
	// begin inline asm
	@%p25 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r48, %r34, 448;
	mov.b32 	%r49, %f96;
	// begin inline asm
	@%p25 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r140, %r54, 2;
	add.s32 	%r141, %r139, %r140;
	ld.shared.u32 	%r50, [%r141];
	.loc	1 35 25                         // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:35:25
	mul.wide.s32 	%rd20, %r63, 4;
	add.s64 	%rd9, %rd11, %rd20;
	.loc	1 35 36                         // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:35:36
	and.b32  	%r142, %r52, 128;
	setp.eq.s32 	%p44, %r142, 0;
	and.pred  	%p33, %p44, %p42;
	// begin inline asm
	@%p33 st.global.b32 [ %rd9 + 0 ], { %r50 };
	// end inline asm
	.loc	1 35 4                          // cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py:35:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vv/cvvgxulgtk3oumnutjpwqhnslrn3oxlpdvwzisfy6vo4yml5yp7c.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 167                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 118
.b8 103
.b8 120
.b8 117
.b8 108
.b8 103
.b8 116
.b8 107
.b8 51
.b8 111
.b8 117
.b8 109
.b8 110
.b8 117
.b8 116
.b8 106
.b8 112
.b8 119
.b8 113
.b8 104
.b8 110
.b8 115
.b8 108
.b8 114
.b8 110
.b8 51
.b8 111
.b8 120
.b8 108
.b8 112
.b8 100
.b8 118
.b8 119
.b8 122
.b8 105
.b8 115
.b8 102
.b8 121
.b8 54
.b8 118
.b8 111
.b8 52
.b8 121
.b8 109
.b8 108
.b8 53
.b8 121
.b8 112
.b8 55
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x19 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 118
.b8 95
.b8 50
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7c:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x91:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 34                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
