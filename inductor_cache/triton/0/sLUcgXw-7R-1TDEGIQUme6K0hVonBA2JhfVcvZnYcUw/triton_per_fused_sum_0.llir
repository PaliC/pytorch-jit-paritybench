; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %5 = and i32 %4, 48, !dbg !11
  %6 = icmp ne i32 %5, 48, !dbg !11
  %.tr = trunc i32 %4 to i8, !dbg !12
  %.lhs.trunc = shl i8 %.tr, 2, !dbg !12
  %7 = udiv i8 %.lhs.trunc, 48, !dbg !12
  %.zext = zext nneg i8 %7 to i64, !dbg !12
  %8 = shl nuw nsw i64 %.zext, 6, !dbg !13
  %9 = or disjoint i64 %8, 16, !dbg !14
  %10 = mul i8 %7, 48, !dbg !15
  %.decomposed = sub i8 %.lhs.trunc, %10, !dbg !15
  %.zext92 = zext nneg i8 %.decomposed to i64, !dbg !15
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %9, !dbg !16
  %12 = getelementptr float, ptr addrspace(1) %11, i64 %.zext92, !dbg !16
  %13 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %12, i1 %6, i32 0, i1 %6, i32 0, i1 %6, i32 0, i1 %6, i32 0, i1 %6) #4, !dbg !17
  %14 = extractvalue { i32, i32, i32, i32 } %13, 0, !dbg !17
  %15 = extractvalue { i32, i32, i32, i32 } %13, 1, !dbg !17
  %16 = extractvalue { i32, i32, i32, i32 } %13, 2, !dbg !17
  %17 = extractvalue { i32, i32, i32, i32 } %13, 3, !dbg !17
  %18 = bitcast i32 %14 to float, !dbg !17
  %19 = bitcast i32 %15 to float, !dbg !17
  %20 = bitcast i32 %16 to float, !dbg !17
  %21 = bitcast i32 %17 to float, !dbg !17
  %22 = fadd float %18, 0x3FE8000040000000, !dbg !18
  %23 = fadd float %19, 0x3FE8000040000000, !dbg !18
  %24 = fadd float %20, 0x3FE8000040000000, !dbg !18
  %25 = fadd float %21, 0x3FE8000040000000, !dbg !18
  %26 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 7.500000e-01, float %22) #4, !dbg !19
  %27 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 7.500000e-01, float %23) #4, !dbg !19
  %28 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 7.500000e-01, float %24) #4, !dbg !19
  %29 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 7.500000e-01, float %25) #4, !dbg !19
  %30 = fcmp olt float %26, 0x3810000000000000, !dbg !20
  %31 = fmul float %26, 0x4160000000000000, !dbg !20
  %.02.i = select i1 %30, float %31, float %26, !dbg !20
  %i.i.0.i = select i1 %30, float -2.300000e+01, float 0.000000e+00, !dbg !20
  %32 = bitcast float %.02.i to i32, !dbg !20
  %33 = add i32 %32, -1059760811, !dbg !20
  %34 = and i32 %33, -8388608, !dbg !20
  %35 = sub i32 %32, %34, !dbg !20
  %36 = bitcast i32 %35 to float, !dbg !20
  %37 = sitofp i32 %34 to float, !dbg !20
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not.i = icmp eq i32 %38, 0, !dbg !20
  %39 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %37, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !20
  %40 = tail call float @llvm.nvvm.fma.rn.f(float %37, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !20
  %.08.i = select i1 %.not.i, float %40, float %39, !dbg !20
  %41 = fadd float %36, -1.000000e+00, !dbg !20
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not1.i = icmp eq i32 %42, 0, !dbg !20
  %43 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %41, float 0x3FC2073EC0000000) #4, !dbg !20
  %44 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %41, float 0x3FC2073EC0000000) #4, !dbg !20
  %.010.i = select i1 %.not1.i, float %44, float %43, !dbg !20
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not2.i = icmp eq i32 %45, 0, !dbg !20
  %46 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %41, float 0xBFBF19B980000000) #4, !dbg !20
  %47 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %41, float 0xBFBF19B980000000) #4, !dbg !20
  %.011.i = select i1 %.not2.i, float %47, float %46, !dbg !20
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not3.i = icmp eq i32 %48, 0, !dbg !20
  %49 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %41, float 0x3FC1E52AA0000000) #4, !dbg !20
  %50 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %41, float 0x3FC1E52AA0000000) #4, !dbg !20
  %.012.i = select i1 %.not3.i, float %50, float %49, !dbg !20
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not4.i = icmp eq i32 %51, 0, !dbg !20
  %52 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %41, float 0xBFC55B1720000000) #4, !dbg !20
  %53 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %41, float 0xBFC55B1720000000) #4, !dbg !20
  %.09.i = select i1 %.not4.i, float %53, float %52, !dbg !20
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not5.i = icmp eq i32 %54, 0, !dbg !20
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %41, float 0x3FC99DA160000000) #4, !dbg !20
  %56 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %41, float 0x3FC99DA160000000) #4, !dbg !20
  %.05.i = select i1 %.not5.i, float %56, float %55, !dbg !20
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not6.i = icmp eq i32 %57, 0, !dbg !20
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %41, float 0xBFCFFFE440000000) #4, !dbg !20
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %41, float 0xBFCFFFE440000000) #4, !dbg !20
  %.01.i = select i1 %.not6.i, float %59, float %58, !dbg !20
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not7.i = icmp eq i32 %60, 0, !dbg !20
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %41, float 0x3FD5554F00000000) #4, !dbg !20
  %62 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %41, float 0x3FD5554F00000000) #4, !dbg !20
  %.0.i = select i1 %.not7.i, float %62, float %61, !dbg !20
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not8.i = icmp eq i32 %63, 0, !dbg !20
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %41, float -5.000000e-01) #4, !dbg !20
  %65 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %41, float -5.000000e-01) #4, !dbg !20
  %.07.i = select i1 %.not8.i, float %65, float %64, !dbg !20
  %66 = fmul float %41, %.07.i, !dbg !20
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not9.i = icmp eq i32 %67, 0, !dbg !20
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %66, float %41, float %41) #4, !dbg !20
  %69 = tail call float @llvm.nvvm.fma.rn.f(float %66, float %41, float %41) #4, !dbg !20
  %.06.i = select i1 %.not9.i, float %69, float %68, !dbg !20
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not10.i = icmp eq i32 %70, 0, !dbg !20
  %71 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !20
  %72 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !20
  %.04.i = select i1 %.not10.i, float %72, float %71, !dbg !20
  %73 = icmp ugt i32 %32, 2139095039, !dbg !20
  br i1 %73, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !20

__nv_fmaf_rn.exit.i.i:                            ; preds = %3
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not11.i = icmp eq i32 %74, 0, !dbg !20
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !20
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !20
  %.03.i = select i1 %.not11.i, float %76, float %75, !dbg !20
  br label %__nv_logf.exit, !dbg !20

__nv_logf.exit:                                   ; preds = %3, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %3 ], !dbg !20
  %77 = fcmp olt float %27, 0x3810000000000000, !dbg !20
  %78 = fmul float %27, 0x4160000000000000, !dbg !20
  %.02.i1 = select i1 %77, float %78, float %27, !dbg !20
  %i.i.0.i2 = select i1 %77, float -2.300000e+01, float 0.000000e+00, !dbg !20
  %79 = bitcast float %.02.i1 to i32, !dbg !20
  %80 = add i32 %79, -1059760811, !dbg !20
  %81 = and i32 %80, -8388608, !dbg !20
  %82 = sub i32 %79, %81, !dbg !20
  %83 = bitcast i32 %82 to float, !dbg !20
  %84 = sitofp i32 %81 to float, !dbg !20
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not.i3 = icmp eq i32 %85, 0, !dbg !20
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %84, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !20
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %84, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !20
  %.08.i4 = select i1 %.not.i3, float %87, float %86, !dbg !20
  %88 = fadd float %83, -1.000000e+00, !dbg !20
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not1.i5 = icmp eq i32 %89, 0, !dbg !20
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %88, float 0x3FC2073EC0000000) #4, !dbg !20
  %91 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %88, float 0x3FC2073EC0000000) #4, !dbg !20
  %.010.i6 = select i1 %.not1.i5, float %91, float %90, !dbg !20
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not2.i7 = icmp eq i32 %92, 0, !dbg !20
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %88, float 0xBFBF19B980000000) #4, !dbg !20
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %88, float 0xBFBF19B980000000) #4, !dbg !20
  %.011.i8 = select i1 %.not2.i7, float %94, float %93, !dbg !20
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not3.i9 = icmp eq i32 %95, 0, !dbg !20
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %88, float 0x3FC1E52AA0000000) #4, !dbg !20
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %88, float 0x3FC1E52AA0000000) #4, !dbg !20
  %.012.i10 = select i1 %.not3.i9, float %97, float %96, !dbg !20
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not4.i11 = icmp eq i32 %98, 0, !dbg !20
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %88, float 0xBFC55B1720000000) #4, !dbg !20
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %88, float 0xBFC55B1720000000) #4, !dbg !20
  %.09.i12 = select i1 %.not4.i11, float %100, float %99, !dbg !20
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not5.i13 = icmp eq i32 %101, 0, !dbg !20
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %88, float 0x3FC99DA160000000) #4, !dbg !20
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %88, float 0x3FC99DA160000000) #4, !dbg !20
  %.05.i14 = select i1 %.not5.i13, float %103, float %102, !dbg !20
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not6.i15 = icmp eq i32 %104, 0, !dbg !20
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %88, float 0xBFCFFFE440000000) #4, !dbg !20
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %88, float 0xBFCFFFE440000000) #4, !dbg !20
  %.01.i16 = select i1 %.not6.i15, float %106, float %105, !dbg !20
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not7.i17 = icmp eq i32 %107, 0, !dbg !20
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %88, float 0x3FD5554F00000000) #4, !dbg !20
  %109 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %88, float 0x3FD5554F00000000) #4, !dbg !20
  %.0.i18 = select i1 %.not7.i17, float %109, float %108, !dbg !20
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not8.i19 = icmp eq i32 %110, 0, !dbg !20
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %88, float -5.000000e-01) #4, !dbg !20
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %88, float -5.000000e-01) #4, !dbg !20
  %.07.i20 = select i1 %.not8.i19, float %112, float %111, !dbg !20
  %113 = fmul float %88, %.07.i20, !dbg !20
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not9.i21 = icmp eq i32 %114, 0, !dbg !20
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %113, float %88, float %88) #4, !dbg !20
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %113, float %88, float %88) #4, !dbg !20
  %.06.i22 = select i1 %.not9.i21, float %116, float %115, !dbg !20
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not10.i23 = icmp eq i32 %117, 0, !dbg !20
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !20
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !20
  %.04.i24 = select i1 %.not10.i23, float %119, float %118, !dbg !20
  %120 = icmp ugt i32 %79, 2139095039, !dbg !20
  br i1 %120, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !20

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not11.i28 = icmp eq i32 %121, 0, !dbg !20
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !20
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !20
  %.03.i29 = select i1 %.not11.i28, float %123, float %122, !dbg !20
  br label %__nv_logf.exit30, !dbg !20

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !20
  %124 = fcmp olt float %28, 0x3810000000000000, !dbg !20
  %125 = fmul float %28, 0x4160000000000000, !dbg !20
  %.02.i31 = select i1 %124, float %125, float %28, !dbg !20
  %i.i.0.i32 = select i1 %124, float -2.300000e+01, float 0.000000e+00, !dbg !20
  %126 = bitcast float %.02.i31 to i32, !dbg !20
  %127 = add i32 %126, -1059760811, !dbg !20
  %128 = and i32 %127, -8388608, !dbg !20
  %129 = sub i32 %126, %128, !dbg !20
  %130 = bitcast i32 %129 to float, !dbg !20
  %131 = sitofp i32 %128 to float, !dbg !20
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not.i33 = icmp eq i32 %132, 0, !dbg !20
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %131, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !20
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %131, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !20
  %.08.i34 = select i1 %.not.i33, float %134, float %133, !dbg !20
  %135 = fadd float %130, -1.000000e+00, !dbg !20
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not1.i35 = icmp eq i32 %136, 0, !dbg !20
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %135, float 0x3FC2073EC0000000) #4, !dbg !20
  %138 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %135, float 0x3FC2073EC0000000) #4, !dbg !20
  %.010.i36 = select i1 %.not1.i35, float %138, float %137, !dbg !20
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not2.i37 = icmp eq i32 %139, 0, !dbg !20
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %135, float 0xBFBF19B980000000) #4, !dbg !20
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %135, float 0xBFBF19B980000000) #4, !dbg !20
  %.011.i38 = select i1 %.not2.i37, float %141, float %140, !dbg !20
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not3.i39 = icmp eq i32 %142, 0, !dbg !20
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %135, float 0x3FC1E52AA0000000) #4, !dbg !20
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %135, float 0x3FC1E52AA0000000) #4, !dbg !20
  %.012.i40 = select i1 %.not3.i39, float %144, float %143, !dbg !20
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not4.i41 = icmp eq i32 %145, 0, !dbg !20
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %135, float 0xBFC55B1720000000) #4, !dbg !20
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %135, float 0xBFC55B1720000000) #4, !dbg !20
  %.09.i42 = select i1 %.not4.i41, float %147, float %146, !dbg !20
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not5.i43 = icmp eq i32 %148, 0, !dbg !20
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %135, float 0x3FC99DA160000000) #4, !dbg !20
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %135, float 0x3FC99DA160000000) #4, !dbg !20
  %.05.i44 = select i1 %.not5.i43, float %150, float %149, !dbg !20
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not6.i45 = icmp eq i32 %151, 0, !dbg !20
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %135, float 0xBFCFFFE440000000) #4, !dbg !20
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %135, float 0xBFCFFFE440000000) #4, !dbg !20
  %.01.i46 = select i1 %.not6.i45, float %153, float %152, !dbg !20
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not7.i47 = icmp eq i32 %154, 0, !dbg !20
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %135, float 0x3FD5554F00000000) #4, !dbg !20
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %135, float 0x3FD5554F00000000) #4, !dbg !20
  %.0.i48 = select i1 %.not7.i47, float %156, float %155, !dbg !20
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not8.i49 = icmp eq i32 %157, 0, !dbg !20
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %135, float -5.000000e-01) #4, !dbg !20
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %135, float -5.000000e-01) #4, !dbg !20
  %.07.i50 = select i1 %.not8.i49, float %159, float %158, !dbg !20
  %160 = fmul float %135, %.07.i50, !dbg !20
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not9.i51 = icmp eq i32 %161, 0, !dbg !20
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %160, float %135, float %135) #4, !dbg !20
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %160, float %135, float %135) #4, !dbg !20
  %.06.i52 = select i1 %.not9.i51, float %163, float %162, !dbg !20
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not10.i53 = icmp eq i32 %164, 0, !dbg !20
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !20
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !20
  %.04.i54 = select i1 %.not10.i53, float %166, float %165, !dbg !20
  %167 = icmp ugt i32 %126, 2139095039, !dbg !20
  br i1 %167, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !20

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not11.i58 = icmp eq i32 %168, 0, !dbg !20
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !20
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !20
  %.03.i59 = select i1 %.not11.i58, float %170, float %169, !dbg !20
  br label %__nv_logf.exit60, !dbg !20

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !20
  %171 = fcmp olt float %29, 0x3810000000000000, !dbg !20
  %172 = fmul float %29, 0x4160000000000000, !dbg !20
  %.02.i61 = select i1 %171, float %172, float %29, !dbg !20
  %i.i.0.i62 = select i1 %171, float -2.300000e+01, float 0.000000e+00, !dbg !20
  %173 = bitcast float %.02.i61 to i32, !dbg !20
  %174 = add i32 %173, -1059760811, !dbg !20
  %175 = and i32 %174, -8388608, !dbg !20
  %176 = sub i32 %173, %175, !dbg !20
  %177 = bitcast i32 %176 to float, !dbg !20
  %178 = sitofp i32 %175 to float, !dbg !20
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not.i63 = icmp eq i32 %179, 0, !dbg !20
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %178, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !20
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %178, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !20
  %.08.i64 = select i1 %.not.i63, float %181, float %180, !dbg !20
  %182 = fadd float %177, -1.000000e+00, !dbg !20
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not1.i65 = icmp eq i32 %183, 0, !dbg !20
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %182, float 0x3FC2073EC0000000) #4, !dbg !20
  %185 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %182, float 0x3FC2073EC0000000) #4, !dbg !20
  %.010.i66 = select i1 %.not1.i65, float %185, float %184, !dbg !20
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not2.i67 = icmp eq i32 %186, 0, !dbg !20
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %182, float 0xBFBF19B980000000) #4, !dbg !20
  %188 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %182, float 0xBFBF19B980000000) #4, !dbg !20
  %.011.i68 = select i1 %.not2.i67, float %188, float %187, !dbg !20
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not3.i69 = icmp eq i32 %189, 0, !dbg !20
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %182, float 0x3FC1E52AA0000000) #4, !dbg !20
  %191 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %182, float 0x3FC1E52AA0000000) #4, !dbg !20
  %.012.i70 = select i1 %.not3.i69, float %191, float %190, !dbg !20
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not4.i71 = icmp eq i32 %192, 0, !dbg !20
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %182, float 0xBFC55B1720000000) #4, !dbg !20
  %194 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %182, float 0xBFC55B1720000000) #4, !dbg !20
  %.09.i72 = select i1 %.not4.i71, float %194, float %193, !dbg !20
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not5.i73 = icmp eq i32 %195, 0, !dbg !20
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %182, float 0x3FC99DA160000000) #4, !dbg !20
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %182, float 0x3FC99DA160000000) #4, !dbg !20
  %.05.i74 = select i1 %.not5.i73, float %197, float %196, !dbg !20
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not6.i75 = icmp eq i32 %198, 0, !dbg !20
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %182, float 0xBFCFFFE440000000) #4, !dbg !20
  %200 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %182, float 0xBFCFFFE440000000) #4, !dbg !20
  %.01.i76 = select i1 %.not6.i75, float %200, float %199, !dbg !20
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not7.i77 = icmp eq i32 %201, 0, !dbg !20
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %182, float 0x3FD5554F00000000) #4, !dbg !20
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %182, float 0x3FD5554F00000000) #4, !dbg !20
  %.0.i78 = select i1 %.not7.i77, float %203, float %202, !dbg !20
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not8.i79 = icmp eq i32 %204, 0, !dbg !20
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %182, float -5.000000e-01) #4, !dbg !20
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %182, float -5.000000e-01) #4, !dbg !20
  %.07.i80 = select i1 %.not8.i79, float %206, float %205, !dbg !20
  %207 = fmul float %182, %.07.i80, !dbg !20
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not9.i81 = icmp eq i32 %208, 0, !dbg !20
  %209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %207, float %182, float %182) #4, !dbg !20
  %210 = tail call float @llvm.nvvm.fma.rn.f(float %207, float %182, float %182) #4, !dbg !20
  %.06.i82 = select i1 %.not9.i81, float %210, float %209, !dbg !20
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not10.i83 = icmp eq i32 %211, 0, !dbg !20
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !20
  %213 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !20
  %.04.i84 = select i1 %.not10.i83, float %213, float %212, !dbg !20
  %214 = icmp ugt i32 %173, 2139095039, !dbg !20
  br i1 %214, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !20

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !20
  %.not11.i88 = icmp eq i32 %215, 0, !dbg !20
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !20
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !20
  %.03.i89 = select i1 %.not11.i88, float %217, float %216, !dbg !20
  br label %__nv_logf.exit90, !dbg !20

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !20
  %218 = fcmp oeq float %.02.i31, 0.000000e+00, !dbg !20
  %r.i.1.i56 = select i1 %218, float 0xFFF0000000000000, float %r.i.0.i55, !dbg !20
  %219 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !20
  %r.i.1.i26 = select i1 %219, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !20
  %220 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !20
  %r.i.1.i = select i1 %220, float 0xFFF0000000000000, float %r.i.0.i, !dbg !20
  %221 = lshr i32 %4, 5, !dbg !10
  %222 = and i32 %4, 31, !dbg !10
  %223 = fcmp oeq float %.02.i61, 0.000000e+00, !dbg !20
  %r.i.1.i86 = select i1 %223, float 0xFFF0000000000000, float %r.i.0.i85, !dbg !20
  %224 = fadd float %r.i.1.i, %r.i.1.i26, !dbg !21
  %225 = fadd float %224, %r.i.1.i56, !dbg !21
  %226 = fadd float %225, %r.i.1.i86, !dbg !21
  %227 = select i1 %6, float %226, float 0.000000e+00, !dbg !21
  %228 = bitcast float %227 to i32, !dbg !26
  %229 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %228, i32 16, i32 31), !dbg !26
  %230 = bitcast i32 %229 to float, !dbg !26
  %231 = fadd float %227, %230, !dbg !21
  %232 = bitcast float %231 to i32, !dbg !26
  %233 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %232, i32 8, i32 31), !dbg !26
  %234 = bitcast i32 %233 to float, !dbg !26
  %235 = fadd float %231, %234, !dbg !21
  %236 = bitcast float %235 to i32, !dbg !26
  %237 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %236, i32 4, i32 31), !dbg !26
  %238 = bitcast i32 %237 to float, !dbg !26
  %239 = fadd float %235, %238, !dbg !21
  %240 = bitcast float %239 to i32, !dbg !26
  %241 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %240, i32 2, i32 31), !dbg !26
  %242 = bitcast i32 %241 to float, !dbg !26
  %243 = fadd float %239, %242, !dbg !21
  %244 = bitcast float %243 to i32, !dbg !26
  %245 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %244, i32 1, i32 31), !dbg !26
  %246 = bitcast i32 %245 to float, !dbg !26
  %247 = fadd float %243, %246, !dbg !21
  %248 = icmp eq i32 %222, 0, !dbg !26
  %249 = and i32 %221, 1, !dbg !26
  %250 = zext nneg i32 %249 to i64, !dbg !26
  %251 = getelementptr float, ptr addrspace(3) @global_smem, i64 %250, !dbg !26
  %252 = bitcast float %247 to <1 x i32>, !dbg !26
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %251, <1 x i32> %252, i1 %248) #4, !dbg !26
  tail call void @llvm.nvvm.barrier0(), !dbg !26
  %253 = icmp slt i32 %4, 2, !dbg !26
  %254 = sext i32 %4 to i64, !dbg !26
  %255 = getelementptr float, ptr addrspace(3) @global_smem, i64 %254, !dbg !26
  %256 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %255, i1 %253) #4, !dbg !26
  %257 = bitcast i32 %256 to float, !dbg !26
  %258 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %256, i32 1, i32 31), !dbg !26
  %259 = bitcast i32 %258 to float, !dbg !26
  %260 = fadd float %257, %259, !dbg !21
  %261 = and i32 %4, 1, !dbg !26
  %262 = icmp eq i32 %261, 0, !dbg !26
  %263 = and i1 %253, %262, !dbg !26
  %264 = bitcast float %260 to <1 x i32>, !dbg !26
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %255, <1 x i32> %264, i1 %263) #4, !dbg !26
  tail call void @llvm.nvvm.barrier0(), !dbg !26
  %265 = load i32, ptr addrspace(3) @global_smem, align 16, !dbg !26
  %urem = and i32 %4, 63, !dbg !27
  %266 = icmp eq i32 %urem, 0, !dbg !27
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %265, ptr addrspace(1) %1, i1 %266) #4, !dbg !27
  ret void, !dbg !28
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cxmg4kfbcmv7uqj35mm2oa6kaovgle6zskpw34g445yi3zcrsikl.py", directory: "inductor_cache/xm")
!4 = !{ptr @triton_per_fused_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_sum_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_sum_0", linkageName: "triton_per_fused_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 28, column: 21, scope: !7)
!12 = !DILocation(line: 30, column: 45, scope: !7)
!13 = !DILocation(line: 30, column: 39, scope: !7)
!14 = !DILocation(line: 30, column: 35, scope: !7)
!15 = !DILocation(line: 30, column: 58, scope: !7)
!16 = !DILocation(line: 30, column: 30, scope: !7)
!17 = !DILocation(line: 30, column: 65, scope: !7)
!18 = !DILocation(line: 32, column: 18, scope: !7)
!19 = !DILocation(line: 34, column: 18, scope: !7)
!20 = !DILocation(line: 35, column: 23, scope: !7)
!21 = !DILocation(line: 256, column: 15, scope: !22, inlinedAt: !25)
!22 = distinct !DILexicalBlockFile(scope: !24, file: !23, discriminator: 0)
!23 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!24 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!25 = !DILocation(line: 38, column: 24, scope: !7)
!26 = !DILocation(line: 267, column: 36, scope: !24, inlinedAt: !25)
!27 = !DILocation(line: 39, column: 67, scope: !7)
!28 = !DILocation(line: 39, column: 4, scope: !7)
