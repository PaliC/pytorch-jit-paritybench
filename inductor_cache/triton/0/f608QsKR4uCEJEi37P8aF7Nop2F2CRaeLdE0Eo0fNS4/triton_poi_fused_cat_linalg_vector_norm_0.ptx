//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_linalg_vector_norm_0 // -- Begin function triton_poi_fused_cat_linalg_vector_norm_0
                                        // @triton_poi_fused_cat_linalg_vector_norm_0
.visible .entry triton_poi_fused_cat_linalg_vector_norm_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_linalg_vector_norm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_linalg_vector_norm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_linalg_vector_norm_0_param_2,
	.param .u32 triton_poi_fused_cat_linalg_vector_norm_0_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<48>;
	.reg .f32 	%f<9>;
	.reg .b64 	%rd<22>;
	.loc	1 19 0                          // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_cat_linalg_vector_norm_0_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_cat_linalg_vector_norm_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:21:33
	shl.b32 	%r19, %r1, 7;
	ld.param.u64 	%rd12, [triton_poi_fused_cat_linalg_vector_norm_0_param_2];
	.loc	1 22 36                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:22:36
	mov.u32 	%r20, %tid.x;
	and.b32  	%r21, %r20, 127;
	.loc	1 22 23                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:22:23
	or.b32  	%r22, %r19, %r21;
	.loc	1 23 21                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:23:21
	setp.lt.s32 	%p17, %r22, 128;
	.loc	1 24 19                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:24:19
	shr.s32 	%r24, %r22, 31;
	shr.u32 	%r25, %r24, 28;
	add.s32 	%r26, %r22, %r25;
	.loc	1 25 19                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:25:19
	and.b32  	%r27, %r26, -16;
	sub.s32 	%r28, %r22, %r27;
	.loc	1 31 18                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:31:18
	setp.lt.s32 	%p1, %r22, 64;
	.loc	1 32 39                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:32:39
	shl.b32 	%r29, %r26, 2;
	and.b32  	%r30, %r29, -64;
	.loc	1 32 35                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:32:35
	add.s32 	%r31, %r30, %r28;
	.loc	1 32 30                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:32:30
	mul.wide.s32 	%rd13, %r31, 4;
	add.s64 	%rd1, %rd10, %rd13;
	mov.b32 	%r3, 0;
	.loc	1 32 45                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:32:45
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	.loc	1 36 39                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:36:39
	add.s32 	%r32, %r30, -256;
	.loc	1 36 35                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:36:35
	add.s32 	%r33, %r32, %r28;
	.loc	1 36 30                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:36:30
	mul.wide.s32 	%rd14, %r33, 4;
	add.s64 	%rd2, %rd11, %rd14;
	.loc	1 36 59                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:36:59
	and.b32  	%r34, %r22, -64;
	setp.eq.s32 	%p3, %r34, 64;
	.loc	1 36 52                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:36:52
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	.loc	1 37 33                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:37:33
	selp.b32 	%r35, %r2, %r4, %p1;
	mov.b32 	%f1, %r35;
	.loc	1 39 36                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:39:36
	add.s32 	%r36, %r28, 16;
	.loc	1 39 41                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:39:41
	add.s32 	%r37, %r36, %r30;
	.loc	1 39 31                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:39:31
	mul.wide.s32 	%rd15, %r37, 4;
	add.s64 	%rd3, %rd10, %rd15;
	.loc	1 39 51                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:39:51
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r6, %r3;
	// end inline asm
	.loc	1 40 41                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:40:41
	add.s32 	%r38, %r32, %r36;
	.loc	1 40 31                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:40:31
	mul.wide.s32 	%rd16, %r38, 4;
	add.s64 	%rd4, %rd11, %rd16;
	.loc	1 40 58                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:40:58
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p3 ld.global.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p3 mov.u32 %r8, %r3;
	// end inline asm
	.loc	1 41 34                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:41:34
	selp.b32 	%r39, %r6, %r8, %p1;
	mov.b32 	%f2, %r39;
	.loc	1 42 20                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:42:20
	mul.f32 	%f3, %f2, %f2;
	.loc	1 43 20                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:43:20
	fma.rn.f32 	%f4, %f1, %f1, %f3;
	.loc	1 44 36                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:44:36
	add.s32 	%r40, %r28, 32;
	.loc	1 44 41                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:44:41
	add.s32 	%r41, %r40, %r30;
	.loc	1 44 31                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:44:31
	mul.wide.s32 	%rd17, %r41, 4;
	add.s64 	%rd5, %rd10, %rd17;
	.loc	1 44 51                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:44:51
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r10, %r3;
	// end inline asm
	.loc	1 45 41                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:45:41
	add.s32 	%r42, %r32, %r40;
	.loc	1 45 31                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:45:31
	mul.wide.s32 	%rd18, %r42, 4;
	add.s64 	%rd6, %rd11, %rd18;
	.loc	1 45 58                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:45:58
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p3 ld.global.b32 { %r12 }, [ %rd6 + 0 ];
	@!%p3 mov.u32 %r12, %r3;
	// end inline asm
	.loc	1 46 34                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:46:34
	selp.b32 	%r43, %r10, %r12, %p1;
	mov.b32 	%f5, %r43;
	.loc	1 48 20                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:48:20
	fma.rn.f32 	%f6, %f5, %f5, %f4;
	.loc	1 49 36                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:49:36
	add.s32 	%r44, %r28, 48;
	.loc	1 49 41                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:49:41
	add.s32 	%r45, %r44, %r30;
	.loc	1 49 31                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:49:31
	mul.wide.s32 	%rd19, %r45, 4;
	add.s64 	%rd7, %rd10, %rd19;
	.loc	1 49 51                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:49:51
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.b32 { %r14 }, [ %rd7 + 0 ];
	@!%p1 mov.u32 %r14, %r3;
	// end inline asm
	.loc	1 50 41                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:50:41
	add.s32 	%r46, %r32, %r44;
	.loc	1 50 31                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:50:31
	mul.wide.s32 	%rd20, %r46, 4;
	add.s64 	%rd8, %rd11, %rd20;
	.loc	1 50 58                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:50:58
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p3 ld.global.b32 { %r16 }, [ %rd8 + 0 ];
	@!%p3 mov.u32 %r16, %r3;
	// end inline asm
	.loc	1 51 34                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:51:34
	selp.b32 	%r47, %r14, %r16, %p1;
	mov.b32 	%f7, %r47;
	.loc	1 53 20                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:53:20
	fma.rn.f32 	%f8, %f7, %f7, %f6;
	.loc	1 54 25                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:54:25
	mul.wide.s32 	%rd21, %r22, 4;
	add.s64 	%rd9, %rd12, %rd21;
	.loc	1 54 37                         // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:54:37
	mov.b32 	%r18, %f8;
	// begin inline asm
	@%p17 st.global.b32 [ %rd9 + 0 ], { %r18 };
	// end inline asm
	.loc	1 54 4                          // ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py:54:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ku/ckuxiazspzhaucg652pxgspjqpdxbujvpcutsozof3f42rqopyr4.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 117
.b8 120
.b8 105
.b8 97
.b8 122
.b8 115
.b8 112
.b8 122
.b8 104
.b8 97
.b8 117
.b8 99
.b8 103
.b8 54
.b8 53
.b8 50
.b8 112
.b8 120
.b8 103
.b8 115
.b8 112
.b8 106
.b8 113
.b8 112
.b8 100
.b8 120
.b8 98
.b8 117
.b8 106
.b8 118
.b8 112
.b8 99
.b8 117
.b8 116
.b8 115
.b8 111
.b8 122
.b8 111
.b8 102
.b8 51
.b8 102
.b8 52
.b8 50
.b8 114
.b8 113
.b8 111
.b8 112
.b8 121
.b8 114
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 117
.b8 0
	}
	.section	.debug_macinfo	{	}
