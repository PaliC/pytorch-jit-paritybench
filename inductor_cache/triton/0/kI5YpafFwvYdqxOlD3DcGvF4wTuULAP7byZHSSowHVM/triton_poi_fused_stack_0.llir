; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_stack_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i109 = alloca [7 x i32], align 4
  %result.i.i.i.i54 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %6 = shl i32 %5, 5, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 31, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 24, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 8, !dbg !15
  %12 = mul i32 %11, 8, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %13 = icmp slt i32 %.decomposed, 4, !dbg !17
  %14 = shl nsw i32 %11, 3, !dbg !18
  %15 = add i32 %14, 12, !dbg !19
  %16 = add i32 %15, %.decomposed, !dbg !20
  %17 = sext i32 %16 to i64, !dbg !21
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !21
  %19 = and i1 %10, %13, !dbg !22
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %19, i32 0, i1 %19) #5, !dbg !23
  %21 = bitcast i32 %20 to float, !dbg !23
  %22 = or disjoint i32 %14, 4, !dbg !24
  %23 = add i32 %22, %.decomposed, !dbg !25
  %24 = sext i32 %23 to i64, !dbg !26
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !26
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %19, i32 0, i1 %19) #5, !dbg !27
  %27 = bitcast i32 %26 to float, !dbg !27
  %28 = fsub float 0.000000e+00, %27, !dbg !28
  %29 = fadd float %28, %21, !dbg !29
  %30 = add i32 %14, 8, !dbg !30
  %31 = add i32 %30, %.decomposed, !dbg !31
  %32 = sext i32 %31 to i64, !dbg !32
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !32
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %19, i32 0, i1 %19) #5, !dbg !33
  %35 = bitcast i32 %34 to float, !dbg !33
  %36 = add i32 %14, %.decomposed, !dbg !34
  %37 = sext i32 %36 to i64, !dbg !35
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !35
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %19, i32 0, i1 %19) #5, !dbg !36
  %40 = bitcast i32 %39 to float, !dbg !36
  %41 = fsub float 0.000000e+00, %40, !dbg !37
  %42 = fadd float %41, %35, !dbg !38
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !39
  %.not.i164 = icmp eq i32 %43, 0, !dbg !39
  %44 = tail call float @llvm.nvvm.fabs.ftz.f(float %42) #5, !dbg !39
  %45 = tail call float @llvm.nvvm.fabs.f(float %42) #5, !dbg !39
  %.02.i165 = select i1 %.not.i164, float %45, float %44, !dbg !39
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !39
  %.not3.i = icmp eq i32 %46, 0, !dbg !39
  %47 = tail call float @llvm.nvvm.fabs.ftz.f(float %29) #5, !dbg !39
  %48 = tail call float @llvm.nvvm.fabs.f(float %29) #5, !dbg !39
  %.03.i166 = select i1 %.not3.i, float %48, float %47, !dbg !39
  %49 = fcmp oeq float %.02.i165, 0.000000e+00, !dbg !39
  %50 = fcmp oeq float %.03.i166, 0.000000e+00, !dbg !39
  %or.cond.i = select i1 %49, i1 %50, i1 false, !dbg !39
  br i1 %or.cond.i, label %51, label %57, !dbg !39

51:                                               ; preds = %4
  %52 = bitcast float %42 to i32, !dbg !39
  %53 = icmp slt i32 %52, 0, !dbg !39
  %54 = select i1 %53, i32 1078530011, i32 0, !dbg !39
  %55 = bitcast i32 %54 to float, !dbg !39
  %56 = tail call float @llvm.copysign.f32(float %55, float %29), !dbg !39
  br label %__nv_atan2f.exit, !dbg !39

57:                                               ; preds = %4
  %58 = fcmp oeq float %.02.i165, 0x7FF0000000000000, !dbg !39
  %59 = fcmp oeq float %.03.i166, 0x7FF0000000000000, !dbg !39
  %or.cond2.i = select i1 %58, i1 %59, i1 false, !dbg !39
  br i1 %or.cond2.i, label %60, label %__nv_fmaxf.exit.i, !dbg !39

60:                                               ; preds = %57
  %61 = bitcast float %42 to i32, !dbg !39
  %62 = icmp slt i32 %61, 0, !dbg !39
  %63 = select i1 %62, i32 1075235812, i32 1061752795, !dbg !39
  %64 = bitcast i32 %63 to float, !dbg !39
  %65 = tail call float @llvm.copysign.f32(float %64, float %29), !dbg !39
  br label %__nv_atan2f.exit, !dbg !39

__nv_fmaxf.exit.i:                                ; preds = %57
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !39
  %.not4.i = icmp eq i32 %66, 0, !dbg !39
  %67 = tail call float @llvm.nvvm.fmax.ftz.f(float %.03.i166, float %.02.i165) #5, !dbg !39
  %68 = tail call float @llvm.nvvm.fmax.f(float %.03.i166, float %.02.i165) #5, !dbg !39
  %.01.i167 = select i1 %.not4.i, float %68, float %67, !dbg !39
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !39
  %.not5.i = icmp eq i32 %69, 0, !dbg !39
  %70 = tail call float @llvm.nvvm.fmin.ftz.f(float %.03.i166, float %.02.i165) #5, !dbg !39
  %71 = tail call float @llvm.nvvm.fmin.f(float %.03.i166, float %.02.i165) #5, !dbg !39
  %.0.i168 = select i1 %.not5.i, float %71, float %70, !dbg !39
  %72 = fdiv float %.0.i168, %.01.i167, !dbg !39
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !39
  %.not6.i = icmp eq i32 %73, 0, !dbg !39
  %74 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %72, float %72) #5, !dbg !39
  %75 = tail call float @llvm.nvvm.mul.rn.f(float %72, float %72) #5, !dbg !39
  %.04.i169 = select i1 %.not6.i, float %75, float %74, !dbg !39
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !39
  %.not7.i = icmp eq i32 %76, 0, !dbg !39
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i169, float 0xBFEA58FD40000000, float 0xC016B31060000000) #5, !dbg !39
  %78 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i169, float 0xBFEA58FD40000000, float 0xC016B31060000000) #5, !dbg !39
  %.05.i170 = select i1 %.not7.i, float %78, float %77, !dbg !39
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !39
  %.not8.i = icmp eq i32 %79, 0, !dbg !39
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i170, float %.04.i169, float 0xC01A4320E0000000) #5, !dbg !39
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i170, float %.04.i169, float 0xC01A4320E0000000) #5, !dbg !39
  %.06.i171 = select i1 %.not8.i, float %81, float %80, !dbg !39
  %82 = fmul float %.04.i169, %.06.i171, !dbg !39
  %83 = fmul float %72, %82, !dbg !39
  %84 = fadd float %.04.i169, 0x4026ABB800000000, !dbg !39
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !39
  %.not9.i = icmp eq i32 %85, 0, !dbg !39
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %84, float %.04.i169, float 0x403CD7AC00000000) #5, !dbg !39
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %84, float %.04.i169, float 0x403CD7AC00000000) #5, !dbg !39
  %.07.i172 = select i1 %.not9.i, float %87, float %86, !dbg !39
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !39
  %.not10.i = icmp eq i32 %88, 0, !dbg !39
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i172, float %.04.i169, float 0x4033B25900000000) #5, !dbg !39
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i172, float %.04.i169, float 0x4033B25900000000) #5, !dbg !39
  %.08.i173 = select i1 %.not10.i, float %90, float %89, !dbg !39
  %91 = fdiv float 1.000000e+00, %.08.i173, !dbg !39
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !39
  %.not11.i = icmp eq i32 %92, 0, !dbg !39
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %83, float %91, float %72) #5, !dbg !39
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %83, float %91, float %72) #5, !dbg !39
  %.09.i174 = select i1 %.not11.i, float %94, float %93, !dbg !39
  %95 = fcmp ogt float %.03.i166, %.02.i165, !dbg !39
  %96 = fsub float 0x3FF921FB60000000, %.09.i174, !dbg !39
  %t0.0.i = select i1 %95, float %96, float %.09.i174, !dbg !39
  %97 = bitcast float %42 to i32, !dbg !39
  %98 = icmp slt i32 %97, 0, !dbg !39
  %99 = fsub float 0x400921FB60000000, %t0.0.i, !dbg !39
  %t0.1.i = select i1 %98, float %99, float %t0.0.i, !dbg !39
  %100 = bitcast float %t0.1.i to i32, !dbg !39
  %101 = bitcast float %29 to i32, !dbg !39
  %102 = and i32 %101, -2147483648, !dbg !39
  %103 = or i32 %102, %100, !dbg !39
  %104 = bitcast i32 %103 to float, !dbg !39
  %105 = fadd float %.03.i166, %.02.i165, !dbg !39
  %106 = fcmp ord float %105, 0.000000e+00, !dbg !39
  %t0.2.i = select i1 %106, float %104, float %105, !dbg !39
  br label %__nv_atan2f.exit, !dbg !39

__nv_atan2f.exit:                                 ; preds = %51, %60, %__nv_fmaxf.exit.i
  %t0.4.i = phi float [ %56, %51 ], [ %65, %60 ], [ %t0.2.i, %__nv_fmaxf.exit.i ], !dbg !39
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i203 = icmp eq i32 %107, 0, !dbg !40
  %108 = tail call float @llvm.nvvm.fabs.ftz.f(float 0x3FF921FB40000000) #5, !dbg !40
  %109 = tail call float @llvm.nvvm.fabs.f(float 0x3FF921FB40000000) #5, !dbg !40
  %.0.i204 = select i1 %.not.i203, float %109, float %108, !dbg !40
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not16.i205 = icmp eq i32 %110, 0, !dbg !40
  %111 = tail call float @llvm.nvvm.fabs.ftz.f(float %t0.4.i) #5, !dbg !40
  %112 = tail call float @llvm.nvvm.fabs.f(float %t0.4.i) #5, !dbg !40
  %.01.i206 = select i1 %.not16.i205, float %112, float %111, !dbg !40
  %113 = fcmp olt float %.01.i206, %.0.i204, !dbg !40
  br i1 %113, label %__internal_fmodf_kernel.exit.i, label %114, !dbg !40

114:                                              ; preds = %__nv_atan2f.exit
  %115 = fmul float %.0.i204, 0x4160000000000000, !dbg !40
  %116 = fcmp ugt float %.01.i206, %115, !dbg !40
  br i1 %116, label %147, label %117, !dbg !40

117:                                              ; preds = %114
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not23.i = icmp eq i32 %118, 0, !dbg !40
  br i1 %.not23.i, label %121, label %119, !dbg !40

119:                                              ; preds = %117
  %120 = tail call float @llvm.nvvm.div.approx.ftz.f(float %.01.i206, float %.0.i204) #5, !dbg !40
  br label %__nv_fast_fdividef.exit.i.i.i, !dbg !40

121:                                              ; preds = %117
  %122 = tail call float @llvm.nvvm.div.approx.f(float %.01.i206, float %.0.i204) #5, !dbg !40
  br label %__nv_fast_fdividef.exit.i.i.i, !dbg !40

__nv_fast_fdividef.exit.i.i.i:                    ; preds = %121, %119
  %.02.i207 = phi float [ %120, %119 ], [ %122, %121 ], !dbg !40
  %123 = tail call float @llvm.nvvm.trunc.f(float %.02.i207) #5, !dbg !40
  %124 = fneg float %.0.i204, !dbg !40
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %124, float %123, float %.01.i206) #5, !dbg !40
  %126 = bitcast float %125 to i32, !dbg !40
  %127 = bitcast float %.0.i204 to i32, !dbg !40
  %.not24.i = icmp ult i32 %126, %127, !dbg !40
  br i1 %.not24.i, label %__internal_fmodf_fastpath_quot.exit.i.i, label %128, !dbg !40

128:                                              ; preds = %__nv_fast_fdividef.exit.i.i.i
  %129 = icmp ugt i32 %126, -2147483648, !dbg !40
  br i1 %129, label %130, label %134, !dbg !40

130:                                              ; preds = %128
  %131 = fadd float %123, -1.000000e+00, !dbg !40
  %132 = fcmp olt float %125, %124, !dbg !40
  %133 = fadd float %131, -1.000000e+00, !dbg !40
  %quotient.i.i.0.i = select i1 %132, float %133, float %131, !dbg !40
  br label %__internal_fmodf_fastpath_quot.exit.i.i, !dbg !40

134:                                              ; preds = %128
  %135 = fadd float %123, 1.000000e+00, !dbg !40
  %136 = fmul float %.0.i204, 2.000000e+00, !dbg !40
  %137 = fcmp ult float %125, %136, !dbg !40
  br i1 %137, label %__internal_fmodf_fastpath_quot.exit.i.i, label %__nv_fmaf_rn.exit.i.i.i, !dbg !40

__nv_fmaf_rn.exit.i.i.i:                          ; preds = %134
  %138 = fadd float %135, 1.000000e+00, !dbg !40
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not25.i = icmp eq i32 %139, 0, !dbg !40
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float -3.000000e+00, float %.0.i204, float %125) #5, !dbg !40
  %141 = tail call float @llvm.nvvm.fma.rn.f(float -3.000000e+00, float %.0.i204, float %125) #5, !dbg !40
  %.03.i208 = select i1 %.not25.i, float %141, float %140, !dbg !40
  %142 = fcmp oge float %.03.i208, 0.000000e+00, !dbg !40
  %143 = fadd float %138, 1.000000e+00, !dbg !40
  %quotient.i.i.1.i = select i1 %142, float %143, float %138, !dbg !40
  br label %__internal_fmodf_fastpath_quot.exit.i.i, !dbg !40

__internal_fmodf_fastpath_quot.exit.i.i:          ; preds = %__nv_fmaf_rn.exit.i.i.i, %134, %130, %__nv_fast_fdividef.exit.i.i.i
  %quotient.i.i.4.i = phi float [ %123, %__nv_fast_fdividef.exit.i.i.i ], [ %quotient.i.i.0.i, %130 ], [ %quotient.i.i.1.i, %__nv_fmaf_rn.exit.i.i.i ], [ %135, %134 ], !dbg !40
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not26.i = icmp eq i32 %144, 0, !dbg !40
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %124, float %quotient.i.i.4.i, float %.01.i206) #5, !dbg !40
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %124, float %quotient.i.i.4.i, float %.01.i206) #5, !dbg !40
  %.04.i209 = select i1 %.not26.i, float %146, float %145, !dbg !40
  br label %__internal_fmodf_kernel.exit.i, !dbg !40

147:                                              ; preds = %114
  %148 = bitcast float %.01.i206 to i32, !dbg !40
  %149 = bitcast float %115 to i32, !dbg !40
  %150 = and i32 %149, -8388608, !dbg !40
  %151 = and i32 %148, 8388607, !dbg !40
  %152 = or disjoint i32 %151, 1065353216, !dbg !40
  %153 = and i32 %149, 8388607, !dbg !40
  %154 = or disjoint i32 %153, 1065353216, !dbg !40
  %155 = bitcast i32 %152 to float, !dbg !40
  %156 = bitcast i32 %154 to float, !dbg !40
  %157 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %156) #6, !dbg !40, !srcloc !41
  %.neg268 = add i32 %148, 192937984, !dbg !40
  %158 = sub i32 %.neg268, %150, !dbg !40
  %159 = and i32 %158, -8388608, !dbg !40
  %.not = icmp eq i32 %159, 0, !dbg !40
  br i1 %.not, label %__internal_fmodf_slowpath_mod.exit.i.i, label %__nv_fmaf_rn.exit4.i.i.i.lr.ph, !dbg !40

__nv_fmaf_rn.exit4.i.i.i.lr.ph:                   ; preds = %147
  %160 = fneg float %156
  br label %__nv_fmaf_rn.exit4.i.i.i, !dbg !40

__nv_fmaf_rn.exit4.i.i.i:                         ; preds = %__nv_fmaf_rn.exit4.i.i.i.lr.ph, %__nv_fmaf_rn.exit4.i.i.i
  %ux.i.i.0.i273 = phi i32 [ %152, %__nv_fmaf_rn.exit4.i.i.i.lr.ph ], [ %183, %__nv_fmaf_rn.exit4.i.i.i ]
  %i.i.i.0.i272 = phi i32 [ %159, %__nv_fmaf_rn.exit4.i.i.i.lr.ph ], [ %182, %__nv_fmaf_rn.exit4.i.i.i ]
  %min2.i = tail call i32 @llvm.umin.i32(i32 %i.i.i.0.i272, i32 192937984), !dbg !40
  %161 = add i32 %ux.i.i.0.i273, %min2.i, !dbg !40
  %162 = bitcast i32 %161 to float, !dbg !40
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not17.i215 = icmp eq i32 %163, 0, !dbg !40
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %162, float %157, float -0.000000e+00) #5, !dbg !40
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %162, float %157, float -0.000000e+00) #5, !dbg !40
  %.010.i216 = select i1 %.not17.i215, float %165, float %164, !dbg !40
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not18.i217 = icmp eq i32 %166, 0, !dbg !40
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %160, float %.010.i216, float %162) #5, !dbg !40
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %160, float %.010.i216, float %162) #5, !dbg !40
  %.011.i218 = select i1 %.not18.i217, float %168, float %167, !dbg !40
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not19.i219 = icmp eq i32 %169, 0, !dbg !40
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i218, float %157, float %.010.i216) #5, !dbg !40
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i218, float %157, float %.010.i216) #5, !dbg !40
  %.012.i220 = select i1 %.not19.i219, float %171, float %170, !dbg !40
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not20.i221 = icmp eq i32 %172, 0, !dbg !40
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %160, float %.012.i220, float %162) #5, !dbg !40
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %160, float %.012.i220, float %162) #5, !dbg !40
  %.09.i222 = select i1 %.not20.i221, float %174, float %173, !dbg !40
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not21.i = icmp eq i32 %175, 0, !dbg !40
  %176 = tail call float @llvm.nvvm.fma.rz.ftz.f(float %.09.i222, float %157, float %.012.i220) #5, !dbg !40
  %177 = tail call float @llvm.nvvm.fma.rz.f(float %.09.i222, float %157, float %.012.i220) #5, !dbg !40
  %.08.i223 = select i1 %.not21.i, float %177, float %176, !dbg !40
  %178 = tail call float @llvm.nvvm.trunc.f(float %.08.i223) #5, !dbg !40
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not22.i = icmp eq i32 %179, 0, !dbg !40
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %160, float %178, float %162) #5, !dbg !40
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %160, float %178, float %162) #5, !dbg !40
  %.07.i224 = select i1 %.not22.i, float %181, float %180, !dbg !40
  %182 = sub i32 %i.i.i.0.i272, %min2.i, !dbg !40
  %183 = bitcast float %.07.i224 to i32, !dbg !40
  %184 = icmp ne i32 %182, 0, !dbg !40
  %185 = icmp ne i32 %183, 0, !dbg !40
  %spec.select.i213 = select i1 %184, i1 %185, i1 false, !dbg !40
  br i1 %spec.select.i213, label %__nv_fmaf_rn.exit4.i.i.i, label %__internal_fmodf_slowpath_mod.exit.i.i, !dbg !40

__internal_fmodf_slowpath_mod.exit.i.i:           ; preds = %__nv_fmaf_rn.exit4.i.i.i, %147
  %.06.i212.lcssa = phi float [ %155, %147 ], [ %.07.i224, %__nv_fmaf_rn.exit4.i.i.i ], !dbg !40
  %186 = bitcast i32 %150 to float, !dbg !40
  %187 = fcmp ule float %.0.i204, 0.000000e+00, !dbg !40
  %188 = icmp ugt i32 %148, 2139095039, !dbg !40
  %or.cond.i214 = or i1 %187, %188, !dbg !40
  %189 = select i1 %or.cond.i214, float 0x7FFFFFFFE0000000, float %186, !dbg !40
  %190 = fmul float %.06.i212.lcssa, 0x3E80000000000000, !dbg !40
  %191 = fmul float %189, %190, !dbg !40
  br label %__internal_fmodf_kernel.exit.i, !dbg !40

__internal_fmodf_kernel.exit.i:                   ; preds = %__internal_fmodf_slowpath_mod.exit.i.i, %__internal_fmodf_fastpath_quot.exit.i.i, %__nv_atan2f.exit
  %ans.i.1.i = phi float [ %.01.i206, %__nv_atan2f.exit ], [ %.04.i209, %__internal_fmodf_fastpath_quot.exit.i.i ], [ %191, %__internal_fmodf_slowpath_mod.exit.i.i ], !dbg !40
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not27.i210 = icmp eq i32 %192, 0, !dbg !40
  %193 = tail call float @llvm.nvvm.fabs.ftz.f(float %ans.i.1.i) #5, !dbg !40
  %194 = tail call float @llvm.nvvm.fabs.f(float %ans.i.1.i) #5, !dbg !40
  %.05.i211 = select i1 %.not27.i210, float %194, float %193, !dbg !40
  %195 = fcmp uno float %.05.i211, 0.000000e+00, !dbg !40
  br i1 %195, label %__nv_fmodf.exit, label %196, !dbg !40

196:                                              ; preds = %__internal_fmodf_kernel.exit.i
  %197 = bitcast float %ans.i.1.i to i32, !dbg !40
  %198 = bitcast float %t0.4.i to i32, !dbg !40
  %199 = and i32 %198, -2147483648, !dbg !40
  %200 = or i32 %199, %197, !dbg !40
  %201 = bitcast i32 %200 to float, !dbg !40
  br label %__nv_fmodf.exit, !dbg !40

__nv_fmodf.exit:                                  ; preds = %__internal_fmodf_kernel.exit.i, %196
  %202 = phi float [ %201, %196 ], [ %ans.i.1.i, %__internal_fmodf_kernel.exit.i ], !dbg !40
  %203 = tail call float @llvm.fabs.f32(float %202), !dbg !42
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !43
  %204 = fmul float %203, 0x3FE45F3060000000, !dbg !43
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i = icmp eq i32 %205, 0, !dbg !43
  %206 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %204) #5, !dbg !43
  %207 = tail call i32 @llvm.nvvm.f2i.rn(float %204) #5, !dbg !43
  %.01.i = select i1 %.not.i, i32 %207, i32 %206, !dbg !43
  %208 = sitofp i32 %.01.i to float, !dbg !43
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not15.i = icmp eq i32 %209, 0, !dbg !43
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %208, float 0xBFF921FB40000000, float %203) #5, !dbg !43
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %208, float 0xBFF921FB40000000, float %203) #5, !dbg !43
  %.02.i = select i1 %.not15.i, float %211, float %210, !dbg !43
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not16.i = icmp eq i32 %212, 0, !dbg !43
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %208, float 0xBE74442D00000000, float %.02.i) #5, !dbg !43
  %214 = tail call float @llvm.nvvm.fma.rn.f(float %208, float 0xBE74442D00000000, float %.02.i) #5, !dbg !43
  %.03.i = select i1 %.not16.i, float %214, float %213, !dbg !43
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not17.i = icmp eq i32 %215, 0, !dbg !43
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %208, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !43
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %208, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !43
  %.04.i = select i1 %.not17.i, float %217, float %216, !dbg !43
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not18.i = icmp eq i32 %218, 0, !dbg !43
  %219 = tail call float @llvm.nvvm.fabs.ftz.f(float %203) #5, !dbg !43
  %220 = tail call float @llvm.nvvm.fabs.f(float %203) #5, !dbg !43
  %.06.i = select i1 %.not18.i, float %220, float %219, !dbg !43
  %221 = fcmp ult float %.06.i, 1.056150e+05, !dbg !43
  br i1 %221, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !43

__nv_isinff.exit.i.i.i:                           ; preds = %__nv_fmodf.exit
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not19.i = icmp eq i32 %222, 0, !dbg !43
  %.07.i = select i1 %.not19.i, float %220, float %219, !dbg !43
  %223 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !43
  br i1 %223, label %__nv_fmul_rn.exit.i.i.i, label %227, !dbg !43

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not27.i = icmp eq i32 %224, 0, !dbg !43
  %225 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %203, float 0.000000e+00) #5, !dbg !43
  %226 = tail call float @llvm.nvvm.mul.rn.f(float %203, float 0.000000e+00) #5, !dbg !43
  %.08.i = select i1 %.not27.i, float %226, float %225, !dbg !43
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !43

227:                                              ; preds = %__nv_isinff.exit.i.i.i
  %228 = bitcast float %203 to i32, !dbg !43
  %229 = lshr i32 %228, 23, !dbg !43
  %230 = add nsw i32 %229, -128, !dbg !43
  %231 = shl i32 %228, 8, !dbg !43
  %232 = or i32 %231, -2147483648, !dbg !43
  %233 = lshr i32 %230, 5, !dbg !43
  br label %234, !dbg !43

234:                                              ; preds = %227, %234
  %indvars.iv = phi i64 [ 0, %227 ], [ %indvars.iv.next, %234 ]
  %hi.i.i.i.0.i274 = phi i32 [ 0, %227 ], [ %239, %234 ]
  %235 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !43
  %236 = load i32, ptr addrspace(1) %235, align 4, !dbg !43
  %237 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %236, i32 %232, i32 %hi.i.i.i.0.i274) #6, !dbg !43, !srcloc !44
  %238 = extractvalue { i32, i32 } %237, 0, !dbg !43
  %239 = extractvalue { i32, i32 } %237, 1, !dbg !43
  %240 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !43
  store i32 %238, ptr %240, align 4, !dbg !43
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !43
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !43
  br i1 %exitcond.not, label %241, label %234, !dbg !43, !llvm.loop !45

241:                                              ; preds = %234
  %242 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !43
  store i32 %239, ptr %242, align 4, !dbg !43
  %243 = and i32 %229, 31, !dbg !43
  %244 = sub nsw i32 6, %233, !dbg !43
  %245 = sext i32 %244 to i64, !dbg !43
  %246 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %245, !dbg !43
  %247 = load i32, ptr %246, align 4, !dbg !43
  %248 = sub nsw i32 5, %233, !dbg !43
  %249 = sext i32 %248 to i64, !dbg !43
  %250 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %249, !dbg !43
  %251 = load i32, ptr %250, align 4, !dbg !43
  %.not20.i = icmp eq i32 %243, 0, !dbg !43
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %252, !dbg !43

252:                                              ; preds = %241
  %253 = sub nsw i32 4, %233, !dbg !43
  %254 = sub nuw nsw i32 32, %243, !dbg !43
  %255 = shl i32 %247, %243, !dbg !43
  %256 = lshr i32 %251, %254, !dbg !43
  %257 = add i32 %256, %255, !dbg !43
  %258 = shl i32 %251, %243, !dbg !43
  %259 = sext i32 %253 to i64, !dbg !43
  %260 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %259, !dbg !43
  %261 = load i32, ptr %260, align 4, !dbg !43
  %262 = lshr i32 %261, %254, !dbg !43
  %263 = add i32 %262, %258, !dbg !43
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !43

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %252, %241
  %hi.i.i.i.1.i = phi i32 [ %257, %252 ], [ %247, %241 ], !dbg !43
  %lo.i.i.i.0.i = phi i32 [ %263, %252 ], [ %251, %241 ], !dbg !43
  %264 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !43
  %265 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !43
  %266 = shl i32 %lo.i.i.i.0.i, 2, !dbg !43
  %267 = lshr i32 %265, 31, !dbg !43
  %268 = add nuw nsw i32 %267, %264, !dbg !43
  %.lobit.i = ashr i32 %265, 31, !dbg !43
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %265, !dbg !43
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %266, !dbg !43
  %269 = zext i32 %hi.i.i.i.2.i to i64, !dbg !43
  %270 = shl nuw i64 %269, 32, !dbg !43
  %271 = zext i32 %lo.i.i.i.1.i to i64, !dbg !43
  %272 = or disjoint i64 %270, %271, !dbg !43
  %273 = sitofp i64 %272 to double, !dbg !43
  %274 = fmul double %273, 0x3BF921FB54442D19, !dbg !43
  %275 = fptrunc double %274 to float, !dbg !43
  %276 = fneg float %275, !dbg !43
  %.not2526.i = icmp slt i32 %265, 0, !dbg !43
  %r.i.i.i.0.i = select i1 %.not2526.i, float %276, float %275, !dbg !43
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !43

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %__nv_fmodf.exit
  %i.i.1.i = phi i32 [ %.01.i, %__nv_fmodf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %268, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !43
  %t.i.i.1.i = phi float [ %.04.i, %__nv_fmodf.exit ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !43
  %277 = add i32 %i.i.1.i, 1, !dbg !43
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not28.i = icmp eq i32 %278, 0, !dbg !43
  %279 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !43
  %280 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !43
  %.011.i = select i1 %.not28.i, float %280, float %279, !dbg !43
  %281 = and i32 %i.i.1.i, 1, !dbg !43
  %.not29.not.i = icmp eq i32 %281, 0, !dbg !43
  %282 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i, !dbg !43
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not30.i = icmp eq i32 %283, 0, !dbg !43
  %284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %282, float 0.000000e+00) #5, !dbg !43
  %285 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %282, float 0.000000e+00) #5, !dbg !43
  %.012.i = select i1 %.not30.i, float %285, float %284, !dbg !43
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i, label %__internal_fmad.exit2.i.i.i, !dbg !43

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not31.i = icmp eq i32 %286, 0, !dbg !43
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !43
  %288 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !43
  %.013.i = select i1 %.not31.i, float %288, float %287, !dbg !43
  br label %__internal_fmad.exit2.i.i.i, !dbg !43

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %289 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !43
  %290 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !43
  %291 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !43
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not32.i = icmp eq i32 %292, 0, !dbg !43
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %291, float %.011.i, float %290) #5, !dbg !43
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %291, float %.011.i, float %290) #5, !dbg !43
  %.010.i = select i1 %.not32.i, float %294, float %293, !dbg !43
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not33.i = icmp eq i32 %295, 0, !dbg !43
  %296 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %289) #5, !dbg !43
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %289) #5, !dbg !43
  %.09.i = select i1 %.not33.i, float %297, float %296, !dbg !43
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not34.i = icmp eq i32 %298, 0, !dbg !43
  %299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %282) #5, !dbg !43
  %300 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %282) #5, !dbg !43
  %.05.i = select i1 %.not34.i, float %300, float %299, !dbg !43
  %301 = and i32 %277, 2, !dbg !43
  %.not35.i = icmp eq i32 %301, 0, !dbg !43
  br i1 %.not35.i, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !43

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not36.i = icmp eq i32 %302, 0, !dbg !43
  %303 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !43
  %304 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !43
  %.0.i = select i1 %.not36.i, float %304, float %303, !dbg !43
  br label %__nv_cosf.exit, !dbg !43

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !43
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !43
  %305 = icmp sgt i32 %.decomposed, 3, !dbg !47
  %306 = add nsw i32 %.decomposed, -4, !dbg !48
  %307 = add i32 %15, %306, !dbg !49
  %308 = sext i32 %307 to i64, !dbg !50
  %309 = getelementptr float, ptr addrspace(1) %0, i64 %308, !dbg !50
  %310 = and i1 %10, %305, !dbg !51
  %311 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %309, i1 %310, i32 0, i1 %310) #5, !dbg !52
  %312 = bitcast i32 %311 to float, !dbg !52
  %313 = add i32 %22, %306, !dbg !53
  %314 = sext i32 %313 to i64, !dbg !54
  %315 = getelementptr float, ptr addrspace(1) %0, i64 %314, !dbg !54
  %316 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %315, i1 %310, i32 0, i1 %310) #5, !dbg !55
  %317 = bitcast i32 %316 to float, !dbg !55
  %318 = fsub float 0.000000e+00, %317, !dbg !56
  %319 = fadd float %318, %312, !dbg !57
  %320 = add i32 %30, %306, !dbg !58
  %321 = sext i32 %320 to i64, !dbg !59
  %322 = getelementptr float, ptr addrspace(1) %0, i64 %321, !dbg !59
  %323 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %322, i1 %310, i32 0, i1 %310) #5, !dbg !60
  %324 = bitcast i32 %323 to float, !dbg !60
  %325 = add i32 %14, %306, !dbg !61
  %326 = sext i32 %325 to i64, !dbg !62
  %327 = getelementptr float, ptr addrspace(1) %0, i64 %326, !dbg !62
  %328 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %327, i1 %310, i32 0, i1 %310) #5, !dbg !63
  %329 = bitcast i32 %328 to float, !dbg !63
  %330 = fsub float 0.000000e+00, %329, !dbg !64
  %331 = fadd float %330, %324, !dbg !65
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !66
  %.not.i175 = icmp eq i32 %332, 0, !dbg !66
  %333 = tail call float @llvm.nvvm.fabs.ftz.f(float %331) #5, !dbg !66
  %334 = tail call float @llvm.nvvm.fabs.f(float %331) #5, !dbg !66
  %.02.i176 = select i1 %.not.i175, float %334, float %333, !dbg !66
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !66
  %.not3.i177 = icmp eq i32 %335, 0, !dbg !66
  %336 = tail call float @llvm.nvvm.fabs.ftz.f(float %319) #5, !dbg !66
  %337 = tail call float @llvm.nvvm.fabs.f(float %319) #5, !dbg !66
  %.03.i178 = select i1 %.not3.i177, float %337, float %336, !dbg !66
  %338 = fcmp oeq float %.02.i176, 0.000000e+00, !dbg !66
  %339 = fcmp oeq float %.03.i178, 0.000000e+00, !dbg !66
  %or.cond.i179 = select i1 %338, i1 %339, i1 false, !dbg !66
  br i1 %or.cond.i179, label %340, label %346, !dbg !66

340:                                              ; preds = %__nv_cosf.exit
  %341 = bitcast float %331 to i32, !dbg !66
  %342 = icmp slt i32 %341, 0, !dbg !66
  %343 = select i1 %342, i32 1078530011, i32 0, !dbg !66
  %344 = bitcast i32 %343 to float, !dbg !66
  %345 = tail call float @llvm.copysign.f32(float %344, float %319), !dbg !66
  br label %__nv_atan2f.exit202, !dbg !66

346:                                              ; preds = %__nv_cosf.exit
  %347 = fcmp oeq float %.02.i176, 0x7FF0000000000000, !dbg !66
  %348 = fcmp oeq float %.03.i178, 0x7FF0000000000000, !dbg !66
  %or.cond2.i180 = select i1 %347, i1 %348, i1 false, !dbg !66
  br i1 %or.cond2.i180, label %349, label %__nv_fmaxf.exit.i181, !dbg !66

349:                                              ; preds = %346
  %350 = bitcast float %331 to i32, !dbg !66
  %351 = icmp slt i32 %350, 0, !dbg !66
  %352 = select i1 %351, i32 1075235812, i32 1061752795, !dbg !66
  %353 = bitcast i32 %352 to float, !dbg !66
  %354 = tail call float @llvm.copysign.f32(float %353, float %319), !dbg !66
  br label %__nv_atan2f.exit202, !dbg !66

__nv_fmaxf.exit.i181:                             ; preds = %346
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !66
  %.not4.i182 = icmp eq i32 %355, 0, !dbg !66
  %356 = tail call float @llvm.nvvm.fmax.ftz.f(float %.03.i178, float %.02.i176) #5, !dbg !66
  %357 = tail call float @llvm.nvvm.fmax.f(float %.03.i178, float %.02.i176) #5, !dbg !66
  %.01.i183 = select i1 %.not4.i182, float %357, float %356, !dbg !66
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !66
  %.not5.i184 = icmp eq i32 %358, 0, !dbg !66
  %359 = tail call float @llvm.nvvm.fmin.ftz.f(float %.03.i178, float %.02.i176) #5, !dbg !66
  %360 = tail call float @llvm.nvvm.fmin.f(float %.03.i178, float %.02.i176) #5, !dbg !66
  %.0.i185 = select i1 %.not5.i184, float %360, float %359, !dbg !66
  %361 = fdiv float %.0.i185, %.01.i183, !dbg !66
  %362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !66
  %.not6.i186 = icmp eq i32 %362, 0, !dbg !66
  %363 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %361, float %361) #5, !dbg !66
  %364 = tail call float @llvm.nvvm.mul.rn.f(float %361, float %361) #5, !dbg !66
  %.04.i187 = select i1 %.not6.i186, float %364, float %363, !dbg !66
  %365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !66
  %.not7.i188 = icmp eq i32 %365, 0, !dbg !66
  %366 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i187, float 0xBFEA58FD40000000, float 0xC016B31060000000) #5, !dbg !66
  %367 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i187, float 0xBFEA58FD40000000, float 0xC016B31060000000) #5, !dbg !66
  %.05.i189 = select i1 %.not7.i188, float %367, float %366, !dbg !66
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !66
  %.not8.i190 = icmp eq i32 %368, 0, !dbg !66
  %369 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i189, float %.04.i187, float 0xC01A4320E0000000) #5, !dbg !66
  %370 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i189, float %.04.i187, float 0xC01A4320E0000000) #5, !dbg !66
  %.06.i191 = select i1 %.not8.i190, float %370, float %369, !dbg !66
  %371 = fmul float %.04.i187, %.06.i191, !dbg !66
  %372 = fmul float %361, %371, !dbg !66
  %373 = fadd float %.04.i187, 0x4026ABB800000000, !dbg !66
  %374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !66
  %.not9.i192 = icmp eq i32 %374, 0, !dbg !66
  %375 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %373, float %.04.i187, float 0x403CD7AC00000000) #5, !dbg !66
  %376 = tail call float @llvm.nvvm.fma.rn.f(float %373, float %.04.i187, float 0x403CD7AC00000000) #5, !dbg !66
  %.07.i193 = select i1 %.not9.i192, float %376, float %375, !dbg !66
  %377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !66
  %.not10.i194 = icmp eq i32 %377, 0, !dbg !66
  %378 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i193, float %.04.i187, float 0x4033B25900000000) #5, !dbg !66
  %379 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i193, float %.04.i187, float 0x4033B25900000000) #5, !dbg !66
  %.08.i195 = select i1 %.not10.i194, float %379, float %378, !dbg !66
  %380 = fdiv float 1.000000e+00, %.08.i195, !dbg !66
  %381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !66
  %.not11.i196 = icmp eq i32 %381, 0, !dbg !66
  %382 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %372, float %380, float %361) #5, !dbg !66
  %383 = tail call float @llvm.nvvm.fma.rn.f(float %372, float %380, float %361) #5, !dbg !66
  %.09.i197 = select i1 %.not11.i196, float %383, float %382, !dbg !66
  %384 = fcmp ogt float %.03.i178, %.02.i176, !dbg !66
  %385 = fsub float 0x3FF921FB60000000, %.09.i197, !dbg !66
  %t0.0.i198 = select i1 %384, float %385, float %.09.i197, !dbg !66
  %386 = bitcast float %331 to i32, !dbg !66
  %387 = icmp slt i32 %386, 0, !dbg !66
  %388 = fsub float 0x400921FB60000000, %t0.0.i198, !dbg !66
  %t0.1.i199 = select i1 %387, float %388, float %t0.0.i198, !dbg !66
  %389 = bitcast float %t0.1.i199 to i32, !dbg !66
  %390 = bitcast float %319 to i32, !dbg !66
  %391 = and i32 %390, -2147483648, !dbg !66
  %392 = or i32 %391, %389, !dbg !66
  %393 = bitcast i32 %392 to float, !dbg !66
  %394 = fadd float %.03.i178, %.02.i176, !dbg !66
  %395 = fcmp ord float %394, 0.000000e+00, !dbg !66
  %t0.2.i200 = select i1 %395, float %393, float %394, !dbg !66
  br label %__nv_atan2f.exit202, !dbg !66

__nv_atan2f.exit202:                              ; preds = %340, %349, %__nv_fmaxf.exit.i181
  %t0.4.i201 = phi float [ %345, %340 ], [ %354, %349 ], [ %t0.2.i200, %__nv_fmaxf.exit.i181 ], !dbg !66
  %396 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i225 = icmp eq i32 %396, 0, !dbg !67
  %.0.i226 = select i1 %.not.i225, float %109, float %108, !dbg !67
  %397 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not16.i227 = icmp eq i32 %397, 0, !dbg !67
  %398 = tail call float @llvm.nvvm.fabs.ftz.f(float %t0.4.i201) #5, !dbg !67
  %399 = tail call float @llvm.nvvm.fabs.f(float %t0.4.i201) #5, !dbg !67
  %.01.i228 = select i1 %.not16.i227, float %399, float %398, !dbg !67
  %400 = fcmp olt float %.01.i228, %.0.i226, !dbg !67
  br i1 %400, label %__internal_fmodf_kernel.exit.i241, label %401, !dbg !67

401:                                              ; preds = %__nv_atan2f.exit202
  %402 = fmul float %.0.i226, 0x4160000000000000, !dbg !67
  %403 = fcmp ugt float %.01.i228, %402, !dbg !67
  br i1 %403, label %434, label %404, !dbg !67

404:                                              ; preds = %401
  %405 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not23.i229 = icmp eq i32 %405, 0, !dbg !67
  br i1 %.not23.i229, label %408, label %406, !dbg !67

406:                                              ; preds = %404
  %407 = tail call float @llvm.nvvm.div.approx.ftz.f(float %.01.i228, float %.0.i226) #5, !dbg !67
  br label %__nv_fast_fdividef.exit.i.i.i230, !dbg !67

408:                                              ; preds = %404
  %409 = tail call float @llvm.nvvm.div.approx.f(float %.01.i228, float %.0.i226) #5, !dbg !67
  br label %__nv_fast_fdividef.exit.i.i.i230, !dbg !67

__nv_fast_fdividef.exit.i.i.i230:                 ; preds = %408, %406
  %.02.i231 = phi float [ %407, %406 ], [ %409, %408 ], !dbg !67
  %410 = tail call float @llvm.nvvm.trunc.f(float %.02.i231) #5, !dbg !67
  %411 = fneg float %.0.i226, !dbg !67
  %412 = tail call float @llvm.nvvm.fma.rn.f(float %411, float %410, float %.01.i228) #5, !dbg !67
  %413 = bitcast float %412 to i32, !dbg !67
  %414 = bitcast float %.0.i226 to i32, !dbg !67
  %.not24.i232 = icmp ult i32 %413, %414, !dbg !67
  br i1 %.not24.i232, label %__internal_fmodf_fastpath_quot.exit.i.i237, label %415, !dbg !67

415:                                              ; preds = %__nv_fast_fdividef.exit.i.i.i230
  %416 = icmp ugt i32 %413, -2147483648, !dbg !67
  br i1 %416, label %417, label %421, !dbg !67

417:                                              ; preds = %415
  %418 = fadd float %410, -1.000000e+00, !dbg !67
  %419 = fcmp olt float %412, %411, !dbg !67
  %420 = fadd float %418, -1.000000e+00, !dbg !67
  %quotient.i.i.0.i245 = select i1 %419, float %420, float %418, !dbg !67
  br label %__internal_fmodf_fastpath_quot.exit.i.i237, !dbg !67

421:                                              ; preds = %415
  %422 = fadd float %410, 1.000000e+00, !dbg !67
  %423 = fmul float %.0.i226, 2.000000e+00, !dbg !67
  %424 = fcmp ult float %412, %423, !dbg !67
  br i1 %424, label %__internal_fmodf_fastpath_quot.exit.i.i237, label %__nv_fmaf_rn.exit.i.i.i233, !dbg !67

__nv_fmaf_rn.exit.i.i.i233:                       ; preds = %421
  %425 = fadd float %422, 1.000000e+00, !dbg !67
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not25.i234 = icmp eq i32 %426, 0, !dbg !67
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float -3.000000e+00, float %.0.i226, float %412) #5, !dbg !67
  %428 = tail call float @llvm.nvvm.fma.rn.f(float -3.000000e+00, float %.0.i226, float %412) #5, !dbg !67
  %.03.i235 = select i1 %.not25.i234, float %428, float %427, !dbg !67
  %429 = fcmp oge float %.03.i235, 0.000000e+00, !dbg !67
  %430 = fadd float %425, 1.000000e+00, !dbg !67
  %quotient.i.i.1.i236 = select i1 %429, float %430, float %425, !dbg !67
  br label %__internal_fmodf_fastpath_quot.exit.i.i237, !dbg !67

__internal_fmodf_fastpath_quot.exit.i.i237:       ; preds = %__nv_fmaf_rn.exit.i.i.i233, %421, %417, %__nv_fast_fdividef.exit.i.i.i230
  %quotient.i.i.4.i238 = phi float [ %410, %__nv_fast_fdividef.exit.i.i.i230 ], [ %quotient.i.i.0.i245, %417 ], [ %quotient.i.i.1.i236, %__nv_fmaf_rn.exit.i.i.i233 ], [ %422, %421 ], !dbg !67
  %431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not26.i239 = icmp eq i32 %431, 0, !dbg !67
  %432 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %411, float %quotient.i.i.4.i238, float %.01.i228) #5, !dbg !67
  %433 = tail call float @llvm.nvvm.fma.rn.f(float %411, float %quotient.i.i.4.i238, float %.01.i228) #5, !dbg !67
  %.04.i240 = select i1 %.not26.i239, float %433, float %432, !dbg !67
  br label %__internal_fmodf_kernel.exit.i241, !dbg !67

434:                                              ; preds = %401
  %435 = bitcast float %.01.i228 to i32, !dbg !67
  %436 = bitcast float %402 to i32, !dbg !67
  %437 = and i32 %436, -8388608, !dbg !67
  %438 = and i32 %435, 8388607, !dbg !67
  %439 = or disjoint i32 %438, 1065353216, !dbg !67
  %440 = and i32 %436, 8388607, !dbg !67
  %441 = or disjoint i32 %440, 1065353216, !dbg !67
  %442 = bitcast i32 %439 to float, !dbg !67
  %443 = bitcast i32 %441 to float, !dbg !67
  %444 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %443) #6, !dbg !67, !srcloc !41
  %.neg270 = add i32 %435, 192937984, !dbg !67
  %445 = sub i32 %.neg270, %437, !dbg !67
  %446 = and i32 %445, -8388608, !dbg !67
  %.not286 = icmp eq i32 %446, 0, !dbg !67
  br i1 %.not286, label %__internal_fmodf_slowpath_mod.exit.i.i251, label %__nv_fmaf_rn.exit4.i.i.i253.lr.ph, !dbg !67

__nv_fmaf_rn.exit4.i.i.i253.lr.ph:                ; preds = %434
  %447 = fneg float %443
  br label %__nv_fmaf_rn.exit4.i.i.i253, !dbg !67

__nv_fmaf_rn.exit4.i.i.i253:                      ; preds = %__nv_fmaf_rn.exit4.i.i.i253.lr.ph, %__nv_fmaf_rn.exit4.i.i.i253
  %ux.i.i.0.i249278 = phi i32 [ %439, %__nv_fmaf_rn.exit4.i.i.i253.lr.ph ], [ %470, %__nv_fmaf_rn.exit4.i.i.i253 ]
  %i.i.i.0.i248277 = phi i32 [ %446, %__nv_fmaf_rn.exit4.i.i.i253.lr.ph ], [ %469, %__nv_fmaf_rn.exit4.i.i.i253 ]
  %min2.i254 = tail call i32 @llvm.umin.i32(i32 %i.i.i.0.i248277, i32 192937984), !dbg !67
  %448 = add i32 %ux.i.i.0.i249278, %min2.i254, !dbg !67
  %449 = bitcast i32 %448 to float, !dbg !67
  %450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not17.i255 = icmp eq i32 %450, 0, !dbg !67
  %451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %449, float %444, float -0.000000e+00) #5, !dbg !67
  %452 = tail call float @llvm.nvvm.fma.rn.f(float %449, float %444, float -0.000000e+00) #5, !dbg !67
  %.010.i256 = select i1 %.not17.i255, float %452, float %451, !dbg !67
  %453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not18.i257 = icmp eq i32 %453, 0, !dbg !67
  %454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %447, float %.010.i256, float %449) #5, !dbg !67
  %455 = tail call float @llvm.nvvm.fma.rn.f(float %447, float %.010.i256, float %449) #5, !dbg !67
  %.011.i258 = select i1 %.not18.i257, float %455, float %454, !dbg !67
  %456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not19.i259 = icmp eq i32 %456, 0, !dbg !67
  %457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i258, float %444, float %.010.i256) #5, !dbg !67
  %458 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i258, float %444, float %.010.i256) #5, !dbg !67
  %.012.i260 = select i1 %.not19.i259, float %458, float %457, !dbg !67
  %459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not20.i261 = icmp eq i32 %459, 0, !dbg !67
  %460 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %447, float %.012.i260, float %449) #5, !dbg !67
  %461 = tail call float @llvm.nvvm.fma.rn.f(float %447, float %.012.i260, float %449) #5, !dbg !67
  %.09.i262 = select i1 %.not20.i261, float %461, float %460, !dbg !67
  %462 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not21.i263 = icmp eq i32 %462, 0, !dbg !67
  %463 = tail call float @llvm.nvvm.fma.rz.ftz.f(float %.09.i262, float %444, float %.012.i260) #5, !dbg !67
  %464 = tail call float @llvm.nvvm.fma.rz.f(float %.09.i262, float %444, float %.012.i260) #5, !dbg !67
  %.08.i264 = select i1 %.not21.i263, float %464, float %463, !dbg !67
  %465 = tail call float @llvm.nvvm.trunc.f(float %.08.i264) #5, !dbg !67
  %466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not22.i265 = icmp eq i32 %466, 0, !dbg !67
  %467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %447, float %465, float %449) #5, !dbg !67
  %468 = tail call float @llvm.nvvm.fma.rn.f(float %447, float %465, float %449) #5, !dbg !67
  %.07.i266 = select i1 %.not22.i265, float %468, float %467, !dbg !67
  %469 = sub i32 %i.i.i.0.i248277, %min2.i254, !dbg !67
  %470 = bitcast float %.07.i266 to i32, !dbg !67
  %471 = icmp ne i32 %469, 0, !dbg !67
  %472 = icmp ne i32 %470, 0, !dbg !67
  %spec.select.i250 = select i1 %471, i1 %472, i1 false, !dbg !67
  br i1 %spec.select.i250, label %__nv_fmaf_rn.exit4.i.i.i253, label %__internal_fmodf_slowpath_mod.exit.i.i251, !dbg !67

__internal_fmodf_slowpath_mod.exit.i.i251:        ; preds = %__nv_fmaf_rn.exit4.i.i.i253, %434
  %.06.i246.lcssa = phi float [ %442, %434 ], [ %.07.i266, %__nv_fmaf_rn.exit4.i.i.i253 ], !dbg !67
  %473 = bitcast i32 %437 to float, !dbg !67
  %474 = fcmp ule float %.0.i226, 0.000000e+00, !dbg !67
  %475 = icmp ugt i32 %435, 2139095039, !dbg !67
  %or.cond.i252 = or i1 %474, %475, !dbg !67
  %476 = select i1 %or.cond.i252, float 0x7FFFFFFFE0000000, float %473, !dbg !67
  %477 = fmul float %.06.i246.lcssa, 0x3E80000000000000, !dbg !67
  %478 = fmul float %476, %477, !dbg !67
  br label %__internal_fmodf_kernel.exit.i241, !dbg !67

__internal_fmodf_kernel.exit.i241:                ; preds = %__internal_fmodf_slowpath_mod.exit.i.i251, %__internal_fmodf_fastpath_quot.exit.i.i237, %__nv_atan2f.exit202
  %ans.i.1.i242 = phi float [ %.01.i228, %__nv_atan2f.exit202 ], [ %.04.i240, %__internal_fmodf_fastpath_quot.exit.i.i237 ], [ %478, %__internal_fmodf_slowpath_mod.exit.i.i251 ], !dbg !67
  %479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not27.i243 = icmp eq i32 %479, 0, !dbg !67
  %480 = tail call float @llvm.nvvm.fabs.ftz.f(float %ans.i.1.i242) #5, !dbg !67
  %481 = tail call float @llvm.nvvm.fabs.f(float %ans.i.1.i242) #5, !dbg !67
  %.05.i244 = select i1 %.not27.i243, float %481, float %480, !dbg !67
  %482 = fcmp uno float %.05.i244, 0.000000e+00, !dbg !67
  br i1 %482, label %__nv_fmodf.exit267, label %483, !dbg !67

483:                                              ; preds = %__internal_fmodf_kernel.exit.i241
  %484 = bitcast float %ans.i.1.i242 to i32, !dbg !67
  %485 = bitcast float %t0.4.i201 to i32, !dbg !67
  %486 = and i32 %485, -2147483648, !dbg !67
  %487 = or i32 %486, %484, !dbg !67
  %488 = bitcast i32 %487 to float, !dbg !67
  br label %__nv_fmodf.exit267, !dbg !67

__nv_fmodf.exit267:                               ; preds = %__internal_fmodf_kernel.exit.i241, %483
  %489 = phi float [ %488, %483 ], [ %ans.i.1.i242, %__internal_fmodf_kernel.exit.i241 ], !dbg !67
  %490 = tail call float @llvm.fabs.f32(float %489), !dbg !68
  %491 = fadd float %490, 0xBFF921FB40000000, !dbg !69
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !70
  %492 = fmul float %491, 0x3FE45F3060000000, !dbg !70
  %493 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !70
  %.not.i2 = icmp eq i32 %493, 0, !dbg !70
  %494 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %492) #5, !dbg !70
  %495 = tail call i32 @llvm.nvvm.f2i.rn(float %492) #5, !dbg !70
  %.01.i3 = select i1 %.not.i2, i32 %495, i32 %494, !dbg !70
  %496 = sitofp i32 %.01.i3 to float, !dbg !70
  %497 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !70
  %.not15.i4 = icmp eq i32 %497, 0, !dbg !70
  %498 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %496, float 0xBFF921FB40000000, float %491) #5, !dbg !70
  %499 = tail call float @llvm.nvvm.fma.rn.f(float %496, float 0xBFF921FB40000000, float %491) #5, !dbg !70
  %.02.i5 = select i1 %.not15.i4, float %499, float %498, !dbg !70
  %500 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !70
  %.not16.i6 = icmp eq i32 %500, 0, !dbg !70
  %501 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %496, float 0xBE74442D00000000, float %.02.i5) #5, !dbg !70
  %502 = tail call float @llvm.nvvm.fma.rn.f(float %496, float 0xBE74442D00000000, float %.02.i5) #5, !dbg !70
  %.03.i7 = select i1 %.not16.i6, float %502, float %501, !dbg !70
  %503 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !70
  %.not17.i8 = icmp eq i32 %503, 0, !dbg !70
  %504 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %496, float 0xBCF84698A0000000, float %.03.i7) #5, !dbg !70
  %505 = tail call float @llvm.nvvm.fma.rn.f(float %496, float 0xBCF84698A0000000, float %.03.i7) #5, !dbg !70
  %.04.i9 = select i1 %.not17.i8, float %505, float %504, !dbg !70
  %506 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !70
  %.not18.i10 = icmp eq i32 %506, 0, !dbg !70
  %507 = tail call float @llvm.nvvm.fabs.ftz.f(float %491) #5, !dbg !70
  %508 = tail call float @llvm.nvvm.fabs.f(float %491) #5, !dbg !70
  %.06.i11 = select i1 %.not18.i10, float %508, float %507, !dbg !70
  %509 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !70
  br i1 %509, label %__internal_trig_reduction_kernel.exit.i.i27, label %__nv_isinff.exit.i.i.i12, !dbg !70

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_fmodf.exit267
  %510 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !70
  %.not19.i13 = icmp eq i32 %510, 0, !dbg !70
  %.07.i14 = select i1 %.not19.i13, float %508, float %507, !dbg !70
  %511 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !70
  br i1 %511, label %__nv_fmul_rn.exit.i.i.i50, label %515, !dbg !70

__nv_fmul_rn.exit.i.i.i50:                        ; preds = %__nv_isinff.exit.i.i.i12
  %512 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !70
  %.not27.i51 = icmp eq i32 %512, 0, !dbg !70
  %513 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %491, float 0.000000e+00) #5, !dbg !70
  %514 = tail call float @llvm.nvvm.mul.rn.f(float %491, float 0.000000e+00) #5, !dbg !70
  %.08.i52 = select i1 %.not27.i51, float %514, float %513, !dbg !70
  br label %__internal_trig_reduction_kernel.exit.i.i27, !dbg !70

515:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %516 = bitcast float %491 to i32, !dbg !70
  %517 = lshr i32 %516, 23, !dbg !70
  %518 = and i32 %517, 224, !dbg !70
  %519 = add nsw i32 %518, -128, !dbg !70
  %520 = shl i32 %516, 8, !dbg !70
  %521 = or i32 %520, -2147483648, !dbg !70
  %522 = lshr exact i32 %519, 5, !dbg !70
  br label %523, !dbg !70

523:                                              ; preds = %515, %523
  %indvars.iv294 = phi i64 [ 0, %515 ], [ %indvars.iv.next295, %523 ]
  %hi.i.i.i.0.i15280 = phi i32 [ 0, %515 ], [ %528, %523 ]
  %524 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv294, !dbg !70
  %525 = load i32, ptr addrspace(1) %524, align 4, !dbg !70
  %526 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %525, i32 %521, i32 %hi.i.i.i.0.i15280) #6, !dbg !70, !srcloc !44
  %527 = extractvalue { i32, i32 } %526, 0, !dbg !70
  %528 = extractvalue { i32, i32 } %526, 1, !dbg !70
  %529 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv294, !dbg !70
  store i32 %527, ptr %529, align 4, !dbg !70
  %indvars.iv.next295 = add nuw nsw i64 %indvars.iv294, 1, !dbg !70
  %exitcond296.not = icmp eq i64 %indvars.iv.next295, 6, !dbg !70
  br i1 %exitcond296.not, label %530, label %523, !dbg !70, !llvm.loop !71

530:                                              ; preds = %523
  %531 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !70
  store i32 %528, ptr %531, align 4, !dbg !70
  %532 = and i32 %517, 31, !dbg !70
  %533 = sub nsw i32 6, %522, !dbg !70
  %534 = sext i32 %533 to i64, !dbg !70
  %535 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %534, !dbg !70
  %536 = load i32, ptr %535, align 4, !dbg !70
  %537 = sub nsw i32 5, %522, !dbg !70
  %538 = sext i32 %537 to i64, !dbg !70
  %539 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %538, !dbg !70
  %540 = load i32, ptr %539, align 4, !dbg !70
  %.not20.i17 = icmp eq i32 %532, 0, !dbg !70
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %541, !dbg !70

541:                                              ; preds = %530
  %542 = sub nsw i32 4, %522, !dbg !70
  %543 = sub nuw nsw i32 32, %532, !dbg !70
  %544 = shl i32 %536, %532, !dbg !70
  %545 = lshr i32 %540, %543, !dbg !70
  %546 = add i32 %545, %544, !dbg !70
  %547 = shl i32 %540, %532, !dbg !70
  %548 = sext i32 %542 to i64, !dbg !70
  %549 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %548, !dbg !70
  %550 = load i32, ptr %549, align 4, !dbg !70
  %551 = lshr i32 %550, %543, !dbg !70
  %552 = add i32 %551, %547, !dbg !70
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !70

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %541, %530
  %hi.i.i.i.1.i19 = phi i32 [ %546, %541 ], [ %536, %530 ], !dbg !70
  %lo.i.i.i.0.i20 = phi i32 [ %552, %541 ], [ %540, %530 ], !dbg !70
  %553 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !70
  %554 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !70
  %555 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !70
  %556 = lshr i32 %554, 31, !dbg !70
  %557 = add nuw nsw i32 %556, %553, !dbg !70
  %558 = sub nsw i32 0, %557, !dbg !70
  %.not2123.i = icmp slt i32 %516, 0, !dbg !70
  %spec.select.i = select i1 %.not2123.i, i32 %558, i32 %557, !dbg !70
  %559 = xor i32 %554, %516, !dbg !70
  %.lobit.i21 = ashr i32 %554, 31, !dbg !70
  %hi.i.i.i.2.i22 = xor i32 %.lobit.i21, %554, !dbg !70
  %lo.i.i.i.1.i24 = xor i32 %.lobit.i21, %555, !dbg !70
  %560 = zext i32 %hi.i.i.i.2.i22 to i64, !dbg !70
  %561 = shl nuw i64 %560, 32, !dbg !70
  %562 = zext i32 %lo.i.i.i.1.i24 to i64, !dbg !70
  %563 = or disjoint i64 %561, %562, !dbg !70
  %564 = sitofp i64 %563 to double, !dbg !70
  %565 = fmul double %564, 0x3BF921FB54442D19, !dbg !70
  %566 = fptrunc double %565 to float, !dbg !70
  %567 = fneg float %566, !dbg !70
  %.not2526.i25 = icmp slt i32 %559, 0, !dbg !70
  %r.i.i.i.0.i26 = select i1 %.not2526.i25, float %567, float %566, !dbg !70
  br label %__internal_trig_reduction_kernel.exit.i.i27, !dbg !70

__internal_trig_reduction_kernel.exit.i.i27:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i50, %__nv_fmodf.exit267
  %i.i.1.i28 = phi i32 [ %.01.i3, %__nv_fmodf.exit267 ], [ 0, %__nv_fmul_rn.exit.i.i.i50 ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !70
  %t.i.i.1.i29 = phi float [ %.04.i9, %__nv_fmodf.exit267 ], [ %.08.i52, %__nv_fmul_rn.exit.i.i.i50 ], [ %r.i.i.i.0.i26, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !70
  %568 = add i32 %i.i.1.i28, 1, !dbg !70
  %569 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !70
  %.not28.i30 = icmp eq i32 %569, 0, !dbg !70
  %570 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i29, float %t.i.i.1.i29) #5, !dbg !70
  %571 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i29, float %t.i.i.1.i29) #5, !dbg !70
  %.011.i31 = select i1 %.not28.i30, float %571, float %570, !dbg !70
  %572 = and i32 %i.i.1.i28, 1, !dbg !70
  %.not29.not.i32 = icmp eq i32 %572, 0, !dbg !70
  %573 = select i1 %.not29.not.i32, float 1.000000e+00, float %t.i.i.1.i29, !dbg !70
  %574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !70
  %.not30.i33 = icmp eq i32 %574, 0, !dbg !70
  %575 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i31, float %573, float 0.000000e+00) #5, !dbg !70
  %576 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i31, float %573, float 0.000000e+00) #5, !dbg !70
  %.012.i34 = select i1 %.not30.i33, float %576, float %575, !dbg !70
  br i1 %.not29.not.i32, label %__internal_fmad.exit1.i.i.i47, label %__internal_fmad.exit2.i.i.i35, !dbg !70

__internal_fmad.exit1.i.i.i47:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i27
  %577 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !70
  %.not31.i48 = icmp eq i32 %577, 0, !dbg !70
  %578 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i31, float 0xBF56C0FDA0000000) #5, !dbg !70
  %579 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i31, float 0xBF56C0FDA0000000) #5, !dbg !70
  %.013.i49 = select i1 %.not31.i48, float %579, float %578, !dbg !70
  br label %__internal_fmad.exit2.i.i.i35, !dbg !70

__internal_fmad.exit2.i.i.i35:                    ; preds = %__internal_fmad.exit1.i.i.i47, %__internal_trig_reduction_kernel.exit.i.i27
  %580 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i47 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i27 ], !dbg !70
  %581 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i47 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i27 ], !dbg !70
  %582 = phi float [ %.013.i49, %__internal_fmad.exit1.i.i.i47 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i27 ], !dbg !70
  %583 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !70
  %.not32.i36 = icmp eq i32 %583, 0, !dbg !70
  %584 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %582, float %.011.i31, float %581) #5, !dbg !70
  %585 = tail call float @llvm.nvvm.fma.rn.f(float %582, float %.011.i31, float %581) #5, !dbg !70
  %.010.i37 = select i1 %.not32.i36, float %585, float %584, !dbg !70
  %586 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !70
  %.not33.i38 = icmp eq i32 %586, 0, !dbg !70
  %587 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i37, float %.011.i31, float %580) #5, !dbg !70
  %588 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i37, float %.011.i31, float %580) #5, !dbg !70
  %.09.i39 = select i1 %.not33.i38, float %588, float %587, !dbg !70
  %589 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !70
  %.not34.i40 = icmp eq i32 %589, 0, !dbg !70
  %590 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i39, float %.012.i34, float %573) #5, !dbg !70
  %591 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i39, float %.012.i34, float %573) #5, !dbg !70
  %.05.i41 = select i1 %.not34.i40, float %591, float %590, !dbg !70
  %592 = and i32 %568, 2, !dbg !70
  %.not35.i42 = icmp eq i32 %592, 0, !dbg !70
  br i1 %.not35.i42, label %__nv_cosf.exit53, label %__internal_fmad.exit5.i.i.i43, !dbg !70

__internal_fmad.exit5.i.i.i43:                    ; preds = %__internal_fmad.exit2.i.i.i35
  %593 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !70
  %.not36.i44 = icmp eq i32 %593, 0, !dbg !70
  %594 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i41, float -1.000000e+00, float 0.000000e+00) #5, !dbg !70
  %595 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i41, float -1.000000e+00, float 0.000000e+00) #5, !dbg !70
  %.0.i45 = select i1 %.not36.i44, float %595, float %594, !dbg !70
  br label %__nv_cosf.exit53, !dbg !70

__nv_cosf.exit53:                                 ; preds = %__internal_fmad.exit2.i.i.i35, %__internal_fmad.exit5.i.i.i43
  %z.i.i.0.i46 = phi float [ %.0.i45, %__internal_fmad.exit5.i.i.i43 ], [ %.05.i41, %__internal_fmad.exit2.i.i.i35 ], !dbg !70
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !70
  %596 = fadd float %203, 0x3FF921FB40000000, !dbg !72
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i54), !dbg !73
  %597 = fmul float %596, 0x3FE45F3060000000, !dbg !73
  %598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not.i55 = icmp eq i32 %598, 0, !dbg !73
  %599 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %597) #5, !dbg !73
  %600 = tail call i32 @llvm.nvvm.f2i.rn(float %597) #5, !dbg !73
  %.01.i56 = select i1 %.not.i55, i32 %600, i32 %599, !dbg !73
  %601 = sitofp i32 %.01.i56 to float, !dbg !73
  %602 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not15.i57 = icmp eq i32 %602, 0, !dbg !73
  %603 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %601, float 0xBFF921FB40000000, float %596) #5, !dbg !73
  %604 = tail call float @llvm.nvvm.fma.rn.f(float %601, float 0xBFF921FB40000000, float %596) #5, !dbg !73
  %.02.i58 = select i1 %.not15.i57, float %604, float %603, !dbg !73
  %605 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not16.i59 = icmp eq i32 %605, 0, !dbg !73
  %606 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %601, float 0xBE74442D00000000, float %.02.i58) #5, !dbg !73
  %607 = tail call float @llvm.nvvm.fma.rn.f(float %601, float 0xBE74442D00000000, float %.02.i58) #5, !dbg !73
  %.03.i60 = select i1 %.not16.i59, float %607, float %606, !dbg !73
  %608 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not17.i61 = icmp eq i32 %608, 0, !dbg !73
  %609 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %601, float 0xBCF84698A0000000, float %.03.i60) #5, !dbg !73
  %610 = tail call float @llvm.nvvm.fma.rn.f(float %601, float 0xBCF84698A0000000, float %.03.i60) #5, !dbg !73
  %.04.i62 = select i1 %.not17.i61, float %610, float %609, !dbg !73
  %611 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not18.i63 = icmp eq i32 %611, 0, !dbg !73
  %612 = tail call float @llvm.nvvm.fabs.ftz.f(float %596) #5, !dbg !73
  %613 = tail call float @llvm.nvvm.fabs.f(float %596) #5, !dbg !73
  %.06.i64 = select i1 %.not18.i63, float %613, float %612, !dbg !73
  %614 = fcmp ult float %.06.i64, 1.056150e+05, !dbg !73
  br i1 %614, label %__internal_trig_reduction_kernel.exit.i.i82, label %__nv_isinff.exit.i.i.i65, !dbg !73

__nv_isinff.exit.i.i.i65:                         ; preds = %__nv_cosf.exit53
  %615 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not19.i66 = icmp eq i32 %615, 0, !dbg !73
  %.07.i67 = select i1 %.not19.i66, float %613, float %612, !dbg !73
  %616 = fcmp oeq float %.07.i67, 0x7FF0000000000000, !dbg !73
  br i1 %616, label %__nv_fmul_rn.exit.i.i.i105, label %620, !dbg !73

__nv_fmul_rn.exit.i.i.i105:                       ; preds = %__nv_isinff.exit.i.i.i65
  %617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not27.i106 = icmp eq i32 %617, 0, !dbg !73
  %618 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %596, float 0.000000e+00) #5, !dbg !73
  %619 = tail call float @llvm.nvvm.mul.rn.f(float %596, float 0.000000e+00) #5, !dbg !73
  %.08.i107 = select i1 %.not27.i106, float %619, float %618, !dbg !73
  br label %__internal_trig_reduction_kernel.exit.i.i82, !dbg !73

620:                                              ; preds = %__nv_isinff.exit.i.i.i65
  %621 = bitcast float %596 to i32, !dbg !73
  %622 = lshr i32 %621, 23, !dbg !73
  %623 = and i32 %622, 224, !dbg !73
  %624 = add nsw i32 %623, -128, !dbg !73
  %625 = shl i32 %621, 8, !dbg !73
  %626 = or i32 %625, -2147483648, !dbg !73
  %627 = lshr exact i32 %624, 5, !dbg !73
  br label %628, !dbg !73

628:                                              ; preds = %620, %628
  %indvars.iv297 = phi i64 [ 0, %620 ], [ %indvars.iv.next298, %628 ]
  %hi.i.i.i.0.i68282 = phi i32 [ 0, %620 ], [ %633, %628 ]
  %629 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv297, !dbg !73
  %630 = load i32, ptr addrspace(1) %629, align 4, !dbg !73
  %631 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %630, i32 %626, i32 %hi.i.i.i.0.i68282) #6, !dbg !73, !srcloc !44
  %632 = extractvalue { i32, i32 } %631, 0, !dbg !73
  %633 = extractvalue { i32, i32 } %631, 1, !dbg !73
  %634 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i54, i64 0, i64 %indvars.iv297, !dbg !73
  store i32 %632, ptr %634, align 4, !dbg !73
  %indvars.iv.next298 = add nuw nsw i64 %indvars.iv297, 1, !dbg !73
  %exitcond299.not = icmp eq i64 %indvars.iv.next298, 6, !dbg !73
  br i1 %exitcond299.not, label %635, label %628, !dbg !73, !llvm.loop !74

635:                                              ; preds = %628
  %636 = getelementptr inbounds i8, ptr %result.i.i.i.i54, i64 24, !dbg !73
  store i32 %633, ptr %636, align 4, !dbg !73
  %637 = and i32 %622, 31, !dbg !73
  %638 = sub nsw i32 6, %627, !dbg !73
  %639 = sext i32 %638 to i64, !dbg !73
  %640 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i54, i64 0, i64 %639, !dbg !73
  %641 = load i32, ptr %640, align 4, !dbg !73
  %642 = sub nsw i32 5, %627, !dbg !73
  %643 = sext i32 %642 to i64, !dbg !73
  %644 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i54, i64 0, i64 %643, !dbg !73
  %645 = load i32, ptr %644, align 4, !dbg !73
  %.not20.i70 = icmp eq i32 %637, 0, !dbg !73
  br i1 %.not20.i70, label %__internal_trig_reduction_slowpath.exit.i.i.i71, label %646, !dbg !73

646:                                              ; preds = %635
  %647 = sub nsw i32 4, %627, !dbg !73
  %648 = sub nuw nsw i32 32, %637, !dbg !73
  %649 = shl i32 %641, %637, !dbg !73
  %650 = lshr i32 %645, %648, !dbg !73
  %651 = add i32 %650, %649, !dbg !73
  %652 = shl i32 %645, %637, !dbg !73
  %653 = sext i32 %647 to i64, !dbg !73
  %654 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i54, i64 0, i64 %653, !dbg !73
  %655 = load i32, ptr %654, align 4, !dbg !73
  %656 = lshr i32 %655, %648, !dbg !73
  %657 = add i32 %656, %652, !dbg !73
  br label %__internal_trig_reduction_slowpath.exit.i.i.i71, !dbg !73

__internal_trig_reduction_slowpath.exit.i.i.i71:  ; preds = %646, %635
  %hi.i.i.i.1.i72 = phi i32 [ %651, %646 ], [ %641, %635 ], !dbg !73
  %lo.i.i.i.0.i73 = phi i32 [ %657, %646 ], [ %645, %635 ], !dbg !73
  %658 = lshr i32 %hi.i.i.i.1.i72, 30, !dbg !73
  %659 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i72, i32 %lo.i.i.i.0.i73, i32 2), !dbg !73
  %660 = shl i32 %lo.i.i.i.0.i73, 2, !dbg !73
  %661 = lshr i32 %659, 31, !dbg !73
  %662 = add nuw nsw i32 %661, %658, !dbg !73
  %663 = sub nsw i32 0, %662, !dbg !73
  %.not2123.i74 = icmp slt i32 %621, 0, !dbg !73
  %spec.select.i75 = select i1 %.not2123.i74, i32 %663, i32 %662, !dbg !73
  %664 = xor i32 %659, %621, !dbg !73
  %.lobit.i76 = ashr i32 %659, 31, !dbg !73
  %hi.i.i.i.2.i77 = xor i32 %.lobit.i76, %659, !dbg !73
  %lo.i.i.i.1.i79 = xor i32 %.lobit.i76, %660, !dbg !73
  %665 = zext i32 %hi.i.i.i.2.i77 to i64, !dbg !73
  %666 = shl nuw i64 %665, 32, !dbg !73
  %667 = zext i32 %lo.i.i.i.1.i79 to i64, !dbg !73
  %668 = or disjoint i64 %666, %667, !dbg !73
  %669 = sitofp i64 %668 to double, !dbg !73
  %670 = fmul double %669, 0x3BF921FB54442D19, !dbg !73
  %671 = fptrunc double %670 to float, !dbg !73
  %672 = fneg float %671, !dbg !73
  %.not2526.i80 = icmp slt i32 %664, 0, !dbg !73
  %r.i.i.i.0.i81 = select i1 %.not2526.i80, float %672, float %671, !dbg !73
  br label %__internal_trig_reduction_kernel.exit.i.i82, !dbg !73

__internal_trig_reduction_kernel.exit.i.i82:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i71, %__nv_fmul_rn.exit.i.i.i105, %__nv_cosf.exit53
  %i.i.1.i83 = phi i32 [ %.01.i56, %__nv_cosf.exit53 ], [ 0, %__nv_fmul_rn.exit.i.i.i105 ], [ %spec.select.i75, %__internal_trig_reduction_slowpath.exit.i.i.i71 ], !dbg !73
  %t.i.i.1.i84 = phi float [ %.04.i62, %__nv_cosf.exit53 ], [ %.08.i107, %__nv_fmul_rn.exit.i.i.i105 ], [ %r.i.i.i.0.i81, %__internal_trig_reduction_slowpath.exit.i.i.i71 ], !dbg !73
  %673 = add i32 %i.i.1.i83, 1, !dbg !73
  %674 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not28.i85 = icmp eq i32 %674, 0, !dbg !73
  %675 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i84, float %t.i.i.1.i84) #5, !dbg !73
  %676 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i84, float %t.i.i.1.i84) #5, !dbg !73
  %.011.i86 = select i1 %.not28.i85, float %676, float %675, !dbg !73
  %677 = and i32 %i.i.1.i83, 1, !dbg !73
  %.not29.not.i87 = icmp eq i32 %677, 0, !dbg !73
  %678 = select i1 %.not29.not.i87, float 1.000000e+00, float %t.i.i.1.i84, !dbg !73
  %679 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not30.i88 = icmp eq i32 %679, 0, !dbg !73
  %680 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i86, float %678, float 0.000000e+00) #5, !dbg !73
  %681 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i86, float %678, float 0.000000e+00) #5, !dbg !73
  %.012.i89 = select i1 %.not30.i88, float %681, float %680, !dbg !73
  br i1 %.not29.not.i87, label %__internal_fmad.exit1.i.i.i102, label %__internal_fmad.exit2.i.i.i90, !dbg !73

__internal_fmad.exit1.i.i.i102:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i82
  %682 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not31.i103 = icmp eq i32 %682, 0, !dbg !73
  %683 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i86, float 0xBF56C0FDA0000000) #5, !dbg !73
  %684 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i86, float 0xBF56C0FDA0000000) #5, !dbg !73
  %.013.i104 = select i1 %.not31.i103, float %684, float %683, !dbg !73
  br label %__internal_fmad.exit2.i.i.i90, !dbg !73

__internal_fmad.exit2.i.i.i90:                    ; preds = %__internal_fmad.exit1.i.i.i102, %__internal_trig_reduction_kernel.exit.i.i82
  %685 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i102 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i82 ], !dbg !73
  %686 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i102 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i82 ], !dbg !73
  %687 = phi float [ %.013.i104, %__internal_fmad.exit1.i.i.i102 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i82 ], !dbg !73
  %688 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not32.i91 = icmp eq i32 %688, 0, !dbg !73
  %689 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %687, float %.011.i86, float %686) #5, !dbg !73
  %690 = tail call float @llvm.nvvm.fma.rn.f(float %687, float %.011.i86, float %686) #5, !dbg !73
  %.010.i92 = select i1 %.not32.i91, float %690, float %689, !dbg !73
  %691 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not33.i93 = icmp eq i32 %691, 0, !dbg !73
  %692 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i92, float %.011.i86, float %685) #5, !dbg !73
  %693 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i92, float %.011.i86, float %685) #5, !dbg !73
  %.09.i94 = select i1 %.not33.i93, float %693, float %692, !dbg !73
  %694 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not34.i95 = icmp eq i32 %694, 0, !dbg !73
  %695 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i94, float %.012.i89, float %678) #5, !dbg !73
  %696 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i94, float %.012.i89, float %678) #5, !dbg !73
  %.05.i96 = select i1 %.not34.i95, float %696, float %695, !dbg !73
  %697 = and i32 %673, 2, !dbg !73
  %.not35.i97 = icmp eq i32 %697, 0, !dbg !73
  br i1 %.not35.i97, label %__nv_cosf.exit108, label %__internal_fmad.exit5.i.i.i98, !dbg !73

__internal_fmad.exit5.i.i.i98:                    ; preds = %__internal_fmad.exit2.i.i.i90
  %698 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not36.i99 = icmp eq i32 %698, 0, !dbg !73
  %699 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i96, float -1.000000e+00, float 0.000000e+00) #5, !dbg !73
  %700 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i96, float -1.000000e+00, float 0.000000e+00) #5, !dbg !73
  %.0.i100 = select i1 %.not36.i99, float %700, float %699, !dbg !73
  br label %__nv_cosf.exit108, !dbg !73

__nv_cosf.exit108:                                ; preds = %__internal_fmad.exit2.i.i.i90, %__internal_fmad.exit5.i.i.i98
  %z.i.i.0.i101 = phi float [ %.0.i100, %__internal_fmad.exit5.i.i.i98 ], [ %.05.i96, %__internal_fmad.exit2.i.i.i90 ], !dbg !73
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i54), !dbg !73
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !75
  %701 = fmul float %490, 0x3FE45F3060000000, !dbg !75
  %702 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not.i110 = icmp eq i32 %702, 0, !dbg !75
  %703 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %701) #5, !dbg !75
  %704 = tail call i32 @llvm.nvvm.f2i.rn(float %701) #5, !dbg !75
  %.01.i111 = select i1 %.not.i110, i32 %704, i32 %703, !dbg !75
  %705 = sitofp i32 %.01.i111 to float, !dbg !75
  %706 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not15.i112 = icmp eq i32 %706, 0, !dbg !75
  %707 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %705, float 0xBFF921FB40000000, float %490) #5, !dbg !75
  %708 = tail call float @llvm.nvvm.fma.rn.f(float %705, float 0xBFF921FB40000000, float %490) #5, !dbg !75
  %.02.i113 = select i1 %.not15.i112, float %708, float %707, !dbg !75
  %709 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not16.i114 = icmp eq i32 %709, 0, !dbg !75
  %710 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %705, float 0xBE74442D00000000, float %.02.i113) #5, !dbg !75
  %711 = tail call float @llvm.nvvm.fma.rn.f(float %705, float 0xBE74442D00000000, float %.02.i113) #5, !dbg !75
  %.03.i115 = select i1 %.not16.i114, float %711, float %710, !dbg !75
  %712 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not17.i116 = icmp eq i32 %712, 0, !dbg !75
  %713 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %705, float 0xBCF84698A0000000, float %.03.i115) #5, !dbg !75
  %714 = tail call float @llvm.nvvm.fma.rn.f(float %705, float 0xBCF84698A0000000, float %.03.i115) #5, !dbg !75
  %.04.i117 = select i1 %.not17.i116, float %714, float %713, !dbg !75
  %715 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not18.i118 = icmp eq i32 %715, 0, !dbg !75
  %716 = tail call float @llvm.nvvm.fabs.ftz.f(float %490) #5, !dbg !75
  %717 = tail call float @llvm.nvvm.fabs.f(float %490) #5, !dbg !75
  %.06.i119 = select i1 %.not18.i118, float %717, float %716, !dbg !75
  %718 = fcmp ult float %.06.i119, 1.056150e+05, !dbg !75
  br i1 %718, label %__internal_trig_reduction_kernel.exit.i.i137, label %__nv_isinff.exit.i.i.i120, !dbg !75

__nv_isinff.exit.i.i.i120:                        ; preds = %__nv_cosf.exit108
  %719 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not19.i121 = icmp eq i32 %719, 0, !dbg !75
  %.07.i122 = select i1 %.not19.i121, float %717, float %716, !dbg !75
  %720 = fcmp oeq float %.07.i122, 0x7FF0000000000000, !dbg !75
  br i1 %720, label %__nv_fmul_rn.exit.i.i.i160, label %724, !dbg !75

__nv_fmul_rn.exit.i.i.i160:                       ; preds = %__nv_isinff.exit.i.i.i120
  %721 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not27.i161 = icmp eq i32 %721, 0, !dbg !75
  %722 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %490, float 0.000000e+00) #5, !dbg !75
  %723 = tail call float @llvm.nvvm.mul.rn.f(float %490, float 0.000000e+00) #5, !dbg !75
  %.08.i162 = select i1 %.not27.i161, float %723, float %722, !dbg !75
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !75

724:                                              ; preds = %__nv_isinff.exit.i.i.i120
  %725 = bitcast float %490 to i32, !dbg !75
  %726 = lshr i32 %725, 23, !dbg !75
  %727 = add nsw i32 %726, -128, !dbg !75
  %728 = shl i32 %725, 8, !dbg !75
  %729 = or i32 %728, -2147483648, !dbg !75
  %730 = lshr i32 %727, 5, !dbg !75
  br label %731, !dbg !75

731:                                              ; preds = %724, %731
  %indvars.iv300 = phi i64 [ 0, %724 ], [ %indvars.iv.next301, %731 ]
  %hi.i.i.i.0.i123284 = phi i32 [ 0, %724 ], [ %736, %731 ]
  %732 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv300, !dbg !75
  %733 = load i32, ptr addrspace(1) %732, align 4, !dbg !75
  %734 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %733, i32 %729, i32 %hi.i.i.i.0.i123284) #6, !dbg !75, !srcloc !44
  %735 = extractvalue { i32, i32 } %734, 0, !dbg !75
  %736 = extractvalue { i32, i32 } %734, 1, !dbg !75
  %737 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %indvars.iv300, !dbg !75
  store i32 %735, ptr %737, align 4, !dbg !75
  %indvars.iv.next301 = add nuw nsw i64 %indvars.iv300, 1, !dbg !75
  %exitcond302.not = icmp eq i64 %indvars.iv.next301, 6, !dbg !75
  br i1 %exitcond302.not, label %738, label %731, !dbg !75, !llvm.loop !76

738:                                              ; preds = %731
  %739 = getelementptr inbounds i8, ptr %result.i.i.i.i109, i64 24, !dbg !75
  store i32 %736, ptr %739, align 4, !dbg !75
  %740 = and i32 %726, 31, !dbg !75
  %741 = sub nsw i32 6, %730, !dbg !75
  %742 = sext i32 %741 to i64, !dbg !75
  %743 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %742, !dbg !75
  %744 = load i32, ptr %743, align 4, !dbg !75
  %745 = sub nsw i32 5, %730, !dbg !75
  %746 = sext i32 %745 to i64, !dbg !75
  %747 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %746, !dbg !75
  %748 = load i32, ptr %747, align 4, !dbg !75
  %.not20.i125 = icmp eq i32 %740, 0, !dbg !75
  br i1 %.not20.i125, label %__internal_trig_reduction_slowpath.exit.i.i.i126, label %749, !dbg !75

749:                                              ; preds = %738
  %750 = sub nsw i32 4, %730, !dbg !75
  %751 = sub nuw nsw i32 32, %740, !dbg !75
  %752 = shl i32 %744, %740, !dbg !75
  %753 = lshr i32 %748, %751, !dbg !75
  %754 = add i32 %753, %752, !dbg !75
  %755 = shl i32 %748, %740, !dbg !75
  %756 = sext i32 %750 to i64, !dbg !75
  %757 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %756, !dbg !75
  %758 = load i32, ptr %757, align 4, !dbg !75
  %759 = lshr i32 %758, %751, !dbg !75
  %760 = add i32 %759, %755, !dbg !75
  br label %__internal_trig_reduction_slowpath.exit.i.i.i126, !dbg !75

__internal_trig_reduction_slowpath.exit.i.i.i126: ; preds = %749, %738
  %hi.i.i.i.1.i127 = phi i32 [ %754, %749 ], [ %744, %738 ], !dbg !75
  %lo.i.i.i.0.i128 = phi i32 [ %760, %749 ], [ %748, %738 ], !dbg !75
  %761 = lshr i32 %hi.i.i.i.1.i127, 30, !dbg !75
  %762 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i127, i32 %lo.i.i.i.0.i128, i32 2), !dbg !75
  %763 = shl i32 %lo.i.i.i.0.i128, 2, !dbg !75
  %764 = lshr i32 %762, 31, !dbg !75
  %765 = add nuw nsw i32 %764, %761, !dbg !75
  %.lobit.i131 = ashr i32 %762, 31, !dbg !75
  %hi.i.i.i.2.i132 = xor i32 %.lobit.i131, %762, !dbg !75
  %lo.i.i.i.1.i134 = xor i32 %.lobit.i131, %763, !dbg !75
  %766 = zext i32 %hi.i.i.i.2.i132 to i64, !dbg !75
  %767 = shl nuw i64 %766, 32, !dbg !75
  %768 = zext i32 %lo.i.i.i.1.i134 to i64, !dbg !75
  %769 = or disjoint i64 %767, %768, !dbg !75
  %770 = sitofp i64 %769 to double, !dbg !75
  %771 = fmul double %770, 0x3BF921FB54442D19, !dbg !75
  %772 = fptrunc double %771 to float, !dbg !75
  %773 = fneg float %772, !dbg !75
  %.not2526.i135 = icmp slt i32 %762, 0, !dbg !75
  %r.i.i.i.0.i136 = select i1 %.not2526.i135, float %773, float %772, !dbg !75
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !75

__internal_trig_reduction_kernel.exit.i.i137:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i126, %__nv_fmul_rn.exit.i.i.i160, %__nv_cosf.exit108
  %i.i.1.i138 = phi i32 [ %.01.i111, %__nv_cosf.exit108 ], [ 0, %__nv_fmul_rn.exit.i.i.i160 ], [ %765, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !75
  %t.i.i.1.i139 = phi float [ %.04.i117, %__nv_cosf.exit108 ], [ %.08.i162, %__nv_fmul_rn.exit.i.i.i160 ], [ %r.i.i.i.0.i136, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !75
  %774 = add i32 %i.i.1.i138, 1, !dbg !75
  %775 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not28.i140 = icmp eq i32 %775, 0, !dbg !75
  %776 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #5, !dbg !75
  %777 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #5, !dbg !75
  %.011.i141 = select i1 %.not28.i140, float %777, float %776, !dbg !75
  %778 = and i32 %i.i.1.i138, 1, !dbg !75
  %.not29.not.i142 = icmp eq i32 %778, 0, !dbg !75
  %779 = select i1 %.not29.not.i142, float 1.000000e+00, float %t.i.i.1.i139, !dbg !75
  %780 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not30.i143 = icmp eq i32 %780, 0, !dbg !75
  %781 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i141, float %779, float 0.000000e+00) #5, !dbg !75
  %782 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i141, float %779, float 0.000000e+00) #5, !dbg !75
  %.012.i144 = select i1 %.not30.i143, float %782, float %781, !dbg !75
  br i1 %.not29.not.i142, label %__internal_fmad.exit1.i.i.i157, label %__internal_fmad.exit2.i.i.i145, !dbg !75

__internal_fmad.exit1.i.i.i157:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i137
  %783 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not31.i158 = icmp eq i32 %783, 0, !dbg !75
  %784 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #5, !dbg !75
  %785 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #5, !dbg !75
  %.013.i159 = select i1 %.not31.i158, float %785, float %784, !dbg !75
  br label %__internal_fmad.exit2.i.i.i145, !dbg !75

__internal_fmad.exit2.i.i.i145:                   ; preds = %__internal_fmad.exit1.i.i.i157, %__internal_trig_reduction_kernel.exit.i.i137
  %786 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i157 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !75
  %787 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i157 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !75
  %788 = phi float [ %.013.i159, %__internal_fmad.exit1.i.i.i157 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !75
  %789 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not32.i146 = icmp eq i32 %789, 0, !dbg !75
  %790 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %788, float %.011.i141, float %787) #5, !dbg !75
  %791 = tail call float @llvm.nvvm.fma.rn.f(float %788, float %.011.i141, float %787) #5, !dbg !75
  %.010.i147 = select i1 %.not32.i146, float %791, float %790, !dbg !75
  %792 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not33.i148 = icmp eq i32 %792, 0, !dbg !75
  %793 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i147, float %.011.i141, float %786) #5, !dbg !75
  %794 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i147, float %.011.i141, float %786) #5, !dbg !75
  %.09.i149 = select i1 %.not33.i148, float %794, float %793, !dbg !75
  %795 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not34.i150 = icmp eq i32 %795, 0, !dbg !75
  %796 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i149, float %.012.i144, float %779) #5, !dbg !75
  %797 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i149, float %.012.i144, float %779) #5, !dbg !75
  %.05.i151 = select i1 %.not34.i150, float %797, float %796, !dbg !75
  %798 = and i32 %774, 2, !dbg !75
  %.not35.i152 = icmp eq i32 %798, 0, !dbg !75
  br i1 %.not35.i152, label %__nv_cosf.exit163, label %__internal_fmad.exit5.i.i.i153, !dbg !75

__internal_fmad.exit5.i.i.i153:                   ; preds = %__internal_fmad.exit2.i.i.i145
  %799 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not36.i154 = icmp eq i32 %799, 0, !dbg !75
  %800 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #5, !dbg !75
  %801 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #5, !dbg !75
  %.0.i155 = select i1 %.not36.i154, float %801, float %800, !dbg !75
  br label %__nv_cosf.exit163, !dbg !75

__nv_cosf.exit163:                                ; preds = %__internal_fmad.exit2.i.i.i145, %__internal_fmad.exit5.i.i.i153
  %z.i.i.0.i156 = phi float [ %.0.i155, %__internal_fmad.exit5.i.i.i153 ], [ %.05.i151, %__internal_fmad.exit2.i.i.i145 ], !dbg !75
  %802 = select i1 %13, float %z.i.i.0.i, float %z.i.i.0.i46, !dbg !77
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !75
  %803 = select i1 %13, float %z.i.i.0.i101, float %z.i.i.0.i156, !dbg !77
  %804 = sext i32 %9 to i64, !dbg !78
  %805 = getelementptr float, ptr addrspace(1) %1, i64 %804, !dbg !78
  %806 = bitcast float %802 to i32, !dbg !79
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %806, ptr addrspace(1) %805, i1 %10) #5, !dbg !79
  %807 = getelementptr float, ptr addrspace(1) %2, i64 %804, !dbg !80
  %808 = bitcast float %803 to i32, !dbg !81
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %808, ptr addrspace(1) %807, i1 %10) #5, !dbg !81
  ret void, !dbg !82
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fmax.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fmax.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fmin.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fmin.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.approx.ftz.f(float, float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.approx.f(float, float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rz.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rz.f(float, float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py", directory: "inductor_cache/he")
!4 = !{ptr @triton_poi_fused_stack_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_stack_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_stack_0", linkageName: "triton_poi_fused_stack_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 37, scope: !7)
!19 = !DILocation(line: 32, column: 35, scope: !7)
!20 = !DILocation(line: 32, column: 43, scope: !7)
!21 = !DILocation(line: 32, column: 30, scope: !7)
!22 = !DILocation(line: 32, column: 56, scope: !7)
!23 = !DILocation(line: 32, column: 49, scope: !7)
!24 = !DILocation(line: 33, column: 34, scope: !7)
!25 = !DILocation(line: 33, column: 42, scope: !7)
!26 = !DILocation(line: 33, column: 30, scope: !7)
!27 = !DILocation(line: 33, column: 48, scope: !7)
!28 = !DILocation(line: 34, column: 12, scope: !7)
!29 = !DILocation(line: 35, column: 18, scope: !7)
!30 = !DILocation(line: 36, column: 34, scope: !7)
!31 = !DILocation(line: 36, column: 42, scope: !7)
!32 = !DILocation(line: 36, column: 30, scope: !7)
!33 = !DILocation(line: 36, column: 48, scope: !7)
!34 = !DILocation(line: 37, column: 39, scope: !7)
!35 = !DILocation(line: 37, column: 31, scope: !7)
!36 = !DILocation(line: 37, column: 45, scope: !7)
!37 = !DILocation(line: 38, column: 13, scope: !7)
!38 = !DILocation(line: 39, column: 19, scope: !7)
!39 = !DILocation(line: 40, column: 34, scope: !7)
!40 = !DILocation(line: 42, column: 34, scope: !7)
!41 = !{i32 21046}
!42 = !DILocation(line: 43, column: 24, scope: !7)
!43 = !DILocation(line: 44, column: 24, scope: !7)
!44 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!45 = distinct !{!45, !46}
!46 = !{!"llvm.loop.unroll.count", i32 1}
!47 = !DILocation(line: 47, column: 20, scope: !7)
!48 = !DILocation(line: 50, column: 51, scope: !7)
!49 = !DILocation(line: 50, column: 44, scope: !7)
!50 = !DILocation(line: 50, column: 31, scope: !7)
!51 = !DILocation(line: 50, column: 65, scope: !7)
!52 = !DILocation(line: 50, column: 57, scope: !7)
!53 = !DILocation(line: 51, column: 43, scope: !7)
!54 = !DILocation(line: 51, column: 31, scope: !7)
!55 = !DILocation(line: 51, column: 56, scope: !7)
!56 = !DILocation(line: 52, column: 13, scope: !7)
!57 = !DILocation(line: 53, column: 20, scope: !7)
!58 = !DILocation(line: 54, column: 43, scope: !7)
!59 = !DILocation(line: 54, column: 31, scope: !7)
!60 = !DILocation(line: 54, column: 56, scope: !7)
!61 = !DILocation(line: 55, column: 39, scope: !7)
!62 = !DILocation(line: 55, column: 31, scope: !7)
!63 = !DILocation(line: 55, column: 52, scope: !7)
!64 = !DILocation(line: 56, column: 13, scope: !7)
!65 = !DILocation(line: 57, column: 20, scope: !7)
!66 = !DILocation(line: 58, column: 35, scope: !7)
!67 = !DILocation(line: 60, column: 34, scope: !7)
!68 = !DILocation(line: 61, column: 24, scope: !7)
!69 = !DILocation(line: 62, column: 20, scope: !7)
!70 = !DILocation(line: 63, column: 24, scope: !7)
!71 = distinct !{!71, !46}
!72 = !DILocation(line: 67, column: 20, scope: !7)
!73 = !DILocation(line: 68, column: 24, scope: !7)
!74 = distinct !{!74, !46}
!75 = !DILocation(line: 71, column: 24, scope: !7)
!76 = distinct !{!76, !46}
!77 = !DILocation(line: 0, scope: !7)
!78 = !DILocation(line: 75, column: 25, scope: !7)
!79 = !DILocation(line: 75, column: 37, scope: !7)
!80 = !DILocation(line: 76, column: 25, scope: !7)
!81 = !DILocation(line: 76, column: 37, scope: !7)
!82 = !DILocation(line: 76, column: 4, scope: !7)
