#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_stack_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":19:0), %arg3: i32 loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-4> : tensor<32xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.57079625> : tensor<32xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<4> : tensor<32xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<32xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<12> : tensor<32xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<32xi64, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<8> : tensor<32xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<24> : tensor<32xi32, #blocked> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<32xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<32xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_6 : tensor<32xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_5 : tensor<32xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_5 : tensor<32xi32, #blocked> loc(#loc8)
    %8 = arith.extsi %6 : tensor<32xi32, #blocked> to tensor<32xi64, #blocked> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_4 : tensor<32xi64, #blocked> loc(#loc9)
    %10 = arith.muli %7, %cst_5 : tensor<32xi32, #blocked> loc(#loc10)
    %11 = arith.addi %10, %cst_3 : tensor<32xi32, #blocked> loc(#loc11)
    %12 = arith.addi %11, %6 : tensor<32xi32, #blocked> loc(#loc12)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = tt.addptr %13, %12 : tensor<32x!tt.ptr<f32>, #blocked>, tensor<32xi32, #blocked> loc(#loc13)
    %15 = arith.andi %9, %5 : tensor<32xi1, #blocked> loc(#loc14)
    %16 = tt.load %14, %15, %cst_2 evictionPolicy = evict_last : tensor<32x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = arith.addi %10, %cst_1 : tensor<32xi32, #blocked> loc(#loc16)
    %18 = arith.addi %17, %6 : tensor<32xi32, #blocked> loc(#loc17)
    %19 = tt.addptr %13, %18 : tensor<32x!tt.ptr<f32>, #blocked>, tensor<32xi32, #blocked> loc(#loc18)
    %20 = tt.load %19, %15, %cst_2 evictionPolicy = evict_last : tensor<32x!tt.ptr<f32>, #blocked> loc(#loc19)
    %21 = arith.subf %cst_2, %20 : tensor<32xf32, #blocked> loc(#loc20)
    %22 = arith.addf %16, %21 : tensor<32xf32, #blocked> loc(#loc21)
    %23 = arith.addi %10, %cst_5 : tensor<32xi32, #blocked> loc(#loc22)
    %24 = arith.addi %23, %6 : tensor<32xi32, #blocked> loc(#loc23)
    %25 = tt.addptr %13, %24 : tensor<32x!tt.ptr<f32>, #blocked>, tensor<32xi32, #blocked> loc(#loc24)
    %26 = tt.load %25, %15, %cst_2 evictionPolicy = evict_last : tensor<32x!tt.ptr<f32>, #blocked> loc(#loc25)
    %27 = arith.addi %10, %6 : tensor<32xi32, #blocked> loc(#loc26)
    %28 = tt.addptr %13, %27 : tensor<32x!tt.ptr<f32>, #blocked>, tensor<32xi32, #blocked> loc(#loc27)
    %29 = tt.load %28, %15, %cst_2 evictionPolicy = evict_last : tensor<32x!tt.ptr<f32>, #blocked> loc(#loc28)
    %30 = arith.subf %cst_2, %29 : tensor<32xf32, #blocked> loc(#loc29)
    %31 = arith.addf %26, %30 : tensor<32xf32, #blocked> loc(#loc30)
    %32 = tt.extern_elementwise %22, %31 {libname = "", libpath = "", pure = true, symbol = "__nv_atan2f"} : (tensor<32xf32, #blocked>, tensor<32xf32, #blocked>) -> tensor<32xf32, #blocked> loc(#loc31)
    %33 = tt.extern_elementwise %32, %cst_0 {libname = "", libpath = "", pure = true, symbol = "__nv_fmodf"} : (tensor<32xf32, #blocked>, tensor<32xf32, #blocked>) -> tensor<32xf32, #blocked> loc(#loc32)
    %34 = math.absf %33 : tensor<32xf32, #blocked> loc(#loc33)
    %35 = math.cos %34 : tensor<32xf32, #blocked> loc(#loc34)
    %36 = arith.cmpi sge, %8, %cst_4 : tensor<32xi64, #blocked> loc(#loc35)
    %37 = arith.addi %6, %cst : tensor<32xi32, #blocked> loc(#loc36)
    %38 = arith.addi %11, %37 : tensor<32xi32, #blocked> loc(#loc37)
    %39 = tt.addptr %13, %38 : tensor<32x!tt.ptr<f32>, #blocked>, tensor<32xi32, #blocked> loc(#loc38)
    %40 = arith.andi %36, %5 : tensor<32xi1, #blocked> loc(#loc39)
    %41 = tt.load %39, %40, %cst_2 evictionPolicy = evict_last : tensor<32x!tt.ptr<f32>, #blocked> loc(#loc40)
    %42 = arith.addi %17, %37 : tensor<32xi32, #blocked> loc(#loc41)
    %43 = tt.addptr %13, %42 : tensor<32x!tt.ptr<f32>, #blocked>, tensor<32xi32, #blocked> loc(#loc42)
    %44 = tt.load %43, %40, %cst_2 evictionPolicy = evict_last : tensor<32x!tt.ptr<f32>, #blocked> loc(#loc43)
    %45 = arith.subf %cst_2, %44 : tensor<32xf32, #blocked> loc(#loc44)
    %46 = arith.addf %41, %45 : tensor<32xf32, #blocked> loc(#loc45)
    %47 = arith.addi %23, %37 : tensor<32xi32, #blocked> loc(#loc46)
    %48 = tt.addptr %13, %47 : tensor<32x!tt.ptr<f32>, #blocked>, tensor<32xi32, #blocked> loc(#loc47)
    %49 = tt.load %48, %40, %cst_2 evictionPolicy = evict_last : tensor<32x!tt.ptr<f32>, #blocked> loc(#loc48)
    %50 = arith.addi %10, %37 : tensor<32xi32, #blocked> loc(#loc49)
    %51 = tt.addptr %13, %50 : tensor<32x!tt.ptr<f32>, #blocked>, tensor<32xi32, #blocked> loc(#loc50)
    %52 = tt.load %51, %40, %cst_2 evictionPolicy = evict_last : tensor<32x!tt.ptr<f32>, #blocked> loc(#loc51)
    %53 = arith.subf %cst_2, %52 : tensor<32xf32, #blocked> loc(#loc52)
    %54 = arith.addf %49, %53 : tensor<32xf32, #blocked> loc(#loc53)
    %55 = tt.extern_elementwise %46, %54 {libname = "", libpath = "", pure = true, symbol = "__nv_atan2f"} : (tensor<32xf32, #blocked>, tensor<32xf32, #blocked>) -> tensor<32xf32, #blocked> loc(#loc54)
    %56 = tt.extern_elementwise %55, %cst_0 {libname = "", libpath = "", pure = true, symbol = "__nv_fmodf"} : (tensor<32xf32, #blocked>, tensor<32xf32, #blocked>) -> tensor<32xf32, #blocked> loc(#loc55)
    %57 = math.absf %56 : tensor<32xf32, #blocked> loc(#loc56)
    %58 = arith.subf %57, %cst_0 : tensor<32xf32, #blocked> loc(#loc57)
    %59 = math.cos %58 : tensor<32xf32, #blocked> loc(#loc58)
    %60 = arith.select %36, %59, %cst_2 : tensor<32xi1, #blocked>, tensor<32xf32, #blocked> loc(#loc59)
    %61 = arith.select %9, %35, %60 : tensor<32xi1, #blocked>, tensor<32xf32, #blocked> loc(#loc73)
    %62 = arith.addf %34, %cst_0 : tensor<32xf32, #blocked> loc(#loc62)
    %63 = math.cos %62 : tensor<32xf32, #blocked> loc(#loc63)
    %64 = math.cos %57 : tensor<32xf32, #blocked> loc(#loc64)
    %65 = arith.select %36, %64, %cst_2 : tensor<32xi1, #blocked>, tensor<32xf32, #blocked> loc(#loc65)
    %66 = arith.select %9, %63, %65 : tensor<32xi1, #blocked>, tensor<32xf32, #blocked> loc(#loc74)
    %67 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x!tt.ptr<f32>, #blocked> loc(#loc68)
    %68 = tt.addptr %67, %4 : tensor<32x!tt.ptr<f32>, #blocked>, tensor<32xi32, #blocked> loc(#loc68)
    tt.store %68, %61, %5 : tensor<32x!tt.ptr<f32>, #blocked> loc(#loc69)
    %69 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x!tt.ptr<f32>, #blocked> loc(#loc70)
    %70 = tt.addptr %69, %4 : tensor<32x!tt.ptr<f32>, #blocked>, tensor<32xi32, #blocked> loc(#loc70)
    tt.store %70, %66, %5 : tensor<32x!tt.ptr<f32>, #blocked> loc(#loc71)
    tt.return loc(#loc72)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":21:28)
#loc3 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":21:33)
#loc4 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":22:36)
#loc5 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":22:23)
#loc6 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":23:21)
#loc7 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":24:19)
#loc8 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":25:19)
#loc9 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":31:18)
#loc10 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":32:37)
#loc11 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":32:35)
#loc12 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":32:43)
#loc13 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":32:30)
#loc14 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":32:56)
#loc15 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":32:49)
#loc16 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":33:34)
#loc17 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":33:42)
#loc18 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":33:30)
#loc19 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":33:48)
#loc20 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":34:12)
#loc21 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":35:18)
#loc22 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":36:34)
#loc23 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":36:42)
#loc24 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":36:30)
#loc25 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":36:48)
#loc26 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":37:39)
#loc27 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":37:31)
#loc28 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":37:45)
#loc29 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":38:13)
#loc30 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":39:19)
#loc31 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":40:34)
#loc32 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":42:34)
#loc33 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":43:24)
#loc34 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":44:24)
#loc35 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":47:20)
#loc36 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":50:51)
#loc37 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":50:44)
#loc38 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":50:31)
#loc39 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":50:65)
#loc40 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":50:57)
#loc41 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":51:43)
#loc42 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":51:31)
#loc43 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":51:56)
#loc44 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":52:13)
#loc45 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":53:20)
#loc46 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":54:43)
#loc47 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":54:31)
#loc48 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":54:56)
#loc49 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":55:39)
#loc50 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":55:31)
#loc51 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":55:52)
#loc52 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":56:13)
#loc53 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":57:20)
#loc54 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":58:35)
#loc55 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":60:34)
#loc56 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":61:24)
#loc57 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":62:20)
#loc58 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":63:24)
#loc59 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":65:35)
#loc60 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":66:34)
#loc61 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":46:34)
#loc62 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":67:20)
#loc63 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":68:24)
#loc64 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":71:24)
#loc65 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":73:35)
#loc66 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":74:34)
#loc67 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":70:34)
#loc68 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":75:25)
#loc69 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":75:37)
#loc70 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":76:25)
#loc71 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":76:37)
#loc72 = loc("inductor_cache/he/chef3sa75bhone2wx5yd62767bhw7zncjqxifhel6ebobbu6h7bi.py":76:4)
#loc73 = loc(fused[#loc60, #loc61])
#loc74 = loc(fused[#loc66, #loc67])
