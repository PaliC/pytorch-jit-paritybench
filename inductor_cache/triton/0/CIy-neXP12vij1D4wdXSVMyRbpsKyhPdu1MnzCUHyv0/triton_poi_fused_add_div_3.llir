; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_div_3(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 256, !dbg !14
  %12 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !15
  %13 = insertelement <2 x i32> %12, i32 %9, i64 1, !dbg !15
  %14 = srem <2 x i32> %13, splat (i32 4), !dbg !15
  %15 = sdiv i32 %9, 4, !dbg !16
  %16 = srem i32 %15, 4, !dbg !17
  %17 = sdiv i32 %9, 16, !dbg !18
  %18 = srem i32 %17, 4, !dbg !19
  %19 = sdiv i32 %9, 64, !dbg !20
  %20 = sext i32 %9 to i64, !dbg !21
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !21
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %21, i1 %11) #1, !dbg !22
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !22
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !22
  %25 = bitcast i32 %23 to float, !dbg !22
  %26 = bitcast i32 %24 to float, !dbg !22
  %27 = shl nsw i32 %16, 2, !dbg !23
  %28 = add nsw i32 %27, 4, !dbg !24
  %29 = insertelement <2 x i32> poison, i32 %28, i64 0, !dbg !25
  %30 = shufflevector <2 x i32> %29, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !25
  %31 = add nsw <2 x i32> %30, %14, !dbg !25
  %32 = trunc <2 x i32> %31 to <2 x i8>, !dbg !26
  %.frozen = freeze <2 x i8> %32, !dbg !27
  %33 = sdiv <2 x i8> %.frozen, splat (i8 5), !dbg !27
  %34 = mul <2 x i8> %33, splat (i8 5), !dbg !26
  %.decomposed = sub <2 x i8> %.frozen, %34, !dbg !26
  %35 = icmp slt <2 x i8> %.decomposed, splat (i8 1), !dbg !28
  %36 = extractelement <2 x i8> %.decomposed, i64 1, !dbg !29
  %37 = icmp sgt i8 %36, 0, !dbg !29
  %38 = extractelement <2 x i8> %.decomposed, i64 0, !dbg !29
  %39 = icmp sgt i8 %38, 0, !dbg !29
  %40 = shl nsw i32 %18, 4, !dbg !30
  %41 = shl nsw i32 %19, 6, !dbg !31
  %42 = add i32 %40, %41, !dbg !32
  %43 = sext <2 x i8> %33 to <2 x i32>, !dbg !27
  %44 = shl nsw <2 x i32> %43, splat (i32 2), !dbg !33
  %45 = add nsw <2 x i8> %.decomposed, splat (i8 -1), !dbg !34
  %46 = sext <2 x i8> %45 to <2 x i32>, !dbg !34
  %47 = insertelement <2 x i32> poison, i32 %42, i64 0, !dbg !35
  %48 = shufflevector <2 x i32> %47, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !35
  %49 = add <2 x i32> %48, %44, !dbg !35
  %50 = add <2 x i32> %49, %46, !dbg !36
  %51 = extractelement <2 x i32> %50, i64 1, !dbg !37
  %52 = sext i32 %51 to i64, !dbg !37
  %53 = getelementptr float, ptr addrspace(1) %1, i64 %52, !dbg !37
  %54 = extractelement <2 x i32> %50, i64 0, !dbg !37
  %55 = sext i32 %54 to i64, !dbg !37
  %56 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !37
  %57 = and i1 %11, %37, !dbg !38
  %58 = and i1 %39, %11, !dbg !38
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %53, i1 %57, i32 0, i1 %57) #1, !dbg !39
  %60 = bitcast i32 %59 to float, !dbg !39
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %58, i32 0, i1 %58) #1, !dbg !39
  %62 = bitcast i32 %61 to float, !dbg !39
  %63 = extractelement <2 x i1> %35, i64 1, !dbg !40
  %64 = select i1 %63, float 0.000000e+00, float %60, !dbg !40
  %65 = extractelement <2 x i1> %35, i64 0, !dbg !40
  %66 = select i1 %65, float 0.000000e+00, float %62, !dbg !40
  %67 = fadd float %64, %25, !dbg !41
  %68 = fadd float %66, %26, !dbg !41
  %69 = bitcast float %67 to i32, !dbg !42
  %70 = bitcast float %68 to i32, !dbg !42
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %69, i32 %70, ptr addrspace(1) %21, i1 %11) #1, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctej7jzgo67iywhby736kbpds53hfskzkcgzv7arnxrj3rpfrgii.py", directory: "inductor_cache/te")
!4 = !{ptr @triton_poi_fused_add_div_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_3", linkageName: "triton_poi_fused_add_div_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 21, scope: !7)
!17 = !DILocation(line: 26, column: 26, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 27, column: 27, scope: !7)
!20 = !DILocation(line: 28, column: 19, scope: !7)
!21 = !DILocation(line: 29, column: 34, scope: !7)
!22 = !DILocation(line: 29, column: 39, scope: !7)
!23 = !DILocation(line: 30, column: 24, scope: !7)
!24 = !DILocation(line: 30, column: 17, scope: !7)
!25 = !DILocation(line: 30, column: 22, scope: !7)
!26 = !DILocation(line: 30, column: 30, scope: !7)
!27 = !DILocation(line: 41, column: 53, scope: !7)
!28 = !DILocation(line: 34, column: 18, scope: !7)
!29 = !DILocation(line: 38, column: 19, scope: !7)
!30 = !DILocation(line: 41, column: 61, scope: !7)
!31 = !DILocation(line: 41, column: 98, scope: !7)
!32 = !DILocation(line: 41, column: 58, scope: !7)
!33 = !DILocation(line: 41, column: 34, scope: !7)
!34 = !DILocation(line: 41, column: 150, scope: !7)
!35 = !DILocation(line: 41, column: 95, scope: !7)
!36 = !DILocation(line: 41, column: 141, scope: !7)
!37 = !DILocation(line: 41, column: 31, scope: !7)
!38 = !DILocation(line: 41, column: 182, scope: !7)
!39 = !DILocation(line: 41, column: 175, scope: !7)
!40 = !DILocation(line: 42, column: 33, scope: !7)
!41 = !DILocation(line: 43, column: 19, scope: !7)
!42 = !DILocation(line: 46, column: 40, scope: !7)
!43 = !DILocation(line: 46, column: 4, scope: !7)
