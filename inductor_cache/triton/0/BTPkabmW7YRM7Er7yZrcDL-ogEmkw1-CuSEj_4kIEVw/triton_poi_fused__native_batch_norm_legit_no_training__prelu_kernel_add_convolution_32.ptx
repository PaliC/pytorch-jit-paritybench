//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_9,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_10,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_11
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b32 	%r<67>;
	.reg .f32 	%f<46>;
	.reg .b64 	%rd<39>;
	.loc	1 19 0                          // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_0];
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_1];
$L__tmp0:
	.loc	1 22 28                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:22:33
	shl.b32 	%r40, %r1, 9;
	ld.param.u64 	%rd26, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_2];
	.loc	1 23 44                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:23:44
	mov.u32 	%r41, %tid.x;
	ld.param.u64 	%rd27, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_3];
	and.b32  	%r43, %r41, 127;
	ld.param.u64 	%rd28, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_4];
	ld.param.u64 	%rd29, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_5];
	ld.param.u64 	%rd30, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_6];
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_7];
	.loc	1 23 23                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:23:23
	or.b32  	%r44, %r40, %r43;
	ld.param.u64 	%rd31, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_8];
	ld.param.u64 	%rd32, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_9];
	.loc	1 25 28                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 27 21                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:27:21
	setp.lt.s32 	%p1, %r2, 16;
	.loc	1 23 23                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:23:23
	shl.b32 	%r45, %r44, 4;
	.loc	1 32 39                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:32:39
	add.s32 	%r46, %r45, %r2;
	add.s32 	%r47, %r46, 2048;
	add.s32 	%r48, %r46, 4096;
	add.s32 	%r49, %r46, 6144;
	.loc	1 32 34                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:32:34
	mul.wide.s32 	%rd33, %r46, 4;
	add.s64 	%rd1, %rd24, %rd33;
	mul.wide.s32 	%rd34, %r47, 4;
	add.s64 	%rd2, %rd24, %rd34;
	mul.wide.s32 	%rd35, %r48, 4;
	add.s64 	%rd3, %rd24, %rd35;
	mul.wide.s32 	%rd36, %r49, 4;
	add.s64 	%rd4, %rd24, %rd36;
	.loc	1 32 47                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:32:47
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:33:30
	mul.wide.s32 	%rd37, %r2, 4;
	add.s64 	%rd5, %rd25, %rd37;
	.loc	1 33 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:33:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:34:30
	add.s64 	%rd6, %rd26, %rd37;
	.loc	1 34 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:34:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:35:30
	add.s64 	%rd7, %rd27, %rd37;
	.loc	1 35 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:35:35
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r9;
	.loc	1 36 31                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:36:31
	add.s64 	%rd8, %rd28, %rd37;
	.loc	1 36 36                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:36:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:37:31
	add.s64 	%rd9, %rd29, %rd37;
	.loc	1 37 36                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:37:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:38:31
	add.s64 	%rd10, %rd30, %rd33;
	add.s64 	%rd11, %rd30, %rd34;
	add.s64 	%rd12, %rd30, %rd35;
	add.s64 	%rd13, %rd30, %rd36;
	.loc	1 38 44                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:38:44
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd13 + 0 ];
	// end inline asm
	mov.pred 	%p14, -1;
	.loc	1 39 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:39:20
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p14 ld.global.b32 { %r16 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 44 18                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:44:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 45 26                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:45:26
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 32 47                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:32:47
	mov.b32 	%f4, %r6;
	mov.b32 	%f5, %r5;
	mov.b32 	%f6, %r4;
	mov.b32 	%f7, %r3;
	.loc	1 39 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:39:20
	mov.b32 	%f8, %r16;
	.loc	1 38 44                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:38:44
	mov.b32 	%f9, %r15;
	mov.b32 	%f10, %r14;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r12;
	.loc	1 23 44                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:23:44
	shl.b32 	%r50, %r41, 2;
	and.b32  	%r51, %r50, 508;
	.loc	1 23 23                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:23:23
	or.b32  	%r52, %r40, %r51;
	.loc	1 31 19                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:31:19
	bfe.s32 	%r53, %r1, 22, 1;
	shr.u32 	%r54, %r53, 22;
	add.s32 	%r55, %r52, %r54;
	.loc	1 30 19                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:30:19
	and.b32  	%r56, %r55, -1024;
	sub.s32 	%r57, %r52, %r56;
	.loc	1 47 19                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:47:19
	mov.b32 	%r19, %f3;
	mov.b32 	%r18, 1065353216;
	// begin inline asm
	div.full.f32 %r17, %r18, %r19;
	// end inline asm
	mov.b32 	%f13, %r17;
	.loc	1 41 18                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:41:18
	mov.b32 	%f14, %r7;
	add.f32 	%f15, %f14, %f7;
	add.f32 	%f16, %f14, %f6;
	add.f32 	%f17, %f14, %f5;
	add.f32 	%f18, %f14, %f4;
	.loc	1 42 18                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:42:18
	mov.b32 	%f19, %r8;
	sub.f32 	%f20, %f18, %f19;
	sub.f32 	%f21, %f17, %f19;
	sub.f32 	%f22, %f16, %f19;
	sub.f32 	%f23, %f15, %f19;
	.loc	1 50 19                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:50:19
	mul.f32 	%f24, %f23, %f13;
	mul.f32 	%f25, %f22, %f13;
	mul.f32 	%f26, %f21, %f13;
	mul.f32 	%f27, %f20, %f13;
	.loc	1 51 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:51:20
	mov.b32 	%f28, %r10;
	.loc	1 52 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:52:20
	mov.b32 	%f29, %r11;
	fma.rn.f32 	%f30, %f27, %f28, %f29;
	fma.rn.f32 	%f31, %f26, %f28, %f29;
	fma.rn.f32 	%f32, %f25, %f28, %f29;
	fma.rn.f32 	%f33, %f24, %f28, %f29;
	.loc	1 53 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:53:20
	add.f32 	%f34, %f33, %f12;
	add.f32 	%f35, %f32, %f11;
	add.f32 	%f36, %f31, %f10;
	add.f32 	%f37, %f30, %f9;
	.loc	1 55 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:55:20
	setp.gt.f32 	%p28, %f37, 0f00000000;
	setp.gt.f32 	%p29, %f36, 0f00000000;
	setp.gt.f32 	%p30, %f35, 0f00000000;
	setp.gt.f32 	%p31, %f34, 0f00000000;
	.loc	1 56 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:56:20
	mul.f32 	%f38, %f34, %f8;
	mul.f32 	%f39, %f35, %f8;
	mul.f32 	%f40, %f36, %f8;
	mul.f32 	%f41, %f37, %f8;
	.loc	1 57 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:57:35
	selp.f32 	%f42, %f34, %f38, %p31;
	selp.f32 	%f43, %f35, %f39, %p30;
	selp.f32 	%f44, %f36, %f40, %p29;
	selp.f32 	%f45, %f37, %f41, %p28;
	.loc	1 58 4                          // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:58:4
	bar.sync 	0;
	.loc	1 59 47                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:59:47
	mov.b32 	%r23, %f18;
	mov.b32 	%r22, %f17;
	mov.b32 	%r21, %f16;
	mov.b32 	%r20, %f15;
	// begin inline asm
	@%p1 st.global.b32 [ %rd1 + 0 ], { %r20 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.b32 [ %rd2 + 0 ], { %r21 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.b32 [ %rd3 + 0 ], { %r22 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.b32 [ %rd4 + 0 ], { %r23 };
	// end inline asm
	.loc	1 60 25                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:60:25
	add.s64 	%rd19, %rd31, %rd33;
	add.s64 	%rd20, %rd31, %rd34;
	add.s64 	%rd21, %rd31, %rd35;
	add.s64 	%rd22, %rd31, %rd36;
	.loc	1 60 45                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:60:45
	mov.b32 	%r24, %f34;
	// begin inline asm
	@%p1 st.global.b32 [ %rd19 + 0 ], { %r24 };
	// end inline asm
	mov.b32 	%r25, %f35;
	// begin inline asm
	@%p1 st.global.b32 [ %rd20 + 0 ], { %r25 };
	// end inline asm
	mov.b32 	%r26, %f36;
	// begin inline asm
	@%p1 st.global.b32 [ %rd21 + 0 ], { %r26 };
	// end inline asm
	mov.b32 	%r27, %f37;
	// begin inline asm
	@%p1 st.global.b32 [ %rd22 + 0 ], { %r27 };
	// end inline asm
	.loc	1 61 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:35
	shl.b32 	%r58, %r2, 10;
	.loc	1 61 30                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:30
	add.s32 	%r59, %r57, %r58;
	.loc	1 61 46                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:46
	shl.b32 	%r60, %r55, 4;
	and.b32  	%r61, %r60, -16384;
	.loc	1 61 40                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:40
	add.s32 	%r62, %r59, %r61;
	.loc	1 61 25                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:25
	mul.wide.s32 	%rd38, %r62, 4;
	add.s64 	%rd23, %rd32, %rd38;
	.loc	1 61 58                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:58
	shl.b32 	%r63, %r43, 2;
	mov.u32 	%r64, global_smem;
	add.s32 	%r28, %r64, %r63;
	mov.b32 	%r29, %f42;
	// begin inline asm
	@%p14 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	add.s32 	%r30, %r28, 512;
	mov.b32 	%r31, %f43;
	// begin inline asm
	@%p14 st.shared.b32 [ %r30 + 0 ], %r31;
	// end inline asm
	add.s32 	%r32, %r28, 1024;
	mov.b32 	%r33, %f44;
	// begin inline asm
	@%p14 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	add.s32 	%r34, %r28, 1536;
	mov.b32 	%r35, %f45;
	// begin inline asm
	@%p14 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r65, %r51, 2;
	add.s32 	%r66, %r64, %r65;
	ld.shared.v4.u32 	{%r36, %r37, %r38, %r39}, [%r66];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd23 + 0 ], { %r36, %r37, %r38, %r39 };
	// end inline asm
	.loc	1 61 4                          // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fq/cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 113
.b8 116
.b8 52
.b8 112
.b8 109
.b8 122
.b8 115
.b8 122
.b8 54
.b8 99
.b8 114
.b8 106
.b8 110
.b8 116
.b8 102
.b8 54
.b8 51
.b8 114
.b8 112
.b8 116
.b8 108
.b8 99
.b8 113
.b8 105
.b8 100
.b8 114
.b8 53
.b8 119
.b8 120
.b8 119
.b8 54
.b8 50
.b8 116
.b8 101
.b8 113
.b8 52
.b8 120
.b8 97
.b8 112
.b8 115
.b8 51
.b8 107
.b8 110
.b8 118
.b8 50
.b8 117
.b8 106
.b8 113
.b8 55
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 113
.b8 0
	}
	.section	.debug_macinfo	{	}
