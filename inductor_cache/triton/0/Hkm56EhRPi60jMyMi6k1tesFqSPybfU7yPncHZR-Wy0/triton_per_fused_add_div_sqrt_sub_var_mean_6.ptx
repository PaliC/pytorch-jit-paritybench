//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_sqrt_sub_var_mean_6 // -- Begin function triton_per_fused_add_div_sqrt_sub_var_mean_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_div_sqrt_sub_var_mean_6
.visible .entry triton_per_fused_add_div_sqrt_sub_var_mean_6(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_sqrt_sub_var_mean_6_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_sqrt_sub_var_mean_6_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_sqrt_sub_var_mean_6_param_2,
	.param .u32 triton_per_fused_add_div_sqrt_sub_var_mean_6_param_3,
	.param .u32 triton_per_fused_add_div_sqrt_sub_var_mean_6_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b32 	%r<81>;
	.reg .f32 	%f<50>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd10, [triton_per_fused_add_div_sqrt_sub_var_mean_6_param_0];
	ld.param.u64 	%rd11, [triton_per_fused_add_div_sqrt_sub_var_mean_6_param_1];
$L__tmp0:
	.loc	1 23 28                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:25:21
	setp.lt.s32 	%p1, %r1, 256;
	ld.param.u64 	%rd12, [triton_per_fused_add_div_sqrt_sub_var_mean_6_param_2];
	.loc	1 26 34                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:26:34
	mov.u32 	%r45, %tid.x;
	and.b32  	%r46, %r45, 31;
	and.b32  	%r47, %r45, 63;
	or.b32  	%r48, %r47, 128;
	.loc	1 28 21                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:28:21
	setp.lt.u32 	%p20, %r48, 147;
	.loc	1 31 39                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:31:39
	mul.lo.s32 	%r49, %r1, 147;
	.loc	1 31 35                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:31:35
	add.s32 	%r50, %r49, %r47;
	add.s32 	%r51, %r50, 64;
	add.s32 	%r52, %r49, %r48;
	add.s32 	%r53, %r50, 192;
	.loc	1 31 30                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:31:30
	mul.wide.s32 	%rd13, %r50, 4;
	add.s64 	%rd1, %rd11, %rd13;
	mul.wide.s32 	%rd14, %r51, 4;
	add.s64 	%rd2, %rd11, %rd14;
	mul.wide.s32 	%rd15, %r52, 4;
	add.s64 	%rd3, %rd11, %rd15;
	mul.wide.s32 	%rd16, %r53, 4;
	add.s64 	%rd4, %rd11, %rd16;
	.loc	1 31 52                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:31:52
	and.pred  	%p5, %p20, %p1;
	mov.b32 	%r3, 0;
	.loc	1 31 44                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:31:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	mov.b32 	%f3, %r6;
	mov.pred 	%p7, 0;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	.loc	1 35 41                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:35:41
	selp.f32 	%f4, %f3, 0f00000000, %p5;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5, %f1, %f2;
	selp.f32 	%f6, %f5, 0f00000000, %p1;
	add.f32 	%f7, %f6, %f4;
	add.f32 	%f8, %f7, 0f00000000;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f8;
	shfl.sync.bfly.b32	%r55, %r54, 16, 31, -1;
	mov.b32 	%f9, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f10;
	shfl.sync.bfly.b32	%r57, %r56, 8, 31, -1;
	mov.b32 	%f11, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f12;
	shfl.sync.bfly.b32	%r59, %r58, 4, 31, -1;
	mov.b32 	%f13, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f14;
	shfl.sync.bfly.b32	%r61, %r60, 2, 31, -1;
	mov.b32 	%f15, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f16;
	shfl.sync.bfly.b32	%r63, %r62, 1, 31, -1;
	mov.b32 	%f17, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p9, %r46, 0;
	shr.u32 	%r64, %r45, 3;
	and.b32  	%r65, %r64, 4;
	mov.u32 	%r66, global_smem;
	add.s32 	%r10, %r66, %r65;
	mov.b32 	%r11, %f18;
	// begin inline asm
	@%p9 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r45, 2;
	shl.b32 	%r67, %r45, 2;
	add.s32 	%r13, %r66, %r67;
	// begin inline asm
	@%p10 ld.shared.b32 %r12, [ %r13 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r12;
	shfl.sync.bfly.b32	%r68, %r12, 1, 31, -1;
	mov.b32 	%f20, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r69, %r45, 1;
	setp.eq.b32 	%p21, %r69, 1;
	not.pred 	%p22, %p21;
	and.pred  	%p11, %p10, %p22;
	mov.b32 	%r15, %f21;
	// begin inline asm
	@%p11 st.shared.b32 [ %r13 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 39 19                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:39:19
	ld.shared.u32 	%r17, [global_smem];
	mov.b32 	%r18, 1125318656;
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%f22, %r16;
	.loc	1 40 19                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:40:19
	sub.f32 	%f23, %f1, %f22;
	sub.f32 	%f24, %f2, %f22;
	sub.f32 	%f25, %f3, %f22;
	.loc	1 41 20                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:41:20
	mul.f32 	%f26, %f24, %f24;
	mul.f32 	%f27, %f25, %f25;
	.loc	1 43 43                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:43:43
	selp.f32 	%f28, %f27, 0f00000000, %p5;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f29, %f23, %f23, %f26;
	selp.f32 	%f30, %f29, 0f00000000, %p1;
	add.f32 	%f31, %f28, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f31;
	shfl.sync.bfly.b32	%r71, %r70, 16, 31, -1;
	mov.b32 	%f32, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f33;
	shfl.sync.bfly.b32	%r73, %r72, 8, 31, -1;
	mov.b32 	%f34, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f35;
	shfl.sync.bfly.b32	%r75, %r74, 4, 31, -1;
	mov.b32 	%f36, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f37;
	shfl.sync.bfly.b32	%r77, %r76, 2, 31, -1;
	mov.b32 	%f38, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f39;
	shfl.sync.bfly.b32	%r79, %r78, 1, 31, -1;
	mov.b32 	%f40, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r20, %f41;
	// begin inline asm
	@%p9 st.shared.b32 [ %r10 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p10 ld.shared.b32 %r21, [ %r13 + 0 ];
	// end inline asm
	mov.b32 	%f42, %r21;
	shfl.sync.bfly.b32	%r80, %r21, 1, 31, -1;
	mov.b32 	%f43, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f44;
	// begin inline asm
	@%p11 st.shared.b32 [ %r13 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 46 20                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:46:20
	ld.shared.u32 	%r26, [global_smem];
	// begin inline asm
	div.full.f32 %r25, %r26, %r18;
	// end inline asm
	mov.b32 	%f45, %r25;
	.loc	1 48 20                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:48:20
	add.f32 	%f46, %f45, 0f2EDBE6FF;
	.loc	1 49 27                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:49:27
	sqrt.approx.ftz.f32 	%f47, %f46;
	.loc	1 31 44                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:31:44
	mov.b32 	%f48, %r8;
	.loc	1 40 19                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:40:19
	sub.f32 	%f49, %f48, %f22;
	.loc	1 51 20                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:51:20
	mov.b32 	%r29, %f23;
	mov.b32 	%r30, %f47;
	// begin inline asm
	div.full.f32 %r41, %r29, %r30;
	// end inline asm
	mov.b32 	%r32, %f24;
	// begin inline asm
	div.full.f32 %r42, %r32, %r30;
	// end inline asm
	mov.b32 	%r35, %f25;
	// begin inline asm
	div.full.f32 %r43, %r35, %r30;
	// end inline asm
	mov.b32 	%r38, %f49;
	// begin inline asm
	div.full.f32 %r44, %r38, %r30;
	// end inline asm
	.loc	1 52 4                          // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:52:4
	bar.sync 	0;
	.loc	1 53 28                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:53:28
	mul.wide.s32 	%rd17, %r1, 4;
	add.s64 	%rd5, %rd10, %rd17;
	.loc	1 53 40                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:53:40
	setp.eq.s32 	%p23, %r47, 0;
	and.pred  	%p15, %p23, %p1;
	// begin inline asm
	@%p15 st.global.b32 [ %rd5 + 0 ], { %r30 };
	// end inline asm
	.loc	1 54 25                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:54:25
	add.s64 	%rd6, %rd12, %rd13;
	add.s64 	%rd7, %rd12, %rd14;
	add.s64 	%rd8, %rd12, %rd15;
	add.s64 	%rd9, %rd12, %rd16;
	.loc	1 54 46                         // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:54:46
	// begin inline asm
	@%p1 st.global.b32 [ %rd6 + 0 ], { %r41 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.b32 [ %rd7 + 0 ], { %r42 };
	// end inline asm
	// begin inline asm
	@%p5 st.global.b32 [ %rd8 + 0 ], { %r43 };
	// end inline asm
	// begin inline asm
	@%p7 st.global.b32 [ %rd9 + 0 ], { %r44 };
	// end inline asm
	.loc	1 54 4                          // cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py:54:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/jo/cjox7ultkslv6gd7udb27juzrlre5bplphedjbuqg5hnonid5xsj.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 213                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xce DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 111
.b8 120
.b8 55
.b8 117
.b8 108
.b8 116
.b8 107
.b8 115
.b8 108
.b8 118
.b8 54
.b8 103
.b8 100
.b8 55
.b8 117
.b8 100
.b8 98
.b8 50
.b8 55
.b8 106
.b8 117
.b8 122
.b8 114
.b8 108
.b8 114
.b8 101
.b8 53
.b8 98
.b8 112
.b8 108
.b8 112
.b8 104
.b8 101
.b8 100
.b8 106
.b8 98
.b8 117
.b8 113
.b8 103
.b8 53
.b8 104
.b8 110
.b8 111
.b8 110
.b8 105
.b8 100
.b8 53
.b8 120
.b8 115
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 111
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 118
.b8 97
.b8 114
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x92:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
