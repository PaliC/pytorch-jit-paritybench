//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_1 // -- Begin function triton_poi_fused_convolution_1
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_1
.visible .entry triton_poi_fused_convolution_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_1_param_2,
	.param .u32 triton_poi_fused_convolution_1_param_3,
	.param .u32 triton_poi_fused_convolution_1_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<99>;
	.reg .b32 	%r<257>;
	.reg .b64 	%rd<84>;
	.loc	1 19 0                          // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:19:0

// %bb.0:
	ld.param.u64 	%rd49, [triton_poi_fused_convolution_1_param_0];
	ld.param.u64 	%rd50, [triton_poi_fused_convolution_1_param_1];
$L__tmp0:
	.loc	1 22 28                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:22:33
	shl.b32 	%r83, %r1, 6;
	ld.param.u64 	%rd51, [triton_poi_fused_convolution_1_param_2];
	.loc	1 23 44                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:23:44
	mov.u32 	%r84, %tid.x;
	bfe.u32 	%r85, %r84, 6, 2;
	or.b32  	%r86, %r85, 4;
	or.b32  	%r87, %r85, 8;
	or.b32  	%r88, %r85, 12;
	or.b32  	%r89, %r85, 16;
	or.b32  	%r90, %r85, 20;
	or.b32  	%r91, %r85, 24;
	or.b32  	%r92, %r85, 28;
	or.b32  	%r93, %r85, 32;
	or.b32  	%r94, %r85, 36;
	or.b32  	%r95, %r85, 40;
	or.b32  	%r96, %r85, 44;
	or.b32  	%r97, %r85, 48;
	or.b32  	%r98, %r85, 52;
	or.b32  	%r99, %r85, 56;
	or.b32  	%r100, %r85, 60;
	and.b32  	%r101, %r84, 63;
	.loc	1 23 23                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:23:23
	or.b32  	%r102, %r83, %r85;
	or.b32  	%r103, %r83, %r86;
	or.b32  	%r104, %r83, %r87;
	or.b32  	%r105, %r83, %r88;
	or.b32  	%r106, %r83, %r89;
	or.b32  	%r107, %r83, %r90;
	or.b32  	%r108, %r83, %r91;
	or.b32  	%r109, %r83, %r92;
	or.b32  	%r110, %r83, %r93;
	or.b32  	%r111, %r83, %r94;
	or.b32  	%r112, %r83, %r95;
	or.b32  	%r113, %r83, %r96;
	or.b32  	%r114, %r83, %r97;
	or.b32  	%r115, %r83, %r98;
	or.b32  	%r116, %r83, %r99;
	or.b32  	%r117, %r83, %r100;
	or.b32  	%r118, %r83, %r101;
	.loc	1 24 21                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:24:21
	setp.lt.s32 	%p65, %r102, 49;
	setp.lt.s32 	%p66, %r103, 49;
	setp.lt.s32 	%p67, %r104, 49;
	setp.lt.s32 	%p68, %r105, 49;
	setp.lt.s32 	%p69, %r106, 49;
	setp.lt.s32 	%p70, %r107, 49;
	setp.lt.s32 	%p71, %r108, 49;
	setp.lt.s32 	%p72, %r109, 49;
	setp.lt.s32 	%p73, %r110, 49;
	setp.lt.s32 	%p74, %r111, 49;
	setp.lt.s32 	%p75, %r112, 49;
	setp.lt.s32 	%p76, %r113, 49;
	setp.lt.s32 	%p77, %r114, 49;
	setp.lt.s32 	%p78, %r115, 49;
	setp.lt.s32 	%p79, %r116, 49;
	setp.lt.s32 	%p80, %r117, 49;
	setp.lt.s32 	%p81, %r118, 49;
	.loc	1 25 28                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:25:33
	shl.b32 	%r119, %r2, 6;
	.loc	1 26 23                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:26:23
	or.b32  	%r120, %r119, %r101;
	or.b32  	%r121, %r119, %r85;
	or.b32  	%r122, %r119, %r86;
	or.b32  	%r123, %r119, %r87;
	or.b32  	%r124, %r119, %r88;
	or.b32  	%r125, %r119, %r89;
	or.b32  	%r126, %r119, %r90;
	or.b32  	%r127, %r119, %r91;
	or.b32  	%r128, %r119, %r92;
	or.b32  	%r129, %r119, %r93;
	or.b32  	%r130, %r119, %r94;
	or.b32  	%r131, %r119, %r95;
	or.b32  	%r132, %r119, %r96;
	or.b32  	%r133, %r119, %r97;
	or.b32  	%r134, %r119, %r98;
	or.b32  	%r135, %r119, %r99;
	or.b32  	%r136, %r119, %r100;
	.loc	1 27 21                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:27:21
	setp.lt.s32 	%p82, %r120, 49;
	setp.lt.s32 	%p83, %r121, 49;
	setp.lt.s32 	%p84, %r122, 49;
	setp.lt.s32 	%p85, %r123, 49;
	setp.lt.s32 	%p86, %r124, 49;
	setp.lt.s32 	%p87, %r125, 49;
	setp.lt.s32 	%p88, %r126, 49;
	setp.lt.s32 	%p89, %r127, 49;
	setp.lt.s32 	%p90, %r128, 49;
	setp.lt.s32 	%p91, %r129, 49;
	setp.lt.s32 	%p92, %r130, 49;
	setp.lt.s32 	%p93, %r131, 49;
	setp.lt.s32 	%p94, %r132, 49;
	setp.lt.s32 	%p95, %r133, 49;
	setp.lt.s32 	%p96, %r134, 49;
	setp.lt.s32 	%p97, %r135, 49;
	setp.lt.s32 	%p98, %r136, 49;
	.loc	1 30 35                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:30:35
	mad.lo.s32 	%r137, %r121, 49, %r118;
	mad.lo.s32 	%r138, %r122, 49, %r118;
	mad.lo.s32 	%r139, %r123, 49, %r118;
	mad.lo.s32 	%r140, %r124, 49, %r118;
	mad.lo.s32 	%r141, %r125, 49, %r118;
	mad.lo.s32 	%r142, %r126, 49, %r118;
	mad.lo.s32 	%r143, %r127, 49, %r118;
	mad.lo.s32 	%r144, %r128, 49, %r118;
	mad.lo.s32 	%r145, %r129, 49, %r118;
	mad.lo.s32 	%r146, %r130, 49, %r118;
	mad.lo.s32 	%r147, %r131, 49, %r118;
	mad.lo.s32 	%r148, %r132, 49, %r118;
	mad.lo.s32 	%r149, %r133, 49, %r118;
	mad.lo.s32 	%r150, %r134, 49, %r118;
	mad.lo.s32 	%r151, %r135, 49, %r118;
	mad.lo.s32 	%r152, %r136, 49, %r118;
	.loc	1 30 30                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:30:30
	mul.wide.s32 	%rd52, %r137, 4;
	add.s64 	%rd1, %rd49, %rd52;
	mul.wide.s32 	%rd53, %r138, 4;
	add.s64 	%rd2, %rd49, %rd53;
	mul.wide.s32 	%rd54, %r139, 4;
	add.s64 	%rd3, %rd49, %rd54;
	mul.wide.s32 	%rd55, %r140, 4;
	add.s64 	%rd4, %rd49, %rd55;
	mul.wide.s32 	%rd56, %r141, 4;
	add.s64 	%rd5, %rd49, %rd56;
	mul.wide.s32 	%rd57, %r142, 4;
	add.s64 	%rd6, %rd49, %rd57;
	mul.wide.s32 	%rd58, %r143, 4;
	add.s64 	%rd7, %rd49, %rd58;
	mul.wide.s32 	%rd59, %r144, 4;
	add.s64 	%rd8, %rd49, %rd59;
	mul.wide.s32 	%rd60, %r145, 4;
	add.s64 	%rd9, %rd49, %rd60;
	mul.wide.s32 	%rd61, %r146, 4;
	add.s64 	%rd10, %rd49, %rd61;
	mul.wide.s32 	%rd62, %r147, 4;
	add.s64 	%rd11, %rd49, %rd62;
	mul.wide.s32 	%rd63, %r148, 4;
	add.s64 	%rd12, %rd49, %rd63;
	mul.wide.s32 	%rd64, %r149, 4;
	add.s64 	%rd13, %rd49, %rd64;
	mul.wide.s32 	%rd65, %r150, 4;
	add.s64 	%rd14, %rd49, %rd65;
	mul.wide.s32 	%rd66, %r151, 4;
	add.s64 	%rd15, %rd49, %rd66;
	mul.wide.s32 	%rd67, %r152, 4;
	add.s64 	%rd16, %rd49, %rd67;
	.loc	1 30 51                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:30:51
	and.pred  	%p33, %p65, %p82;
	and.pred  	%p34, %p66, %p82;
	and.pred  	%p35, %p67, %p82;
	and.pred  	%p36, %p68, %p82;
	and.pred  	%p37, %p69, %p82;
	and.pred  	%p38, %p70, %p82;
	and.pred  	%p39, %p71, %p82;
	and.pred  	%p40, %p72, %p82;
	and.pred  	%p41, %p73, %p82;
	and.pred  	%p42, %p74, %p82;
	and.pred  	%p43, %p75, %p82;
	and.pred  	%p44, %p76, %p82;
	and.pred  	%p45, %p77, %p82;
	and.pred  	%p46, %p78, %p82;
	and.pred  	%p47, %p79, %p82;
	and.pred  	%p48, %p80, %p82;
	and.pred  	%p1, %p81, %p83;
	and.pred  	%p2, %p81, %p84;
	and.pred  	%p3, %p81, %p85;
	and.pred  	%p4, %p81, %p86;
	and.pred  	%p5, %p81, %p87;
	and.pred  	%p6, %p81, %p88;
	and.pred  	%p7, %p81, %p89;
	and.pred  	%p8, %p81, %p90;
	and.pred  	%p9, %p81, %p91;
	and.pred  	%p10, %p81, %p92;
	and.pred  	%p11, %p81, %p93;
	and.pred  	%p12, %p81, %p94;
	and.pred  	%p13, %p81, %p95;
	and.pred  	%p14, %p81, %p96;
	and.pred  	%p15, %p81, %p97;
	and.pred  	%p16, %p81, %p98;
	.loc	1 30 43                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:30:43
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.b32 { %r20 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p2 ld.global.b32 { %r22 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p3 ld.global.b32 { %r24 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p4 ld.global.b32 { %r26 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p5 ld.global.b32 { %r28 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p6 ld.global.b32 { %r30 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p7 ld.global.b32 { %r32 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p8 ld.global.b32 { %r34 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p9 ld.global.b32 { %r36 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p10 ld.global.b32 { %r38 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p11 ld.global.b32 { %r40 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p12 ld.global.b32 { %r42 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p13 ld.global.b32 { %r44 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p14 ld.global.b32 { %r46 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p15 ld.global.b32 { %r48 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r50, 0x0;
	@%p16 ld.global.b32 { %r50 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 31 30                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:31:30
	mad.lo.s32 	%r153, %r102, 49, %r120;
	mad.lo.s32 	%r154, %r103, 49, %r120;
	mad.lo.s32 	%r155, %r104, 49, %r120;
	mad.lo.s32 	%r156, %r105, 49, %r120;
	mad.lo.s32 	%r157, %r106, 49, %r120;
	mad.lo.s32 	%r158, %r107, 49, %r120;
	mad.lo.s32 	%r159, %r108, 49, %r120;
	mad.lo.s32 	%r160, %r109, 49, %r120;
	mad.lo.s32 	%r161, %r110, 49, %r120;
	mad.lo.s32 	%r162, %r111, 49, %r120;
	mad.lo.s32 	%r163, %r112, 49, %r120;
	mad.lo.s32 	%r164, %r113, 49, %r120;
	mad.lo.s32 	%r165, %r114, 49, %r120;
	mad.lo.s32 	%r166, %r115, 49, %r120;
	mad.lo.s32 	%r167, %r116, 49, %r120;
	mad.lo.s32 	%r168, %r117, 49, %r120;
	.loc	1 31 25                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:31:25
	mul.wide.s32 	%rd68, %r153, 4;
	add.s64 	%rd17, %rd50, %rd68;
	mul.wide.s32 	%rd69, %r154, 4;
	add.s64 	%rd18, %rd50, %rd69;
	mul.wide.s32 	%rd70, %r155, 4;
	add.s64 	%rd19, %rd50, %rd70;
	mul.wide.s32 	%rd71, %r156, 4;
	add.s64 	%rd20, %rd50, %rd71;
	mul.wide.s32 	%rd72, %r157, 4;
	add.s64 	%rd21, %rd50, %rd72;
	mul.wide.s32 	%rd73, %r158, 4;
	add.s64 	%rd22, %rd50, %rd73;
	mul.wide.s32 	%rd74, %r159, 4;
	add.s64 	%rd23, %rd50, %rd74;
	mul.wide.s32 	%rd75, %r160, 4;
	add.s64 	%rd24, %rd50, %rd75;
	mul.wide.s32 	%rd76, %r161, 4;
	add.s64 	%rd25, %rd50, %rd76;
	mul.wide.s32 	%rd77, %r162, 4;
	add.s64 	%rd26, %rd50, %rd77;
	mul.wide.s32 	%rd78, %r163, 4;
	add.s64 	%rd27, %rd50, %rd78;
	mul.wide.s32 	%rd79, %r164, 4;
	add.s64 	%rd28, %rd50, %rd79;
	mul.wide.s32 	%rd80, %r165, 4;
	add.s64 	%rd29, %rd50, %rd80;
	mul.wide.s32 	%rd81, %r166, 4;
	add.s64 	%rd30, %rd50, %rd81;
	mul.wide.s32 	%rd82, %r167, 4;
	add.s64 	%rd31, %rd50, %rd82;
	mul.wide.s32 	%rd83, %r168, 4;
	add.s64 	%rd32, %rd50, %rd83;
	.loc	1 31 44                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:31:44
	shl.b32 	%r169, %r84, 6;
	and.b32  	%r170, %r169, 4032;
	or.b32  	%r171, %r170, %r85;
	and.b32  	%r172, %r84, 255;
	shr.u32 	%r173, %r170, 4;
	mov.u32 	%r174, global_smem;
	add.s32 	%r175, %r174, %r173;
	shl.b32 	%r176, %r171, 2;
	add.s32 	%r19, %r175, %r176;
	mov.pred 	%p17, -1;
	// begin inline asm
	@%p17 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r19, 16;
	// begin inline asm
	@%p17 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r19, 32;
	// begin inline asm
	@%p17 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r19, 48;
	// begin inline asm
	@%p17 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r19, 64;
	// begin inline asm
	@%p17 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r19, 80;
	// begin inline asm
	@%p17 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r19, 96;
	// begin inline asm
	@%p17 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r19, 112;
	// begin inline asm
	@%p17 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r19, 128;
	// begin inline asm
	@%p17 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r19, 144;
	// begin inline asm
	@%p17 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r19, 160;
	// begin inline asm
	@%p17 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r19, 176;
	// begin inline asm
	@%p17 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r19, 192;
	// begin inline asm
	@%p17 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r19, 208;
	// begin inline asm
	@%p17 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r19, 224;
	// begin inline asm
	@%p17 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r19, 240;
	// begin inline asm
	@%p17 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r177, %r84, 4;
	and.b32  	%r178, %r177, 12;
	add.s32 	%r179, %r174, %r178;
	shl.b32 	%r180, %r172, 2;
	add.s32 	%r181, %r179, %r180;
	ld.shared.u32 	%r67, [%r181];
	or.b32  	%r182, %r172, 256;
	shr.u32 	%r183, %r182, 4;
	and.b32  	%r184, %r183, 28;
	add.s32 	%r185, %r174, %r184;
	add.s32 	%r186, %r185, %r180;
	ld.shared.u32 	%r68, [%r186+1024];
	or.b32  	%r187, %r172, 512;
	shr.u32 	%r188, %r187, 4;
	and.b32  	%r189, %r188, 44;
	add.s32 	%r190, %r174, %r189;
	add.s32 	%r191, %r190, %r180;
	ld.shared.u32 	%r69, [%r191+2048];
	or.b32  	%r192, %r172, 768;
	shr.u32 	%r193, %r192, 4;
	and.b32  	%r194, %r193, 60;
	add.s32 	%r195, %r174, %r194;
	add.s32 	%r196, %r195, %r180;
	ld.shared.u32 	%r70, [%r196+3072];
	or.b32  	%r197, %r172, 1024;
	shr.u32 	%r198, %r197, 4;
	and.b32  	%r199, %r198, 76;
	add.s32 	%r200, %r174, %r199;
	add.s32 	%r201, %r200, %r180;
	ld.shared.u32 	%r71, [%r201+4096];
	or.b32  	%r202, %r172, 1280;
	shr.u32 	%r203, %r202, 4;
	and.b32  	%r204, %r203, 92;
	add.s32 	%r205, %r174, %r204;
	add.s32 	%r206, %r205, %r180;
	ld.shared.u32 	%r72, [%r206+5120];
	or.b32  	%r207, %r172, 1536;
	shr.u32 	%r208, %r207, 4;
	and.b32  	%r209, %r208, 108;
	add.s32 	%r210, %r174, %r209;
	add.s32 	%r211, %r210, %r180;
	ld.shared.u32 	%r73, [%r211+6144];
	or.b32  	%r212, %r172, 1792;
	shr.u32 	%r213, %r212, 4;
	and.b32  	%r214, %r213, 124;
	add.s32 	%r215, %r174, %r214;
	add.s32 	%r216, %r215, %r180;
	ld.shared.u32 	%r74, [%r216+7168];
	or.b32  	%r217, %r172, 2048;
	shr.u32 	%r218, %r217, 4;
	and.b32  	%r219, %r218, 140;
	add.s32 	%r220, %r174, %r219;
	add.s32 	%r221, %r220, %r180;
	ld.shared.u32 	%r75, [%r221+8192];
	or.b32  	%r222, %r172, 2304;
	shr.u32 	%r223, %r222, 4;
	and.b32  	%r224, %r223, 156;
	add.s32 	%r225, %r174, %r224;
	add.s32 	%r226, %r225, %r180;
	ld.shared.u32 	%r76, [%r226+9216];
	or.b32  	%r227, %r172, 2560;
	shr.u32 	%r228, %r227, 4;
	and.b32  	%r229, %r228, 172;
	add.s32 	%r230, %r174, %r229;
	add.s32 	%r231, %r230, %r180;
	ld.shared.u32 	%r77, [%r231+10240];
	or.b32  	%r232, %r172, 2816;
	shr.u32 	%r233, %r232, 4;
	and.b32  	%r234, %r233, 188;
	add.s32 	%r235, %r174, %r234;
	add.s32 	%r236, %r235, %r180;
	ld.shared.u32 	%r78, [%r236+11264];
	or.b32  	%r237, %r172, 3072;
	shr.u32 	%r238, %r237, 4;
	and.b32  	%r239, %r238, 204;
	add.s32 	%r240, %r174, %r239;
	add.s32 	%r241, %r240, %r180;
	ld.shared.u32 	%r79, [%r241+12288];
	or.b32  	%r242, %r172, 3328;
	shr.u32 	%r243, %r242, 4;
	and.b32  	%r244, %r243, 220;
	add.s32 	%r245, %r174, %r244;
	add.s32 	%r246, %r245, %r180;
	ld.shared.u32 	%r80, [%r246+13312];
	or.b32  	%r247, %r172, 3584;
	shr.u32 	%r248, %r247, 4;
	and.b32  	%r249, %r248, 236;
	add.s32 	%r250, %r174, %r249;
	add.s32 	%r251, %r250, %r180;
	ld.shared.u32 	%r81, [%r251+14336];
	or.b32  	%r252, %r172, 3840;
	shr.u32 	%r253, %r252, 4;
	and.b32  	%r254, %r253, 252;
	add.s32 	%r255, %r174, %r254;
	add.s32 	%r256, %r255, %r180;
	ld.shared.u32 	%r82, [%r256+15360];
	// begin inline asm
	@%p33 st.global.b32 [ %rd17 + 0 ], { %r67 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.b32 [ %rd18 + 0 ], { %r68 };
	// end inline asm
	// begin inline asm
	@%p35 st.global.b32 [ %rd19 + 0 ], { %r69 };
	// end inline asm
	// begin inline asm
	@%p36 st.global.b32 [ %rd20 + 0 ], { %r70 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.b32 [ %rd21 + 0 ], { %r71 };
	// end inline asm
	// begin inline asm
	@%p38 st.global.b32 [ %rd22 + 0 ], { %r72 };
	// end inline asm
	// begin inline asm
	@%p39 st.global.b32 [ %rd23 + 0 ], { %r73 };
	// end inline asm
	// begin inline asm
	@%p40 st.global.b32 [ %rd24 + 0 ], { %r74 };
	// end inline asm
	// begin inline asm
	@%p41 st.global.b32 [ %rd25 + 0 ], { %r75 };
	// end inline asm
	// begin inline asm
	@%p42 st.global.b32 [ %rd26 + 0 ], { %r76 };
	// end inline asm
	// begin inline asm
	@%p43 st.global.b32 [ %rd27 + 0 ], { %r77 };
	// end inline asm
	// begin inline asm
	@%p44 st.global.b32 [ %rd28 + 0 ], { %r78 };
	// end inline asm
	// begin inline asm
	@%p45 st.global.b32 [ %rd29 + 0 ], { %r79 };
	// end inline asm
	// begin inline asm
	@%p46 st.global.b32 [ %rd30 + 0 ], { %r80 };
	// end inline asm
	// begin inline asm
	@%p47 st.global.b32 [ %rd31 + 0 ], { %r81 };
	// end inline asm
	// begin inline asm
	@%p48 st.global.b32 [ %rd32 + 0 ], { %r82 };
	// end inline asm
	.loc	1 32 25                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:32:25
	add.s64 	%rd33, %rd51, %rd68;
	add.s64 	%rd34, %rd51, %rd69;
	add.s64 	%rd35, %rd51, %rd70;
	add.s64 	%rd36, %rd51, %rd71;
	add.s64 	%rd37, %rd51, %rd72;
	add.s64 	%rd38, %rd51, %rd73;
	add.s64 	%rd39, %rd51, %rd74;
	add.s64 	%rd40, %rd51, %rd75;
	add.s64 	%rd41, %rd51, %rd76;
	add.s64 	%rd42, %rd51, %rd77;
	add.s64 	%rd43, %rd51, %rd78;
	add.s64 	%rd44, %rd51, %rd79;
	add.s64 	%rd45, %rd51, %rd80;
	add.s64 	%rd46, %rd51, %rd81;
	add.s64 	%rd47, %rd51, %rd82;
	add.s64 	%rd48, %rd51, %rd83;
	.loc	1 32 44                         // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:32:44
	// begin inline asm
	@%p33 st.global.b32 [ %rd33 + 0 ], { %r67 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.b32 [ %rd34 + 0 ], { %r68 };
	// end inline asm
	// begin inline asm
	@%p35 st.global.b32 [ %rd35 + 0 ], { %r69 };
	// end inline asm
	// begin inline asm
	@%p36 st.global.b32 [ %rd36 + 0 ], { %r70 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.b32 [ %rd37 + 0 ], { %r71 };
	// end inline asm
	// begin inline asm
	@%p38 st.global.b32 [ %rd38 + 0 ], { %r72 };
	// end inline asm
	// begin inline asm
	@%p39 st.global.b32 [ %rd39 + 0 ], { %r73 };
	// end inline asm
	// begin inline asm
	@%p40 st.global.b32 [ %rd40 + 0 ], { %r74 };
	// end inline asm
	// begin inline asm
	@%p41 st.global.b32 [ %rd41 + 0 ], { %r75 };
	// end inline asm
	// begin inline asm
	@%p42 st.global.b32 [ %rd42 + 0 ], { %r76 };
	// end inline asm
	// begin inline asm
	@%p43 st.global.b32 [ %rd43 + 0 ], { %r77 };
	// end inline asm
	// begin inline asm
	@%p44 st.global.b32 [ %rd44 + 0 ], { %r78 };
	// end inline asm
	// begin inline asm
	@%p45 st.global.b32 [ %rd45 + 0 ], { %r79 };
	// end inline asm
	// begin inline asm
	@%p46 st.global.b32 [ %rd46 + 0 ], { %r80 };
	// end inline asm
	// begin inline asm
	@%p47 st.global.b32 [ %rd47 + 0 ], { %r81 };
	// end inline asm
	// begin inline asm
	@%p48 st.global.b32 [ %rd48 + 0 ], { %r82 };
	// end inline asm
	.loc	1 32 4                          // ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py:32:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/k7/ck7vlwvj6uo6rhbprqxipic7or7w5qjnrigio76pkvaswqwsymli.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 55
.b8 118
.b8 108
.b8 119
.b8 118
.b8 106
.b8 54
.b8 117
.b8 111
.b8 54
.b8 114
.b8 104
.b8 98
.b8 112
.b8 114
.b8 113
.b8 120
.b8 105
.b8 112
.b8 105
.b8 99
.b8 55
.b8 111
.b8 114
.b8 55
.b8 119
.b8 53
.b8 113
.b8 106
.b8 110
.b8 114
.b8 105
.b8 103
.b8 105
.b8 111
.b8 55
.b8 54
.b8 112
.b8 107
.b8 118
.b8 97
.b8 115
.b8 119
.b8 113
.b8 119
.b8 115
.b8 121
.b8 109
.b8 108
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 55
.b8 0
	}
	.section	.debug_macinfo	{	}
