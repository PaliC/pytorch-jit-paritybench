; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_arange_div_floor_divide_mul_pow_0(ptr addrspace(1) %0, i32 %1) local_unnamed_addr !dbg !7 {
  %3 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %4 = shl i32 %3, 8, !dbg !11
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %6 = shl i32 %5, 1, !dbg !12
  %7 = and i32 %6, 254, !dbg !12
  %8 = or disjoint i32 %4, %7, !dbg !13
  %9 = or disjoint i32 %8, 1, !dbg !13
  %10 = sdiv i32 %8, 512, !dbg !14
  %11 = srem i32 %10, 4, !dbg !15
  %12 = srem i32 %8, 128, !dbg !16
  %13 = srem i32 %9, 128, !dbg !16
  %14 = add nsw i32 %11, 1, !dbg !17
  %15 = sitofp i32 %14 to float, !dbg !18
  %16 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %15, float 0x4010000040000000) #4, !dbg !19
  %17 = sitofp i32 %12 to float, !dbg !20
  %18 = sitofp i32 %13 to float, !dbg !20
  %19 = fmul float %17, 5.000000e-01, !dbg !21
  %20 = fmul float %18, 5.000000e-01, !dbg !21
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not.i = icmp eq i32 %21, 0, !dbg !22
  %22 = tail call float @llvm.nvvm.floor.ftz.f(float %19), !dbg !22
  %23 = tail call float @llvm.nvvm.floor.f(float %19), !dbg !22
  %.0.i = select i1 %.not.i, float %23, float %22, !dbg !22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not.i1 = icmp eq i32 %24, 0, !dbg !22
  %25 = tail call float @llvm.nvvm.floor.ftz.f(float %20), !dbg !22
  %26 = tail call float @llvm.nvvm.floor.f(float %20), !dbg !22
  %.0.i2 = select i1 %.not.i1, float %26, float %25, !dbg !22
  %27 = fmul float %.0.i, 2.000000e+00, !dbg !23
  %28 = fmul float %.0.i2, 2.000000e+00, !dbg !23
  %29 = fmul float %27, 7.812500e-03, !dbg !24
  %30 = fmul float %28, 7.812500e-03, !dbg !24
  %31 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %32 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i3 = icmp eq i32 %32, 0, !dbg !25
  %33 = tail call float @llvm.nvvm.fabs.ftz.f(float 1.000000e+04) #4, !dbg !25
  %34 = tail call float @llvm.nvvm.fabs.f(float 1.000000e+04) #4, !dbg !25
  %.09.i = select i1 %.not.i3, float %34, float %33, !dbg !25
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not12.i = icmp eq i32 %35, 0, !dbg !25
  %36 = fcmp olt float %.09.i, 0x3810000000000000, !dbg !25
  %37 = fmul float %.09.i, 0x4170000000000000, !dbg !25
  %38 = select i1 %.not12.i, i1 %36, i1 false, !dbg !25
  %.116.i = select i1 %38, float %37, float %.09.i, !dbg !25
  %expo.i.i.1.i = select i1 %38, float -1.510000e+02, float -1.270000e+02, !dbg !25
  %39 = bitcast float %.116.i to i32, !dbg !25
  %40 = and i32 %39, 8388607, !dbg !25
  %41 = or disjoint i32 %40, 1065353216, !dbg !25
  %42 = bitcast i32 %41 to float, !dbg !25
  %43 = lshr i32 %39, 23, !dbg !25
  %44 = uitofp nneg i32 %43 to float, !dbg !25
  %45 = fadd float %expo.i.i.1.i, %44, !dbg !25
  %46 = fcmp ogt float %42, 0x3FF6A09E60000000, !dbg !25
  %47 = fmul float %42, 5.000000e-01, !dbg !25
  %48 = fadd float %45, 1.000000e+00, !dbg !25
  %expo.i.i.2.i = select i1 %46, float %48, float %45, !dbg !25
  %m.i.i.0.i = select i1 %46, float %47, float %42, !dbg !25
  %49 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !25
  %50 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !25
  %51 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %50) #5, !dbg !25, !srcloc !26
  %52 = fmul float %49, 2.000000e+00, !dbg !25
  %53 = fmul float %51, %52, !dbg !25
  %54 = fmul float %53, %53, !dbg !25
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not13.i = icmp eq i32 %55, 0, !dbg !25
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %54, float 0x3F8995EC60000000) #4, !dbg !25
  %57 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %54, float 0x3F8995EC60000000) #4, !dbg !25
  %.020.i = select i1 %.not13.i, float %57, float %56, !dbg !25
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not14.i = icmp eq i32 %58, 0, !dbg !25
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %54, float 0x3FB55557A0000000) #4, !dbg !25
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %54, float 0x3FB55557A0000000) #4, !dbg !25
  %.021.i = select i1 %.not14.i, float %60, float %59, !dbg !25
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not15.i = icmp eq i32 %61, 0, !dbg !25
  %62 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %54) #4, !dbg !25
  %63 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %54) #4, !dbg !25
  %.022.i = select i1 %.not15.i, float %63, float %62, !dbg !25
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not16.i = icmp eq i32 %64, 0, !dbg !25
  %65 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %53) #4, !dbg !25
  %66 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %53) #4, !dbg !25
  %.024.i = select i1 %.not16.i, float %66, float %65, !dbg !25
  %67 = fsub float %49, %53, !dbg !25
  %68 = fmul float %67, 2.000000e+00, !dbg !25
  %69 = fneg float %53, !dbg !25
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not17.i = icmp eq i32 %70, 0, !dbg !25
  %71 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %69, float %49, float %68) #4, !dbg !25
  %72 = tail call float @llvm.nvvm.fma.rn.f(float %69, float %49, float %68) #4, !dbg !25
  %.025.i = select i1 %.not17.i, float %72, float %71, !dbg !25
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not18.i = icmp eq i32 %73, 0, !dbg !25
  %74 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %51, float %.025.i) #4, !dbg !25
  %75 = tail call float @llvm.nvvm.mul.rn.f(float %51, float %.025.i) #4, !dbg !25
  %.026.i = select i1 %.not18.i, float %75, float %74, !dbg !25
  %76 = fadd float %53, %.024.i, !dbg !25
  %77 = fsub float %53, %76, !dbg !25
  %78 = fadd float %.024.i, %77, !dbg !25
  %79 = fadd float %.026.i, %78, !dbg !25
  %80 = fadd float %76, %79, !dbg !25
  %81 = fsub float %76, %80, !dbg !25
  %82 = fadd float %79, %81, !dbg !25
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not19.i = icmp eq i32 %83, 0, !dbg !25
  %84 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !25
  %85 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !25
  %.019.i = select i1 %.not19.i, float %85, float %84, !dbg !25
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not20.i = icmp eq i32 %86, 0, !dbg !25
  %87 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !25
  %88 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !25
  %.018.i = select i1 %.not20.i, float %88, float %87, !dbg !25
  %89 = fadd float %.019.i, %80, !dbg !25
  %90 = fsub float %.019.i, %89, !dbg !25
  %91 = fadd float %80, %90, !dbg !25
  %92 = fadd float %82, %91, !dbg !25
  %93 = fadd float %.018.i, %92, !dbg !25
  %94 = fadd float %89, %93, !dbg !25
  %95 = fsub float %89, %94, !dbg !25
  %96 = fadd float %93, %95, !dbg !25
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not21.i = icmp eq i32 %97, 0, !dbg !25
  %98 = tail call float @llvm.nvvm.fabs.ftz.f(float %29) #4, !dbg !25
  %99 = tail call float @llvm.nvvm.fabs.f(float %29) #4, !dbg !25
  %.027.i = select i1 %.not21.i, float %99, float %98, !dbg !25
  %100 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !25
  %101 = fmul float %29, 0x3F20000000000000, !dbg !25
  %.013.i = select i1 %100, float %101, float %29, !dbg !25
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not22.i = icmp eq i32 %102, 0, !dbg !25
  %103 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i, float %94) #4, !dbg !25
  %104 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i, float %94) #4, !dbg !25
  %.028.i = select i1 %.not22.i, float %104, float %103, !dbg !25
  %105 = fneg float %.028.i, !dbg !25
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not23.i = icmp eq i32 %106, 0, !dbg !25
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %94, float %105) #4, !dbg !25
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %94, float %105) #4, !dbg !25
  %.029.i = select i1 %.not23.i, float %108, float %107, !dbg !25
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not24.i = icmp eq i32 %109, 0, !dbg !25
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %96, float %.029.i) #4, !dbg !25
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %96, float %.029.i) #4, !dbg !25
  %.030.i = select i1 %.not24.i, float %111, float %110, !dbg !25
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not25.i = icmp eq i32 %112, 0, !dbg !25
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %94, float %.030.i) #4, !dbg !25
  %114 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %94, float %.030.i) #4, !dbg !25
  %.031.i = select i1 %.not25.i, float %114, float %113, !dbg !25
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not26.i = icmp eq i32 %115, 0, !dbg !25
  %116 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #4, !dbg !25
  %117 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #4, !dbg !25
  %.032.i = select i1 %.not26.i, float %117, float %116, !dbg !25
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %120 = bitcast float %.032.i to i32, !dbg !25
  %121 = icmp eq i32 %120, 1118925336, !dbg !25
  %prod.i.145.0.i = select i1 %121, float 0x40562E42E0000000, float %.032.i, !dbg !25
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not29.i = icmp eq i32 %122, 0, !dbg !25
  %123 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !25
  %124 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !25
  %.017.i = select i1 %.not29.i, float %124, float %123, !dbg !25
  %125 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #4, !dbg !25
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not30.i = icmp eq i32 %126, 0, !dbg !25
  %127 = tail call float @llvm.nvvm.fabs.ftz.f(float %125) #4, !dbg !25
  %128 = tail call float @llvm.nvvm.fabs.f(float %125) #4, !dbg !25
  %.023.i = select i1 %.not30.i, float %128, float %127, !dbg !25
  %129 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !25
  %130 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %125), !dbg !25
  %j.i.i.0.i = select i1 %129, float %130, float %125, !dbg !25
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not31.i = icmp eq i32 %131, 0, !dbg !25
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !25
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !25
  %.035.i = select i1 %.not31.i, float %133, float %132, !dbg !25
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not32.i = icmp eq i32 %134, 0, !dbg !25
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !25
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !25
  %.036.i = select i1 %.not32.i, float %136, float %135, !dbg !25
  %137 = fmul float %.036.i, 0x3FF7154760000000, !dbg !25
  %138 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !25
  %139 = bitcast float %138 to i32, !dbg !25
  %140 = shl i32 %139, 23, !dbg !25
  %141 = bitcast i32 %140 to float, !dbg !25
  %142 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %137) #4, !dbg !25
  %143 = fmul float %142, %141, !dbg !25
  %144 = fcmp une float %143, 0x7FF0000000000000, !dbg !25
  br i1 %144, label %__internal_fmad.exit.i.i, label %__internal_powf_corner_cases.exit.i, !dbg !25

__internal_fmad.exit.i.i:                         ; preds = %2
  %.not28.i = icmp eq i32 %119, 0, !dbg !25
  %.not27.i = icmp eq i32 %118, 0, !dbg !25
  %145 = fneg float %.032.i, !dbg !25
  %146 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %145) #4, !dbg !25
  %147 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %145) #4, !dbg !25
  %.033.i = select i1 %.not27.i, float %146, float %147, !dbg !25
  %148 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #4, !dbg !25
  %149 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #4, !dbg !25
  %.034.i = select i1 %.not28.i, float %148, float %149, !dbg !25
  %150 = fadd float %.034.i, 0x3EE0000000000000, !dbg !25
  %prod.i.044.0.i = select i1 %121, float %150, float %.034.i, !dbg !25
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not33.i = icmp eq i32 %151, 0, !dbg !25
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %143, float %prod.i.044.0.i, float %143) #4, !dbg !25
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %143, float %prod.i.044.0.i, float %143) #4, !dbg !25
  %.014.i = select i1 %.not33.i, float %153, float %152, !dbg !25
  br label %__internal_powf_corner_cases.exit.i, !dbg !25

__internal_powf_corner_cases.exit.i:              ; preds = %__internal_fmad.exit.i.i, %2
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %2 ], !dbg !25
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not34.i = icmp eq i32 %154, 0, !dbg !25
  %.01.i = select i1 %.not34.i, float %34, float %33, !dbg !25
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not35.i = icmp eq i32 %155, 0, !dbg !25
  %.02.i = select i1 %.not35.i, float %99, float %98, !dbg !25
  %156 = fadd float %.01.i, %.02.i, !dbg !25
  %157 = bitcast float %156 to i32, !dbg !25
  %158 = icmp sgt i32 %157, 2139095039, !dbg !25
  br i1 %158, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !25

__nv_isnanf.exit.i.i:                             ; preds = %__internal_powf_corner_cases.exit.i
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not36.i = icmp eq i32 %159, 0, !dbg !25
  %.06.i = select i1 %.not36.i, float %34, float %33, !dbg !25
  %160 = fcmp uno float %.06.i, 0.000000e+00, !dbg !25
  br i1 %160, label %163, label %__nv_isnanf.exit11.i.i, !dbg !25

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not37.i = icmp eq i32 %161, 0, !dbg !25
  %.07.i = select i1 %.not37.i, float %99, float %98, !dbg !25
  %162 = fcmp uno float %.07.i, 0.000000e+00, !dbg !25
  br i1 %162, label %163, label %__nv_isinff.exit8.i.i, !dbg !25

163:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %164 = fadd float %29, 1.000000e+04, !dbg !25
  br label %__nv_powf.exit, !dbg !25

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not38.i = icmp eq i32 %165, 0, !dbg !25
  %.05.i = select i1 %.not38.i, float %99, float %98, !dbg !25
  %166 = fcmp oeq float %.05.i, 0x7FF0000000000000, !dbg !25
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not40.i = icmp eq i32 %167, 0, !dbg !25
  %.04.i = select i1 %.not40.i, float %34, float %33, !dbg !25
  br i1 %166, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !25

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %168 = fcmp ogt float %.04.i, 1.000000e+00, !dbg !25
  %ti.i.0.i = select i1 %168, i32 2139095040, i32 0, !dbg !25
  %169 = fcmp olt float %29, 0.000000e+00, !dbg !25
  %170 = xor i32 %ti.i.0.i, 2139095040, !dbg !25
  %ti.i.1.i = select i1 %169, i32 %170, i32 %ti.i.0.i, !dbg !25
  %171 = bitcast i32 %ti.i.1.i to float, !dbg !25
  br label %__nv_powf.exit, !dbg !25

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %172 = fcmp oeq float %.04.i, 0x7FF0000000000000, !dbg !25
  br i1 %172, label %173, label %__nv_powf.exit, !dbg !25

173:                                              ; preds = %__nv_isinff.exit.i.i
  %174 = fcmp oge float %29, 0.000000e+00, !dbg !25
  %175 = select i1 %174, float 0x7FF0000000000000, float 0.000000e+00, !dbg !25
  br label %__nv_powf.exit, !dbg !25

__nv_powf.exit:                                   ; preds = %__internal_powf_corner_cases.exit.i, %163, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %173
  %.3.i = phi float [ %t.i.0.i, %__internal_powf_corner_cases.exit.i ], [ %164, %163 ], [ %171, %__nv_fabsf.exit5.i.i ], [ %175, %173 ], [ %t.i.0.i, %__nv_isinff.exit.i.i ], !dbg !25
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i4 = icmp eq i32 %177, 0, !dbg !25
  %.09.i5 = select i1 %.not.i4, float %34, float %33, !dbg !25
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not12.i6 = icmp eq i32 %178, 0, !dbg !25
  %179 = fcmp olt float %.09.i5, 0x3810000000000000, !dbg !25
  %180 = fmul float %.09.i5, 0x4170000000000000, !dbg !25
  %181 = select i1 %.not12.i6, i1 %179, i1 false, !dbg !25
  %.116.i9 = select i1 %181, float %180, float %.09.i5, !dbg !25
  %expo.i.i.1.i10 = select i1 %181, float -1.510000e+02, float -1.270000e+02, !dbg !25
  %182 = bitcast float %.116.i9 to i32, !dbg !25
  %183 = and i32 %182, 8388607, !dbg !25
  %184 = or disjoint i32 %183, 1065353216, !dbg !25
  %185 = bitcast i32 %184 to float, !dbg !25
  %186 = lshr i32 %182, 23, !dbg !25
  %187 = uitofp nneg i32 %186 to float, !dbg !25
  %188 = fadd float %expo.i.i.1.i10, %187, !dbg !25
  %189 = fcmp ogt float %185, 0x3FF6A09E60000000, !dbg !25
  %190 = fmul float %185, 5.000000e-01, !dbg !25
  %191 = fadd float %188, 1.000000e+00, !dbg !25
  %expo.i.i.2.i11 = select i1 %189, float %191, float %188, !dbg !25
  %m.i.i.0.i12 = select i1 %189, float %190, float %185, !dbg !25
  %192 = fadd float %m.i.i.0.i12, -1.000000e+00, !dbg !25
  %193 = fadd float %m.i.i.0.i12, 1.000000e+00, !dbg !25
  %194 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %193) #5, !dbg !25, !srcloc !26
  %195 = fmul float %192, 2.000000e+00, !dbg !25
  %196 = fmul float %194, %195, !dbg !25
  %197 = fmul float %196, %196, !dbg !25
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not13.i13 = icmp eq i32 %198, 0, !dbg !25
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %197, float 0x3F8995EC60000000) #4, !dbg !25
  %200 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %197, float 0x3F8995EC60000000) #4, !dbg !25
  %.020.i14 = select i1 %.not13.i13, float %200, float %199, !dbg !25
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not14.i15 = icmp eq i32 %201, 0, !dbg !25
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i14, float %197, float 0x3FB55557A0000000) #4, !dbg !25
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i14, float %197, float 0x3FB55557A0000000) #4, !dbg !25
  %.021.i16 = select i1 %.not14.i15, float %203, float %202, !dbg !25
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not15.i17 = icmp eq i32 %204, 0, !dbg !25
  %205 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i16, float %197) #4, !dbg !25
  %206 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i16, float %197) #4, !dbg !25
  %.022.i18 = select i1 %.not15.i17, float %206, float %205, !dbg !25
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not16.i19 = icmp eq i32 %207, 0, !dbg !25
  %208 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i18, float %196) #4, !dbg !25
  %209 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i18, float %196) #4, !dbg !25
  %.024.i20 = select i1 %.not16.i19, float %209, float %208, !dbg !25
  %210 = fsub float %192, %196, !dbg !25
  %211 = fmul float %210, 2.000000e+00, !dbg !25
  %212 = fneg float %196, !dbg !25
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not17.i21 = icmp eq i32 %213, 0, !dbg !25
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %212, float %192, float %211) #4, !dbg !25
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %212, float %192, float %211) #4, !dbg !25
  %.025.i22 = select i1 %.not17.i21, float %215, float %214, !dbg !25
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not18.i23 = icmp eq i32 %216, 0, !dbg !25
  %217 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %194, float %.025.i22) #4, !dbg !25
  %218 = tail call float @llvm.nvvm.mul.rn.f(float %194, float %.025.i22) #4, !dbg !25
  %.026.i24 = select i1 %.not18.i23, float %218, float %217, !dbg !25
  %219 = fadd float %196, %.024.i20, !dbg !25
  %220 = fsub float %196, %219, !dbg !25
  %221 = fadd float %.024.i20, %220, !dbg !25
  %222 = fadd float %.026.i24, %221, !dbg !25
  %223 = fadd float %219, %222, !dbg !25
  %224 = fsub float %219, %223, !dbg !25
  %225 = fadd float %222, %224, !dbg !25
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not19.i25 = icmp eq i32 %226, 0, !dbg !25
  %227 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i11, float 0x3FE62E4000000000) #4, !dbg !25
  %228 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i11, float 0x3FE62E4000000000) #4, !dbg !25
  %.019.i26 = select i1 %.not19.i25, float %228, float %227, !dbg !25
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not20.i27 = icmp eq i32 %229, 0, !dbg !25
  %230 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i11, float 0x3EB7F7D1C0000000) #4, !dbg !25
  %231 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i11, float 0x3EB7F7D1C0000000) #4, !dbg !25
  %.018.i28 = select i1 %.not20.i27, float %231, float %230, !dbg !25
  %232 = fadd float %.019.i26, %223, !dbg !25
  %233 = fsub float %.019.i26, %232, !dbg !25
  %234 = fadd float %223, %233, !dbg !25
  %235 = fadd float %225, %234, !dbg !25
  %236 = fadd float %.018.i28, %235, !dbg !25
  %237 = fadd float %232, %236, !dbg !25
  %238 = fsub float %232, %237, !dbg !25
  %239 = fadd float %236, %238, !dbg !25
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not21.i29 = icmp eq i32 %240, 0, !dbg !25
  %241 = tail call float @llvm.nvvm.fabs.ftz.f(float %30) #4, !dbg !25
  %242 = tail call float @llvm.nvvm.fabs.f(float %30) #4, !dbg !25
  %.027.i30 = select i1 %.not21.i29, float %242, float %241, !dbg !25
  %243 = fcmp ogt float %.027.i30, 0x46FED09BE0000000, !dbg !25
  %244 = fmul float %30, 0x3F20000000000000, !dbg !25
  %.013.i31 = select i1 %243, float %244, float %30, !dbg !25
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not22.i32 = icmp eq i32 %245, 0, !dbg !25
  %246 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i31, float %237) #4, !dbg !25
  %247 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i31, float %237) #4, !dbg !25
  %.028.i33 = select i1 %.not22.i32, float %247, float %246, !dbg !25
  %248 = fneg float %.028.i33, !dbg !25
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not23.i34 = icmp eq i32 %249, 0, !dbg !25
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i31, float %237, float %248) #4, !dbg !25
  %251 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i31, float %237, float %248) #4, !dbg !25
  %.029.i35 = select i1 %.not23.i34, float %251, float %250, !dbg !25
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not24.i36 = icmp eq i32 %252, 0, !dbg !25
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i31, float %239, float %.029.i35) #4, !dbg !25
  %254 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i31, float %239, float %.029.i35) #4, !dbg !25
  %.030.i37 = select i1 %.not24.i36, float %254, float %253, !dbg !25
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not25.i38 = icmp eq i32 %255, 0, !dbg !25
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %237, float %.030.i37) #4, !dbg !25
  %257 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %237, float %.030.i37) #4, !dbg !25
  %.031.i39 = select i1 %.not25.i38, float %257, float %256, !dbg !25
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not26.i40 = icmp eq i32 %258, 0, !dbg !25
  %259 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i33, float %.031.i39) #4, !dbg !25
  %260 = tail call float @llvm.nvvm.add.rn.f(float %.028.i33, float %.031.i39) #4, !dbg !25
  %.032.i41 = select i1 %.not26.i40, float %260, float %259, !dbg !25
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %263 = bitcast float %.032.i41 to i32, !dbg !25
  %264 = icmp eq i32 %263, 1118925336, !dbg !25
  %prod.i.145.0.i47 = select i1 %264, float 0x40562E42E0000000, float %.032.i41, !dbg !25
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not29.i48 = icmp eq i32 %265, 0, !dbg !25
  %266 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i47, float 0x3FF7154760000000) #4, !dbg !25
  %267 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i47, float 0x3FF7154760000000) #4, !dbg !25
  %.017.i49 = select i1 %.not29.i48, float %267, float %266, !dbg !25
  %268 = tail call float @llvm.nvvm.trunc.f(float %.017.i49) #4, !dbg !25
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not30.i50 = icmp eq i32 %269, 0, !dbg !25
  %270 = tail call float @llvm.nvvm.fabs.ftz.f(float %268) #4, !dbg !25
  %271 = tail call float @llvm.nvvm.fabs.f(float %268) #4, !dbg !25
  %.023.i51 = select i1 %.not30.i50, float %271, float %270, !dbg !25
  %272 = fcmp ogt float %.023.i51, 1.260000e+02, !dbg !25
  %273 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %268), !dbg !25
  %j.i.i.0.i52 = select i1 %272, float %273, float %268, !dbg !25
  %274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not31.i53 = icmp eq i32 %274, 0, !dbg !25
  %275 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i52, float 0xBFE62E4300000000, float %prod.i.145.0.i47) #4, !dbg !25
  %276 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i52, float 0xBFE62E4300000000, float %prod.i.145.0.i47) #4, !dbg !25
  %.035.i54 = select i1 %.not31.i53, float %276, float %275, !dbg !25
  %277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not32.i55 = icmp eq i32 %277, 0, !dbg !25
  %278 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i52, float 0x3E205C6100000000, float %.035.i54) #4, !dbg !25
  %279 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i52, float 0x3E205C6100000000, float %.035.i54) #4, !dbg !25
  %.036.i56 = select i1 %.not32.i55, float %279, float %278, !dbg !25
  %280 = fmul float %.036.i56, 0x3FF7154760000000, !dbg !25
  %281 = fadd float %j.i.i.0.i52, 0x4168000FE0000000, !dbg !25
  %282 = bitcast float %281 to i32, !dbg !25
  %283 = shl i32 %282, 23, !dbg !25
  %284 = bitcast i32 %283 to float, !dbg !25
  %285 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %280) #4, !dbg !25
  %286 = fmul float %285, %284, !dbg !25
  %287 = fcmp une float %286, 0x7FF0000000000000, !dbg !25
  br i1 %287, label %__internal_fmad.exit.i.i82, label %__internal_powf_corner_cases.exit.i57, !dbg !25

__internal_fmad.exit.i.i82:                       ; preds = %__nv_powf.exit
  %.not28.i44 = icmp eq i32 %262, 0, !dbg !25
  %.not27.i42 = icmp eq i32 %261, 0, !dbg !25
  %288 = fneg float %.032.i41, !dbg !25
  %289 = tail call float @llvm.nvvm.add.rn.f(float %.028.i33, float %288) #4, !dbg !25
  %290 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i33, float %288) #4, !dbg !25
  %.033.i43 = select i1 %.not27.i42, float %289, float %290, !dbg !25
  %291 = tail call float @llvm.nvvm.add.rn.f(float %.033.i43, float %.031.i39) #4, !dbg !25
  %292 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i43, float %.031.i39) #4, !dbg !25
  %.034.i45 = select i1 %.not28.i44, float %291, float %292, !dbg !25
  %293 = fadd float %.034.i45, 0x3EE0000000000000, !dbg !25
  %prod.i.044.0.i46 = select i1 %264, float %293, float %.034.i45, !dbg !25
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not33.i83 = icmp eq i32 %294, 0, !dbg !25
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %286, float %prod.i.044.0.i46, float %286) #4, !dbg !25
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %286, float %prod.i.044.0.i46, float %286) #4, !dbg !25
  %.014.i84 = select i1 %.not33.i83, float %296, float %295, !dbg !25
  br label %__internal_powf_corner_cases.exit.i57, !dbg !25

__internal_powf_corner_cases.exit.i57:            ; preds = %__internal_fmad.exit.i.i82, %__nv_powf.exit
  %t.i.0.i58 = phi float [ %.014.i84, %__internal_fmad.exit.i.i82 ], [ 0x7FF0000000000000, %__nv_powf.exit ], !dbg !25
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not34.i59 = icmp eq i32 %297, 0, !dbg !25
  %.01.i60 = select i1 %.not34.i59, float %34, float %33, !dbg !25
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not35.i61 = icmp eq i32 %298, 0, !dbg !25
  %.02.i62 = select i1 %.not35.i61, float %242, float %241, !dbg !25
  %299 = fadd float %.01.i60, %.02.i62, !dbg !25
  %300 = bitcast float %299 to i32, !dbg !25
  %301 = icmp sgt i32 %300, 2139095039, !dbg !25
  br i1 %301, label %__nv_isnanf.exit.i.i65, label %__nv_powf.exit85, !dbg !25

__nv_isnanf.exit.i.i65:                           ; preds = %__internal_powf_corner_cases.exit.i57
  %302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not36.i66 = icmp eq i32 %302, 0, !dbg !25
  %.06.i67 = select i1 %.not36.i66, float %34, float %33, !dbg !25
  %303 = fcmp uno float %.06.i67, 0.000000e+00, !dbg !25
  br i1 %303, label %306, label %__nv_isnanf.exit11.i.i68, !dbg !25

__nv_isnanf.exit11.i.i68:                         ; preds = %__nv_isnanf.exit.i.i65
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not37.i69 = icmp eq i32 %304, 0, !dbg !25
  %.07.i70 = select i1 %.not37.i69, float %242, float %241, !dbg !25
  %305 = fcmp uno float %.07.i70, 0.000000e+00, !dbg !25
  br i1 %305, label %306, label %__nv_isinff.exit8.i.i71, !dbg !25

306:                                              ; preds = %__nv_isnanf.exit11.i.i68, %__nv_isnanf.exit.i.i65
  %307 = fadd float %30, 1.000000e+04, !dbg !25
  br label %__nv_powf.exit85, !dbg !25

__nv_isinff.exit8.i.i71:                          ; preds = %__nv_isnanf.exit11.i.i68
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not38.i72 = icmp eq i32 %308, 0, !dbg !25
  %.05.i73 = select i1 %.not38.i72, float %242, float %241, !dbg !25
  %309 = fcmp oeq float %.05.i73, 0x7FF0000000000000, !dbg !25
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not40.i78 = icmp eq i32 %310, 0, !dbg !25
  %.04.i79 = select i1 %.not40.i78, float %34, float %33, !dbg !25
  br i1 %309, label %__nv_fabsf.exit5.i.i77, label %__nv_isinff.exit.i.i74, !dbg !25

__nv_fabsf.exit5.i.i77:                           ; preds = %__nv_isinff.exit8.i.i71
  %311 = fcmp ogt float %.04.i79, 1.000000e+00, !dbg !25
  %ti.i.0.i80 = select i1 %311, i32 2139095040, i32 0, !dbg !25
  %312 = fcmp olt float %30, 0.000000e+00, !dbg !25
  %313 = xor i32 %ti.i.0.i80, 2139095040, !dbg !25
  %ti.i.1.i81 = select i1 %312, i32 %313, i32 %ti.i.0.i80, !dbg !25
  %314 = bitcast i32 %ti.i.1.i81 to float, !dbg !25
  br label %__nv_powf.exit85, !dbg !25

__nv_isinff.exit.i.i74:                           ; preds = %__nv_isinff.exit8.i.i71
  %315 = fcmp oeq float %.04.i79, 0x7FF0000000000000, !dbg !25
  br i1 %315, label %316, label %__nv_powf.exit85, !dbg !25

316:                                              ; preds = %__nv_isinff.exit.i.i74
  %317 = fcmp oge float %30, 0.000000e+00, !dbg !25
  %318 = select i1 %317, float 0x7FF0000000000000, float 0.000000e+00, !dbg !25
  br label %__nv_powf.exit85, !dbg !25

__nv_powf.exit85:                                 ; preds = %__internal_powf_corner_cases.exit.i57, %306, %__nv_fabsf.exit5.i.i77, %__nv_isinff.exit.i.i74, %316
  %.3.i63 = phi float [ %t.i.0.i58, %__internal_powf_corner_cases.exit.i57 ], [ %307, %306 ], [ %314, %__nv_fabsf.exit5.i.i77 ], [ %318, %316 ], [ %t.i.0.i58, %__nv_isinff.exit.i.i74 ], !dbg !25
  %319 = fcmp oeq float %29, 0.000000e+00, !dbg !25
  %t.0.i = select i1 %319, float 1.000000e+00, float %.3.i, !dbg !25
  %320 = fmul float %16, 0x401921FB60000000, !dbg !27
  %321 = fcmp oeq float %30, 0.000000e+00, !dbg !25
  %t.0.i64 = select i1 %321, float 1.000000e+00, float %.3.i63, !dbg !25
  %322 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %320, float %t.0.i) #4, !dbg !28
  %323 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %320, float %t.0.i64) #4, !dbg !28
  %324 = sext i32 %8 to i64, !dbg !29
  %325 = getelementptr float, ptr addrspace(1) %0, i64 %324, !dbg !29
  %326 = bitcast float %322 to i32, !dbg !30
  %327 = bitcast float %323 to i32, !dbg !30
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %326, i32 %327, ptr addrspace(1) %325, i1 true) #4, !dbg !30
  ret void, !dbg !31
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cfhywsehnpgcklbbtzdsctdufnhx5f6pjfqygtklojidgfrntdml.py", directory: "inductor_cache/fh")
!4 = !{ptr @triton_poi_fused_arange_div_floor_divide_mul_pow_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_arange_div_floor_divide_mul_pow_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_arange_div_floor_divide_mul_pow_0", linkageName: "triton_poi_fused_arange_div_floor_divide_mul_pow_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 15, scope: !7)
!18 = !DILocation(line: 28, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 36, column: 19, scope: !7)
!21 = !DILocation(line: 38, column: 19, scope: !7)
!22 = !DILocation(line: 39, column: 28, scope: !7)
!23 = !DILocation(line: 41, column: 20, scope: !7)
!24 = !DILocation(line: 43, column: 20, scope: !7)
!25 = !DILocation(line: 45, column: 33, scope: !7)
!26 = !{i32 21046}
!27 = !DILocation(line: 34, column: 18, scope: !7)
!28 = !DILocation(line: 46, column: 19, scope: !7)
!29 = !DILocation(line: 47, column: 25, scope: !7)
!30 = !DILocation(line: 47, column: 37, scope: !7)
!31 = !DILocation(line: 47, column: 4, scope: !7)
