//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_9,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_10,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_11
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<71>;
	.reg .f32 	%f<29>;
	.reg .b64 	%rd<46>;
	.loc	1 19 0                          // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_0];
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_1];
$L__tmp0:
	.loc	1 22 28                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:22:33
	shl.b32 	%r29, %r1, 6;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_2];
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_3];
	.loc	1 23 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:23:44
	mov.u32 	%r30, %tid.x;
	shl.b32 	%r31, %r30, 1;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_4];
	and.b32  	%r32, %r31, 62;
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_5];
	.loc	1 23 23                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:23:23
	or.b32  	%r33, %r29, %r32;
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_6];
	.loc	1 24 21                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:24:21
	setp.lt.s32 	%p2, %r33, 512;
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_7];
	ld.param.u64 	%rd26, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_8];
	.loc	1 25 28                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:25:33
	shl.b32 	%r34, %r2, 2;
	ld.param.u64 	%rd27, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_9];
	.loc	1 26 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:26:44
	bfe.u32 	%r35, %r30, 5, 2;
	.loc	1 26 23                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:26:23
	or.b32  	%r36, %r34, %r35;
	.loc	1 27 21                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:27:21
	setp.lt.s32 	%p6, %r36, 4;
	.loc	1 30 19                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:30:19
	shr.s32 	%r38, %r33, 31;
	shr.u32 	%r39, %r38, 25;
	add.s32 	%r40, %r33, %r39;
	shr.s32 	%r41, %r40, 7;
	.loc	1 29 19                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:29:19
	and.b32  	%r42, %r40, -128;
	sub.s32 	%r43, %r33, %r42;
	.loc	1 32 19                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:32:19
	shr.u32 	%r45, %r36, 31;
	add.s32 	%r46, %r36, %r45;
	shr.s32 	%r47, %r46, 1;
	.loc	1 33 19                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:33:19
	and.b32  	%r48, %r46, -2;
	sub.s32 	%r49, %r36, %r48;
	.loc	1 34 39                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:39
	shl.b32 	%r50, %r36, 7;
	.loc	1 34 35                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:35
	add.s32 	%r51, %r50, %r43;
	.loc	1 34 48                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:48
	shl.b32 	%r52, %r41, 9;
	.loc	1 34 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:44
	add.s32 	%r53, %r51, %r52;
	.loc	1 34 30                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:30
	cvt.s64.s32 	%rd28, %r53;
	mul.wide.s32 	%rd29, %r53, 4;
	add.s64 	%rd1, %rd18, %rd29;
	.loc	1 34 61                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:61
	and.pred  	%p1, %p2, %p6;
	.loc	1 34 53                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:53
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 35 30                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:35:30
	mul.wide.s32 	%rd30, %r43, 4;
	add.s64 	%rd2, %rd19, %rd30;
	.loc	1 35 35                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:35:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 36 30                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:36:30
	add.s64 	%rd3, %rd20, %rd30;
	.loc	1 36 35                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:36:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r7, %r8 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r7;
	mov.b32 	%f2, %r8;
	.loc	1 37 31                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:37:31
	add.s64 	%rd4, %rd21, %rd30;
	.loc	1 37 36                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:37:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 38 31                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:38:31
	add.s64 	%rd5, %rd22, %rd30;
	.loc	1 38 36                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:38:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 39 31                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:39:31
	mul.wide.s32 	%rd31, %r47, 8;
	add.s64 	%rd7, %rd23, %rd31;
	.loc	1 39 36                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:39:36
	// begin inline asm
	mov.u64 %rd6, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd6 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd8, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd8 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 40 31                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:40:31
	mul.wide.s32 	%rd32, %r49, 8;
	add.s64 	%rd11, %rd23, %rd32;
	.loc	1 40 36                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:40:36
	// begin inline asm
	mov.u64 %rd10, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd10 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd12, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd12 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 43 18                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:43:18
	add.f32 	%f3, %f1, 0f3727C5AC;
	add.f32 	%f4, %f2, 0f3727C5AC;
	.loc	1 44 26                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:44:26
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 23 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:23:44
	and.b32  	%r54, %r31, 2;
	.loc	1 26 23                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:26:23
	or.b32  	%r55, %r34, %r54;
	.loc	1 27 21                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:27:21
	setp.lt.s32 	%p16, %r55, 4;
	.loc	1 23 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:23:44
	bfe.u32 	%r56, %r30, 1, 6;
	.loc	1 23 23                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:23:23
	or.b32  	%r57, %r29, %r56;
	.loc	1 24 21                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:24:21
	setp.lt.s32 	%p17, %r57, 512;
	.loc	1 34 61                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:61
	and.pred  	%p13, %p17, %p16;
	.loc	1 46 18                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:46:18
	mov.b32 	%r15, %f5;
	mov.b32 	%r14, 1065353216;
	// begin inline asm
	div.full.f32 %r13, %r14, %r15;
	// end inline asm
	mov.b32 	%f7, %r13;
	mov.b32 	%r18, %f6;
	// begin inline asm
	div.full.f32 %r16, %r14, %r18;
	// end inline asm
	mov.b32 	%f8, %r16;
	.loc	1 57 35                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:57:35
	shr.u64 	%rd33, %rd8, 57;
	and.b64  	%rd34, %rd33, 64;
	add.s64 	%rd35, %rd34, %rd8;
	.loc	1 60 35                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:60:35
	shr.u64 	%rd36, %rd12, 57;
	and.b64  	%rd37, %rd36, 64;
	add.s64 	%rd38, %rd37, %rd12;
	.loc	1 61 68                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:61:68
	shl.b32 	%r58, %r41, 19;
	.loc	1 61 31                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:61:31
	shl.b64 	%rd39, %rd38, 9;
	add.s64 	%rd40, %rd24, %rd39;
	add.s64 	%rd41, %rd40, %rd30;
	shl.b64 	%rd42, %rd35, 15;
	add.s64 	%rd43, %rd41, %rd42;
	mul.wide.s32 	%rd44, %r58, 4;
	add.s64 	%rd14, %rd43, %rd44;
	.loc	1 61 73                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:61:73
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p1 ld.global.v2.b32 { %r19, %r20 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r19;
	mov.b32 	%f10, %r20;
	.loc	1 65 32                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:65:32
	shl.b32 	%r59, %r57, 2;
	.loc	1 65 30                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:65:30
	add.s32 	%r60, %r55, %r59;
	.loc	1 65 25                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:65:25
	mul.wide.s32 	%rd45, %r60, 4;
	add.s64 	%rd15, %rd25, %rd45;
	.loc	1 65 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:65:44
	shl.b32 	%r61, %r30, 3;
	and.b32  	%r62, %r61, 248;
	or.b32  	%r63, %r62, %r35;
	mov.u32 	%r64, global_smem;
	add.s32 	%r65, %r64, %r62;
	shl.b32 	%r66, %r63, 2;
	add.s32 	%r21, %r65, %r66;
	add.s32 	%r23, %r21, 20;
	and.b32  	%r67, %r31, 252;
	add.s32 	%r68, %r64, %r67;
	and.b32  	%r69, %r61, 1016;
	add.s32 	%r70, %r68, %r69;
	.loc	1 66 25                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:66:25
	add.s64 	%rd16, %rd26, %rd29;
	.loc	1 67 25                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:67:25
	add.s64 	%rd17, %rd27, %rd28;
	.loc	1 34 53                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:53
	mov.b32 	%f11, %r3;
	mov.b32 	%f12, %r4;
	.loc	1 35 35                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:35:35
	mov.b32 	%f13, %r5;
	mov.b32 	%f14, %r6;
	.loc	1 41 18                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:41:18
	sub.f32 	%f15, %f12, %f14;
	sub.f32 	%f16, %f11, %f13;
	.loc	1 38 36                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:38:36
	mov.b32 	%f17, %r11;
	mov.b32 	%f18, %r12;
	.loc	1 37 36                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:37:36
	mov.b32 	%f19, %r9;
	mov.b32 	%f20, %r10;
	.loc	1 49 19                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:49:19
	mul.f32 	%f21, %f16, %f7;
	mul.f32 	%f22, %f15, %f8;
	.loc	1 51 20                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:51:20
	fma.rn.f32 	%f23, %f22, %f20, %f18;
	fma.rn.f32 	%f24, %f21, %f19, %f17;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p18, %f24, 0f00000000;
	setp.lt.f32 	%p19, %f23, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f25, 0f00000000, %f23, %p19;
	mov.b32 	%r24, %f25;
	selp.f32 	%f26, 0f00000000, %f24, %p18;
$L__tmp2:
	.loc	1 62 20                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:62:20
	add.f32 	%f27, %f26, %f9;
	add.f32 	%f28, %f25, %f10;
	.loc	1 64 21                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:64:21
	setp.le.f32 	%p20, %f25, 0f00000000;
	setp.le.f32 	%p21, %f26, 0f00000000;
$L__tmp3:
	.loc	2 121 29                        // triton_helpers.py:121:29
	mov.b32 	%r22, %f26;
	mov.pred 	%p11, -1;
$L__tmp4:
	.loc	1 65 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:65:44
	// begin inline asm
	@%p11 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	// begin inline asm
	@%p11 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r25, [%r70];
	ld.shared.u32 	%r26, [%r70+4];
	// begin inline asm
	@%p13 st.global.v2.b32 [ %rd15 + 0 ], { %r25, %r26 };
	// end inline asm
	.loc	1 66 55                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:66:55
	mov.b32 	%r27, %f27;
	mov.b32 	%r28, %f28;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd16 + 0 ], { %r27, %r28 };
	// end inline asm
	.loc	1 67 55                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:67:55
	selp.u16 	%rs2, 1, 0, %p21;
	selp.u16 	%rs3, 1, 0, %p20;
	shl.b16 	%rs4, %rs3, 8;
	or.b16  	%rs1, %rs2, %rs4;
	// begin inline asm
	@%p1 st.global.b16 [ %rd17 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 67 4                          // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:67:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/it/citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 243                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xec DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 116
.b8 100
.b8 53
.b8 121
.b8 103
.b8 55
.b8 101
.b8 106
.b8 107
.b8 52
.b8 53
.b8 97
.b8 112
.b8 102
.b8 98
.b8 120
.b8 55
.b8 105
.b8 103
.b8 107
.b8 107
.b8 117
.b8 108
.b8 97
.b8 120
.b8 55
.b8 114
.b8 120
.b8 103
.b8 103
.b8 99
.b8 117
.b8 109
.b8 108
.b8 112
.b8 97
.b8 98
.b8 100
.b8 109
.b8 104
.b8 120
.b8 53
.b8 100
.b8 101
.b8 108
.b8 100
.b8 106
.b8 108
.b8 120
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x65 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 49
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc8:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xdd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
