//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_9,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_10,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_11
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<73>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<230>;
	.reg .f32 	%f<79>;
	.reg .b64 	%rd<82>;
	.loc	1 19 0                          // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd46, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_0];
	ld.param.u64 	%rd47, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_1];
$L__tmp0:
	.loc	1 22 28                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:22:33
	shl.b32 	%r103, %r1, 8;
	ld.param.u64 	%rd48, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_2];
	ld.param.u64 	%rd49, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_3];
	.loc	1 23 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:23:44
	mov.u32 	%r104, %tid.x;
	shl.b32 	%r105, %r104, 3;
	ld.param.u64 	%rd50, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_4];
	and.b32  	%r106, %r105, 248;
	ld.param.u64 	%rd51, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_5];
	shl.b32 	%r107, %r104, 1;
	ld.param.u64 	%rd52, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_6];
	and.b32  	%r108, %r107, 254;
	ld.param.u64 	%rd53, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_7];
	.loc	1 23 23                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:23:23
	or.b32  	%r109, %r103, %r106;
	ld.param.u64 	%rd54, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_8];
	or.b32  	%r110, %r109, 4;
	ld.param.u64 	%rd55, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_threshold_backward_11_param_9];
	or.b32  	%r111, %r103, %r108;
	.loc	1 24 21                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:24:21
	setp.lt.s32 	%p50, %r109, 512;
	setp.lt.s32 	%p5, %r111, 512;
	.loc	1 25 28                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:25:33
	shl.b32 	%r112, %r2, 2;
	.loc	1 26 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:26:44
	bfe.u32 	%r113, %r104, 5, 2;
	.loc	1 26 23                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:26:23
	or.b32  	%r114, %r112, %r113;
	.loc	1 27 21                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:27:21
	setp.lt.s32 	%p9, %r114, 4;
	.loc	1 30 19                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:30:19
	shr.s32 	%r116, %r109, 31;
	shr.u32 	%r117, %r116, 25;
	add.s32 	%r118, %r109, %r117;
	shr.s32 	%r119, %r118, 7;
	.loc	1 29 19                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:29:19
	and.b32  	%r120, %r118, -128;
	sub.s32 	%r121, %r109, %r120;
	bfe.s32 	%r122, %r1, 23, 1;
	shr.u32 	%r123, %r122, 25;
	add.s32 	%r124, %r110, %r123;
	and.b32  	%r125, %r124, -128;
	sub.s32 	%r126, %r110, %r125;
	add.s32 	%r127, %r111, %r123;
	and.b32  	%r128, %r127, -128;
	sub.s32 	%r129, %r111, %r128;
	.loc	1 32 19                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:32:19
	shr.u32 	%r131, %r114, 31;
	add.s32 	%r132, %r114, %r131;
	shr.s32 	%r133, %r132, 1;
	.loc	1 33 19                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:33:19
	and.b32  	%r134, %r132, -2;
	sub.s32 	%r135, %r114, %r134;
	.loc	1 34 39                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:39
	shl.b32 	%r136, %r114, 7;
	.loc	1 34 48                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:48
	shl.b32 	%r137, %r119, 9;
	.loc	1 34 35                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:35
	add.s32 	%r138, %r137, %r136;
	.loc	1 34 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:44
	add.s32 	%r139, %r138, %r121;
	add.s32 	%r140, %r138, %r126;
	.loc	1 34 30                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:30
	cvt.s64.s32 	%rd56, %r139;
	mul.wide.s32 	%rd57, %r139, 4;
	add.s64 	%rd1, %rd46, %rd57;
	mul.wide.s32 	%rd58, %r140, 4;
	add.s64 	%rd2, %rd46, %rd58;
	.loc	1 34 61                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:61
	and.pred  	%p1, %p50, %p9;
	.loc	1 34 53                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:53
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r13, %r14, %r15 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd2 + 0 ];
	// end inline asm
	and.b32  	%r141, %r105, 1016;
	shr.u32 	%r142, %r104, 2;
	and.b32  	%r143, %r142, 24;
	add.s32 	%r144, %r143, %r141;
	shl.b32 	%r145, %r144, 2;
	mov.u32 	%r146, global_smem;
	add.s32 	%r11, %r146, %r145;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.v4.b32 [ %r11 + 0 ], { %r12, %r13, %r14, %r15 };
	// end inline asm
	add.s32 	%r16, %r11, 16;
	// begin inline asm
	@%p3 st.shared.v4.b32 [ %r16 + 0 ], { %r17, %r18, %r19, %r20 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r147, %r108, 2;
	add.s32 	%r35, %r146, %r147;
	ld.shared.v2.f32 	{%f1, %f2}, [%r35];
	add.s32 	%r38, %r35, 1056;
	ld.shared.v2.f32 	{%f3, %f4}, [%r35+1056];
	add.s32 	%r41, %r35, 2112;
	ld.shared.v2.f32 	{%f5, %f6}, [%r35+2112];
	add.s32 	%r44, %r35, 3168;
	ld.shared.v2.f32 	{%f7, %f8}, [%r35+3168];
	.loc	1 35 30                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:35:30
	mul.wide.s32 	%rd59, %r129, 4;
	add.s64 	%rd3, %rd47, %rd59;
	.loc	1 35 35                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:35:35
	// begin inline asm
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r21, %r22 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 36 30                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:36:30
	add.s64 	%rd4, %rd48, %rd59;
	.loc	1 36 35                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:36:35
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r23, %r24 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r23;
	mov.b32 	%f10, %r24;
	.loc	1 37 31                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:37:31
	add.s64 	%rd5, %rd49, %rd59;
	.loc	1 37 36                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:37:36
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r25, %r26 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 38 31                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:38:31
	add.s64 	%rd6, %rd50, %rd59;
	.loc	1 38 36                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:38:36
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r27, %r28 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 39 31                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:39:31
	mul.wide.s32 	%rd60, %r133, 8;
	add.s64 	%rd8, %rd51, %rd60;
	.loc	1 39 36                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:39:36
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd9, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd9 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd11 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 40 31                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:40:31
	mul.wide.s32 	%rd61, %r135, 8;
	add.s64 	%rd24, %rd51, %rd61;
	.loc	1 40 36                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:40:36
	// begin inline asm
	mov.u64 %rd23, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd23 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd25 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd27, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd27 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd29 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd31, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd31 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd33, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd33 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd35, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd35 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd37, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd37 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 43 18                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:43:18
	add.f32 	%f11, %f9, 0f3727C5AC;
	add.f32 	%f12, %f10, 0f3727C5AC;
	.loc	1 44 26                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:44:26
	sqrt.approx.ftz.f32 	%f13, %f11;
	sqrt.approx.ftz.f32 	%f14, %f12;
	.loc	1 26 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:26:44
	bfe.u32 	%r148, %r104, 6, 1;
	.loc	1 26 23                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:26:23
	or.b32  	%r149, %r148, %r112;
	or.b32  	%r150, %r149, 2;
	.loc	1 27 21                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:27:21
	setp.lt.s32 	%p51, %r150, 4;
	.loc	1 23 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:23:44
	shl.b32 	%r151, %r104, 2;
	and.b32  	%r152, %r151, 252;
	.loc	1 23 23                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:23:23
	or.b32  	%r153, %r103, %r152;
	.loc	1 24 21                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:24:21
	setp.lt.s32 	%p52, %r153, 512;
	.loc	1 34 61                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:61
	and.pred  	%p44, %p52, %p51;
	.loc	1 27 21                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:27:21
	setp.lt.s32 	%p53, %r149, 4;
	.loc	1 34 61                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:61
	and.pred  	%p43, %p52, %p53;
	.loc	1 27 21                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:27:21
	setp.lt.s32 	%p54, %r112, 4;
	.loc	1 23 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:23:44
	and.b32  	%r154, %r104, 127;
	.loc	1 23 23                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:23:23
	or.b32  	%r155, %r154, %r103;
	or.b32  	%r156, %r155, 128;
	.loc	1 24 21                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:24:21
	setp.lt.s32 	%p55, %r156, 512;
	.loc	1 34 61                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:61
	and.pred  	%p40, %p54, %p55;
	.loc	1 24 21                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:24:21
	setp.lt.s32 	%p56, %r155, 512;
	.loc	1 34 61                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:61
	and.pred  	%p39, %p54, %p56;
	.loc	1 30 19                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:30:19
	shr.s32 	%r158, %r153, 31;
	shr.u32 	%r159, %r158, 25;
	add.s32 	%r160, %r153, %r159;
	.loc	1 29 19                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:29:19
	and.b32  	%r161, %r160, -128;
	sub.s32 	%r162, %r153, %r161;
	.loc	1 34 39                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:39
	shl.b32 	%r163, %r150, 7;
	.loc	1 34 48                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:48
	shl.b32 	%r164, %r160, 2;
	and.b32  	%r165, %r164, -512;
	.loc	1 34 35                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:35
	add.s32 	%r166, %r165, %r162;
	.loc	1 34 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:44
	add.s32 	%r167, %r166, %r163;
	.loc	1 34 39                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:39
	shl.b32 	%r168, %r149, 7;
	.loc	1 34 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:34:44
	add.s32 	%r169, %r166, %r168;
	.loc	1 46 18                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:46:18
	mov.b32 	%r31, %f13;
	mov.b32 	%r30, 1065353216;
	// begin inline asm
	div.full.f32 %r29, %r30, %r31;
	// end inline asm
	mov.b32 	%f15, %r29;
	mov.b32 	%r34, %f14;
	// begin inline asm
	div.full.f32 %r32, %r30, %r34;
	// end inline asm
	mov.b32 	%f16, %r32;
	.loc	1 35 35                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:35:35
	mov.b32 	%f17, %r21;
	mov.b32 	%f18, %r22;
	.loc	1 41 18                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:41:18
	sub.f32 	%f19, %f2, %f18;
	sub.f32 	%f20, %f1, %f17;
	sub.f32 	%f21, %f4, %f18;
	sub.f32 	%f22, %f3, %f17;
	sub.f32 	%f23, %f6, %f18;
	sub.f32 	%f24, %f5, %f17;
	sub.f32 	%f25, %f8, %f18;
	sub.f32 	%f26, %f7, %f17;
	.loc	1 38 36                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:38:36
	mov.b32 	%f27, %r27;
	mov.b32 	%f28, %r28;
	.loc	1 37 36                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:37:36
	mov.b32 	%f29, %r25;
	mov.b32 	%f30, %r26;
	.loc	1 49 19                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:49:19
	mul.f32 	%f31, %f26, %f15;
	mul.f32 	%f32, %f25, %f16;
	mul.f32 	%f33, %f24, %f15;
	mul.f32 	%f34, %f23, %f16;
	mul.f32 	%f35, %f22, %f15;
	mul.f32 	%f36, %f21, %f16;
	mul.f32 	%f37, %f20, %f15;
	mul.f32 	%f38, %f19, %f16;
	.loc	1 51 20                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:51:20
	fma.rn.f32 	%f39, %f38, %f30, %f28;
	fma.rn.f32 	%f40, %f37, %f29, %f27;
	fma.rn.f32 	%f41, %f36, %f30, %f28;
	fma.rn.f32 	%f42, %f35, %f29, %f27;
	fma.rn.f32 	%f43, %f34, %f30, %f28;
	fma.rn.f32 	%f44, %f33, %f29, %f27;
	fma.rn.f32 	%f45, %f32, %f30, %f28;
	fma.rn.f32 	%f46, %f31, %f29, %f27;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p57, %f46, 0f00000000;
	setp.lt.f32 	%p58, %f45, 0f00000000;
	setp.lt.f32 	%p59, %f44, 0f00000000;
	setp.lt.f32 	%p60, %f43, 0f00000000;
	setp.lt.f32 	%p61, %f42, 0f00000000;
	setp.lt.f32 	%p62, %f41, 0f00000000;
	setp.lt.f32 	%p63, %f40, 0f00000000;
	setp.lt.f32 	%p64, %f39, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	bar.sync 	0;
$L__tmp2:
	.loc	1 57 35                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:57:35
	shr.u64 	%rd62, %rd21, 57;
	and.b64  	%rd63, %rd62, 64;
	add.s64 	%rd64, %rd63, %rd21;
	.loc	1 60 35                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:60:35
	shr.u64 	%rd65, %rd37, 57;
	and.b64  	%rd66, %rd65, 64;
	add.s64 	%rd67, %rd66, %rd37;
	.loc	1 61 68                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:61:68
	shl.b32 	%r170, %r119, 19;
	.loc	1 61 31                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:61:31
	shl.b64 	%rd68, %rd67, 9;
	add.s64 	%rd69, %rd52, %rd68;
	mul.wide.s32 	%rd70, %r121, 4;
	add.s64 	%rd71, %rd69, %rd70;
	shl.b64 	%rd72, %rd64, 15;
	add.s64 	%rd73, %rd71, %rd72;
	mul.wide.s32 	%rd74, %r170, 4;
	add.s64 	%rd39, %rd73, %rd74;
	mul.wide.s32 	%rd75, %r126, 4;
	add.s64 	%rd76, %rd69, %rd75;
	add.s64 	%rd77, %rd76, %rd72;
	add.s64 	%rd40, %rd77, %rd74;
$L__tmp3:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f47, 0f00000000, %f39, %p64;
	selp.f32 	%f48, 0f00000000, %f40, %p63;
	selp.f32 	%f49, 0f00000000, %f41, %p62;
	selp.f32 	%f50, 0f00000000, %f42, %p61;
	selp.f32 	%f51, 0f00000000, %f43, %p60;
	selp.f32 	%f52, 0f00000000, %f44, %p59;
	selp.f32 	%f53, 0f00000000, %f45, %p58;
	selp.f32 	%f54, 0f00000000, %f46, %p57;
	mov.b32 	%r45, %f54;
	mov.b32 	%r46, %f53;
	mov.b32 	%r42, %f52;
	mov.b32 	%r43, %f51;
	mov.b32 	%r39, %f50;
	mov.b32 	%r40, %f49;
	mov.b32 	%r36, %f48;
	mov.b32 	%r37, %f47;
	// begin inline asm
	@%p3 st.shared.v2.b32 [ %r35 + 0 ], { %r36, %r37 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b32 [ %r38 + 0 ], { %r39, %r40 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b32 [ %r41 + 0 ], { %r42, %r43 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v2.b32 [ %r44 + 0 ], { %r45, %r46 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.f32 	{%f55, %f56, %f57, %f58}, [%r11];
	ld.shared.v4.f32 	{%f59, %f60, %f61, %f62}, [%r11+16];
$L__tmp4:
	.loc	1 61 73                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:61:73
	// begin inline asm
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	@%p1 ld.global.v4.b32 { %r47, %r48, %r49, %r50 }, [ %rd39 + 0 ];
	// end inline asm
	mov.b32 	%f63, %r47;
	mov.b32 	%f64, %r48;
	mov.b32 	%f65, %r49;
	mov.b32 	%f66, %r50;
	// begin inline asm
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	mov.u32 %r54, 0x0;
	@%p1 ld.global.v4.b32 { %r51, %r52, %r53, %r54 }, [ %rd40 + 0 ];
	// end inline asm
	mov.b32 	%f67, %r51;
	mov.b32 	%f68, %r52;
	mov.b32 	%f69, %r53;
	mov.b32 	%f70, %r54;
	.loc	1 62 20                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:62:20
	add.f32 	%f71, %f55, %f63;
	add.f32 	%f72, %f56, %f64;
	add.f32 	%f73, %f57, %f65;
	add.f32 	%f74, %f58, %f66;
	add.f32 	%f75, %f59, %f67;
	add.f32 	%f76, %f60, %f68;
	add.f32 	%f77, %f61, %f69;
	add.f32 	%f78, %f62, %f70;
	.loc	1 64 21                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:64:21
	setp.le.f32 	%p65, %f53, 0f00000000;
	setp.le.f32 	%p66, %f54, 0f00000000;
	setp.le.f32 	%p67, %f51, 0f00000000;
	setp.le.f32 	%p68, %f52, 0f00000000;
	setp.le.f32 	%p69, %f49, 0f00000000;
	setp.le.f32 	%p70, %f50, 0f00000000;
	setp.le.f32 	%p71, %f47, 0f00000000;
	setp.le.f32 	%p72, %f48, 0f00000000;
	.loc	1 65 30                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:65:30
	add.s32 	%r171, %r155, %r2;
	shl.b32 	%r172, %r171, 2;
	add.s32 	%r173, %r156, %r2;
	shl.b32 	%r174, %r173, 2;
	.loc	1 65 25                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:65:25
	mul.wide.s32 	%rd78, %r172, 4;
	add.s64 	%rd41, %rd53, %rd78;
	mul.wide.s32 	%rd79, %r174, 4;
	add.s64 	%rd42, %rd53, %rd79;
	.loc	1 65 44                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:65:44
	bar.sync 	0;
	and.b32  	%r175, %r151, 508;
	shl.b32 	%r176, %r141, 2;
	add.s32 	%r55, %r35, %r176;
	// begin inline asm
	@%p3 st.shared.b32 [ %r55 + 0 ], %r36;
	// end inline asm
	or.b32  	%r177, %r141, 4;
	shr.u32 	%r178, %r177, 2;
	add.s32 	%r179, %r178, %r141;
	shl.b32 	%r180, %r179, 2;
	add.s32 	%r181, %r146, %r180;
	add.s32 	%r57, %r181, 16;
	// begin inline asm
	@%p3 st.shared.b32 [ %r57 + 0 ], %r37;
	// end inline asm
	add.s32 	%r59, %r55, 4;
	// begin inline asm
	@%p3 st.shared.b32 [ %r59 + 0 ], %r39;
	// end inline asm
	add.s32 	%r61, %r181, 20;
	// begin inline asm
	@%p3 st.shared.b32 [ %r61 + 0 ], %r40;
	// end inline asm
	add.s32 	%r63, %r55, 8;
	// begin inline asm
	@%p3 st.shared.b32 [ %r63 + 0 ], %r42;
	// end inline asm
	add.s32 	%r65, %r181, 24;
	// begin inline asm
	@%p3 st.shared.b32 [ %r65 + 0 ], %r43;
	// end inline asm
	add.s32 	%r67, %r55, 12;
	// begin inline asm
	@%p3 st.shared.b32 [ %r67 + 0 ], %r45;
	// end inline asm
	add.s32 	%r69, %r181, 28;
	// begin inline asm
	@%p3 st.shared.b32 [ %r69 + 0 ], %r46;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r182, %r151, 2, 7;
	add.s32 	%r183, %r182, %r175;
	shl.b32 	%r184, %r183, 2;
	add.s32 	%r185, %r146, %r184;
	ld.shared.u32 	%r71, [%r185];
	ld.shared.u32 	%r72, [%r185+4];
	ld.shared.u32 	%r73, [%r185+8];
	ld.shared.u32 	%r74, [%r185+12];
	or.b32  	%r186, %r175, 512;
	shr.u32 	%r187, %r186, 2;
	add.s32 	%r188, %r187, %r175;
	shl.b32 	%r189, %r188, 2;
	add.s32 	%r190, %r146, %r189;
	ld.shared.u32 	%r75, [%r190+2048];
	ld.shared.u32 	%r76, [%r190+2052];
	ld.shared.u32 	%r77, [%r190+2056];
	ld.shared.u32 	%r78, [%r190+2060];
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd41 + 0 ], { %r71, %r72, %r73, %r74 };
	// end inline asm
	// begin inline asm
	@%p40 st.global.v4.b32 [ %rd42 + 0 ], { %r75, %r76, %r77, %r78 };
	// end inline asm
	.loc	1 66 25                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:66:25
	mul.wide.s32 	%rd80, %r169, 4;
	add.s64 	%rd43, %rd54, %rd80;
	mul.wide.s32 	%rd81, %r167, 4;
	add.s64 	%rd44, %rd54, %rd81;
	.loc	1 66 55                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:66:55
	bar.sync 	0;
	mov.b32 	%r80, %f71;
	mov.b32 	%r81, %f72;
	mov.b32 	%r82, %f73;
	mov.b32 	%r83, %f74;
	mov.b32 	%r85, %f75;
	mov.b32 	%r86, %f76;
	mov.b32 	%r87, %f77;
	mov.b32 	%r88, %f78;
	// begin inline asm
	@%p3 st.shared.v4.b32 [ %r11 + 0 ], { %r80, %r81, %r82, %r83 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v4.b32 [ %r16 + 0 ], { %r85, %r86, %r87, %r88 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r191, %r104, 3;
	and.b32  	%r192, %r191, 8;
	add.s32 	%r193, %r192, %r175;
	shl.b32 	%r194, %r193, 2;
	add.s32 	%r195, %r146, %r194;
	shr.u32 	%r196, %r186, 5;
	and.b32  	%r197, %r196, 24;
	add.s32 	%r198, %r197, %r175;
	shl.b32 	%r199, %r198, 2;
	add.s32 	%r200, %r146, %r199;
	ld.shared.v4.u32 	{%r93, %r94, %r95, %r96}, [%r200+2048];
	ld.shared.v4.u32 	{%r89, %r90, %r91, %r92}, [%r195];
	// begin inline asm
	@%p43 st.global.v4.b32 [ %rd43 + 0 ], { %r89, %r90, %r91, %r92 };
	// end inline asm
	// begin inline asm
	@%p44 st.global.v4.b32 [ %rd44 + 0 ], { %r93, %r94, %r95, %r96 };
	// end inline asm
	.loc	1 67 25                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:67:25
	add.s64 	%rd45, %rd55, %rd56;
	.loc	1 67 55                         // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:67:55
	bar.sync 	0;
	add.s32 	%r97, %r146, %r108;
	selp.u16 	%rs1, 1, 0, %p72;
	selp.u16 	%rs2, 1, 0, %p71;
	// begin inline asm
	@%p3 st.shared.v2.b8 [ %r97 + 0 ], { %rs1, %rs2 };
	// end inline asm
	add.s32 	%r98, %r97, 264;
	selp.u16 	%rs3, 1, 0, %p70;
	selp.u16 	%rs4, 1, 0, %p69;
	// begin inline asm
	@%p3 st.shared.v2.b8 [ %r98 + 0 ], { %rs3, %rs4 };
	// end inline asm
	add.s32 	%r99, %r97, 528;
	selp.u16 	%rs5, 1, 0, %p68;
	selp.u16 	%rs6, 1, 0, %p67;
	// begin inline asm
	@%p3 st.shared.v2.b8 [ %r99 + 0 ], { %rs5, %rs6 };
	// end inline asm
	add.s32 	%r100, %r97, 792;
	selp.u16 	%rs7, 1, 0, %p66;
	selp.u16 	%rs8, 1, 0, %p65;
	// begin inline asm
	@%p3 st.shared.v2.b8 [ %r100 + 0 ], { %rs7, %rs8 };
	// end inline asm
	bar.sync 	0;
	add.s32 	%r201, %r35, %r143;
	ld.shared.v2.u32 	{%r202, %r203}, [%r201];
	bfe.u32 	%r206, %r202, 0, 8;
	bfe.u32 	%r207, %r202, 16, 8;
	cvt.u16.u32 	%rs9, %r207;
	bfe.u32 	%r208, %r202, 8, 8;
	cvt.u16.u32 	%rs10, %r208;
	mov.b32 	%r209, {%rs10, %rs9};
	and.b32  	%r210, %r209, 65537;
	bfe.u32 	%r211, %r203, 0, 8;
	bfe.u32 	%r212, %r203, 16, 8;
	cvt.u16.u32 	%rs11, %r212;
	bfe.u32 	%r213, %r203, 8, 8;
	cvt.u16.u32 	%rs12, %r213;
	mov.b32 	%r214, {%rs12, %rs11};
	and.b32  	%r215, %r214, 65537;
	mov.b32 	{%rs13, %rs14}, %r210;
	cvt.u32.u16 	%r216, %rs14;
	bfe.u32 	%r217, %r202, 24, 1;
	prmt.b32 	%r218, %r216, %r217, 0x3340U;
	cvt.u32.u16 	%r219, %rs13;
	and.b32  	%r220, %r206, 1;
	prmt.b32 	%r221, %r220, %r219, 0x3340U;
	prmt.b32 	%r222, %r221, %r218, 0x5410U;
	mov.b32 	{%rs15, %rs16}, %r215;
	cvt.u32.u16 	%r223, %rs16;
	bfe.u32 	%r224, %r203, 24, 1;
	prmt.b32 	%r225, %r223, %r224, 0x3340U;
	cvt.u32.u16 	%r226, %rs15;
	and.b32  	%r227, %r211, 1;
	prmt.b32 	%r228, %r227, %r226, 0x3340U;
	prmt.b32 	%r229, %r228, %r225, 0x5410U;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd45 + 0 ], { %r222, %r229 };
	// end inline asm
	.loc	1 67 4                          // citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py:67:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/it/citd5yg7ejk45apfbx7igkkulax7rxggcumlpabdmhx5deldjlxp.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 243                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xec DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 116
.b8 100
.b8 53
.b8 121
.b8 103
.b8 55
.b8 101
.b8 106
.b8 107
.b8 52
.b8 53
.b8 97
.b8 112
.b8 102
.b8 98
.b8 120
.b8 55
.b8 105
.b8 103
.b8 107
.b8 107
.b8 117
.b8 108
.b8 97
.b8 120
.b8 55
.b8 114
.b8 120
.b8 103
.b8 103
.b8 99
.b8 117
.b8 109
.b8 108
.b8 112
.b8 97
.b8 98
.b8 100
.b8 109
.b8 104
.b8 120
.b8 53
.b8 100
.b8 101
.b8 108
.b8 100
.b8 106
.b8 108
.b8 120
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x65 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 49
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc8:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xdd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
