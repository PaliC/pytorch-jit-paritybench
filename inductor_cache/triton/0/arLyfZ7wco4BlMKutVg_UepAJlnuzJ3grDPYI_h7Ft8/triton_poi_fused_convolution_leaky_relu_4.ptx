//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_leaky_relu_4 // -- Begin function triton_poi_fused_convolution_leaky_relu_4
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_leaky_relu_4
.visible .entry triton_poi_fused_convolution_leaky_relu_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_4_param_3,
	.param .u32 triton_poi_fused_convolution_leaky_relu_4_param_4,
	.param .u32 triton_poi_fused_convolution_leaky_relu_4_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<104>;
	.reg .b16 	%rs<45>;
	.reg .b32 	%r<299>;
	.reg .f32 	%f<102>;
	.reg .b64 	%rd<25>;
	.loc	1 19 0                          // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused_convolution_leaky_relu_4_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused_convolution_leaky_relu_4_param_1];
$L__tmp0:
	.loc	1 22 28                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:22:33
	shl.b32 	%r122, %r1, 8;
	ld.param.u64 	%rd13, [triton_poi_fused_convolution_leaky_relu_4_param_2];
	ld.param.u64 	%rd14, [triton_poi_fused_convolution_leaky_relu_4_param_3];
	.loc	1 23 44                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:23:44
	mov.u32 	%r123, %tid.x;
	shr.u32 	%r124, %r123, 2;
	bfe.u32 	%r125, %r123, 2, 6;
	shl.b32 	%r126, %r123, 4;
	and.b32  	%r127, %r126, 240;
	shl.b32 	%r128, %r123, 2;
	and.b32  	%r129, %r128, 12;
	and.b32  	%r130, %r128, 252;
	and.b32  	%r131, %r123, 255;
	.loc	1 23 23                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:23:23
	or.b32  	%r132, %r122, %r125;
	or.b32  	%r133, %r132, 64;
	or.b32  	%r134, %r132, 128;
	or.b32  	%r135, %r132, 192;
	or.b32  	%r136, %r122, %r127;
	or.b32  	%r137, %r122, %r130;
	or.b32  	%r138, %r122, %r131;
	.loc	1 24 21                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:24:21
	setp.lt.s32 	%p60, %r132, 256;
	setp.lt.s32 	%p61, %r133, 256;
	setp.lt.s32 	%p62, %r134, 256;
	setp.lt.s32 	%p63, %r135, 256;
	setp.lt.s32 	%p64, %r136, 256;
	setp.lt.s32 	%p65, %r137, 256;
	setp.lt.s32 	%p37, %r138, 256;
	.loc	1 25 28                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:25:33
	shl.b32 	%r139, %r2, 4;
	.loc	1 26 44                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:26:44
	bfe.u32 	%r140, %r123, 4, 4;
	bfe.u32 	%r141, %r123, 6, 2;
	.loc	1 26 23                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:26:23
	or.b32  	%r142, %r139, %r129;
	or.b32  	%r143, %r139, %r140;
	or.b32  	%r144, %r139, %r141;
	or.b32  	%r145, %r144, 4;
	or.b32  	%r146, %r144, 8;
	or.b32  	%r147, %r144, 12;
	.loc	1 27 21                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:27:21
	setp.lt.s32 	%p66, %r142, 2116;
	setp.lt.s32 	%p67, %r143, 2116;
	setp.lt.s32 	%p68, %r144, 2116;
	setp.lt.s32 	%p69, %r145, 2116;
	setp.lt.s32 	%p70, %r146, 2116;
	setp.lt.s32 	%p71, %r147, 2116;
	.loc	1 31 19                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:31:19
	shr.s32 	%r149, %r136, 31;
	shr.u32 	%r150, %r149, 26;
	add.s32 	%r151, %r136, %r150;
	shr.s32 	%r152, %r151, 6;
	.loc	1 30 19                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:30:19
	and.b32  	%r153, %r151, -64;
	sub.s32 	%r154, %r136, %r153;
	.loc	1 31 19                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:31:19
	shr.s32 	%r156, %r137, 31;
	shr.u32 	%r157, %r156, 26;
	add.s32 	%r158, %r137, %r157;
	shr.s32 	%r159, %r158, 6;
	.loc	1 30 19                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:30:19
	and.b32  	%r160, %r158, -64;
	sub.s32 	%r161, %r137, %r160;
	bfe.s32 	%r162, %r1, 23, 1;
	shr.u32 	%r163, %r162, 26;
	add.s32 	%r164, %r138, %r163;
	and.b32  	%r165, %r164, -64;
	sub.s32 	%r166, %r138, %r165;
	.loc	1 32 35                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:32:35
	mad.lo.s32 	%r167, %r132, 2116, %r142;
	add.s32 	%r168, %r167, 135424;
	add.s32 	%r169, %r167, 270848;
	add.s32 	%r170, %r167, 406272;
	.loc	1 32 30                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:32:30
	mul.wide.s32 	%rd15, %r167, 4;
	add.s64 	%rd1, %rd11, %rd15;
	mul.wide.s32 	%rd16, %r168, 4;
	add.s64 	%rd2, %rd11, %rd16;
	mul.wide.s32 	%rd17, %r169, 4;
	add.s64 	%rd3, %rd11, %rd17;
	mul.wide.s32 	%rd18, %r170, 4;
	add.s64 	%rd4, %rd11, %rd18;
	.loc	1 32 53                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:32:53
	and.pred  	%p1, %p60, %p66;
	and.pred  	%p2, %p61, %p66;
	and.pred  	%p3, %p62, %p66;
	and.pred  	%p4, %p63, %p66;
	and.pred  	%p55, %p64, %p67;
	and.pred  	%p56, %p65, %p68;
	and.pred  	%p57, %p69, %p65;
	and.pred  	%p58, %p70, %p65;
	and.pred  	%p59, %p71, %p65;
	.loc	1 32 45                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:32:45
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r34, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r28, %r30, %r32, %r34 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r42, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r36, %r38, %r40, %r42 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r50, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r44, %r46, %r48, %r50 }, [ %rd4 + 0 ];
	// end inline asm
	shl.b32 	%r171, %r123, 10;
	and.b32  	%r172, %r171, 3072;
	or.b32  	%r173, %r172, %r125;
	and.b32  	%r174, %r128, 1020;
	shr.u32 	%r175, %r172, 4;
	mov.u32 	%r176, global_smem;
	add.s32 	%r177, %r176, %r175;
	shl.b32 	%r178, %r173, 2;
	add.s32 	%r19, %r177, %r178;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r179, %r172, 256;
	shr.u32 	%r180, %r179, 8;
	shl.b32 	%r181, %r180, 4;
	add.s32 	%r182, %r176, %r181;
	add.s32 	%r183, %r182, %r178;
	add.s32 	%r21, %r183, 1024;
	// begin inline asm
	@%p5 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	or.b32  	%r184, %r172, 512;
	shr.u32 	%r185, %r184, 8;
	shl.b32 	%r186, %r185, 4;
	add.s32 	%r187, %r176, %r186;
	add.s32 	%r188, %r187, %r178;
	add.s32 	%r23, %r188, 2048;
	// begin inline asm
	@%p5 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r189, %r172, 768;
	shr.u32 	%r190, %r189, 8;
	shl.b32 	%r191, %r190, 4;
	add.s32 	%r192, %r176, %r191;
	add.s32 	%r193, %r192, %r178;
	add.s32 	%r25, %r193, 3072;
	// begin inline asm
	@%p5 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r19, 256;
	// begin inline asm
	@%p5 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r183, 1280;
	// begin inline asm
	@%p5 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r188, 2304;
	// begin inline asm
	@%p5 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r193, 3328;
	// begin inline asm
	@%p5 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r19, 512;
	// begin inline asm
	@%p5 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r183, 1536;
	// begin inline asm
	@%p5 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r188, 2560;
	// begin inline asm
	@%p5 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r193, 3584;
	// begin inline asm
	@%p5 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r19, 768;
	// begin inline asm
	@%p5 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r183, 1792;
	// begin inline asm
	@%p5 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r188, 2816;
	// begin inline asm
	@%p5 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r193, 3840;
	// begin inline asm
	@%p5 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r194, %r124, 48;
	add.s32 	%r195, %r176, %r194;
	shl.b32 	%r196, %r174, 2;
	add.s32 	%r197, %r195, %r196;
	or.b32  	%r198, %r174, 1024;
	shr.u32 	%r199, %r198, 4;
	and.b32  	%r200, %r199, 112;
	add.s32 	%r201, %r176, %r200;
	add.s32 	%r202, %r201, %r196;
	or.b32  	%r203, %r174, 2048;
	shr.u32 	%r204, %r203, 4;
	and.b32  	%r205, %r204, 176;
	add.s32 	%r206, %r176, %r205;
	add.s32 	%r207, %r206, %r196;
	or.b32  	%r208, %r174, 3072;
	shr.u32 	%r209, %r208, 4;
	and.b32  	%r210, %r209, 240;
	add.s32 	%r211, %r176, %r210;
	add.s32 	%r212, %r211, %r196;
	shr.u32 	%r213, %r172, 6;
	add.s32 	%r214, %r176, %r213;
	add.s32 	%r51, %r214, %r178;
	shl.b32 	%r215, %r180, 2;
	add.s32 	%r216, %r176, %r215;
	add.s32 	%r217, %r216, %r178;
	add.s32 	%r53, %r217, 1024;
	shl.b32 	%r218, %r185, 2;
	add.s32 	%r219, %r176, %r218;
	add.s32 	%r220, %r219, %r178;
	add.s32 	%r55, %r220, 2048;
	shl.b32 	%r221, %r190, 2;
	add.s32 	%r222, %r176, %r221;
	add.s32 	%r223, %r222, %r178;
	add.s32 	%r57, %r223, 3072;
	add.s32 	%r59, %r51, 256;
	add.s32 	%r61, %r217, 1280;
	add.s32 	%r63, %r220, 2304;
	add.s32 	%r65, %r223, 3328;
	add.s32 	%r67, %r51, 512;
	add.s32 	%r69, %r217, 1536;
	add.s32 	%r71, %r220, 2560;
	add.s32 	%r73, %r223, 3584;
	add.s32 	%r75, %r51, 768;
	add.s32 	%r77, %r217, 1792;
	add.s32 	%r79, %r220, 2816;
	add.s32 	%r81, %r223, 3840;
	shl.b32 	%r224, %r131, 2;
	add.s32 	%r84, %r176, %r224;
	.loc	1 33 30                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:33:30
	mul.wide.s32 	%rd19, %r166, 4;
	add.s64 	%rd5, %rd12, %rd19;
	.loc	1 39 32                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:39:32
	shl.b32 	%r225, %r130, 2;
	add.s32 	%r226, %r176, %r225;
	.loc	1 32 45                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:32:45
	ld.shared.v4.f32 	{%f1, %f2, %f3, %f4}, [%r197];
	ld.shared.v4.f32 	{%f5, %f6, %f7, %f8}, [%r202+4096];
	ld.shared.v4.f32 	{%f9, %f10, %f11, %f12}, [%r207+8192];
	ld.shared.v4.f32 	{%f13, %f14, %f15, %f16}, [%r212+12288];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r51 + 0 ], %r20;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r53 + 0 ], %r22;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r55 + 0 ], %r24;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r57 + 0 ], %r26;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r59 + 0 ], %r28;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r61 + 0 ], %r30;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r63 + 0 ], %r32;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r65 + 0 ], %r34;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r67 + 0 ], %r36;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r69 + 0 ], %r38;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r71 + 0 ], %r40;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r73 + 0 ], %r42;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r75 + 0 ], %r44;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r77 + 0 ], %r46;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r79 + 0 ], %r48;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r81 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f17, [%r84];
	ld.shared.f32 	%f18, [%r84+1028];
	ld.shared.f32 	%f19, [%r84+2056];
	ld.shared.f32 	%f20, [%r84+3084];
	ld.shared.f32 	%f21, [%r84+4112];
	ld.shared.f32 	%f22, [%r84+5140];
	ld.shared.f32 	%f23, [%r84+6168];
	ld.shared.f32 	%f24, [%r84+7196];
	ld.shared.f32 	%f25, [%r84+8224];
	ld.shared.f32 	%f26, [%r84+9252];
	ld.shared.f32 	%f27, [%r84+10280];
	ld.shared.f32 	%f28, [%r84+11308];
	ld.shared.f32 	%f29, [%r84+12336];
	ld.shared.f32 	%f30, [%r84+13364];
	ld.shared.f32 	%f31, [%r84+14392];
	ld.shared.f32 	%f32, [%r84+15420];
	.loc	1 33 35                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:33:35
	// begin inline asm
	mov.u32 %r85, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r85 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 39 32                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:39:32
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r84 + 0 ], %r85;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.f32 	{%f33, %f34, %f35, %f36}, [%r226];
	.loc	1 34 18                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:34:18
	mov.b32 	%f37, %r85;
	add.f32 	%f38, %f1, %f33;
	add.f32 	%f39, %f2, %f34;
	add.f32 	%f40, %f3, %f35;
	add.f32 	%f41, %f4, %f36;
	add.f32 	%f42, %f5, %f33;
	add.f32 	%f43, %f6, %f34;
	add.f32 	%f44, %f7, %f35;
	add.f32 	%f45, %f8, %f36;
	add.f32 	%f46, %f9, %f33;
	add.f32 	%f47, %f10, %f34;
	add.f32 	%f48, %f11, %f35;
	add.f32 	%f49, %f12, %f36;
	add.f32 	%f50, %f13, %f33;
	add.f32 	%f51, %f14, %f34;
	add.f32 	%f52, %f15, %f35;
	add.f32 	%f53, %f16, %f36;
	add.f32 	%f54, %f17, %f37;
	add.f32 	%f55, %f18, %f37;
	add.f32 	%f56, %f21, %f37;
	add.f32 	%f57, %f22, %f37;
	add.f32 	%f58, %f25, %f37;
	add.f32 	%f59, %f26, %f37;
	add.f32 	%f60, %f29, %f37;
	add.f32 	%f61, %f30, %f37;
	add.f32 	%f62, %f31, %f37;
	add.f32 	%f63, %f32, %f37;
	add.f32 	%f64, %f19, %f37;
	add.f32 	%f65, %f20, %f37;
	add.f32 	%f66, %f23, %f37;
	add.f32 	%f67, %f24, %f37;
	add.f32 	%f68, %f27, %f37;
	add.f32 	%f69, %f28, %f37;
	.loc	1 36 18                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:36:18
	setp.gt.f32 	%p72, %f69, 0f00000000;
	selp.u16 	%rs17, 1, 0, %p72;
	setp.gt.f32 	%p73, %f68, 0f00000000;
	selp.u16 	%rs18, -1, 0, %p73;
	shl.b16 	%rs19, %rs18, 1;
	or.b16  	%rs20, %rs17, %rs19;
	setp.gt.f32 	%p74, %f67, 0f00000000;
	selp.u16 	%rs21, 1, 0, %p74;
	setp.gt.f32 	%p75, %f66, 0f00000000;
	selp.u16 	%rs22, -1, 0, %p75;
	shl.b16 	%rs23, %rs22, 1;
	or.b16  	%rs24, %rs21, %rs23;
	setp.gt.f32 	%p76, %f65, 0f00000000;
	selp.u16 	%rs25, 1, 0, %p76;
	setp.gt.f32 	%p77, %f64, 0f00000000;
	selp.u16 	%rs26, -1, 0, %p77;
	shl.b16 	%rs27, %rs26, 1;
	or.b16  	%rs28, %rs25, %rs27;
	setp.gt.f32 	%p78, %f63, 0f00000000;
	setp.gt.f32 	%p79, %f62, 0f00000000;
	setp.gt.f32 	%p80, %f61, 0f00000000;
	selp.u16 	%rs14, 1, 0, %p80;
	setp.gt.f32 	%p81, %f60, 0f00000000;
	setp.gt.f32 	%p82, %f59, 0f00000000;
	selp.u16 	%rs10, 1, 0, %p82;
	setp.gt.f32 	%p83, %f58, 0f00000000;
	setp.gt.f32 	%p84, %f57, 0f00000000;
	selp.u16 	%rs6, 1, 0, %p84;
	setp.gt.f32 	%p85, %f56, 0f00000000;
	setp.gt.f32 	%p86, %f55, 0f00000000;
	selp.u16 	%rs2, 1, 0, %p86;
	setp.gt.f32 	%p87, %f54, 0f00000000;
	setp.gt.f32 	%p88, %f53, 0f00000000;
	setp.gt.f32 	%p89, %f52, 0f00000000;
	setp.gt.f32 	%p90, %f51, 0f00000000;
	setp.gt.f32 	%p91, %f50, 0f00000000;
	setp.gt.f32 	%p92, %f49, 0f00000000;
	setp.gt.f32 	%p93, %f48, 0f00000000;
	setp.gt.f32 	%p94, %f47, 0f00000000;
	setp.gt.f32 	%p95, %f46, 0f00000000;
	setp.gt.f32 	%p96, %f45, 0f00000000;
	setp.gt.f32 	%p97, %f44, 0f00000000;
	setp.gt.f32 	%p98, %f43, 0f00000000;
	setp.gt.f32 	%p99, %f42, 0f00000000;
	setp.gt.f32 	%p100, %f41, 0f00000000;
	setp.gt.f32 	%p101, %f40, 0f00000000;
	setp.gt.f32 	%p102, %f39, 0f00000000;
	setp.gt.f32 	%p103, %f38, 0f00000000;
	.loc	1 38 18                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:38:18
	mul.f32 	%f70, %f38, 0f3C23D70A;
	mul.f32 	%f71, %f39, 0f3C23D70A;
	mul.f32 	%f72, %f40, 0f3C23D70A;
	mul.f32 	%f73, %f41, 0f3C23D70A;
	mul.f32 	%f74, %f42, 0f3C23D70A;
	mul.f32 	%f75, %f43, 0f3C23D70A;
	mul.f32 	%f76, %f44, 0f3C23D70A;
	mul.f32 	%f77, %f45, 0f3C23D70A;
	mul.f32 	%f78, %f46, 0f3C23D70A;
	mul.f32 	%f79, %f47, 0f3C23D70A;
	mul.f32 	%f80, %f48, 0f3C23D70A;
	mul.f32 	%f81, %f49, 0f3C23D70A;
	mul.f32 	%f82, %f50, 0f3C23D70A;
	mul.f32 	%f83, %f51, 0f3C23D70A;
	mul.f32 	%f84, %f52, 0f3C23D70A;
	mul.f32 	%f85, %f53, 0f3C23D70A;
	.loc	1 39 32                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:39:32
	selp.f32 	%f86, %f38, %f70, %p103;
	selp.f32 	%f87, %f39, %f71, %p102;
	selp.f32 	%f88, %f40, %f72, %p101;
	selp.f32 	%f89, %f41, %f73, %p100;
	selp.f32 	%f90, %f42, %f74, %p99;
	selp.f32 	%f91, %f43, %f75, %p98;
	selp.f32 	%f92, %f44, %f76, %p97;
	selp.f32 	%f93, %f45, %f77, %p96;
	selp.f32 	%f94, %f46, %f78, %p95;
	selp.f32 	%f95, %f47, %f79, %p94;
	selp.f32 	%f96, %f48, %f80, %p93;
	selp.f32 	%f97, %f49, %f81, %p92;
	selp.f32 	%f98, %f50, %f82, %p91;
	selp.f32 	%f99, %f51, %f83, %p90;
	selp.f32 	%f100, %f52, %f84, %p89;
	selp.f32 	%f101, %f53, %f85, %p88;
	.loc	1 40 33                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:33
	shl.b32 	%r227, %r143, 6;
	shl.b32 	%r228, %r144, 6;
	shl.b32 	%r229, %r145, 6;
	shl.b32 	%r230, %r146, 6;
	shl.b32 	%r231, %r147, 6;
	.loc	1 40 30                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:30
	add.s32 	%r232, %r227, %r154;
	.loc	1 40 38                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:38
	mad.lo.s32 	%r233, %r152, 135424, %r232;
	.loc	1 40 30                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:30
	mad.lo.s32 	%r234, %r159, 135424, %r161;
	.loc	1 40 38                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:38
	add.s32 	%r235, %r234, %r228;
	add.s32 	%r236, %r234, %r229;
	add.s32 	%r237, %r234, %r230;
	add.s32 	%r238, %r234, %r231;
	.loc	1 40 25                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:25
	cvt.s64.s32 	%rd20, %r233;
	add.s64 	%rd6, %rd13, %rd20;
	.loc	1 40 56                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:56
	bar.sync 	0;
	and.b32  	%r239, %r126, 4080;
	add.s32 	%r86, %r176, %r131;
	selp.u16 	%rs1, 1, 0, %p87;
	// begin inline asm
	@%p5 st.shared.b8 [ %r86 + 0 ], %rs1;
	// end inline asm
	add.s32 	%r87, %r86, 272;
	// begin inline asm
	@%p5 st.shared.b8 [ %r87 + 0 ], %rs2;
	// end inline asm
	add.s32 	%r88, %r86, 544;
	selp.u16 	%rs3, 1, 0, %p77;
	// begin inline asm
	@%p5 st.shared.b8 [ %r88 + 0 ], %rs3;
	// end inline asm
	add.s32 	%r89, %r86, 816;
	and.b16  	%rs4, %rs28, 1;
	// begin inline asm
	@%p5 st.shared.b8 [ %r89 + 0 ], %rs4;
	// end inline asm
	add.s32 	%r90, %r86, 1088;
	selp.u16 	%rs5, 1, 0, %p85;
	// begin inline asm
	@%p5 st.shared.b8 [ %r90 + 0 ], %rs5;
	// end inline asm
	add.s32 	%r91, %r86, 1360;
	// begin inline asm
	@%p5 st.shared.b8 [ %r91 + 0 ], %rs6;
	// end inline asm
	add.s32 	%r92, %r86, 1632;
	selp.u16 	%rs7, 1, 0, %p75;
	// begin inline asm
	@%p5 st.shared.b8 [ %r92 + 0 ], %rs7;
	// end inline asm
	add.s32 	%r93, %r86, 1904;
	and.b16  	%rs8, %rs24, 1;
	// begin inline asm
	@%p5 st.shared.b8 [ %r93 + 0 ], %rs8;
	// end inline asm
	add.s32 	%r94, %r86, 2176;
	selp.u16 	%rs9, 1, 0, %p83;
	// begin inline asm
	@%p5 st.shared.b8 [ %r94 + 0 ], %rs9;
	// end inline asm
	add.s32 	%r95, %r86, 2448;
	// begin inline asm
	@%p5 st.shared.b8 [ %r95 + 0 ], %rs10;
	// end inline asm
	add.s32 	%r96, %r86, 2720;
	selp.u16 	%rs11, 1, 0, %p73;
	// begin inline asm
	@%p5 st.shared.b8 [ %r96 + 0 ], %rs11;
	// end inline asm
	add.s32 	%r97, %r86, 2992;
	and.b16  	%rs12, %rs20, 1;
	// begin inline asm
	@%p5 st.shared.b8 [ %r97 + 0 ], %rs12;
	// end inline asm
	add.s32 	%r98, %r86, 3264;
	selp.u16 	%rs13, 1, 0, %p81;
	// begin inline asm
	@%p5 st.shared.b8 [ %r98 + 0 ], %rs13;
	// end inline asm
	add.s32 	%r99, %r86, 3536;
	// begin inline asm
	@%p5 st.shared.b8 [ %r99 + 0 ], %rs14;
	// end inline asm
	add.s32 	%r100, %r86, 3808;
	selp.u16 	%rs15, 1, 0, %p79;
	// begin inline asm
	@%p5 st.shared.b8 [ %r100 + 0 ], %rs15;
	// end inline asm
	add.s32 	%r101, %r86, 4080;
	.loc	1 36 18                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:36:18
	selp.u16 	%rs16, 1, 0, %p78;
	.loc	1 40 56                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:40:56
	// begin inline asm
	@%p5 st.shared.b8 [ %r101 + 0 ], %rs16;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r240, %r123, 240;
	add.s32 	%r241, %r176, %r240;
	add.s32 	%r242, %r241, %r239;
	ld.shared.v4.u32 	{%r243, %r244, %r245, %r246}, [%r242];
	bfe.u32 	%r251, %r243, 0, 8;
	bfe.u32 	%r252, %r243, 16, 8;
	cvt.u16.u32 	%rs29, %r252;
	bfe.u32 	%r253, %r243, 8, 8;
	cvt.u16.u32 	%rs30, %r253;
	mov.b32 	%r254, {%rs30, %rs29};
	and.b32  	%r255, %r254, 65537;
	bfe.u32 	%r256, %r244, 0, 8;
	bfe.u32 	%r257, %r244, 16, 8;
	cvt.u16.u32 	%rs31, %r257;
	bfe.u32 	%r258, %r244, 8, 8;
	cvt.u16.u32 	%rs32, %r258;
	mov.b32 	%r259, {%rs32, %rs31};
	and.b32  	%r260, %r259, 65537;
	bfe.u32 	%r261, %r245, 0, 8;
	bfe.u32 	%r262, %r245, 16, 8;
	cvt.u16.u32 	%rs33, %r262;
	bfe.u32 	%r263, %r245, 8, 8;
	cvt.u16.u32 	%rs34, %r263;
	mov.b32 	%r264, {%rs34, %rs33};
	and.b32  	%r265, %r264, 65537;
	bfe.u32 	%r266, %r246, 0, 8;
	bfe.u32 	%r267, %r246, 16, 8;
	cvt.u16.u32 	%rs35, %r267;
	bfe.u32 	%r268, %r246, 8, 8;
	cvt.u16.u32 	%rs36, %r268;
	mov.b32 	%r269, {%rs36, %rs35};
	and.b32  	%r270, %r269, 65537;
	mov.b32 	{%rs37, %rs38}, %r255;
	cvt.u32.u16 	%r271, %rs38;
	bfe.u32 	%r272, %r243, 24, 1;
	prmt.b32 	%r273, %r271, %r272, 0x3340U;
	cvt.u32.u16 	%r274, %rs37;
	and.b32  	%r275, %r251, 1;
	prmt.b32 	%r276, %r275, %r274, 0x3340U;
	prmt.b32 	%r277, %r276, %r273, 0x5410U;
	mov.b32 	{%rs39, %rs40}, %r260;
	cvt.u32.u16 	%r278, %rs40;
	bfe.u32 	%r279, %r244, 24, 1;
	prmt.b32 	%r280, %r278, %r279, 0x3340U;
	cvt.u32.u16 	%r281, %rs39;
	and.b32  	%r282, %r256, 1;
	prmt.b32 	%r283, %r282, %r281, 0x3340U;
	prmt.b32 	%r284, %r283, %r280, 0x5410U;
	mov.b32 	{%rs41, %rs42}, %r265;
	cvt.u32.u16 	%r285, %rs42;
	bfe.u32 	%r286, %r245, 24, 1;
	prmt.b32 	%r287, %r285, %r286, 0x3340U;
	cvt.u32.u16 	%r288, %rs41;
	and.b32  	%r289, %r261, 1;
	prmt.b32 	%r290, %r289, %r288, 0x3340U;
	prmt.b32 	%r291, %r290, %r287, 0x5410U;
	mov.b32 	{%rs43, %rs44}, %r270;
	cvt.u32.u16 	%r292, %rs44;
	bfe.u32 	%r293, %r246, 24, 1;
	prmt.b32 	%r294, %r292, %r293, 0x3340U;
	cvt.u32.u16 	%r295, %rs43;
	and.b32  	%r296, %r266, 1;
	prmt.b32 	%r297, %r296, %r295, 0x3340U;
	prmt.b32 	%r298, %r297, %r294, 0x5410U;
	// begin inline asm
	@%p55 st.global.v4.b32 [ %rd6 + 0 ], { %r277, %r284, %r291, %r298 };
	// end inline asm
	.loc	1 41 25                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:41:25
	mul.wide.s32 	%rd21, %r235, 4;
	add.s64 	%rd7, %rd14, %rd21;
	mul.wide.s32 	%rd22, %r236, 4;
	add.s64 	%rd8, %rd14, %rd22;
	mul.wide.s32 	%rd23, %r237, 4;
	add.s64 	%rd9, %rd14, %rd23;
	mul.wide.s32 	%rd24, %r238, 4;
	add.s64 	%rd10, %rd14, %rd24;
	.loc	1 41 56                         // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:41:56
	mov.b32 	%r106, %f86;
	mov.b32 	%r107, %f87;
	mov.b32 	%r108, %f88;
	mov.b32 	%r109, %f89;
	// begin inline asm
	@%p56 st.global.v4.b32 [ %rd7 + 0 ], { %r106, %r107, %r108, %r109 };
	// end inline asm
	mov.b32 	%r110, %f90;
	mov.b32 	%r111, %f91;
	mov.b32 	%r112, %f92;
	mov.b32 	%r113, %f93;
	// begin inline asm
	@%p57 st.global.v4.b32 [ %rd8 + 0 ], { %r110, %r111, %r112, %r113 };
	// end inline asm
	mov.b32 	%r114, %f94;
	mov.b32 	%r115, %f95;
	mov.b32 	%r116, %f96;
	mov.b32 	%r117, %f97;
	// begin inline asm
	@%p58 st.global.v4.b32 [ %rd9 + 0 ], { %r114, %r115, %r116, %r117 };
	// end inline asm
	mov.b32 	%r118, %f98;
	mov.b32 	%r119, %f99;
	mov.b32 	%r120, %f100;
	mov.b32 	%r121, %f101;
	// begin inline asm
	@%p59 st.global.v4.b32 [ %rd10 + 0 ], { %r118, %r119, %r120, %r121 };
	// end inline asm
	.loc	1 41 4                          // cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py:41:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/m4/cm46eun44r2txrc2b4j3kzsp2qgf22imegf4vmicbfgdsczfx4ns.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 52
.b8 54
.b8 101
.b8 117
.b8 110
.b8 52
.b8 52
.b8 114
.b8 50
.b8 116
.b8 120
.b8 114
.b8 99
.b8 50
.b8 98
.b8 52
.b8 106
.b8 51
.b8 107
.b8 122
.b8 115
.b8 112
.b8 50
.b8 113
.b8 103
.b8 102
.b8 50
.b8 50
.b8 105
.b8 109
.b8 101
.b8 103
.b8 102
.b8 52
.b8 118
.b8 109
.b8 105
.b8 99
.b8 98
.b8 102
.b8 103
.b8 100
.b8 115
.b8 99
.b8 122
.b8 102
.b8 120
.b8 52
.b8 110
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 52
.b8 0
	}
	.section	.debug_macinfo	{	}
