#loc = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":19:0)
#loc1 = loc(unknown)
#loc21 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":40:24)
#loc36 = loc(callsite(#loc1 at #loc21))
module {
  tt.func public @triton_per_fused_add_mul_pow_rsqrt_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999993E-9> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %5 = arith.remsi %0, %c4_i32 : i32 loc(#loc6)
    %6 = arith.divsi %4, %cst_1 : tensor<1x64xi32> loc(#loc7)
    %7 = arith.divsi %0, %c4_i32 : i32 loc(#loc8)
    %8 = arith.muli %5, %c64_i32 : i32 loc(#loc9)
    %9 = tt.splat %8 : i32 -> tensor<1x64xi32> loc(#loc10)
    %10 = arith.addi %4, %9 : tensor<1x64xi32> loc(#loc10)
    %11 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.addptr %11, %10 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc11)
    %13 = tt.splat %1 : i1 -> tensor<1x64xi1> loc(#loc12)
    %14 = tt.load %12, %13, %cst_0 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc12)
    %15 = arith.muli %7, %c4_i32 : i32 loc(#loc13)
    %16 = tt.splat %15 : i32 -> tensor<1x64xi32> loc(#loc14)
    %17 = arith.addi %6, %16 : tensor<1x64xi32> loc(#loc14)
    %18 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.addptr %18, %17 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc15)
    %20 = tt.load %19, %13, %cst_0 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc16)
    %21 = arith.mulf %14, %20 : tensor<1x64xf32> loc(#loc17)
    %22 = arith.mulf %21, %21 : tensor<1x64xf32> loc(#loc18)
    %23 = arith.select %13, %22, %cst_0 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc19)
    %24 = "tt.reduce"(%23) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc21)), %arg7: f32 loc(callsite(#loc1 at #loc21))):
      %37 = arith.addf %arg6, %arg7 : f32 loc(#loc38)
      tt.reduce.return %37 : f32 loc(#loc35)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc35)
    %25 = tt.expand_dims %24 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc23)
    %26 = arith.addf %25, %cst : tensor<1x1xf32> loc(#loc24)
    %27 = tt.extern_elementwise %26 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc25)
    %28 = tt.broadcast %27 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc26)
    %29 = arith.mulf %21, %28 : tensor<1x64xf32> loc(#loc26)
    gpu.barrier loc(#loc27)
    %30 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc28)
    %31 = tt.splat %30 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc28)
    tt.store %31, %27, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc29)
    %32 = arith.muli %0, %c64_i32 : i32 loc(#loc30)
    %33 = tt.splat %32 : i32 -> tensor<1x64xi32> loc(#loc31)
    %34 = arith.addi %4, %33 : tensor<1x64xi32> loc(#loc31)
    %35 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc32)
    %36 = tt.addptr %35, %34 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc32)
    tt.store %36, %29, %13 : tensor<1x64x!tt.ptr<f32>> loc(#loc33)
    tt.return loc(#loc34)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":23:28)
#loc3 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":25:21)
#loc4 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":26:26)
#loc5 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":26:34)
#loc6 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":30:19)
#loc7 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":31:19)
#loc8 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":32:19)
#loc9 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":34:38)
#loc10 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":34:35)
#loc11 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":34:30)
#loc12 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":34:43)
#loc13 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":35:37)
#loc14 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":35:35)
#loc15 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":35:30)
#loc16 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":35:42)
#loc17 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":36:18)
#loc18 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":37:18)
#loc19 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":39:33)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc23 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":40:27)
#loc24 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":42:18)
#loc25 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":43:28)
#loc26 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":44:19)
#loc27 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":45:4)
#loc28 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":46:28)
#loc29 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":46:40)
#loc30 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":47:33)
#loc31 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":47:30)
#loc32 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":47:25)
#loc33 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":47:45)
#loc34 = loc("inductor_cache/gn/cgnezq3citvut5ows765gaawxdmsfugjrdcgjgkx22kgk5hfembb.py":47:4)
#loc35 = loc(callsite(#loc20 at #loc21))
#loc37 = loc(callsite(#loc22 at #loc20))
#loc38 = loc(callsite(#loc37 at #loc21))
