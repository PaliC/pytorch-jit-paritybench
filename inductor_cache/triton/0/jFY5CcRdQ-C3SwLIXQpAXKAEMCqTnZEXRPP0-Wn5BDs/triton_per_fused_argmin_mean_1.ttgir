#blocked = #triton_gpu.blocked<{sizePerThread = [1, 2], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":19:0)
#loc1 = loc(unknown)
#loc29 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":43:71)
#loc49 = loc(callsite(#loc1 at #loc29))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_argmin_mean_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":19:0), %arg2: i32 loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4.000000e+00> : tensor<1x128xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0x7F800000> : tensor<1x128xf32, #blocked> loc(#loc1)
    %true = arith.constant true loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c384_i32 = arith.constant 384 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x128xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<96> : tensor<1x128xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<192> : tensor<1x128xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<288> : tensor<1x128xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc4)
    %4 = arith.cmpi slt, %3, %cst_2 : tensor<1x128xi32, #blocked> loc(#loc5)
    %5 = arith.muli %0, %c384_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x128xi32, #blocked> loc(#loc7)
    %7 = arith.addi %3, %6 : tensor<1x128xi32, #blocked> loc(#loc7)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x128xi1, #blocked> loc(#loc9)
    %11 = arith.andi %4, %10 : tensor<1x128xi1, #blocked> loc(#loc9)
    %12 = tt.load %9, %11, %cst_1 : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc10)
    %13 = arith.addi %3, %cst_2 : tensor<1x128xi32, #blocked> loc(#loc11)
    %14 = arith.addi %13, %6 : tensor<1x128xi32, #blocked> loc(#loc12)
    %15 = tt.addptr %8, %14 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc13)
    %16 = tt.load %15, %11, %cst_1 : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc14)
    %17 = arith.addi %3, %cst_3 : tensor<1x128xi32, #blocked> loc(#loc15)
    %18 = arith.addi %17, %6 : tensor<1x128xi32, #blocked> loc(#loc16)
    %19 = tt.addptr %8, %18 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc17)
    %20 = tt.load %19, %11, %cst_1 : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc18)
    %21 = arith.addi %3, %cst_4 : tensor<1x128xi32, #blocked> loc(#loc19)
    %22 = arith.addi %21, %6 : tensor<1x128xi32, #blocked> loc(#loc20)
    %23 = tt.addptr %8, %22 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc21)
    %24 = tt.load %23, %11, %cst_1 : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc22)
    %25 = arith.addf %12, %16 : tensor<1x128xf32, #blocked> loc(#loc23)
    %26 = arith.addf %25, %20 : tensor<1x128xf32, #blocked> loc(#loc24)
    %27 = arith.addf %26, %24 : tensor<1x128xf32, #blocked> loc(#loc25)
    %28 = arith.divf %27, %cst : tensor<1x128xf32, #blocked> loc(#loc26)
    %29 = arith.select %11, %28, %cst_0 : tensor<1x128xi1, #blocked>, tensor<1x128xf32, #blocked> loc(#loc27)
    %30:2 = "tt.reduce"(%29, %3) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc29)), %arg5: i32 loc(callsite(#loc1 at #loc29)), %arg6: f32 loc(callsite(#loc1 at #loc29)), %arg7: i32 loc(callsite(#loc1 at #loc29))):
      %37 = arith.cmpf olt, %arg4, %arg6 : f32 loc(#loc64)
      %38 = arith.cmpf oeq, %arg4, %arg6 : f32 loc(#loc65)
      %39 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc66)
      %40 = arith.cmpf une, %arg6, %arg6 : f32 loc(#loc67)
      %41 = arith.xori %40, %true : i1 loc(#loc68)
      %42 = arith.andi %39, %41 : i1 loc(#loc69)
      %43 = arith.ori %37, %42 : i1 loc(#loc70)
      %44 = arith.andi %39, %40 : i1 loc(#loc71)
      %45 = arith.ori %38, %44 : i1 loc(#loc72)
      %46 = arith.cmpi slt, %arg5, %arg7 : i32 loc(#loc73)
      %47 = arith.andi %45, %46 : i1 loc(#loc74)
      %48 = arith.ori %43, %47 : i1 loc(#loc75)
      %49 = arith.select %48, %arg4, %arg6 : f32 loc(#loc76)
      %50 = arith.select %48, %arg5, %arg7 : i32 loc(#loc77)
      tt.reduce.return %49, %50 : f32, i32 loc(#loc48)
    }) : (tensor<1x128xf32, #blocked>, tensor<1x128xi32, #blocked>) -> (tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>) loc(#loc48)
    %31 = tt.expand_dims %30#1 {axis = 1 : i32} : tensor<1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xi32, #blocked> loc(#loc44)
    %32 = tt.addptr %arg1, %0 : !tt.ptr<i64>, i32 loc(#loc45)
    %33 = triton_gpu.convert_layout %31 : tensor<1x1xi32, #blocked> -> tensor<1x1xi32, #blocked1> loc(#loc46)
    %34 = arith.extsi %33 : tensor<1x1xi32, #blocked1> to tensor<1x1xi64, #blocked1> loc(#loc46)
    %35 = tt.splat %32 : !tt.ptr<i64> -> tensor<1x1x!tt.ptr<i64>, #blocked1> loc(#loc46)
    %36 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked1> loc(#loc46)
    tt.store %35, %34, %36 : tensor<1x1x!tt.ptr<i64>, #blocked1> loc(#loc46)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":23:28)
#loc3 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":25:21)
#loc4 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":26:34)
#loc5 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":28:21)
#loc6 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":31:39)
#loc7 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":31:35)
#loc8 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":31:30)
#loc9 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":31:52)
#loc10 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":31:44)
#loc11 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":32:35)
#loc12 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":32:40)
#loc13 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":32:30)
#loc14 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":32:49)
#loc15 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":33:36)
#loc16 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":33:41)
#loc17 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":33:30)
#loc18 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":33:50)
#loc19 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":34:36)
#loc20 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":34:41)
#loc21 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":34:30)
#loc22 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":34:50)
#loc23 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":35:18)
#loc24 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":36:18)
#loc25 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":37:18)
#loc26 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":39:18)
#loc27 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":41:42)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":168:42)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":136:21)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":137:23)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":139:29)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":140:29)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":141:32)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":141:28)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":141:16)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":143:29)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":143:17)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":146:31)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":146:21)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":146:12)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":147:35)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":147:69)
#loc44 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":44:22)
#loc45 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":45:25)
#loc46 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":45:37)
#loc47 = loc("inductor_cache/jl/cjlu7hfux5orinwcir7yarxfqm7cewgfo4hywum3lofjidy5csg4.py":45:4)
#loc48 = loc(callsite(#loc28 at #loc29))
#loc50 = loc(callsite(#loc30 at #loc28))
#loc51 = loc(callsite(#loc31 at #loc28))
#loc52 = loc(callsite(#loc32 at #loc28))
#loc53 = loc(callsite(#loc33 at #loc28))
#loc54 = loc(callsite(#loc34 at #loc28))
#loc55 = loc(callsite(#loc35 at #loc28))
#loc56 = loc(callsite(#loc36 at #loc28))
#loc57 = loc(callsite(#loc37 at #loc28))
#loc58 = loc(callsite(#loc38 at #loc28))
#loc59 = loc(callsite(#loc39 at #loc28))
#loc60 = loc(callsite(#loc40 at #loc28))
#loc61 = loc(callsite(#loc41 at #loc28))
#loc62 = loc(callsite(#loc42 at #loc28))
#loc63 = loc(callsite(#loc43 at #loc28))
#loc64 = loc(callsite(#loc50 at #loc29))
#loc65 = loc(callsite(#loc51 at #loc29))
#loc66 = loc(callsite(#loc52 at #loc29))
#loc67 = loc(callsite(#loc53 at #loc29))
#loc68 = loc(callsite(#loc54 at #loc29))
#loc69 = loc(callsite(#loc55 at #loc29))
#loc70 = loc(callsite(#loc56 at #loc29))
#loc71 = loc(callsite(#loc57 at #loc29))
#loc72 = loc(callsite(#loc58 at #loc29))
#loc73 = loc(callsite(#loc59 at #loc29))
#loc74 = loc(callsite(#loc60 at #loc29))
#loc75 = loc(callsite(#loc61 at #loc29))
#loc76 = loc(callsite(#loc62 at #loc29))
#loc77 = loc(callsite(#loc63 at #loc29))
