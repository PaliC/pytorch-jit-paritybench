#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_clone_convolution_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999974E-6> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<1024> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<512> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<524288> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<128> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<131072> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<4096> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_2 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_3 : tensor<512xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %4, %cst_2 : tensor<512xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_4 : tensor<512xi32, #blocked> loc(#loc9)
    %9 = arith.remsi %5, %cst_5 : tensor<512xi32, #blocked> loc(#loc10)
    %10 = arith.divsi %4, %cst_6 : tensor<512xi32, #blocked> loc(#loc11)
    %11 = arith.remsi %10, %cst_7 : tensor<512xi32, #blocked> loc(#loc12)
    %12 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc13)
    %13 = tt.addptr %12, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc13)
    %14 = tt.load %13 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc14)
    %15 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc15)
    %16 = tt.addptr %15, %6 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc15)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc16)
    %18 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc17)
    %19 = tt.addptr %18, %6 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc17)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc18)
    %21 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc19)
    %22 = tt.addptr %21, %6 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc19)
    %23 = tt.load %22 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc20)
    %24 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc21)
    %25 = tt.addptr %24, %6 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc21)
    %26 = tt.load %25 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc22)
    %27 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc23)
    %28 = tt.addptr %27, %6 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc23)
    %29 = tt.load %28 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc24)
    %30 = arith.addf %14, %17 : tensor<512xf32, #blocked> loc(#loc25)
    %31 = arith.subf %30, %20 : tensor<512xf32, #blocked> loc(#loc26)
    %32 = arith.addf %23, %cst : tensor<512xf32, #blocked> loc(#loc27)
    %33 = tt.extern_elementwise %32 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc28)
    %34 = arith.divf %cst_0, %33 : tensor<512xf32, #blocked> loc(#loc29)
    %35 = arith.mulf %31, %34 : tensor<512xf32, #blocked> loc(#loc30)
    %36 = arith.mulf %35, %26 : tensor<512xf32, #blocked> loc(#loc31)
    %37 = arith.addf %36, %29 : tensor<512xf32, #blocked> loc(#loc32)
    %38 = arith.cmpf ogt, %cst_1, %37 : tensor<512xf32, #blocked> loc(#loc46)
    %39 = arith.select %38, %cst_1, %37 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc47)
    tt.store %13, %30 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc36)
    %40 = arith.muli %11, %cst_2 : tensor<512xi32, #blocked> loc(#loc37)
    %41 = arith.addi %7, %40 : tensor<512xi32, #blocked> loc(#loc38)
    %42 = arith.muli %9, %cst_8 : tensor<512xi32, #blocked> loc(#loc39)
    %43 = arith.addi %41, %42 : tensor<512xi32, #blocked> loc(#loc40)
    %44 = arith.muli %8, %cst_4 : tensor<512xi32, #blocked> loc(#loc41)
    %45 = arith.addi %43, %44 : tensor<512xi32, #blocked> loc(#loc42)
    %46 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc43)
    %47 = tt.addptr %46, %45 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc43)
    tt.store %47, %39 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc44)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":21:28)
#loc3 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":21:33)
#loc4 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":22:36)
#loc5 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":22:23)
#loc6 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":25:21)
#loc7 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":25:29)
#loc8 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":26:19)
#loc9 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":27:19)
#loc10 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":28:29)
#loc11 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":29:21)
#loc12 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":29:31)
#loc13 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":30:34)
#loc14 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":30:39)
#loc15 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":31:30)
#loc16 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":31:35)
#loc17 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":32:30)
#loc18 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":32:35)
#loc19 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":33:30)
#loc20 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":33:35)
#loc21 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":34:31)
#loc22 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":34:36)
#loc23 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":35:31)
#loc24 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":35:36)
#loc25 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":36:18)
#loc26 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":37:18)
#loc27 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":39:18)
#loc28 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":40:26)
#loc29 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":42:19)
#loc30 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":45:19)
#loc31 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":46:20)
#loc32 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":47:20)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc34 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":49:42)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc36 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":50:39)
#loc37 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":51:35)
#loc38 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":51:30)
#loc39 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":51:45)
#loc40 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":51:40)
#loc41 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":51:57)
#loc42 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":51:50)
#loc43 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":51:25)
#loc44 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":51:69)
#loc45 = loc("inductor_cache/5b/c5bm3nuishmn2mhakqfobgsfqybppw6aqqcxu7sg3nojaaql24ad.py":51:4)
#loc46 = loc(callsite(#loc33 at #loc34))
#loc47 = loc(callsite(#loc35 at #loc34))
