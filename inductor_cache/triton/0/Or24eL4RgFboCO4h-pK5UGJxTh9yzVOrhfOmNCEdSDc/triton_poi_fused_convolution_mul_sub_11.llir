; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_mul_sub_11(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !10
  %7 = icmp slt i32 %6, 12, !dbg !11
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !12
  %9 = shl i32 %8, 10, !dbg !13
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !14
  %11 = shl i32 %10, 2, !dbg !14
  %12 = and i32 %11, 508, !dbg !14
  %13 = or disjoint i32 %12, 1, !dbg !14
  %14 = or disjoint i32 %12, 2, !dbg !14
  %15 = or disjoint i32 %12, 3, !dbg !14
  %16 = or disjoint i32 %12, 513, !dbg !14
  %17 = or disjoint i32 %12, 514, !dbg !14
  %18 = or disjoint i32 %12, 515, !dbg !14
  %19 = or disjoint i32 %9, %12, !dbg !15
  %20 = or disjoint i32 %9, %13, !dbg !15
  %21 = or disjoint i32 %9, %14, !dbg !15
  %22 = or disjoint i32 %9, %15, !dbg !15
  %23 = or disjoint i32 %19, 512, !dbg !15
  %24 = or disjoint i32 %9, %16, !dbg !15
  %25 = or disjoint i32 %9, %17, !dbg !15
  %26 = or disjoint i32 %9, %18, !dbg !15
  %.frozen = freeze i32 %6, !dbg !16
  %27 = sdiv i32 %.frozen, 3, !dbg !16
  %28 = mul i32 %27, 3, !dbg !17
  %.decomposed = sub i32 %.frozen, %28, !dbg !17
  %29 = mul i32 %19, 3, !dbg !18
  %30 = mul i32 %20, 3, !dbg !18
  %31 = mul i32 %21, 3, !dbg !18
  %32 = mul i32 %22, 3, !dbg !18
  %33 = mul i32 %23, 3, !dbg !18
  %34 = mul i32 %24, 3, !dbg !18
  %35 = mul i32 %25, 3, !dbg !18
  %36 = mul i32 %26, 3, !dbg !18
  %37 = mul i32 %27, 786432, !dbg !19
  %38 = add i32 %37, %.decomposed, !dbg !20
  %39 = add i32 %38, %29, !dbg !21
  %40 = add i32 %38, %30, !dbg !21
  %41 = add i32 %38, %31, !dbg !21
  %42 = add i32 %38, %32, !dbg !21
  %43 = add i32 %38, %33, !dbg !21
  %44 = add i32 %38, %34, !dbg !21
  %45 = add i32 %38, %35, !dbg !21
  %46 = add i32 %38, %36, !dbg !21
  %47 = sext i32 %39 to i64, !dbg !22
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !22
  %49 = sext i32 %40 to i64, !dbg !22
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !22
  %51 = sext i32 %41 to i64, !dbg !22
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !22
  %53 = sext i32 %42 to i64, !dbg !22
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !22
  %55 = sext i32 %43 to i64, !dbg !22
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !22
  %57 = sext i32 %44 to i64, !dbg !22
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !22
  %59 = sext i32 %45 to i64, !dbg !22
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !22
  %61 = sext i32 %46 to i64, !dbg !22
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !22
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %7) #1, !dbg !23
  %64 = bitcast i32 %63 to float, !dbg !23
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %7) #1, !dbg !23
  %66 = bitcast i32 %65 to float, !dbg !23
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %7) #1, !dbg !23
  %68 = bitcast i32 %67 to float, !dbg !23
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 %7) #1, !dbg !23
  %70 = bitcast i32 %69 to float, !dbg !23
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %7) #1, !dbg !23
  %72 = bitcast i32 %71 to float, !dbg !23
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 %7) #1, !dbg !23
  %74 = bitcast i32 %73 to float, !dbg !23
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 %7) #1, !dbg !23
  %76 = bitcast i32 %75 to float, !dbg !23
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 %7) #1, !dbg !23
  %78 = bitcast i32 %77 to float, !dbg !23
  %79 = sext i32 %.decomposed to i64, !dbg !24
  %80 = getelementptr float, ptr addrspace(1) %1, i64 %79, !dbg !24
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 %7) #1, !dbg !25
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 %7) #1, !dbg !25
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 %7) #1, !dbg !25
  %84 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 %7) #1, !dbg !25
  %85 = bitcast i32 %84 to float, !dbg !25
  %86 = fadd float %64, %85, !dbg !26
  %87 = fadd float %66, %85, !dbg !26
  %88 = fadd float %68, %85, !dbg !26
  %89 = fadd float %70, %85, !dbg !26
  %90 = fadd float %72, %85, !dbg !26
  %91 = fadd float %74, %85, !dbg !26
  %92 = fadd float %76, %85, !dbg !26
  %93 = fadd float %78, %85, !dbg !26
  %94 = fadd float %86, -5.000000e-01, !dbg !27
  %95 = fadd float %87, -5.000000e-01, !dbg !27
  %96 = fadd float %88, -5.000000e-01, !dbg !27
  %97 = fadd float %89, -5.000000e-01, !dbg !27
  %98 = fadd float %90, -5.000000e-01, !dbg !27
  %99 = fadd float %91, -5.000000e-01, !dbg !27
  %100 = fadd float %92, -5.000000e-01, !dbg !27
  %101 = fadd float %93, -5.000000e-01, !dbg !27
  %102 = fmul float %94, 2.000000e+00, !dbg !28
  %103 = fmul float %95, 2.000000e+00, !dbg !28
  %104 = fmul float %96, 2.000000e+00, !dbg !28
  %105 = fmul float %97, 2.000000e+00, !dbg !28
  %106 = fmul float %98, 2.000000e+00, !dbg !28
  %107 = fmul float %99, 2.000000e+00, !dbg !28
  %108 = fmul float %100, 2.000000e+00, !dbg !28
  %109 = fmul float %101, 2.000000e+00, !dbg !28
  %110 = shl i32 %6, 18, !dbg !29
  %111 = add i32 %19, %110, !dbg !30
  %112 = add i32 %110, %23, !dbg !30
  %113 = sext i32 %111 to i64, !dbg !31
  %114 = getelementptr float, ptr addrspace(1) %2, i64 %113, !dbg !31
  %115 = sext i32 %112 to i64, !dbg !31
  %116 = getelementptr float, ptr addrspace(1) %2, i64 %115, !dbg !31
  %117 = bitcast float %102 to i32, !dbg !32
  %118 = bitcast float %103 to i32, !dbg !32
  %119 = bitcast float %104 to i32, !dbg !32
  %120 = bitcast float %105 to i32, !dbg !32
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %117, i32 %118, i32 %119, i32 %120, ptr addrspace(1) %114, i1 %7) #1, !dbg !32
  %121 = bitcast float %106 to i32, !dbg !32
  %122 = bitcast float %107 to i32, !dbg !32
  %123 = bitcast float %108 to i32, !dbg !32
  %124 = bitcast float %109 to i32, !dbg !32
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %121, i32 %122, i32 %123, i32 %124, ptr addrspace(1) %116, i1 %7) #1, !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqbw43ra7cmljlymtproauihxgj6vjh76f6oq3e7fptje6mic7xo.py", directory: "inductor_cache/qb")
!4 = !{ptr @triton_poi_fused_convolution_mul_sub_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_mul_sub_11, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_mul_sub_11", linkageName: "triton_poi_fused_convolution_mul_sub_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 24, column: 21, scope: !7)
!12 = !DILocation(line: 25, column: 28, scope: !7)
!13 = !DILocation(line: 25, column: 33, scope: !7)
!14 = !DILocation(line: 26, column: 44, scope: !7)
!15 = !DILocation(line: 26, column: 23, scope: !7)
!16 = !DILocation(line: 30, column: 19, scope: !7)
!17 = !DILocation(line: 29, column: 19, scope: !7)
!18 = !DILocation(line: 32, column: 37, scope: !7)
!19 = !DILocation(line: 32, column: 49, scope: !7)
!20 = !DILocation(line: 32, column: 35, scope: !7)
!21 = !DILocation(line: 32, column: 42, scope: !7)
!22 = !DILocation(line: 32, column: 30, scope: !7)
!23 = !DILocation(line: 32, column: 54, scope: !7)
!24 = !DILocation(line: 33, column: 30, scope: !7)
!25 = !DILocation(line: 33, column: 35, scope: !7)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 36, column: 18, scope: !7)
!28 = !DILocation(line: 38, column: 18, scope: !7)
!29 = !DILocation(line: 39, column: 37, scope: !7)
!30 = !DILocation(line: 39, column: 30, scope: !7)
!31 = !DILocation(line: 39, column: 25, scope: !7)
!32 = !DILocation(line: 39, column: 48, scope: !7)
!33 = !DILocation(line: 39, column: 4, scope: !7)
