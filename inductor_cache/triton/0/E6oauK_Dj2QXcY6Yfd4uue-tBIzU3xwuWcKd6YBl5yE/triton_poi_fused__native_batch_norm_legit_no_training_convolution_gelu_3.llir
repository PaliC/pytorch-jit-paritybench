; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %10 = shl i32 %9, 8, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 1, !dbg !12
  %13 = and i32 %12, 254, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = icmp slt i32 %14, 3072, !dbg !14
  %16 = srem i32 %14, 48, !dbg !15
  %17 = sext i32 %14 to i64, !dbg !16
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !16
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %18, i1 %15) #3, !dbg !17
  %20 = extractvalue { i32, i32 } %19, 0, !dbg !17
  %21 = extractvalue { i32, i32 } %19, 1, !dbg !17
  %22 = bitcast i32 %20 to float, !dbg !17
  %23 = bitcast i32 %21 to float, !dbg !17
  %24 = sext i32 %16 to i64, !dbg !18
  %25 = getelementptr float, ptr addrspace(1) %2, i64 %24, !dbg !18
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %25, i1 %15) #3, !dbg !19
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !19
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !19
  %29 = bitcast i32 %27 to float, !dbg !19
  %30 = bitcast i32 %28 to float, !dbg !19
  %31 = getelementptr float, ptr addrspace(1) %3, i64 %24, !dbg !20
  %32 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %31, i1 %15) #3, !dbg !21
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !21
  %34 = extractvalue { i32, i32 } %32, 1, !dbg !21
  %35 = bitcast i32 %33 to float, !dbg !21
  %36 = bitcast i32 %34 to float, !dbg !21
  %37 = getelementptr float, ptr addrspace(1) %4, i64 %24, !dbg !22
  %38 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %37, i1 %15) #3, !dbg !23
  %39 = extractvalue { i32, i32 } %38, 0, !dbg !23
  %40 = extractvalue { i32, i32 } %38, 1, !dbg !23
  %41 = bitcast i32 %39 to float, !dbg !23
  %42 = bitcast i32 %40 to float, !dbg !23
  %43 = getelementptr float, ptr addrspace(1) %5, i64 %24, !dbg !24
  %44 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %43, i1 %15) #3, !dbg !25
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !25
  %46 = extractvalue { i32, i32 } %44, 1, !dbg !25
  %47 = bitcast i32 %45 to float, !dbg !25
  %48 = bitcast i32 %46 to float, !dbg !25
  %49 = getelementptr float, ptr addrspace(1) %6, i64 %24, !dbg !26
  %50 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %49, i1 %15) #3, !dbg !27
  %51 = extractvalue { i32, i32 } %50, 0, !dbg !27
  %52 = extractvalue { i32, i32 } %50, 1, !dbg !27
  %53 = bitcast i32 %51 to float, !dbg !27
  %54 = bitcast i32 %52 to float, !dbg !27
  %55 = fadd float %22, %29, !dbg !28
  %56 = fadd float %23, %30, !dbg !28
  %57 = fsub float %55, %35, !dbg !29
  %58 = fsub float %56, %36, !dbg !29
  %59 = fadd float %41, 0x3EE4F8B580000000, !dbg !30
  %60 = fadd float %42, 0x3EE4F8B580000000, !dbg !30
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i = icmp eq i32 %61, 0, !dbg !31
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i = icmp eq i32 %62, 0, !dbg !31
  br i1 %.not.i, label %68, label %63, !dbg !31

63:                                               ; preds = %8
  br i1 %.not1.i, label %66, label %64, !dbg !31

64:                                               ; preds = %63
  %65 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %59) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

66:                                               ; preds = %63
  %67 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %59) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

68:                                               ; preds = %8
  br i1 %.not1.i, label %71, label %69, !dbg !31

69:                                               ; preds = %68
  %70 = tail call float @llvm.nvvm.sqrt.rn.f(float %59) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

71:                                               ; preds = %68
  %72 = tail call float @llvm.nvvm.sqrt.approx.f(float %59) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

__nv_sqrtf.exit:                                  ; preds = %64, %66, %69, %71
  %.0.i = phi float [ %65, %64 ], [ %67, %66 ], [ %70, %69 ], [ %72, %71 ], !dbg !31
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i1 = icmp eq i32 %73, 0, !dbg !31
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i4 = icmp eq i32 %74, 0, !dbg !31
  br i1 %.not.i1, label %80, label %75, !dbg !31

75:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %78, label %76, !dbg !31

76:                                               ; preds = %75
  %77 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %60) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

78:                                               ; preds = %75
  %79 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %60) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

80:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %83, label %81, !dbg !31

81:                                               ; preds = %80
  %82 = tail call float @llvm.nvvm.sqrt.rn.f(float %60) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

83:                                               ; preds = %80
  %84 = tail call float @llvm.nvvm.sqrt.approx.f(float %60) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

__nv_sqrtf.exit5:                                 ; preds = %76, %78, %81, %83
  %.0.i3 = phi float [ %77, %76 ], [ %79, %78 ], [ %82, %81 ], [ %84, %83 ], !dbg !31
  %85 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !32
  %86 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !32
  %87 = fmul float %57, %85, !dbg !33
  %88 = fmul float %58, %86, !dbg !33
  %89 = fmul float %87, %47, !dbg !34
  %90 = fmul float %88, %48, !dbg !34
  %91 = fadd float %89, %53, !dbg !35
  %92 = fadd float %90, %54, !dbg !35
  %93 = fmul float %91, 0x3FE6A09E60000000, !dbg !36
  %94 = fmul float %92, 0x3FE6A09E60000000, !dbg !36
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i6 = icmp eq i32 %95, 0, !dbg !37
  %96 = tail call float @llvm.nvvm.fabs.ftz.f(float %93) #3, !dbg !37
  %97 = tail call float @llvm.nvvm.fabs.f(float %93) #3, !dbg !37
  %.0.i7 = select i1 %.not.i6, float %97, float %96, !dbg !37
  %98 = fcmp oge float %.0.i7, 0x3FF00C1FC0000000, !dbg !37
  br i1 %98, label %__nv_fabsf.exit1.i, label %100, !dbg !37

__nv_fabsf.exit1.i:                               ; preds = %__nv_sqrtf.exit5
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not1.i9 = icmp eq i32 %99, 0, !dbg !37
  %.01.i = select i1 %.not1.i9, float %97, float %96, !dbg !37
  br label %__internal_fmad.exit.i, !dbg !37

100:                                              ; preds = %__nv_sqrtf.exit5
  %101 = fmul float %93, %93, !dbg !37
  br label %__internal_fmad.exit.i, !dbg !37

__internal_fmad.exit.i:                           ; preds = %100, %__nv_fabsf.exit1.i
  %102 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %100 ], !dbg !37
  %103 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %100 ], !dbg !37
  %104 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %100 ], !dbg !37
  %105 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %100 ], !dbg !37
  %106 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %100 ], !dbg !37
  %107 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %100 ], !dbg !37
  %108 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %100 ], !dbg !37
  %109 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %101, %100 ], !dbg !37
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not2.i8 = icmp eq i32 %110, 0, !dbg !37
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %108, float %109, float %107) #3, !dbg !37
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %108, float %109, float %107) #3, !dbg !37
  %.02.i = select i1 %.not2.i8, float %112, float %111, !dbg !37
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not3.i = icmp eq i32 %113, 0, !dbg !37
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %109, float %106) #3, !dbg !37
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %109, float %106) #3, !dbg !37
  %.03.i = select i1 %.not3.i, float %115, float %114, !dbg !37
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not4.i = icmp eq i32 %116, 0, !dbg !37
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %109, float %105) #3, !dbg !37
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %109, float %105) #3, !dbg !37
  %.04.i = select i1 %.not4.i, float %118, float %117, !dbg !37
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not5.i = icmp eq i32 %119, 0, !dbg !37
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %109, float %104) #3, !dbg !37
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %109, float %104) #3, !dbg !37
  %.05.i = select i1 %.not5.i, float %121, float %120, !dbg !37
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not6.i = icmp eq i32 %122, 0, !dbg !37
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %109, float %103) #3, !dbg !37
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %109, float %103) #3, !dbg !37
  %.06.i = select i1 %.not6.i, float %124, float %123, !dbg !37
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not7.i = icmp eq i32 %125, 0, !dbg !37
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %109, float %102) #3, !dbg !37
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %109, float %102) #3, !dbg !37
  %.07.i = select i1 %.not7.i, float %127, float %126, !dbg !37
  %128 = fneg float %109, !dbg !37
  %129 = select i1 %98, float %128, float %93, !dbg !37
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not8.i = icmp eq i32 %130, 0, !dbg !37
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %129, float %129) #3, !dbg !37
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %129, float %129) #3, !dbg !37
  %.08.i = select i1 %.not8.i, float %132, float %131, !dbg !37
  br i1 %98, label %133, label %__nv_erff.exit, !dbg !37

133:                                              ; preds = %__internal_fmad.exit.i
  %134 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #3, !dbg !37
  %135 = fsub float 1.000000e+00, %134, !dbg !37
  %136 = bitcast float %135 to i32, !dbg !37
  %137 = bitcast float %93 to i32, !dbg !37
  %138 = and i32 %137, -2147483648, !dbg !37
  %139 = or i32 %138, %136, !dbg !37
  %140 = bitcast i32 %139 to float, !dbg !37
  br label %__nv_erff.exit, !dbg !37

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %133
  %r.0.i = phi float [ %140, %133 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !37
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i10 = icmp eq i32 %141, 0, !dbg !37
  %142 = tail call float @llvm.nvvm.fabs.ftz.f(float %94) #3, !dbg !37
  %143 = tail call float @llvm.nvvm.fabs.f(float %94) #3, !dbg !37
  %.0.i11 = select i1 %.not.i10, float %143, float %142, !dbg !37
  %144 = fcmp oge float %.0.i11, 0x3FF00C1FC0000000, !dbg !37
  br i1 %144, label %__nv_fabsf.exit1.i28, label %146, !dbg !37

__nv_fabsf.exit1.i28:                             ; preds = %__nv_erff.exit
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not1.i29 = icmp eq i32 %145, 0, !dbg !37
  %.01.i30 = select i1 %.not1.i29, float %143, float %142, !dbg !37
  br label %__internal_fmad.exit.i12, !dbg !37

146:                                              ; preds = %__nv_erff.exit
  %147 = fmul float %94, %94, !dbg !37
  br label %__internal_fmad.exit.i12, !dbg !37

__internal_fmad.exit.i12:                         ; preds = %146, %__nv_fabsf.exit1.i28
  %148 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i28 ], [ 0x3FC06EBA60000000, %146 ], !dbg !37
  %149 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i28 ], [ 0xBFD8127580000000, %146 ], !dbg !37
  %150 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i28 ], [ 0x3FBCE315E0000000, %146 ], !dbg !37
  %151 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i28 ], [ 0xBF9B837CE0000000, %146 ], !dbg !37
  %152 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i28 ], [ 0x3F755ABD40000000, %146 ], !dbg !37
  %153 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i28 ], [ 0xBF4AE9A400000000, %146 ], !dbg !37
  %154 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i28 ], [ 0x3F163D2D40000000, %146 ], !dbg !37
  %155 = phi float [ %.01.i30, %__nv_fabsf.exit1.i28 ], [ %147, %146 ], !dbg !37
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not2.i13 = icmp eq i32 %156, 0, !dbg !37
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %154, float %155, float %153) #3, !dbg !37
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %154, float %155, float %153) #3, !dbg !37
  %.02.i14 = select i1 %.not2.i13, float %158, float %157, !dbg !37
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not3.i15 = icmp eq i32 %159, 0, !dbg !37
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i14, float %155, float %152) #3, !dbg !37
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i14, float %155, float %152) #3, !dbg !37
  %.03.i16 = select i1 %.not3.i15, float %161, float %160, !dbg !37
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not4.i17 = icmp eq i32 %162, 0, !dbg !37
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i16, float %155, float %151) #3, !dbg !37
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i16, float %155, float %151) #3, !dbg !37
  %.04.i18 = select i1 %.not4.i17, float %164, float %163, !dbg !37
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not5.i19 = icmp eq i32 %165, 0, !dbg !37
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i18, float %155, float %150) #3, !dbg !37
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i18, float %155, float %150) #3, !dbg !37
  %.05.i20 = select i1 %.not5.i19, float %167, float %166, !dbg !37
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not6.i21 = icmp eq i32 %168, 0, !dbg !37
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i20, float %155, float %149) #3, !dbg !37
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i20, float %155, float %149) #3, !dbg !37
  %.06.i22 = select i1 %.not6.i21, float %170, float %169, !dbg !37
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not7.i23 = icmp eq i32 %171, 0, !dbg !37
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i22, float %155, float %148) #3, !dbg !37
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i22, float %155, float %148) #3, !dbg !37
  %.07.i24 = select i1 %.not7.i23, float %173, float %172, !dbg !37
  %174 = fneg float %155, !dbg !37
  %175 = select i1 %144, float %174, float %94, !dbg !37
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not8.i25 = icmp eq i32 %176, 0, !dbg !37
  %177 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i24, float %175, float %175) #3, !dbg !37
  %178 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i24, float %175, float %175) #3, !dbg !37
  %.08.i26 = select i1 %.not8.i25, float %178, float %177, !dbg !37
  br i1 %144, label %179, label %__nv_erff.exit31, !dbg !37

179:                                              ; preds = %__internal_fmad.exit.i12
  %180 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i26) #3, !dbg !37
  %181 = fsub float 1.000000e+00, %180, !dbg !37
  %182 = bitcast float %181 to i32, !dbg !37
  %183 = bitcast float %94 to i32, !dbg !37
  %184 = and i32 %183, -2147483648, !dbg !37
  %185 = or i32 %184, %182, !dbg !37
  %186 = bitcast i32 %185 to float, !dbg !37
  br label %__nv_erff.exit31, !dbg !37

__nv_erff.exit31:                                 ; preds = %__internal_fmad.exit.i12, %179
  %r.0.i27 = phi float [ %186, %179 ], [ %.08.i26, %__internal_fmad.exit.i12 ], !dbg !37
  %187 = fmul float %92, 5.000000e-01, !dbg !38
  %188 = fmul float %91, 5.000000e-01, !dbg !38
  %189 = fadd float %r.0.i, 1.000000e+00, !dbg !39
  %190 = fadd float %r.0.i27, 1.000000e+00, !dbg !39
  %191 = fmul float %188, %189, !dbg !40
  %192 = fmul float %187, %190, !dbg !40
  %193 = bitcast float %55 to i32, !dbg !41
  %194 = bitcast float %56 to i32, !dbg !41
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %193, i32 %194, ptr addrspace(1) %18, i1 %15) #3, !dbg !41
  %195 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !42
  %196 = bitcast float %191 to i32, !dbg !43
  %197 = bitcast float %192 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %196, i32 %197, ptr addrspace(1) %195, i1 %15) #3, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ch2tiqui3r2imwfbgxgnqthqjd4biwkwhdq2mrc64eiqepqq6g6q.py", directory: "inductor_cache/h2")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_3", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 34, scope: !7)
!17 = !DILocation(line: 26, column: 39, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 35, scope: !7)
!24 = !DILocation(line: 30, column: 31, scope: !7)
!25 = !DILocation(line: 30, column: 36, scope: !7)
!26 = !DILocation(line: 31, column: 31, scope: !7)
!27 = !DILocation(line: 31, column: 36, scope: !7)
!28 = !DILocation(line: 32, column: 18, scope: !7)
!29 = !DILocation(line: 33, column: 18, scope: !7)
!30 = !DILocation(line: 35, column: 18, scope: !7)
!31 = !DILocation(line: 36, column: 26, scope: !7)
!32 = !DILocation(line: 38, column: 19, scope: !7)
!33 = !DILocation(line: 41, column: 19, scope: !7)
!34 = !DILocation(line: 42, column: 20, scope: !7)
!35 = !DILocation(line: 43, column: 20, scope: !7)
!36 = !DILocation(line: 47, column: 20, scope: !7)
!37 = !DILocation(line: 48, column: 26, scope: !7)
!38 = !DILocation(line: 45, column: 20, scope: !7)
!39 = !DILocation(line: 49, column: 20, scope: !7)
!40 = !DILocation(line: 50, column: 20, scope: !7)
!41 = !DILocation(line: 51, column: 39, scope: !7)
!42 = !DILocation(line: 52, column: 28, scope: !7)
!43 = !DILocation(line: 52, column: 40, scope: !7)
!44 = !DILocation(line: 52, column: 4, scope: !7)
