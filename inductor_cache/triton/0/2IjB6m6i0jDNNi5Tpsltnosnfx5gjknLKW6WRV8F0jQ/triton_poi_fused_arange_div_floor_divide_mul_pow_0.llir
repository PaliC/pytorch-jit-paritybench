; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_arange_div_floor_divide_mul_pow_0(ptr addrspace(1) %0, i32 %1) local_unnamed_addr !dbg !7 {
  %3 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %4 = shl i32 %3, 7, !dbg !11
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %6 = and i32 %5, 127, !dbg !12
  %7 = or disjoint i32 %4, %6, !dbg !13
  %8 = sdiv i32 %7, 512, !dbg !14
  %9 = srem i32 %8, 4, !dbg !15
  %10 = srem i32 %7, 128, !dbg !16
  %11 = add nsw i32 %9, 1, !dbg !17
  %12 = sitofp i32 %11 to float, !dbg !18
  %13 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %12, float 0x4010000040000000) #4, !dbg !19
  %14 = sitofp i32 %10 to float, !dbg !20
  %15 = fmul float %14, 5.000000e-01, !dbg !21
  %16 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not.i = icmp eq i32 %16, 0, !dbg !22
  %17 = tail call float @llvm.nvvm.floor.ftz.f(float %15), !dbg !22
  %18 = tail call float @llvm.nvvm.floor.f(float %15), !dbg !22
  %.0.i = select i1 %.not.i, float %18, float %17, !dbg !22
  %19 = fmul float %.0.i, 2.000000e+00, !dbg !23
  %20 = fmul float %19, 7.812500e-03, !dbg !24
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %22 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i1 = icmp eq i32 %22, 0, !dbg !25
  %23 = tail call float @llvm.nvvm.fabs.ftz.f(float 1.000000e+04) #4, !dbg !25
  %24 = tail call float @llvm.nvvm.fabs.f(float 1.000000e+04) #4, !dbg !25
  %.09.i = select i1 %.not.i1, float %24, float %23, !dbg !25
  %25 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not12.i = icmp eq i32 %25, 0, !dbg !25
  %26 = fcmp olt float %.09.i, 0x3810000000000000, !dbg !25
  %27 = fmul float %.09.i, 0x4170000000000000, !dbg !25
  %28 = select i1 %.not12.i, i1 %26, i1 false, !dbg !25
  %.116.i = select i1 %28, float %27, float %.09.i, !dbg !25
  %expo.i.i.1.i = select i1 %28, float -1.510000e+02, float -1.270000e+02, !dbg !25
  %29 = bitcast float %.116.i to i32, !dbg !25
  %30 = and i32 %29, 8388607, !dbg !25
  %31 = or disjoint i32 %30, 1065353216, !dbg !25
  %32 = bitcast i32 %31 to float, !dbg !25
  %33 = lshr i32 %29, 23, !dbg !25
  %34 = uitofp nneg i32 %33 to float, !dbg !25
  %35 = fadd float %expo.i.i.1.i, %34, !dbg !25
  %36 = fcmp ogt float %32, 0x3FF6A09E60000000, !dbg !25
  %37 = fmul float %32, 5.000000e-01, !dbg !25
  %38 = fadd float %35, 1.000000e+00, !dbg !25
  %expo.i.i.2.i = select i1 %36, float %38, float %35, !dbg !25
  %m.i.i.0.i = select i1 %36, float %37, float %32, !dbg !25
  %39 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !25
  %40 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !25
  %41 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %40) #5, !dbg !25, !srcloc !26
  %42 = fmul float %39, 2.000000e+00, !dbg !25
  %43 = fmul float %41, %42, !dbg !25
  %44 = fmul float %43, %43, !dbg !25
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not13.i = icmp eq i32 %45, 0, !dbg !25
  %46 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %44, float 0x3F8995EC60000000) #4, !dbg !25
  %47 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %44, float 0x3F8995EC60000000) #4, !dbg !25
  %.020.i = select i1 %.not13.i, float %47, float %46, !dbg !25
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not14.i = icmp eq i32 %48, 0, !dbg !25
  %49 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %44, float 0x3FB55557A0000000) #4, !dbg !25
  %50 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %44, float 0x3FB55557A0000000) #4, !dbg !25
  %.021.i = select i1 %.not14.i, float %50, float %49, !dbg !25
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not15.i = icmp eq i32 %51, 0, !dbg !25
  %52 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %44) #4, !dbg !25
  %53 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %44) #4, !dbg !25
  %.022.i = select i1 %.not15.i, float %53, float %52, !dbg !25
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not16.i = icmp eq i32 %54, 0, !dbg !25
  %55 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %43) #4, !dbg !25
  %56 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %43) #4, !dbg !25
  %.024.i = select i1 %.not16.i, float %56, float %55, !dbg !25
  %57 = fsub float %39, %43, !dbg !25
  %58 = fmul float %57, 2.000000e+00, !dbg !25
  %59 = fneg float %43, !dbg !25
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not17.i = icmp eq i32 %60, 0, !dbg !25
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %59, float %39, float %58) #4, !dbg !25
  %62 = tail call float @llvm.nvvm.fma.rn.f(float %59, float %39, float %58) #4, !dbg !25
  %.025.i = select i1 %.not17.i, float %62, float %61, !dbg !25
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not18.i = icmp eq i32 %63, 0, !dbg !25
  %64 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %41, float %.025.i) #4, !dbg !25
  %65 = tail call float @llvm.nvvm.mul.rn.f(float %41, float %.025.i) #4, !dbg !25
  %.026.i = select i1 %.not18.i, float %65, float %64, !dbg !25
  %66 = fadd float %43, %.024.i, !dbg !25
  %67 = fsub float %43, %66, !dbg !25
  %68 = fadd float %.024.i, %67, !dbg !25
  %69 = fadd float %.026.i, %68, !dbg !25
  %70 = fadd float %66, %69, !dbg !25
  %71 = fsub float %66, %70, !dbg !25
  %72 = fadd float %69, %71, !dbg !25
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not19.i = icmp eq i32 %73, 0, !dbg !25
  %74 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !25
  %75 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !25
  %.019.i = select i1 %.not19.i, float %75, float %74, !dbg !25
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not20.i = icmp eq i32 %76, 0, !dbg !25
  %77 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !25
  %78 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !25
  %.018.i = select i1 %.not20.i, float %78, float %77, !dbg !25
  %79 = fadd float %.019.i, %70, !dbg !25
  %80 = fsub float %.019.i, %79, !dbg !25
  %81 = fadd float %70, %80, !dbg !25
  %82 = fadd float %72, %81, !dbg !25
  %83 = fadd float %.018.i, %82, !dbg !25
  %84 = fadd float %79, %83, !dbg !25
  %85 = fsub float %79, %84, !dbg !25
  %86 = fadd float %83, %85, !dbg !25
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not21.i = icmp eq i32 %87, 0, !dbg !25
  %88 = tail call float @llvm.nvvm.fabs.ftz.f(float %20) #4, !dbg !25
  %89 = tail call float @llvm.nvvm.fabs.f(float %20) #4, !dbg !25
  %.027.i = select i1 %.not21.i, float %89, float %88, !dbg !25
  %90 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !25
  %91 = fmul float %20, 0x3F20000000000000, !dbg !25
  %.013.i = select i1 %90, float %91, float %20, !dbg !25
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not22.i = icmp eq i32 %92, 0, !dbg !25
  %93 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i, float %84) #4, !dbg !25
  %94 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i, float %84) #4, !dbg !25
  %.028.i = select i1 %.not22.i, float %94, float %93, !dbg !25
  %95 = fneg float %.028.i, !dbg !25
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not23.i = icmp eq i32 %96, 0, !dbg !25
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %84, float %95) #4, !dbg !25
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %84, float %95) #4, !dbg !25
  %.029.i = select i1 %.not23.i, float %98, float %97, !dbg !25
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not24.i = icmp eq i32 %99, 0, !dbg !25
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %86, float %.029.i) #4, !dbg !25
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %86, float %.029.i) #4, !dbg !25
  %.030.i = select i1 %.not24.i, float %101, float %100, !dbg !25
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not25.i = icmp eq i32 %102, 0, !dbg !25
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %84, float %.030.i) #4, !dbg !25
  %104 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %84, float %.030.i) #4, !dbg !25
  %.031.i = select i1 %.not25.i, float %104, float %103, !dbg !25
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not26.i = icmp eq i32 %105, 0, !dbg !25
  %106 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #4, !dbg !25
  %107 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #4, !dbg !25
  %.032.i = select i1 %.not26.i, float %107, float %106, !dbg !25
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %110 = bitcast float %.032.i to i32, !dbg !25
  %111 = icmp eq i32 %110, 1118925336, !dbg !25
  %prod.i.145.0.i = select i1 %111, float 0x40562E42E0000000, float %.032.i, !dbg !25
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not29.i = icmp eq i32 %112, 0, !dbg !25
  %113 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !25
  %114 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !25
  %.017.i = select i1 %.not29.i, float %114, float %113, !dbg !25
  %115 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #4, !dbg !25
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not30.i = icmp eq i32 %116, 0, !dbg !25
  %117 = tail call float @llvm.nvvm.fabs.ftz.f(float %115) #4, !dbg !25
  %118 = tail call float @llvm.nvvm.fabs.f(float %115) #4, !dbg !25
  %.023.i = select i1 %.not30.i, float %118, float %117, !dbg !25
  %119 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !25
  %120 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %115), !dbg !25
  %j.i.i.0.i = select i1 %119, float %120, float %115, !dbg !25
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not31.i = icmp eq i32 %121, 0, !dbg !25
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !25
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !25
  %.035.i = select i1 %.not31.i, float %123, float %122, !dbg !25
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not32.i = icmp eq i32 %124, 0, !dbg !25
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !25
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !25
  %.036.i = select i1 %.not32.i, float %126, float %125, !dbg !25
  %127 = fmul float %.036.i, 0x3FF7154760000000, !dbg !25
  %128 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !25
  %129 = bitcast float %128 to i32, !dbg !25
  %130 = shl i32 %129, 23, !dbg !25
  %131 = bitcast i32 %130 to float, !dbg !25
  %132 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %127) #4, !dbg !25
  %133 = fmul float %132, %131, !dbg !25
  %134 = fcmp une float %133, 0x7FF0000000000000, !dbg !25
  br i1 %134, label %__internal_fmad.exit.i.i, label %__internal_powf_corner_cases.exit.i, !dbg !25

__internal_fmad.exit.i.i:                         ; preds = %2
  %.not28.i = icmp eq i32 %109, 0, !dbg !25
  %.not27.i = icmp eq i32 %108, 0, !dbg !25
  %135 = fneg float %.032.i, !dbg !25
  %136 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %135) #4, !dbg !25
  %137 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %135) #4, !dbg !25
  %.033.i = select i1 %.not27.i, float %136, float %137, !dbg !25
  %138 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #4, !dbg !25
  %139 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #4, !dbg !25
  %.034.i = select i1 %.not28.i, float %138, float %139, !dbg !25
  %140 = fadd float %.034.i, 0x3EE0000000000000, !dbg !25
  %prod.i.044.0.i = select i1 %111, float %140, float %.034.i, !dbg !25
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not33.i = icmp eq i32 %141, 0, !dbg !25
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %133, float %prod.i.044.0.i, float %133) #4, !dbg !25
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %133, float %prod.i.044.0.i, float %133) #4, !dbg !25
  %.014.i = select i1 %.not33.i, float %143, float %142, !dbg !25
  br label %__internal_powf_corner_cases.exit.i, !dbg !25

__internal_powf_corner_cases.exit.i:              ; preds = %__internal_fmad.exit.i.i, %2
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %2 ], !dbg !25
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not34.i = icmp eq i32 %144, 0, !dbg !25
  %.01.i = select i1 %.not34.i, float %24, float %23, !dbg !25
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not35.i = icmp eq i32 %145, 0, !dbg !25
  %.02.i = select i1 %.not35.i, float %89, float %88, !dbg !25
  %146 = fadd float %.01.i, %.02.i, !dbg !25
  %147 = bitcast float %146 to i32, !dbg !25
  %148 = icmp sgt i32 %147, 2139095039, !dbg !25
  br i1 %148, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !25

__nv_isnanf.exit.i.i:                             ; preds = %__internal_powf_corner_cases.exit.i
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not36.i = icmp eq i32 %149, 0, !dbg !25
  %.06.i = select i1 %.not36.i, float %24, float %23, !dbg !25
  %150 = fcmp uno float %.06.i, 0.000000e+00, !dbg !25
  br i1 %150, label %153, label %__nv_isnanf.exit11.i.i, !dbg !25

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not37.i = icmp eq i32 %151, 0, !dbg !25
  %.07.i = select i1 %.not37.i, float %89, float %88, !dbg !25
  %152 = fcmp uno float %.07.i, 0.000000e+00, !dbg !25
  br i1 %152, label %153, label %__nv_isinff.exit8.i.i, !dbg !25

153:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %154 = fadd float %20, 1.000000e+04, !dbg !25
  br label %__nv_powf.exit, !dbg !25

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not38.i = icmp eq i32 %155, 0, !dbg !25
  %.05.i = select i1 %.not38.i, float %89, float %88, !dbg !25
  %156 = fcmp oeq float %.05.i, 0x7FF0000000000000, !dbg !25
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not40.i = icmp eq i32 %157, 0, !dbg !25
  %.04.i = select i1 %.not40.i, float %24, float %23, !dbg !25
  br i1 %156, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !25

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %158 = fcmp ogt float %.04.i, 1.000000e+00, !dbg !25
  %ti.i.0.i = select i1 %158, i32 2139095040, i32 0, !dbg !25
  %159 = fcmp olt float %20, 0.000000e+00, !dbg !25
  %160 = xor i32 %ti.i.0.i, 2139095040, !dbg !25
  %ti.i.1.i = select i1 %159, i32 %160, i32 %ti.i.0.i, !dbg !25
  %161 = bitcast i32 %ti.i.1.i to float, !dbg !25
  br label %__nv_powf.exit, !dbg !25

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %162 = fcmp oeq float %.04.i, 0x7FF0000000000000, !dbg !25
  br i1 %162, label %163, label %__nv_powf.exit, !dbg !25

163:                                              ; preds = %__nv_isinff.exit.i.i
  %164 = fcmp oge float %20, 0.000000e+00, !dbg !25
  %165 = select i1 %164, float 0x7FF0000000000000, float 0.000000e+00, !dbg !25
  br label %__nv_powf.exit, !dbg !25

__nv_powf.exit:                                   ; preds = %__internal_powf_corner_cases.exit.i, %153, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %163
  %.3.i = phi float [ %t.i.0.i, %__internal_powf_corner_cases.exit.i ], [ %154, %153 ], [ %161, %__nv_fabsf.exit5.i.i ], [ %165, %163 ], [ %t.i.0.i, %__nv_isinff.exit.i.i ], !dbg !25
  %166 = fmul float %13, 0x401921FB60000000, !dbg !27
  %167 = fcmp oeq float %20, 0.000000e+00, !dbg !25
  %t.0.i = select i1 %167, float 1.000000e+00, float %.3.i, !dbg !25
  %168 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %166, float %t.0.i) #4, !dbg !28
  %169 = sext i32 %7 to i64, !dbg !29
  %170 = getelementptr float, ptr addrspace(1) %0, i64 %169, !dbg !29
  %171 = bitcast float %168 to i32, !dbg !30
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %171, ptr addrspace(1) %170, i1 true) #4, !dbg !30
  ret void, !dbg !31
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cfhywsehnpgcklbbtzdsctdufnhx5f6pjfqygtklojidgfrntdml.py", directory: "inductor_cache/fh")
!4 = !{ptr @triton_poi_fused_arange_div_floor_divide_mul_pow_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_arange_div_floor_divide_mul_pow_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_arange_div_floor_divide_mul_pow_0", linkageName: "triton_poi_fused_arange_div_floor_divide_mul_pow_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 15, scope: !7)
!18 = !DILocation(line: 28, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 36, column: 19, scope: !7)
!21 = !DILocation(line: 38, column: 19, scope: !7)
!22 = !DILocation(line: 39, column: 28, scope: !7)
!23 = !DILocation(line: 41, column: 20, scope: !7)
!24 = !DILocation(line: 43, column: 20, scope: !7)
!25 = !DILocation(line: 45, column: 33, scope: !7)
!26 = !{i32 21046}
!27 = !DILocation(line: 34, column: 18, scope: !7)
!28 = !DILocation(line: 46, column: 19, scope: !7)
!29 = !DILocation(line: 47, column: 25, scope: !7)
!30 = !DILocation(line: 47, column: 37, scope: !7)
!31 = !DILocation(line: 47, column: 4, scope: !7)
