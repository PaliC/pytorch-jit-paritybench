//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_div_pow_sum_1 // -- Begin function triton_per_fused_div_pow_sum_1
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_div_pow_sum_1
.visible .entry triton_per_fused_div_pow_sum_1(
	.param .u64 .ptr .global .align 1 triton_per_fused_div_pow_sum_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_div_pow_sum_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_div_pow_sum_1_param_2,
	.param .u32 triton_per_fused_div_pow_sum_1_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<48>;
	.reg .f32 	%f<31>;
	.reg .b64 	%rd<6>;
	.loc	1 19 0                          // cqbfxs6zkxtg6dsvhp3r62snu7cfqxrnn43ofouj33q7f6imvofd.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqbfxs6zkxtg6dsvhp3r62snu7cfqxrnn43ofouj33q7f6imvofd.py:19:0

// %bb.0:
	ld.param.u64 	%rd1, [triton_per_fused_div_pow_sum_1_param_0];
	ld.param.u64 	%rd4, [triton_per_fused_div_pow_sum_1_param_1];
$L__tmp0:
	.loc	1 27 26                         // cqbfxs6zkxtg6dsvhp3r62snu7cfqxrnn43ofouj33q7f6imvofd.py:27:26
	mov.u32 	%r28, %tid.x;
	and.b32  	%r29, %r28, 31;
	ld.param.u64 	%rd3, [triton_per_fused_div_pow_sum_1_param_2];
	shl.b32 	%r30, %r28, 2;
	and.b32  	%r31, %r30, 252;
	mov.pred 	%p1, -1;
	.loc	1 32 35                         // cqbfxs6zkxtg6dsvhp3r62snu7cfqxrnn43ofouj33q7f6imvofd.py:32:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r10, %r13, %r16, %r19 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cqbfxs6zkxtg6dsvhp3r62snu7cfqxrnn43ofouj33q7f6imvofd.py:33:30
	mul.wide.u32 	%rd5, %r31, 4;
	add.s64 	%rd2, %rd4, %rd5;
	.loc	1 33 35                         // cqbfxs6zkxtg6dsvhp3r62snu7cfqxrnn43ofouj33q7f6imvofd.py:33:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r5;
	mov.b32 	%f2, %r6;
	mov.b32 	%f3, %r7;
	mov.b32 	%f4, %r8;
	.loc	1 34 18                         // cqbfxs6zkxtg6dsvhp3r62snu7cfqxrnn43ofouj33q7f6imvofd.py:34:18
	mul.f32 	%f5, %f1, %f1;
	mul.f32 	%f6, %f2, %f2;
	mul.f32 	%f7, %f3, %f3;
	mul.f32 	%f8, %f4, %f4;
	.loc	1 35 18                         // cqbfxs6zkxtg6dsvhp3r62snu7cfqxrnn43ofouj33q7f6imvofd.py:35:18
	mov.b32 	%r11, %f5;
	// begin inline asm
	div.full.f32 %r9, %r10, %r11;
	// end inline asm
	mov.b32 	%f9, %r9;
	mov.b32 	%r14, %f6;
	// begin inline asm
	div.full.f32 %r12, %r13, %r14;
	// end inline asm
	mov.b32 	%f10, %r12;
	mov.b32 	%r17, %f7;
	// begin inline asm
	div.full.f32 %r15, %r16, %r17;
	// end inline asm
	mov.b32 	%f11, %r15;
	mov.b32 	%r20, %f8;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f12, %r18;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f9, %f10;
	add.f32 	%f14, %f13, %f11;
	add.f32 	%f15, %f14, %f12;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f15;
	shfl.sync.bfly.b32	%r33, %r32, 16, 31, -1;
	mov.b32 	%f16, %r33;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f17;
	shfl.sync.bfly.b32	%r35, %r34, 8, 31, -1;
	mov.b32 	%f18, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f19;
	shfl.sync.bfly.b32	%r37, %r36, 4, 31, -1;
	mov.b32 	%f20, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f21;
	shfl.sync.bfly.b32	%r39, %r38, 2, 31, -1;
	mov.b32 	%f22, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f23;
	shfl.sync.bfly.b32	%r41, %r40, 1, 31, -1;
	mov.b32 	%f24, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p3, %r29, 0;
	shr.u32 	%r42, %r28, 3;
	and.b32  	%r43, %r42, 4;
	mov.u32 	%r44, global_smem;
	add.s32 	%r21, %r44, %r43;
	mov.b32 	%r22, %f25;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p4, %r28, 2;
	add.s32 	%r24, %r44, %r30;
	// begin inline asm
	@%p4 ld.shared.b32 %r23, [ %r24 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r23;
	shfl.sync.bfly.b32	%r45, %r23, 1, 31, -1;
	mov.b32 	%f27, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r46, %r28, 1;
	setp.eq.b32 	%p7, %r46, 1;
	not.pred 	%p8, %p7;
	and.pred  	%p5, %p4, %p8;
	mov.b32 	%r26, %f28;
	// begin inline asm
	@%p5 st.shared.b32 [ %r24 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f29, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f30, %f29, 0f00000000;
$L__tmp3:
	.loc	1 38 59                         // cqbfxs6zkxtg6dsvhp3r62snu7cfqxrnn43ofouj33q7f6imvofd.py:38:59
	and.b32  	%r47, %r28, 63;
	setp.eq.s32 	%p6, %r47, 0;
	mov.b32 	%r27, %f30;
	// begin inline asm
	@%p6 st.global.b32 [ %rd3 + 0 ], { %r27 };
	// end inline asm
	.loc	1 38 4                          // cqbfxs6zkxtg6dsvhp3r62snu7cfqxrnn43ofouj33q7f6imvofd.py:38:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qb/cqbfxs6zkxtg6dsvhp3r62snu7cfqxrnn43ofouj33q7f6imvofd.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 199                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 98
.b8 102
.b8 120
.b8 115
.b8 54
.b8 122
.b8 107
.b8 120
.b8 116
.b8 103
.b8 54
.b8 100
.b8 115
.b8 118
.b8 104
.b8 112
.b8 51
.b8 114
.b8 54
.b8 50
.b8 115
.b8 110
.b8 117
.b8 55
.b8 99
.b8 102
.b8 113
.b8 120
.b8 114
.b8 110
.b8 110
.b8 52
.b8 51
.b8 111
.b8 102
.b8 111
.b8 117
.b8 106
.b8 51
.b8 51
.b8 113
.b8 55
.b8 102
.b8 54
.b8 105
.b8 109
.b8 118
.b8 111
.b8 102
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 98
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x21 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x84:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x99:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
