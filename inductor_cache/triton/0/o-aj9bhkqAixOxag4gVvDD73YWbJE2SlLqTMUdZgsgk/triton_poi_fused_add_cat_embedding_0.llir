; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@assertFunc_0 = internal constant [8 x i8] c"unknown\00"
@assertFile_0 = internal constant [74 x i8] c"inductor_cache/lr/clrehunakbezebuxg5falrby73uevrsyzznuhl2wj3qyhfjkwp4p.py\00"
@assertMessage_0 = internal constant [36 x i8] c"index out of bounds: 0 <= tmp15 < 2\00"

; Function Attrs: noreturn
declare !dbg !7 void @__assertfail(ptr, ptr, i32, ptr, i64) local_unnamed_addr #0

define void @triton_poi_fused_add_cat_embedding_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !11 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !12
  %8 = shl i32 %7, 5, !dbg !13
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !14
  %10 = and i32 %9, 31, !dbg !14
  %11 = or disjoint i32 %8, %10, !dbg !15
  %12 = icmp slt i32 %11, 32, !dbg !16
  %.frozen = freeze i32 %11, !dbg !17
  %13 = sdiv i32 %.frozen, 4, !dbg !17
  %14 = srem i32 %13, 2, !dbg !18
  %15 = mul i32 %13, 4, !dbg !19
  %.decomposed = sub i32 %.frozen, %15, !dbg !19
  %16 = sdiv i32 %11, 8, !dbg !20
  %17 = sext i32 %14 to i64, !dbg !21
  %18 = getelementptr i64, ptr addrspace(1) %2, i64 %17, !dbg !21
  %19 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %18, i1 %12) #3, !dbg !22
  %20 = icmp slt i32 %14, 1, !dbg !23
  %21 = sext i32 %.decomposed to i64, !dbg !24
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !24
  %23 = and i1 %12, %20, !dbg !25
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %23, i32 0, i1 %23) #3, !dbg !26
  %25 = icmp sgt i32 %14, 0, !dbg !27
  %26 = shl nsw i32 %16, 2, !dbg !28
  %27 = add nsw i32 %26, %.decomposed, !dbg !29
  %28 = sext i32 %27 to i64, !dbg !30
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !30
  %30 = and i1 %12, %25, !dbg !31
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %30, i32 0, i1 %30) #3, !dbg !32
  %32 = lshr i64 %19, 62, !dbg !33
  %33 = and i64 %32, 2, !dbg !33
  %34 = add i64 %33, %19, !dbg !33
  %35 = icmp ugt i64 %34, 1, !dbg !34
  %.not1 = and i1 %12, %35, !dbg !35
  br i1 %.not1, label %36, label %37, !dbg !35

36:                                               ; preds = %6
  tail call void @__assertfail(ptr nonnull @assertMessage_0, ptr nonnull @assertFile_0, i32 44, ptr nonnull @assertFunc_0, i64 1), !dbg !35
  unreachable, !dbg !35

37:                                               ; preds = %6
  %.v = select i1 %20, i32 %24, i32 %31, !dbg !36
  %38 = bitcast i32 %.v to float, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %.idx = shl i64 %34, 4, !dbg !37
  %39 = getelementptr i8, ptr addrspace(1) %3, i64 %.idx, !dbg !37
  %40 = getelementptr float, ptr addrspace(1) %39, i64 %21, !dbg !37
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %12) #3, !dbg !38
  %42 = bitcast i32 %41 to float, !dbg !38
  %43 = fadd float %38, %42, !dbg !39
  %44 = sext i32 %11 to i64, !dbg !40
  %45 = getelementptr float, ptr addrspace(1) %4, i64 %44, !dbg !40
  %46 = bitcast float %43 to i32, !dbg !41
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %46, ptr addrspace(1) %45, i1 %12) #3, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { noreturn }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "clrehunakbezebuxg5falrby73uevrsyzznuhl2wj3qyhfjkwp4p.py", directory: "inductor_cache/lr")
!4 = !{ptr @triton_poi_fused_add_cat_embedding_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_cat_embedding_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = !DISubprogram(name: "__assertfail", linkageName: "__assertfail", scope: !8, file: !8, type: !9, spFlags: DISPFlagOptimized)
!8 = !DIFile(filename: "<unknown>", directory: "")
!9 = !DISubroutineType(cc: DW_CC_normal, types: !10)
!10 = !{}
!11 = distinct !DISubprogram(name: "triton_poi_fused_add_cat_embedding_0", linkageName: "triton_poi_fused_add_cat_embedding_0", scope: !3, file: !3, line: 19, type: !9, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!12 = !DILocation(line: 21, column: 28, scope: !11)
!13 = !DILocation(line: 21, column: 33, scope: !11)
!14 = !DILocation(line: 22, column: 36, scope: !11)
!15 = !DILocation(line: 22, column: 23, scope: !11)
!16 = !DILocation(line: 23, column: 21, scope: !11)
!17 = !DILocation(line: 24, column: 21, scope: !11)
!18 = !DILocation(line: 24, column: 26, scope: !11)
!19 = !DILocation(line: 25, column: 19, scope: !11)
!20 = !DILocation(line: 26, column: 19, scope: !11)
!21 = !DILocation(line: 28, column: 31, scope: !11)
!22 = !DILocation(line: 28, column: 36, scope: !11)
!23 = !DILocation(line: 33, column: 18, scope: !11)
!24 = !DILocation(line: 34, column: 30, scope: !11)
!25 = !DILocation(line: 34, column: 42, scope: !11)
!26 = !DILocation(line: 34, column: 35, scope: !11)
!27 = !DILocation(line: 35, column: 19, scope: !11)
!28 = !DILocation(line: 38, column: 37, scope: !11)
!29 = !DILocation(line: 38, column: 35, scope: !11)
!30 = !DILocation(line: 38, column: 30, scope: !11)
!31 = !DILocation(line: 38, column: 49, scope: !11)
!32 = !DILocation(line: 38, column: 42, scope: !11)
!33 = !DILocation(line: 43, column: 35, scope: !11)
!34 = !DILocation(line: 44, column: 38, scope: !11)
!35 = !DILocation(line: 44, column: 62, scope: !11)
!36 = !DILocation(line: 39, column: 33, scope: !11)
!37 = !DILocation(line: 45, column: 31, scope: !11)
!38 = !DILocation(line: 45, column: 46, scope: !11)
!39 = !DILocation(line: 46, column: 20, scope: !11)
!40 = !DILocation(line: 47, column: 25, scope: !11)
!41 = !DILocation(line: 47, column: 37, scope: !11)
!42 = !DILocation(line: 47, column: 4, scope: !11)
